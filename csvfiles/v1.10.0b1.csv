b9640613ddeaa5993916718ebec8c71d4001d489,"REL: Release 1.10.0b1
",setup.py
3caf12a1a979805a9cd56da15d99628fcb97364a,"Merge pull request #6193 from charris/backport-gh-6185

BLD: Distutils doesn't warn unless compiler_cxx is empty",numpy/distutils/ccompiler.py
749653cee534ba59b0a1203966371f309356b9a2,"BLD: Distutils doesn't warn unless compiler_cxx is empty

Warns on OS X with MacPorts Python because it doesn't recognize clang.
There isn't actually a problem, though, as distutils.sysconfig has done
its job just fine.  Proposed fix.
",numpy/distutils/ccompiler.py
1315ab71d6c52cc725cada45581eb71de2b1658e,"Merge pull request #6190 from charris/fix-non-constant-initializer

BUG: Fix a non-constant expression used as structure initializer.",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
cba0dfd870300b56e042d4fc2fa394d9c7a41cb1,"TST: Test that arrays are not hashable.

This adds a direct test to compliment the existing test that checks
if array is an instance of collections.Hashable.
",numpy/core/tests/test_multiarray.py
e422a097ed6ca28e9bf7deeb4024aee81d63a264,"BUG: Fix a non-constant expression used as structure initializer.

PyObject_HashNotImplemented was being used to initialize the tp_hash
slot in the PyArray_Type structure. In mingw32 (gcc version 3.4) that
results in a compile error. Fix by initializing to zero, then
setting to PyObject_HashNotImplemented when the module is loaded.

The function initialization seems to work with more recent compilers, as
the determination of what is considered 'non-constant' is left to the
vendor and has changed.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c
33d271bec13aba0ba430fc6e3c72e5026b28c665,"Merge pull request #6188 from charris/fix-busted-mingw-build

BLD: Option /GL does not exist for mingw32 compiler.",numpy/core/setup_common.py
27f51079608aa1d5666586b30a691339616d298e,"BLD: Option /GL does not exist for mingw32 compiler.

The option was removed on the win32 platform regardless of actual
compiler, leading to an error.
",numpy/core/setup_common.py
a0162670661ad717c66cabd161d136b9cc639dc1,"Merge pull request #6182 from charris/remove-cblas-header-check

BLD: Remove fallback CBLAS detection looking for cblas.h.",numpy/distutils/system_info.py
2566d30d67b73fe110b77b9c536fb3253bd1af0f,"BLD: Remove fallback CBLAS detection looking for cblas.h.

This raises DistutilsPlatformError when mingw32 is used as the default
ccompiler is msvc. That is fixable, but does not seem worth the trouble
as looking for a cblas.h file for a last effort to detect cblas seems a
bit fragile in any case. I think it is better handled elsewhere on a
case by case basis in combination with site.cfg.
",numpy/distutils/system_info.py
18233451f7ec28a3f54c4623ae6226f56e533ab6,"Merge pull request #6171 from cgohlke/patch-1

BLD: revert C99 complex for msvc14",numpy/core/src/npymath/npy_math_private.h
f15501bb3c16a09c23515d1e2085ca2d3ff8d21e,BLD: revert C99 complex for msvc14,numpy/core/src/npymath/npy_math_private.h
e639dbce76e0be912c0dfb41992959f8c49018a2,"Merge pull request #6168 from charris/backport-6164

DOC: Add Trove classifiers for supported Python versions

Backport of gh-6164 ",bento.info,setup.py
b268c2dd63f460a1a554dec6891879e2eec87193,"DOC: Add Trove classifiers for supported Python versions

Adds missing `Programming Language :: Python :: 3` to bento.info
Adds new `Programming Language :: Python :: {2..,3..,CPython..}` to both

These versions are correct for the 1.10.x and 1.11.x releases.
They reflect the commit b06dbc15d9db0e224d338c84ac98a925a7945d4c
",bento.info,setup.py
e968b3ae83cdc3a3fbaa69b094077829fbb489b8,"Merge pull request #6167 from charris/backport-6160

Backport #6160, TST: Fix running tests under Tox.",MANIFEST.in,numpy/_build_utils/README,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/setup.py,tox.ini
e95512274244197cec947ef4629475f28120780e,"DOC: Add warning about numpy._build_utils
",numpy/_build_utils/README
79db519302ddf2bc23dd5435f34f183d7eac5906,"BLD: Move numpy.build_utils -> numpy._build_utils, add to MANIFEST.in

This fixes the distutils built from an sdist (e.g. under tox),
without including _build_utils in binary distributions or the installed numpy.
",MANIFEST.in,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/{build_utils,numpy/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/setup.py
ab8ade78b005f85631fde8182fe4bd0690a2ca9f,"TST: Add Python 3.4 to Tox environments
",tox.ini
9a241bd9c66a002e876d25559272a47e50ba7ff3,"MAINT: List subpackages alphabetically in numpy.setup.configuration()

The intention is to make it easier to spot missing items
",numpy/setup.py
cab8bc6dae9d649be746cefe2fc2183d0db1b8e5,"BLD: fix tests under Tox, include numpy.build_utils in the distribution

The sub-package is already included in bento builds, it appears
to have been missed from distutils.

This fixes the following error whilst running any tests with tox

```
ImportError: No module named build_utils.apple_accelerate
```
",numpy/setup.py
3a47516bbc57ffd6b93985c43439d597c91aef15,"Merge pull request #6157 from charris/add-1.9.2-release-notes

DOC: synchronize 1.9.2 release notes with master",doc/release/1.9.2-notes.rst,doc/source/release.rst
fb800507293f3adf5858b38be65e236186bc33bd,"Merge pull request #6154 from charris/backport-gh-6152

Backport gh 6152",numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_config.h,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py,numpy/distutils/intelccompiler.py
31003cbe7ff6a2bcfac7bfc1003be402c68f87d8,"DOC: synchronize 1.9.2 release notes with master
",doc/release/1.9.2-notes.rst,doc/source/release.rst
e0402e0d88c357cf96d106c608a5600a093fe28e,"BLD: Move Intel POWL blacklist.

Update patch from Intel by moving POWL blacklist from npy_math_private.h
to npy_config.h blacklists.
",numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_config.h
53a2959168d2e1008fc162dace37b95b982f6177,"BLD: fix issue with POWL for Intel compilers on Windows.

Thanks to Intel (contact: Yolanda Chen) for this patch.

The Intel “powl” on Windows only supports 80 bits longdouble to keep
compatibility with Microsoft VC.

Microsoft VC only support 64 bits longdouble, from “C:\Program Files
(x86)\Microsoft Visual Studio 11.0\VC\include\math.h”, powl is redefined as:

    #define powl(x,y)       ((long double)pow((double)(x), (double)(y)))

However in npy_math.c (generated from npy_math.c.src), this definition is
undefined even though HAVE_POWL is set for the Intel C compilers.

At line 384 of npy_math.c.src, we have::

    #ifdef @kind@@c@
    #undef @kind@@c@
    #endif
    #ifndef HAVE_@KIND@@C@
    @type@ npy_@kind@@c@(@type@ x, @type@ y)
    {
        return (@type@) npy_@kind@((double)x, (double) y);
    }
    #endif

The expanded function generated in “npy_math.c” will look like::

    #ifdef powl
    #undef powl
    #endif
    #ifndef HAVE_POWL
    npy_longdouble npy_powl(npy_longdouble x, npy_longdouble y)
    {
        return (npy_longdouble) npy_pow((double)x, (double) y);
    }
    #endif
",numpy/core/src/npymath/npy_math_private.h
ab6723a982c13b669514e60fe181f6b01dc171fe,"BLD: Intel compilers: xiar/xilib for Linux and Windows to support IPO.
",numpy/distutils/intelccompiler.py
694e374e912077c14eeede6ce163c90a5b61f0cf,"BLD: some fixes for Intel compilers.

- Fix an incorrect import
- Enable C99 complex support (Qstd=c99)
- Don't use MSVC complex types for Intel compilers

Thanks to Intel for this patch (contact: Yolanda Chen).
",numpy/core/src/npymath/npy_math_private.h,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py,numpy/distutils/intelccompiler.py
ccb06f50466e0b3b78c0c2e38bc470c3998e4091,"Merge pull request #6150 from charris/update-howto-release

Update howto release",doc/HOWTO_RELEASE.rst.txt
56f18e6d658c417004c1404b9e3788688f85ac4e,"Merge pull request #6148 from charris/backport-gh-6147

BLD: llabs not available with msvc9",numpy/core/src/umath/simd.inc.src
c9cd742b10545473723d15edeb9c31d9f9dc80c4,"Merge pull request #6146 from charris/disable-numpy-ufunc-for-1.10

MAINT: Temporarily disable __numpy_ufunc__ for 1.10",numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py
faf49a22e9dcf8cf56e4ecbe8ae72686c60f1a18,BLD: llabs not available with msvc9,numpy/core/src/umath/simd.inc.src
51a0ab59755e8de14afb8f61020a927539ef3038,"MAINT: Temporarily disable __numpy_ufunc__ for 1.10

Following discussion in gh-5844, we regretfully decided that we have to
disable __numpy_ufunc__ again for 1.10. This patch should be reverted
on master after 1.10 is branched.
",numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py
a39d355d4c286e823e9c48efb9345ad3705fdbad,"Merge pull request #6142 from charris/update-mailmap

MAINT: Update names in .mailmap for the 1.10 release.",.mailmap
ddd66c2b23af8f6d16e0ec1535da1fb276d3e51f,"MAINT: Update names in .mailmap for the 1.10 release.

[ci skip]
",.mailmap
dfdfdc5b1e91f67a63c2dc1ff84211b4cce6d97f,"Merge pull request #6144 from endolith/patch-1

DOC: fix typo",doc/release/1.10.0-notes.rst
1ac821f6b20aef494ab05cd6da6ea92715f14a00,"DOC: fix typo

allclose instead of allcose",doc/release/1.10.0-notes.rst
3ee2cb320f24250c80d97761b4e4e62bc407e719,"Merge pull request #6141 from cgohlke/patch-1

Enable Visual Studio 2015 C99 features",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_config.h
e27035fbba70e4ec719ec86962babf957d0dad64,BLD: fix build failure,numpy/core/src/npymath/npy_math_private.h
15fc8f1bc7dc68d3fd2811b6a781f9a40290f275,BLD: disable broken msvc14 trigonometric functions,numpy/core/src/private/npy_config.h
b5a91f25c0a66f92883ee554f725e40dabdf3419,BLD: enable C99 isnan and isinf for msvc14,numpy/core/include/numpy/npy_math.h
2c99f44925b77e7d8934b4754455b42d47065340,BLD: enable C99 complex for msvc14,numpy/core/src/npymath/npy_math_private.h
b03c303c051dcbad3dc485ef4b2fd604dafaa4e6,"Merge pull request #6140 from cgohlke/patch-4

BLD: try_run fails on Python 3.5b4 for Windows",numpy/random/setup.py
211d0426b0f945d4098d4002e62898997badaeec,BLD: try_run fails on Python 3.5b4 for Windows,numpy/random/setup.py
ab1ea1f094367070b475c5bfc5c0dfc9284eb1d1,"Merge pull request #6139 from cgohlke/patch-3

TST: on Windows run f2py from the Scripts directory",numpy/tests/test_scripts.py
c33d59db5d8ba1449a7abde6883179619acef0ab,"Merge pull request #6138 from cgohlke/patch-2

Fix test_system_info errors and failures on Windows",numpy/distutils/tests/test_system_info.py
dd220014373f7c0bf0862b5a4548e257858be945,TST: on Windows run f2py from the Scripts directory,numpy/tests/test_scripts.py
27d6c3c8e7c19e10796022b11035ef02ec374dcc,TST: use os.pathsep to separate library directories,numpy/distutils/tests/test_system_info.py
093bf44f8d4b7550e9f6880e9d7882ed153c6d5a,TST: skip gcc specific test when using msvc,numpy/distutils/tests/test_system_info.py
4ec0b91a6308b29979935bec1e6ee30417af9eb2,"Merge pull request #6137 from cgohlke/patch-1

TST: fix OverflowError on win-amd64",numpy/random/tests/test_regression.py
3fd21ede4c49dbdeccf8f31b95daf7bd993dec5f,"TST: alternatively assert existence of msvc .obj files

Fixes test_system_info.TestSystemInfoReading.test_compile1 failure on Windows",numpy/distutils/tests/test_system_info.py
58d41159f4c070fd9e43048d15ce176f2a619871,TST: fix OverflowError on win-amd64,numpy/random/tests/test_regression.py
28f74f13d855080887f021dbb820e237ca46295c,"Merge pull request #6091 from novocaine/master

Don't pass un-encodable env to spawn",numpy/distutils/exec_command.py
3fc27e873c9164bc6772d913a78ffe33a5c1665b,"Merge pull request #6092 from ahaldane/raise_warnings_fix

MAINT: fix raise_warnings in np.test in py3",numpy/testing/nosetester.py
c03abd7833b229039a7cd8268b3091deb457a528,"Merge pull request #6131 from argriffing/choice-precision

MAINT: adjust tolerance for validating the sum of probs in random.choice",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
038a309d559c265fb04d03d1b3142ca735f42f2d,"Merge pull request #6117 from charris/fix-star-imports-f2py

Fix star imports f2py",numpy/f2py/__init__.py,numpy/f2py/__main__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_regression.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py
b3476a75e2d4122c70019c8b58335da6cabc19d1,"Merge pull request #6135 from ChanderG/fix-link

MAINT: DOC: fix link in CONTRIBUTING.md",CONTRIBUTING.md
4746036f60d58ddcb4341f1f47667e472d268db3,"MAINT: DOC: fix link in CONTRIBUTING.md
",CONTRIBUTING.md
b6d0263239926e8b14ebc26a0d7b9469fa7866d4,"MAINT: adjust tolerance for validating the sum of probs in random.choice
",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
d676616cb5ddde980734e2b60569a69912983940,"STY: Break some long lines in numpy/f2py/*.py.

The fixes are generated by autopep8, which uses line continuation.
There are 441 cases that it is unable to handle, involving strings, and
that is more, and more delicate, work than I want to do at this time.
The line continuation characters at least mark some of the long lines.
",numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py
a92c4a108bd9b2b14f306534ad3105ed76485572,"Merge pull request #6126 from astrofrog/fix-histogram-regression

BUG: fixed regression in np.histogram which caused input floating-point values to be modified",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
ede15881846af7aa6058c89359b9f9190201bfb5,"MAINT: fix raise_warnings in np.test in py3

In python3 np.test would raise an error if raise_warnings is a list
since dict.keys() now returns a dict_keys instance. Eg,

    np.test('full', raise_warnings=[FutureWarning])
",numpy/testing/nosetester.py
c49821c55b45574cd7d5300ddd4a83f12fcaa7e0,BUG: fixed regression in np.histogram which caused input floating-point values to be modified,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
9232200cb99323730d5ad23c79a846649b55a345,"Merge pull request #6118 from rgommers/brokenlink

MAINT: fix broken and outdated link in HOWTO_DOCUMENT.  Closes gh-6107.",doc/HOWTO_DOCUMENT.rst.txt
31f4f7903f9dea792dfe6ba213e00ad556a0285e,"Merge pull request #6055 from seberg/test-warn-always

TST: Make default for all warnings ""always""",numpy/testing/nosetester.py
9d26d689f07a988dcb55b9b5e0ce6a0c7af71f91,"Merge pull request #6052 from insertinterestingnamehere/lib_fix

BUG: Fix handling of dependencies between libraries",numpy/distutils/command/build_clib.py
3b4b3ed3b50370c32a6b20d211dcca9e08442b42,"Merge pull request #6111 from charris/fix-getargspec

MAINT: Use numpy versions of getargspec, formatargspec.",numpy/lib/utils.py
de81da90cecee7ceaf01ffd2283983500a1fb4fb,"MAINT: fix broken and outdated link in HOWTO_DOCUMENT.  Closes gh-6107.

[ci skip]
",doc/HOWTO_DOCUMENT.rst.txt
0fa1a9fa0a54fce6e741333308bdafa83c0663b2,"STY: PEP8 fixes in numpy/f2py/tests.
",numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_regression.py,numpy/f2py/tests/util.py
a0121573e6685f09e5f613280d616070b8ff99cb,"STY: Make PEP8 fixes in numpy/f2py

Decided to bite the bullet on this one. The code is certainly more
readable, so should be easier to fix if we need to.
",numpy/f2py/__init__.py,numpy/f2py/__main__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/use_rules.py
b80d1f979efb528e855263a38b389cebd3eb90e1,"STY: Make pyflakes fixes in numpy/f2py
",numpy/f2py/__init__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/use_rules.py
e81b9eee676102fbd1c1c2916764e6ce71bac793,"Merge pull request #6115 from charris/pyflakes-fix-star-imports

Pyflakes fix star imports and other style violations.",numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/tests/test_system_info.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_stride_tricks.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_regression.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py
0d9dae2e89406e63679bc6a2bd65d50150a24a54,"STY: PEP8 and pyflakes fixes for numpy/tests.
",numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py
fd79f6900717ff312497d71c64817226f494cb19,"STY: PEP8 and pyflakes fixes for numpy/lib/tests
",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_stride_tricks.py
64a8e2ad3152d15ab07ecd8e36852903a6e0a13d,"STY: PEP8 and pyflakes fixes for numpy/linalg/tests.
",numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py
0aef5ece227cbbd2247cf57ba402b8a53c504216,"STY: PEP8 and pyflakes fixes for numpy/matrixlib/tests.
",numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_regression.py
1e99323786809fd2fa0a34818214beb34186799d,"STY: PEP8 and pyflakes fixes for numpy/distutils.
",numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/tests/test_system_info.py
ac193fac0ae1efa6c5c1fc2705615ee60d868774,"STY: PEP8 and pyflakes fixes for numpy/f2py/tests.
",numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py
5eeb3c45fe407137771105ff863a46d623e7af84,"Merge pull request #6046 from charris/pep8-and-pyflakes-cleanups

PEP8 and pyflakes fixups for numpy/ma/*.py and numpy/ma/tests/*.py

Merge cleanups prior to 1.10 release.",doc/release/1.10.0-notes.rst,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py
9918d35e1ac09e2d5b3548db22f4caff93fe5ac2,"Merge pull request #6047 from charris/pep8-pyflakes-numpy.core.tests

PEP8 and pyflakes  fixups for numpy/core/tests/*.py",numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarinherit.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py
730adaa7054e15caae311310ce0aee45a72d8cda,"MAINT: Merge the np.dot tests in test_multiarray and test_numeric.

The dot tests in test_numeric have not done anything useful since the
_dotblas module was merged into multiarray. There used to be two
potentially different dot functions, one from _dotblas and the other
from multiarray, that the tests compared against each other. Because
both functions are now the same that no longer serves any purpose, so
those tests have been modified to check against known results and moved
into test_multiarray with the other dot tests.

The dot tests could use improvement. They don't check all the types,
exceptions, and such. But fixing them exceeds the scope of the present
work.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py
fac130ebaa185f999794fe0fdab401d73fcb2382,"STY: pyflakes fixes for numpy/core/tests/*.py.

Many of these fixups are result from removing `from x import *`
imports. The rest are mostly unused variable fixes.
",numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py
33934d5751bb5acbd14da6a2dec9e3eeaaddb40f,"MAINT: Remove redundant tests from test_multiarray.py.

There were two classes named TestArrayPriority in test_multiarray.py,
both of which tested the use of the __array_priority__ attribute.
Because the later addition tests more functions than the earlier one and
for more dtypes, the earlier version is removed.
",numpy/core/tests/test_multiarray.py
4ca2880a5d609e354436e519b7f6dd0928ed9079,"STY: PEP8 fixes for numpy/core/tests/*.py

The fixes do not include the pretty formatting of array data. Lond
lines are also left intact at this point.
",numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarinherit.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py
acd85d569c81e12b0b2ee37e40997cbabbd5ebc6,"MAINT: Continue to export some testing functions from ma.testutils.

This is for backward compatibility. We may want to add more testing
functions if other folks run into problems in the 1.10 release.
",doc/release/1.10.0-notes.rst,numpy/ma/testutils.py
b733a10a9cc806f4772728015ec1bd9e63322858,"STY,MAINT: Run pyflakes and pep8 on numpy/ma/tests/*.

Also fix ""*"" imports.

The formatting of test arrays is not fixed for multiple spaces following
"","" and other violations that are common in tests. To be precise, E241
and E201 are added to the errors that are excluded.
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py
c3f04c791e814c963e955da4083aa53b1e107004,"Merge pull request #6112 from charris/fix-void-pointer-in-memset

BUG: Fix misuse of void* in arraytypes.c.src.",numpy/core/src/multiarray/arraytypes.c.src
93908e431772649f2b6f63183f726a261c294fb5,"Merge pull request #6113 from charris/disable-nightly-python-tests

MAINT: Use Python 3.5-dev instead of nightly.",.travis.yml
5bc74aae6f218ad6f0cba5e7ca5250028febb50c,"MAINT: Use Python 3.5-dev instead of nightly.

Python 3.6-dev has broken the nose tester. Use an earlier version
until that gets fixed upstream.
",.travis.yml
177874fc81fa8cea88bacf10f13d4766876583de,"BUG: Fix misuse of void* in arraytypes.c.src.

A char offset was being added to a void* in the UNICODE_setitem
function.

Closes #6110, which also had the fix. Thanks @seek.
",numpy/core/src/multiarray/arraytypes.c.src
6a548b8d3effcb2754414444159f1757b2715d6d,"MAINT: Use numpy versions of getargspec, formatargspec.

Both of these functions will be removed in Python 3.6 and were deprecated
in 3.5. The numpy versions are not full versions, but hopefully suffice.
",numpy/lib/utils.py
f09380a7f08852fbf1dcfa4efdab47eed28d8f03,"Merge pull request #6077 from ndjensen/master

ENH skip NPY_ALLOW_C_API for UFUNC_ERR_PRINT",numpy/core/src/umath/ufunc_object.c
eb7104e42b98a310fb657dc980e582baa951a9f6,"Merge pull request #6100 from astrofrog/faster-histogram-equal-bins

ENH: Faster algorithm for computing histograms with equal-size bins",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
34b582aadae8272e7b7209f7a05594e9258ba217,"ENH: Faster algorithm for computing histograms with equal-size bins
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
50f1fce49d79444c29d63cd632bbb87ceec39f07,"ENH skip NPY_ALLOW_C_API for UFUNC_ERR_PRINT

GIL unnecessary when numpy floating point error handling is set to print
potential micro-optimization when error handling is set to print
alleviates (but does not fix) #5856 deadlock with sub-interpreters
addressed comments and initial test failed

Change-Id: I0414df8c5dca131e1f8c8d867791ba63cf992b63
",numpy/core/src/umath/ufunc_object.c
808e4c214941104e188897f58fd2ec1ac510d2cb,"Merge pull request #6101 from jaimefrio/bincount_overflow

BUG: bincount overflow if arrays len >= 2^31",numpy/core/src/multiarray/compiled_base.c
86ffb953d00e4e2af58b74a8df942ac786d8d640,"BUG: bincount overflow if arrays len >= 2^31
",numpy/core/src/multiarray/compiled_base.c
daf0497d2360d675219ece02ca767d6dfa92401b,"Merge pull request #6098 from ahaldane/commastring_bool

MAINT: allow '?' in structured dtype commastring specification",numpy/core/_internal.py,numpy/core/tests/test_dtype.py
b68a522e9e3a7d04edf79ffa24c6637dcaaf8786,"MAINT: allow '?' in structured dtype commastring specification

Code like `dtype('?,?,?')` now works.
",numpy/core/_internal.py,numpy/core/tests/test_dtype.py
00f4faeb611b1dca4be09a9d99fc0305ec38463a,"Merge pull request #6096 from novocaine/vs_2015_no_wpo

remove /GL for vs2015 in check_long_double_representation",numpy/core/setup_common.py
f96bb4198410add08fb12b4b90424665349b3f15,"remove /GL for vs2015 in check_long_double_representation
",numpy/core/setup_common.py
cc7e908ab1909aa7911601ed2a245111b0801d79,"Merge pull request #6093 from ahaldane/PyArray_View_decref

MAINT: missing decref in PyArray_View",numpy/core/src/multiarray/convert.c
f7e6de4de3214ef649a4cdb19c59364246cc310b,"MAINT: missing decref in PyArray_View
",numpy/core/src/multiarray/convert.c
dc030e6c9e718de75579475887e757ec1b434d26,"restrict to windows py3 and add comment
",numpy/distutils/exec_command.py
6ea6049b762eb74135ac3069efa39dc46cfc2577,"don't pass un-encodable env to spawn
",numpy/distutils/exec_command.py
a419ebb9a19be74c7ec7887eff81cf7ea0636e16,"Merge pull request #6090 from dimasad/issue-6089-fix

BUG: Fix tiling of zero-sized arrays numpy/numpy#6089",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
98f186f4ea336138c31c471d18dccc6d9663ced7,"BUG: Fix tiling of zero-sized arrays numpy/numpy#6089 and add test case.
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
85188530bffae563eb274b9c12b77981cfa4e1d2,"Merge pull request #6088 from juliantaylor/parallel-build-adapt

MAINT: adapt parallel build option names to python3.5",doc/release/1.10.0-notes.rst,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/misc_util.py
7b0b5d1219f8869857db778032dc417aea89eb9f,"MAINT: adapt parallel build option names to python3.5

python3.5 uses --parallel instead of --jobs
",doc/release/1.10.0-notes.rst,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/misc_util.py
a8e9a05b52c5b13c1a5a6709e1e2bf7522cd1654,"BUG: Allow libraries to be used as dependencies for other libraries when
compiling with numpy.distutils. For example, something like this will now
work as a configuration function:

def configuration():
    config = Configuration()
    config.add_library('mylib1', sources=['mylib1.f'])
    config.add_library('mylib2', sources=['mylib2.f'], libraries=['mylib1'])
    config.add_extension('pymodule', sources=['pymodule.c'],
                         libraries=['mylib2'])
    return config

Arbitrary handling of dependencies between libraries is still not
supported, but this should make some basic cases work properly.
",numpy/distutils/command/build_clib.py
49617ac803dfe6f9542410045854203018602b18,"Merge pull request #6072 from insertinterestingnamehere/win_compile_fix

BUG: Windows build error fix",numpy/testing/utils.py
cd9a6a2ddfb0653601865794f3539210b94955ce,"BUG: Fixed import error on Windows from not correctly defining a
function listed in __all__ for numpy/testing/utils.py.
",numpy/testing/utils.py
ddc53885e1b66b6e4e7d299d2c808ddc472913b9,"Merge pull request #6049 from charris/pep8-numpy-testing

PEP8 and pyflakes fixups for numpy/testing and numpy/testing/tests",numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
57e6b4b1de8c50641119b3f11ba62e660eece95a,"Merge pull request #6065 from gthomsen/warned-cast-missing-gil

BUG: Fixed downcasting with boolean indexing.",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
bf0c2d169de75bb2d9349e4f95ad322c20ed63bc,"Merge pull request #6064 from githubmlai/funatscipy

BUG: made view of new array to fix ix_ bug",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
2be00c3fe6f6d84d4449b1cb26452642b48c0661,"BUG: made view of new array to fix ix_ bug

closes gh-6062

done with help of Sebastian Berg! =)
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
be59b83bd906817e2beee2910f745bdc65a7f347,"BUG: Fixed downcasting with boolean indexing.

Fixed downcasting complex types to a real type using boolean indices which
previously caused a segfault.  Acquiring the appropriate dtype transfer
function raises a warning that requires holding the GIL, which had been
released in a previous revision.  Now the GIL is held while the transfer
function is acquired.

This fixes issue #5896.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
0c97cdeb1b29776f927fea4830c802e0339ac8dd,"Merge pull request #6057 from bertrand-l/linspace_nonnegative_num

EHN: raise error for negative 'num' in linspace.",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
461c997075723cc8812692458d7b2ea9c839336e,"Merge pull request #6058 from lightcatcher/patch-1

MAINT: fix typo in site.cfg.example",site.cfg.example
7fbbaf98e4935e9cb7274764de813f7dffb04c89,"Fix typo in site.cfg.example

""earch path"" => ""search path""",site.cfg.example
43d4aa5de8a991fa40c9976280cef5b4b080a806,"EHN: raise error for negative 'num' in linspace.
Closing #5937
",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
e9a75342099995b07c4d326fb6c0f47ce3edb002,"Merge pull request #6031 from pitrou/argmin_nat

BUG: fix argmin() with NaTs",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_multiarray.py
64430fa20a7c6c97f906efded23c8c6e057c98e7,"TST: Make default for all warnings ""always""

This should make it easier in some cases, since a warning
caught in some test (but not important/not causing failure),
will not shadow later tests.
In principle the best thing is probably to always check the number
of warnings raised, so that you notice when a new warning shows
up in a test, though there may be other corner cases here.
",numpy/testing/nosetester.py
b1a7d4c1d0e18913081ba2c1f8508da57582727e,"Merge pull request #6048 from charris/pep8-pyflakes-numpy.core

PEP8 and pyflakes fixups for numpy.core",numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/defchararray.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py
7fa8ab6ac29c1dccf34dae5c53211ace67620ed7,"MAINT: Fix some pyflakes warnings in numpy/core/*.py

These fixes are not agressive as some of the code is complicated
and it is better to be careful.

The files numeric.py and numerictypes.py are not easily analysed
and the latter is self modifying. Pyflakes generates a number of
invalid warnings for those files.
",numpy/core/_internal.py,numpy/core/defchararray.py,numpy/core/function_base.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py
8b3e9ae5262c1da1118370cd6e83db9b2166952e,"STY: PEP8 fixes for numpy/core/*.py
",numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/defchararray.py,numpy/core/getlimits.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py
ad40c230c4da2ca336bed6b093e8efaba590eec3,"MAINT: pyflakes for numpy/testing, numpy/testing/tests.
",numpy/testing/decorators.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
c80c609950fe5aeecf3082d397c7b5149a834fca,"STY: PEP8 fixes for numpy/testing numpy/testing/tests.
",numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
e79d6e306c675eee852a8ebaa26a137d4296841a,"BUG: Fix imports in test_io.py and test_recfunctions.py.

Those test functions were incorrectly importing test functions
from numpy/ma/testutils that were actually not defined there, but
rather in numpy/testing. That did not cause an error when testutils
was '*' importing all the test functions, but it was deceptive as
some of the functions might appear to support masked arrays when
they do not.
",numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py
9bc2d3214a454e5341b27bf4a22bc8a241b86a83,"DEP,ENH: Deprecate numpy.ma.rank and add numpy.ma.ndim.

The np.rank was deprecated in 1.9.0.
Add test for deprecation.
",numpy/ma/core.py
7c8c9adda27efe7f84fc98240ee1b7fa15714f06,"STY,MAINT: PEP8 and pyflakes fixes for numpy/ma/*.py

Also

* Add __all__ to numpy/ma/testutils.py
* Remove various stray ""#""

We might want to consider removing/refactoring both numpy/ma/bench.py
and numpy/ma/timer_comparison.
",numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py
c2ae6aa0103aecdb5e2a71504583451cada1bfbc,"Merge pull request #6036 from juliantaylor/compiler-warnings

remove compiler warnings and let travis test for failures",numpy/core/code_generators/generate_ufunc_api.py,numpy/core/src/multiarray/compiled_base.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/umath/scalarmath.c.src,numpy/core/src/umath/test_rational.c.src,numpy/linalg/lapack_litemodule.c,tools/travis-test.sh
bb4682a091e9652bfd886a686b3fa85a9636028d,"TST: fail tests on compiler warnings
",tools/travis-test.sh
c15f7747c78e3e8b492ac4b1ef298b51bbae428f,"MAINT: remove a bunch of compiler warnings

there is a memset warning remaining when built with -flto, though its
not clear where exactly it comes from.
",numpy/core/code_generators/generate_ufunc_api.py,numpy/core/src/multiarray/compiled_base.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/umath/scalarmath.c.src,numpy/core/src/umath/test_rational.c.src,numpy/linalg/lapack_litemodule.c
7a3926c45f99284c83eeefb4e87030139b3d689b,"Merge pull request #6035 from charris/documentation-maintenance

Documentation fixes.",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/index.rst,doc/source/reference/internals.code-explanations.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/add_newdocs.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/distutils/exec_command.py,numpy/doc/glossary.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/linalg/linalg.py,numpy/ma/extras.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/random/mtrand/mtrand.pyx
f5e9adbbf87903e42d03bb3dd5f86b70a89e930c,"DOC: Fix docstring warnings in documetation generation.

Most of these fixes involve putting blank lines around

.. versionadded:: x.x.x

and

.. deprecated:: x.x.x

Some of the examples were also fixed.
",numpy/add_newdocs.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/distutils/exec_command.py,numpy/doc/glossary.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/linalg/linalg.py,numpy/ma/extras.py,numpy/random/mtrand/mtrand.pyx
f940a9e434e2ba39328361336711502895a42194,"DOC: Fix bad rst list formats in internals.code-explanations.rst.

The lists needed blank lines before starting.
",doc/source/reference/internals.code-explanations.rst
dd5fd83164e74523b44b0e8bfbc9054ee19a8db5,"DOC: Remove reference to routines.ctypeslib.rst from index.rst.

The proper reference is in routines.rst.
",doc/source/reference/index.rst
a70842c58b11b4c3e56425d67e075a418db361f4,"DOC: Remove a reference to __array_priority__.

Also correct its documented default value.
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst
276a4e1c27f17cca30ae0c0775fe03bd4b46af35,"DOC: Fix list markup in source/reference/arrays.ndarray.rst.

List needs to be preceded by blank line.
",doc/source/reference/arrays.ndarray.rst
1393a575c58f1ba86b1684ba9677ad134d057a93,"DOC: Remove references to removed setasflat ndarray method.
",doc/source/reference/arrays.ndarray.rst,numpy/add_newdocs.py,numpy/matrixlib/tests/test_defmatrix.py
430a3796e11dd11bdc3db7838ff1bcf159105978,"DOC: Add reference to new stack function in numpy/lib/info.py.
",numpy/lib/info.py
6646bdfeac189c50b19b032ea8b6795ea7fd2074,"DOC: Fix outdated sphinx directives.

Examples

:cdata: -> :c:data:
.. cfunction:: -> .. c:function::
",doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/internals.code-explanations.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.ufunc-tutorial.rst
61d2a445881f80b52bc9facdbd4f58f6e74c637b,"Merge pull request #6033 from pitrou/td64_array_repr

ENH: improve string representation of NaTs in timedelta64 arrays",numpy/core/arrayprint.py,numpy/core/tests/test_datetime.py
50b12ecc36aeea16e640b81e73cf32848ded6c91,"Update release notes
",doc/release/1.10.0-notes.rst
9748970b52fcd10b4498e01baa74d2d760fdd220,"Add tests for leading NaT values, and fix np.min() bug
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_multiarray.py
7aa4f494e3dbd183d08d5130b52c0c62fa2af675,"ENH: improve string representation of NaTs in timedelta64 arrays

Rather than representing them as ""-9223372036854775808"",
we now represent them as ""'NaT'"", as in datetime64 arrays.
Note this changes the numpy.core.arrayprint printer, not the builtin
printer.
",numpy/core/arrayprint.py,numpy/core/tests/test_datetime.py
84c055591dcf951c805bbfee2ca568884810372b,"BUG: fix argmin() with NaTs

np.min() skips NaT values, but np.argmin() wouldn't: since the internal
representation of NaT is smaller than every other datetime64 or
timedelta64 value, np.argmin() would return results inconsistent with np.min().

Closes #6030.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
23e10e18f7951fe040c91134da894f6efdffebe6,"Merge pull request #6000 from njsmith/inplace-matmul-error

BUG: Make a @= b error out",numpy/core/src/multiarray/number.c,numpy/core/tests/test_multiarray.py
1adcdf7aa5b20a9afd778290105ec327b705c93e,"BUG: Make a @= b error out

Before this change, we defined a nb_matrix_multiply slot but not a
nb_inplace_matrix_multiply slot, which means that a statement like

  a @= b

would be silently expanded by the CPython interpreter to become

  a = a @ b

This is undesireable, because it produces unexpected memory
allocations, breaks view relationships, and so forth.

This commit adds a nb_inplace_matrix_multiply slot which simply errors
out, and suggests that users write 'a = a @ b' explicitly if that's
what they want.
",numpy/core/src/multiarray/number.c,numpy/core/tests/test_multiarray.py
38d6f099bf97f46024346112f94881575bb420f0,"Merge pull request #5955 from jaimefrio/faster_revert

MANT: Cleanup of _pyarray_revert",numpy/core/src/multiarray/multiarraymodule.c
16cdeff7520819322209f89003dcc282903ca34e,"Merge pull request #5865 from jaimefrio/where_writeable

BUG: np.nonzero behaving differently for 1-D arrays",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_regression.py
56678fe56dce97871bb49febf0b2c0206541eada,"Merge pull request #5953 from yarikoptic/bf/guard-getmembers

BF: do not crash lookfor if inspection fails - catch any Exception",numpy/lib/utils.py
567a44d276e74d0a570be8fa6bb8a7b4345a7de3,"Merge pull request #5971 from larsmans/c-fixes

MAINT: core: less function pointer casting in arraytypes.c.src",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/multiarraymodule.c
c8759f107bb8ab47c515800845caa63701ba6c98,"Merge pull request #6015 from njsmith/travis-nightly

MAINT: add 'nightly' (= 3.5ish) to travis build matrix",.travis.yml
bf5bb1a49c47c62a9f67275a29c7cdc78a78679c,"Merge pull request #6018 from njsmith/filter-nose-3.5-warnings

MAINT: filter out some warnings triggered by nose 1.3.7 + python 3.5b2",numpy/testing/nosetester.py
e8c412453fa6c95a488e0ddfdb298be520b782d2,"MAINT: filter out some warnings triggered by nose 1.3.7 + python 3.5b2

Filed upstream as:
    https://github.com/nose-devs/nose/issues/929
Not our problem.
",numpy/testing/nosetester.py
21962fc4c68311e78e6420e3d2e80d9cd98409d7,"Merge pull request #6016 from njsmith/remove-gzip-monkeypatch

MAINT: remove legacy monkeypatching of GzipFile",numpy/lib/npyio.py
086f51ebaa70e98dbca26e90f8d28a4ea57d655f,"Merge pull request #6017 from njsmith/raise-stopiteration-deprecated

MAINT: remove use of 'raise StopIteration' from generators",numpy/lib/arrayterator.py
e552922fe6c8854541337a10970ff1b62caffc70,"MAINT: remove use of 'raise StopIteration' from generators

This triggers a PendingDeprecationWarning in py3.5 -- you're supposed
to just write ""return"" instead (which on earlier versions is
equivalent). See PEP 479: https://www.python.org/dev/peps/pep-0479/
",numpy/lib/arrayterator.py
7d6aa8c721d5274ac57d0c87685d472cb1fd7948,"MAINT: remove legacy monkeypatching of GzipFile

I'm not sure exactly when GzipFile.seek started supporting the whence=
argument by default -- sometime around python 2.5 from the looks of
http://bugs.python.org/issue1355023. But in any case it was definitely
there by 2.6, which is now the earliest version we support, so there's
no longer any need to monkeypatch it in. This also fixes an error in
python 3.5b2, which I haven't bothered to track down further because
these are the wages of monkeypatching.
",numpy/lib/npyio.py
ea0744b6fa18b27de2986a2240d1d2fd33085b85,"MAINT: add 'nightly' (= 3.5ish) to travis build matrix
",.travis.yml
75190503dd569e58029cdac81e6451907181c130,"Merge pull request #6013 from Linkid/doc/syntax0

DOC, MAINT: fix typo in np.fill_diagonal docstring example",numpy/lib/index_tricks.py
34449614e34065e4599787095b90928dc22afb14,"DOC, MAINT: fix typo in np.fill_diagonal docstring example
",numpy/lib/index_tricks.py
3d2b8ca9bcbdbc9e835cb3f8d56c2d93a67b00aa,"Auto merge of #6009 - juliantaylor:pedantic, r=njsmith

MAINT: fix two Wpedantic warnings in public header

Wpedantic is to strict to be really useful generally, but our public headers at least should avoid easy to avoid warnings for projects that do use this flag.
",numpy/core/include/numpy/ndarraytypes.h
592e404b7406c0d3c9db568f737e9c96b3736f3a,"MAINT: fix two Wpedantic warnings in public header
",numpy/core/include/numpy/ndarraytypes.h
e4ab83050f3f64554726b9c5fd794e5535ab77ff,"Merge pull request #5753 from empeeu/percentile-nan

BUG: Added proper handling of median and percentile when nan's are prese...",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f5d3d96b3b48ba8b8d15a09334491f3f19804693,"Updating unit tests for removed warning.
",numpy/lib/tests/test_function_base.py
320667d42b1d56f12d911dfcee05fc264d9d6edb,"Merge pull request #5982 from embray/fix-chararray-slice

BUG: Fixed slicing of chararrays on Python 3.",numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
3e82d6db99bc9e32a6f6bcb63cbfccbaa1168a74,"Moving warning outside of for loop.
",numpy/lib/function_base.py
a320fd772468004a53f7c448ae47032eb1b5c5df,"BUG: Added proper handling of median and percentile when nan's are present in array to close issue #586.
Also added unit tests.
",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
7576ae2fde08452e3bc1e45a254856773b2012fc,"DOC: Revise doc/HOWTO_RELEASE.rst.txt a bit to read better.

[ci skip]
",doc/HOWTO_RELEASE.rst.txt
949df02d9477bd368837cc667bce3a8c23eb8413,"DOC: Document bogus stride fix for release.

Add explanation and patch link to doc/HOWTO_RELEASE.rst.txt.

[ci skip]
",doc/HOWTO_RELEASE.rst.txt
eef0e0ead3107d45c940480a40f66b7077f190bb,"BUG: Fixed slicing of chararrays on Python 3.

When taking a slice of a chararray it was calling the rstrip() method
on the resulting slice, resulting in a new array rather than a view
of the original.  This was an unintended consequence of the sq_slice
member of the tp_as_sequence mapping being ignored in Python 3, so
that slice lookups go directly through __getitem__.

Fix test_expandtabs to not make the assumption that rstrip() will be applied twice to a value when using T[x][y] style indexing.
",numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
81c2c16f3218c879f5bfeacd80f237336e56584d,"Merge pull request #5998 from charris/update-version-hash

MAINT: Update version info for Numpy 1.10.",doc/HOWTO_RELEASE.rst.txt,numpy/core/code_generators/cversions.txt,numpy/core/include/numpy/numpyconfig.h,numpy/core/setup_common.py
10c9091ad8ca3b44e4fb03656e14091a3d9cf763,"Merge pull request #6003 from argriffing/eigh-ascending-eigenvalues

MAINT: eigenvalues returned by eigh are ascending",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
d2d1dd5accbd6bbd5a2d8f3fac0dbfc6fb9b4e18,"Merge pull request #6004 from mhvk/lib-type-check-float16

BUG: np.float16 not recognized in np.common_type",numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
39b7b08c781d707eedbd7f7dfe2e7c8af614c16d,"MAINT: Update version info for Numpy 1.10.

Update version hash in numpy/core/code_generators/cversions.txt.
Update API version in numpy/core/setup_common.py
Update API version in numpy/core/include/numpy/numpyconfig.h
",doc/HOWTO_RELEASE.rst.txt,numpy/core/code_generators/cversions.txt,numpy/core/include/numpy/numpyconfig.h,numpy/core/setup_common.py
157e396673c4992e97a522dd9f350b480c4cb6c6,"BUG: np.float16 not recognized in np.common_type
",numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
b5bbb64cabb305b284e124bd60948bbbbfcac43c,"DOC: docstring typos _ssyevd -> _syevd
",numpy/linalg/linalg.py
bec3440743e119a0cda7adf5d4b8ea1c350e0a6f,"MAINT: eigenvalues returned by eigh are ascending
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a43e86b0d9d567c7abb9478d5bff90905d3f70ec,"Merge pull request #5999 from charris/fix-loadtxt-example

DOC: Fix examples in npyio.py to properly import StringIO.",numpy/lib/npyio.py
8b955989a9f4fd6498c669af872732cdaee6c59a,"DOC: Fix examples in npyio.py to properly import StringIO.

In two places they were doing

    >>> from StringIO import StringIO

Since Python 2.6 that should be

    >>> from io import StringIO

Closes #5995.
",numpy/lib/npyio.py
f0c898b6017cc011561d7f1e611e08283ecfdb08,"Merge pull request #5490 from charris/cleanup-gh-4986

DOC: Update indexing docs. ",doc/source/reference/arrays.indexing.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py,numpy/doc/indexing.py,numpy/lib/function_base.py,numpy/matlib.py
4e5545f0bcc654fb0c6752dcf72120e6e7340d28,"DOC: Update docs.

Update docs for boolean array indexing and nonzero order.
Add links to row-major and column-major terms where they appear.

Closes #3177
",doc/source/reference/arrays.indexing.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py,numpy/doc/indexing.py,numpy/lib/function_base.py,numpy/matlib.py
23e6b74a74857136a0fd2919f4d37da370d55ec4,"Merge pull request #5882 from njsmith/runtests-tweak

MAINT: make runtests.py --python and --ipython a little more ergonomic",runtests.py
0bf3045acfc314a3eba486505aec8e860c04fd8c,"Merge pull request #5991 from charris/1.10-deprecated-removal-risky

1.10 deprecated removal risky",doc/release/1.10.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py,numpy/lib/npyio.py
106ece89b282c6b4dfdcf14a7740bdc06e16a8b8,"Merge pull request #5992 from charris/add-norm-keyword-to-fft-functions

ENH: Add a norm keyword and tests for fft transforms",doc/release/1.10.0-notes.rst,numpy/fft/fftpack.py,numpy/fft/info.py,numpy/fft/tests/test_fftpack.py
81d53e44a8d503dba3101c1f523008d0a0dde787,"ENH: Add a norm keyword and tests for fft transforms
",doc/release/1.10.0-notes.rst,numpy/fft/fftpack.py,numpy/fft/info.py,numpy/fft/tests/test_fftpack.py
bac2fdf7c02b4bc07b9c05dbb6551004903279ca,"DEP,MAINT: Remove old_behavior keyword from numeric.correlate.

Risky perhaps. The old correlate behavior was deprecated in NumPy 1.4
and the default behavior changed to the new (standard) version in 1.5.
The old function, with slightly different signature, is still available
in numpy.core.multiarray.correlate.

If this causes problems in the 1.10 release process, this commit can be
reverted.
",doc/release/1.10.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
ec4e91b08f52b19b9c87f6020cac99027023038b,"DEP,MAINT: Remove keywords ""skiprows"" and ""missing"" from genfromtxt.

Deprecated in NumPy 1.5. If this causes problems in the 1.10 release
cycle the change can be reverted.
",doc/release/1.10.0-notes.rst,numpy/lib/npyio.py
e3b2bc0b0f31482cd112660393245116ae55ecbf,"Merge pull request #5990 from charris/1.10-deprecated-removal

1.10 deprecated removal",doc/release/1.10.0-notes.rst,numpy/_import_tools.py,numpy/core/arrayprint.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/number.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_shape_base.py,numpy/distutils/command/config.py,numpy/distutils/exec_command.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/extras.py
a27f56069fb883c44dd4986d15e751162d85b621,"DEP: Add notes to some deprecations.

Some keywords are deprecated and slated for removal in numpy 2.0.
Add comment to deprecation date to clarify that.
",numpy/core/numeric.py,numpy/lib/npyio.py
e22ae7421cfc65547b9e9e2dd7d296ca9d655efa,"MAINT: Rearrange 1.10-notes a bit.
",doc/release/1.10.0-notes.rst
e1693d4ee1833eb0c07269da78712d529e71d943,"DEP,MAINT: Remove support for a._format array printing.

Deprecated, removed from numpy/core/arrayprint.py.
",doc/release/1.10.0-notes.rst,numpy/core/arrayprint.py
3ed8030a2aa2f51a158fdec36a038a927ddb14b4,"DEP,MAINT: Remove try_run and get_output.

Deprecated functions in numpy/distutils/command/config.py.
",doc/release/1.10.0-notes.rst,numpy/distutils/command/config.py
16f1622afa6be491a17c8b21f6fec30c2de4d752,"DEP,MAINT: Remove deprecated splitcmdline.

Was in numpy/distutils/exec_command.py.
Update 1.10-notes.rst.
",doc/release/1.10.0-notes.rst,numpy/distutils/exec_command.py
81788b45e383d2f6494cf3daadbd7fb6bfc550b1,"BUG: Fix wrong deprecation message for logical unary '-' operator.
",numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_deprecations.py
505b0f4c11acb1ade1e91f1360ffa6a33cbd0b51,"MAINT: Mark deprecation warning with a date and Numpy version.

This is to make it easier to find and remove deprecated features.
It would be a good idea if all deprecations were made with similar
comments.
",numpy/_import_tools.py,numpy/core/arrayprint.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/number.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_type_resolution.c,numpy/distutils/command/config.py,numpy/distutils/exec_command.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/extras.py
f6861923209df65d9c4253368061072eda67ea77,"DEP,MAINT: Raise IndexError if axis != 0 when concatenating 1-D arrays.

This was deprecated in NumPy 1.7 with a warning that it would raise
an error in the future. Tests for the new error are added and the
test that allowed that special case is removed.
",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
5b8ec8915ef5e2fa58824411be4ea1e17736d08a,"DEP,MAINT: Remove deprecated functions from npy_3kcompat.h

These functions npy_PyFile_Dup and npy_PyFile_DupClose do not work
correctly in Python 3. Deprecation messages have been raised in
npy_PyFile_Dup since 1.9 and it is probably best to smoke out any
remaining uses by simply removing the function.
",doc/release/1.10.0-notes.rst,numpy/core/include/numpy/npy_3kcompat.h
95b2c24820759397695ece5f512e930e7c1712cf,"Merge pull request #5989 from argriffing/polynomial-improvements

MAINT: improve laguerre and legendre efficiency",numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py
52c8285f2603da718fa00d76de528d035c624dc9,"Merge pull request #5988 from argriffing/eigvalsh-ordering-update

MAINT: notice that eigvalsh returns a sorted array",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
1f79addc9d546690984896fc4a35298aab289ba5,"MAINT: improve laguerre and legendre efficiency
",numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py
0514d31299318bfa4c87abbfea6424eebaeec188,"Merge pull request #5985 from ajdawson/lgauss-sym

ENH: Take advantage of symmetry in leggauss.",numpy/polynomial/legendre.py
5035da745cff7b7a5c40e7801c4e17b8355ee36d,"MAINT: notice that eigvalsh returns a sorted array
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a9695eec20c029d8d64f0e7162f7947b6c3589a5,"Merge pull request #5987 from argriffing/eighvalsh-docs

DOC: update eigvalsh docstring example",numpy/linalg/linalg.py
e42bea5f09b7056d37217c26efd9008bc7ff380a,"Merge pull request #5943 from ahaldane/record_finalize

BUG: automatically convert recarray dtype to np.record",doc/release/1.10.0-notes.rst,doc/source/reference/arrays.dtypes.rst,numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
14a28bd8e7eb1f99e570cd2903d955c6b9d0038e,"DOC: update eigvalsh docstring example
",numpy/linalg/linalg.py
a93b86217e9ff8cc1060aaf362cd682b518cfb7b,"BUG: automatically convert recarray dtype to np.record

Viewing an ndarray as a np.recarray now automatically converts
the dtype to np.record.

This commit also fixes assignment to MaskedArray's dtype attribute,
fixes the repr of recarrays with non-structured dtype, and removes
recarray.view so that viewing a recarray as a non-structured dtype
no longer converts to ndarray type.

Fixes #3581
",doc/release/1.10.0-notes.rst,doc/source/reference/arrays.dtypes.rst,numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
49427504787e46bc394305901997d629f039fd19,"ENH: Take advantage of symmetry in leggauss.

The calculation of points and weights for Gauss-Legendre quadrature
can take advantage of the symmetry of the companion matrix when
computing its eigenvalues in order to speed up the computation.
",numpy/polynomial/legendre.py
d033b6e19fc95a1f1fd6592de8318178368011b1,"Auto merge of #5983 - charris:rename-npy_cache_pyfunc, r=njsmith

MAINT: Rename npy_cache_pyfunc to npy_cache_import.

The function will be new in NumPy 1.10, so get this done before
branching that version. The old name was a bit too specific for a
function that could also be used to cache other attributes than just
functions.
",numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/private/npy_import.h
75e4353d16f7bf591bbdc7a8024f902d6cf1846f,"MAINT: Rename npy_cache_pyfunc to npy_cache_import.

The function will be new in NumPy 1.10, so get this done before
branching that version. The old name was a bit too specific for a
function that could also be used to cache other attributes than just
functions.
",numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/private/npy_import.h
4027d16f0aa19e551067bf0c93dbe057e0142bb8,"Merge pull request #5980 from seberg/large-flat-concat

BUG: Large concatenates with axis=None causing segfault.",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
b26aef66a998b8a6877ee261e4d97ec8f815dad2,"BUG: Large concatenates with axis=None causing segfault.

This was due to sizes assuming a MAX_ARGS, just remove usage and
call PyArray_SIZE each time.

Closes gh-5979
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
2c29b138aedb1774e7f984f4a237243455c423ad,"Merge pull request #5962 from mhvk/ma-getitem-nomask-correction

BUG Ensure masked object arrays can always return single items.",doc/release/1.10.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py
1a4d94357eb8d06930ad69309fda579a8caa6c57,"BUG Ensure masked object arrays can always return single items.

For a masked array holding objects that themselves are arrays, when selecting a
single item, it is treated as if it were a slice of the array and an attempt is
made to set its mask.  This was always a bug, but it become visible with a
recent change to `MaskedArray.__getitem__` (gh-4586) where it is attempted to
change the shape of the mask.  With this PR, this case gets special  treatment
in that the object is made into a Masked Array with a full set mask.
(A previous attempt to do the perhaps more logical think and just return
`masked` caused quite a few errors in astropy.io.votable; it seemed it was
not worth breaking backwards compatibility that much).

Test case that now works but used to fail:
```
mx1 = MaskedArray([1.], mask=[True])
mx2 = MaskedArray([1., 2.])
mx = MaskedArray([mx1, mx2], mask=[False, True])
mx[0]
```
",doc/release/1.10.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py
a580d6fb832ee1c571a60b104e44b6b21f3c2951,"Merge pull request #5977 from ahaldane/bytestring_releasenote

MAINT: document change to bytestring index behavior",doc/release/1.10.0-notes.rst
53b8c2a88d33933a45d4f34525a583776e096502,"MAINT: document change to bytestring index behavior

Bytestring indices now raise IndexError, not ValueError

[ci skip]
",doc/release/1.10.0-notes.rst
6c1e1de675c3a774bef31be789c43600da60addc,"Merge pull request #3907 from mhvk/ma/allow-subclass-in-ufunc

BUG allow subclasses in MaskedArray ufuncs -- for non-ndarray _data",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
f4e0bdd0386f89bc2c40c5329663710293140ae6,"Merge pull request #5636 from ahaldane/rework_index_fields

ENH: simplify field indexing of structured arrays",numpy/core/_internal.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py
3c1a13dea6a7e189675977ad65ea230ce4816061,"ENH: simplify field indexing of structured arrays

This commit simplifies the code in array_subscript and
array_assign_subscript related to field access. This fixes #4806,
and also removes a potential segfaults, eg if the array is indexed using
an sequence-like object that raises an exception in getitem.

Also fixes #5631, related to creation of structured dtypes
with no fields (an unusual and probably useless edge case).

Also moves all imports in _internal.py to the top.

Fixes #4806.
Fixes #5631.
",numpy/core/_internal.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py
3c6b6baba587297633b8744a3b2ade8644ad8a5e,"BUG Allow subclasses in MaskedArray ufuncs -- for non-ndarray _data
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
8c86a0a879a9f6d8bc9b225e95512fd7f2fca964,"Auto merge of #5967 - wimglenn:bugfix/empty_string_array, r=seberg

BUG: fix inconsistency with np.array(['']) being truthy

```
a = np.array([0])
b = np.array([None])
c = np.array([''])
d = np.array(['   '])
```

Why should we have this inconsistency:

```
>>> bool(a)
False
>>> bool(b)
False
>>> bool(c)
True
>>> bool(d)
False
```
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
7e04882ac753f02cd3fe6d583e8c544cb1eb4ab9,"Merge pull request #4617 from mhvk/ma/no-direct-ndarray-methods

ENH: allow subclass overrides by removing explicit ndarray methods",doc/release/1.10.0-notes.rst,numpy/ma/core.py
763512bff140d800ce9db29f2f86735300969221,"MAINT: core: some missing casts in multiarraymodule
",numpy/core/src/multiarray/multiarraymodule.c
4e3f8273ca901fd5cfa4722f8020d8f5d471035e,"MAINT: core: less function pointer casting in arraytypes.c.src
",numpy/core/src/multiarray/arraytypes.c.src
4e365875bae8db895f0caa8debaf9774651bffcd,"Merge pull request #5968 from larsmans/c-fixes

FIX sprintf bug + get rid of a lot of warnings",numpy/build_utils/src/apple_sgemv_fix.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h
8c4303acdbdd24d5ba035de3ae0a636c348544dc,"MAINT: build_utils: get rid of more sprintf calls
",numpy/build_utils/src/apple_sgemv_fix.c
0b5cecacc4d6ee2cfb395ac4b955cd52883a77e8,"MAINT: change {arg,}sort functions' type to PyArray_{Arg,}SortFunc
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h
8749a9a95b0b917dfff3872344204c0040b71cef,"whoops dont need that bit anymore
",numpy/core/src/multiarray/arraytypes.c.src
d67dc631694585ca84972d2ba1823dac9ca220e1,"the code changes to make those new tests pass
",numpy/core/src/multiarray/arraytypes.c.src
3dd9a5dd7e30a05e97b3671976eee87564370ac1,"tests for removing explicit size check
",numpy/core/tests/test_multiarray.py
7f0900f0f08f9218428ce2d0dd0908af0f9b8cc9,"BUG: erroneous use of sprintf

Output argument was a char ** instead of a char *.

Also changed to use snprintf for safety; if the error message is
ever changed, the magic number 174 (!?) is likely to go stale,
causing buffer overruns.
",numpy/core/src/multiarray/mapping.c
524d6f9672eb737b40b4981bc9977ad71a3f19df,"MAINT: Py3 changes PySlice_GetIndices' first argument's type to PyObject*
",numpy/core/src/multiarray/nditer_pywrap.c
8b447baab0932c7bd5cf89aba3e9e2197e4be735,"grrr python 3.2
",numpy/core/tests/test_multiarray.py
0a08e7e50f5a445e54fd9a888a9d03a2fdeb9e9e,"BUG: fix inconsistency with np.array(['']) being truthy
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
b72d69ded7790da6ac0f351fe0ce8cf8187e562d,"Merge pull request #5966 from charris/test-einsum-small-boolean-arrays

TST: Test einsum for small boolean matrices.",numpy/core/tests/test_einsum.py
190b8f0665084e458be8289748fa393824306193,"TST: Test einsum for small boolean matrices.

See #5946. The input/output pointers were being incorrectly
incremented.
",numpy/core/tests/test_einsum.py
eaaa9313b3bf57196528c78868141bf106be9876,"Merge pull request #5946 from seberg/einsum-bool-fix

BUG: einsums bool_sum_of_products_contig incorrect for small arrays",numpy/core/src/multiarray/einsum.c.src
31d05f2f83384fb05111d71ccbf98ef23f22737b,"Merge pull request #5965 from charris/add-test-from-gh-5960

TST: Add test for segfault in richcompare of void type ==, !=.",numpy/core/tests/test_ufunc.py
7721d3d10e85d4ddbc22d600bb99567cd4d6ecad,"TST: Add test for segfault in richcompare of void type ==, !=.

Fixed by #5964, but might as well keep the test from #5960.
",numpy/core/tests/test_ufunc.py
899a2a2abafe565be634c134c76395753b906834,"Merge pull request #5964 from charris/fixup-gh-5864

Fixup gh 5864",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/number.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_ufunc.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/testing/utils.py
adc6476c0f4a2cae70d772f1d9ddfba5168ebc2c,"Merge pull request #5950 from f0k/patch-1

Extend github source links to line ranges",doc/source/conf.py
ed031c2eba327d9c01904441b9e13421c661e417,"TST: Test __array_priority__ for different class combinations.

This checks the four classes with different __array_priority__ values
against each other for the operators

    __add__, __radd__
    __sub__, __rsub__
    __mul__, __rmul__
    __pow__, __rpow__
    __div__, __rdiv__
    __mod__, __rmod__
    __truediv__, __rtruediv__
    __floordiv__, __rfloordiv__
    __and__, __rand__
    __xor__, __rxor__
    __or__, __ror__
    __lshift__, __rlshift__
    __rshift__, __rrshift__
    __eq__
    __ne__
    __gt__
    __ge__
    __lt__
    __le__

The classes are ndarray, two subclasses of ndarray, and a class unrelated
to ndarray. The combinations checked are

    ndarray -- ndarray subclass
    ndarray -- unrelated class
    ndarray subclass -- ndarray subclass
    ndarray subclass -- unrelated class
",numpy/core/tests/test_multiarray.py
3b3edd9ae8e82259215c72798af4fe3880c86f0d,"TST: Test that NotImplemented is not longer returned

The following functions now raise a TypeError instead of returning
NotImplemented:

    np.power, np.add, np.subtract, np.multiply, np.divide,
    np.bitwise_and, np.bitwise_or, np.bitwise_xor, np.floor_divide,
    np.fmax, np.fmin, np.fmod, np.hypot, np.logaddexp,
    np.logaddexp2, np.logical_and, np.logical_or, np.logical_xor,
    np.maximum, np.minimum, np.mod

Functions that remain to be fixed:

    np.greater, np.greater_equal, np.less,
    np.less_equal, np.not_equal
",numpy/core/tests/test_ufunc.py
0aa32608246881339871231398cc0dc037cef79a,"STY: Minor style cleanups in tests and C code.

Also added back some extended error messages that were in original
PR #5864.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_deprecations.py
df148e1b6327ca699b8b56f51f34dc871551da8b,"BUG: Fix test_void_dtype_equality_failures for Python 3.

The NotArray test class needs to define a `__ne__` method, otherwise the
inherited Python 3 method will call `__eq__`, resulting in two rather
than one DeprecationWarning.
",numpy/core/tests/test_deprecations.py
c65a7518537a6ad53146c6479dd10de28311460e,"MAINT: make the deprecation warnings a little more distinctive

This is probably a good change in any case, and in particular might
help with debugging whatever bizarro thing is going wrong on Travis.
",numpy/core/src/multiarray/arrayobject.c
6bf0e419dc79ea6815557c57b7e9bb504ba20543,"MAINT: Remove NotImplemented handling from ufuncs (almost)

This was redundant/broken anyway.

See gh-5844 for discussion. See the massive comment added to
ufunc_object.c:get_ufunc_arguments for a discussion of the deprecation
strategy here -- it turns out that array_richcompare is such a
disaster zone that we can't quite wholly eliminate NotImplemented
quite yet. But this removes most NotImplementeds, and lays the
groundwork for eliminating the rest in a release or two.
",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_regression.py
a0643f542642537cb4f4b3fa057fbbecaf799b29,"MAINT: add __array_priority__ special case to masked array binary ops

ndarray special methods like __add__ have a special case where if the
right argument is not an ndarray or subclass, and it has higher
__array_priority__ than the left argument, then we return
NotImplemented and let the right argument handle the operation.

ufuncs have traditionally had a similar but different special case,
where if it's a 2 input - 1 output ufunc, and the right argument is
not an ndarray (exactly, subclasses don't count), and when converted
to an ndarray ends up as an object array (presumably b/c it doesn't
have a meaningful coercion route, though who knows), and it has a
higher __array_priority__ than the left argument AND it has a
__r<operation>__ attribute, then they return NotImplemented.

In practice this latter special case is not used by regular ndarrays,
b/c anytime it would need to be triggered, the former special case
triggers first and the ufunc is never called. However, numpy.ma did
not have the former special case, and was thus relying on the ufunc
special case. This commit adds the special case to the numpy.ma
special methods directly, so that they no longer depend on the quirky
ufunc behaviour.

It also cleans up the relevant test to things that actually should be
true in general, instead of just testing some implementation details.
",numpy/core/src/multiarray/number.c,numpy/ma/core.py,numpy/ma/tests/test_core.py
1e3ab40493fadb5daa67c8a55c5360fd934cca7b,"MAINT: move the special case for void comparison before the regular case

The ndarray richcompare function has special case code for handling
void dtypes (esp. structured dtypes), since there are no ufuncs for
this. Previously, we would attempt to call the relevant
ufunc (e.g. np.equal), and then when this failed (as signaled by the
ufunc returning NotImplemented), we would fall back on the special
case code. This commit moves the special case code to before the
regular code, so that it no longer requires ufuncs to return
NotImplemented.

Technically, it is possible to define ufunc loops for void dtypes
using PyUFunc_RegisterLoopForDescr, so technically I think this commit
changes behaviour: if someone had registered a ufunc loop for one of
these operations, then previously it might have been found and
pre-empted the special case fallback code; now, we use the
special-case code without even checking for any ufunc. But the only
possible use of this functionality would have been if someone wanted
to redefine what == or != meant for a particular structured dtype --
like, they decided that equality for 2-tuples of float32's should be
different from the obvious thing. This does not seem like an important
capability to preserve.

There were also several cases here where on error, an array comparison
would return a scalar instead of raising. This is supposedly
deprecated, but there were call paths that did this that had no
deprecation warning. I added those warnings.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_multiarray.py,numpy/testing/utils.py
4b1f508a57549d8031a23160b40c7f87f47892ed,"MAINT: move the special case for string comparison before the regular case

The ndarray richcompare function has a special case for handling
string dtypes (which currently cannot be handled by
ufuncs). Traditionally this was handled by the ufuncs returning
NotImplemented, and then falling through to a special case. By moving
the special case to the top of the richcompare function, it becomes
unnecessary for the ufuncs to return NotImplemented in this case.
",numpy/core/src/multiarray/arrayobject.c
88937f8f1d61d889e6923de7e15b63e40fa9a8ee,"Merge pull request #5963 from charris/rubustify-tuple-loop-search

Rubustify tuple loop search",numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_ufunc.py
f60c553e6c92447d71fc960faf81bdeb9c54bbd6,"TST: Test that true_divide works for float inputs and dtype=np.float.

This was failing due to the check for matching loops not searching
through all available loops, rather ending with int8 inputs and float
output, which in turn would fail casting.
",numpy/core/tests/test_ufunc.py
8f172ddbb90357e80bafa2cd7df4b307ce15600b,"BUG: Make type_tuple_type_resolver more robust.

When a loop match fails on account of casting, continue searching the
loops until success or all loops have been examined. The failure to do
this was causing true_divide to fail with float inputs and dtype=float
because the first loop found was (int8, int8, float64), leading to a
casting error as float cannot be safely cast to int8. Versions of numpy
previous to 1.10 will still fail silently if this is backported as the
casting rules were less strict, so that would also need fixing.

Closes #3484.
",numpy/core/src/umath/ufunc_type_resolution.c
1fe98ff582d57c576d95316422a113e681e6773b,"Merge pull request #5959 from Ladsgroup/master

Fix typo in documentation",numpy/linalg/linalg.py
6925cb7c249420a278e34c98d385264b1ac30293,"DOC: Fix typo in documentation

[ci skip]
",numpy/linalg/linalg.py
abaa8488daa6249381e6b42bb8e3c2ec7ed53eab,"Merge pull request #5947 from ahaldane/voidscalar_getsetfield

BUG: make void-scalar getfield/setfield use ndarray methods",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py
5c3c04537a76099aa7ac9cc5db9d797287e44612,"MANT: Cleanup of _pyarray_revert

Removed several useless calls to copyswap, plus added a slightly
more efficient method for non-complex numeric types.
",numpy/core/src/multiarray/multiarraymodule.c
df959ed7c45a923c59b6bb3ebbb4bc0b7c73df58,"BUG: make void-scalar getfield/setfield use ndarray methods

This commit modifies voidtype_get/setfield to call ndarray's
get/setfield, which does proper safety checks (for object arrays) and
broadcasts properly.  This solves bugs related to void-scalar
assignment.

Also changed the calling convention of voidtype_getfield. Previously it
accepted a (dtype, offset, title) tuple and dropped title. Now it
expects only (dtype, offset), just like ndarray's getfield.

Fixes #3126.
Fixes #3561.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py
338d047c3d17b815b2a5ea22cc96bfb12a4c013d,"ENH: allow subclass overrides by removing explicit ndarray methods
",doc/release/1.10.0-notes.rst,numpy/ma/core.py
83f36c52acb578514f1801b9704fec1825986239,"Merge pull request #5956 from andyfaff/doc_poly

DOC: Polynomial.deriv refers to integrations, not differentiations",numpy/polynomial/_polybase.py
9c53d0454a124175696c4fa3d77d8ac65ac2fb25,"DOC: Polynomial.deriv refers to integrations, not differentiations
",numpy/polynomial/_polybase.py
7d867925e6aa634136e85511cfe7ddbe41c88f74,"Merge pull request #5866 from tdsmith/include_dirs

MAINT: can't find Python.h when build_ext --include-dirs is set",numpy/distutils/command/build_ext.py
35def25c65fe6c8576dfc0e246b67784b8fcb8e9,"BF: do not crash lookfor if inspection fails - catch any Exception
",numpy/lib/utils.py
1a82c6d7f8ee97565deefc827735cdc1e3676679,"DOC: Extend github source links to line ranges
",doc/source/conf.py
01c59d63ad0356650571e239fffb9e7ee38c4c08,"Merge pull request #4353 from seberg/boolean-bad-shape-dep

DEP: Deprecate boolean array indices with non-matching shape",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
189ae609a75b349092c133dc81d583fb64fb261b,"BUG: einsums bool_sum_of_products_contig incorrect for small arrays

The small array (and end of loop) special case incorrectly stepped
through array and left pointers bogus.
",numpy/core/src/multiarray/einsum.c.src
c5ad05813f36bbb65248d85bf1bacb2d0d60c368,"DEP: Deprecate boolean array indices with non-matching shape

Boolean array indices will (unless the special case is taken)
always be converted using a nonzero logic. However, for example
```
arr = np.arange(10)
index = np.array([True])
arr[index]
```
would thus work as if index is filled up with `False`. This is
a source of confusion and hardly useful in practice. Especially
if the array has more then one dimension this behaviour can
be very unexpected as it conflicts with broadcasting.

Uses VisibleDeprecationWarning, since this is probably usually a
user bug in the first place.
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
943ac81b58c7c8afbfadedbdd28ab94e56ad58fa,"Merge pull request #5944 from seberg/einsum-fix

Einsum fix",numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
a19efc85c21940cb2621e63c5012f89d7d7eb1fa,"TST: Einsum contiguous output test

More tests would be good, but for now two specific tests.
",numpy/core/tests/test_einsum.py
5bfc31c178faf8470d90ee8594f4de7cb70ee3db,"BUG: Einsum specialization did not check contiguity of output array

Closes gh-5907
",numpy/core/src/multiarray/einsum.c.src
a99c77577850054c55850102132dcf3eb43dea6a,"Merge pull request #5548 from ahaldane/view_objects_owned

ENH: structured datatype safety checks",numpy/core/_internal.py,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_recfunctions.py
b08f369554e6d6b231c941740f6c852a45edcc12,"BLD: find Python.h when build_ext --include-dirs is set

Ensure that build_ext.include_dirs is the same physical list as
build_ext.distribution.include_dirs.
",numpy/distutils/command/build_ext.py
e2cd6fa869cec6d92062fb687d8e6952c1202017,"ENH: structured datatype safety checks

Previously views of structured arrays containing objects were completely
disabled.  This commit adds more lenient check for whether an object-array
view is allowed, and adds similar checks to getfield/setfield

Fixes #2346. Fixes #3256. Fixes #2599. Fixes #3253. Fixes #3286.
Fixes #5762.
",numpy/core/_internal.py,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_recfunctions.py
30d755d8737505717d54ed32501261bb94130a7f,"Merge pull request #5878 from charris/quick-and-dirty-matmul

Quick and dirty matmul",doc/release/1.10.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/routines.linalg.rst,numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/private/npy_import.h,numpy/core/tests/test_multiarray.py
24fcc25e14b272050ab5b7fe757b34d182a8fe85,"DOC: Mention support for the '@' operator in the 1.10 release notes.
",doc/release/1.10.0-notes.rst
91e8cd29c93ec310b0665e6c3a823c3f095fc516,"DOC: Document '@' and matmul.

Document the matmul function and add '@' to the operator
section of the reference manual.
",doc/source/reference/arrays.ndarray.rst,doc/source/reference/routines.linalg.rst,numpy/add_newdocs.py
c79651d865ca53940f5ec0dc4e9bcbc33c01918b,"STY: Minor C style fixes for multiarraymodule.c.

Start labels at beginning of line.
Break a long line
Whitespace.
",numpy/core/src/multiarray/multiarraymodule.c
0cb4cbd235978ec0925c5c1cdbfe34da669e3379,"TST: Add tests for multiarray.matmul and operator '@'.
",numpy/core/tests/test_multiarray.py
1b6193b977c1a411a497ccab4ddf741e3b4849c1,"ENH: Add support for the '@' operator added in Python 3.5.
",numpy/core/src/multiarray/number.c
721675e19dd3f0c798f9582f69ea153484917e34,"ENH: Add a matmul function to multiarray

This is the functional counterpart of the '@' operator that will be
available in Python 3.5 with the addition of an out keyword. It
operates like the dot function except that

- scalar multiplication is not allowed.
- multiplication of arrays with more than 2 dimensions broadcasts.

The last means that when arrays have more than 2 dimensions they are
treated as stacks of matrices and those stacks are broadcast against
each other unlike the current behavior of dot that does an outer
product. Like dot, matmul is aware of `__numpy_ufunc__` and can be
overridden.

The current version of the function uses einsum when cblas cannot be
used, hence object arrays are not yet supported.
",numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c
8c18581110925ebe9e2b3530d4d5fc4afefbc8b0,"BUG: Fix npy_cache_pyfunc to properly implement inline.

The function was not static, which led to multiple definition
errors.
",numpy/core/src/private/npy_import.h
b1cfccd6d78be622ee85f658e8f9b4a2d5fc9ddb,"Merge pull request #5940 from charris/add-python-func-import

ENH: Add inline C function to import and cache Python functions.",numpy/core/src/private/npy_import.h
403d61d1448eb8ee6a2ddc81865d9ebaf1ef73df,"ENH: Add inline C function to import and cache Python functions.

A new inline function 'npy_cache_pyfunc' is provided for the common
operation of inporting and caching a Python function in static
variables. The intended usage is as follows.

int myfunc()
{
    static PyObject *cache = NULL:

    npy_cache_pyfunc(""the.module.name"", ""function"", &cache);
    ...
}

Errors are not recoverable, so checked with assert for debugging.
",numpy/core/src/private/npy_import.h
36b940497f194b1b90e9ff48c58a01a6e74c09de,"Merge pull request #4586 from mhvk/ma/subclass-item-setting-getting

ENH: Let MaskedArray getter, setter respect baseclass overrides",doc/release/1.10.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
a9c810dd1d8fc1e3c6d0f0ca6310f41795545ec9,"Merge pull request #5912 from rgommers/install-doc

DOC: update INSTALL.txt with info on binary installers and 32-bit Windows",INSTALL.txt
17d7e4147c8eaf908bf84a3ee4741568da95e182,"Merge pull request #5910 from argriffing/more-astype-auditing

MAINT: explicit fft copy",numpy/fft/fftpack.py
d1f656a3a8d79d6562541c83e55e79ea06fdfce8,"MAINT: fft: np.asarray(...) -> array(...)
",numpy/fft/fftpack.py
f535f71dfced2164e095871bf2d7f82b9e6d052d,"Merge pull request #5921 from embray/record-getitem-fixes

BUG: Further fixes to record and recarray getitem/getattr",numpy/core/records.py,numpy/core/tests/test_records.py
9660f4f284504d51d7a60ddb4e4185e6ee1c11e6,"Merge pull request #5931 from jaimefrio/iter_next_cleanup

MANT: Remove unused macro _PyArray_ITER_NEXT3",numpy/core/include/numpy/ndarraytypes.h
4969b1ac2ceb4576fd34991abb990fb9856dd613,"MANT: Remove unused macro _PyArray_ITER_NEXT3

The _PyArray_ITER_NEXT3 macro is not used in PyArray_ITER_NEXT,
and has syntax errors that would fail compilation if used.
",numpy/core/include/numpy/ndarraytypes.h
776c3c32b759a62542939fa2abd729f9ad77ae9b,"BUG: Further fixes to record and recarray getitem/getattr

This is a followup to PR #5505, which didn't go quite far
enough.  This fixes two issues in particular:

1) The record class also needs an updated `__getitem__` that works
analogously to its `__getattribute__` so that a nested record is
returned as a `record` object and not a plain `np.void`.  In other
words the old behavior is:

```python
>>> rec = np.rec.array([('abc ', (1,1), 1), ('abc', (2,3), 1)],
...       dtype=[('foo', 'S4'), ('bar', [('A', int), ('B', int)]),
('baz', int)])
>>> rec[0].bar
(1, 1)
>>> type(rec[0].bar)
<class 'numpy.record'>
>>> type(rec[0]['bar'])
<type 'numpy.void'>
```

demonstrated inconsistency between `.bar` and `['bar']` on the record
object.  The new behavior is:

```python
>>> type(rec[0]['bar'])
<class 'numpy.record'>
```

2) The second issue is more subtle.  The fix to #5505 used the
`obj.dtype.descr` attribute to create a new dtype of type `record`.
However, this does not recreate the correct type if the fields are
not aligned.  To demonstrate:

```python
>>> dt = np.dtype({'C': ('S5', 0), 'D': ('S5', 6)})
>>> dt.fields
dict_proxy({'C': (dtype('S5'), 0), 'D': (dtype('S5'), 6)})
>>> dt.descr
[('C', '|S5'), ('', '|V1'), ('D', '|S5')]
>>> new_dt = np.dtype((np.record, dt.descr))
>>> new_dt
dtype((numpy.record, [('C', 'S5'), ('f1', 'V1'), ('D', 'S5')]))
>>> new_dt.fields
dict_proxy({'f1': (dtype('V1'), 5), 'C': (dtype('S5'), 0), 'D':
(dtype('S5'), 6)})
```

Using the `fields` dict to construct the new type reconstructs the
correct type with the correct offsets:

```python
>>> new_dt2 = np.dtype((np.record, dt.fields))
>>> new_dt2.fields
dict_proxy({'C': (dtype('S5'), 0), 'D': (dtype('S5'), 6)})
```

(Note: This is based on #5920 for convenience, but I could decouple
the changes if that's preferable.)
",numpy/core/records.py,numpy/core/tests/test_records.py
9e7a0b224b4a7859efc1bc80b7ccc5c86c83d3df,"Merge pull request #5920 from embray/descr-fields-dictproxy

ENH: Allow dictproxy objects to be used in place of dicts when creating a dtype",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
647d2a6586a1f98af1b0ceee0ed0552513625dea,"Merge pull request #5889 from jaimefrio/broadcast_broadcast

BUG: np.broadcast should accept itself as an input",numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_numeric.py
c8202592bb8d85c22c643d15d07889b9b9e7f09e,"Merge pull request #5928 from jaimefrio/sort_order_doc

DOC: Better document 'order' argument of 'sort' and friends",numpy/add_newdocs.py,numpy/core/fromnumeric.py
1acd14c3ff6d781801fab7b550fc9d295325f7da,"ENH: Allow dictproxy objects to be used in place of dicts when creating
a dtype

arraydescr_new allows passing in a dict to represent a multi-field
dtype.  However, the .fields attribute on such dtypes is returned
as a dictproxy object.  Therefore it is convenient, for copying
existing multi-field dtypes, to be able to pass in a dictproxy object
as well.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
d9ab8f76543f120d67d3e33ae667860924d00971,"Merge pull request #5929 from jaimefrio/void_compare_cleanup

MANT: Style clean-up in VOID_compare",numpy/core/src/multiarray/arraytypes.c.src
23901aa4eaeb04d52bbf1869d34633510e9ffefb,"MANT: Style clean-up in VOID_compare

Avoids modifying the dtype of the array.

Also removed explicit memcpy calls, let copyswap take care of it.
",numpy/core/src/multiarray/arraytypes.c.src
5be67675762180503e1b3c4824d2009d3614f181,"DOC: Better document 'order' argument of 'sort' and friends

Closes #5927
",numpy/add_newdocs.py,numpy/core/fromnumeric.py
dd88309a8f4f559688c3fcba3ec41b932f37eeb1,"MAINT: in fft, make copying more explicit
",numpy/fft/fftpack.py
949315787a51eb86db0f8a19b4c257a0ef739f32,"MAINT: remove unnecessary helper function
",numpy/fft/fftpack.py
a3ffea107820c06a62fd74c4dff1a51bd1ebb284,"Merge pull request #5925 from mortada/std_docs

DOC: np.std and np.var docstring examples are outdated",numpy/core/fromnumeric.py
0c89ba8b7f0e7b83d9662d88b1913d92d58a2bdb,"DOC: np.std and np.var docstring examples are outdated
",numpy/core/fromnumeric.py
467d4e16d77a2e7c131aac53c639e82b754578c7,"Merge pull request #5923 from vrajmohan/fix-typo

DOC: Fix typo and some grammar",numpy/doc/indexing.py
eb4c08d6a4918b223009245027ad92f37c4e0655,"DOC: Fix typo and some grammar
",numpy/doc/indexing.py
0794d8f072ae8fc74550a661d646dc122fd47576,"Merge pull request #5914 from sirtom67/master

New typemap for in-place arrays of arbitrary number of dimensions:",doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,tools/swig/README,tools/swig/numpy.i,tools/swig/test/Flat.cxx,tools/swig/test/Flat.h,tools/swig/test/Flat.i,tools/swig/test/Makefile,tools/swig/test/setup.py,tools/swig/test/testFlat.py
d1acfd9c232046579029861e5207eb80a1b1f747,"Merge pull request #5916 from jorisvandenbossche/doc-nanfunctions

DOC: add nanmedian/nanpercentile to reference docs",doc/source/reference/routines.statistics.rst
929e41d24ce8e1bd981f1d14f233df8cf68b30db,"DOC: add nanmedian/nanpercentile to reference docs
",doc/source/reference/routines.statistics.rst
a49ad1523c87766134aa98e04772d988040516fb,"New typemap for in-place arrays of arbitrary number of dimensions:
  (DATA_TYPE* INPLACE_ARRAY_FLAT, DIM_TYPE DIM_FLAT)
Added unittests, updated documentation.
",doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,tools/swig/README,tools/swig/numpy.i,tools/swig/test/Flat.cxx,tools/swig/test/Flat.h,tools/swig/test/Flat.i,tools/swig/test/Makefile,tools/swig/test/setup.py,tools/swig/test/testFlat.py
fd720e1d150738a027594b332e048e3431270201,"Merge pull request #5913 from charris/minor-gitwash-correction

DOC: Commit message lines should not excede 72 characters.",doc/source/dev/gitwash/development_workflow.rst
21c59aa50614730c66f1f2648b5f6b3aeae40472,"DOC: Commit message lines should not excede 72 characters.

The reason is that git log indents parts of the message and longer
lines will wrap. Linus has a post on this somewhere.
",doc/source/dev/gitwash/development_workflow.rst
08443023ddaf774d7b956323860be9b3ae2fa19a,"Merge pull request #5892 from andreabedini/master

Simplify numpy/distutils/__init__.py",numpy/distutils/__init__.py
12320f48eae2ffe50da9f92aed4639b4525b50eb,"DOC: update INSTALL.txt with info on binary installers and 32-bit Windows.

Closes gh-5832.

[ci skip]
",INSTALL.txt
3e86500a165efa4e3b54c724fb1812bec05b87f7,"MAINT: explicit fft copy
",numpy/fft/fftpack.py
fd94000ffd0281b7477b1114ba194b64378808c0,"Merge pull request #5909 from argriffing/linalg-astype-no-copy

MAINT: use copy=False in a few astype() calls",numpy/linalg/linalg.py
1ff2be174f86ebca2e7a006012bcc5744ace2f6e,"MAINT: conditional copy=False in some astype calls
",numpy/linalg/linalg.py
464e767f0667ecd7dbd56c89909f8c416729f0dd,"MAINT: skip copy=False for det and logdet
",numpy/linalg/linalg.py
177067a11edd031eba0280aa63143ded196c01e2,"MAINT: use copy=False in a few astype calls
",numpy/linalg/linalg.py
9dba7a4ce593bf67bf58aa0fbcb185173c3ec384,"Merge pull request #5899 from argriffing/improve-umath-linalg

MAINT: use more conservative integer types for umath linalg",numpy/linalg/umath_linalg.c.src
b9f5e85659a79929ccc811498e931608af58c4b7,"MAINT: more consistent notation in umath_linalg
",numpy/linalg/umath_linalg.c.src
ad4aa2555010c73cc0aebb35e09ca7a10e7d956e,"MAINT: use more conservative integer types for umath linalg
",numpy/linalg/umath_linalg.c.src
a79d9d35c1b1582e5e0b8487f5dd414d15944f2c,"Merge pull request #5893 from stefanv/hann

DOC: Fix spelling of Von Hann's surname",numpy/lib/function_base.py
7897da783e93c43711cf7d5b555674fefba4d16e,"DOC: Fix spelling of Von Hann's surname
",numpy/lib/function_base.py
7debda6fc2e66bc7fc74ade526a795cc381473a8,"BUG: np.broadcast should accept itself as an input

Fixes #5881
",numpy/core/src/multiarray/iterators.c
0c00f6910db141b6d514ded9a98857464a075838,"TST: np.broadcast should accept itself as input
",numpy/core/tests/test_numeric.py
c5cf20ab673c76f4b3ef7f85b4d1fd4149237772,"Merge pull request #5886 from jaimefrio/cross_axis

BUG: Handling of axisc in np.cross",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
86f99e867151ead43838eda2f214d42d833dd64a,"Merge pull request #5884 from jaimefrio/ma_compress_cleanup

MANT: handling of axis in np.ma.compress_nd",numpy/ma/extras.py
aa0532f362dc2fd398a78a838f0cd2c95cad19d8,"MANT: handling of axis in np.ma.compress_nd

Modified the handling that np.ma.compress_nd does of its 'axis'
argument, to more closely follow that of ufunc methods, including
error messages for wrong values.
",numpy/ma/extras.py
581927a4fcbc7d7c54b7b37e6edc121669863ea5,"BUG: Handling of axisc in np.cross

Fixes #5885 by ignoring `axisc` when both input vectors are 2D.
Also adds explicit checks for `axis?` parameters in bounds, to
provide more informative errors.
Also slightly simplified the calculation logic and documented the
assumptions in each branch with `assert`s.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
3b825d35fdcc72ae4790c70c139639a6bd7df178,"Simplify numpy/distutils/__init__.py

Thanks to the presence of

    from __future__ import absolute_import

we don't need different code paths for Python 2/3.
",numpy/distutils/__init__.py
960d234ef342c6eafa532cba5e17ca86d1995360,"MAINT: make runtests.py --python and --ipython a little more ergonomic

I'm tired of having to manually enable warnings and import numpy,
so maybe others are too.
",runtests.py
0a02b82ed72f0268875bfc6c70d1e8a8dad6c644,"Merge pull request #5879 from shoyer/broadcast-shape-32

BUG: fix _broadcast_shape (and broadcast_array) for len(args) > 32",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
aa50162b58e0226bf4f5c21ee1d74a94e85cd6d7,"BUG: fix _broadcast_shape (and broadcast_array) for len(args) > 32

Fixes gh-5862
",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
780cd6e70627f78f57cad3b1486e81936c1572a9,"BUG: np.nonzero behaving differently for 1-D arrays

Fixes #5837
",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_regression.py
0174f2ae5d9efc7d7459c20c99e31ace20a341ed,"Merge pull request #5873 from charris/style-fix-for-cov

MAINT: Simplify code in cov function a bit.",numpy/lib/function_base.py
a0bd6c78671a63b9aa1f875bffb4937e4991bbd6,"MAINT: Simplify code in cov function a bit.
",numpy/lib/function_base.py
9ceb5cdd6a7bd0c3402a7cd04a549adea9d7be41,"Merge pull request #4960 from tpoole/weighted_cov

ENH: add a weighted covariance calculation.",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
d87d2ca584b888bcc48fd2fd25c07eb0c08c0939,"ENH: add 'fweights' and 'aweights' arguments to covariance calculations.

'fweights' allows integer frequencies to be specified for observation vectors,
and 'aweights' provides a more general importance or probabalistic weighting.
",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
4fee91335ddd267c36935b26c126113c217a74e1,"Merge pull request #5870 from r-barnes/master

DOC: Fixed spelling mistake",numpy/polynomial/chebyshev.py
d7c7bf24473d0f56a0625e55f79fef7b55389a13,"Fixed spelling mistake
",numpy/polynomial/chebyshev.py
18c89dbf87929e68479b2272ad7ab4b321120773,"Merge pull request #5605 from shoyer/stack

ENH: add np.stack",doc/release/1.10.0-notes.rst,doc/source/reference/routines.array-manipulation.rst,numpy/add_newdocs.py,numpy/core/shape_base.py,numpy/core/tests/test_shape_base.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py
93d3b8dedc5cd602c867a234f07188fe5bd5479b,"ENH: add np.stack

The motivation here is to present a uniform and N-dimensional interface for
joining arrays along a new axis, similarly to how `concatenate` provides a
uniform and N-dimensional interface for joining arrays along an existing axis.

Background
~~~~~~~~~~

Currently, users can choose between `hstack`, `vstack`, `column_stack` and
`dstack`, but none of these functions handle N-dimensional input. In my
opinion, it's also difficult to keep track of the differences between these
methods and to predict how they will handle input with different
dimensions.

In the past, my preferred approach has been to either construct the result
array explicitly and use indexing for assignment, to or use `np.array` to
stack along the first dimension and then use `transpose` (or a similar method)
to reorder dimensions if necessary. This is pretty awkward.

I brought this proposal up a few weeks on the numpy-discussion list:
http://mail.scipy.org/pipermail/numpy-discussion/2015-February/072199.html

I also received positive feedback on Twitter:
https://twitter.com/shoyer/status/565937244599377920

Implementation notes
~~~~~~~~~~~~~~~~~~~~

The one line summaries for `concatenate` and `stack` have been (re)written to
mirror each other, and to make clear that the distinction between these functions
is whether they join over an existing or new axis.

In general, I've tweaked the documentation and docstrings with an eye toward
pointing users to `concatenate`/`stack`/`split` as a fundamental set of basic
array manipulation routines, and away from
`array_split`/`{h,v,d}split`/`{h,v,d,column_}stack`

I put this implementation in `numpy.core.shape_base` alongside `hstack`/`vstack`,
but it appears that there is also a `numpy.lib.shape_base` module that contains
another larger set of functions, including `dstack`. I'm not really sure where
this belongs (or if it even matters).

Finally, it might be a good idea to write a masked array version of `stack`.
But I don't use masked arrays, so I'm not well motivated to do that.
",doc/release/1.10.0-notes.rst,doc/source/reference/routines.array-manipulation.rst,numpy/add_newdocs.py,numpy/core/shape_base.py,numpy/core/tests/test_shape_base.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py
fb6426b3d9b25f5f7a8324fa1d9bab3f4c23dd95,"Merge pull request #5869 from wackywendell/notimpl

MAINT: Added more detailed messages to NotImplementedError messages.",numpy/ma/core.py
fc6f4481707b9d80bc9c87658f4157931719ef7d,"MAINT: Added more detailed messages to NotImplementedError messages.

Closes #5444.
",numpy/ma/core.py
c65fc9e36b287461040615a452e0268bbca9f3ca,"Merge pull request #5858 from jaimefrio/random_beta

BUG: random.beta with small parameters",numpy/random/mtrand/distributions.c,numpy/random/tests/test_regression.py
59de9f290b9180e316d319d6b70f65554cd2ef4e,"Merge pull request #5860 from sotte/neutral_element

DOC: sum/prod & empty array returns neutral elment",numpy/core/fromnumeric.py
8284c9cfdf153e6f51cad48b4abdb7519e5e5274,"DOC: sum/prod & empty array returns neutral elment
",numpy/core/fromnumeric.py
c7f121abb24e19c34246c8ad834dfdd5bd5ce8b2,"BUG: np.random.beta with small parameters produces NaNs

Fixes #5851
",numpy/random/mtrand/distributions.c,numpy/random/tests/test_regression.py
30e3d41b6d11c18e17eb283a61bbe9bbf4bb4d8f,"Merge pull request #5852 from rgommers/bento-vendor

MAINT: switch waf download to https://github.com/numpy/numpy-vendor",tools/travis-test.sh
d0f95cc844f324812ca61c7404fbbd7589cf6b20,"MAINT: switch waf download to https://github.com/numpy/numpy-vendor

Follow-up of gh-5829, which got merged too early.
",tools/travis-test.sh
21932fbfc217b4a8bc547fa267ea5597d7dcb59b,"Merge pull request #5847 from christianbrodbeck/fix/setdiff1d

BUG: setdiff1d return type

Fixes 5846",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
c05019eda16477f4be99f47755362c07e1acb5b8,"BUG: setdiff1d return dtype

Fixes #5846 (If called with an empty array as first argument, the returned
array had dtype bool instead of the dtype of the input array)
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
6bb8c0d46739d6d9bb23cb48670519d7eb620d4d,"Merge pull request #5843 from jaimefrio/interp_bug

BUG: Fix interp issues with small arrays",numpy/core/src/multiarray/compiled_base.c
c48068ee4d2f66a0dff7ed35fac8dd0992adfe44,"Merge pull request #5841 from jaimefrio/object_dtype_str

MANT: Remove size from string representation of object dtype",doc/release/1.10.0-notes.rst,doc/source/reference/arrays.dtypes.rst,numpy/core/src/multiarray/descriptor.c
8925950666b6da64f57ca629c4448cb6800706dc,"BUG: Fix interp issues with small arrays

Fixes #5705
",numpy/core/src/multiarray/compiled_base.c
498acae7f5746c899013bf9f85412beb26778463,"DOC: Document string dtype descriptor behavior
",doc/source/reference/arrays.dtypes.rst
d3a2991130938e05acc05f3beadc1a0cd33c1eb3,"DOC: Document changes in #5840 and #5841 in release notes
",doc/release/1.10.0-notes.rst
2a13af9d21eb4f7f83580e44586d692cdaa10868,"MANT: Remove size from string representation of object dtype
",numpy/core/src/multiarray/descriptor.c
56e9bd5b5a2fe56621c4cb02ad20e9b6e9c9ee9e,"Merge pull request #5848 from rgommers/fix-intelcompiler

BUG: distutils: fix a typo in 64-bit Intel compiler for Windows support.",numpy/distutils/ccompiler.py
0c9967bf21a98bb47a64b4f06238f6958e618478,"BUG: distutils: fix a typo in 64-bit Intel compiler for Windows support.

Snuck in in gh-5694.
",numpy/distutils/ccompiler.py
5ea48b8cca84089f77deda848c57f4422399f375,"Merge pull request #5840 from jaimefrio/dtype_size

MANT: Turn deprecated dtype string warnings into errors",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py
90d3778dbe130670b258e9185b3d504199bf7327,"Merge pull request #5845 from ewmoore/broadcast_to_doc

DOC: note versionadded for broadcast_to",numpy/lib/stride_tricks.py
682cd97e1f4485aa92e40684f7966d66a4a7371b,"DOC: note versionadded for broadcast_to

closes gh-5839
",numpy/lib/stride_tricks.py
45bbce70a1fd6800d471e5afcc176732aaba0b60,"MANT: Turn deprecated dtype string warnings into errors

Fixes #5790
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py
eecb2e3c07f29c0ac991d364a846a2f8293a432a,"Merge pull request #5748 from mhvk/numpyufunc-binop-fix

BUG Numpy ufunc binop fix for subclasses with __numpy_ufunc__ (closes #4815)",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/number.c,numpy/core/tests/test_multiarray.py
a29c296f0bf306a8824705567cbb4271f383f0ea,"Merge pull request #5838 from matthew-brett/master

BUG: revert use of !python for bdist_mpkg scripts",numpy/f2py/setup.py
2bc2676c8c2f750b61444560c9f7661cb0c15c6a,"BUG: revert use of !python for bdist_mpkg scripts

bdist_mpkg is a very crude install method that will assume the path to
Python, so we should not use the `#!python` form when installing scripts
in bdist_mpkg.
",numpy/f2py/setup.py
09e38f9e2f3a81a9a4c98f36780e791f60c665b1,"Merge pull request #5805 from jaimefrio/ix_intp

Ix intp",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
7b0b7cc601d1839657aca03a01056101beb64a68,"Merge pull request #5703 from ddasilva/ddasilva/compress_rowcols

ENH: Improve np.ma.compress_rowcols() performance, ENH: add compress_nd()",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
bdfea0af2036e74396b78e076e90170eddbbf670,"Merge pull request #5821 from behzadnouri/place-segfault

BUG: fixes segfault in np.place when vals is empty",numpy/core/src/multiarray/compiled_base.c,numpy/lib/tests/test_function_base.py
c01165f43068fea96722c172eb23efed4ca99763,"BUG: Fix handling of non-empty ndarrays
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
93bcedfd4e31e4e1eb92a5abf0de46464a154953,"Merge pull request #5836 from rgommers/bento-sgemv-fix

BLD: use fix for Accelerate SGEMV issue in Bento build.  See gh-5831.",numpy/core/bscript
7a02544da53df1547c2aa3f384773c48607a5d40,"BLD: use fix for Accelerate SGEMV issue in Bento build.  See gh-5831.
",numpy/core/bscript
ba29c7b224618b069644e747d6e9236f88accad4,"BUG: fixes segfault in np.place when vals is empty
",numpy/core/src/multiarray/compiled_base.c,numpy/lib/tests/test_function_base.py
883d052e3eb9b45a4bb87e7e84f487e0c9e5c882,"ENH: Introduce np.ma.compress_nd(), generalizes np.ma.compress_rowcols()

Provides a way to supress slices along an abitrary tuple of dimensions.
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
63e8babb47709ff14b1d728fd46029edcbded70c,"Merge pull request #5831 from charris/rebase-gh-5237

rebase-gh-5237 - BUG: Workaround segfault in Apple Accelerate framework SGEMV",numpy/build_utils/apple_accelerate.py,numpy/build_utils/src/apple_sgemv_fix.c,numpy/core/setup.py,numpy/core/tests/test_multiarray.py
cf3077696dd76d88e77173546a0d969eda3a7aa0,"BUG: Workaround segfault in Apple Accelerate framework SGEMV

SGEMV in Accelerate framework will segfault on MacOS X version 10.9
(aka Mavericks) if arrays are not aligned to 32 byte boundaries and the
CPU supports AVX instructions. This can produce segfaults in np.dot.
This patch overshadows the symbols cblas_sgemv, sgemv_ and sgemv
exported by Accelerate to produce the correct behavior. The MacOS X
version and CPU specs are checked on module import. If Mavericks and AVX
are detected the call to SGEMV is emulated with a call to SGEMM if the
arrays are not 32 byte aligned. If the exported symbols cannot be
overshadowed on module import, a fatal error is produced and the process
aborts. All the fixes are in a self-contained C file and do not alter
the multiarray C code. The patch is not applied unless NumPy is
configured to link with Apple's Accelerate framework.
",numpy/build_utils/apple_accelerate.py,numpy/build_utils/src/apple_sgemv_fix.c,numpy/core/setup.py,numpy/core/tests/test_multiarray.py
3c06833480d31d63a1e65729c5e3a1277ac2a82f,"Merge pull request #5828 from jaimefrio/frompyfunc_segfault

BUG: Fix segfault in frompyfunc with nout=0",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_regression.py
5e98be62a8b865c0b0abe894a37518aa67181c46,"Merge pull request #5829 from rgommers/bento-ci

TST: re-enable TravisCI testing with Bento.",.travis.yml,tools/travis-test.sh
d9eb7a5fce10a6bf1b15049536fbbd057f33f1fa,"TST: re-enable TravisCI testing with Bento.

Disabling was done in gh-5708, due to the Waf download site being down for a
while.
",.travis.yml,tools/travis-test.sh
6049c6691d885484a03331a939a518fb35738a48,"BUG: Fix segfault in frompyfunc with nout=0

Fixes #2014
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_regression.py
3782f7e0bfd9ac230b672a1295df580a40e9e109,"Merge pull request #5825 from charris/cleanup-gh-5583

BUG: Make ma.where consistent with unmasked where.",numpy/ma/core.py,numpy/ma/tests/test_core.py
63ff998b5789a5aa7ce7830a258445544f1063ae,"MAINT: Refactor numpy.ma.where.

Use np._NoValue as default values of 'x' and 'y' in signature. That
allows None values to be used for compatibility with the unmasked
version of where and makes detection of the case when neither is
given easier.

Use properties *.data and *.mask instead of *._data and *._mask. That
may avoid some subtle problems.

Minor style cleanups.
",numpy/ma/core.py
602836b99c2a046574dd352def24980b2da9d9b2,"BUG: Fix `numpy.ma.where` to be consistent with unmasked version.

Closes #5679.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
f3e7ef7f034bddcee856f6722db7035ba549ef19,"Merge pull request #5824 from charris/cleanup-gh-5516

BUG: Fix assignment of mask in ma.masked_where",numpy/ma/core.py,numpy/ma/tests/test_core.py
d7ffaea9855834c6d1a51a788ff0e6ffbe929e01,"TST: Add test for fix to issue #2972

Add a test to TestMaskedArrayFunctions to verify that a masked
structures array created with masked_where has a structured mask. The
mask was previously unstructured, leading to bug #2972.
",numpy/ma/tests/test_core.py
a7d663f0f36c296caef7494d167b32407d6c3856,"BUG: Fix mask assignment in masked_where to use .mask property.

This commit fixes a bug in numpy.ma.masked_where when it is passed a
structured array.  masked_where was inadvertently setting the _mask
field of a structured array to a non-structured array, so we would end
up with a masked structured array where x.data was structured, but
x.mask was not.  This led to troubles for methods such as __getitem__,
__repr__, and tolist.  By writing to the property .mask instead of
._mask, this problem is fixed.

Closes #2972.
",numpy/ma/core.py
ad99656c5d13200b51404e06b2bd3a2ad9ef7439,"Merge pull request #5817 from matthew-brett/master

MRG: add module to test installed scripts",.travis.yml,numpy/tests/test_scripts.py,tools/travis-test.sh
83e0d1762ed96c5fa142c14546b1f188f8d68ec6,"TEST: add module to test installed scripts

Module tests whether we can run f2py and return correct version.

Skip this test when running in-place (we don't install f2py in that
case).

Use our own virtualenvs in travis-ci to avoid picking up travis' numpy.
",.travis.yml,numpy/tests/test_scripts.py,tools/travis-test.sh
38cb7aa3815748c1d719e918718b7726a18ed1fc,"Merge pull request #5815 from matthew-brett/f2py-shebang-fix

BUG: fix f2py shebang line for bdist wheel, egg",numpy/f2py/setup.py
bd821f56ce4864ab3e327378de518ba45df208fa,"Merge pull request #5814 from argriffing/vonmises-docstring

DOC: improve the vonmises docstring example",numpy/random/mtrand/mtrand.pyx
19220c47cf6138b4f42f67b9b4d80f2575e22145,"ENH: add bdist_mpkg, bdist_wininst to binary dists

Add other binary distribution formats to list of build commands that
should generate !python shebang lines.
",numpy/f2py/setup.py
fee5ec41de8ebb1b0be0b97aab27d8c672d8ea44,"BUG: fix f2py shebang line for bdist wheel, egg

Command `bdist_wheel` was generating a shebang line for f2py that uses
the Python path for the building Python.  If we are building a wheel or
an egg, use the generic `#!python` shebang line for the f2py script
instead, which setuptools will modify at install time.

Closes gh-5812.
",numpy/f2py/setup.py
8206e8df495e0bd050e57cd74f6177058a61dc2b,"DOC: improve the vonmises docstring example
",numpy/random/mtrand/mtrand.pyx
b282d2abf8850f4e47eec73e44d250ac0b091284,"Merge pull request #5791 from charris/indexing-explanations-cleanup

Indexing explanations cleanup",doc/source/reference/internals.code-explanations.rst
0d31348ea936722a940d9ef402e7fa6f4e34b7de,"MAINT: Spelling and style fixes to internals.code-explanations.rst.

Basic cleanup of the new indexing documentation. Also replace
""subspace"" by ""subarray"" and try to clarify mixed advanced and view
indexing.

[skip ci]
",doc/source/reference/internals.code-explanations.rst
1cfe6d976cda243cb23d594e644dfb7fa1c162de,"Merge pull request #5800 from behzadnouri/nonc-chi2

BUG: Fixes random.noncentral_chisquare when 0 < df <= 1",numpy/random/mtrand/distributions.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
f06b1210d7171b4a452d0c9c67cde7b1a130303e,"TST: Added tests for ix_
",numpy/lib/tests/test_index_tricks.py
2a8efb1850f9be15c5129369a127fb56dabf0fb3,"BUG: make empty inputs to ix_ create an empty int typed output

Fixes #5804
",numpy/lib/index_tricks.py
fbd381726dde9849060db9a5ccffb6d43194f384,"BUG: Fixes random.noncentral_chisquare when 0 < df <= 1

Closes #5766.
",numpy/random/mtrand/distributions.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
588aff4847eaaec1b3192bf878dc515298b9fdcf,"Merge pull request #5797 from jaimefrio/py_return_none

MANT: Use Py_RETURN_NONE whenever Py_None is returned",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/compiled_base.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/f2py/src/fortranobject.c,numpy/linalg/lapack_litemodule.c
a8b1c0c6d10e1939d9001a52a962ecd6ef06500c,"Merge pull request #5597 from zerothi/ENH-distutils

BLD, ENH: Reading of extra flags from site.cfg to extend flexibility",doc/release/1.10.0-notes.rst,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/system_info.py,numpy/distutils/tests/test_system_info.py,site.cfg.example
3cc68c97c8a3d3d22389b6b01020534a84b946cd,"MANT: Use Py_RETURN_NONE whenever Py_None is returned
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/compiled_base.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/f2py/src/fortranobject.c,numpy/linalg/lapack_litemodule.c
77c20d88ddb50c3d63ebf49324152ca6f07e0ce2,"Merge pull request #5796 from jaimefrio/more_warnings

MANT: Remove several compiler warnings",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/umath/simd.inc.src,numpy/random/mtrand/distributions.c
9ec8e5c0af892abe25eee4f269bd225dac47414b,"MANT: Use proper abs function for pointer addresses in simd.inc.src
",numpy/core/src/umath/simd.inc.src
fa9e8c4a6f8eb5e5a72382cad226b881c0acdc52,"Merge pull request #5792 from jaimefrio/unused_vars

MANT: Remove unused variables from _PyArray_DescrHashImp",numpy/core/src/multiarray/hashdescr.c
d61152aaab001403561f9ff4666166a798948d30,"Merge pull request #5793 from jaimefrio/pyobject_cast

MANT: Add castings to PyObject in PyArray_Round",numpy/core/src/multiarray/calculation.c
5d0f474de2a6ac953b6a26abb54515640db64bbf,"MANT: Use labs, not fabs, for integer abs in distributions.c
",numpy/random/mtrand/distributions.c
b4245a9af8c64025ee284c937e73ef9e2c0d7331,"BUG: Fix wrong NULL checks in multiarray_tests.c.src
",numpy/core/src/multiarray/multiarray_tests.c.src
4f28ca357d2cc15a01b270ad3c5781febe864af9,"MANT: Add castings to PyObject in PyArray_Round
",numpy/core/src/multiarray/calculation.c
d37229972539fdc1e6d4a812758380a758461654,"MANT: Remove unused variables from _PyArray_DescrHashImp
",numpy/core/src/multiarray/hashdescr.c
98a9daeed84ea886c7994f2c179b0768356164a0,"Merge pull request #5785 from jaimefrio/compiler_warnings

BUG: Fixed wrong return of PyArray_Partition on failure",numpy/core/src/multiarray/item_selection.c
6981594b599dbc46d16c5fbc6586199886b11a44,"DOC: Update indexing implementation explanations.
",doc/source/reference/internals.code-explanations.rst
9d7beb16041bc4d7d458dbe000905b4e9956c01b,"Merge pull request #4453 from abalkin/issue-4452

BUG: Masked array addition does not work when dtype=object",numpy/ma/tests/test_core.py
1cc2f8bbd69fbe48ed1bc4c00c77956f289aa56c,"TST: Test that masked array addition works when dtype=object

See issue #4452.
",numpy/ma/tests/test_core.py
eb81ac4f57e8e4b1ad28188b5e0e2dc9135b5c10,"Merge pull request #5784 from jaimefrio/list_overflow

BUG: Use npy_intp instead of int in ctors.c",numpy/core/src/multiarray/ctors.c
ea1036cc11d74d7f2a795723f12ab28456e5ab62,"Merge pull request #4612 from Nodd/loadtxt_comments

ENH: Multiple comment tokens in loadtxt",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
e9d04e97167b6aa360a2fc40da721430c4ce101b,"Merge pull request #5789 from pitrou/identity_steal_none

BUG: reference stolen from None when looking up a ufunc's identity attribute",numpy/core/src/umath/ufunc_object.c
e440e674e5d332f99a42bd488c6900829f6d55a2,"BUG: reference stolen from None when looking up a ufunc's identity attribute

A new reference must be returned by the C getter function, not a borrowed one.
",numpy/core/src/umath/ufunc_object.c
b635ba42007a69c8fa4dabb1e6668e26447e0fb3,"Merge pull request #5786 from pitrou/record_dtype_hash

BUG: fix instability of structured dtype hash",numpy/core/src/multiarray/hashdescr.c
c1a2a0e583b5cd5e582c845717b1a2eb6bd0e194,"BUG: fix instability of structured dtype hash

The hash value of a structured dtype was dependent on iteration order
of the fields mapping, which could make (in rare conditions) two
equal dtypes hash to different values.  We now consider the fields
in deterministic order, according to the names property.

Closes #5715.
",numpy/core/src/multiarray/hashdescr.c
e1e05e12898c3b56c635cef916d2fbb2b91b9d05,"Merge pull request #5787 from pitrou/abs_neg_zero

BUG: fix abs() of floating point scalar on negative zeros",numpy/core/src/umath/scalarmath.c.src,numpy/core/tests/test_scalarmath.py
af7d8e5a2289b47654360b09031eaaf9c0b911af,"Merge pull request #5788 from pitrou/complex_round_explicit_output

BUG: fix round() on complex array with explicit output",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
d6b20d1de81975293373f9bf234358f7338ef0a0,"BUG: fix round() on complex array with explicit output

Closes #5779.
",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
fb93254e97e04a99c451701a9177468866eadd93,"BUG: fix abs() of floating point scalar on negative zeros

Closes #5781.
",numpy/core/src/umath/scalarmath.c.src,numpy/core/tests/test_scalarmath.py
d73f23b092c3b44c279412c4833eb6bd953b713a,"BUG: Fixed wrong return of PyArray_Partition on failure

On failure, PyArray_Partition should return -1, but was returning
NULL in a couple of unlikely cases.
",numpy/core/src/multiarray/item_selection.c
8a590fb4b0d54eee8115b15169ce092b74616f64,"BUG: Use npy_intp instead of int in ctors.c

Closes #5783
",numpy/core/src/multiarray/ctors.c
7a84c5660539bb210746ba6b9b8e38d82d9fd330,"ENH: Let MaskedArray getter, setter respect baseclass overrides
",doc/release/1.10.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
36dbfa5dfd62c559dfdc4aa49bb0192df8a33abd,"ENH: Multiple comment tokens in loadtxt
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
02b858326dac217607a83ed0bf4d7d51d5bfbfbe,"Merge pull request #5316 from juliantaylor/align-fixes

fix 1.9 alignment issues",numpy/core/setup.py,numpy/core/src/multiarray/common.c,numpy/core/src/private/npy_config.h,numpy/core/tests/test_multiarray.py
efcf028dcca34099f9e8506c7189715a5dc9a5dd,"Merge pull request #5774 from rgommers/gfortran-version

BLD: distutils: more robust gfortran version checking.  Closes gh-5768.",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
73471de0ca51ed83519c1da60640f7ef865c35b4,"BLD: distutils: more robust gfortran version checking.  Closes gh-5768.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
e89593f89044571213b4994ce1b92ee016424b33,"Merge pull request #5770 from pv/npyio-pickle

ENH: add options for disabling use of pickle in load/save",numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test_format.py
a2bd3a7eabfe053d6d16a2130fdcad9e5211f6bb,"ENH: add options for disabling use of pickle in load/save
",numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test_format.py
0752872542593bb8703977d5d1e458dbca0cb712,"Merge pull request #5764 from Linkid/doc/syntax

DOC, MAINT: fix typo in np.insert docstring",numpy/lib/function_base.py
c1a3fcc07c6b0de34668831676813b96e355fffd,"DOC, MAINT: fix typo in np.insert docstring
",numpy/lib/function_base.py
3c5409e4e38e6034d69d0042bf2a3bc854ef2e53,"Merge pull request #5757 from helderc/patch-1

DOC: Docstring of gradient() function",numpy/lib/function_base.py
a5416bed1620ba5d825a397914309445e8a51425,"DOC: Docstring of gradient() function

Updating of docstring of gradient() function specifying the return is a `list` of `ndarray`.
",numpy/lib/function_base.py
cf2f063478d8bffa03a6c37d88365978e7f4a877,"Merge pull request #5751 from helderc/patch-1

DOC: Return of gradient() function",numpy/lib/function_base.py
34a40a944a4011211104fbbf00b960777a34e982,"Merge pull request #5713 from cowlicks/bug-5712

Fix read_array_header_*",numpy/lib/format.py,numpy/lib/tests/test_format.py
b5645433f6322c9d491cc0fbddf71ea0aa84fcd9,"DOC: Return of gradient() function

This is an improve of documentation for gradient() funcion as commented in #5628",numpy/lib/function_base.py
475a6403f9b10d2c4fa30fa0ad807b9ca1d2d0d6,"BUG: don't ignore version passed to format.write_array

Previously the passed in version was ignored
",numpy/lib/format.py
8b858d1ba2203fda94f0f60d41d6502e855437b1,"Merge pull request #5750 from rgommers/cython-warning-ndarray

MAINT: add warning filter for possible ""ndarray size changed"" Cython noise",numpy/__init__.py
524208a537aed9765aac1d7eb553eac9b82d32f1,"MAINT: add a warning filter for possible ""ndarray size changed"" Cython noise.

See gh-432 for details.  Motivation for adding this now is the discussion
on gh-5343.
",numpy/__init__.py
d1153b4cba5510bd1961e3a7ae7f0c07c124a202,"Add tests that __numpy_ufunc__ works with subclasses.

In particular, for a class S3(S2), where S2 defines __numpy_ufunc__, ensure
that, e.g., S3() + S2() does *not* pass control to S2 if S2 and S3 share the
same __radd__.
",numpy/core/tests/test_multiarray.py
6ba4fed3aa26979734faa462e172959fad69723b,"BUG: core: inplace ops don't have corresponding rhs ops, so no need to check the slot
",numpy/core/src/multiarray/number.c
367b4094125062fa9018db0f310b28780259f29b,"BUG: core: ensure binop execution uses ufuncs as fallback

These changes only affect objects defining __numpy_ufunc__. Other
objects use the __array_priority__ mechanism to decide whether
NotImplemented should be returned or not.

The binops previously returned NotImplemented even if other._r<op>__ is
ndarray.__r<op>__, rather than trying to evaluate the result via ufuncs.
This causes problems in binops of two objects that both subclass from
ndarray and define __numpy_ufunc__.

The solution added here makes the total logic as follows:

    def __binop__(self, other):
        if (hasattr(other, '__numpy_ufunc__') and
            not isinstance(other, self.__class__) and
            hasattr(other, '__rop__') and
            other.__class__.__rop__ is not self.__class__.__rop__):
            return NotImplemented
        return np.binop(self, other)
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/number.c
f1f9e14e5d63aee6c8309ad425e3928192c0873b,"Merge pull request #5747 from jaimefrio/repeat_broadcast

BUG: np.repeat does not properly broadcast size 1 repeat arrays",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
e05b75880911172ac2ca4a589aeca28c0ac38729,"Merge pull request #5343 from pitrou/cache_dtype_hash

Fix #5339: cache dtype.__hash__.",doc/release/1.10.0-notes.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/tests/test_dtype.py
cca2c1a4fecfa5533b5579204c5f28a12c5b078a,"ENH: cache dtype.__hash__

Computing the type of a dhash can be slow for complex (e.g. structured)
dtypes.  Hashing dtypes can be useful in some applications, such as
when doing type-based dispatching, and speed can be critical in those
cases.  This enhancement caches the once-computed hash value in the
dtype structure, so as to save time on further lookups.  The cached
value is invalidated in the rare cases where the dtype is mutated.

Benchmarks numbers:

python3.4 -m timeit -s ""import numpy as np; t=np.dtype('uint64')"" ""hash(t)""
* before patch: 1000000 loops, best of 3: 0.498 usec per loop
* after patch: 10000000 loops, best of 3: 0.0616 usec per loop

python3.4 -m timeit -s ""import numpy as np; t=np.dtype([(s, 'f') for s in 'abcdefghij'])"" ""hash(t)""
* before patch: 100000 loops, best of 3: 4.43 usec per loop
* after patch: 10000000 loops, best of 3: 0.0603 usec per loop

Closes #5339.
",doc/release/1.10.0-notes.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/tests/test_dtype.py
c3cd4bfa57992bb804f5efc41e93e5354d7dfef3,"Merge pull request #5742 from charris/add-test-to-gh-5732

Add test to gh 5732",numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
77e433a26e3d02d234dd3fb5155e3467aad639d0,"BUG: np.repeat does not properly broadcast size 1 repeat arrays

Closes #5743
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
acbd6a9d4be019629414ec5f9a91c02bce7dec14,"BUG: Refactor nan_to_num and make list inputs work in Python > 3.2.

Also fix the documentation to reflect current behavior

1) Copies of the input are always returned.
2) Type is preserved, in particular, integer is not upcast to float.

Note that the function now accepts all types, not just inexact and
integer. The lack of upcast is present since at least numpy 1.5, but
may be a bug.
",numpy/lib/type_check.py
71dea15af12ca296cb0f360f09bbedd7c5edfd15,"TST: Test nan_to_num with integer list input.
",numpy/lib/tests/test_type_check.py
61a546d4d9fa2ade218162fb3b048681cc83190c,"BUG: Integer list passed into nan_to_num results in ValueError.

Fix is to properly set array type.

Closes #1478
",numpy/lib/type_check.py
147c60f83f401037ff29593826d2c5729a73c2c5,"Merge pull request #5733 from ahaldane/keepdim_doc

ENH sync ndarray methods doc/args with numpy function doc/args",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/tests/test_multiarray.py
8d47d697dad06116abe2b40ad6ee78f867292209,"ENH sync ndarray methods doc/args with numpy function doc/args

Modified the docstrings to all, any, sum, prod, mean, var, std, min, max
to add keepdims argument.

Added 'out' keyword parameter to numpy.argmin, numpy.argmax, to mirror
ndarray methods.

Updated ndarray.clip docstring to give correct parameter description.
",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/tests/test_multiarray.py
8b6effadd7836f7e80f0f3e7dd9dd43d20ad1590,"Merge pull request #5709 from abalkin/issue-5185

BUG: Implemented MaskedArray.dot",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py
4e0cd7b9585ad6da1fce9fe35596b88e8204af0d,"TST: tests for format.read_array_header_* and test read_magic
",numpy/lib/tests/test_format.py
0b0c8035a4e2629cdb0fcafb2a59840f77ebec5c,"BUG: Make read_array_header_* return results

Previously read_array_header_1_0 & read_array_header_2_0 were not
returning the documented results.

Closes #5602
",numpy/lib/format.py
bf8d3329d43bf534e45cb8182a6d712138566cdc,"Use Python 2.6 compatible assertions in tests.
",numpy/ma/tests/test_core.py
799a4c7e66b5e6ab6e9d48b29e386c39c991955e,"Merge pull request #5731 from RittaNarita/norm-axis-fix

BUG: Fix linalg matrix norms when given negative axes.",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
188ed4f314354f8e2f35937d205da5cd4ca1c175,"Made dot return proper type.
",numpy/ma/core.py
2383bd624992e4ea3e1b9d56f128ccf5d1a9eb5a,"Fixed out!=None case, added tests.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
61caa22481e43da734cd964d19e36de471c2ca60,"TST: Make the test for linalg matrix norms coverage complete
",numpy/linalg/tests/test_linalg.py
fa372af5e82637cccd494f044517b6e48b9ca456,"BUG: Fix linalg matrix norms when given negative axes.
",numpy/linalg/linalg.py
061aa26e1b772d46d3b97018cabb7d01637284cd,"Merge branch 'gh-5685', docstring cleanups for mtrand.pyx.

* gh-5685:
  DOC: Some cleanups of mtrand.pyx docstrings.
  DOC: Minor edits to docstrings to improve consistency in the module
  DOC: Incremental improvement in random module docstrings
",numpy/random/mtrand/mtrand.pyx
037dd995b2ec89c68810cef8edb137c3f4c8b403,"DOC: Some cleanups of mtrand.pyx docstrings.

- Spelling fixes
- Remove blank lines between references, and
- Some style fixes in examples.

[skip ci]
",numpy/random/mtrand/mtrand.pyx
e1a96a1bfd931017459909b4ede412e9fb390a14,"DOC: Minor edits to docstrings to improve consistency in the module

Fixed a number of references that were malformatted and broken links.
Module still needs work, particularly in standardizing return values.
",numpy/random/mtrand/mtrand.pyx
8c5f34bad1d34b40e81efff69187ab53bbe8a41e,"DOC: Incremental improvement in random module docstrings

Fixed some broken links, references, and missing values.  Also reverted
some earlier edits to return value descriptions to make them less
confusing.
",numpy/random/mtrand/mtrand.pyx
4679ff2380c01f18ea8cfd2d89838ba53f6381de,"Merge pull request #5724 from ContinuumIO/numpy-bug-5719

BUG: Fix segfault with custom dtypes ",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_dtype.py,numpy/core/tests/test_ufunc.py
30ebad65fcaee0f4a20f7438616419211ea398b4,"STY, PEP8: Avoid wildcard imports
",numpy/core/tests/test_ufunc.py
48c582fc733c3db1a7c25a505779ce4608e07a1a,"BUG: Fix astype issue with custom dtypes

Using astype method to convert from custom dtypes should throw an
OverflowError is the destination is too small. Previously it was
segfaulting.

closes bug 5719
",numpy/core/src/multiarray/dtype_transfer.c
9713a276df05f16aa9b8b47f6a9418db1133a4ec,"TST: Regression test for gh-5719

Previously this would cause a segfault, now we check that this case
raises an OverflowError.
",numpy/core/tests/test_dtype.py
a4cd4744c08f84c624c34ff8bd1aff248ede64a8,"Merge pull request #5723 from ContinuumIO/rand-docs

DOC: Covariance matrix should be symmetric",numpy/random/mtrand/mtrand.pyx
1f6e7cc470c6d5af23b2467863f42108e6c5f545,"Merge pull request #5714 from seberg/fancy-object-assign

BUG: Fix advanced object non-array value assignment",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
c0c6690d0cdfe820d14d5d8520ddd999c32a156a,"DOC: Covariance matrix should be symmetric
",numpy/random/mtrand/mtrand.pyx
e6807bed9d74d8962c7c0b20054edaf33169b1ae,"BUG: Fix advanced object non-array value assignment

If the value array in an advanced indexing assignment was a non-array
and the array being assigned to is an object array, a temporary
array is created to make the object assignment work well like
slicing in general.
However, this array was created with the swapping of the mapiter
object. So we have to swap it back as if it was an array being
subscripted with MapIterSwapAxes.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
3fdf1883369c5cd40ad7022ad46a629f2284a7a3,"BUG: Implemented MaskedArray.dot

MaskedArray used to inherit ndarray.dot which ignored masks in the operands.

Fixes issue #5185.
",numpy/ma/core.py,numpy/ma/extras.py
e3101647ef7c262fa6b4ddc8fdf79453f8a1e05c,"Merge pull request #5708 from charris/disable-travis-bento

TST: Disable travis bento build.",.travis.yml
3fc612828348fa40ea2153a809a1e15e36316d13,"TST: Disable travis bento build.

The waf.io site needed looks to be offline at the moment. This
disables the travis bento build test that depends on it.
",.travis.yml
17ff4236dcfdc95a4ab22bf32df96b0417e7ad43,"Merge pull request #5707 from jaimefrio/format_number

BUG: wrong format field for 2.6",numpy/core/tests/test_multiarray.py
d1d351fc05f1882a1fc32a6ad14de25daea023d1,"BUG: wrong format field for 2.6
",numpy/core/tests/test_multiarray.py
36f742d2007b980cac9bd84401edaa71de6f872e,"Merge pull request #5704 from jaimefrio/empty_sort

BUG: (arg)sort and (arg)partition handling of empty multidim arrays",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
dd30b50a5125da8fa037220e0161ce1ce3ddec0c,"BUG: (arg)sort and (arg)partition handling of empty multidim arrays

Fixes an error raised by the (arg)sorting and (arg)partitioning
functions, when called on an empty multidimensional array along
an axis that doesn't have 0 length.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
59be9173bd909c4dc472b17d8c9f7f62cd11f8bd,"Merge pull request #5683 from matthew-brett/deprecate-bias-ddof

BUG: deprecation for ignored corrcoef args",doc/release/1.10.0-notes.rst,numpy/__init__.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_regression.py
a55c7fdfb45451b9b0334b68569548db42c3ac06,"Merge pull request #5694 from rgommers/intel-ccompiler

ENH: distutils: add compiler classes for Intel compilers + MSVC-built Python",numpy/distutils/ccompiler.py,numpy/distutils/intelccompiler.py
95d1e43d8b087118b4ebdb05b61415158960de29,"Merge pull request #5701 from argriffing/frobenius-norm-speedup

MAINT: use the fast elementwise 2-norm implementation more often in linalg.norm",numpy/linalg/linalg.py
c3599d271ec9d5402f1cd805528e5ad6c09ecf02,"MAINT: use the fast elementwise 2-norm implementation more often in linalg.norm
",numpy/linalg/linalg.py
ab64179ffd2b9705cb4308323062436cd1ac040d,"ENH: distutils: add compiler classes for Intel compilers + MSVC-built Python.

Thanks to Intel for contributing this patch.  Contact: Yolanda Chen.
",numpy/distutils/ccompiler.py,numpy/distutils/intelccompiler.py
2e0db1c90e7a98322a1222a32da44635474fc4a6,"Merge pull request #5693 from rgommers/numpyswigfile

MAINT: add licence text to numpy.i (SWIG typemaps) file",LICENSE.txt,tools/swig/numpy.i
b89bcd05f10001b048ffd12bdaa550bcd0620fa0,"DOC: put a copy of the text in LICENSE.txt into tools/swig/numpy.i

Reason: numpy.i is supposed to be copied, not used from within an installed
Numpy version.

Closes gh-5690

[ci skip]
",tools/swig/numpy.i
af40d31825db0813da877aed1e49fef1e6af41e3,"MAINT: update year of copyright note in LICENSE.txt
",LICENSE.txt
5b84a29b257779e68eb44928b9a95290d7690ec4,"Merge pull request #5689 from rgommers/array2string-doc

DOC: add array2string to reference guide and explain relation to array_r...",doc/source/reference/routines.io.rst,numpy/core/arrayprint.py
dafb597e9d03607130c25afbee3d4bec34a68866,"DOC: add array2string to reference guide and explain relation to array_repr/str

Closes gh-5684.

[ci skip]
",doc/source/reference/routines.io.rst,numpy/core/arrayprint.py
594c64cedc3e521bc223fb90f29f22b034de3839,"ENH: deprecate bias and ddof arguments to corrcoef

The bias and ddof arguments had no effect on the calculation of the
correlation coefficient because the value cancels in the calculation.

Deprecate these arguments to np.corrcoef and np.ma.corrcoef.
",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_regression.py
4b4d8510739c9ea7a80391e2656d84a3c5e4a9c3,"ENH: _NoValue class at top-level to test kwargs

Add _NoValue class at top level to make it possible to detect when
non-default values got passed to a keyword argument, as in:

    def func(a, b=np._NoValue):
        if b is not np._NoValue:
            warnings.warn(""Argument b is deprecated"",
                          DeprecationWarning)
",numpy/__init__.py
c60f1c6d944b25c5a001cf80e9b65dd5d44ed85d,"Merge pull request #5682 from matthew-brett/add-clear-catch-warnings-cm

MRG: new clear_catch_warnings context manager",doc/release/1.10.0-notes.rst,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
4c9e5bd362643aadfc027184682c067aa2f10cda,"DOC: `clear_and_catch_warnings` release note

Add release note on `clear_and_catch_warnings`.
",doc/release/1.10.0-notes.rst
28971cda67d22a107ceb50514eb9d53765c0258b,"ENH: add clear_and_catch_warnings context manager

Add context manager for tests that, on entry, clears record of any
previous warnings from given modules, so that any warning raised in the
context block does get raised, rather than suppressed by a previous
warning causing an entry in the `__warningregistry_`` of the module.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
19d861edd87e0c69aeba5cb5a7d6671518d840a3,"Merge pull request #5670 from jaimefrio/sort_refactor

MAINT: refactor PyArray_Sort and PyArray_Partition",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
ace4eeca7d7fd9b13310241c514aab33a9c74d0b,"Merge pull request #5677 from jaimefrio/override_sig_normalize

Override sig normalize",doc/source/reference/ufuncs.rst,numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_multiarray.py
cb2405f6c82863c0f2263a077f0010584b36bbb3,"DOC: 'signature' preferred over 'sig' as ufunc keyword argument
",doc/source/reference/ufuncs.rst
533f616b0ca7be6efa28a7ae58db9235b4348d10,"ENH: normalize 'sig' to 'signature' in ufunc override

Closes #5674
",numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_multiarray.py
13032bb7008e10a90b84f1ef29b3d99a00e0a2e4,"Merge pull request #5676 from jaimefrio/ufunc_at_nout

BUG: ufunc.at only works on single output ufuncs",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
ce7461eecea4b1952353c9f5459e51447206c5fc,"Merge pull request #5673 from jaimefrio/ufunc_maxargs

BUG: check for nargs <= NPY_MAXARGS in ufunc constructor",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/core/tests/test_regression.py
6ac5172a6ee1ee65856086dc0556c81909248ab9,"BUG: ufunc.at only works on single output ufuncs

Fixes #5665
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
c4db04b6d75eafd99e692027c1391eebf88454e9,"BUG: check for nargs <= NPY_MAXARGS in ufunc constructor

Fixes #5672
",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/core/tests/test_regression.py
fd3b0fc2481cfe2aad960fe05baf11be46a0dd3f,"Merge pull request #5585 from Kreiswolke/BugFixTile

BUG: Fixed issue #4679 - make numpy.tile always return a copy",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
e84454aded855a70c3dcfd586a3a0c0e108d0ab7,"Merge pull request #5519 from jaimefrio/array_interface_dtype

ENH: PyArray_FromInterface checks descr if typestr is np.void",numpy/core/src/multiarray/ctors.c,numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
27c68a30de03fbf65bc949e014851644f436fda8,"Merge pull request #5659 from jaimefrio/strict_out_check

ENH: Strict checking of ufunc keyword argument names",doc/source/reference/ufuncs.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
0ac3920c1c1a015deb416bd93c370f4f9ab0baf0,"MAINT: refactor PyArray_Sort and PyArray_Partition

Modified the generic sort functions, npy_quicksort, npy_heapsort
and npy_mergesort, to have a signature compatible with the other
sort functions. Got rid of the global compare ugliness, and
refactored PyArray_Sort and PyArray_Partition to use the new
functions through a call to _new_sortlike.
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
a866fdd2c9481de18241a27778679013042d5349,"Merge pull request #5666 from charris/fix-loadtxt-complex

BUG: loadtxt fails with complex data in Python 3.",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
f1cfc4f00cb61a363976ea0e38c80500ab91d172,"BUG: loadtxt fails with complex data in Python 3.

The problem is that the Python complex type constructor only accepts a
pair of numbers or a string, unlike other numeric types it does not work
with byte strings. The numpy error is subtle, as loadtxt opens the file
in the default text mode, but then converts the input lines to byte
strings when they are split into separate values. The fix here is to
convert the values back to strings in the complex converter.

Closes #5655.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
6eef837b4ae321e8bd2dffab4df68a4869f00860,"Update shape_base.py

So removed the paranthesis and included the return statement.",numpy/lib/shape_base.py
a7bea17c679804a4bbde0676179c7c7b53b8ae00,"Merge pull request #5661 from stuarteberg/patch-1

docs: `linalg.eig()`: Add ""See Also"" ref to `eigh()`",numpy/linalg/linalg.py
96b038284b5750da6f14526b18b16b69224a16af,"DOC: `linalg.eig()`: Add ""See Also"" ref to `eigh()`
[skip ci]
",numpy/linalg/linalg.py
3a39a0e6ac0d85d3365c0671d8010441180a7d95,"ENH: Strict checking of ufunc keyword argument names

Raises a TypeError if any of the keyword arguments supplied to a
ufunc does not exactly match the name in the signature. Prior to
this, trailing characters were discarded, e.g. 'out2' would be
treated as if it where 'out'.
",doc/source/reference/ufuncs.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
8e026a2225996e9b790e4c63816c5f6c985a5d20,"Merge pull request #5658 from endolith/patch-1

DOC: Add note about random seeds for unit testing",doc/TESTS.rst.txt
0784049118233ef7b087308a5e7bfc638085b7a4,DOC: adjust wording of random data note,doc/TESTS.rst.txt
0650e6327be400c2b75d5a6277702a3faad176cb,"Merge pull request #5594 from newville/master

interp(): add storage of previous value for next index lookup",numpy/core/src/multiarray/compiled_base.c
29c019a7f5e348b31daf946bfcc45e72482159b6,"Merge pull request #5565 from juliantaylor/pep338-f2py

ENH: make f2py an executable module",numpy/f2py/__main__.py,numpy/f2py/setup.py
0808ae8fc5e3d539989aeceb74cbac35bb55598e,"ENH: PyArray_FromInterface checks descr if typestr is np.void

When the 'typestr' member of the __array_interface__ dictionary defines
a np.void dtype, check the 'descr' member, and if it is a valid dtype
description and it is not the default one, use it to construct the
dtype for the array to return.

This fixes #5081, as as_strided no longer has to worry about changing
the dtype of the return.
",numpy/core/src/multiarray/ctors.c,numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
82c03c24f1dd40efc9b9b00783035898c6eacdfb,Add note about random seeds,doc/TESTS.rst.txt
9fc077332b34a7b2a90126f5ae6cc50d57162db5,"Merge pull request #5623 from rev112/fix_overflow_hypergeometric

BUG: Fix potential overflows in rk_hypergeometric_hrua()",numpy/random/mtrand/distributions.c,numpy/random/tests/test_regression.py
7f33cd972f96b0d1b660030adaf490ac275719ee,"Merge pull request #5640 from pv/fix-npy-pickle-load

BUG: enable working around pickle compatibility issues on Py3 in npy files",doc/release/1.10.0-notes.rst,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/data/py2-objarr.npy,numpy/lib/tests/data/py2-objarr.npz,numpy/lib/tests/data/py3-objarr.npy,numpy/lib/tests/data/py3-objarr.npz,numpy/lib/tests/test_format.py
37740a0f7868515885060f921c2fe077125e746a,"STY: fold long lines
",numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test_format.py
f93238873553afb7be7148acf66b149f87899c13,"DOC: update release notes vs np.load, np.save pickle kwargs
",doc/release/1.10.0-notes.rst
8016a68ab98969630e3c5769f38065c24a802fdc,"BUG: enable working around pickle compatibility issues on Py3 in npy files

Add pickle compatibility flags to numpy.save and numpy.load.  Allow only
combinations that cannot corrupt binary data in Numpy arrays.  Use the
same default values as Python pickle.
",numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/data/py2-objarr.npy,numpy/lib/tests/data/py2-objarr.npz,numpy/lib/tests/data/py3-objarr.npy,numpy/lib/tests/data/py3-objarr.npz,numpy/lib/tests/test_format.py
bc034dcda527372080ced5b629dc317047ef9336,"Merge pull request #5621 from jaimefrio/ufunc_out_tuple

ENH: ufuncs can take a tuple of arrays as 'out' kwarg",doc/release/1.10.0-notes.rst,doc/source/reference/ufuncs.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py
a0ea0593aea99ef139953e5c721302832699f629,"Merge pull request #5638 from DavidPowell/master

BUG: Cannot read .f2py_f2cmaps under python 3.3",numpy/f2py/capi_maps.py
b3a087ca99506cf7d0b6f88c130efb8718d9d926,"Merge pull request #5644 from rgommers/fix-gfortran-version-check

BLD: fix gfortran version check, and make distutils.test() work",numpy/distutils/__init__.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
bb3ae05f773e1997b4e95655cf1795cb7c8f904b,"ENH: ufuncs can take a tuple of arrays as 'out' kwarg

Closes #4752
",doc/release/1.10.0-notes.rst,doc/source/reference/ufuncs.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py
a81e323cb29506db3305bf08c7ddb2072bec73fb,"ENH: make f2py an executable module

allows pep 338 execution via python -mnumpy.f2py
",numpy/f2py/__main__.py,numpy/f2py/setup.py
eb21e7d5769ba705d02cca196acf8e3e8f15eef3,"whitespace fixes
",numpy/core/src/multiarray/compiled_base.c
ebde190e2959c027871e5e9831c0b6eba8ac0751,"stylistic improvements
",numpy/core/src/multiarray/compiled_base.c
564be6ef5e23c978abc6d46847fefeb401ee4215,"Merge branch 'master' of https://github.com/numpy/numpy
",INSTALL.txt,doc/release/1.10.0-notes.rst,doc/source/reference/routines.array-manipulation.rst,doc/source/reference/routines.linalg.rst,numpy/core/fromnumeric.py,numpy/core/getlimits.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_multiarray.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/system_info.py,numpy/lib/_iotools.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_stride_tricks.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/polyutils.py,numpy/testing/nosetester.py,numpy/testing/utils.py,setup.py
1af465bceb5451e87ee146a0e2eeab8b4097fd34,"Merge pull request #5646 from charris/small-doc-cleanup

DOC: Move versionadded 1.6.0 in slogdet to better place.",numpy/linalg/linalg.py
14c42115f3963ea886ad0263d590f82d0b86bb98,"DOC: Move versionadded 1.6.0 in slogdet to better place.

Put it up top, it matches better with the versionadded 1.8.0 for
stacked matrices.

[skip ci]
",numpy/linalg/linalg.py
f6853ed11d95569dd399d51c9a3624e1156f256c,"Merge pull request #5627 from gertingold/slogdet

DOC: added version information for slogdet",doc/source/reference/routines.linalg.rst,numpy/linalg/linalg.py
1b9813cf7a3702da3e8fa52d813805c55ad7afac,"DOC: Give version when various linalg functions accepted stacked arrays.

Version information added in the Notes section of the functions
accepting stacked arrays and in the discussion of this feature
in the linalg overview.
",doc/source/reference/routines.linalg.rst,numpy/linalg/linalg.py
82a8c8304010948e28d3da2c91582bc88de17cb9,"BUG: fix import in distutils/__init__.py under Python 2.x

Without this fix, _INSTALLED is False and distutils.test() is not available.
",numpy/distutils/__init__.py
b50d5d01d4790a4383996e885066b1dcb6412526,"MAINT: distutils: fix gfortran version check when gfortran emits warnings.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
7ad33a22736ed12a41251be6aa6a6f413143a8c3,"Merge pull request #5635 from astrofrog/genfromtxt-largeints

genfromtxt does not work in some cases on 32-bit systems with dtype=None",doc/release/1.10.0-notes.rst,numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
2c3ef4cbe8af6fddd82d7e90433f92b23cbcdd37,"BUG: genfromtxt gave OverflorError for large integers

Fix StringConverter to avoid OverflowError in genfromtxt. Before, int(2**66) would work
(and return a ‘long’) but then np.array([2**66], dtype=np.integer) would not work and
return an OverflowError which would propagate to genfromtxt. This commit fixes this by
ensuring testing in advance whether an OverflowError will occur. In addition, this adds
an explicit np.int64 entry on systems where integer means int32. Values larger than
2**63-1 will be cast as float. This includes a regression test and adds an entry to the
release notes.",doc/release/1.10.0-notes.rst,numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
df6b31d535c1d388a2022f24c228e02547f89310,"BUG: Cannot read .f2py_f2cmaps under python 3.3

When reading .f2py_f2cmaps, these is iteration over dictionaries keys()
and items(), which are iterators in python 3. This prohibits modifying the
dicionaries while iterating. By wrapping these calls with list(), the python 2
behaviour is restored. Fixes #5637.
",numpy/f2py/capi_maps.py
4cba5310c7b8d1a3aab7202209d238f569a8f9ff,"Merge pull request #5633 from yousefhamza/dev_branch

DOC: Adding note to transpose()",numpy/core/fromnumeric.py
ee195f28cf8e82908e4039ba876dc3e3f2b6a2f3,"DOC: Adding note to transpose()

Adding a note to clear that 1D array transpose
returns the same as the original array
",numpy/core/fromnumeric.py
504d90ee39ad74093ced829cde1007eeea1e261d,"BUG: Fix potential overflows in rk_hypergeometric_hrua()
",numpy/random/mtrand/distributions.c,numpy/random/tests/test_regression.py
03506a9e72d85d596021e11e9b39c5a0fd1f2eba,"Merge pull request #5622 from rmcgibbo/maint-docstrings

MAINT: Reconcile docstrings and function signatures where they disagree",numpy/core/getlimits.py,numpy/lib/_iotools.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/polyutils.py,numpy/testing/nosetester.py,numpy/testing/utils.py
6ca778d275ade854cfc81a6a975230c4ccd9402c,"DOC: Reconcile docstrings and function signatures where they disagree

Fixed typos in docstrings were updated for functions where the parameter
names in the docstring didn't match the function signature.
",numpy/core/getlimits.py,numpy/lib/_iotools.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/polyutils.py,numpy/testing/nosetester.py,numpy/testing/utils.py
83b680b84a83c3e4b56e79396c395e30af650ba8,"Merge pull request #5615 from charris/distutils-style-cleanups

STY: Some style cleanups in distutils.",numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py
fba3140f31e67487666529e66241047517a72bcb,"Merge pull request #5620 from shoyer/fix-broadcast_to

BUG: fix broadcast_to for reference types",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
d5a67b5b421c12cc46d9bcd07ddc4b91c1e5fef3,"BUG: fix broadcast_to for reference types
",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
50e4eb87370b77792f1f6d21a5edd6ff20abee68,"Merge pull request #5619 from jaimefrio/unique_docstring

DOC: Describe return_counts keyword in np.unique docstring
",numpy/lib/arraysetops.py
da3c6a28f651877dfb4cfdbbbe76dab985669252,"DOC: Describe return_counts keyword in np.unique docstring
",numpy/lib/arraysetops.py
a29f50ef84aa0f3cec0253691dacd9a3cddbb3a6,"Merge pull request #5618 from johntyree/arrfill_ulonglong

BUG: Fixes ndarray.fill to accept maximum uint64 value",numpy/core/src/multiarray/convert.c,numpy/core/tests/test_multiarray.py
11dfe938a485500a94de8c01157ea6319afcffd0,"BUG: arr.fill() should accept the max uint64 value
",numpy/core/src/multiarray/convert.c,numpy/core/tests/test_multiarray.py
701dbe1c08e71cf79a0b234c42ffccf27f884634,"STY: Some style cleanups in distutils.

Break long lines.
Spaces around operators.
Remove dead code.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py
96abd32de241864ee97f30357234cbc9a96c43ae,"Merge pull request #5614 from charris/cleanup-gh-5587

BLD: Add support for MinGW-w64/OpenBLAS",INSTALL.txt,numpy/core/src/multiarray/multiarraymodule.c,numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/system_info.py,numpy/lib/tests/test_function_base.py,setup.py
444b5ac1eb8d0e2bfe548770af3ab8e6af846832,"DOC: Document Carl Kleffner's MinGW-w64 toolchain in INSTALL.txt.

Taken from the description in gh-5587.
",INSTALL.txt
08178994ee2d97ff8c48cb6e8f1140b3dae2bd69,"BLD: Improve mingw-w64 detection of check_embedded_lapack.
",numpy/distutils/system_info.py
ae438c3707ccb451c6f0d8150388f9d75a9b5375,"BLD: Add mingw-w64 support for the mingw64static option.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py,numpy/lib/tests/test_function_base.py,setup.py
525f0cd85fa270ee0fb843a8cfdd21dfe98238cd,"BUG: rpath was not implemented for numpy.distutils.fcompiler

This bug-fix only applies for non gnu-compilers.

The fortran compilers in numpy inherited the Ccompier class
which had the runtime library directories NotImplemented.
Hence the compilers need to define their own runtime library
path.
I have added that information to the intel/pgi/sun compilers.
The rest are either already implemented or I do not know them.

I have tested the bug-fix with intel compilers of numpy AND the
subsequent installation of scipy (which relies on the fortran
compilers). Hence this bug will only occur when linking with
the fortran compilers.
",numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py
06af9918f6bf03b8d818ec834f9fb48db57d1489,"Merge pull request #5371 from shoyer/broadcast_to

ENH: add np.broadcast_to and reimplement np.broadcast_arrays",doc/release/1.10.0-notes.rst,doc/source/reference/routines.array-manipulation.rst,numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
05b5335ecf25e59477956b4f85b9a8edbdf71bcc,"ENH: add broadcast_to function

Per the mailing list discussion [1], I have implemented a new function
`broadcast_to` that broadcasts an array to a given shape according to
numpy's broadcasting rules.

[1] http://mail.scipy.org/pipermail/numpy-discussion/2014-December/071796.html
",doc/release/1.10.0-notes.rst,doc/source/reference/routines.array-manipulation.rst,numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
29b9480f62fd01b6d19da39391bd522cc66bdc6b,"BUG: Had thought the defaults where made of lists, it is simply a str.

Changed all lists to strings
",numpy/distutils/system_info.py,numpy/distutils/tests/test_system_info.py
98add1697398d93469889792739ca0721ac65284,"ENH: rpath and runtime_library_dirs equivalent

The original distutils assumes runtime_library_dirs to
be located in rpath, however, the internal structures assumes
the keyword to be runtime_library_dirs.
For now numpy.distutils handles both equivalently.

The test has been updated to also test the rpath solution.
",doc/release/1.10.0-notes.rst,numpy/distutils/system_info.py,numpy/distutils/tests/test_system_info.py,site.cfg.example
32e23a1d52a05d3a56f693010eaf8d96826db75f,"Merge pull request #5609 from mspacek/patch-1

DOC: fix typos in corrcoef()",numpy/lib/function_base.py
aca82609af048971de362eb74a5f8873a45898cf,DOC: fix typos in corrcoef(),numpy/lib/function_base.py
5e9750dee0d861342c2fe184b755454d7215f10a,"Merge pull request #5584 from hannaro/bugfix_argpartition

BUG: Fixed issue #5524 and added test",numpy/core/fromnumeric.py,numpy/core/tests/test_multiarray.py
1b6f46ae7ca3361c029c480a76c737268bc8713b,"BUG: Fixes #5524 and adds test

argpartition does not fail anymore on non-ndarray array-likes.
Fix as implemented by @maniteja123.
",numpy/core/fromnumeric.py,numpy/core/tests/test_multiarray.py
a2ec60c6b0ba610c635626d9fe10b569d6365a7f,"BUG: Python3 fix

Direct writing to files is not the same for 2vs3.
Hence we now close the file handle, re-open it
and write using the file.
",numpy/distutils/tests/test_system_info.py
a6c2443a646eb46b0bca9d8560d52d5b9fa87c9d,"BUG: PEP corrections

More corrections pointed out by Ralf

Changed the get_standard_file to a fully temporary
file. This means that the __init__ diverges a bit
from the system_info object. However, it only has
to do with the setup for the test. All internal things
regarding the object have not been altered.
I have checked on my box that all files/directories are removed.
",numpy/distutils/system_info.py,numpy/distutils/tests/test_system_info.py
f91796046592ff876b74db14544adaab21e31f93,"BUG: PEP corrections and streamlined with numpy dev line

Changed self.assert* to assert_ instances through numpys
own testing utilities.

Fixes for the rst document.

Removed unnecessary import statements in the test.
",doc/release/1.10.0-notes.rst,numpy/distutils/system_info.py,numpy/distutils/tests/test_system_info.py
2e016ac65aceab4e08217794d6be7b365793976a,"Merge pull request #5501 from jaimefrio/faster_fastputmask

ENH: speed up putmask avoiding % in inner loop",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/item_selection.c
4d4fb0d12b9ddfa76e485ea3caa6fac25e7183da,"Merge pull request #5494 from jaimefrio/argsort_refactor

MAINT: refactor PyArray_ArgSort and PyArrayArgPartition",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
43fb77f85726a380aefa8cf8e82625384b928d5a,"BUG: Trying to fix travis builds

The error of getcwd on 2.6 was due to previous fault.
We should not request include_dirs as they are not provided.

For python 3 I forgot the top ascii writing.
",numpy/distutils/tests/test_system_info.py
0e7843949e8fec48c562b55166cac136230f72d1,"BUG: Trying to fix travis builds

The test on Travis does not allow getcwd on python 2.6

The test for python 3+ already is in unicode, hence the
str representation was wrong.
",numpy/distutils/tests/test_system_info.py
e87ad6eb8ff7d7705abb20d523e21c67e508b0e6,"ENH: Added tests to the extra options read in

A simple test (distutils/testing/test_system_info.py)
to check that the options are read in correctly has been added.
This test has a few faults:

A) It does not allow strict library checks as that can be
   _very_ system dependent.
B) It compiles some simple C-programs but does currently not link
   them to a shared library.
C) As such the test does not check that the flags are actually used.

To circumvent this one should:

A) Make a library of the compiled sources.
B) Check that a runtime_library_dirs is working by checking
   with ldd
C) Make a preprocessor flag to check the output of two commands which
   should differ according to the flags in each block

I am not too much into the distutils compiler suite. So I have not
endeavoured on this path.

- The current test shows that the flags are read in by the standard system_info
  object and can thus be considered a ""stable"" solution.

- Added note of the 1.10 release schedule.

- Corrected the site.cfg.example, added runtime_library_dirs to
  the OpenBLAS example where it seems appropriate.

- Bugfix for the site.cfg.example (the [DEFAULT] block should be
  name [ALL])
  This might have lead to some confusion, but many of the libraries
  are linked explicitly by their own sections, hence it might not have
  been caught.
",doc/release/1.10.0-notes.rst,numpy/distutils/tests/test_system_info.py,site.cfg.example
a0aaf752c75c310d4eeae1af1064ec8046e6d5e9,"MAINT: refactor PyArray_ArgSort and PyArrayArgPartition

Added three new functions to npy_sort: npy_aquicksort, npy_aheapsort
and npy_amergesort, for generic dtypes, with signature compatible with
PyArray_ArgSortFunc, and refactored PyArray_ArgSort and
PyArray_ArgPartition to use them through a call to _new_argsortlike.

As an added bonus, partly fixes #5469 and adds some tests for it.
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
8c0a50c5b1b331738a8bfb6a94ccc588851d1a0c,"Merge pull request #5599 from pitrou/refleak_ufunc2

BUG: Fix a reference leak in ufunc type resolution.
",numpy/core/src/umath/ufunc_type_resolution.c
50afb0fb67b4b9d1bffa3baf4b87332040c54a70,"BUG: Fix a reference leak in ufunc type resolution.

ensure_dtype_nbo() already creates a new reference.
",numpy/core/src/umath/ufunc_type_resolution.c
63e0f6ac81b8bfabc74a441dbf08eeaead091fbb,"BLD, ENH: Reading of extra flags from site.cfg to extend flexibility

Addition to the distutils module to be able
to read in more optional arguments and flags
from the site.cfg file.

Currently are these additional options read:

runtime_library_dirs:
  It allows users to set the runtime
  library directories so that LD_LIBRARY_PATH can be ignored.
  This has the same format as the library_dirs option.

extra_compile_args:
  This allows the user to add specific compiler
  flags when compiling sources.
  There will be no formatting/checking of these additional compile
  flags, the compiler should complain if something is wrong.

extra_link_args:
  This allows the user to add specific linker flags
  when linking the .so objects.
  There will be no formatting/checking of these additional compile
  flags, the linker should complain if something is wrong.

When the config is runned it automatically prints out the
read in information, thereby allowing the user to see
what has been set and what has not.

Tested with and without flags to check that it builds correctly.
",numpy/distutils/system_info.py
8b44a5522628cae522f00985b4ac7b3f6c21fb18,"Merge pull request #5595 from jaimefrio/compiler_warnings

BUG: Uninitialized variable ret XDECREF'ed on fail",numpy/core/src/multiarray/cblasfuncs.c
329b7fe877bc1c8b2497534f805b986622275f96,"BUG: Unitialized variable ret XDECREF'ed on fail
",numpy/core/src/multiarray/cblasfuncs.c
85e4ac7dc00f4b693dbf84a979303ccc2b812070,"interp(): add storage of previous value for next index lookup
",numpy/core/src/multiarray/compiled_base.c
2b60f5be13545f3ba5d5faa23a2bbf7264b94f7c,"Merge pull request #5590 from chebee7i/allclose_isclose

Make allclose use isclose.",doc/release/1.10.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py,numpy/testing/utils.py
e59c6220dda253ff5e94251384aef3ebf605942f,"DOC: Add versionadded.
",numpy/core/numeric.py
a3b7aa5bfe632fa70be805e20876c62b97a6c4ec,"MAINT: Minor code edits.
",numpy/core/numeric.py,numpy/testing/utils.py
f896f50fc8b4ad6a38eda286ed0d3d5560759ead,"Merge pull request #5592 from simongibbons/ma_polyfit_fix

BUG: numpy.ma.polyfit masks NaNs incorrectly",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
c2681a55c2c833b0a57deefc5fe2f23b01b0f26d,"DOC: Update release notes on allclose/isclose changes.
",doc/release/1.10.0-notes.rst
9df514382c0b7c8fdaa979f66054285d69afee4d,"BUG: numpy.ma.polyfit masks NaNs incorrectly

This fixes the incorrect handing of masked NaNs by
``np.ma.polyfit``. Instead of passing the mask into
``np.polyfit`` by setting the weight of the masked
points to zero, the subset of elements of which are
to be fitted are passed instead.

Closes #5591
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
e2812eddd839ad45f252087ed23a01029e9ecc61,"TST: Update unittests for allclose, isclose.
",numpy/core/tests/test_numeric.py
e1d3a0c66d719fe908de317c08b1234b71af196f,"ENH: Add `equal_nan` argument to allclose.
",numpy/core/numeric.py,numpy/testing/utils.py
2ae0529a5935c0eff0f72bb9f86d063537be250a,"MAINT: Make allclose use isclose.
",numpy/core/numeric.py
a5ea773e66110cf335c9ed37e8ccdc14f8e56764,"BUG: Fixed issue #4679 and added test

Tile now copies the input when it is a numpy array and all dimensions are
repeated only once.
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
d770034969e35907e7497d5fe9053df4bdac2fd2,"Merge pull request #5563 from jakirkham/fix_masked_casting_warning

BUG: Avoid casting warning with masked arrays when using in-place operations",numpy/ma/core.py,numpy/ma/tests/test_core.py
8af02f701cb94cbfad3b7972d6d106a66fee4f62,"BUG: Fix casting warnings during masked array in-place operations. (numpy/numpy#5563)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
6032b8d7fc8ad2a8e1f1465cc5242873a03ba0ea,"Merge pull request #5579 from jakirkham/pycharm_gitignore_fix

ENH: Ignore PyCharm project files.",.gitignore
22c8b7a38c0d326fb6aeee73468da0a2131aed52,"ENH: Ignore PyCharm project files.
",.gitignore
4338d11c104d867cf88d5ba2a87b032e58de7053,"Merge pull request #5577 from charris/cleanup-gh-5263

BUG: financial.pmt warns of zero divide when rate == 0.",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
97c481ee90459e8e372b74144f666cf06ad9df61,"MAINT: Fix pmt test in numpy/lib/tests/test_financial.py.

The tests were using assert_almost_equal and setting the precision to 3
decimals. The reason for that low precision appears to have been the
failure of the tests for a more reasonable precision. The fix was to use
assert_allclose instead.
",numpy/lib/tests/test_financial.py
a9a80fc4a5ed8fb2faba1e1102121468a905c908,"MAINT: Simplify fix for rate == 0 in financial.pmt.
",numpy/lib/financial.py
97917ac8d45c54aa99453b350cd1834a121d1d29,"BUG: Fix zero divide warning in financial.pmt.

The pmt function in financial.py does a zero divide when rate=0 because
error because the alternatives in np.where() are evaluated befor the
selection is made.first before going into the function however, the
denominator can be zero at that time.

Closes #4701.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
4065adbcc4e9d320f41b78922a906f16c6add7cc,"Merge pull request #5576 from levitsky/master

MAINT: Fix an error in fmax docstring",numpy/core/code_generators/ufunc_docstrings.py
6acf2969b5b35551dc3363881f4067c18052777a,"Fix an error in fmax docstring
",numpy/core/code_generators/ufunc_docstrings.py
564a5a294de4c96bf1a3e0a91eeac780f7f3ffb6,"Merge pull request #5572 from lamby/master

Correct exit code if number of errors % 256 == 0",tools/swig/test/testArray.py,tools/swig/test/testFarray.py,tools/swig/test/testFortran.py,tools/swig/test/testMatrix.py,tools/swig/test/testSuperTensor.py,tools/swig/test/testTensor.py,tools/swig/test/testVector.py
9d77ba829ef8f20b0f1741d271ce1c05ef4022e8,"Correct exit code if number of errors % 256 == 0

For example, we had 256 errors (etc.) our process will exit with a
successful error code which is incorrect and/or misleading.

Signed-off-by: Chris Lamb <chris@chris-lamb.co.uk>
",tools/swig/test/testArray.py,tools/swig/test/testFarray.py,tools/swig/test/testFortran.py,tools/swig/test/testMatrix.py,tools/swig/test/testSuperTensor.py,tools/swig/test/testTensor.py,tools/swig/test/testVector.py
c75caa18f9eae3b17bcfb1297c8e26dc5dccc6e2,"Merge pull request #5571 from charris/fix-warnings

Fix warnings",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/umath_tests.c.src,numpy/fft/fftpack.c
e3cc0f4af6c306370fd5fdcd35a1f02be50f4dd1,"MAINT: Fix possible unitialized variable in shape.c.

The warning was not real, but the logic was too twisted for the
compiler. The function PyArray_Ravel could possibly be improved
a bit, but for now, just initialize the variable to 0.
",numpy/core/src/multiarray/shape.c
f23d71080b6071609f6220faa092cfc3d622ede5,"MAINT: Avoid unused variable in umath_tests.c.src.

The variable is only used in an assert statement that is not always
compiled, so use the variable value there instead.
",numpy/core/src/umath/umath_tests.c.src
f317ab8932931e8dcf9f0e2092bf52161fcda24d,"MAINT: Replace some Python macros by functions.

PyObject_INIT -> PyObject_Init
PyObject_INIT_VAR -> PyObject_InitVar

This avoids warning about parenthetical expression in PyObject_INIT.
Python recommends the functional versions when available.
",numpy/core/src/multiarray/scalartypes.c.src
ce1dadfe0e7accac0721ebaa79f2a4b4a9f56e7e,"MAINT: fftpack.c needs #define NPY_NO_DEPRECATED_API NPY_API_VERSION.

This is because of the inclusion of numpy/ndarraytypes.h in b3121e8.
",numpy/fft/fftpack.c
172ad3ebc4fe4402f9a2a34573b96d5b38208c8b,"Merge pull request #5440 from chebee7i/yieldssection

DOC: Add documentation for Yields section in docstrings.",doc/HOWTO_DOCUMENT.rst.txt
ec116c49103dfd4bac3b703d36e0a83165e075a2,"DOC: Mention numpydoc 0.6.
",doc/HOWTO_DOCUMENT.rst.txt
d64d4a58af59b4f03249488f1360c3da8ad9cb56,"DOC: Replace ""Parameters"" with ""Returns"".
",doc/HOWTO_DOCUMENT.rst.txt
e4e54a0bebdf477f75758e0afa772d928aef94da,"Merge pull request #5502 from jaimefrio/in1d_unorder

ENH: speed-up in1d replacing sorting with fancy indexing",numpy/lib/arraysetops.py
654399f53c462ca99c97fddcd2ef22b6fda80d1f,"Merge pull request #5568 from vallis/master

Use correct #ifdef __cplusplus guard to include std_complex.i",tools/swig/numpy.i
237d16bdce2bc12ec0a85a254211bf5126bfa021,Use correct #ifdef __cplusplus guard to include std_complex.i,tools/swig/numpy.i
c5b90eb1db7b1318b52f6891fea6a6059c90fe70,"Merge pull request #5504 from charris/cleanup-gh-133

ENH: Add support for float hex format to loadtxt.",doc/release/1.10.0-notes.rst,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
05164650d0818f6a8fbbe81612666f96f0f0efdf,"DOC: Document loadtxt support for float.hex float representation.
",doc/release/1.10.0-notes.rst
31f5d40b6c5a1ea1cafd2a0892bd53f7e6d50061,"TST: Make loadtxt able to load floats as hex strings.

The strings must be produced by the python float.hex method.
",numpy/lib/tests/test_io.py
4aef6a89fda5015129e124099f3809fa4da894a7,"ENH: Add support for float hex format to loadtxt.

Add _floatconv to npyio.py as a default floating point converter. This
uses float() as a type conversion with a fallback on (ValueError) to
float.fromhex().

Closes #2517.
",numpy/lib/npyio.py
35d01b2a7cd38b2fda54b148402919aa1dd7e9c4,"Merge pull request #5518 from charris/simple-gh-3010

BUG: Simplified fix, Overflow in tan and tanh for large complex values.",doc/release/1.10.0-notes.rst,numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/private/npy_config.h,numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_umath.py
f9c377680e8e30fe08495ef3181740437a4fb219,"DOC: Document changes in npymath library.

Document the increased use of the system library for C99 complex
functions and the addition of improved fallback functions for

* npy_ctan,
* npy_cacos, npy_casin, npy_catan
* npy_ccosh, npy_csinh, npy_ctanh,
* npy_cacosh, npy_casinh, npy_catanh
",doc/release/1.10.0-notes.rst
3a4127bf53bc116eb5872d44e76ad498215b8637,"BUG: Disable broken complex trig functions for early linux glibc.

The library functions casin, casinh, catan, catanh are inaccurate
in glibc version < 2.16, so use the numpy fallback functions for
those.
",numpy/core/setup_common.py,numpy/core/src/private/npy_config.h
44d0c52ccd3de10874154bbe1ceab6ddade0afca,"BUG: Do not use system cpow directly.

Numpy computes small integer powers by multiplication, this leads to
different results than the system cpow for such integers. In particular,
cpow((0 + inf*1j), 2) returns (-inf + 0j) rather than (-inf + nanj). The
system version probably makes more sense, but better to keep
compatibility at this point. We could fix our results using cproj.
",numpy/core/src/npymath/npy_math_complex.c.src
34b5f9f631fe268559c4a896fdf19e91aedd4a35,"TST: Add tests for complex ufuncs.

The test for precision needed to have difference changed from 2*eps to
2.1*eps for the system supplied sinh.
",numpy/core/tests/test_umath.py
690682349a7339eafffbfaf3189e6bf4cb9259c4,"ENH: Use the new complex functions in npymath for our ufuncs.

This should clear up such things as

>>> np.tanh(372 + 1j)
(nan+nan*j)
",numpy/core/src/umath/funcs.inc.src
c1f7e0bf241978893d4d610b84597b897fde8839,"ENH: Implement more fallback complex functions for npy_math.

The new functions added:

    npy_ctan,
    npy_cacos, npy_casin, npy_catan
    npy_ccosh, npy_csinh, npy_ctanh
    npy_cacosh, npy_casinh, npy_catanh
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_complex.c.src
ccc810e4a504e297bf5eae4523942d8bb46424fe,"Merge pull request #5567 from ahjulstad/histogram2d-docstring

DOC: Updated docstring for histogram2d as suggested in issue #5538",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
40fd50e125755bcf025fba629f8db76b4c2219cc,"DOC: Updated docstring for histogram2d as suggested in issue #5538

Also, added unittest for [int, array] combination arguments
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
8cf7c4a9534e5444f07974e019383a395a8fac9e,"Merge pull request #5555 from ahjulstad/ifort-deprecated-options

DEV: Replace deprecated options for ifort.",numpy/distutils/fcompiler/intel.py
c64b61bc21e460f7b16d2b4ec89a84f1a191cb43,"Merge pull request #5547 from mwcraig/add-contribution-guidelines

Add contribution guidelines that github will automatically display",CONTRIBUTING.md
1801fe66bb4b3b81081479627890c90375d74892,"Merge pull request #5556 from ahjulstad/dev-version-number

Change to fully PEP440 compliant dev version numbers (always .dev0)",setup.py
e15f2923182d364a806ab1e41ae8fce6505e8877,"Change to fully PEP440 compliant dev version numbers (always .dev0)
",setup.py
713147a1c1bddfa4124f8e7396348e66c4dcbb67,"DEV: Replace deprecated options for ifort.

The /Qlowercase and /us options has been deprecated in the Intel Visual Fortran Compiler since at least version 2013.
Replace with /names:lowercase and /assume:underscore.
",numpy/distutils/fcompiler/intel.py
c2c0f7f5146cee526569c088688293c0c1152113,"DOC: add more details to instructions for reporting issues
",CONTRIBUTING.md
a4cdc5b8d314fcf18faf29d82e84c877c4ed0e3f,"Merge pull request #5549 from ahjulstad/doc-sitecfg

Added MKL for win-64 to site.cfg example. Changed link to ConfigParser doc",site.cfg.example
5e3f9bde26013cce1c5dce1b9b20e5e9a3100c68,"DOC: Added MKL win-64 settings to site.cfg example

Added MKL settings for Intel Fortran Composer.
In addition, changed link to ConfigParser documentation.
",site.cfg.example
a8a6a72a7a41f70676c180cf38fb919ae997e7e8,"DOC: add CONTRIBUTING.md that will be automatically displayed on github

Rather than reproducing the details of contribution guidelines it points
contributors to the existing documentation.
",CONTRIBUTING.md
0faf6d68e1b15eaf87b0717024544269a4d66564,"Merge pull request #5535 from ahjulstad/bytevsstr-lib2def

Return output from nm command as string (and not bytes)",numpy/distutils/lib2def.py
d930eddeadd0e1cd8e8aa748b1de9afa49899542,"Merge pull request #5546 from charris/fix-gh-5545

BLD: Use system-wide fenv.h on cygwin",bento.info,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/setup.py,numpy/core/src/npymath/ieee754.c.src
adc6b13029bf885e9b7dee9a4cafc19a2dc3eb4f,"BLD: Use system-wide fenv.h on cygwin

Closes #5532.
",bento.info,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/setup.py,numpy/core/src/npymath/ieee754.c.src
6d3c2c56801988e9e2968ad2c25010e0a881b30c,"Merge pull request #5544 from mwcraig/update-ma-average-docstring

Update docstring of ma.extras.average to reflect actual behavior",numpy/ma/extras.py
edb9399df2ee26563185acb37535f81f94563354,"Update docstring of ma.extras.average to reflect actual behavior
",numpy/ma/extras.py
72f409cb1ec21aa8b6c28d0e82d5e26197e6b454,"Merge pull request #5536 from stefaneng/patch-1

genfromtxt example in user docs missing delimiter",doc/source/user/basics.io.genfromtxt.rst
ad3f89fc8a0f0b77fd0a6360cdc903601e2fab10,"Merge pull request #5542 from sandrotosi/master

SWIG testing: clarify location and number of tests",doc/source/reference/swig.testing.rst
4cccb9bf311651afec8bf2b4a874d1bd31c98d08,"SWIG testing: clarify location and number of tests

SWIG interface has moved to tools/ directory, so updating the doc to state that
and also the number of tests is reduced since what reported, so a generic ""more
than"" is used (to avoid similar situations in the future) but likely also the
other numbers should be checked.
",doc/source/reference/swig.testing.rst
3fdce81aff78bffab58717f69dfaff93dffcb0bc,"Merge pull request #5540 from sandrotosi/master

DOC: Fix 'dimensions' typo in numpy.kron() help message",numpy/lib/shape_base.py
0a338f7d8ac8bda597c4ff06068b3b2f3b20ddda,"Fix 'dimensions' typo in numpy.kron() help message

This bug was reported in Debian as: http://bugs.debian.org/777172 .
",numpy/lib/shape_base.py
76bdf3b19b57b46b94da2dc5e53ee9e37e07314e,"Uses universal_newlines option for subprocess.Popen to automatically decode the output. (instead of a subsequent decode step).
",numpy/distutils/lib2def.py
c09d8dcb2e031c314ab54eb277235bd2d6f294f1,"genfromtxt example in user docs missing delimiter

The example given in the user docs does not run correctly without adding `delimiter="",""`. This add the missing keyword to allow the examples to be run.",doc/source/user/basics.io.genfromtxt.rst
b791dde577e18afe8986ec4a85516019a76f447d,"Return output from nm command as string (and not bytes)
",numpy/distutils/lib2def.py
75eeb75f109c39de8c1cdc475043e7cd3420322b,"Merge pull request #5531 from cowlicks/patch-1

Correct my email address",doc/neps/ufunc-overrides.rst
6a92319af7aeab510af1f813a5a2ea45c7ff86dc,Correct my email address,doc/neps/ufunc-overrides.rst
a02f5c8fd384b5aeffd1942747b4b6c4efdcd3a4,"Merge pull request #5527 from efiring/rayleigh_docstring

DOC: correct erroneous description of Rayleigh distribution",numpy/random/mtrand/mtrand.pyx
934b6d6a1ea7057044ce8d63f2dd9b942f92ab86,"DOC: correct erroneous description of Rayleigh distribution
",numpy/random/mtrand/mtrand.pyx
ea5202880e2e1876d9baa2a65e7987c99be0459b,"Merge pull request #5523 from ahaldane/recarray_fixrepr

BUG: recarray __repr__ gives inaccurate representation",numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py
73a74e9e9515ad76d652e998fc1e88074e8cd820,"BUG: recarray __repr__ gives inaccurate representation

In https://github.com/numpy/numpy/pull/5483, I solved the problem that a
""recarray"" and a ""record array"" (nomenclature defined in
https://github.com/numpy/numpy/pull/5482) looked identical by making
sure that a type's subclass was listed in the repr. However, recarrays
are still represented using the function 'rec.array' even though this
function technically creates record arrays, not recarrays.

So I have updated recarray.__repr__.

Setup:

    >>> a = np.array([(1,'ABC'), (2, ""DEF"")], dtype=[('foo', int), ('bar', 'S4')])
    >>> recordarr = np.rec.array(a)
    >>> recarr = a.view(np.recarray)

Behavior after https://github.com/numpy/numpy/pull/5483:

    >>> recordarr
    rec.array([(1, 'ABC'), (2, 'DEF')],
          dtype=(numpy.record, [('foo', '<i8'), ('bar', 'S4')]))
    >>> recarr
    rec.array([(1, 'ABC'), (2, 'DEF')],
          dtype=[('foo', '<i8'), ('bar', 'S4')])

New Behavior:

    >>> recordarr
    rec.array([(1, 'ABC'), (2, 'DEF')],
          dtype=[('foo', '<i8'), ('bar', '|S4')])
    >>> recarr
    array([(1, 'ABC'), (2, 'DEF')],
          dtype=[('foo', '<i8'), ('bar', 'S4')]).view(numpy.recarray)
",numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py
456318e027871460bd737f3bd7a3d064643e50e6,"Merge pull request #5522 from jaimefrio/dtype_f_doc

DOC: Update PyArray_ArrFuncs documentation",doc/source/reference/c-api.types-and-structures.rst
b3f0d25f0c19545f096093d7bd34a5afe27645f3,"DOC: Update PyArray_ArrFuncs documentation
",doc/source/reference/c-api.types-and-structures.rst
8149c36abb651480202ff55a9b80efda9278be0f,"Merge pull request #5517 from jaimefrio/array_interface_doc

DOC: Update docs for PyArray_FromInterface/PyArray_FromStructInterface",doc/source/reference/c-api.array.rst
a7743d484ea829a941f08304c3a119e4e3f9d668,"DOC: Update docs for PyArray_FromInterface/PyArray_FromStructInterface
",doc/source/reference/c-api.array.rst
de681b72314d666cb014b2f11358de66a3aaa337,"ENH: Detect all functions in complex.h

Set the HAVE_XXXX macros for all of the following functions.

    csin,   ccos,   ctan
    casin,  cacos,  catan
    csinh,  ccosh,  ctanh
    casinh, cacosh, catanh
    cexp,   clog,   cpow
    cabs,   csqrt,  carg
    cimag,  creal,  conj,
    cproj

The macros do not need to be used, but it is good to have all of
them available.
",numpy/core/setup_common.py
0a7fe2e6c29a2007a32a6386b0762bf1a6fdffc6,"Merge pull request #5515 from rgommers/aix-build

BLD: fix include order of headers, otherwise AIX build fails.  See gh-5474",numpy/fft/fftpack.c
214bfd432e2fbc30e1b400c7c2f628cff2aa4559,"BLD: fix include order of headers, otherwise AIX build fails.  See gh-5474.
",numpy/fft/fftpack.c
a9411ab1ce272a820266373d3f24800bf84e4bcc,"Merge pull request #5512 from charris/cleanup-generate_umath

MAINT: Style cleanup of generate_umath.py,",numpy/core/code_generators/generate_umath.py
50cd57cc5c9375c7c925dc9bd7924e7184dfb92e,"MAINT: Style cleanup of generate_umath.py.

Break some long lines.
Remove some line continuations.
Update TypeDescription Attributes documentation.
",numpy/core/code_generators/generate_umath.py
fbcc24fa7cedd2bbf25506a0683f89d13f2d4846,"Merge pull request #5505 from ahaldane/recarray_returntype

BUG: Fix recarray getattr and getindex return types",doc/release/1.10.0-notes.rst,numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py
3cd9e7339c37880cff0a2f381e881e0e612c4948,"BUG: Fix recarray getattr and getindex return types

This commit makes changes to `__getitem__` and `__getattr__` of recarrays:

 1. recarrays no longer convert string ndarrays to chararrays, and
    instead simply return ndarrays of string type.
 2. attribute access and index access of fields now behaves identically
 3. dtype.type is now inherited when fields of structured type are accessed

Demonstration:

    >>> rec = np.rec.array([('abc ', (1,1), 1), ('abc', (2,3), 1)],
    ...       dtype=[('foo', 'S4'), ('bar', [('A', int), ('B', int)]), ('baz', int)])

Old Behavior:

    >>> type(rec.foo), type(rec['foo'])
    (numpy.core.defchararray.chararray, numpy.recarray)
    >>> type(rec.bar), type(rec['bar']), rec.bar.dtype.type
    (numpy.recarray, numpy.recarray, numpy.void)
    >>> type(rec.baz), type(rec['baz'])
    (numpy.ndarray, numpy.ndarray)

New behavior:

    >>> type(rec.foo), type(rec['foo'])
    (numpy.ndarray, numpy.ndarray)
    >>> type(rec.bar), type(rec['bar']), rec.bar.dtype.type
    (numpy.recarray, numpy.recarray, numpy.record)
    >>> type(rec.baz), type(rec['baz'])
    (numpy.ndarray, numpy.ndarray)
",doc/release/1.10.0-notes.rst,numpy/core/records.py,numpy/core/tests/test_records.py,numpy/doc/structured_arrays.py
a786c82c312eb7baf8c2879180eb1345f79d8c89,"Merge pull request #5307 from hunse/array-docstring

Array docstring now lists correct order default",numpy/add_newdocs.py
2864715a88cc0646f432024d0d21a1e10dde9ada,"Merge pull request #5249 from immerrr/add-missing-scalar-func-docs

DOC: add documentation for some scalar checks",doc/source/reference/c-api.array.rst
fc8db7395f51311e4856eaae25c4b3aa62bd9164,"ENH: speed up putmask avoiding % in inner loop
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/item_selection.c
704dcc00cd1bfb89280dd42fc061592004811da6,"ENH: speed-up in1d replacing sorting with fancy indexing
",numpy/lib/arraysetops.py
937d1f25e5fee1543a55ef5e6bcf27e5a7ec3bf9,"Merge pull request #5492 from grahamc/gotofail-malloc-ret-null-fft

PyErr_NoMemory when PyArray_Zeros fails to initialize
",numpy/fft/fftpack_litemodule.c
c3888e73fff4731018e3733a9d1d66441b2a8146,"BUG: PyErr_NoMemory when PyArray_Zeros fails to initialize
",numpy/fft/fftpack_litemodule.c
2344c268a429b974d996368e0172c65efe970f61,"Merge pull request #5473 from rgommers/doc-inplace-build

DOC: update build instructions, add developer docs",INSTALL.txt,doc/source/dev/development_environment.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/index.rst,doc/source/user/install.rst
7ce93ba046b1ff2fddd1f24090b21c01a7d6c25e,"Merge pull request #5483 from ahaldane/dtype_showtype

ENH: Show subclass type in dtype repr and str of structured arrays",numpy/core/records.py,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_records.py
86efa7dcc6e37dd35ac1ed9dbdcea19637670b50,"ENH: Show subclass type in dtype repr and str of structured arrays

This is a modification to the dtype str and repr functions what helps
solve https://github.com/numpy/numpy/issues/3581.

I discussed it on the mailing list in a message ""Re: structured arrays,
recarrays, and record arrays"" on Jan 19 2015. I didn't get any replies,
but hopefully that merely means ""no opinion"" rather than ""bad idea"".

What it does: For structured arrays, if the dtype is not np.void then
print the dtype as `(base_dtype, dtype)`.

New Behavior:

 >>> a = np.array([(1,'ABC'), (2, ""DEF"")], dtype=[('foo', int), ('bar', 'S4')])
 >>> np.rec.array(a)
 rec.array([(1, 'ABC'), (2, 'DEF')],
       dtype=(numpy.record, [('foo', '<i8'), ('bar', 'S4')]))
 >>> a.view(np.recarray)
 rec.array([(1, 'ABC'), (2, 'DEF')],
       dtype=[('foo', '<i8'), ('bar', 'S4')])
",numpy/core/records.py,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_records.py
e1ff6268a2e256bdb6cf6c06457456c7c4bd495d,"Merge pull request #5495 from charris/cleanup-gh-4649

BUG: Fix genfromtext NameValidator arguments passed to easy_dtype.",numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
22f2dc50fdd305a3b6da91b9efdf40a67a58a1e8,"Merge pull request #5496 from charris/cleanup-gh-5103

ENH:Add keyword max_rows to genfromtxt.",doc/release/1.10.0-notes.rst,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
88307d1c4f1cfb176c49d316ee6276b1496508e1,"DOC: developer guide: add section on rebuild/clean, expand section on gdb.

Addresses review comments on gh-5473.

[ci skip]
",doc/source/dev/development_environment.rst
0062a17ba759deb499cfcd55cac6f7d285462ca4,"DOC: Document new genfromtxt max_rows argument in release notes.
",doc/release/1.10.0-notes.rst
add0881d31abd32e48e68fbdb904723bc7014838,"Merge pull request #5498 from abdulmuneer/master

DOC: Fixing help documentation error in numpy.zeros. Fixes #5497",numpy/add_newdocs.py
76e6aa6bbb063992368aca4a622bb2ba31526fc8,"DOC: Fixing help documentation error in numpy.zeros. Fixes #5497 [skip ci]
",numpy/add_newdocs.py
7a9e3d9535ac4cdd7b815d23416f36c3f979fc99,"ENH: genfromtxt: Change 'nrows' to 'max_rows'.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
54ebec335384ec1d6f8e65bdd35c4f359797dc0b,"Merge pull request #5493 from jaimefrio/lib_tests

MAINT: bring back np.lib tests",numpy/lib/setup.py
6bb48b0639322a0f5908996f33c98db62304b839,"MAINT: Make argument determination in NameValidator more precise.

The function was useing `'u' in case_sensitive` to detect `upper`.
Make that more precise with `case_sensitive.startswith('u').

Raise ValueError if case_sensitive has unrecognized value.
",numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py
c8f603e6e5d74d258373a5e56dd86312494542ec,"MAINT: bring back np.lib tests
",numpy/lib/setup.py
4b1aab31cc66d4a5abd3d2d6b40e461cadd79d2a,"TST: Fix bug in test_dtype_with_converters_and_usecols.

The case_sensitive argument to np.recfromcsv has a default value of
'lower'. That value was not previously correctly passed on, but is
now, so the previous expected values in this test were incorrectly
upper cased.
",numpy/lib/tests/test_io.py
1b88f08b4f27e26adc7a1200a51974eb5bf719e0,"BUG: Fix genfromtext NameValidator arguments passed to easy_dtype.

np.genfromtxt validates field names twice: once in genfromtxt and once
in easy_dtype. Whilst the arguments to genfromtxt are used in the first
validation, they aren't passed to easy_dtype (which is used only when
dtype != None) and therefore in this case the default validation (strip
non-alphanum, replace spaces) gets confusingly applied, ignoring
genfromtxt's arguments.

This patch adds fixes genfromtxt by passing the appropriate arguments
onwards to easy_dtype.  That is probably the least invasive way to fix
the issue.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
e0807a56f6c6717b006ba80c86c3149d51990f63,"Merge pull request #5476 from juliantaylor/merge-cbase

merge _compiled_base module into multiarray",.gitignore,numpy/add_newdocs.py,numpy/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/{lib/src/_compiled_base.c,numpy/core/src/multiarray/compiled_base.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/umath/umathmodule.c,numpy/lib/bento.info,numpy/lib/bscript,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/setup.py
d5e02707c041e97b0b6779e6d73eeb8b236576c7,"Merge pull request #5458 from jaimefrio/sort_refactor

MAINT: Refactor _new_sortlike and _new_argsortlike",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
0091499ec28cd9ceb30cd94c0e40191570b6fec6,"ENH:Add keyword nrows to genfromtxt.

This allows one to specify the maximum number of row processed in
in a call. The new functionality allows for reading more complex
data formats. For instance, multiple calls can be used to read in
multiple arrays stored in a single file.

Closes #5084.
Closes #5093.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
d44604ef625ff38e835a51cad3bcd24400278eff,"Merge pull request #5489 from charris/cleanup-gh-5156

Cleanup gh 5156",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
8697b9cc58815efb16045542833ee30f2623325b,"TST: Add test for loadtxt with None as string type.
",numpy/lib/tests/test_io.py
95aac05724290159044aecf443df1b95e218e895,"BUG: Fix loadtxt with comments=None and a string None data.

Current loadtxt with `comments=None` considers the string `'None'` as a
comment symbol. Fixed by making split_line method check if comments is
None.

Closes #5155.
",numpy/lib/npyio.py
5b714c7ecd46ed8e730afc8f37f8b8d1faf36497,"Merge pull request #5482 from ahaldane/recordarray_doc

DOC: improve record/structured array nomenclature & guide",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.indexing.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/internals.code-explanations.rst,doc/source/user/basics.rec.rst,numpy/add_newdocs.py,numpy/core/records.py,numpy/core/src/multiarray/arrayobject.c,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/structured_arrays.py,numpy/lib/npyio.py
1bd0b4e8f176cd80e81b5f50832db5f8ba1ee1e9,"DOC: improve record/structured array nomenclature & guide

This update adds a section better describing record arrays in the user
guide (numpy/doc/structured_arrays.py).

It also corrects nomenclature, such that ""structured array"" refers to
ndarrays with structured dtype, ""record array"" refers to modified
ndarrays as created by np.rec.array, and ""recarray"" refers to ndarrays
viewed as np.recarray. See the note at the end of the structured
array user guide.
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.indexing.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/internals.code-explanations.rst,doc/source/user/basics.rec.rst,numpy/add_newdocs.py,numpy/core/records.py,numpy/core/src/multiarray/arrayobject.c,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/structured_arrays.py,numpy/lib/npyio.py
90199336e34891448ce4052f322228906a72c774,"MAINT: update .gitignore for new template files
",.gitignore
4f861238803aa9ab913a1011eabed3505a3f703d,"MAINT: merge _compiled_base module into multiarray

Allows access to internal functions for the file.
",numpy/add_newdocs.py,numpy/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/{lib/src/_compiled_base.c,numpy/core/src/multiarray/compiled_base.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/umath/umathmodule.c,numpy/lib/bento.info,numpy/lib/bscript,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/setup.py
723a1ee58493061b4f1701bb173f648712e3addc,"Merge pull request #5480 from charris/cleanup-gh-5279

BUG: Fix astype for structured array fields of different byte order.",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
82dc4fc7b007a761acf781589b796eab0413c614,"BUG: Fix astype for structured array fields of different byte order.

The offending commit is c53b0e4, which introduced two regressions:

- using astype to cast a structured array to one with a different byte
  order no longer works;
- comparing structured-array dtypes can give incorrect results if the
  two dtypes have different byte orders.

This pull request should fix both.

One thing I wasn't sure about is reordering struct fields.  In my
implementation, the `equiv`, `same_kind`, and `safe` rules are now
allowed to reorder fields.  If that isn't desired, though, it's a pretty
easy change.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
3937a87660fa12ce283d8a711056339a7093cd18,"MAINT: Refactor _new_sortlike and _new_argsortlike

Simplify the signature of both functions, remove code duplication
inside, add proper handling of byte-swapping for compound dtypes
(like complex, fixes #5441), and add functionality to deal with
dtypes containing Python object references. This last enhancement is
not needed for this PR, but supports subsequent ones.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
b69035e8ea28bd759b929822aaba544d3c5f8c30,"Merge pull request #5475 from ContinuumIO/pickle_string_fix

BUG: Fix #3926: pickling empty string fails",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
c51770d6c553f9c69ceda324a2e7c7a249185366,"BUG: Fix #3926: pickling empty string fails
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
960433e8f5f39587d10c60ed1d3f50591434a82b,"Merge pull request #5468 from jaimefrio/swapaxes_view

ENH: Make swapaxes always return a view. Fixes #5260",doc/release/1.10.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
a7fdf04f2a527055afe53dfaffaca09931b12a2d,"TST: swapaxes tests
",numpy/core/tests/test_multiarray.py
1d3bcb446771ff16e9cf06e3a5d9cac20e68c4ac,"ENH: Make swapaxes always return a view

swapaxes now returns a view of the input array when the axes to swap
are both the same, not the input array as it used to do. Fixes #5260
",doc/release/1.10.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/shape.c
e73d4fcb2a0052572e6c1efaffa2b05f5931956e,"Merge pull request #5471 from juliantaylor/faster-fastclip

ENH: faster fastclip functions",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_numeric.py
1b49bc5ad5cc454d628ba4eb36ff231c5f1f177b,"DOC: add ""build and test"" section to developer guide.  Closes gh-5465.

[ci skip]
",doc/source/dev/development_environment.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/index.rst,doc/source/user/install.rst
bc1b8926d10d5aa85f035d62fcf6d1f007c4a8af,"ENH: faster fastclip functions

copying the element in the loop via an else is significantly faster than
copying first and skipping the else clause as it allows the compiler to
use branchless instructions like minsd/maxsd.

For floats this is 3 times faster for min xor max and 40% faster for min
and max. Further improvements are possible via vectorization.
There is a penalty for inplace clips due to higher memory bandwidth
usage but it seems to be less than 10% and could be easily recovered
with another template specialization if required.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_numeric.py
71c7a3938f545687431dd35fb454f9ecf5dee49d,"DOC: update ""build and install"" page in user guide.

- add section on basic and parallel builds
- update links and remove outdated info
",INSTALL.txt,doc/source/user/install.rst
4ed1587a7de85b4fa01dff8ef6e0e901a25f149c,"Merge pull request #5464 from charris/rollaxis-always-return-view

Rollaxis always return view",doc/release/1.10.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
cf41fceb22df5e6f2f48108a4beb4325e5f8b7fa,"TST: Tests for numeric.rollaxis.

There were no tests previous to this.
",numpy/core/tests/test_numeric.py
38b1a7c3038223ee72138413621ef3e00c9224f5,"ENH: Make rollaxis always return a view.

Previous to this commit, rollaxis returned a view unless the order of
the axis was unchanged, in which case the input array was returned.
",doc/release/1.10.0-notes.rst,numpy/core/numeric.py
5c00d82b9fdb0cb0e137ba36549ce12ad3d0d047,"DOC : rollaxis returns a view of the input.
",numpy/core/numeric.py
8a81c08e777996b933fe4568ee5a6a0e01416faf,"Merge pull request #5462 from charris/gh-5453

MAINT/TST: Add test for require, stop making extra copies.",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
e744b031c20a9ca8fd550f2c51637cdbc8a40307,"MAINT/TST: Add test for require, stop making extra copies.

Also add ENSUREARRAY and a note about  requiring native
byteorder to the docs.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
a8b6452088ee34efc15f793e373d1c57d687b003,"Merge pull request #5459 from rgommers/pareto-docstring

DOC: fix a few bugs in the random.pareto docstring.  Closes gh-4181.",numpy/random/mtrand/mtrand.pyx
99222222deb9231ea0bbc6320c872f1182d3ad27,"Merge pull request #5461 from rgommers/c-api-doc

DOC: some small fixes to the ""Using Python as glue"" section of the user ...",doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.python-as-glue.rst
fea2ebbfc6adff3763bddb36ccbc240017ed8aad,"DOC: fix a few bugs in the random.pareto docstring.  Closes gh-4181.

[ci skip]
",numpy/random/mtrand/mtrand.pyx
a41c3115677e487028321bf84c2650a9e862ce4a,"DOC: some small fixes to the ""Using Python as glue"" section of the user guide.

[ci skip]
",doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.python-as-glue.rst
1d87101d3ea51a797450e1cb1c0eaba19a731c9c,"Merge pull request #5455 from gerritholl/masked_structured_datetime64

BUG: Fix #4476 by adding datetime64 and timedelta64 types",numpy/ma/core.py,numpy/ma/tests/test_core.py
00ee332e9d95362a3d487f784cdc8fc06cf0832c,"TST: Add testcase for the fix to bug #4476.

Add a testcase `test_fillvalue_datetime_timedelta` to class
`TestFillingValues` for the fix to bug #4476.  See commit
216fd17 and pull request #5455.
",numpy/ma/tests/test_core.py
4bfcf4801ceedd0563e3648154fc49985729c442,"BUG: Fix #4476 by adding datetime64 and timedelta64 types

This commit fixes bug #4476 by adding the codes for the datetime64 and
timedelta64 types to the `default_filler` dictionary in numpy.ma.core,
used by `default_fill_value`.  Also adapt checking in the
`default_fill_value` to include code for timedelta64, not only datetime64.
",numpy/ma/core.py
14445500bdf67600f926c6426bad55977441dca0,"Merge pull request #5446 from jaimefrio/linspace_denormals_again

BUG: linspace should return the same as arange when possible",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
2aab65415843c8a8c662ddb5d33536dc95671076,"BUG: linspace should return the same as arange when equivalent

Fixes failures on other projects (scipy.signal) introduced by #5438
",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
25ee91be314dff9fe072bcd0c9b7c315fa0f2c65,"Merge pull request #5361 from JDWarner/arraypad_fixes

ENH: Improve arg handling & enhance test suite for `np.pad`",doc/release/1.10.0-notes.rst,numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
615bcd163d1c557b88c5f8a7d50128e3cccfd5a6,"Merge pull request #5447 from juliantaylor/ma-median-ndarray

BUG: fix ma.median used on ndarrays",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
b82230fdb438ba368e18ad8d3c55cb4779ab2acf,"BUG: fix ma.median used on ndarrays

ndarrays have a data attribute pointing to the data buffer which leads
to the median working on a byte view instead of the actual type.
closes gh-5424
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
ad238c1c3d5c136a61e795fc056373e0a1cbd8e1,"Merge pull request #5438 from jaimefrio/linspace_denormal

BUG: linspace handling of denormals, fixes #5437",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
bef3f08e778470ea23abbd27e5d4ef3064aa00ef,"Merge pull request #5442 from tdihp/patch-1

Fix typo in slogdet doc",numpy/linalg/linalg.py
22a9c89e0c20ed1314b771579b129d91416d8823,"Fix typo in slogdet doc

fix typo in slogdet docstring

""than"" -> ""then""",numpy/linalg/linalg.py
4eac56a72907c54038a4863186af8e2198653125,"DOC: Clarify documentation for Yields.
",doc/HOWTO_DOCUMENT.rst.txt
3d182f03fd6956aa464f610f6d1e4a3d214a946a,"DOC: Add documentation for Yields section in docstrings.
",doc/HOWTO_DOCUMENT.rst.txt
b70e2495c58f202f185fac25f9a911af4f831fa2,"Merge pull request #5439 from charris/gh-5347

TST: Update assert_array_almost_equal_nulp tests",numpy/testing/tests/test_utils.py
103fee0ddc23bf29367b052fd39a411c926daae5,"TST: Update assert_array_almost_equal_nulp tests

This fix addresses Issue #347.

All of the tests in this class were using random numbers generated
without a seed. This broke `test_simple` in a nondeterministic manner.

Rewrote all tests for this function. Instead of using random numbers,
well-defined arrays of widely varying amplitude were created instead.
Changed the array modification values so that the test arrays were
either just above or just below the NULP threshold.

Added tests for float64, float32, complex128, and complex64 dtypes, and
added both addition and subtraction tests. Tried to standardize the code
for all tests.
",numpy/testing/tests/test_utils.py
ae2fbd3754d3fb60531705a4f212b9bdfbbdaefd,"Merge pull request #5332 from rnelsonchem/dev_docs

DOC: Reorganization request for Development Workflow docs",doc/HOWTO_BUILD_DOCS.rst.txt,doc/source/dev/gitwash/branch_list.png,doc/source/dev/gitwash/branch_list_compare.png,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_links.inc
926b236ca1500dcb51953ae2a99825578f037848,"Merge pull request #5436 from aisthesis/seterrcall-doc

DOC: Fix doc of seterrcall. Issue #4427",numpy/core/numeric.py
f304b48296f679e5605210fc19f36fa43e569927,"DOC: Fix doc of seterrcall. Issue #4427
",numpy/core/numeric.py
9d9e5a143757a82f85415b17ec797ec9706ecf3a,"BUG: linspace handling of denormals, fixes #5437
",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
557108cd2406a7c98e2aa88d2f5a04bbf3bbf4a0,"DOC: Update Development Workflow Page

The ""Basic Workflow"" section of the Development Workflow page was reorganized
to make it clearer to new users and remove/update old material.

Major changes:

- Moved the core developer notes. Core dev notes are confusing in basic usage
  information. Updated a couple of the commands

- Added more commands and reorgaized the ""New Feature Branch"" section. Took
  some text from ""Rebasing"" and moved it here, because it was redundant.

- Made many changes to the ""Editing Workflow"" to clarify commands. Moved some
  git push stuff into this section as well.

- Moved pull request section to just after editing workflow. Removed outdated
  images and simplified the text. Make code review requirements explicit.

- Moved rebasing and troubleshooting sections to the end. Could add more here
  later.

- Links renamed and broken link removed.
",doc/HOWTO_BUILD_DOCS.rst.txt,doc/source/dev/gitwash/branch_list.png,doc/source/dev/gitwash/branch_list_compare.png,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_links.inc
aaf5429e327c098ccf25ac4ab901348ff662847b,"Merge pull request #5432 from jrjohansson/polynomial-docstring-updates

Minor docstring fix",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py
04bf8c92fd920675bc765fadc62f4d7ff6ede9b4,"Minor docstring fix
",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py
03c2bb872f81fa20f42451d8f236d0f4a034d598,"Merge pull request #4984 from MartinThoma/master

DOC: style fixes for random.multivariate_normal docstring.
",numpy/random/mtrand/mtrand.pyx
8b5698515815e634d2c7971d0da9b8871a461db3,"DOC: style fixes for random.multivariate_normal docstring.
",numpy/random/mtrand/mtrand.pyx
29464a96941b61b91d703dc20c3f426466df0c2a,"ENH: Improve arg handling & enhance test suite for np.pad
",doc/release/1.10.0-notes.rst,numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
f4be1039d6fe3e4fdc157a22e8c071ac10651997,"Merge pull request #5421 from charris/special-case-matrix

Special case matrix",doc/release/1.10.0-notes.rst,numpy/core/fromnumeric.py,numpy/lib/twodim_base.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_numeric.py
f80d5e06485b59f8ece7421a3a81b809dd5f78f5,"DOC: Document changes to diag, diagonal, ravel in 1.10-notes.rst.

The changes are that they all preserve ndarray subtypes with the
exception of ravel, which still return 1-D arrays for backward
compatibility.
",doc/release/1.10.0-notes.rst
96d9c34a1ac1cb9845422d4533ba396c7a5b62a8,"Merge pull request #5309 from rgommers/remove-f2py-deprecation

MAINT: remove NPY_NO_DEPRECATED_API define from f2py.",numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c
d3e8d697abe3f50fce0a2b81526483ee533d36af,"Merge pull request #5425 from mbyt/ensure_OPT_environment_variable_is_read

BLD: ensure OPT build environment variable is read",numpy/distutils/unixccompiler.py
ed83ae77ebd92e6008c4e133d1dead56d8f575fb,"BLD: ensure OPT link environment variable is read
",numpy/distutils/unixccompiler.py
1cb9cf2429165660a40eb499b392b3a6133cdd34,"BLD: ensure OPT build environment variable is read
",numpy/distutils/unixccompiler.py
c6b8109a18e7b8e472b50713b4fc9a36fbb4de91,"Merge pull request #5418 from shoyer/nanprod

ENH: add np.nanprod",doc/release/1.10.0-notes.rst,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
1b2d2e977d51414121548d4454afdf02d9def3b3,"ENH: add np.nanprod

This PR adds an implementation of `nanprod`.

The actual function is a two-liner adapted from `nansum`. Most of this PR
consists of documentation and tests (for which I took the opportunity to do
some consolidation).

A method with the same functionality exists in pandas, and I was surprised to
discover that it's not in numpy.
",doc/release/1.10.0-notes.rst,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
c39a56a07a6603d356733a2716b49c6275f026bf,"Merge pull request #5423 from rgommers/npy-format-2point0-doc

DOC: update npy-format NEP and lib/format.py with version 2.0 descriptio...",doc/neps/npy-format.rst,numpy/lib/format.py
638a427af0ba0a1093d9945afa7defef61ec13ab,"DOC: update npy-format NEP and lib/format.py with version 2.0 description.

As discussed on gh-5413.  Version 2.0 was added in gh-4765.
",doc/neps/npy-format.rst,numpy/lib/format.py
ea927d961dfc32b6963aed3b3a10bc51c12543df,"BUG: Make ravel function return 1-D arrays for matrix argument.

This is a backward compatibility hack to avoid breaking scipy.sparse
after fixing ravel to respect subtypes. Subtypes are still respected
except in the case of matrices and subclasses of matrices.
",numpy/core/fromnumeric.py,numpy/matrixlib/tests/test_defmatrix.py
ad2d26442a4cf39ca378040f56ee928e673ad42a,"BUG: Make diag, diagonal return 1-D arrays for matrix arguments.

This is an ugly hack to preserve backwards compatibility for code
that uses matrices. It is needed since both diag and diagonal have
been changed to preserve subtypes otherwise.

Note that a.diagonal() still returns matrices when a is a matrix.
",numpy/core/fromnumeric.py,numpy/lib/twodim_base.py,numpy/matrixlib/tests/test_numeric.py
7fbc43b98d59ef982671b456cebc229425ae7e4e,"Merge pull request #5398 from Garrett-R/fix_5376

BUG: Fixes #5376: np.ravel to return same array type",doc/release/1.10.0-notes.rst,numpy/core/arrayprint.py,numpy/core/fromnumeric.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/matrixlib/tests/test_defmatrix.py
d2b6e96f48df28fe346c6ac6fa35b2ac324ef2f6,"Merge pull request #5415 from charris/tests-for-PyArray_AsCArray

TST: added test for PyArray_AsCArray #5313",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
1e052f387fccc0625e423e23b92a590d211e4a10,"TST: added test for PyArray_AsCArray #5313
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
3a9b3338078f948717dc5542803c4d1a06764670,"Merge pull request #5413 from rgommers/link-format-nep

DOC: link to the npy-format NEP in numpy.npyio docs.  Closes gh-4523.",doc/source/reference/routines.io.rst,numpy/lib/npyio.py
a9089242268d234c9f213af14c62a0a733f84a04,"Merge pull request #5396 from argriffing/add-nuclear-norm

ENH: nuclear norm",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
ce05d8a800d20879cdfd1636c5a7c6de5b415b1a,"DOC: 'sum of singular values' -> 'sum of the singular values'
",numpy/linalg/linalg.py
20bc2ebc50e3f02031e1867d036545c3e7d52af0,"DOC: link to the npy-format NEP in numpy.npyio docs.  Closes gh-4523.

[ci skip]
",doc/source/reference/routines.io.rst,numpy/lib/npyio.py
78f69df28acd80654705a43bcf1e977b9c423b53,"BUG: Fixes #5376: np.ravel to return same array type

In PR #5358, np.diagonal was modified to return whatever array type it took in.
Also, np.cumsum and np.clip return the same array type. So, np.ravel's behavior is surprising.
Two tests which were expecting np.ravel to return an array have been changed.
Also, the optional `order` parameter was added to MaskedArray.ravel to make it compatible
(matrix.ravel already had this parameter).
",doc/release/1.10.0-notes.rst,numpy/core/arrayprint.py,numpy/core/fromnumeric.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/matrixlib/tests/test_defmatrix.py
c852f5999c79fa7b7799756e824dcc0270e58913,"Merge pull request #5410 from insertinterestingnamehere/einsum_readable

ENH: Make views produced by np.einsum writeable",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
08cfe11e41c2879384a45f1e93ca265296bfd47e,"DOC: Added a note about writeability of views from np.einsum to
the corresponding docstring.
Also added an example showing how to write to the diagonal of an array.
",numpy/add_newdocs.py
26a8ae33f7a8f218ab0f4cf0ba89566cadfe4d1f,"DOC: Add note about writeable views from einsum to 1.10.0 release notes.
",doc/release/1.10.0-notes.rst
a42a5d1af40e91194a9f8ce03a47f50c1ca08f03,"TST: Test that, when returning a view, einsum returns a writable view
whenever the input array is writable.
",numpy/core/tests/test_einsum.py
59cab3e78b993a82342f86976b6cdcaa4a8a39c9,"ENH: Make einsum return a writeable view whenever the input is writeable.
",numpy/core/src/multiarray/einsum.c.src
061feab9d14041ff6769548abdc1157e3c8627b7,"Merge pull request #5405 from Garrett-R/docstring_change_for_np_diagonal

DOC: Docstring of np.diagonal to reflect edits of PR #5358",numpy/core/fromnumeric.py
df5c87f1b44b47fbf94029203d261c2e993c8f45,"DOC: Docstring of np.diagonal to reflect edits of PR #5358

These should have been included with PR #5358.
",numpy/core/fromnumeric.py
fb898ce678c8d45364d1ee7b1a6d0308562a8ad9,"Merge pull request #5386 from maniteja123/issue5354

BUG: Issue 5354 - Fixed segmentation fault when clipping complex arrays",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_numeric.py
61f3b10a4fe6a2e5061230bf15d6afb7d6c442d1,"BUG: solves complex array clip in issue #5354 and added symmetric regression test
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_numeric.py
1f6084a48b3a8a3b417573ac8aaf6932e585ccd0,"Merge pull request #5403 from Juanlu001/patch-1

Remove NotImplementedError for MinGW-w64",numpy/distutils/fcompiler/gnu.py
b2f6792d284b0e9383093c30d51ec3a82e8312fd,"Merge pull request #5402 from rgommers/pep440-relnotes

DOC: add change to dev-version string (gh-5387) to 1.10.0 release notes.",doc/release/1.10.0-notes.rst
acd873633a9c7017571834ca9d266ed5756d73ed,"Removed NotImplementedError for MinGW-w64

Closes #3405",numpy/distutils/fcompiler/gnu.py
a29c718a593dc6f8d523b919c4d4e353a8bd8ccc,"DOC: add change to dev-version string (gh-5387) to 1.10.0 release notes.
",doc/release/1.10.0-notes.rst
01f56bf5c36bece01e48d05dfd430c3696d57ff0,"Merge pull request #5400 from yw5aj/master

DOC: Added ma.clump_masked to doc; removed `extras` in examples",doc/source/reference/routines.ma.rst,numpy/ma/extras.py
c5b19b10fa05724e1df177737dcacee735373364,"DOC: Added ma.clump_masked to doc; removed `extras` in examples

1. Added `ma.clump_masked` and `ma.clump_unmasked` into the rst file;
2. Removed the `.extras` in the examples due to the namespace change
",doc/source/reference/routines.ma.rst,numpy/ma/extras.py
b4cd02533275d9610c8a38578a4884d711440773,"Merge pull request #5397 from esc/fix/trailing_whitespace

MAINT: remove trailing whitespace",numpy/lib/npyio.py
33bacd5114e1b22f9ff50670342385dbf04050e6,"remove trailing whitespace
",numpy/lib/npyio.py
8e539283515840f63a2ba0d3cea991fe7b3b1802,"MAINT: remove nuclear norm from the list of options for computing condition number
",numpy/linalg/linalg.py
d699516f58b8a0293081d58a1358734903c0ac1f,"ENH: nuclear norm
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
901f88bd3c20b35476e8d4a781bf8bd74547fb2a,"Merge pull request #5369 from charris/compat-note

REL: Update the 1.10 release notes.",doc/release/1.10.0-notes.rst
aa95d5dde0811c2d8394850cbda5bb10296eba9b,"Merge pull request #5364 from charris/detect_atlas_3_10

ENH: Add support for ATLAS > 3.9.33.",numpy/distutils/system_info.py
bcd7169d6839f9aa64bcab3f716e6c4b4974916b,"Merge pull request #5383 from charris/xerbla

BUG: Xerbla doesn't get linked in 1.10-devel.",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/python_xerbla.c,numpy/linalg/tests/test_linalg.py
75666e3abce678b4ddaee1c9f65ea497a234fae0,"BUG: Xerbla doesn't get linked in 1.10-devel.

Add our python_xerbla to the multiarray sources. That function is
needed for all modules that link to the ATLAS 3.10 libraries, which
are now all located in two files, libsatlas and libtatlas.

Also make the test for xerbla linkage work better. If xerbla is not
linked the test will be skipped with a message.

Closes #5362.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/python_xerbla.c,numpy/linalg/tests/test_linalg.py
dd0732e4bda8f4379b17ea479bcecc876ab50ce6,"ENH: Add support for ATLAS > 3.9.33.

Recent ATLAS combines the previous libraries into two

* libsatlas -- single threaded.
* libtatlas -- threaded.

This fix is a bit of hack in that ATLAS > 3.9.33 is treated as a new,
separate library covered by atlas_3_10_info, but the latter derived
from atlas_info, which treats the cblas, atlas, and atlas_lapack
libraries separately, so the new info has a bit of repetition.

The alternative would be to rewrite atlas_info, but that can wait
on a larger cleanup of the build system.

Closes #3774.
",numpy/distutils/system_info.py
2be7ec4d0a65102b0d68cf75d6d877aecd71a524,"Merge pull request #5374 from lebigot/patch-1

DOC: Fixed incorrect assert_array_almost_equal_nulp documentation
",numpy/testing/utils.py
3b6217f3799f85686c1ae87bbdc5cb10ad4585ec,"DOC: Fixed incorrect assert_array_almost_equal_nulp documentation

The `max()` function previously used does not work with two array-like.
`maximum()` does, and is what is essentially used in the code
(`ref = nulp * np.spacing(np.where(ax > ay, ax, ay))`).
",numpy/testing/utils.py
b5cb6f1ae2e45f54fdf1f41fa6a4225a8583d7ba,"Merge pull request #5387 from argriffing/pep-440

BLD: PEP 440",setup.py
c683a43a23be09eda868a6be2427e4c9ef583447,"BLD: for PEP 440 compliance, change development version name format from e.g. 1.10.0.dev-243ab56 to 1.10.0.dev+243ab56
",setup.py
04531307b4bac69f96fc8e284f0f18da2d5345fd,"Merge pull request #5390 from sturlamolden/mtrand-bugfix-threadsafe

BUG: Make RandomState.seed, RandomState.randint and RandomState.shuffle threadsafe
",numpy/random/mtrand/mtrand.pyx
fee4bcbaf0eb1c7d5c5a0eadc2011be00370b335,"BUG: make seed, randint and shuffle threadsafe
",numpy/random/mtrand/mtrand.pyx
a581765dbba3534a556fedcb6c1af7d9b235435c,"Merge pull request #5388 from sturlamolden/mtrand-bugfix-threadsafe

BUG: Make RandomState.set_state and RandomState.get_state threadsafe
",numpy/random/mtrand/mtrand.pyx
52958884a2ff36737c018102c68f28d221dac613,"BUG: make set_state and get_state threadsafe
",numpy/random/mtrand/mtrand.pyx
243ab56dc0c2a0352c3f326e783af3bcdbaf58bd,"Merge pull request #5380 from ewmoore/apidocfixtiny

DOC: fix typo in array flag docs.",doc/source/reference/c-api.array.rst
8b3d681521a9bb6ef50189eda57ae8cdce10951a,"DOC: fix typo in array flag docs.
",doc/source/reference/c-api.array.rst
3ef77eea0d9c2cd76bc9b89b04a32f1322f842d5,"Merge pull request #5368 from tacaswell/sundry_doc_changes

Cleanups in documentation formatting.",numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/arraypad.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/ma/core.py,numpy/random/mtrand/mtrand.pyx
26d883ce844b1c808832dd0fef3ff5f4dab85106,"REL: Update the 1.10 release notes.

Mention that diag and diagonal functions now preserve subtypes. That
can lead to incompatibilies with previous code using matrices.
",doc/release/1.10.0-notes.rst
2070ecf08a4727819b0268f761f6614a153e619c,"Merge pull request #5358 from Garrett-R/fix_bug_2015

Fix #2015: diag returns ndarray instead of matrix",numpy/core/fromnumeric.py,numpy/lib/twodim_base.py,numpy/matrixlib/tests/test_numeric.py
35890ae6c0e151ece1059b6052e1a41836658f31,"Merge pull request #5367 from WarrenWeckesser/doc-format-ref

DOC: Give a more explicit reference to the .npy format documentation in the 'save' docstring.",numpy/lib/npyio.py
1b908fc0f119f6d4137080d1db317b6b9c4e3e74,"DOC : optional parenthesis
",numpy/lib/financial.py
c05734e8092e1550800c42b07dec080a2021e5fa,"DOC : added missing space in frexp docstring
",numpy/core/code_generators/ufunc_docstrings.py
ab6b165d06fe74a738b8ac2f60008ccf4820ba94,"DOC : integer -> int doc nitpick
",numpy/core/numeric.py
93ee10ef98936e1fa5386836fd5b34b4b6e4bb68,"DOC : do not abuse enum markup

 - {ndarray, bool} -> ndarray or bool
 - {int, array of ints} -> int or array of ints
 - {str, function} -> str or function
 - {sequnce, int} -> sequence or int
 - {array_like, poly1d} -> array_like or poly1d
 - {None, list of `m` scalars, scalar} -> list of `m` scalars or scalar
",numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/lib/arraypad.py,numpy/lib/polynomial.py
48b61ec8c4b6e81100d96b3ab854947dd6ab1f64,"DOC : move shape to front to match rest of docs
",numpy/lib/function_base.py
994a877d459e4ae9795dc0e35ebb9faef575ad13,"DOC : do not abuse enumeration for return types

change '{ndarray, float}' -> 'ndarray or float' as {} are for
when the value is an enumeration
",numpy/core/code_generators/ufunc_docstrings.py,numpy/lib/function_base.py,numpy/ma/core.py,numpy/random/mtrand/mtrand.pyx
ad38608c125df357f7136e111f36955b6fab5d33,"DOC : list type option in tensordot axes arg
",numpy/core/numeric.py
997f4323ff4cd19943b7c4a79edfcbe46914b1be,"DOC: Give a more explicit reference to the .npy format documentation in the 'save' docstring.
",numpy/lib/npyio.py
629735bf25589d5551f9e5c1c5c3194d25511260,"Merge pull request #5287 from chatcannon/reconcile-c-api-with-docs

Reconcile C API with docs
",doc/source/reference/c-api.array.rst,numpy/f2py/src/fortranobject.c
8df7eddd48584606310790be6d8d0d6b36671297,"MAINT: cast PyArray_ITEMSIZE result to avoid warnings

return type depends on API version used
",numpy/f2py/src/fortranobject.c
69265b8601ed72c558d033ecef4d6157b052da05,"MAINT: Update printf statements in fortranobject.c

Using NPY_INTP_FMT to format PyArray_ITEMSIZE
",numpy/f2py/src/fortranobject.c
cf2dc930e7b7f737445e8698041b5d98f6f88c4e,"Merge pull request #5277 from sotte/multidot_typos

DOC: fix typos and clarify multi_dot docstring..",numpy/linalg/linalg.py
c5808d11299d6866886dd5fc89d8d522dc06617d,"Merge pull request #5359 from tacaswell/linspace_doc

DOC : minor changes to linspace docstring
",numpy/core/function_base.py
14a3dca63e7fac58a1311acf3e01ab548a2e7ea2,"DOC : minor changes to linspace docstring

 - added optional flag to dtype
 - moved conditional on step to the description from the type
",numpy/core/function_base.py
971ae727442f83a81f52af619ea13649a6ddcf83,"Improved PEP-8 compliance
",numpy/core/fromnumeric.py,numpy/lib/twodim_base.py
819b3a8a019469774a5343afd87ec71ec696bf80,"BUG: Closes #2015: diag returns ndarray

If x is a matrix, np.diag(x) and np.diagonal(x) now return matrices
instead of arrays.  Both of these cause x.diagonal() to be called.
That means they return row vectors (just like x.flatten(), x.ravel(),
x.cumprod(), etc.)
",numpy/core/fromnumeric.py,numpy/lib/twodim_base.py,numpy/matrixlib/tests/test_numeric.py
b8a5da49675009165326ec2e7aa6968cf6e15782,"Merge pull request #5355 from jaimefrio/digitize_bug

BUG: digitize segfaults on TypeError",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
0e8edab421e3b20ff2f4085e06040101c2d9865f,"BUG: digitize segfaults on TypeError

The new searchsorted-based digitize introduced in #5101 segfaults
when it should raise a TypeError.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
545d485751b3b2c1f68e36dbc4ea64ca50876a59,"Merge pull request #5349 from bobpoekert/patch-1

Change pronoun in doc string from ""his"" to gender-neutral ""their""",numpy/lib/format.py
36f71788620bb17d123669cf03f086fb2b87b3a8,"Change pronoun in doc string from ""his"" to gender-neutral ""their""",numpy/lib/format.py
152805e5e2f0dc51fdbe89e0a07127b3ac49984d,"Merge pull request #5335 from rnelsonchem/fft_name_fix

BUG: Rename fft C functions to avoid name conflict",numpy/fft/fftpack.c,numpy/fft/fftpack.h,numpy/fft/fftpack_litemodule.c
b3121e856556ca2ca1cce22ab100d85dd702a30a,"BUG: Rename fft C functions to avoid name conflict

Resolves issue #565.

The public fft functions defined in fftpack.c have name conflicts on certain
systems, so the prefix ""npy_"" was added to these functions.

Added NPY_VISIBILITY_HIDDEN to the public functions in both fftpack.h and
fftpack.c. This required rearranging the includes at the beginning of
fftpack_litemodule.c so that this macro was properly defined. In addition,
Python.h and numpy/ndarraytypes.h were included in the fftpack.h.

One function, rfftb1, was flagged as `static` as it was not exported in the
header.

Build and tests pass using both Python 2.7.8 and Python 3.4.2.
",numpy/fft/fftpack.c,numpy/fft/fftpack.h,numpy/fft/fftpack_litemodule.c
00e6f31e2d8b2ea358fdd1fb582e29570c98f2bf,"Merge pull request #5342 from argriffing/show-relaxed-strides-in-nosetester

TST: report relaxed strides setting alongside the numpy version and path at the beginning of nosetests",numpy/testing/nosetester.py
8e7645989e4b8a7c2bb27b02e9fc5917fb70ac70,"TST: report relaxed strides setting alongside the numpy version and path at the beginning of nosetests
",numpy/testing/nosetester.py
a6b0917f180999293fdebbce4ae1728b4e3f45ff,"Merge pull request #5319 from larsmans/c-fixes

MAINT: refactor packbits/unpackbits",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_packbits.py
e31dcad0aca659acd89ca90ae5030731d0eccf91,"Merge pull request #5333 from rnelsonchem/comp_exe

BLD: Change Fortran version flag and string check",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
c4c2f21a784d94f2708163243dbfea846d527f77,"BLD: Change Fortran version flag and string check

The version check flag for GnuFCompiler and Gnu95FCompiler were changed from
`--version` to `-dumpversion`. This simplifies the gnu_version_match code for
gfortran, and makes it possible to drop much of the check code for g77 as
well. This fix addresses issue #5315 and #5321.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
5ef95667c2feacc6d7f3206ad19fd222ecd2d7c1,"DOC: fix typos and clarify multi_dot docstring..

- fix singular/plural issues
- don't switch between ""order"" and ""ordering""; use ""order""
- clarify the shapes of the arguments
- don't ""import numpy as np"" in docstring
",numpy/linalg/linalg.py
24effb6b7a075e23d85ea0b60ed8a607fe218c14,"ENH ensure np.packbits works on np.bool dtype
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_packbits.py
8a2dd0680e8470aab7ad63622c0d0af703f58d42,"Merge pull request #5327 from madawilliams/savetxt

ENH: More explicit error message for np.savetxt",numpy/lib/npyio.py
6ce98831797729d7fb8aa525ddda017aceffa5e3,"MAINT/TST: refactor and test packbits/unpackbits

Pushes the GIL release one loop outward. First test for these functions (!).

Incorporates suggestions by @jaimefrio and @charris.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_packbits.py
f7eb37f16d7abff1d11987dced498ce923088001,"Merge pull request #5324 from Garrett-R/fix_bug_2917

BUG: Fixes #2917: numpy.lib._iotools.StringConverter.upgrade return",numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py
665e52e8460cfb2e75e91bd70a60c813033fd8ed,"Merge pull request #5326 from cournape/fix_hashable_collections

BUG: fix collections.Hashable behaviour for numpy arrays.",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_multiarray.py
8993a5d07b0fba2968b4cb0d61489ae86da001bf,"Merge pull request #5322 from yw5aj/tensordot_doc

Imrpoved docstring for np.tensordot()",numpy/core/numeric.py
1761a648f27cb1277897170ed220de9176d52a75,"ENH: More explicit error message for np.savetxt
",numpy/lib/npyio.py
359118160365672554d576b3d6b341e907135133,"BUG: fix collections.Hashable behaviour for numpy arrays.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_multiarray.py
b82388e32ab4c717fd952fa4b8b0ece5512c9972,"BUG: Closes #2917: numpy.lib._iotools.StringConverter.upgrade return

numpy.lib._iotools.StringConverter.upgrade should have a return value
",numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py
af1cf19cb18e10f7c5ca43ff52cb64f31fd2c02e,"DOC: Imrpoved docstring for np.tensordot()
",numpy/core/numeric.py
0afa5fc05032cacae38280063544ca5d315d6d1d,"Merge pull request #5304 from juliantaylor/mul-overflow

ENH: use gcc intrinsic for overflow checked multiplication",numpy/core/setup_common.py,numpy/core/src/private/templ_common.h.src
710be5b4c61aded0d92a057bf488d71af86869f1,"Merge pull request #5314 from hensing/master

BUG: Closes #5313: PyArray_AsCArray caused segfault with 3D-arrays",numpy/core/src/multiarray/multiarraymodule.c
74b08364df5ba161131e5594e2aaeab03a9c6471,"Merge pull request #5308 from gmabey/swig-std-complex

ENH: added std::complex support to numpy.i",tools/swig/numpy.i,tools/swig/test/Array.i,tools/swig/test/ArrayZ.cxx,tools/swig/test/ArrayZ.h,tools/swig/test/Makefile,tools/swig/test/setup.py,tools/swig/test/testArray.py
eb61066a1b2ddb046a45ee4edb4984d80b537f69,"Merge pull request #5301 from larsmans/pyiter-doc

DOC: NpyIter documentation improvements",doc/source/reference/c-api.iterator.rst
821072b735d393820e9500ccfad34c78e2885bb2,"DOC: add documentation for some scalar checks

DOC: Mention that PyArray_Return steals a reference to arr
",doc/source/reference/c-api.array.rst
e73ee5dbab7da5f4ed1af993fb31150d4c37e2c9,"Merge pull request #5217 from jnothman/note-issue-1866

DOC note the effect of #1866 in byteorder discussion",numpy/doc/byteswapping.py
7d106d590697fcbb7199b00e1f40ec835fe809f6,"BUG: reduce maximum alignment to 8 bytes on 32 bit

malloc only provides 8byte alignment and is sufficient to load complex
on x86 platforms.
This fixes the f2py alignment failures with complex types on win32 or on
linux32 with -malign-double
",numpy/core/setup.py,numpy/core/src/private/npy_config.h
3351dbf311d35220c2782367c543e4825fadce31,"BUG: fix string arrays not being aligned

If itemsize is a power of two use that as the required alignment up to
the maximum provided by the platform. Power of two sizes may be accessed
via larger moves than bytes.
Non-power of two sizes are accessed bytewise and can thus always be
considered aligned.
Closes gh-5293
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
9a24de1cac6923055b3010bbc8f63ae8595b534c,"BUG: Closes #5313 PyArray_AsCArray caused segfault
",numpy/core/src/multiarray/multiarraymodule.c
3202612006ce651913d2fd448e3eb6393ba8414b,"MAINT: remove NPY_NO_DEPRECATED_API define from f2py.

See gh-5281 for discussion.  With the defines in, compiling scipy 0.14.0 and
below isn't possible.
",numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c
b63b64eb8d7b0236d77e44e1705e622d15f30daa,"DOC: array docstring lists correct order default

Fixes #5306
",numpy/add_newdocs.py
668668600d0097d26b41861f9dd3cdbe24cf7472,"ENH: use gcc intrinsic for overflow checked multiplication

More efficient as it uses processor overflow flags if available.
",numpy/core/setup_common.py,numpy/core/src/private/templ_common.h.src
3619a2ad41d7eb655c6a637ca3aef2ebdbb1d307,"DOC: NpyIter chapter: move table to bottom

... so that the example is now the first thing seen after the (short) intro.
",doc/source/reference/c-api.iterator.rst
31b94e85a99db998bd6156d2b800386973fef3e1,"Merge pull request #5162 from juliantaylor/scalarmath-merge

MAINT: merge scalarmathmodule into umath module",numpy/core/__init__.py,numpy/core/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/templ_common.h.src,numpy/core/src/private/{scalarmathmodule.h.src,numpy/core/src/{scalarmathmodule.c.src,numpy/core/src/umath/umathmodule.c,numpy/core/src/umath/umathmodule_onefile.c
fb037eba5432d401f4c85d97051b09147b20d5c4,"Merge pull request #5298 from nils-werner/resizedocstring

Expand np.resize docstring",numpy/core/fromnumeric.py
e4d30698747b01d798ee7aac565bf290f6b0f5b7,"Resize: Show an example that explains the potentially confusing behaviour of resize
",numpy/core/fromnumeric.py
8bcb7569c92dc94d5b1516e7d33608bbd041a6bf,"Merge pull request #5296 from alimuldal/fix_parallel_extensions_njobs

BUG: getattr() raises AttributeError  in get_num_jobs() when --jobs argument not given",numpy/distutils/misc_util.py
7f45d4248d6a311aa8558525ca8c0dc1317540f6,"DOC: fix example in NpyIter docs that didn't compile
",doc/source/reference/c-api.iterator.rst
6ceb0e60493814113dc9d07f450fc8fa058e9462,"BUG: missing default None values in getattr(...)
",numpy/distutils/misc_util.py
68ffaec50976461c32a98570821dd2d05d53c2fe,"Merge pull request #5294 from larsmans/pyiter-doc

DOC: iterator: don't bother users with NumPy development details",doc/source/reference/c-api.iterator.rst
ff8a1469fabbb91579a3da95fc6c1f750e6ee82a,"DOC: iterator: don't bother users with NumPy development details
",doc/source/reference/c-api.iterator.rst
23f20aa96c5571767a9c07387f54843093517b57,"Merge pull request #5292 from larsmans/glue-docs

DOC: python-as-glue: use Cython, not Pyrex",doc/source/user/c-info.python-as-glue.rst
460bc51bc08c29ea65934c8995b89384b158f35d,"DOC: python-as-glue: copyedit

[ci skip]
",doc/source/user/c-info.python-as-glue.rst
8331b9372936c2ae67a339ed8223999524d7df47,"DOC: python-as-glue: use Cython, not Pyrex

Fixes gh-4492. [ci skip]
",doc/source/user/c-info.python-as-glue.rst
9bfd76e1ce1adb9a36591eb0c9a4f6ef146d317d,"Merge pull request #5291 from wackywendell/bagobj

ENH: add BagObj.__dir__ to numpy.lib.npyio",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
be13b6a92df20bb0fefb29075861ba6a536ae32b,"TEST: added test of BagObj
",numpy/lib/tests/test_io.py
60de33d58f6d1a4f70ebf5af22e8873a36cd3be2,"ENH: add BagObj.__dir__ to numpy.lib.npyio

This allows dir(bagobj), and also enables tab-completion on a BagObj,
which can be useful in an interpreter or IPython
",numpy/lib/npyio.py
c2d784595a6e65d5891bb1b76539ef009ea28cc5,"Merge pull request #5281 from rgommers/f2py-deprecated-api

MAINT: change place where NPY_NO_DEPRECATED_API is defined in f2py.",numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
53a202b6950c0d84214bb63720e4b9ea9d47d4dd,"Merge pull request #5264 from nils-werner/untranspose

Untranspose method",numpy/core/fromnumeric.py
8dd530b34d4382635d616588edc177d3879e7ee8,"Merge pull request #5284 from juliantaylor/doc-fix

DOC: fix documentation build removing single backticks",doc/release/1.10.0-notes.rst,doc/release/1.9.1-notes.rst,doc/source/release.rst
1246dbcfdd0f457e290bd0bedf636c9d00f31d70,"Merge pull request #5288 from larsmans/glue-docs

DOC: Python as glue",doc/source/user/c-info.python-as-glue.rst
54bb07b723f6c1fc508e5021de8ef261ae366f6a,"DOC: Update the docs for the C API to reflect the change in return type of PyArray_ITEMSIZE
",doc/source/reference/c-api.array.rst
cd4c700559d4b1d8758e0b8b80046f655820db55,"DOC: sync 1.9.1 release notes

[ci skip]
",doc/release/1.9.1-notes.rst,doc/source/release.rst
de0eb86388a4e701b40be620a56ca8dc73a9093b,"DOC: fix documentation build removing single backticks

using them around setup.py build causes a ""error: option -b not
recognized"" error from sphinx-build.
Replace them with * for italic.
",doc/release/1.10.0-notes.rst
5a78905bffadacae5269c3280ac3b9cde6a18845,"Merge pull request #5283 from larsmans/divide-docs

DOC: core: np.divide differences between Py2/3",numpy/core/code_generators/ufunc_docstrings.py
06440c19d1d67af02b112c73f247efc20b22c8cc,"Merge pull request #5282 from larsmans/c-fixes

MAINT: fft: cleanup in fftpack module",numpy/fft/fftpack_litemodule.c
33d8c1b9c1c2e5cb13bb291bd367e8e2e7464a2c,"DOC: remove Weave recommendation

Weave is dead. It's not removed from SciPy yet, but it's deprecated and
doesn't work with Python 3.
",doc/source/user/c-info.python-as-glue.rst
6cfb0c65e7bab84f53992bb27f7a6c12e88406ea,"DOC: python-as-glue: remove Instant, PyInline

Both projects appear to be dead.
",doc/source/user/c-info.python-as-glue.rst
1810b687f0fd5b97e689702244b9b4b6ba64a87b,"DOC: core: np.divide differences between Py2/3

Fixes gh-5278.
",numpy/core/code_generators/ufunc_docstrings.py
5af88f9242592e3411d3a24200b002e5bdde029f,"MAINT: fft: cleanup in fftpack module

* put string constants in const arrays
* use static functions were possible
* removed a stale comment
* more consistent whitespace
",numpy/fft/fftpack_litemodule.c
fff6deee7b44bedd4deb03dd7b5762abe469dba7,"MAINT: change place where NPY_NO_DEPRECATED_API is defined in f2py.

This makes sure to undef at the end, and by putting the define in the
C code it ensures that the error message is understandable.
",numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
f14d5e1e520e9f598abf9881d50d403a24bd258c,"Merge pull request #4977 from sotte/mdot

ENH: add `mdot`: fast dot with multiple arguments.",doc/release/1.10.0-notes.rst,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
25aff4dbd2374890ba4490b663e601fe7a0b97b1,"Merge pull request #5274 from chatcannon/fix-testing-cyclic-import

TST: Fix ImportError in runtests.py (fixes #5273)",numpy/testing/__init__.py
0f171d9273a3a86c7d4a434d7f4df491a42ca3ca,"TST: Fix ImportError in runtests.py (fixes #5273)

In numpy/testing/__init__.py, import Tester before importing numpy core
",numpy/testing/__init__.py
975267d950c6cca9c73ba2ced1c9e53a36174254,"Merge pull request #5270 from chatcannon/f2py-remove-deprecated-api

Stop F2Py from using the deprecated numpy API ",numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h,numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c
b36ecba3934d0c97c0a098ea422679fca33fefa3,"Merge pull request #5266 from chebee7i/multivariate_normal

Possible regression in `multivariate_normal()`",numpy/random/mtrand/mtrand.pyx
265fbe15cb4c34e4d54c672582657a11ed52af8b,"Merge pull request #5271 from matthew-brett/give-up-on-rackspace-wheels

MAINT: give up on rackspace wheels",.travis.yml
7d1ea605b9af3afbc253906ac6c5774f07eaf957,"MAINT: give up on rackspace wheels

Rackspace wheels (from http://wheels.scikit-image.org) are giving
timeouts, again - e.g.:

https://travis-ci.org/numpy/numpy/jobs/40578751

Use Nathaniel's trick of not compiling Cython, for speed, and to work
round previous Cython build breakage.
",.travis.yml
fa30605f635d676907082818230dd9e44247ea01,"Update docstring for multivariate_normal().

The change is to make a stronger statement that the covariance matrix must
be positive-semidefinite and that if it is not, then the results are not
guaranteed across NumPy versions.
",numpy/random/mtrand/mtrand.pyx
6656d042a5669b4649a63efc0bf59e258d0ee32c,"DEP: #declaring NPY_NO_DEPRECATED_API in fortranobject.h
",numpy/f2py/src/fortranobject.h
6693460d94b5766315fc050d287ce4563bf9c368,"DEP: removed deprecated API calls from test code (wrapmodule.c)
",numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c
7b607316a8044f5dbb3be054826ab9bd295b66d1,"DEP: Replace NPY_CONTIGUOUS with NPY_ARRAY_C_CONTIGUOUS
",numpy/f2py/cfuncs.py,numpy/f2py/src/fortranobject.h
5f321b415010ec74a978bb4bb495c46dd5af0b09,"DEP: Corrected some type errors that appear when enabling NPY_NO_DEPRECATED_API
",numpy/f2py/src/fortranobject.c
347c6142d5baa5ba3ea55299ab96fe114ab94c6c,"DEP: Replaced NPY_[F,C]ARRAY with NPY_ARRAY_[F,C]ARRAY
",numpy/f2py/cb_rules.py,numpy/f2py/src/fortranobject.c
64d4fa5d963708ed592bc911feb2e874bcf0672f,"DEP: Using the internal PyArrayObject_fields API for the swap_arrays and dump_attrs functions
",numpy/f2py/src/fortranobject.c
fd12653823a406d368eba0c381f192efda7d59d4,"DEP: Using PyArray_SIZE and PyArray_TYPE instead of PyArray_DESCR()->elsize etc
",numpy/f2py/cfuncs.py
eb27fc3e0faba3e6a809bf120aa2c04987c9c78d,"DEP: Replaced arr->descr, arr->flags and arr->base with the PyArray_* functions
",numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
c5f0d72a9059d44511be158031d0c8e77f1f9b6b,"DEP: replaced arr->dimensions with PyArray_DIMS(arr) or PyArray_DIM(arr,i)
",numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c
2129f5c5c0f52d4e428f406e1cbd7ce62bca4af8,"DEP: replaced arr->data with PyArray_DATA
",numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c
c5463e8134d80e72d03d01d0e2427f47404b1c0b,"DEP: replaced arr->nd with PyArray_NDIM in C code generation scripts
",numpy/f2py/cfuncs.py,numpy/f2py/rules.py
e2e6bd8e69d0a88084d4370d4991451968b0af52,"DEP: Replaced arr->nd with PyArray_NDIM in fortranobject.c
",numpy/f2py/src/fortranobject.c
1b12c394548e2d23bba83c0eccda958a28998293,"ENH: add `multi_dot`: dot with multiple arguments.

`np.linalg.multi_dot` computes the dot product of two or more arrays in
a single function call, while automatically selecting the fastest evaluation
order.

The algorithm for selecting the fastest evaluation order uses dynamic
programming and closely follows:

    Cormen, ""Introduction to Algorithms"", Chapter 15.2, p. 370-378
",doc/release/1.10.0-notes.rst,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
96714918d64ebf64e0e133a385da061408e4a03b,"Merge pull request #5265 from matthew-brett/rackspace-cython

MAINT: use scikit-image wheels collection",.travis.yml
c12820f45e3cb9f2085b2a28501b7460da3ad243,"MAINT: add --no-cython-compile flag for Cython

Add flag to prevent Cython compiling itself.  This speeds Cython
installation and doesn't much slow down pyx file building.

From suggestion by Nathaniel.
",.travis.yml
1cad7f83b1fd0c1f7afab86b0afdf4536b6f3e75,"ENH: added std::complex support to numpy.i

numpy.i now includes ready-made typemaps for std::complex<float>
and std::complex<double> .  Tests were added to testArray using
a newly defined ArrayZ class.
",tools/swig/numpy.i,tools/swig/test/Array.i,tools/swig/test/ArrayZ.cxx,tools/swig/test/ArrayZ.h,tools/swig/test/Makefile,tools/swig/test/setup.py,tools/swig/test/testArray.py
7b1f8e2723c7611803b0341987b544d42706d0f7,"Mention transport argsort for inverting the transposition
",numpy/core/fromnumeric.py
df33cd8dd0f6a00e9a0daa93fc134f49b0f5c782,"MAINT: use scikit-image wheels collection

An attempt to address Cython build failures.
",.travis.yml
cfa095a203586eae9466f5ebbbdc5f60905aeb20,"Merge pull request #5257 from juliantaylor/py3-header-fix

BUG: fix header using symbols not available in py3",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
f7c0e78ac6a6ca8a3c72cf7167607a62f57637f9,"BUG: fix header using symbols not available in py3

Inside numpy we handle this via the py3kcompat header which is not
really public api. So for our public headers we need some explicit
checks.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
066be2857408682a818e6967a5a91d342b59727c,"Merge pull request #5161 from juliantaylor/parallel-distutils

ENH: support parallel compilation of extensions",INSTALL.txt,doc/release/1.10.0-notes.rst,numpy/distutils/ccompiler.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/misc_util.py,tools/travis-test.sh
0d30aef9065aed867e9276942bf0a51df6e48bf6,"Merge pull request #5251 from embray/astropy-3052

Issue with fromarrays not using correct format for unicode arrays",numpy/core/records.py,numpy/core/tests/test_records.py
b89849b1213e3384dfd72838672f5869321768db,"Fix issue with fromarrays not correctly determining a format string for unicode data (in the process eliminate some unnecessary cruft)
",numpy/core/records.py,numpy/core/tests/test_records.py
c63e1f470cf84a928499b2570a091f801cb67ba2,"Merge pull request #5245 from argriffing/deprecate-pkgload

DEP: deprecate pkgload",doc/release/1.10.0-notes.rst,numpy/_import_tools.py
4638475311228b099c278d5afc166c98c85bbc80,"MAINT: warn instead of raise
",numpy/_import_tools.py
7419906420307fc577a058a0c1a655869590eb01,"DEP: deprecate pkgload
",doc/release/1.10.0-notes.rst,numpy/_import_tools.py
3b22d87050ab63db0dcd2d763644d924a69c5254,"Merge pull request #5242 from juliantaylor/fix-ufunc-subok-out

BUG: fix not returning out array from ufuncs with subok=False set",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_umath.py,numpy/ma/core.py
b40e686f10421099400a533b343d6d1212f786e9,"BUG: fix not returning out array from ufuncs with subok=False set

closes gh-5240
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_umath.py,numpy/ma/core.py
461bf423e1e8caae40f6f624f925644e95a0256d,"DOC: update installation instructions
",INSTALL.txt
23d546176e2fe0b4d7d2e9100032bbf8107927e1,"ENH: support parallel compilation of extensions

Allow extensions using numpy.distutils to compile in parallel.
By passing `--jobs=n` or `-j n` to `setup.py build` the compilation of
extensions is now performed in `n` parallel processes.
Additionally the environment variable NPY_NUM_BUILD_JOBS is used as
the default value, if its unset the default is serial compilation.

The parallelization is limited to within the files of an extension, so
only numpy multiarraymodule really profits but its still a nice
improvement when you have 2-4 cores.
Unfortunately Cython will not profit at all as it tends to build one
module per file.
",doc/release/1.10.0-notes.rst,numpy/distutils/ccompiler.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/misc_util.py,tools/travis-test.sh
7be18edfaae4d0ba6a888160d1cc57c453b568f2,"Merge pull request #5214 from mkowoods/np.average

Update to average calculation
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
3d5f499fd6807186baf669eec491034766caab34,"BUG: upcast weights to average result type to avoid inaccuracies

closes gh-5202
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
16575443239fa84615fc795692a79ef27f25c216,"Merge pull request #5077 from jaimefrio/gufuncs_core_dim_no_broadcast

WIP: gufunc core dimensions should not broadcast",doc/release/1.10.0-notes.rst,doc/source/reference/c-api.generalized-ufuncs.rst,doc/source/reference/c-api.ufunc.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/tests/test_ufunc.py
23ee379e86434518bc33ccd9e711a86188914de0,"Merge pull request #5238 from yuvallanger/patch-1

Replacing list with generator compherension",numpy/core/records.py
304d9b624745897bf3df13d7d368699066f3e70d,Replacing list with generator compherension,numpy/core/records.py
256d256b865d42eace7d3b8a7e4cae7745fb9a2e,"Merge pull request #5086 from mdboom/stride-fix

Fix how strides is set on Py_buffer object when the array is C-contiguous",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
fb40fe8618ff472d09ae819fd9734bd94cb9bdc9,"Merge pull request #5233 from juliantaylor/off_t-fix

BUG: fix build in c99 mode",numpy/core/include/numpy/npy_common.h
76fc3e7df95779b2a67cf40210585cc1bb776591,"BUG: fix build in c99 mode

The definition of off_t is located in sys/types.h and is not pulled
by other files when compiling in c99 mode instead of the default gnu89.
Closes gh-5231
",numpy/core/include/numpy/npy_common.h
fe7816d448224633b0f8056ffb8c27478ab934e2,"Merge pull request #5216 from charris/cleanup-gh-5132

BUG: Make PyArray_PutTo respect writeable flag.",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
280f6050d2291e50aeb0716a66d1258ab3276553,"Merge pull request #5225 from juliantaylor/datetime-arange-crash

BUG: fix crash when using arange on datetime without dtype set",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
0332a2d8db6bd55b1d7e96c33ba4dd4f858d273d,"BUG: fix crash when using arange on datetime without dtype set
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
f107a98616ba9402ef8956636ef1f9e2cf1a7f80,"DOC note the effect of #1866 in byteorder discussion
",numpy/doc/byteswapping.py
b1f8bcf451ef75344439d56c9953f6652af899d7,"TST: Add some tests for ndarray.put.
",numpy/core/tests/test_multiarray.py
892c46910c7f9f0211f01b42f9aa81d0db892c8e,"BUG: Make PyArray_PutTo respect writeable flag.

Closes #4465.
",numpy/core/src/multiarray/item_selection.c
06256714cb6209db5a3fac3681ebfad1ffe715de,"Merge pull request #5204 from RobberPhex/master

fixed #4896 (fails to build with MSVC 2013)
",numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
a4e68f411e4ec390b9250d9a8c24a8849a95ba9a,"BUG: fix build error with MSVC 2013 caused by C99 complex support

closes gh-4896
",numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
0e091af94b03d5f3d5f5ddf45d54cf5ed2d7e612,"Merge pull request #5212 from charris/fix-long-long-fmt

BUG: Use 'll' as the default length specifier for long long.",numpy/core/include/numpy/npy_common.h
a435de365a603f29bf243882644f1e26edda6e9a,"Merge pull request #5207 from juliantaylor/msvc-fix

MSVC fixes",numpy/core/src/npymath/npy_math.c.src,numpy/core/src/private/npy_config.h
72e9072fadc048ef9fa4f76fbf37e31058b3e24a,"Merge pull request #5203 from njsmith/master

BUG: copy inherited masks in MaskedArray.__array_finalize__",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
0ddb8e35ea464da08ca3327482d96c2ec4640583,"BUG: Use 'll' as the default length specifier for long long.

The previous default was 'L', which seems gcc specific, whereas
'll' is the now recognized standard and is also accepted by gcc.

Closes #5027.
",numpy/core/include/numpy/npy_common.h
528bac1380c782772b9de207bb8466b03117b96d,"DOC: Stricter checks for gufunc signatures

Documented the the new behavior in c-api.generalized-ufuncs.rst.

Added PyUFunc_FromFuncAndDataAndSignature to c-api.ufunc.rst.
",doc/release/1.10.0-notes.rst,doc/source/reference/c-api.generalized-ufuncs.rst,doc/source/reference/c-api.ufunc.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/tests/test_ufunc.py
3205c89ad3090c26fef8fd060117ee468c1b6c97,"BUG: copy inherited masks in MaskedArray.__array_finalize__

Previously, operations which created a new masked array from an old
masked array -- e.g., np.empty_like -- would tend to result in the new
and old arrays sharing the same .mask attribute. This leads to
horrible brokenness in which writes to one array affect the other. In
particular this was responsible for part of the brokenness that
@jenshnielsen reported in gh-5184 in which np.gradient on masked
arrays would modify the original array's mask.

This fixes the worst part of the issues addressed in gh-3404, though
there's still an argument that we ought to deprecate the mask-copying
behaviour entirely so that empty_like returns an array with an empty
mask. That can wait until we find someone who cares though.

I also applied a small speedup to np.gradient (avoiding one copy);
previously this inefficiency was masking (heh) some of the problems
with masked arrays, so removing it is both an optimization and makes
it easier to test that things are working now.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
4ed4aec23912346c00d5ec2850dcd457a048479e,"Merge pull request #5210 from ewmoore/norm_doc

MAINT: more informative error message from linalg.norm",numpy/linalg/linalg.py
7d1cb081c8677c5939995b700ab0ee34d5d0e154,"Add additional testing
",numpy/core/tests/test_multiarray.py
270ae2c7cac71c91a52701c5b0eb7e5f6d388b14,"MAINT: Give a more helpful error for bad axis specifications.

This specifically addresses passing things like axis=[0,1] which
gave an error message that an int was required.  The real error
was that if the axis isn't None or a tuple, it was simply wraped
in a tuple, so the ufunc that is eventually called ended up with
a list.  The error message is matches that in
core/src/multiarray/conversion_utils.c::PyArray_ConvertMultiAxis.
",numpy/linalg/linalg.py
96ef52e560c359eb0182682b56725e05da07f064,"BUG: don't set invalid flag in cbrt fallback

cbrt does not set the invalid flag on nan input as all inputs are valid.
Fix the fallback to behave the same.
",numpy/core/src/npymath/npy_math.c.src
d90c6e018318720fac72f363cd9f49c2af77b159,"BUG: fix undefined ldexpl and frexpl with msvc

The functions are macros in msvc which we undefine and redeclare in
npy_math. Since we now generate the ldexpl and frexpl ufuncs in gh-4852
this was broken by the extra logic for them in npy_config.h
",numpy/core/src/private/npy_config.h
df9db6ed5f9c9e315993f4efed5dba613e6cd84c,"Merge pull request #5206 from WarrenWeckesser/typo

MAINT: Fix typo in the 'issubclass' docstring.",numpy/core/numerictypes.py
6114f1c963ad011d276701967864f339e8e45ae0,"MAINT: Fix typo in the 'issubclass' docstring.
",numpy/core/numerictypes.py
7b3809b0061ffbb64c227d393a3771f60d1427d5,"Merge pull request #5146 from cimarronm/fromnumeric_axis_tuples_doc

Updated function docstrings for tuples in axis",numpy/core/fromnumeric.py
c9d61533f0a5a40ec0a38c69e19615d375af166e,"Merge pull request #5196 from ewmoore/norm_keepdims

Add keepdims to linalg.norm",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
6f88eea024448b913cea881efad405e5d4ece195,"MAINT: Stop repeatedly running duplicate tests.
    These three tests don't make use of the infrastructre in
    _TestNorm. This means they are identical tests when run
    as part of TestNorm(Double,Single,Int64). Once is enough.
",numpy/linalg/tests/test_linalg.py
9b152aaaf3abd0f98b7a88ed66df7518a6a6c85b,"ENH: Add keepdims to linalg.norm
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
5505dc9cdfa54fa5a45c8e69f3f82874c5aee9a6,"Merge pull request #5117 from saullocastro/interp_with_period

ENH: added parameter to use periodic x-coordinates",doc/release/1.10.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
498b84a35da66bceb1b08e49ee4dcd02c870e5fe,"ENH: added parameter to use periodic x-coordinates
",doc/release/1.10.0-notes.rst
673ca72af2bf312ce86e6511483c950578cb20d2,"Merge branch 'master' of https://github.com/numpy/numpy into interp_with_period
",.gitattributes,.travis.yml,doc/release/1.10.0-notes.rst,numpy/core/bscript,numpy/core/include/numpy/npy_cpu.h,numpy/core/memmap.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/templ_common.h.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_api.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_umath.py,numpy/distutils/command/build_ext.py,numpy/f2py/crackfortran.py,numpy/f2py/setup.py,numpy/f2py/tests/src/regression/inout.f90,numpy/f2py/tests/test_regression.py,numpy/lib/arraysetops.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/tests/data/python3.npy,numpy/lib/tests/data/win64python2.npy,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_utils.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/testing/utils.py,tools/travis-test.sh
39aaa43b732c68878e6207caab3cbeee5e83bf7c,"DOC: Update axis documentation for tuple of ints to be consistent between functions
",numpy/core/fromnumeric.py
f6c5611e941409faa36385b8d4c7d321cb7c03d4,"Merge pull request #5190 from juliantaylor/lto-support

BLD: try linking a file if compile long double repr detection fails",numpy/core/setup_common.py
443a49a271e6d7c4c1dda72fe721eaed318ff764,"Merge pull request #5182 from juliantaylor/nanmedian-inf

BUG: fix nanmedian on arrays containing inf",numpy/lib/tests/test_nanfunctions.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
4c0747d5c2cb3c961f7246cd9222b89bdcf2ce42,"Merge pull request #5186 from pseudocubic/gradient-boundary-order-keyword

BUG: Fixes #5184 gradient calculation behavior at boundaries",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
8969da59ea9803b81b0dcb2fab3f41d4b168bc68,"BUG: Fixes #5184 gradient calculation behavior at boundaries

* Previous expected behavior was that the gradient is computed using central
  differences in the interior and first differences at the boundaries.

* gradient was updated in v1.9.0 so that second-order accurate calculations are
  done at the boundaries, but this breaks expected behavior with old code, so
  `edge_order` keyword (Default: 1) is added to specify whether first or second
  order calculations at the boundaries should be used.

* Since the second argument is *varargs, in order to maintain compatibility
  with old code and compatibility with python 2.6 & 2.7, **kwargs is used, and
  all kwargs that are not `edge_order` raise an error, listing the offending
  kwargs.

* Tests and documentation updated to reflect this change.

* Added `.. versionadded:: 1.9.1` to the new optional kwarg `edge_order`
  documentation, and specified supported `edge_order` kwarg values.

* Clarified documentation for `varargs`.

* Made indentation in docstring consistent with other docstring styles.

* Examples corrected
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
140c50537087dccc764cd7540b46b039cb934530,"TST: Stricter checks for gufunc signatures

Added euclidean_pdist to umath/umath_tests.c.src.

Modified tests to reflect new, stricter gufunc signature behavior.
",numpy/core/src/umath/umath_tests.c.src,numpy/core/tests/test_ufunc.py
3a827637c9eca604315491e8e017b72f2d1f8837,"BUG: Stricter checks for gufunc signatures

* Arguments, both input and output, must have at least as many
  dimensions as the corresponding number of core dimensions. In
  previous versions, 1's were prepended to the shape as needed.
* Core dimensions with same labels must have exactly matching
  sizes. In previous versions, core dimensions of size 1 would
  broadcast against other core dimensions with the same label.
* All core dimensions must have their size specified by a passed
  in input or output argument. In previous versions, core
  dimensions in an output argument that were not specified in an
  input argument, and whose size could not be inferred from a
  passed in output argument, would have their size set to 1.
",numpy/core/src/umath/ufunc_object.c
51f0976c1ca101a01d09e26ee5dfea5360f73c63,"Merge pull request #5192 from charris/deprecate-safeeval-class

Deprecate SafeEval class",doc/release/1.10.0-notes.rst,numpy/lib/utils.py
c2c7051d926b6ce0665e53ce8dd0f522380a57d6,"DEP: Deprecate SafeEval class.

The class is no longer used in numpy and was never exported.
",doc/release/1.10.0-notes.rst,numpy/lib/utils.py
727655193aa9b4d4068650a3f8a9b49a6a2e0cb4,"MAINT: Use ast.literal_eval in safe_eval.

This does what is needed now that the compiler module is no longer
used.
",numpy/lib/utils.py
35fad05fba626aeaf836f5bee45556a59a5ae198,"Merge pull request #5177 from charris/do-not-use-compiler-module

MAINT: Remove use of compiler module.",numpy/lib/utils.py
50ff7da7799bac28fb14e3290d6c73683adf7d13,"Merge pull request #5191 from juliantaylor/config-maint

size and version check maintenance",numpy/core/bscript,numpy/core/setup.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_nditer.py,numpy/distutils/command/build_ext.py,numpy/f2py/setup.py,numpy/testing/utils.py
03f0aebf1a43c672f17e89382804809601828111,"MAINT: remove obsolete version checks

minimum requirement is python2.6, this allows removing a couple 2.3 and
2.4 checks.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_nditer.py,numpy/distutils/command/build_ext.py,numpy/f2py/setup.py,numpy/testing/utils.py
aa8a2437b700ce9a8c3e12652b75982e96a3777c,"BLD: fix expected size argument for complex types

The caller was passing a list of lists instead of a list with its
entries doubled. Removes the binary type search for most if not all
platforms.
",numpy/core/setup.py
89d627ee05eac6b188ad27d30b4f6a893392f9ce,"BLD: change expected type sizes to 64 bit

64 bit is more common these days, so switch the expected type sizes to
values common on this platform. This removes a few compile tests. The
expected sizes are just hints and do not have to be correct.
",numpy/core/setup.py
a356a103460d1b97428108431f7e73e7eda9ee85,"BLD: try linking a file if compile long double repr detection fails

When compiler uses link time optimization it will not emit the binary
representation of the long double during linking. This prevents building
numpy with -flto.
To avoid this try linking the object when the compile detection failed.
With this change numpy can be built with link time optimization with 4 worker
processes using following command:

CC='gcc -fno-fat-lto-objects -flto=4 -fuse-linker-plugin -O3' \
LDSHARED='gcc -fno-fat-lto-objects -flto=4 -fuse-linker-plugin -shared
-O3' AR=gcc-ar \
python setup.py build_ext

See also:
https://www.mail-archive.com/numpy-discussion@scipy.org/msg45535.html

Should also work with icc's -ipo switch (probably closes gh-4992)
",numpy/core/setup_common.py
e2218a6984b756a1806041f8fb6869f63365ad10,"Merge pull request #5183 from charris/fix-npy-header-write

BUG: Fix writing of intrinsic long integers in python2 npy files.",numpy/lib/format.py
fd06081e5cb484e9acda1db5c92574ac3d740bb4,"Merge pull request #5189 from cbrueffer/setops

Add examples for intersect1d and union1d of more than two arrays.",numpy/lib/arraysetops.py
657c8b9106084ea284b3bd50f6edd6bfef880a50,"Add examples for intersect1d and union1d of more than two arrays.

The approach was suggested by Jaime Frio in issue #5179.
",numpy/lib/arraysetops.py
2f1e27610453f901e81cd892b2aa3b3a2ac30819,"BUG: fix nanmedian on arrays containing inf

There are two issues:
A masked divide of an infinite value is a masked value which means one
can't use np.ma.mean to compute the median as infinity division is well
defined.
This behaviour seems wrong to me but it also looks intentional so
changing it is not appropriate for a bugfix release.

The second issue is that the ordering of the sorted masked array is
undefined for equal values, the sorting considers infinity the largest
floating point value which is not correct in respect to sorting where
nan is considered larger. This is fixed by changing the
minimum_fill_value to nan for float data in the masked sorts.

Closes gh-5138
",numpy/lib/tests/test_nanfunctions.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
a8e027ff49fdfdce4d845eef7e1f8cd939ae840a,"BUG: Fix writing of intrinsic long integers in python2 npy files.

This only happens when C long is smaller than npy_intp, in particular,
on 64 bit windows. The 'L' suffix is not needed as long as safe_eval
is used to recover the values, and the long intrinsic causes problems
for python3.

The python3 read side has been fixed, but we might as well fix the
problem at the root as well.
",numpy/lib/format.py
2f1786306e696709481ccfc95b844d5aa2700b6d,"Merge pull request #5178 from charris/fix-npz-header-incompatibility

Fix npz header incompatibility",.gitattributes,numpy/lib/format.py,numpy/lib/tests/data/python3.npy,numpy/lib/tests/data/win64python2.npy,numpy/lib/tests/test_format.py
8b1f90a227b5fcf2a481c973e522693758c9f20f,"TST: Add tests for Python2, Python3 *.npy compatibility.
",.gitattributes,numpy/lib/tests/data/python3.npy,numpy/lib/tests/data/win64python2.npy,numpy/lib/tests/test_format.py
8f068b7866a2959392fae2a15c1a5a19ff79bae9,"BUG: Make python2 *.npy files readable in python3.

The Python2 generated file had long integer literals like '1L' that
broke in Python3. The fix here is to filter out the 'L' and let
safe_eval take care of the integer type in converting the string.

The fix here comes from Nathaniel Smith with a few added fixups.

Closes #5170.
",numpy/lib/format.py
2ba94e726c7adf5b6ea7f2e49aadb78fe8b1d7ba,"Merge pull request #5176 from larsmans/memmap-doc

DOC: core: contents of newly allocated space in memmap",numpy/core/memmap.py
ade76b0035496ad0239b5236688fa51d4a4e592e,"DOC: core: contents of newly allocated space in memmap

Fixes #5157.
",numpy/core/memmap.py
9917a12d397e6e1188823752aa21996dbb1444d5,"MAINT: Remove use of compiler module.

The ast module was added in Python 2.6 as a replacement for the compiler
module. As we no longer support Python versions < 2.6, all uses of the
compiler module can be removed.
",numpy/lib/utils.py
4c4595b2487002162e6ce5e6dd8a9c778e3d7c30,"Merge pull request #5175 from larsmans/c-fixes

MAINT: core: string constants in static buffers",numpy/core/src/multiarray/multiarraymodule.c
8b17fae1428502ade57c2aa5706add6228711713,"MAINT: core: string constants in static buffers

Saves copying them into temporary buffers.
",numpy/core/src/multiarray/multiarraymodule.c
9636420543967fce47688da5e2b96c1c5155533d,"Merge pull request #5144 from juliantaylor/int-vectorize

ENH: allow auto vectorization of integer loops",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
2e1ff063751461f7c4287933b88554f4d44d7ee5,"ENH: allow auto vectorization of integer loops

Generalize the loop specializations with two new macros UNARY_LOOP_FAST
and BINARY_LOOP_FAST and apply it to more integer loops.
Same also gh-4561 which did this for integer boolean operations.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
8e113c9844b8760f9ce089ef774d46f06fdc7e82,"Merge pull request #5169 from juliantaylor/pyobjcopy-simplification

MAINT: replace bytewise copy with memcpy",numpy/core/include/numpy/npy_cpu.h
d6278bdc47d12acc5d3edfad3ad0654055f77737,"MAINT: replace bytewise copy with memcpy

memcpy takes care of unaligned memory and is inlined by the compiler,
there is no need for own code.
",numpy/core/include/numpy/npy_cpu.h
6457686e8fd5df3ef5d64f3e3cff27ccec4dac6c,"Merge pull request #5168 from charris/f2py-space-fix

BUG: Make f2py work with intent(in out).",numpy/f2py/crackfortran.py,numpy/f2py/tests/src/regression/inout.f90,numpy/f2py/tests/test_regression.py
d6d67957d3af1f4a4845ba3bc2d8b1fdd9e49e96,"Merge pull request #5154 from charris/improve-gauss-hermite

Improve gauss hermite",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py
7eff5b881b7d6353b58195762fe2a677826fa84f,"Merge pull request #5167 from juliantaylor/rh5-miscompile

BUG: remove static from function",numpy/core/src/multiarray/arraytypes.c.src
e98686d912ddc641f11b7531d164a5b09194b1df,"TST: Add basic test for compiling with intent(in out).

This checks that the compilation works and that the expected error
is raised when non-contiguous arrays are passed as intent(in out).
",numpy/f2py/tests/src/regression/inout.f90,numpy/f2py/tests/test_regression.py
1d6ef527cc9e63272cf20bdfab0accb40cb12635,"BUG: Make f2py work with intent(in out).

Note that Fortran ignores spaces in this case, so that 'in out' is
treated as 'inout'.

Closes #479.
",numpy/f2py/crackfortran.py
017969b193a135cd3bb63d5704bd11b62449f34e,"BUG: remove static from function to avoid gcc-4.1 miscompile

gcc 4.1.2 (e.g. in red hat 5) will miscompile the function when
inlining. Without static it will not inline solving the issue.
Closes gh-5163
",numpy/core/src/multiarray/arraytypes.c.src
261de3f0c9a525ba8893ecc8ad4328e474798bdd,"MAINT: merge scalarmathmodule into umath module

There is no good reason it needs to be its own module.
Also removes the undocumented pymath alter/restore functions.
",numpy/core/__init__.py,numpy/core/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/templ_common.h.src,numpy/core/src/private/{scalarmathmodule.h.src,numpy/core/src/{scalarmathmodule.c.src,numpy/core/src/umath/umathmodule.c,numpy/core/src/umath/umathmodule_onefile.c
e6e2bb0f4a225559eff23089d84a57c0f2862221,"Merge pull request #5160 from bdkearns/master

fix intention of loop in test_copyto_permut",numpy/core/tests/test_api.py
ee7ca7d14cc073453b00d73102046515ea1b077c,"fix intention of loop in test_copyto_permut
",numpy/core/tests/test_api.py
7d1a3cf3478b5dde9fcbeb54a4fe826a5f22f530,"Merge pull request #5152 from tovrstra/collapsingbug

fixed #5147 collapsingbug in einsum
",numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
8615d5e57c7f07c41f5f5c87d3b8ab6da4bfb4ec,"BUG: fixed #5147 collapsingbug in einsum
",numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
dc002061a0a7bf3cb1c6b7c9e3c68553b5d22f82,"MAINT: Improve computation of gauss weights for hermite and hermite_e.

The new computations use normalized polynomials. Those polynomials are
less subject to overflow and allow the determination of the weights and
roots up to about degree 350, at which point the weights underflow.

Two private functions are added for computing the values of the
normalized polynomials:

1. _normed_hermite_n
2. _normed_hermite_e_n
",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py
0650d04078666997c3dac3beec6fe872dca797dd,"MAINT: Improve computation of scaled companion matrices.

The previous method used for hermite and hermite_e polynomials suffered
from double overflow for polynomials of large degree. Those numbers were
later scaled down by equally large numbers, but the result was NaN. The
wanted values are now computed in such a way that overflow in some
entries is replaced by underflow in others. The resulting zeros are a
negligible perturbation of the companion matrix.
",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py
cd0b8e7031fa16a60b22b74f1b0273ca60d58668,"Merge pull request #5149 from charris/fix-ma-docs-for-OO-option

BUG: Make numpy import when run with Python flag '-OO
",.travis.yml,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_utils.py,numpy/ma/extras.py,tools/travis-test.sh
43ca904f79ced66552ff02e7e92da1c4566beadd,"TST: Add test with python flag -OO.
",.travis.yml,tools/travis-test.sh
dc453917978e98dcdf3bbc106b080c80f0a1301e,"BUG: Make numpy import when run with Python flag '-OO'.

This consists of checking for a docstring equal to None and skipping two
tests that require docstrings.

Closes #5148.
",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_utils.py,numpy/ma/extras.py
aaa8940913902001a4961d793e7238eafc193861,"DOC: Updated from numeric doc to indicate where axis can also be a tuple of ints, i.e. axes, over which to perform the given operation
",numpy/core/fromnumeric.py
58350f4608a22f4b4b66795f51eaefc206bd02b8,"Merge pull request #5135 from juliantaylor/correlate-improve

ENH: unroll correlate loops",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/templ_common.h.src
48ee0b25f07bd770c5fe5d328463505f535b4d1d,"ENH: added parameter to use periodic x-coordinates
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
fa14ae0ef313bca848b24d210efae9e0170a63ad,"Merge pull request #5140 from pyhits/5136

BUG: ImportError: No module named thread
",numpy/random/mtrand/mtrand.pyx
7fc3227aa3f417b927769046a96b4f625550ab5d,"BUG: ImportError: No module named thread

Fixes #5136. Import dummy_threading if importing threading fails.
",numpy/random/mtrand/mtrand.pyx
73d87a7144697fc3f7b793deea53ee92dd98a697,"Merge pull request #5139 from juliantaylor/restrict-fix

BUG: fix restrict check",numpy/core/setup.py
b58f130a4f1123e452f1bd1dd2651b710ec11399,"BUG: fix restrict check

If the compiler does not support the keyword the macro must still exist.
",numpy/core/setup.py
8cdc5f5f7724998c1ce7db1ce09639e3033e6ce0,"Merge pull request #5101 from jaimefrio/digitize_as_searchsorted

ENH: implement `digitize` with `PyArray_SearchSorted`",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c
f401e7fbe283a5180052b140f1a2614f07b4bd77,"Merge pull request #5092 from jaimefrio/bmat_ldict_gdict

DOC: document `ldict` and `gdict` in `bmat`, closes #5058",numpy/matrixlib/defmatrix.py
6a4aa598e3fa8c71489723f7223606a709836b80,"Merge pull request #5124 from larsmans/c-fixes

FIX: core: remove sprintf calls",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/ufunc_object.c
5eb6e36394070d3c885fa1d69efae945fb3baa9d,"Merge pull request #5137 from juliantaylor/restrict

BLD: add check for C99 restrict keyword",numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
5478aafee86af3447b230ede93738cca876844b1,"BLD: add check for C99 restrict keyword

Define it as NPY_RESTRICT
Restrict indicates a memory block does not alias, gcc supports it in c89
with the __restrict__ keyword.
",numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
d3470b7351358e7d34141a818a6f71e81e0172ef,"ENH: unroll correlate loops

Unrolling the inner loop ensures the kernel is placed into registers and
reused, this almost doubles performance.
Also move the function to arraytypes.c.src where also our dot product is
placed.
The templ_common.h might still be useful in future so its kept.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/templ_common.h.src
8521e280e7e5e71b89641d06669b82e210cf0b7d,"Merge pull request #5131 from frutiger/random_uniform_throw_on_outofrange

ENH: Throws if range is too large for 'random.uniform'",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
e065a26d9e85c99b6c5a1d1b9a306ff12a69674a,"Merge pull request #5125 from larsmans/f2py-sprintf

MAINT: f2py: rewrite fortran_doc",numpy/f2py/src/fortranobject.c
b356ef022e2b6bb3ae6290281e25454475a2a16a,"MAINT: f2py: rewrite fortran_doc

Should not use sprintf, and certainly not with incorrect error checking
(gh-5044). Entirely rewritten for readability.

Also replaced a few sprintf calls that were just copying strings without
interpretation by the simpler and possibly faster strcpy/strcat.
(These need to be replaced by something more sensible.)
",numpy/f2py/src/fortranobject.c
74ae35de25f8e1d490e0c8c8bfa7572a3ebad76b,"Throws if range is too large for 'random.uniform'

This fixes issue #2138 by checking that the range (i.e. high - low) is finite
before invoking `rk_uniform`.

A test case was added to ensure valid ranges do not throw, but invalid ranges
do.
",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
bfc4bf4421a84eec6e17ddf09a3d2beacf4ea4b7,"FIX: core: unchecked realloc

Also changed types to Py_ssize_t, and check for overflow when multiplying.
",numpy/core/src/multiarray/arrayobject.c
c73fce0e7f45ae349e3eb428cbb26f3e284e6405,"MAINT: core: simplify array_repr_builtin (don't use sprintf)
",numpy/core/src/multiarray/arrayobject.c
297aed3b49919f7a778cbfa083a1b788693aa67a,"FIX: core: remove sprintf calls

This changes the behavior of ufunc_repr to no longer truncate its arg's
name. I guess the truncation was only there to make the function work
with sprintf, and if I read http://bugs.python.org/issue7330 correctly,
then truncation wouldn't work in 3.2 <= Python <= 3.4.
",numpy/core/src/umath/ufunc_object.c
22ae19366cf04a80d3e1ecc039d775656718a668,"Merge pull request #4622 from mhvk/lib/stride_tricks/subclasses

ENH: add subok flag to stride_tricks (and thus broadcast_arrays)",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
a7802ce227ac8e99286694afb8f0270281d0d32d,"When requesting Fortan order, don't return C order.
",numpy/core/src/multiarray/buffer.c
0730abe10fb88e73f5acea63d69f3b771bdde223,"DOC: reorganize `digitize` docstring
",numpy/add_newdocs.py
7dc79a7887730606be1936cc3d3230d21b7e6f2e,"ENH: Release GIL in `digitize`
",numpy/lib/src/_compiled_base.c
ed9345fc89a9375c98f00f1be64c5bab1fa7475d,"DOC: document improvements to `np.digitize`
",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py
e3e82e50b6340f8784baf28090a81878979e489a,"ENH: implement `digitize` with `PyArray_SearchSorted`
",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c
befb246c6d011abc1b4b42ecd8b2e3731b81ce04,"Merge pull request #5113 from jaimefrio/logaddexp_inf

ENH: remove warnings from logaddexp with same sign infs",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
a90ee32f7261b2c8fae17613d8c64e1c5a6d6f1c,"ENH: better handling of NaNs in logaddexp
",numpy/core/src/npymath/npy_math.c.src
002b0de24d7c88cb97d16b9e8df6948fe4f07d5d,"Merge pull request #5122 from juliantaylor/small-dot

ENH: add small kernel correlate function",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/templ_common.h.src,numpy/core/tests/test_numeric.py
c7fae327a79b95671833e641612ca87e1d6a6b48,"ENH: add small kernel correlate function

For cases like convolve/correlate with small kernel calling out to BLAS
dot is very slow as it goes through many wrappers and BLAS is typically
optimized for very large data.
So add a template utility file and add a special function for small dot
products.
2-4 times faster than openblas dot for kernel sizes < 11.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/templ_common.h.src,numpy/core/tests/test_numeric.py
caeb88871516933b671e547bcaabde173a220664,"Merge pull request #5120 from larsmans/install-docs

DOC: update installation docs",doc/HOWTO_RELEASE.rst.txt,doc/source/reference/arrays.classes.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/user/c-info.python-as-glue.rst,doc/source/user/install.rst,numpy/core/src/multiarray/numpyos.c
66a0441ae70ba4c6da272ee7bd7c8c9a2ba74656,"DOC/MAINT: Python 2.6 or 3.2 required

Installation docs still stated Python 2.4 is supported, while not mentioning
3.x at all. Also corrected the statement that distutils is in python-dev on
Debian, while it's actually in the main package.

Several parts of the dev docs and some comments also referenced now-irrelevant
2.5 bugs/limitations.
",doc/HOWTO_RELEASE.rst.txt,doc/source/reference/arrays.classes.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/user/c-info.python-as-glue.rst,doc/source/user/install.rst,numpy/core/src/multiarray/numpyos.c
5f5edf777fc621c4f330f12d871540098738e8b9,"Merge pull request #5116 from jaimefrio/poly-overflow

ENH: Cast non-object arrays to float in np.poly",doc/release/1.10.0-notes.rst,numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
3a0587e545e959747d9b501dbf029a4cd6576547,"ENH: Cast non-object arrays to float in np.poly

Closes #5096. Casts integer arrays to np.double, to prevent
integer overflow. Object arrays are left unchanged, to allow
use of arbitrary precision objects.
",doc/release/1.10.0-notes.rst,numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
7b7f83ba9573a64c5f5147e297237ce0a9ca289c,"Merge pull request #5118 from jaimefrio/docs-gil-thresholded

DOC: document NPY_BEGIN_THREADS_THRESHOLDED",doc/source/reference/c-api.array.rst
75c1ed846b0a6de02bba61837e6335f69728c0c6,"DOC: document NPY_BEGIN_THREADS_THRESHOLDED
",doc/source/reference/c-api.array.rst
f4fa7bd2a67a577eaa72af83028adcfbc71b7fd4,"Merge pull request #5115 from jaimefrio/searchsorted-c-docs

DOC: Update PyArray_SearchSorted docs in c-api.array.rst",doc/source/reference/c-api.array.rst
4f19c0ccfe010c13b170f8af700484c8fdecb3dc,"DOC: Update PyArray_SearchSorted docs in c-api.array.rst
",doc/source/reference/c-api.array.rst
5140ce73e3a79c238ee6226d6f3ef5336ee89215,"Merge pull request #5111 from larsmans/fast-bool

ENH: faster (branchless) logical_xor",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
f2ab1fb607a9f931bc5633ca92f789d0d03af582,"TST: extend truth table test to arrays with various dtypes
",numpy/core/tests/test_umath.py
4acc527c0220c2b3cb04b14424bb70cbd98ce336,"TST: logaddexp and logaddexp2 with infs should issue no warnings
",numpy/core/tests/test_umath.py
5e79fb5fb3c37c2108dfca5e0ab723c58e236ca0,"ENH: logaddexp handling of same sign infs without warnings
",numpy/core/src/npymath/npy_math.c.src
d8e581ee8e3dc54c302a00c66e1201684ac37222,"ENH: faster (branchless) logical_xor
",numpy/core/src/umath/loops.c.src
27d73bf3295df59bd0e2d31605b0cbfc2a69f12d,"Merge pull request #5104 from juliantaylor/inner-fix

BUG: check success of PyArray_DescrFromType in PyArray_InnerProduct",numpy/core/src/multiarray/multiarraymodule.c
d7fd1e8d8b97db7efbb9c1ff02e96fb9948bfb1a,"Merge pull request #5107 from juliantaylor/na-doc

DOC: remove preservena reference from docstrings",numpy/add_newdocs.py
55544881b5784fca7d4e26effd5b89ccc86f9534,"Merge pull request #5106 from juliantaylor/sequence-fix

BUG: check if object provides len() before trying to iterate it",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
3b579f7046a0751a1b1976390ece5ba8603b8585,"DOC: remove preservena reference from docstrings

preservena is not not implemented.
the putmask docstring is misleading, currently copyto is faster for
dense or sparse masks while putmask is faster for random masks.
[ci skip]
",numpy/add_newdocs.py
04d507f7a173bbc6039bd83374f305a3792fb941,"Merge pull request #5105 from juliantaylor/where-no-subtype

BUG: don't propagate subtypes from np.where",numpy/core/src/multiarray/multiarraymodule.c
e5a7d585286fedec032cf6fbecfca2a44156bbdc,"BUG: check success of PyArray_DescrFromType in PyArray_InnerProduct

closes gh-5065
",numpy/core/src/multiarray/multiarraymodule.c
8bf9a18f68a36f81bbd27ce52af65ca3cfd217fd,"BUG: check if object provides len() before trying to iterate it

some libraries want object arrays from objects that are iterable but
rely on not providing len() to get the right dtype from numpy.
closes gh-5100
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
8dd2e475e4ac51af75de31ea9608dbf2bca2b835,"BUG: don't propagate subtypes from np.where

the C implementation cannot preserve subclass attributes, this needs a
python wrapper using indexing for subclasses.
closes gh-5095
",numpy/core/src/multiarray/multiarraymodule.c
d599cdf745ab9b010503be2898f1abb4339bfdb7,"Merge pull request #5102 from dpinte/fix/epd_canopy

replacing old reference from EPD to Canopy
",doc/source/user/install.rst
7be6655c34c2e25232964079818fffe0d7d03696,"DOC: replacing old reference from EPD to Canopy
",doc/source/user/install.rst
fc5d32af378dcb86ec05fd0a2b63c5bdaef37cc8,"Merge pull request #5099 from perimosocordiae/patch-1

BUG: np.unique with chararray + inverse_index",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
7efd5cf4cc6cd45f6114fdbc3fbfd619ddf03deb,"BUG: np.unique with chararray + inverse_index

The call to `empty_like` was trying to use the `chararray` subclass,
which doesn't support the `np.intp` dtype.
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
8b44a21c62a33337f611db411cfd912d1e8a2072,"DOC: document `ldict` and `gdict` in bmat, closes #5058
",numpy/matrixlib/defmatrix.py
2e3778a189afafce5b0d3c62b93075e253cfba0f,"Merge pull request #5088 from juliantaylor/not-fix

BUG: fix wrong error checks of PyBytes_AsStringAndSize",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
e50e17cccc38b6be5808aaf46fe1053803cc1578,"BUG: fix wrong error checks of PyBytes_AsStringAndSize

The check in ufunc_type_resolution.c is broken due to a spurious not and
a few cases of TypeError being overwritten without clearing.
Also change all of these error checks to a negative check for
consistency.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
ffacca0b2384fecbf383df137546db02f101e993,"Explicitly set strides with negative number in test
",numpy/core/tests/test_multiarray.py
c85e31e6331efe96034fe76c5a6b9d60698c0f23,"Merge pull request #5076 from kanhua/kh_fix

DOC: Minor fix on c-info.python-as-glue.rst
",doc/source/user/c-info.python-as-glue.rst
0cabea84fa0c21ca614f9187e56318f328d964b1,"DOC: add section on compiling pyf files

Add section to remind the readers to recomplile add.pyf and add.f95
files before checking the add module in python
",doc/source/user/c-info.python-as-glue.rst
882c02853f0cc3d08e46b25ff199bd10061e340f,"Merge pull request #5087 from juliantaylor/unicode-argmin

BUG: fix out of bound access in unicode argmin/argmax",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
5a14415b0aa8df194b68da840d6a58297e1e03b0,"BUG: fix out of bound access in unicode argmin/argmax

elsize is in bytes and the pointer of unicode type, so it must divided
by the size.
Closes gh-5082
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
0c6fd4875acc733165ca71301c661535aaebed93,"Fix strides when creating Python buffer
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
4083883228d61a3b571dec640185b5a5d983bf59,"Merge pull request #5034 from seberg/inplace-ravel

ENH: Allow ravel to reshape in place when possible",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
a32625e488a3208baebab022b312c956d9b26654,"Merge pull request #5078 from charris/add-back-cblas.h

BUG: Readd the cblas.h header.",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/vdot.c,numpy/core/src/private/npy_cblas.h
2d9aa59f430177e0c77934b3d5bce477e6ce2739,"BUG: Readd the cblas.h header.

Rename cblas.h to npy_cblas.h and put it in numpy/core/src/private.
Fix the various includes to account for the change.

It turns out that MKL provides cblas, but not cblas.h. Rather, they
provide mkl_cblas.h, which also uses typedefs for the CBLAS_XXX enums.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/vdot.c,numpy/core/src/private/npy_cblas.h
691a8f950d557d1e0c39dc2b664a3cc88dc81cca,"Merge pull request #5075 from grlee77/docfix

DOC: update numpy.extract docstring",numpy/lib/function_base.py
5856a12a3aa3f0474bfd5b7c0c24a32b15728580,"DOC: update numpy.extract docstring
",numpy/lib/function_base.py
1dc63505cc9fb7fc5a22e600ee324517e75254b4,"Merge pull request #5072 from charris/remove-testcalcs.py

MAINT: Remove testcalcs.py file.",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/testcalcs.py
fa37c97d1201f02bea9ccaa1f63660f3aa47bde1,"MAINT: Remove testcalcs.py file.

The testcalcs.py file is nowhere imported or installed, nor did anyone
reply when it was proposed on the mailing list to remove it. It looks
to be a leftover from the original work on datetime.
",doc/release/1.10.0-notes.rst,numpy/core/src/multiarray/testcalcs.py
d98e57c25b51ec3a0826e4bd1bf83488d8cfbc2f,"Merge pull request #5070 from juliantaylor/gnubsd-fix

TST: gnufreebsd has fixed the thread control word loss",numpy/random/tests/test_random.py
2000e83fadee82a9b5d2f642d7c02a2cb907b073,"TST: gnufreebsd has fixed the thread control word loss

http://lists.alioth.debian.org/pipermail/glibc-bsd-commits/2014-September/004163.html
",numpy/random/tests/test_random.py
44877b36870ec2a0505c536a30b9fbf06a414c17,"ENH: Allow ravel to reshape in place when possible

This fixes a lot of corner cases in reshape 'K' when the array
is not contiguous in the first place, it was previously never
ravelled in place.

Closes gh-5033
",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
04f6c0fe5a80b982f6da88fda47ecf6c05122370,"Merge pull request #5061 from keszybz/fix-dimension-message

Fix dimension message",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/scalartypes.c.src
860489c378313016159a70d4412cf18a203f0e13,"Merge pull request #5024 from pp-mo/in1d_of_set

DOC: warn about using a set with 'in1d'.",numpy/lib/arraysetops.py
1e72312bde7f7b66db8b85a28d8e5739446c0da0,"Merge pull request #5045 from ryanblak/argmin-doc

DOC: added doc for argmin",numpy/core/fromnumeric.py
2706c59a95a3e1e4b3b2d9534d4c2cff4e0573b3,"Merge pull request #5062 from charris/update-numpy_ufunc-doc

DOC: Correct versionadded for __numpy_ufunc__ documentation.",doc/source/reference/arrays.classes.rst
ca39bc161e3c5b9978a06c0959c537ffe6e62fbb,"Merge pull request #5066 from seberg/index-sequence

BUG: cannot convert invalid sequence index to tuple",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
9af50285a7807c67f13b2ede17791a1e693da148,"TST: Test tuple subclass index and broken sequence index
",numpy/core/tests/test_indexing.py
c85dd45b42d2ea485345ca3a0f24d8c149705cc2,"BUG: cannot convert invalid sequence index to tuple

A sequence which raises an error on item getting, should be just
handled as a single index and not a tuple nd-index.

Also fix some error handling.

closes gh-5063
",numpy/core/src/multiarray/mapping.c
7e8e7a2890e992cb4377b494fb89c8102d15fba4,"Merge pull request #5067 from juliantaylor/restore-dup

BUG: restore api of npy_PyFile_DupClose in python2",numpy/core/include/numpy/npy_3kcompat.h
0be73e01eab8716fdb890210f2be8406c224881e,"BUG: restore api of npy_PyFile_DupClose in python2

breaks matplotlib
",numpy/core/include/numpy/npy_3kcompat.h
575ef090def253ea322984f21c7a1e66cef45df4,"DOC: Correct versionadded for __numpy_ufunc__ documentation.

Make it 1.10.
",doc/source/reference/arrays.classes.rst
5bc942a1d3a24f285e70e9d53b0864579aa27df5,"BUG: fix off-by-one in dimension error message

The maximum allowed is really NP_MAX_INT, not NP_MAX_INT-1.
",numpy/core/src/multiarray/scalartypes.c.src
457ab0bba16562699251e5d72d0ab9255b2a19b7,"BUG: fix off-by-one in dimensionality error message

The maximum allowed is really 32, not 31.
",numpy/core/src/multiarray/conversion_utils.c
fe0f6cc761e5b021abe16a822f20671928dca4ae,"Merge pull request #5059 from juliantaylor/config-warn

MAINT: make main a strict prototype in configure checks",numpy/distutils/command/config.py
c0bba1ce75197a58a1d9f6ec8b13b5a09f18a558,"MAINT: make main a strict prototype in configure checks

removes about 400 lines of warnings from the build logs
",numpy/distutils/command/config.py
2c6937f4782e5947e6100941d1a291eb1d6f3d65,"Merge pull request #5055 from juliantaylor/note-sync

DOC: sync release notes with 1.9 branch",doc/release/1.8.2-notes.rst,doc/release/1.9.0-notes.rst,doc/source/release.rst
48df1930862078e5ede30b4baff0e722ffaecbcf,"Merge pull request #5056 from juliantaylor/scalar-exact

add C-API PyArray_IsAnyScalarExact",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h
ab170ae6822f4208498b3ab561eba1f8f8a2cfb9,"Merge pull request #5047 from juliantaylor/move-dotblas-to-multiarray

Move dotblas to multiarray",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/core/__init__.py,numpy/core/bento.info,numpy/core/blasdot/cblas.h,numpy/core/bscript,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/{blasdot/_dotblas.c,numpy/core/src/multiarray/cblasfuncs.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/vdot.c,numpy/core/src/multiarray/vdot.h,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_multiarray.py,numpy/distutils/system_info.py,numpy/linalg/bscript,tools/travis-test.sh
2f550591567b6643c7e7d0c897683f8319032ed1,"ENH: skip numpy_ufunc and priority lookup for numpy scalars

improves rmul with scalars, gh-5030
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c
d72dd18dffceda6a3658479e9265c899b02e8843,"API: add PyArray_IsAnyScalarExact for a fast check for scalars
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h
6ded5d5e2d548969d4738fa28412bef8c7086257,"ENH: search typenumbers from typeobjects via a binary search
",numpy/core/src/multiarray/scalartypes.c.src
a32a9327b433ec47051b16a1a87190f640e8475d,"Merge pull request #5050 from juliantaylor/cbrt

ENH: add cube root function np.cbrt for real floats",doc/release/1.10.0-notes.rst,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
d5f55743b20e39a5167bcc88fcbddae08c0de1ad,"Merge pull request #5043 from chatcannon/fortranobject_malloc

Add NULL check after malloc() in fortranobject.c",numpy/f2py/src/fortranobject.c
774cc8421944ec1dbe915e4026351366749fa8d4,"Merge pull request #5054 from larsmans/c-fixes

BUG: unchecked malloc in heapsort",numpy/core/src/npysort/heapsort.c.src
4a23c23ecf21d42ff4cf72f92e09e3d0575aa920,"DOC: sync release notes with 1.9 branch

[ci skip]
",doc/release/1.8.2-notes.rst,doc/release/1.9.0-notes.rst,doc/source/release.rst
e7a837086e2cf304deff43c5eaf06132de2608a5,"ENH: add cube root function np.cbrt for real floats

wraps the C99 cube root function cbrt.
",doc/release/1.10.0-notes.rst,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
9974fb68f41ec8016bcde7afd93af1746865fd36,"BUG: unchecked malloc in heapsort
",numpy/core/src/npysort/heapsort.c.src
f137171136bd8ea244dcd9dc73278f6201f24dd6,"Merge pull request #5053 from Gabriel-p/typo-percentile

DOC: fix typo in np.percentile docstring",numpy/lib/function_base.py
078af947372fac6a83d95d1ed6fd0585b05f86fd,"fix typo
",numpy/lib/function_base.py
2af027dc1f593a759e33579d03e9f51bd95a6e2b,"Merge pull request #5051 from juliantaylor/thread-test-fix

TST: accept small error in threaded random test",numpy/random/tests/test_random.py
3ea3dece5a5ef586a07310e12236669220eada07,"TST: accept small error in threaded random test

freebsd and windows change x87 precision mode (fctrl bit 8 and 9) from
extended to double in child threads so the random numbers cannot be
exactly the same from master and child threads.
see gh-4909
",numpy/random/tests/test_random.py
77703de7a14c66dcba6ee89bdd7b084ba70f056c,"Merge pull request #5048 from juliantaylor/subclass-test-fix

BUG: fix array_almost_equal for array subclasses",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
dfc567790badcc87822a39f5c35f0dd78b8c1599,"BUG: fix array_almost_equal for array subclasses

introduced in gh-4105/ab04e1ae0e8eca717bc7e42f3b0a60c9ff764289
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0cf6dcf245ccd68b82f82e6b5f00f5a97a874651,"ENH: add better error message for misaligned matrices

based on gh-4985 by Lars Buitinck
",numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/multiarraymodule.c
eba3c4bc1470eeda558745c6a18cee3365975807,"MAINT: cleanup unnecessary code
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/common.c
75a27ce988d64a31d26c96af9e4fea06ec64f14b,"BLD: check for CBLAS header in ""unoptimized"" blas

Allows building against system installed blas library that might be
optimized.
",numpy/distutils/system_info.py
8f03863f97d892e89c61a52c1d242906466a33cd,"BUG: Capitalize environmental variables in numpy/core/__init__.py.
",numpy/core/__init__.py
12bf7fe51cda61a58ebdb9e8bcc015796f89ae5d,"TST: Add vdot tests, move tests from test_blasdot to test_multiarray.

Not all tests from test_blasdot were relevant, as they checked the cblas
implementations against the non-cblas implementations. Those two are no
longer separate.

Remove test_blasdot.py as there nothing is left in it.
",numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py
d8a837714c241b729cdd823ae498adce242f3a75,"DOC: Update docs to reflect deprecation of alterdot and restoredot.

Also move docstrings into the versions in numpy/core/numeric.py as
the functions are no longer in the defunct _dotblas module.
",doc/release/1.10.0-notes.rst,numpy/add_newdocs.py,numpy/core/numeric.py
9c1d5538b5bf8682b82f0290615d3e9d7f97d746,"ENH: Move vdot to multiarray.

Remove vdot from _dotblas and implement it in multiarray.
Remove the files in core/blasdot as they are no longer needed.
Fix tests and build to reflect the changes.

The vdot function is now a bit faster in the common case as ravel
is used instead of flatten. There is also no need to conjugate the
files for clongdouble.
",numpy/core/bento.info,numpy/core/blasdot/_dotblas.c,numpy/core/blasdot/cblas.h,numpy/core/bscript,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/vdot.c,numpy/core/src/multiarray/vdot.h,numpy/core/tests/test_blasdot.py
2079469b151fa4719fdce10d4324497aad45ded5,"MAINT: Refactor ndarray.dot method to call PyArray_MatrixProduct2.

Now that PyArray_MatrixProduct2 is blas enabled, call it directly.
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c
93feabba42a6c18a66224dae170ecee08e0f10f9,"ENH: Move dotblas_innerproduct down into multiarray.

Move the dotblas_innerproduct function from the _dotblas.c file to a new
cblasfuncs.c file in multiarray and rename it cblas_innerproduct.
Modify it so that it can called directly from PyArray_InnerProduct and
do so.  Fix up numeric.py and the tests to reflect these changes.
",numpy/core/blasdot/_dotblas.c,numpy/core/numeric.py,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/cblasfuncs.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_blasdot.py
fee3c926fbd48f477121e95b86ede32fcdb30ea9,"MAINT: Update waf to 1.7.16
",tools/travis-test.sh
41396c415529a0d862fa292c3e46a6f3d660a1a6,"ENH: Move dotblas_matrixproduct down into multiarray.

Move the dotblas_matrixproduct function from the _dotblas.c file to a
new cblasfuncs.c file in multiarray and rename it cblas_matrixproduct.
Modify it so that it can called directly from PyArray_MatrixProduct2 and
do so.  Fix up numeric.py and core/__init__.py to reflect these changes.
",numpy/core/__init__.py,numpy/core/blasdot/_dotblas.c,numpy/core/bscript,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/cblasfuncs.c,numpy/core/src/multiarray/cblasfuncs.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/tests/test_blasdot.py,numpy/linalg/bscript
a3919717c47070bc8a245ffa61b3a75dd7d5d879,"MAINT, STY: Remove use of alterdot, restoredot in _dotblas.c.

These are no longer needed. Also do C style cleanups.
",numpy/core/blasdot/_dotblas.c
175cea4dc0590ae520f32476ffb9129b8524bcad,"ENH: When cblas is available use it in descr->f->dot.

Importing _dotblas currently executes _dotblas.alterdot, which replaces
the default descr->f->dot function with a cblas based version for float,
double, complex float, and complex double data types. This PR changes
the default descr->f->dot to use cblas whenever it is available. After
this change, the alterdot and restoredot functions serve no purpose, so
are changed to do nothing and deprecated. Note that those functions were
already doing nothing when _dotblas was not available.
",numpy/core/blasdot/_dotblas.c,numpy/core/bscript,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_deprecations.py
2995792b90add947f8898ea36410473f37b94509,"ENH: Add 'HAVE_CBLAS' macro for build purposes.

The current system works for MKL and OpenBLAS by default because the
mkl_info and openblas_info classes in numpy/distutils/system_info do not
define the macro 'NO_ATLAS_INFO=1' that currently signals the absence of
CBLAS. This PR declares the presence of CBLAS directly by defining the
'HAVE_CBLAS' macro.
",numpy/core/setup.py,numpy/distutils/system_info.py
00a33398b35541cf347fe76f844ee64be9e1d37b,"Changed the `goto fail` to a `return PyErr_NoMemory()`
",numpy/f2py/src/fortranobject.c
3ab6ec8e16906fc471f3c49400c62ce0857d5404,"Merge pull request #5042 from juliantaylor/test-argv

TST: pass sys.argv to run_module_suite by default",numpy/compat/tests/test_compat.py,numpy/core/tests/test_abc.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_multiarray_assignment.py,numpy/linalg/tests/test_build.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/testing/nosetester.py
537c7a66757d6ade9ae385f637339021ce28b02c,"DOC: added doc for argmin
",numpy/core/fromnumeric.py
949daeaf42b3e7687eebf7eb764e63a5eec336ea,"TST: pass sys.argv to run_module_suite by default

allows passing flags like --pdb to test files
also add call to files where its missing
",numpy/compat/tests/test_compat.py,numpy/core/tests/test_abc.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_multiarray_assignment.py,numpy/linalg/tests/test_build.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/testing/nosetester.py
596dd845b9c451c443c0e9f7a64c7932b205d1ca,"Add NULL check after malloc() in fortranobject.c
",numpy/f2py/src/fortranobject.c
03dcd3b754d9a618c0c2c8c72bb225565758bbf5,"Merge pull request #5038 from juliantaylor/clongdouble-align

TST: skip clongdouble alignment checks on 32 bit arches",numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
eb9db82800f10ddc87e0f5efb6bb9be3fa8a5518,"TST: skip clongdouble alignment checks on 32 bit arches

turns out not only sparc is borked, skip the checks on all 32 bit arches
with too large clongdouble alignments until we have an aligned
allocator.
",numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
6968c25fa35be43504eb314ac58fc7f64480facc,"Merge pull request #5035 from juliantaylor/fft-test

TST: join fft threads before getting values",numpy/fft/tests/test_fftpack.py
b8aedd0e69e862a74cba896bb0dbb1d2748c4edf,"TST: join fft threads before getting values

avoids timeouts on slow machines
",numpy/fft/tests/test_fftpack.py
0f0575c5b14574d55c6237e907f251582aec5767,"Merge pull request #4572 from juliantaylor/string-cmp

ENH: optimize STRING_compare by using memcmp",numpy/core/src/multiarray/arraytypes.c.src
588bcc41b7b13aeccbec5b323d18c84e8946d77b,"Merge pull request #5020 from charris/disable-some-test-warnings

TST: Silence some warning that turns up on OpenBSD.",numpy/core/tests/test_umath.py
4a501a066061ae957b6ccfd752f503da6a5e3337,"Merge pull request #5025 from pp-mo/assert_allclose_percent

BUG: fix percentage reporting when testing.assert_allclose fails.",numpy/core/numeric.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
138b3bfa475bfe78659904e30fb819a15f192709,"Merge pull request #5031 from charris/speedup-old-polynomial-functions

MAINT: Make numpy/lib/polynomial/polyval a bit faster.",numpy/lib/polynomial.py
3e31b9a5de6e556b683a39f4d56a1b49e00e4583,"MAINT: Make numpy/lib/polynomial/polyval a bit faster.

Multiplying a numpy_scalar times a numpy_array is much faster than
the other way around. This PR switches the order of multiplication
in the polyval function resulting in a speedup of about 5x for scalar
values of x.

Closes #4610.
",numpy/lib/polynomial.py
ea32c9057f47d634bde5370f373a88aa6bfa7478,"Use more portable test methods.
",numpy/testing/tests/test_utils.py
4097ec3ec10c41d399518867f4bebb0a53ee8a5c,"BUG: fix percentage reporting when testing.assert_allclose fails.
",numpy/core/numeric.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
37ff2cd602df98ef72b3a33816ff2832a3163c6b,"DOC: warn about using a set with 'in1d'.
",numpy/lib/arraysetops.py
9c50f988ac27dd1758dbc46455573aaa77638c68,"Merge pull request #5022 from seberg/structured-insert

BUG: Fix np.insert for inserting a single item into a structured array",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
45f8a181b7518836986fd03fc94c3845730bde44,"Merge pull request #5004 from juliantaylor/argmin-performance

ENH: improve bool arg{min.max} performance",numpy/core/src/multiarray/arraytypes.c.src
f880b1aa7583d7c3dfc111a8b79e7e7ba364baf2,"BUG: Fix np.insert for inserting a single item into a structured array

Note that there are some object array special cases because of allowing
multiple inserts. `np.array(..., dtype=object)` is not always clear.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
ff8337d637c201701f37e50e0ea502bab501527e,"Merge pull request #5021 from charris/remove-missing-files-from-setup

MAINT: Remove references to missing files from install.",numpy/f2py/setup.py,numpy/lib/setup.py
42aa77ff622fbcf7604a7842babb2c3a9961209a,"MAINT: Remove references to missing files from install.

The following directories and files have been moved or deleted

    numpy/lib/benchmarks
    numpy/f2py/docs
    numpy/f2py/f2py.1

This PR removes references to them from the relevant setup.py files.

Closes #5010.
",numpy/f2py/setup.py,numpy/lib/setup.py
affeaf54bd08f42c87d966f03cbdc8a896d4e90f,"TST: Silence some warning that turns up on OpenBSD.

On OpenBSD with gcc-4.2 log1p(nan) raises an invalid value warning.
This PR disables both 'divide' and 'invalid' for the log1p tests.

Closes #5017.
",numpy/core/tests/test_umath.py
502cb1275ed4b363288a45fa42890b9e0860aba6,"Merge pull request #5003 from endolith/patch-1

escape the italics bold and monospace examples",doc/HOWTO_DOCUMENT.rst.txt
3975e095013119cfdbb9405ca95e6c723eb862d3,"Merge pull request #5014 from juliantaylor/cache-struct

MAINT: use a structure as cache buckets",numpy/core/src/multiarray/alloc.c
7530e9ed4ef8f22fbf64f712f65e9eb20c249199,"MAINT: use a structure as cache buckets
",numpy/core/src/multiarray/alloc.c
791a719109cbbd9c23048f9fb8b0ff91d4dc122c,"Merge pull request #5013 from larsmans/c-fixes

Small fixes, including a memset(NULL, c, n)",numpy/core/src/multiarray/alloc.c,numpy/linalg/lapack_lite/python_xerbla.c
9e93c073fd949566f96561047112e052616be504,"BUG: potential memset on NULL in allocator cache
",numpy/core/src/multiarray/alloc.c
036efee0caf0bf026a9e8a9fd2010be11c7d9408,"Merge pull request #5012 from jaimefrio/faster_return_inverse

ENH: Speed up `unique` with `return_inverse`",numpy/lib/arraysetops.py
a85c17727fc573f1d0cc2e993792a8694eac581e,"ENH: Speed up `unique` with `return_inverse`

This replaces a sort with fancy indexing.
",numpy/lib/arraysetops.py
e8590311a7b312711c7a4f40c1a15496e34d0ee6,"Convert as_strided input to array first
",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
0210cca2e10199dabc81b64fca2085ab62645b7f,"Merge pull request #5006 from dhomeier/ioconv_usecols

BUG: fix genfromtxt check of converters when using usecols
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
709a06d0e9db862a8dd519db13724a4c59de7d69,"BUG: fix genfromtxt check of converters when using usecols

fixes an issue reported by Adrian Altenhoff where user-supplied
converters in genfromtxt were not tested with the right first_values
when also specifying usecols.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
145422826e34e880eb16a85bea6cee01cb83556f,"Merge pull request #5002 from juliantaylor/convolve-nocopy

ENH: remove unnecessary copy of convolve inputs",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
0104e62e27e9fede5ffd066da16e029a3e8d99cc,"Merge pull request #5005 from juliantaylor/use-tempdir-for-large-file

Use tempdir for large file",numpy/lib/tests/test_format.py
e95cf5f492bf1b181b083ff42ad451319ab23347,"TST: skip large file test on windows

nobody knows if it supports sparse filesystems, so just skip it.
",numpy/lib/tests/test_format.py
dcf32db293607357d0b4b152b1c630ecbccc092e,"BUG: avoid NamedTemporaryFile for large file test

NamedTemporaryFile files can't be reopened on Windows.
",numpy/lib/tests/test_format.py
69b7962c1792f14a8d5b3972a998faa1e8997bac,"ENH: vectorize BOOL_argmax

using the same method as BOOL_logical_and
",numpy/core/src/multiarray/arraytypes.c.src
c12c31f61261711b6b83990bbfd748c2e2366c30,"ENH: improve bool argmin performance

in glibc memchr using SSE2 is about 18 times faster than our current
code.
",numpy/core/src/multiarray/arraytypes.c.src
7c6fd583a0a13649f3cdca3b0959ed1fdb4e85bf,"MAINT: linalg: use sizeof instead of magic constant

Allows changing the error message at some point.
",numpy/linalg/lapack_lite/python_xerbla.c
f7026983979fe03bf9aafa9af58a8fe0efce614a,"escape the italics bold and monospace examples

since this is meant to be read in rendered form, and there are examples of these scattered through the text otherwise",doc/HOWTO_DOCUMENT.rst.txt
ad42ea6f614b7f9369a2a5756fea1dc66bc555d6,"Merge pull request #4997 from juliantaylor/unicode-init

BUG: set needs-init flag for unicode dtype",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
64c89327355d6154ef854dfee1be6c264125ccaa,"Merge pull request #5001 from juliantaylor/sizeof

support __sizeof__()",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
8724ed764fbcab88b4962aeda23c84fba972ac4b,"ENH: remove unnecessary copy of convolve inputs
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
606ac22ab1a4357758b8c9b44b17b2dd0d04bd70,"ENH: add dimensions and strides to _sizeof__ and handle not owning data
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
11fe65ce02db95dd81c8e3671bfab963daa53a3f,"ENH: Implement sys.getsizeof(x) for arrays and scalars.

Fixes #2279. Stubs/declares __sizeof__ method to use nbytes attribute.
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
52d6c3de0d18a00538f0a0c4cabdebd4d01b83f0,"Merge pull request #4996 from fdiary/gfortran-rpath

support rpath for GNU Fortran compiler.
",numpy/distutils/fcompiler/gnu.py
79d36359bf18a122577054072d5c846aded3f2b4,"BLD: support rpath for GNU Fortran compiler.
",numpy/distutils/fcompiler/gnu.py
007b186a853c8ab37db62042376a9b2d66c18dcf,"BUG: set needs-init flag for unicode dtype

Python >= 3.3 does not like printing garbage unicode so printing
np.empty(x, 'U') can throw UnicodeDecode errors.
It is probably easier to just require initializing the dtype as a whole
instead of trying to catching the decode error on all places where it
might occur. Hopefully 0 is a valid code in all codecs.
Closes gh-4994.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
26a02cd702d9ccfc48978dcf81c80225f324bf3b,"ENH: add subok flag to stride_tricks (and thus broadcast_arrays)
",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
14e4cc3aa8bc6e01d6494860c7de6bf9ec0ab86b,"Merge pull request #4989 from juliantaylor/percentile-fix

BUG: don't overwrite input percentile arrays",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
040d0408f4cdb0a472e654acd68c8e1c3fbd84f7,"BUG: don't overwrite input percentile arrays
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
c9dad32a1b5b360807f625ec49cac0a6537033bc,"Merge pull request #4988 from juliantaylor/gfortran-debug

BLD: add debug information to gfortran builds",numpy/distutils/fcompiler/gnu.py
4c4212b792ffce841ae31d842c0e0a52e285e071,"BLD: add debug information to gfortran builds

Similar to C builds which always have debug info.
",numpy/distutils/fcompiler/gnu.py
d1c503060f18d8f7ca51c2fe33b9e2fc328f1295,"Merge pull request #4937 from charris/pep8-numpy-random

Pep8 numpy random",numpy/random/mtrand/mtrand.pyx,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py
98d1161887c66eb1f04ba30faaedb7b5a4b1c5d2,"Merge pull request #4936 from charris/pep8-numpy-fft

STY: minor PEP8 fixups for numpy/fft.",numpy/fft/fftpack.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py
2059cce3939ba9d099300b3711182fa6e6086a2a,"Merge pull request #4982 from charris/gh-2941

Fixup of PR #4921",numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_umath.py
5ce8e067508ff1fed04b454b1559355aaaea7891,"Merge pull request #4941 from charris/fix-numpy-compat-_inspect

Fix numpy compat  _inspect",numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/compat/setup.py,numpy/compat/tests/test_compat.py
9cd4dc23a94e712ecda36827562d5e6e48f50671,"TST: Add tests for maximum/minimum of object arrays with nan.

There is a random element to these tests, so that they may fail to
fail when python compare is being used instead of richcompare.
",numpy/core/tests/test_umath.py
f8183164c768d4e654a2bf417987285572761fd9,"BUG: Fix NaN handling in npy_ObjectMax and npy_ObjectMin.

These functions currently fail randomly for Python < 3.x because they
use PyObject_Cmp, which looks at addresses for NaN objects. The fix is
to use PyObject_RichCompareBool, which is available in Python >= 2.6.
Note that for Python 2.6 and 2.7, PyObject_RichCompareBool falls back on
PyObject_Cmp when an object doesn't provide rich compare.

Closes #4903.
",numpy/core/src/umath/funcs.inc.src
15cd639932ba641bf27453864bc0bc7e33841548,"Merge pull request #4981 from hpaulj/fill_diagonal

Correct the fill_diagonal examples",numpy/lib/index_tricks.py
8910afb52490f113b855299d1126d5935f8b0300,"Correct the fill_diagonal examples
",numpy/lib/index_tricks.py
a3243adacf59a7a05326be3f0ac9c4728b501f70,"Merge pull request #4975 from juliantaylor/datetime-memleak

BUG: fix memoryleaks in datetime dtype parsing",numpy/core/src/multiarray/datetime.c
bbb7c3fbcdc2ddfcf79317661be2b99b1f6617e3,"BUG: fix memoryleaks in datetime dtype parsing

closes gh-4973
closes gh-4974
",numpy/core/src/multiarray/datetime.c
8957f23bd61623e0293df610dfe339e09fb0c653,"Merge pull request #4971 from charris/fix-redefined-macro-warnings

MAINT: Get rid of some harmless gcc warnings about macro redefines.",numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/test_rational.c.src
ee9f85bb914a6b002e4e329a36a730320a900cdb,"MAINT: Get rid of some harmless gcc warnings about macro redefines.

The Python.h header likes to be included first, otherwise warnings about
redefining ""_POSIX_C_SOURCE"" and ""_XOPEN_SOURCE"" are generated. This is
really a problem with the Python.h header, but can be worked around by
changing the order of inclusion.
",numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/test_rational.c.src
221ed0ccccd9d18a27b460a5bcf9125b91348f47,"Merge pull request #4970 from charris/fix-compile-warnings

MAINT: Get rid of some harmless gcc warnings about macro redefines.",numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src
661c4a5fb51e7232bab879da54378d9cccdebe52,"MAINT: Get rid of some harmless gcc warnings about macro redefines.

The Python.h header likes to be included first, otherwise warnings about
redefining ""_POSIX_C_SOURCE"" and ""_XOPEN_SOURCE"" are generated. This is
really a problem with the Python.h header, but can be worked around by
changing the order of inclusion.
",numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src
412591201ab4e743a3710c476510e5dbbd4be93a,"Merge pull request #4968 from WarrenWeckesser/bug-genfromtxt

BUG: io: genfromtxt did not handle filling_values=0 correctly. Closes gh-2317.",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
9c7689794cf59fc0065da8bba1d97002c7be14e3,"BUG: io: genfromtxt did not handle filling_values=0 correctly. Closes gh-2317.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
50a1dfa08698aa3406085944d5007d99388c8a06,"Merge pull request #4961 from cel4/tiny_doc_fixes

Fixed two typos in the c-api user guide.",doc/source/user/c-info.how-to-extend.rst
047371b259f251b8b9c7de41cc582b76703642b7,"Fixed two typos in the c-api user guide.
",doc/source/user/c-info.how-to-extend.rst
f5849e6f55823dc6b412815a295dc33cd344bbc5,"Merge pull request #4957 from WarrenWeckesser/doc-fix

DOC: remove 'count_reduce_items' from the 'Counting' section.",doc/source/reference/routines.sort.rst
90d697956fb581b1d1da0841d2a5000cdb31e49b,"DOC: remove 'count_reduce_items' from the 'Counting' section.
",doc/source/reference/routines.sort.rst
7e53e9b6f50ba98aafb73147917dfc39743fffd0,"Merge pull request #4926 from juliantaylor/concatenate-error

ENH: better error message for invalid axis and concatenate inputs",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/multiarraymodule.c
e65c9aabc4705ffe7767aaa411380248c642b251,"Merge pull request #4938 from charris/fix-docstring-typo

DOC: Fix typo in _iotools.py docstring.",numpy/lib/_iotools.py
192f025ce5280dffbdd361e3ee0645aa08764156,"Merge pull request #4924 from charris/pep8-numpy-polynomial

Pep8 numpy polynomial",numpy/polynomial/__init__.py,numpy/polynomial/_polybase.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py
74bd706d6fccb0512b276a038274680fd6568b75,"Merge pull request #4932 from argriffing/ravel-docstrings

DOC: clarify matrix.ravel docstring and add tests",numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py
bf04603cb55d10e22ae84a8683a9881e0043ca84,"Merge pull request #4946 from argriffing/squeeze-bad-axis-size

MAINT: small change to squeeze error message",numpy/core/src/multiarray/shape.c
d71637bb914a9b1140c8173024533cf3504ecad8,"MAINT: use N.ndarray instead of core.multiarray.ndarray
",numpy/matrixlib/defmatrix.py
c81fd7d016f58005631fb1c364668b04477e6b0b,"MAINT: small change to squeeze error message
",numpy/core/src/multiarray/shape.c
cc577a40a35c3bf073e04ef19a88f2e445aa3864,"Merge pull request #4943 from argriffing/matrix-squeeze-docs

DOC: matrix.squeeze docstring",numpy/matrixlib/defmatrix.py
2aa2132e9e3b98dacfe6b7a0f9273d83c812852b,"DOC: matrix.squeeze docstring
",numpy/matrixlib/defmatrix.py
3d7438a9f0c93c517ab9909e17c79c433d823b30,"STY: Minor PEP8 fixes.
",numpy/compat/py3k.py,numpy/compat/setup.py
3eb219fd97200282b6aed9fe760e843d4916bc06,"BUG: Fix bugs in unused code paths.

The `getargspec` needed to import the disassembler to support parsing
tuple arguments. Since numpy never uses those, the corresponding code
is deleted and an TypeError raised if such arguments are encountered.

Also fix the unused formatargs function so it does not require the
string module.
",numpy/compat/_inspect.py,numpy/compat/tests/test_compat.py
34698b64f90b985396f123f3659edc7a95d232ee,"DOC: Fix typo in _iotools.py docstring.

The error is in the StringConverter.upgrade docstring.
",numpy/lib/_iotools.py
1e22553c37e9112bf2426c1b060275419f906d8d,"Merge pull request #4931 from argriffing/matrix-docstrings

DOC: matrix flatten docstring",numpy/matrixlib/defmatrix.py
275b1dd62f125e6a92cc64f69c2ce2154799717a,"BUG: Fix None comparison giving FutureWarning in choice function.

This is in numpy/random/mtrand/mtrand.pyx where the choice function
was using comparisons of the form `None != p`.
",numpy/random/mtrand/mtrand.pyx
56471a170eee1c4694cde1889b8532e25f40e5d0,"STY: PEP8 fixups for numpy/random.
",numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py
489d23cd0f08de8890a65dcdb5caccdb8030c646,"DOC: clarify that matrix.ravel only copies if necessary; this is already tested
",numpy/matrixlib/defmatrix.py
fdedd16f31ee8f35b500d3585bf934b97154d878,"MAINT: restore optional ravel order and add tests and more docstring lines
",numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py
4e7ae3db32331fc2c73ceb272f54746ae71e6428,"STY: minor PEP8 fixups for numpy/fft.
",numpy/fft/fftpack.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py
7bfa929d3ce90f647dd4e4e228312491df517928,"MAINT: fix the import
",numpy/matrixlib/defmatrix.py
3b40702dcbf89b3a312133c5cee39360b6e043ec,"DOC: add minimal clarification to the matrix.ravel docstring
",numpy/matrixlib/defmatrix.py
650d4ef1b16c48fe443c3781b27e0f942be3ceb5,"DOC: clarify matrix flatten docstring
",numpy/matrixlib/defmatrix.py
b6ba4addafc0782fc3219b73fa67ec8f3f37adaa,"DOC: use m for matrix instead of a for array
",numpy/matrixlib/defmatrix.py
75f302e79cd421a591805bab143b8f4474b66313,"DOC: matrix flatten docstring
",numpy/matrixlib/defmatrix.py
ae7c942ced535fb39384aefeb8d32df92fb15988,"Merge pull request #4929 from juliantaylor/charris-pep8-numpy-lib

Charris pep8 numpy lib",numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/_version.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/nanfunctions.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/lib/utils.py
01b0d7e82211b581aaff925e3ccc36cff9ac1895,"STY: Make files in numpy/lib PEP8 compliant.

The rules enforced are the same as those used for scipy.
",numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/_version.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/lib/utils.py
dec6658cdc10a23ad0e733fb52a814306033d88c,"MAINT: Fixes for problems in numpy/lib revealed by pyflakes.

Some of those problems look like potential coding errors. In those
cases a Fixme comment was made and the offending code, usually an
unused variable, was commented out.
",numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/nanfunctions.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/lib/user_array.py,numpy/lib/utils.py
0b5a6645ee110a8d4c6b5defd8c01791ee48bda1,"STY: PEP8 compliance for numpy/lib/tests.

The possibly controversial part of this is making the nested array
value lists PEP8 compliant, as there is something to be said aligning
the values for clarity. In the end, it seemed like the easiest thing
to do was to make them PEP8 compliant. The eye can get used to that.
",numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_twodim_base.py
b2955ede452b8ca2aae5d0b035cd19c8a3b12480,"MAINT: Fix problems noted by pyflakes in numpy/lib/tests.
",numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py
3f0cb83f128f3bc61ff9eae2ff5bdc882c922a93,"ENH: better error message for invalid axis and concatenate inputs

the old errors
np.concatenate(1,2)
TypeError: object of type 'int' has no len()

concatenate([1], [2])
TypeError: an integer is required

are not very unhelpful, add a new internal function that allows adding
some context to axis argument conversion failures and check for sequence
inputs in concatenate.
Closes gh-4923.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/multiarraymodule.c
f9c6398d4f021e9509e19157a0d5ee72b27a8c2a,"MAINT: Fix blemishes in numpy/polynomial/tests revealed by pyflakes.
",numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polyutils.py
02f922b6e89ff6efe9c073249afb1f803a1dfa6e,"STY: PEP8 fixes for numpy/polynomial/tests/*.py.

Made conformant with the standards of scipy.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
daf9335f0a2cae53735dd12061e6b9c396dc57b1,"MAINT: Remove unused variables and imports in numpy/polynomial/*.py.

Detected by pyflakes.
",numpy/polynomial/__init__.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/polyutils.py
346489ac0e539ee9db31365cddab7da79d5932ec,"STY: PEP8 fixes for files in numpy/polynomial.

The rather lax standards used in scipy were used to identify the
needed style fixups.
",numpy/polynomial/_polybase.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polyutils.py
2243feef3ca8fb8c511b71b26d6bf6114e44c069,"BUG: Fix typo in hermite_e.py.

The hermepow function was incorrectly listed in __all__ as hermpow.
",numpy/polynomial/hermite_e.py
2ad538899928c249af456d93f250ebbd7535dcff,"Merge pull request #4916 from yotam/triu-dtype-fix

BUG: Avoid type promotion in tril and triu.",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
c50a2da70b4a5b5d23636c454b04d8afa7642d36,"Merge pull request #4917 from juliantaylor/zeros_like_string

BUG: fix string type inconsistency between zeros and zeros_like",doc/release/1.9.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_multiarray.py
a7c788c2dfcc9e44bab1ca69c1473785f31e3f70,"BUG: Avoid type promotion in tril and triu.
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
778af02eb7c1668e751f435cd2a4952a362a0433,"BUG: fix string type inconsistency between zeros and zeros_like

np.zeros for strings returns empty strings while np.zeros_like of a
string array creates strings containing an string 0.
",doc/release/1.9.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_multiarray.py
d61ee81e0220318ebe9404f0381c7fdfe189f647,"Merge pull request #4913 from juliantaylor/fix-cont-constr

BUG: fix ineffective as ascontiguousarray",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
84a9ab0136ed49dac1d43cb7319497861919e0a9,"Merge pull request #4910 from seberg/scalar-none-cmp

BUG: None comparison deprecation does not affect scalars
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_deprecations.py
8624924833603fa6c6410d68c778481dbb5c29d7,"BUG: None comparison deprecation does not affect scalars

This circumvents the None warnings for scalar comparisons.
Unfortunatly datetime NaT *can* in some cases evaluate equal
to None because NaT.item() is None.

Closes gh-4894
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_deprecations.py
d43cd21a30bd60b53666290a992347b12e626b7f,"BUG: fix ineffective as ascontiguousarray

My last microoptimization break copying of non-contigous 1d arrays in
the continous array constructors.
What was that saying about premature optimization again?
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
bc4a583d19fc694659d33c59e16b4cedd6307432,"Merge pull request #4902 from juliantaylor/asarray-improve

ENH: add a ndarray super-fast path to _array_from_object",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule.h,numpy/core/tests/test_multiarray.py
91369d30a13dcc6484f27195d73e6ea9ba2edd2d,"ENH: add a ndarray super-fast path to _array_from_object

When the argument is exactly an ndarray and the rest of the arguments
are their defaults we can skip the very slow
PyArg_ParseTupleAndKeywords.
This improves np.array(ndarray, copy=False) performance by about a
factor three and np.asarray(ndarray) by about a factor of two.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
656cf247e531c1ebfb69e864e00620b10082b120,"Merge pull request #4905 from juliantaylor/doc-update

documentation updates",.gitignore,doc/HOWTO_DOCUMENT.rst.txt,doc/release/1.9.0-notes.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/routines.array-manipulation.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.maskna.rst,numpy/add_newdocs.py,numpy/core/tests/test_ufunc.py,numpy/ma/core.py,numpy/testing/utils.py,site.cfg.example
638e627c813590a91514b255aeb13a34dc2ac51e,"DOC: numpy.testing documentation clarification of ""Raise an assertion""

""Raise an assertion"" was changed to ""Raises an AssertionError"" to clarify that
an exception named AssertionError will be raised.
Closes gh-4884

[ci skip]
",numpy/testing/utils.py
60d2cb1bae5d85dced6a1ed2b69142215aec65ad,"TST: test reduction argument parsing

In case we might want it up in future
",numpy/core/tests/test_ufunc.py
236c23b99f9b1ad51c2e12ab7598006f0e52fcaa,"DOC: add a note on the potential string dtype change
",doc/release/1.9.0-notes.rst
e8a43585025503c01889c61090607449815439ac,"DOC: fix PEP links in HOWTO_DOCUMENT.rst.txt
",doc/HOWTO_DOCUMENT.rst.txt
b72346e05c91fdea6d61c1f3f9bb712c650e0778,"DOC: NPY_ITEM_LISTPICKLE -> NPY_LIST_PICKLE

There is no NPY_ITEM_LISTPICKLE - it was NPY_LIST_PICKLE from the
beginning - from c3551579 (Expand usage of hasobject to be a flag-like
entity keeping track of how the data-type should be used.)

The documentation in the same rst file even uses the correct identifier
later, so it was just a typo/thinko.
",doc/source/reference/c-api.types-and-structures.rst
70e88caedfc9e2c901b986e62dd6b92970fb9e54,"MAINT: .gitignore += generated umath/loops.h

Commit 494abcf1 (ENH: speed-up minimum, maximum and xor for bool dtype)
reworked numpy/core/src/umath/loops.h to be autogenerated at build time,
but forgot to update .gitignore.

Fix it, so that the now-autogenerated loops.h do not constantly show as
untracked in git status output.
",.gitignore
c32d0cb4100084f99c851a314bd9d2722c4ee9f3,"DOC: remove obsolete NA documentation page
",doc/source/reference/routines.maskna.rst
fa1b71fc4c2ed7dd8015b7b45840f75ea14a3bb2,"DOC: add some missing ma functions to reference

closes gh-4898
",doc/source/reference/routines.ma.rst
dd70de2f73045aeb4edad6f77a68c6bbb4131824,"DOC: document behavior of ma.sort(endswith=) for unmasked min/max values

see gh-4422
",numpy/ma/core.py
d1c4a6921c01c75b8b5fe3bc6473e4090b549b5a,"DOC: add version added tag to reduction keepdims argument
",numpy/add_newdocs.py
ef269d55dfc11b9ca3a66b71c8d0e64703a8f359,"DOC: fix documented return value of tostring/tobytes

The function returns bytes not strings. This is relevant in python3.
",numpy/add_newdocs.py
0bdd45a6305b0f0526d092c480b6fcd28f574892,"MAINT: add common source indexer files to .gitignore

ignore cscope and gnu global files
",.gitignore
9e8c1ad06cfdab3cb8e7f266b31fd677b945e106,"DOC: add ascontiguousarray and asarray_chkfinite to appropriate section

added to ""Changing kind of array"" with the other as* functions
Closes gh-4890
",doc/source/reference/routines.array-manipulation.rst
4507dd6252380709eb092064095a1bd07460d14f,"DOC: document non-integer reduce axis argument deprecation
",doc/release/1.9.0-notes.rst
9ae5b5fab9f0c04c31c5d4b67d00c3cc79062731,"Merge pull request #4907 from juliantaylor/win-alignment

TST: win32 also does not provide 16 byte alignment",numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
7eefe925e6c6139d14972ee92affc4c2f19a7de6,"TST: win32 also does not provide 16 byte alignment

mingw builds set the alignment requirement for complex doubles types to
16 byte so the tests checking the alignment flag must be disabled.
",numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
1c11f980612340fec8af1d11d4b3bb1cbd716cd2,"DOC: clarify that umfpack, fftw and djbfft are not used by numpy

their presence in site.cfg is only for the benefit of third party
packages using numpy.distutils
",site.cfg.example
e04e79ae2cef411ff0ae26ca6089a5ac4f249021,"ENH: intern some commonly used strings in the multiarray module

Allows improving dictionary lookup performance.
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule.h
3b5f871606a758f8bf19981b06f423792cbdc5f4,"Merge pull request #4887 from ewmoore/conj_obj

BUG: object array np.conjugate, ndarray.conjugate inconsistent",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
5941fc9d9f15cd773b6c3989091a4b7ef96a1c30,"BUG: object array np.conjugate, ndarray.conjugate inconsistent

fixes gh-4730
",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
236ca8b7e989241d846ed5cac38ec87f3943c5d9,"Merge pull request #4866 from mhvk/ma/mvoid-initialisation

BUG Masked recarray assignment with [row][record] does not work",numpy/ma/core.py,numpy/ma/tests/test_core.py
c96bc5d3922ca91a4734b072a7bfd4fd3b5b8602,"Merge pull request #4889 from juliantaylor/object-array-init

BUG: initialize object array of array on resize and zeros",numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
809938d8dd481f789a3295a2cccce5aa521a6344,"Merge pull request #4888 from pv/fix-bytes-encoding-unpickle

ENH: core: make unpickling with encoding='bytes' work",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
16f39c80f69ae4695f2f940ccdff8b26db3a2a01,"BUG: core: ensure unpickled dtype fields and names have correct types + coerce on Py3

That 'names' is a tuple and 'fields' a dict (when present) is assumed in
most of the code base, so check them during unpickling.

Also add coercion from bytes using ASCII codec on Python 3.  This is
never triggered in the ""usual"" case of loading Py3-generated pickles on
Py3, but can occur if loading Py2 generated pickles with
pickle.load(f, encoding='bytes'), which sometimes is the only working
option.

The ASCII codec is probably the safest choice and likely covers most use
cases.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
4008bb41414184d875af4f733a3ff3d303b94a4a,"ENH: core: make unpickling with encoding='bytes' work

Make dtype.__setstate__ accept endian either as a byte string or unicode.

Also fix a missing error return introduced in c3551579, apparently
mistake.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
a28bfa5780c6611c9c46977a0e9c2123426cf24a,"Merge pull request #4892 from rgommers/msvc10-fix

BLD: fix build issues with MSVC10 on Windows.  Closes gh-4245.",numpy/distutils/command/config.py
fa0ec11c1e653a51a047ab7b572546886ba3cd8a,"BLD: fix build issues with MSVC10 on Windows.  Closes gh-4245.

Note that there are a few similar patches posted to gh-4101 and gh-4245.
Those were all patches to msvc9compiler in Python distutils.
Monkeypatching ``MSVCCompiler.link`` is less easy than this change
to ``config._check_compiler``; effect should be the same.

Also updates the error message shown when initializing MSVC fails.

[ci skip]
",numpy/distutils/command/config.py
4cbced22a8306d7214a4e18d12e651c034143922,"Merge pull request #4883 from pv/fix-scalar-unpickle-py3

ENH: core: add hack enabling unpickling Py2 pickled scalars on Py3 under encoding='latin1'",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
fcce0274a683add16a76e1b41288796a27682f9a,"ENH: core: add hack enabling unpickling Py2 pickled scalars on Py3 under encoding='latin1'

There is a similar hack in place for arrays, but scalar unpickling was not covered.

Provides a workaround for gh-4879
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
4e32035cfa55929babedbcd15af4802c66a58d98,"Merge pull request #4882 from pv/fix-unpickle-latin1-crash

BUG: core: fix crash when unpickling data on Py3 under non-latin1 encoding",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
c09d0ce0e11c94a83413c1bc6c9b2f5f40008a5a,"BUG: initialize object array of array on resize and zeros

np.zeros(2, dtype=[('k', object, 2)]) did only initialize the first
element to zero while the rest stayed None.

    In [1]: numpy.zeros(2, dtype=[('k', object, 2)])
    Out[1]:
    array([([0, None],), ([0, None],)],
          dtype=[('k', 'O', (2,))])

This is a surprising and likely not intended behavior which is fixed
here.
The changed function PyArray_FillObjectArray is only used with None or
zero inputs from numpy, though as its part of the API it could affect
third parties but this is not very likely.

Additionally the memory after the first element was not initialized when
the object was resized.
Closes gh-4857
",numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
cd062f584e66b140a37367dd5f32c9d1f8c88dec,"BUG: core: fix crash when unpickling data on Py3 under non-latin1 encoding
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
4ed00c7e3b3206d4abf5536d4d0014fb08d22bc2,"BUG Make ma[row][rec] setter work by avoiding copy in mvoid.__new__
",numpy/ma/core.py,numpy/ma/tests/test_core.py
d75c549be52aff9c61e1f9b7e00e7f0cd7e25bd4,"Merge pull request #4877 from juliantaylor/reduce-float-axis

DEP: deprecate float as axis argument to reductions",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_deprecations.py
011bb150f5d24c594c82a68c967be6f4b77ecb62,"Merge pull request #4878 from nouiz:doc
",numpy/linalg/linalg.py
88cf0e4f6d722b12f2d57e3acb6452d6a015cc93,"DOC: fix return shape of tensorinv doc
",numpy/linalg/linalg.py
5b86b763aa8381fa875820fe02f9e2293db47c23,"DEP: deprecate float as axis argument to reductions

consistent with deprecation of float as slice indices.
Closes gh-4876
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_deprecations.py
e49be3ca10c7da5efecb23c3db2b39f2613f5a11,"Merge pull request #4875 from juliantaylor/test-reduce

TST: remove not important tests to reduce travis load",.travis.yml
92ead9b3b0db4b8af8f142aff916b043ca08acab,"Merge pull request #4873 from juliantaylor/masked-sort-memory

ENH: avoid meshgrid and fancy indexing for 1d masked sort",numpy/ma/core.py
b36af0c496d5306eea008c27f9195bd171e4d460,"TST: remove not important tests to reduce travis load

Remove one of the separate compilation and relaxed strides tests, it is
not worth the cpu time to test these on two python versions.
Use one of them to add a non debug python3.4 test.
",.travis.yml
acc3369adebf1cd5c6df7f58fe691be1a80a484a,"ENH: avoid meshgrid and fancy indexing for 1d masked sort

Improves performance by using the simple indexing path and memory by
avoiding creating a full meshgrid.
",numpy/ma/core.py
4e41192f2e78f87b4a6b91230b7236c138963fe4,"Merge pull request #4870 from juliantaylor/linspace-version-doc

DOC: add version added tag to new linspace dtype argument",numpy/core/function_base.py
3f600221e7ca2e7f24f665b8517d1fb678a6c33e,"DOC: add version added tag to new linspace dtype argument
",numpy/core/function_base.py
bd2d8df922378f3be2252a0aa8b23972f01295ae,"Merge pull request #4869 from endolith/patch-1

DOC: fix a typo and use TeX for plot labels",doc/source/reference/routines.polynomials.classes.rst
71a9c6c4253b3dea3dbf913b3befb3efae7ab9c4,DOC: fix a typo and use TeX for plot labels,doc/source/reference/routines.polynomials.classes.rst
a0c3c1d76b35a6d4cc9b32b3db53883d1a2c38ff,"Merge pull request #4850 from notsimon/osx_endianness

BLD: fix endianness detection from endian.h with clang on osx 10.9",numpy/core/include/numpy/npy_endian.h
2ec3fc0488a774c0c75178b25b666c184c6afa5b,"Merge pull request #4861 from jaimefrio/tri_with_inf

BUG: inf turned to nan when calling np.triu/np.tril, fixes #4859",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
1392888ec4ddb37d4fa7bbb9231712af0dda4ea6,"BUG: Use `np.where` in np.triu/np.tril, fixes #4859

Replaces the current method to zero items, from multiplication to
using `np.where`.
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
ea6f9090b2c04e221cac66d36074ebd40f3097bb,"Merge pull request #4852 from ewmoore/gen_frexp

Generate ufuncs for frexp and ldexp",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/umathmodule.c
56b5f277411d0dbbbda2857171e979de8e77c623,"Merge pull request #4856 from juliantaylor/elide-testcases

TST: add temporary elision testcases",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
2e83a5d9d31691789d48277e194369ca6a9a9592,"TST: add temporary elision testcases

A very significant optimization for numpy would be to avoid the
temporaries in these types of expressions:

    res = a + b + c

transforming it into:

    res = a + b
    res += c

An approach to do that is to check the reference count of the PyNumber
slot arguments, temporary expressions coming from python have reference
count 1 and can be converted to inplace operations.
Unfortunately C-extensions can skip increasing reference counts for
operations breaking the assumption that an inplace operation can be
performed, e.g. Cython does this type of optimizations.
To ensure to not accidentally break such extensions in future test
that refcount == 1 operands from extensions are not elided.
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
aba6adbc9d4ffa6b9b4fcc41afcb4884944ce181,"Merge pull request #4854 from juliantaylor/i386-alignment

BUG: add missing elementsize alignment check for simd reductions",numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py
7ee56eb6f5cf60a4a1910faf0f1d4c494eefedfc,"MAINT: Add frexp and ldexp to npymath and generate their ufuncs
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/umathmodule.c
f8ce5d1b3f323ab2d3568bacf145055a6cfa21ad,"reorder endianness checks
",numpy/core/include/numpy/npy_endian.h
7cf7d21a8b5a0f00d7e7a38fbb5343c4e8057074,"BUG: add missing elementsize alignment check for simd reductions

e.g. doubles are only aligned to 4 bytes on i386 so one cannot peel them
to 16 byte alignment.
Closes gh-4853
",numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py
8915b33990f5780524ea1b98932fd5146d9d1de0,"fall back to the cpu branch if no endianness defines are found
",numpy/core/include/numpy/npy_endian.h
a824fc2852df874b6db119c734998e339ef66e5a,"MAINT: npy_a(exp,log,sqrt,fabs) don't really exist.
",numpy/core/include/numpy/npy_math.h
251acc007a07a2ed06a4b4666df82c8160c89f58,"Merge pull request #4842 from cournape/fix_intrinsics_detection

fix unknown attribute warnings under clang",numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
d0689a3243b77b8b65e9c49eb8376a9dd190b698,"REF: remove obsolete code.
",numpy/distutils/ccompiler.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
8a1496df7ad58936a8f9ff929ff629f3d38f51d8,"FEAT: add a check_gcc_variable_attribute function in config command.
",numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
9cede2744726c77b65839396aaad7c99e5435bc0,"ENH: use pragma instead of generic warning when detecting for function attributes.
",numpy/distutils/command/autodist.py
1616767ac632646db4b8ec5b900630f365023665,"fix endianness detection with clang on osx 10.9
",numpy/core/include/numpy/npy_endian.h
dc98a3df98645c2d074ee18ccc8357384e208f02,"Merge pull request #4671 from charris/prepare-1.10-devel

MAINT: start 1.10-devel.",.travis.yml,doc/release/1.10.0-notes.rst,doc/source/reference/ufuncs.rst,doc/source/release.rst,numpy/core/bscript,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py,numpy/lib/nanfunctions.py,numpy/polynomial/polytemplate.py,pavement.py,setup.py,tools/test-installed-numpy.py,tox.ini
594b0de1f09fde18c9c786994d7146a99f35e7d0,"Merge pull request #4697 from charris/update-1.9.0-notes

DOC: Update 1.9.0-notes to mention pairwise summation.",doc/release/1.9.0-notes.rst
d244ec7c00fb4658f7c9d66eb027ee84c7a6f05c,"Merge pull request #4847 from juliantaylor/writeable2

better writeable flag fix",numpy/core/src/multiarray/mapping.c
4352957bedfd360e8501cf47ac7fee7944d43a47,"MAINT: fix a compiler warning
",numpy/core/src/multiarray/mapping.c
0d744c4ca3dd96dfe3c97df0c93ab1924d365335,"MAINT: better fix for subclass writeable flag preservation
",numpy/core/src/multiarray/mapping.c
1c71d46ea8e7d7d31c6085e28a424973343d3028,"Merge pull request #4351 from njsmith/matmul-pep

A new PEP for infix matrix multiplication",doc/neps/return-of-revenge-of-matmul-pep.rst
35626e7faca6581aba31b283539bcc1fbebfa14e,"Merge pull request #4844 from charris/spellcheck-some-files

MAINT: Spellcheck some files.",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_regression.py
ca397d858be5edaa847115c57a01ef921485e039,"Merge pull request #4839 from juliantaylor/buffer-overflow

BUG: fix buffer overflow in data array of ldexp and frexp",numpy/core/src/umath/umathmodule.c
d4a4e99b6972adc61f1b4579e2b88818e14eae05,"MAINT: Spellcheck some files.

Fix spelling and grammar in

numpy/core/src/multiarray/mapping.c
numpy/core/tests/test_indexing.py
numpy/core/tests/test_regression.py
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_regression.py
94417e42ee604b22e91e8af627270d4a106d09ee,"Merge pull request #4843 from juliantaylor/subclass-writeable

BUG: retain writeable flag when indexing subclasses",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
77d62bb551c1bfb4d475fa932b718660b6deadbd,"BUG: retain writeable flag when indexing subclasses
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
8dba040fcc26c21c982d162b03948a0b21b65535,"Merge pull request #4804 from seberg/fancy-ass-1d

WIP: Fix matplotlib, etc. errors",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_regression.py
8457aab2ad29745dc8984a467a79c7673b9f636a,"BUG: fix check_gcc_function_attribute when attribute is actually supported.
",numpy/distutils/command/autodist.py
6b030998719b22d554181b8f94e85605529305cb,"ENH: don't use check_func anymore for check_compile_without_warning.
",numpy/core/setup.py
2b1179f65717c8c1b4c54517573c43f4b15cc34b,"FEAT: add check to ensure compilation without warning for a piece of code.
",numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
4769fe79bb5c2d4649fa2845009a0ceae94524c2,"FEAT: add check_gcc_function_attribute check.
",numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
66c792b0e2c3ba68e844e92770f312074ed9bc4a,"FEAT: add a try_output_compile in numpy.distutils.
",numpy/distutils/ccompiler.py,numpy/distutils/command/config.py
81242f627582e04c000b73e52bc9b4067b0f478d,"Merge pull request #4841 from juliantaylor/alloc-hook-gc

BUG: disable garbage collector during memory allocation hook",tools/allocation_tracking/track_allocations.py
c9c53ea985565d7d78f23519b9c5db630ac76d3d,"BUG: disable garbage collector during memory allocation hook

When a cython object contains numpy arrays the pure python allocation
hook can trigger during cythons __dealloc__ method and trigger a second
deletion of the object currently being deleted.
To minimize the probabily that that happens disable the garbage
collector during the hook.
As this involves python calls it is still possible that a double delete
occurs but chances are lowered, a proper solution would be C only hook
like python 3.4 tracemalloc module.

Closes gh-4834
",tools/allocation_tracking/track_allocations.py
9c4d48c3c27584e8a555b5e55d1634089db7a01a,"BUG: Add missing error incref in 1d indexing fallback
",numpy/core/src/multiarray/mapping.c
ed88fa9615c43da364a641c741badd855729dd3c,"BUG: boolean assignment; allow wrong number of elements

Uses old code to be more broad then previous commit
",numpy/core/src/multiarray/mapping.c
743448139a4bca50209854dd8a6ffac97feafd30,"DEP: Allow high dim boolean assignment, but deprecate it
",numpy/core/src/multiarray/mapping.c
4b8c9fd2f6d0df786b31d8e235ccc6c087e9a98c,"BUG: fix buffer overflow in data array of ldexp and frexp

the number types does not match the size of the blank array anymore, use
a larger array and add asserts to ensure the size matches.
",numpy/core/src/umath/umathmodule.c
7a2b14ae0adb762a3eb8991595b14f74f004f435,"Merge pull request #4837 from juliantaylor/select-bug

BUG: wrong selection for orders falling into equal ranges",numpy/core/src/npysort/selection.c.src,numpy/core/tests/test_multiarray.py
d6c7a16af4de5fed3aba4dd0370d797afad1b8b1,"BUG: wrong selection for orders falling into equal ranges

when orders are selected where the kth element falls into an equal range
the the last stored pivot was not the kth element, this leads to losing
the ordering of smaller orders as following selection steps can start at
index 0 again instead of the at the offset of the last selection.
Closes gh-4836
",numpy/core/src/npysort/selection.c.src,numpy/core/tests/test_multiarray.py
e8d13740980189a255c3ca31ee33b4e390c2ed75,"Merge pull request #4812 from juliantaylor/align-bloat

Align bloat",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/npy_config.h,numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
1d96a95208ed5b656a61f00781eeb984e2955a61,"TST: disable tests that fail due to bad alignment on sparc

(debian) sparc system malloc does not provide the alignment required by 16 byte
long double types this means the inout intent cannot be satisfied and several
tests fail as the alignment flag can be randomly true or fals when numpy gains
an aligned allocator the tests could be enabled again.
",numpy/core/tests/test_numeric.py,numpy/f2py/tests/test_array_from_pyobj.py
9bdd5d45e3734874233544cd47d8cf291fcbc529,"BUG: fix transpose not updating alignment flag

transposing structured arrays can lose alignment
",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_numeric.py
83524f678cfbd439001b647a19880913efcf1837,"BUG: fix arrays wrapping foreign data losing their alignment flag

e.g. ufunc_at wraps input arrays which without this fix causes the
iterator to choose much slower unaligned code paths.
Also pointers from malloc can be not aligned for long double types, e.g.
on debian sparc.
",numpy/core/src/multiarray/ctors.c
fc5d7cfbac9370c92a42450d1921aebe9c9405f5,"BUG: limit type alignment to the largest alignment needed by numpy

clongdouble type required alignment of 32 bytes which is never provided
by numpys allocation scheme so they always took unaligned paths.
As complex types are structs of two smaller types only half the
alignment is actually required for operations on them.
Copying complex types on the other hand might require a larger alignment
as copies can be done on the whole structure so one can not just remove
the doubling of the alignment.

As a compromise limit the maximum alignment to 16 bytes which is double
what the current numpy copy loops require and does not penalize amd64
with unnecessary unaligned code paths in most cases.
16 bytes might be required on sparc to load long doubles.
Complex doubles on i386 will still unnecessarly take unaligned code
paths as the system will not provide 16 byte alignment.
Closes gh-3768
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/private/npy_config.h
b25cdd68ee38de1be374b396b3b72460c17cad79,"Merge pull request #4800 from ogrisel/fix-ufunc-pickling

FIX pickling ufuncs defined in nested modules",numpy/core/__init__.py,numpy/core/tests/test_ufunc.py
0136d65c84bd21c2cb492e58b71a091ec1e875e6,"BUG: pickling ufuncs defined in nested modules
",numpy/core/__init__.py,numpy/core/tests/test_ufunc.py
c62b14a85d476b3cc5c3d6043632d8805be2ae8e,"Merge pull request #4801 from larsmans/c-fixes

MAINT: const correctness and minor fixes to C code",doc/source/reference/c-api.types-and-structures.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
2762f54c3bba96a8d629f9c38a087af006607359,"Merge pull request #4831 from charris/simplify-with-errstate

MAINT: Simplify some uses of errstate context manager.",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
4e3a24bb57909d9fb678c1a16e3baf414202f229,"Merge pull request #4828 from ogrisel/fix-isfileobj-py3

FIX isfileobj accepts write-mode files under PY3",numpy/compat/py3k.py,numpy/compat/tests/test_compat.py,numpy/lib/tests/test_io.py,numpy/testing/utils.py
49c30fd5b8c0807820d01363db43bdbbc49053ec,"Merge pull request #4832 from abalkin/nomask

MAINT: Use an unqualified nomask variable in ma.core.",numpy/ma/core.py
e2254e41e373eabda9e261b88f8a99cea221d606,"MAINT: Use an unqualified nomask variable in ma.core.
",numpy/ma/core.py
6efd8493f8b491557a34dbbc176565b759f89b52,"FIX isfileobj accepts write-mode files under PY3
",numpy/compat/py3k.py,numpy/compat/tests/test_compat.py
290f192465dc68b9e037ec4c1c2dc6fb522f2fdc,"Move tempdir context manager to numpy.testing.utils
",numpy/lib/tests/test_io.py,numpy/testing/utils.py
cdfbc69b84a168b4ab8654e2bc818d7b4e444037,"DOC: Update 1.9.0-notes to mention pairwise summation.
",doc/release/1.9.0-notes.rst
7298d36d23ce179d7fc125a2c907316f103a4855,"MAINT: Simplify some uses of errstate context manager.

This changes, e.g.,

    with np.errstate():
        np.seterr(divide='ignore')
        ...

to

    with np.errstate(divide='ignore'):
        ...
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
efb203ce22f5c4c43bbe641275101289f5a0cdbf,"Merge pull request #4822 from juliantaylor/masked-improv

small masked array performance enhancement",numpy/ma/core.py
ad48eaa76403798c298c2761e53e1e43008ab1b1,"Merge pull request #4823 from juliantaylor/hist-rounding

BUG: handle rounding issue with histogram edges on float32 data",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
2aafae5158a9b32a49abe59910087a64d1849f00,"Merge pull request #4826 from juliantaylor/umath-static-fixes

umath static analysis fixes",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/umathmodule.c
2421f2d924ce911992bee1a8455543f9bc3e8d4d,"BLD: fix random API hash due to memory references of annotations

also update hash for the new include guard of the api header.
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py
92fbc04cee0c1024bc76b95a3a33e5a54c9a1fb9,"MAINT: enable external api use when running cpychecker

allows using the annotations in umath module
",numpy/core/code_generators/generate_numpy_api.py
578ce4662e74e5e8fe1fb6c87006cfbf7c8c8517,"BUG: fix some memory leaks found by cpychecker

only the one in normalize___call___args can be can be a real issue.
",numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/umathmodule.c
7f0f6c85f44e4a25eae823c29537ebec294a104e,"Merge pull request #4825 from ilam/poly

Polynomial module in Polynomial package Doc example",numpy/polynomial/polynomial.py
59892ad88a454bfc0a3c2f40a81bc322c2e0cc9c,"DOC Polynomial example import statement corrected. #3615
",numpy/polynomial/polynomial.py
c61314737b6701ad2a28e45553b8cbf54826d8be,"DOC Polynomial example import statement updated. #3615
",numpy/polynomial/polynomial.py
305b26bfc96cdd7c3f5be4f5bba011186e061910,"MAINT: replace two step errstate change with a direct change
",numpy/ma/core.py
ad902ff2e3b2be2bc33b65e6eaef857a2d3b5e6b,"ENH: use copy to move the masked values into the result

saves a relatively expensive bool -> x cast
",numpy/ma/core.py
e20d4b91d00cea1cf495d4cb85ee9bc2b7930a3d,"BUG: handle rounding issue with histogram edges on float32 data

Following inequality causes wrong counting at the edges and can be avoided by
making the edge array of the same type as the input data.

In [1]: np.around(np.float64(6010.36962890625), 5)
Out[1]: 6010.3696300000001
In [2]: np.around(np.float32(6010.36962890625), 5)
Out[2]: 6010.3701

Closes gh-4799
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
fe3410f7380c06adc81fb8e097c96dc51a42e0f3,"Merge pull request #4816 from juliantaylor/star-import

MAINT: move star imports to end of numeric.py",numpy/core/numeric.py
621c0a6d49e369c5813a2d89d73a6e81093d9f54,"MAINT: move star imports to end of numeric.py

allows static analysis (e.g. pyflakes) to detect undefined names
",numpy/core/numeric.py
133d4f464ed3cb8639afc075c8c097a2c6594b6d,"Merge pull request #4809 from adamreeve/swig_typemap_fix

Fix SWIG typemaps for Fortran ordered array input",tools/swig/numpy.i
ef4806acd0f76cae16c5ce47d0d591173e056e20,"Merge pull request #4803 from juliantaylor/doc-updates

Doc updates",doc/source/reference/arrays.indexing.rst,doc/source/reference/c-api.array.rst,doc/source/reference/routines.array-creation.rst,doc/sphinxext,numpy/lib/npyio.py,numpy/random/mtrand/mtrand.pyx
71fc8028beec5350b30f2f7638515ae1a8f88a7d,"Fix typemap for Fortran ordered array input

The typemaps with size parameters after the array pointer were correct,
but the typemaps with size parameters before the array pointer created
arrays with C ordering.
",tools/swig/numpy.i
480432b8988a9be8f8a43f4b3f0217c3eddd6c9f,"WIP: Fix matplotlib, etc. errors
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_regression.py
d70431d696f4ed3e81bd7c16e6bd00a686ba34f5,"DOC: add full/full_like

closes gh-4805
[ci skip]
",doc/source/reference/routines.array-creation.rst
75bb95f5c9b494f1e1b7a5d1bcad424dea49f4bc,"DOC: update numpydoc to tag v0.5
",doc/sphinxext
5a52eddbc89820c1abd052612eeb57bf6fdb5901,"DOC: fix a couple mistakes in the indexing documentation

closes gh-618
",doc/source/reference/arrays.indexing.rst
6e2a69bb7a42b0b518f5a54cb949eb0f21c43331,"DOC: remove wrong mention of .gz in np.load

closes gh-312
",numpy/lib/npyio.py
118dc9e46f4534cfedefa1c253bb4ecd868061d1,"DOC: fix signature of PyArray_NewShape in C-API docs

closes gh-4579
",doc/source/reference/c-api.array.rst
6ec8a1d43737371b5a0899fa33067aff67422640,"DOC: document broadcastable lam parameter of poisson

closes gh-4526
",numpy/random/mtrand/mtrand.pyx
59b560645344d101ddd9e0dfece942b3c699003e,"MAINT: const correctness and minor fixes to C code
",doc/source/reference/c-api.types-and-structures.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
89d9add9ff1f46ee0e0c7c4e106500d13c833bde,"Merge pull request #4796 from juliantaylor/msvc-fix

BLD: workaround msvc being stupid",numpy/core/src/umath/simd.inc.src
fb35105da6b443da6e07c7bf404ee67cee67aa20,"BLD: workaround msvc being stupid

Apparently it tries to respect calling conventions for static inline
functions so the 4th variable can't be passed over the stack as it needs
16 byte alignment.
Work around this by passing the variable as a pointer.
Closes gh-4795
",numpy/core/src/umath/simd.inc.src
10098daf387b9468a0aee19c3eb3e0cdd21f874c,"Merge pull request #4454 from jurnix/namedargs

ENH: apply_along_axis accepts named arguments",numpy/lib/shape_base.py,numpy/ma/tests/test_extras.py
c346477b89a7ce559a9cf40551d9725be5c96f09,"Merge pull request #4793 from juliantaylor/sha256-sums

BLD: compute sha256 sums of build artifacts",pavement.py
621b14e2e91bd8a3dd2746a6835040ca47109b65,"Merge pull request #4792 from Juanlu001/piecewise-fix

Piecewise fix for 0d",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f451a9c129511bce162efb6acbae8935051c312b,"BLD: compute sha256 sums of build artifacts

Using a secure hash allows verifying ther binaries from a gpg signed
README.txt.
MD5 just kept for legacy users who may not be able to obtain a sha256
utility.
",pavement.py
292b9ff538ea4950c7380c76cf65d1a5b108b75c,"BUG: Fixed piecewise function for 0d input

When `x` has more than one element the condlist `[True, False]`
is being made equivalent to `[[True, False]]`, which is correct.
However, when `x` is zero dimensional the expected condlist is
`[[True], [False]]`: this commit addresses the issue. Besides,
the documentation stated that there could be undefined values
but actually these are 0 by default: using `nan` would be desirable,
but for the moment the docs were corrected. Closes #331.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
db710cefeecf51d6253e421712726c1506a6f65b,"Merge pull request #4789 from juliantaylor/release-notes-19b1

DOC: add some highlights to release notes",doc/release/1.9.0-notes.rst,doc/source/reference/swig.interface-file.rst
5f31255dbeb92f946dfdc275a012cc418dfa28b4,"DOC: add some highlights to release notes and reorganize

also minor general documentation fixes
[ci skip]
",doc/release/1.9.0-notes.rst,doc/source/reference/swig.interface-file.rst
49b06284149a57922ffe36cf441ad19df922fe22,"Merge pull request #4786 from juliantaylor/cross-style

MAINT: improve readablility of cross and improve test coverage",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
3087de303e70d405e5a201d72e62fd747c96e4a6,"Merge pull request #4790 from juliantaylor/log2-windows

BUG: improve log2 windows compiler fallback of log2",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
079b741cac5c8dee792a9fbeb2c856ba123167b1,"Merge pull request #4788 from jaimefrio/unique_nonarray

BUG: Correct behavior for lists of tuples in unique, closes #4785",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
c73405da8ffef0877c64ff3911d67b071691b0cd,"BUG: improve log2 windows compiler fallback of log2

Fallback (similar to python3.4 math.log2) provides int(log(2**i)) == i
in default rounding mode.
Non-default rounding modes not tested but if it does not work we are at
least not worse than python.
Closes gh-4787
",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
22df0769eeb180326a657d850faa98e27b70eea5,"MAINT: improve readablility of cross and improve test coverage
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
44529602509f7af4d103ce968248eafbd51af5be,"BUG: Correct behavior for lists of tuples in unique, closes #4785

np.unique produces wrong results when passed a list of tuples and
no keyword arguments, as it fails to recognize it as a multidim
array, but handles it as a 1D array of objects. The only way around
this seems to be to completely eliminate the fast path for non-array
inputs using `set`.
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
7f8aae032a218ed609e23068d5aec128b0d6fe8e,"PEP8 nitpicks
",numpy/lib/shape_base.py
4c854c2633894387988b43306ff72333cb00613a,"Merge pull request #4784 from jaimefrio/iter-dealloc-gufunc

BUG: Avoid double iterator deallocation in `ufunc_object.c`",numpy/core/src/umath/ufunc_object.c
a95c8e4ac10a5fa6748a0fb064eaad1d1417e327,"BUG: Avoid double iterator deallocation in `ufunc_object.c`

In `PyUFunc_GeneralizedFunction`, whenever a call to
`NpyIter_GetIterNext` fails, `NpyIter_Deallocate` is called twice, one
right after the error check, the second in the `goto fail`. Removed
the first one.
",numpy/core/src/umath/ufunc_object.c
805e11a4345d42b0cddc9ea0f59ae5f23eb99f4c,"Merge pull request #4783 from juliantaylor/flat-assign-improve

ENH: use copyswap instead of memmove for flat assignment",numpy/core/src/multiarray/getset.c
b3ecb0957997684cd83c141649b8a4ea98b42654,"Merge pull request #4782 from juliantaylor/where-string-fix

BUG: fix where not filling string types properly",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
b9b9add7276a31447aba3caf0eeb68ab2f20fa1b,"ENH: use copyswap instead of memmove for flat assignment

improves d.flat = x performance by about 35% for basic types as the
copyswap functions have known elementsizes and these are implemented
optimally by the compiler while for the generic call the compiler needs
to call out to libc.
",numpy/core/src/multiarray/getset.c
e2e49c73acaf5bbfd7d6a7d412218991d9899cec,"BUG: fix where not filling string types properly

the copyswap part of where used the input arrays descriptions to copy
into the destination so if they had a smaller size the destination was
not properly padded with zeros.
Closes gh-4778
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
7860d2ed526d6d1f74ca84826782bf84d0db9b2e,"Merge pull request #4781 from juliantaylor/cpucaps-build

BLD: add a simple python file to build cpucaps.dll",tools/win32build/README.txt,tools/win32build/build-cpucaps.py
c345ee6e67aed2b42c7bed08827e7b4feca6af89,"Merge pull request #4777 from juliantaylor/byteswap-align

BUG: check alignment of strides for byteswap",numpy/core/src/multiarray/ctors.c
3cca518407b638d4e901241c8dc75e480a5652a2,"BLD: add a simple python file to build cpucaps.dll

using scons seems to fail with wine 1.6, but one only needs to run three
commands so its simpler to just put these into a script instead of
trying to debug scons.
",tools/win32build/README.txt,tools/win32build/build-cpucaps.py
9749fa92683ceeeac918b369da2824f756e931e8,"BUG: check alignment of strides for byteswap

closes gh-4774
",numpy/core/src/multiarray/ctors.c
d856a7f8a1fdca371fe090d2eaf731d69f26e1dd,"Merge pull request #4773 from juliantaylor/win-testfix

BUG: fix test deleting temporary file before using it on windows",numpy/lib/tests/test_io.py
21ea30b00cf79ae3107a54b1592efe1571d5a7d7,"TST: add a format 2.0 roundtrip test
",numpy/lib/tests/test_io.py
f7f838b0ac042eacba9de43005d40475dd97ce97,"BUG: fix test deleting temporary file before using it on windows

The version check was not valid for python3, though the whole logic can
be removed with a finally clause.
This requires that the savez tests need to cleanup the NpyzFile results
which still hold an open file descriptor.
",numpy/lib/tests/test_io.py
3f5e45737361e97a87c7652eac5e095729360994,"Merge pull request #4772 from juliantaylor/scope-red

MAINT: reduce scope of some variables in indexing code",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
e75e930c93ec55bf338c196f699d10fe3ed8aab1,"MAINT: reduce scope of some variables in indexing code

also improves code generation with gcc-4.8 leading up to a 10%
performance increase on some cpus by removing a stack spill.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
14cc7172d78fb7cabbddcf7805c634ec0555abca,"Merge pull request #4760 from juliantaylor/masked-median

ENH: rewrite ma.median to improve poor performance for multiple dimensions",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
99ff7a7cad36fcb5ba239bccd87a4f01ad25a1c1,"ENH: use masked median for small multidimensional nanmedians
",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
0ae36289aa5104fce4e40c63ba46e19365f33b5d,"ENH: rewrite ma.median to improve poor performance for multiple dimensions

many masked median along a small dimension is extremely slow due to the
usage of apply_along_axis which iterates fully in python. The unmasked
median is about 1000x faster.

Work around this issue by using indexing to select the median element
instead of apply_along_axis.

Further improvements are possible, e.g. using the current np.nanmedian
approach for masked medians along large dimensions so partition is used
instead of sort or to extend partition to allow broadcasting over
multiple elements.

Closes gh-4683.
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
39fbc1b1e7aee9220c62d8aeaa47eb885a4fde96,"ENH: use sparse meshgrid instead of indices().tolist()

tolist() converts numpy integers to python integers which are converted
back to numpy integers by the indexing.
meshgrid(indexing='ij') returns the indices wanted here as the right type.
triples performance of sorting a size=(200, 200, 50) array along axis 2
and reduces memory usage by almost 40%.
",numpy/ma/core.py
e6f43660b156438b0ad4f10b4c8503ba478c0cdd,"Merge pull request #4765 from juliantaylor/npyformat-2.0

ENH: add storage format 2.0 with 4 byte header size",doc/release/1.9.0-notes.rst,numpy/lib/format.py,numpy/lib/tests/test_format.py
5e7e24e3959e5b44218751f016b5b912e2b9c7fa,"Merge pull request #4770 from charris/meshgrid-doc-maintenance

DOC: Fix indentation and add missing blank lines for meshgrid doc.",numpy/lib/function_base.py
38dda9dba36401d3b5005d3442e70b033cf9a26d,"DOC: Fix indentation and add missing blank lines for meshgrid doc.
",numpy/lib/function_base.py
dc5a148854476ece243205f05e09fd1218692205,"Merge pull request #4768 from depristo/master

ENH: Optimization for pickling random states

the constructor intended for pickling initializes its state via reading /dev/urandom which can be expensive on virtual machines. as the pickle constructor just needs to create any state which will later be initialized these urandom reads are unnecessary.",numpy/random/__init__.py
fc50d27b4e125052d44b0643bc344e4c5062316a,"ENH: add storage format 2.0 with 4 byte header length size

The new format only increases the header length field to 4 bytes.
allows storing structured arrays with a large number of named columns.
The dtype serialization for these can exceed the 2 byte header length
field required by the 1.0 format.
The generic functions automatically use the 2.0 format if the to be
stored data requires it. To avoid unintentional incompatibilies a
UserWarning is emitted when this happens.
If the format is not required the more compatible 1.0 format is used.

Closes gh-4690
",doc/release/1.9.0-notes.rst,numpy/lib/format.py,numpy/lib/tests/test_format.py
e9f27b9ad506a8e37565abf72c0e9f23254595de,"Merge pull request #4757 from charris/update-1.9.0-release-notes

DOC: Note nanpercentile in 1.9.0 release notes.",doc/release/1.9.0-notes.rst
e2645bd1de7bb9f41217ea84965c33d2d999e86f,"Merge pull request #4769 from juliantaylor/mesh-doc

DOC: add versionadded tags to meshgrid arguments",numpy/lib/function_base.py
b8222cbedb5428d2b9eac73aac90ef2409799384,"DOC: add versionadded tags to meshgrid arguments

[ci skip]
",numpy/lib/function_base.py
41dc794935e6b01ab0427c054e930a23e4429e4a,"Optimization for pickling random states

-- Addresses https://github.com/numpy/numpy/issues/4763
",numpy/random/__init__.py
b1c69df01b673cc086065112da6780d8548a0dfa,"Merge pull request #4764 from KillaW0lf04/master

Fix minor error in ""squeeze"" docstring",numpy/core/fromnumeric.py
016b21186b87c68a0aa09cca939187f6f29d1900,"Fix minor error in ""squeeze"" docstring
",numpy/core/fromnumeric.py
d6c94322d759d4e7d0d8c4a1bc3f6ea95e155d57,"Merge pull request #4762 from juliantaylor/hist-test

TST: fix random failing histogram test",numpy/lib/tests/test_twodim_base.py
40bebbaca156c6eb18ded4d02782bf7e177376f4,"TST: fix random failing histogram test

histogramdd rounds by decimal=6 so the random numbers may not be
outliers if they are below 1. + 1e6
",numpy/lib/tests/test_twodim_base.py
a3fda96c7f25699584ac2cfa3617372db808e67f,"Merge pull request #4761 from dfreese/maint/keepdimsincov

MAINT: Removed code emulating keepdims in cov",numpy/lib/function_base.py
d41fc7a2dc931aa0c399b7fcaa663e48e54e4fcf,MAINT: Removed code emulating keepdims in cov,numpy/lib/function_base.py
db10b93f5e5e12a281a63c98af3f845ac18528bf,"Merge pull request #4759 from juliantaylor/warning-fix

MAINT: fix a few harmless compiler warnings",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c
e5eb95a2e2785016cfe9a677864d5904544ad474,"DOC: Note nanpercentile in 1.9.0 release notes.
",doc/release/1.9.0-notes.rst
4215b2c8cb94329fbc050900eb0d31b16d3c243a,"MAINT: fix a few harmless compiler warnings
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c
11cdc3d7e3c2b0226d98578ee6e4b7877459c498,"Merge pull request #4758 from mforbes/issue_4755

BUG: Don't let meshgrid ignore unknown kwargs. Fixes #4755.",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
83c6d769e00e5ee424221244d9d2be474c1fe532,"BUG: Don't let meshgrid ignore unknown kwargs. Fixes #4755.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
b384fbb84a2d3150a4198b2c60b6e19e400e0a2c,"Merge pull request #4756 from charris/gh-4688

Extend gh-4688 style improvements to whatisnumpy.rst.",doc/source/user/whatisnumpy.rst
9cd29989bc673e210b644b9e97356c797f9d84c2,"MAINT: Grammar and style corrections to whatisnumpy.rst.
",doc/source/user/whatisnumpy.rst
631ae81db93e5c6f15198257a172a2f9139ca812,"DOC: Fix typos, punctuation, and grammar.
",doc/source/user/whatisnumpy.rst
d1a2f7d92ff00d4e01e3a99124c76b99f561bfc9,"Merge pull request #4751 from juliantaylor/vonmises-fix

BUG: avoid infinite loop for small kappa in vonmises",numpy/random/mtrand/distributions.c,numpy/random/tests/test_random.py
3d14321fcec97501a20d3e9ade92abb7c3055c0e,"Merge pull request #4692 from juliantaylor/fft-interrupt

BUG: fix crash when sending interrupt signal to fft functions",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/fft/fftpack_litemodule.c
3d88c07caa20699fd60f7f858b8d62345db5714b,"Merge pull request #4745 from dfroger/swig_missing_fragment

BUG: Fix missing fragment in ARGOUTVIEWM typemaps.",tools/swig/numpy.i
075872dc3d35c0c3c904b046621e7876c37b179a,"Merge pull request #4076 from seberg/advanced-indexing-doc

DOC: Rework the advanced indexing documentation.",doc/source/reference/arrays.indexing.rst
f731d17e57fb36523ede1265b2f48c0d33c3254e,"DOC: Rework the advanced indexing documentation.

Mostly makes the advanced indexing doc much more example based,
and prominently mentions the np.ix_ function.
Some subtleties (some of which are new) are also mentioned.
",doc/source/reference/arrays.indexing.rst
4d61a3235989ff64a1715e3a8273bff5cd7aeb60,"Merge pull request #4746 from juliantaylor/void-compare-opt

ENH: improve VOID_compare performance",numpy/core/src/multiarray/arraytypes.c.src
c243ca7b2053f486c9a5d924677537d67848c1c4,"Merge pull request #4749 from seberg/0d-nanperc-out

BUG: nanpercentile 0-d with output given.",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
69e26e54edd3c83fae61e880a102d1b979e2d67d,"BUG: avoid infinite loop for small kappa in vonmises

rho results in 0. for kappa < 1.4e-8 whch leads to nans appearing and an
infinite loop.
the second order taylor expansion is more precise up to at least 1e-5.
Closes gh-4720
",numpy/random/mtrand/distributions.c,numpy/random/tests/test_random.py
29f9b6e0600cb15f7a846bbc83a46dbac45bd1e9,"BUG: nanpercentile/nanmedian 0-d with output given.

Also some PEP-8 fixes and test improvements
",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
3e09d375f1b3f13c4e2d20c334d6095e467f6524,"Merge pull request #4750 from jaimefrio/tri-sty

STY: Use `.astype`'s `copy` kwarg in `np.tri`",numpy/lib/twodim_base.py
2f7cb25c7ac9691695ba7d8bf085e7c5c8e201de,"STY: Use `.astype`'s `copy` kwarg in `np.tri`

Replace an explicit type check with setting `copy=False` in call to `astype`.
",numpy/lib/twodim_base.py
c24cc4e36a52d7892817d4f94b8e8ccaa38852b6,"Merge pull request #4748 from argriffing/more-linalg-regression-testing

TST: add more regression testing related to https://github.com/numpy/numpy/issues/4733",numpy/linalg/tests/test_regression.py
7005eeff130d78d670d8bf767b8669f4850d891d,"TST: add more regression testing related to https://github.com/numpy/numpy/issues/4733
",numpy/linalg/tests/test_regression.py
f80ccb0ed74d80a6669d0cd8711ba216bb1b5506,"DOC: clarify savetxt delimiter and newline docstring

newline and delimiter can be strings not only single characters",numpy/lib/npyio.py
5fe26e6b0369cec520e6f81082059078ec28f22d,"Merge pull request #4574 from ggventurini/master

DOC: Docstring fix for `savetxt` (minor change)",numpy/lib/npyio.py
25518e5833b1590f849e189941173563ef2548e1,"ENH: improve VOID_compare performance

use small memory cache for the temporary data allocation in the compare
loop and use npy_is_aligned instead of the very expensive signed
division.

Improves unaligned compares which occur in structured arrays with
strings:

d = np.ones((2,10000), dtype=np.dtype([('f0', 'S5'), ('f1', '<i4')]))
%timeit np.argsort(d)
100 loops, best of 3: 8.6 ms per loop

vs before:
100 loops, best of 3: 23.7 ms per loop
",numpy/core/src/multiarray/arraytypes.c.src
e4dc0c9c0a094844e2db60685a59eebe9b6a2bbb,"Merge pull request #4721 from juliantaylor/void-index

ENH: avoid expensive PyArg_ParseTuple in void operations",numpy/core/src/multiarray/arraytypes.c.src
d367f63b58deb2f0e9591fe9e8a7498c5c310345,"Merge pull request #4744 from rgommers/openrisc

BLD: add support for OpenRISC architecture.  Closes gh-4743.",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
39715d58001d8cad0ac44cdbbb4019222635bff9,"BUG: Fix missing fragment in ARGOUTVIEWM typemaps.

The argout typemaps of all the ARGOUTVIEWM typemap suites make use of the
free_cap function, defined in the NumPy_Utilities fragment, which was not
listed in the fragment argument of the typemaps.

As a result, the free_cap function is not included in the source generated
code by SWIG, and the code do not compile (unless another typemap including
the missing fragment has been used).
",tools/swig/numpy.i
8c72443be95e01ee991043ba5dbcdda55716dc8e,"BLD: add support for OpenRISC architecture.  Closes gh-4743.

Thanks to @manuelafm for the patch.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
0500cbed411113dbce8de23167e16ecc4d921289,"Merge pull request #4731 from juliantaylor/get-libs-default

BUG: don't set a default for libraries configuration key",numpy/distutils/system_info.py
d438067813867bc34546b6f1f1683d5981994812,"ENH: avoid expensive PyArg_ParseTuple in void operations

Replace simple ""Oi|O"" unpack with faster specialized unpacking

Improves e.g.:

    nrows, ncols = 365, 10000
    items = np.rec.fromarrays(randn(2,265, 10000), names=['widgets','gadgets'])
    row_idx, colidx = randint(0, nrows, ncols), np.arange(ncols)
    %timeit filtered_items = items[row_idx, col_idx]
    In [7]: %timeit filtered_items = items[row_idx, col_idx]
    1000 loops, best of 3: 1.55 ms per loop

to

    In [7]: %timeit filtered_items = items[row_idx, col_idx]
    1000 loops, best of 3: 706 µs per loop
",numpy/core/src/multiarray/arraytypes.c.src
5bbccc5940dba709a0e90f1f433674cc625aa4ad,"Merge pull request #4734 from dfreese/feature/nanpercentile

ENH: added functionality nanpercentile to numpy",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
d2a56ee8e86a138770f7eb6215f3a06d4fe0cc47,"Merge pull request #4740 from jaimefrio/bool-ops

ENH: speed-up minimum, maximum and xor for bool dtype",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_umath.py
494abcf189e9b53e42b624752eb3eaaf46a0dfd3,"ENH: speed-up minimum, maximum and xor for bool dtype
Replaced the operations for the above ufuncs on bools, by simpler
single instructions.

On random inputs `np.minimum` and `np.maximum` run about 25% faster,
and `np.logical_xor` and `np.bitwise_xor` almost 3x faster.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_umath.py
4b42810fe45727dbd6ef0c70f8e766fee97db14e,"Merge pull request #4739 from FRidh/docs

Docs: fix numpy.fft.fft2 example",numpy/fft/fftpack.py
9430c7dda3b0ef7f2120011b59ff3d53d77077c6,"Docs: fix numpy.fft.fft2 example

Fixes issue #4736

The example showed a call to np.fft.fft instead of np.fft.fft2.
",numpy/fft/fftpack.py
c7f10f72667752fbaa603d9de1499f17ada6f734,"Merge pull request #4738 from rgommers/gufuncs-doc

DOC: tweak gufunc API documentation, remove broken link.  ",doc/source/reference/c-api.generalized-ufuncs.rst
a075dcbda8ba3107860f4de521d02afcee60bd31,"DOC: tweak gufunc API documentation, remove broken link.  Closes gh-4726.
",doc/source/reference/c-api.generalized-ufuncs.rst
8d492d7644ef3934e8828484e0860f329cf54a3b,"Merge pull request #4735 from argriffing/fix-svd

BUG: svd ufunc typo",numpy/linalg/tests/test_regression.py,numpy/linalg/umath_linalg.c.src
fea4421d9065b452fb16eeaabb07732e4aec3ccb,"BUG: svd ufunc typo
",numpy/linalg/tests/test_regression.py,numpy/linalg/umath_linalg.c.src
19aa50901e96a8428950da062d0d60c760232395,"ENH: added functionality nanpercentile to numpy
Implemented a nanpercentile and associated tests
as an extension of np.percentile to complement the
other nanfunctions.
",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
0d483a7d6f923d75123a002d5673907601051b83,"BUG: check if openblas embeds lapack

add openblas_lapack info which checks if it embedds lapack so
lapack_info will point to openblas
the normal openblas info does not check so it may or may not embed
lapack.
closes gh-4192
",numpy/distutils/system_info.py
7ec0a06c8523e9ccaeffba9c9497a4194e967aef,"BUG: don't set a default for libraries configuration key

the get_libs function assumes there is no default to return the default
it was asked to return in that case.
Closes gh-4607
",numpy/distutils/system_info.py
848cd10bcc4b46be599de9cd3bd46d6b8859152e,"MAINT: move variable attribute checks into a common variable

also rename GCC_ATTRIBUTES to FUNCTION_ATTRIBUTES
",numpy/core/setup.py,numpy/core/setup_common.py
2f6da63938e516bb653b95f1de7b59b33c05a2fc,"ENH: optimize STRING_compare by using memcmp
",numpy/core/src/multiarray/arraytypes.c.src
9dd46ee2ed9fc55942d9ec13532d817c3b36d322,"Merge pull request #4722 from mtkni/master

BUG: Fix seg fault converting empty string to object",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_dtype.py
9ca38a508cd9836d1b1bcf5c3dedd1fe8b6cb14c,"BUG: Fix seg fault converting empty string to object
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_dtype.py
3398b0e1351befee32de6f243a51e2b99900a3d4,"Merge pull request #4713 from charris/add-numpyversion

ENH: Add the scipy NumpyVersion class.",doc/release/1.9.0-notes.rst,numpy/lib/__init__.py,numpy/lib/_version.py,numpy/lib/tests/test__version.py
ee494114ee1f439b1183ef7030ade599f96be7e1,"Merge pull request #4719 from juliantaylor/fft-test

TST: reduce memory usage of fft test",numpy/fft/tests/test_fftpack.py
e8e40dc7982ea7ab8efa2a2212b5ae10db9fb995,"Merge pull request #4186 from juliantaylor/reduce-opt

Improve small reduction performance",numpy/core/_methods.py
edb67b65cfc2143381fbcfae6569772cf37c2e3d,"TST: reduce memory usage of fft test

tests should not use more than 500 MB of memory, this one uses more than
a GB. Also it didn't join its threads.
",numpy/fft/tests/test_fftpack.py
f0497eccf273ffa5eae8418d4ca699d85ab7b41e,"ENH: avoid keyword arguments for some ufunc.reduce wrappers

PyArg_ParseTupleAndKeywords is pretty slow for keywords as it needs to
create python strings first. Using positional arguments avoids this and
gains 15-20% performance for small reductions.
",numpy/core/_methods.py
003fcdad5bc6c062506853a8a0df89ea0ceb3916,"Merge pull request #4626 from cowlicks/ufunc-override-methods

Update ufunc override to work properly with ufunc methods.",numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py
9c5109c121c47c4b942cf522382349ac41243cc3,"Merge pull request #4716 from brettrmurphy/patch-1

Changing EPD to Canopy",doc/source/user/install.rst
d1af10e05dc39366b5a55f39dea93f4a988d0207,Changing EPD to Canopy,doc/source/user/install.rst
62e4561f20ff681d321765d1083d3fde8db9a9f2,"ENH: Add the scipy NumpyVersion class.

The class is in numpy/lib/_version.py and can be used to compare
numpy versions when the version goes to double digits.
",doc/release/1.9.0-notes.rst,numpy/lib/__init__.py,numpy/lib/_version.py,numpy/lib/tests/test__version.py
13b32e9d157a0ce62c0aa7d1447ad53fbb23d930,"Merge pull request #4676 from juliantaylor/rand-seed-lim

BUG: reject too large seeds to RandomState",doc/release/1.9.0-notes.rst,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxd,numpy/random/tests/test_random.py
6b1a1205eac6fe5d162f16155d500765e8bca53c,"BUG: reject too large seeds to RandomState

mtrand accepts seeds larger than 32 bit but silently truncates them back
to 32 bit. This can lead to accidentally getting the same random stream
for two different seeds, e.g. 1 and 1 + 2**40.
",doc/release/1.9.0-notes.rst,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxd,numpy/random/tests/test_random.py
677ff902eac3e4a1ad1d8c2c8488672a6907efea,"Merge pull request #4712 from juliantaylor/strtoll

BUG: Fix string to uint64 conversion on 32-bit platforms",numpy/core/setup_common.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
9590c04e996a2c5c958652bd4e403786e6f9cce2,"Merge pull request #4711 from pv/scalar-richcmp-fix

BUG: core: allow scalar type richcompare to call ndarray-subclass methods",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_regression.py
ceffd0443e548b728708e50a2e1ffc5591c0161b,"BUG: Fix string to int64 conversion on 32-bit platforms

closes gh-4575
",numpy/core/setup_common.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
da40eba435d2b39c7d251f91d446ed411d71d3f5,"BUG: core: allow scalar type richcompare to call ndarray-subclass methods

This makes the scalar richcmp behave exactly as
""array(self) <op> other"". The difference comes in when ""other"" is an ndarray
subclass, in which case this change allows the subclass to override the
comparison operations via usual Python binop dispatch rules.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_regression.py
afe32d77b3540f11ff564f851f1db5afd26857b3,"Merge pull request #4699 from charris/fix-ma.count-return-type-check

BUG, TST: Fix tests of ma.count return type.",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
d1987d11dfe5101d3c0b12fecaae05570f361d44,"Merge pull request #4708 from jaimefrio/sorter-bug

BUG: searchsorted fails if sorter is not of type np.intp fixes #4698",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
76760cffa9381697e2eb60a32f12d993628beec4,"BUG: searchsorted fails if sorter is not of type np.intp fixes #4698

The array being passed to the search function was not the one converted
to NPY_INTP, so it only worked if it was of that type to begin with.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
06054c06cf3bc462ebdfecd5c6a5c0f39ebe85a9,"Merge pull request #4705 from barentsen/patch-1

Fix for unclear resize() error message",numpy/core/src/multiarray/shape.c
1ef79bc779bec3630631352264823d7ca0e44c0b,Fix for unclear array.resize() error message,numpy/core/src/multiarray/shape.c
8713ad176166c7d7a4697baad3b77edf237b6a6e,"Merge pull request #4700 from charris/ignore-invalid-value-in-test

BUG: Fix invalid value raised as error when testing on Windows.",numpy/core/tests/test_deprecations.py
0c63e8c7b05a18057cab92da652dda5644910eb3,"BUG: Fix invalid value raised as error when testing on Windows.

The invalid value RuntimeWarning is raised as an error in numpy
testing, and in this case the Window build was raising the warning
for comparisons of NaNs.

Fixes the first error in #4698.
",numpy/core/tests/test_deprecations.py
cd0d0579614481076fef473f1fc0c4b13f991b28,"Merge pull request #4662 from matthew-brett/cythonize-for-wheels

BUG: cythonize sources for wheel build",.travis.yml,setup.py,tools/travis-test.sh
9592bfa7d29c238bc891be255a4a666b407a9e2f,"BUG, TST: Fix tests of ma.count return type.

The masked array count method was fixed to use np.intp when doing sums.
The return type is always np.intp except for count(arr, axis=None) when
arr has no mask, in which case the return type is that of ndarray.size.

The test errors were noted in #4698.
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
c8ac77c427a880eec455a05b92de9a2260d5f9d9,"TST: Add tests for ufunc.method overrides.
",numpy/core/tests/test_umath.py
d261913c802bcdc7e6be94e1b3711ecd9c8fef89,"BUG: Fix and add ufunc override capabilities to ufunc methods.
",numpy/core/src/umath/ufunc_object.c
6fdee1c03b85a9f34e42e79eea68319448352f76,"BUG: Properly parse ufunc methods with PyUFunc_CheckOverride.
",numpy/core/src/private/ufunc_override.h
f671012497dc32988590fe7cfec7a8e5a95c4d68,"Merge pull request #4687 from wa03/randBinomFix

BUG: mtrand binomial algorithm is different from original paper algorithm",doc/release/1.9.0-notes.rst,numpy/random/mtrand/distributions.c
73be3cef389451a66e947af4ed2f9df427c5cc6e,"Updated release notes to warn users about RNG state changes
",doc/release/1.9.0-notes.rst
2d7a9eedc6570017a2e305c9ec67bab982b12810,"BUG: fix crash when sending interrupt signal to fft functions

the SIGINT handling code must be in the GIL released section so the
longjmp does not skip the retaking.
This implies that the signal handlers must use thread local storage to
avoid a crash when sending interrupt to threaded fft functions.
Distribution of SIGINT to each threads must be handled by the
application as only the master thread receives it
Closes gh-4634
",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/fft/fftpack_litemodule.c
9e9ae5fa99d1ce36deb42633d1910763e0739c8e,"Merge pull request #4691 from juliantaylor/travis-fix

TST: update package list for chroot build",tools/travis-test.sh
fbf668e1a9d28d20797d8de68fcc48e9174780ba,"TST: update package list for chroot build

travis boxes are again badly out of date
",tools/travis-test.sh
a2c8da022df3e6e5aca7d186c80a4998abb31942,"BUG: mtrand binomial algorithm is different from original paper algorithm
",numpy/random/mtrand/distributions.c
59d3bbbe34faa91b7361682441a8b8d1c05553c6,"Merge pull request #4684 from perimosocordiae/patch-1

BUG: argwhere is not equivalent to transpose(nonzero(...)))",numpy/core/numeric.py
3262c93655dd256878113d9ee145fc2a8615e8fb,removing call to asanyarray,numpy/core/numeric.py
02008f7394621a13302890ede90d29b864eebabf,"Merge pull request #4680 from charris/pre-1.9.x-branch

Pre 1.9.x branch",doc/release/1.9.0-notes.rst,numpy/testing/__init__.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py
27bfcdbe13e256d353ca0bd868c8cdb38dbd82e2,"Merge pull request #4656 from foogod/master

Fix for #4655: Make fftpack._raw_fft threadsafe",numpy/fft/fftpack.py,numpy/fft/tests/test_fftpack.py
e4adab82ec64122dc953a40663e6d71aa7af0fee,"Make TestFFTThreadSafe tests Py3-compatible
",numpy/fft/tests/test_fftpack.py
d1422d35d7ad70ebb2c7e41eadd14f27f8cc7e31,"MAINT: Make NPY_RELAXED_STRIDE_CHECKING true by default.
",.travis.yml,doc/release/1.10.0-notes.rst,numpy/core/bscript,numpy/core/setup.py,tools/test-installed-numpy.py,tox.ini
46c7211cf6bf2f03adadd4d283ecd11e00d80184,"MAINT: Remove the polytemplate.py file.
",doc/release/1.10.0-notes.rst,numpy/polynomial/polytemplate.py
767f044ac650051614c83d008514277e7a44633e,"MAINT: Update pavement.py to 1.10.0.
",pavement.py
ff99924f3a82ee09cb76cc6cc94fc196a112fb30,"MAINT: Change default inplace, ufunc(...,out=x) casting to same_kind.

There has been a warning of this change since numpy 1.7. numpy 1.10
is a good time to do it. The nanvar function needed a fix after the
change, and the tests and documentation are updated.
",doc/source/reference/ufuncs.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py,numpy/lib/nanfunctions.py
6f5329fdf45dc97314fa593d0a5a4c1d24e753c5,"MAINT: start 1.10-devel.

* Create 1.10.0-notes.
* Add 1.10.-notes to the generated documentation.
* Update version number in setup.py
",doc/release/1.10.0-notes.rst,doc/source/release.rst,setup.py
7548dc010a304aa93d27928880fb846711338ae7,"Merge pull request #4682 from charris/fix-_numpyconfig.h.in

BUG: Add @DEFINE_NPY_RELAXED_STRIDES_CHECKING@ to _numpyconfig.h.in.",numpy/core/include/numpy/_numpyconfig.h.in
2a6cb99e12f65d46a3396696230536d36c4ad8c4,"BUG: Add @DEFINE_NPY_RELAXED_STRIDES_CHECKING@ to _numpyconfig.h.in.

The entry is needed for Bento builds to correctly configure numpy.
",numpy/core/include/numpy/_numpyconfig.h.in
62b5cf3177a0f56b96d1c5d55b71263e9e0a33cf,"DOC: update 1.9.0-notes.
",doc/release/1.9.0-notes.rst
5286f5e949214c6e6a7485109ea8ee861fe337d7,"Added regression tests for #4655
",numpy/fft/tests/test_fftpack.py
d15010380b1ea428e078b7568c1f48598dbb685c,"Merge pull request #4307 from dfreese/feature/nanmedian

ENH: added functionality nanmedian to numpy",doc/release/1.9.0-notes.rst,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
b85a4ddaf36ef1b9b324d2671ea4659dcb12245a,"MAINT:Ignore boolean '-' deprecation warnings in nosetester.py

This allows numpy 1.9 testing to be used with current scipy
without flooding the output with deprecation warnings.

The deprecation warnings are currently issued for both the
subtract and negative operators when used with booleans.
",numpy/testing/nosetester.py
15f02e2515cf879900d5cb27adba23ab0e0ce235,"Add comments to clarify cache handling in _raw_fft
",numpy/fft/fftpack.py
bc32adacdc672defed613c7adffa88dedb217b80,"DOC: Update the release notes.

Remove duplicated ""New Features"" heading.
Note removal of numpytesting.py file containing importall function.
",doc/release/1.9.0-notes.rst
45761e6a15ce7d72391281819a123dc625611a8a,"MAINT: Remove deprecated importall.

The importall function was the only function in the numpytest.py
file, so remove the whole file.
",numpy/testing/__init__.py,numpy/testing/numpytest.py
b2b33470c8e2cce340a2d29abdf0dab7c7770e2d,"Merge pull request #4606 from juliantaylor/small-memcache

ENH: add small memory chunk cache",numpy/core/bscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/alloc.c,numpy/core/src/multiarray/alloc.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/tests/test_multiarray.py
c1570b58793c5516294f1f96822668efc734d6c4,"MAINT: move memory allocator functions to own file alloc.c
",numpy/core/bscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/alloc.c,numpy/core/src/multiarray/alloc.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c
994b153607a3e862a65fda8af1240532f5c2fa77,"Merge pull request #4677 from charris/revert-d8fd283

BUG: Fix test error in scipy introduced by commit d8fd283.",numpy/ma/core.py,numpy/ma/tests/test_core.py
b34800aa8c764650924a30b027f4bbe95df65c7e,"BUG: Fix test error in scipy introduced by commit d8fd283.

Revert ""ENH: ma.asarray() and ma.asanyarray() will pass through input
        of the correct type.""

This reverts commit d8fd28389adb491e24b7cdc25cd1b20f539310c3.

That commit caused test errors in scipy, which was apparently
expecting a copy rather than a passed through array. The idea
may be good, but at a minimum it should probably be preceded
by a deprecation period.

Closes #4675.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
8e0ac440329188b959520a0a7ce41ef60b2fb3c2,"Merge pull request #4670 from charris/prepare-for-1.9-branch

Prepare for 1.9 branch",doc/HOWTO_RELEASE.rst.txt,numpy/core/code_generators/cversions.txt,numpy/core/{code_generators,numpy/core/include/numpy/numpyconfig.h,numpy/core/setup_common.py
b4ed857c59409a2d35da46438498a12410471160,"Merge pull request #4668 from jaimefrio/fast-argfunc

ENH: Break out early of loop in argmin/max for bool, fixes #4659",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
6a36c11b46f9171c443cff1c01d23b297696816b,"DOC: Update HOWTO_RELEASE.rst.txt.

Add more detail in the ""Check the C API version number"" section.
",doc/HOWTO_RELEASE.rst.txt
8bf8b34bdceb9425e106278730ae50a95ad6b0ff,"MAINT: Add NPY_1_9_API_VERSION to numpyconfig.h.

Defined to the same value it same value as the NPY_1_8_API_VERSION as
there have been no deprecated macros or functions in the include files.
",numpy/core/include/numpy/numpyconfig.h
bcfe8fa7dfefdf6b3d60c39f8c758978e07f2da9,"MAINT: Delete code_generators/cversions.py in its old location.
",numpy/core/code_generators/cversions.py
98392ebd3a78f573e498118e56285bf703256b5d,"MAINT: Update the C-API hash in cversions.txt.

The new annotations caused the api hash to change.
",numpy/core/code_generators/cversions.txt,numpy/core/setup_common.py
906ecabd71acc78b1d3ab658187919e196ee54d4,"DOC: Document the new location of cversions.py.

The instructions in HOWTO_RELEASE.rst.txt needed to be modified.
",doc/HOWTO_RELEASE.rst.txt
e1bffd6e2772056b6a28cbd9235da4b693865145,"MAINT: Move numpy/core/code_generators/cversions.py to numpy/core.

This is done because it runs as a script, hence without context, and
this causes problems with imports in the code_generators package. This
became apparent when numpy_api.py was changed to import genapi.py from
the same package.
",numpy/core/cversions.py
e03c0fa0085b3afbb09808141ecc4f6ad39f0e90,"ENH: Break out early of loop in argmin/max for bool, fixes #4659

Break out early of loop if the min (max) found is `False` (`True`) when
`argmin` (`argmax`) is called on an array of type `bool`.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
f5b0c8c107813c715cec35136466dc17e37833e3,"ENH: release GIL for callocs

useful for programs that block operations to avoid hitting the memory
bandwidth wall.
",numpy/core/src/multiarray/ctors.c
0beb47f52b359ac90d81ec3f932f39a6f85bf8e8,"TST: add travis test for wheel build and install

Add travis build that builds and installs wheel, runs tests from
installed wheel.
",.travis.yml,tools/travis-test.sh
e47a50efc284c677ba4d0337e11dc8514fca7e5b,"ENH: add small memory chunk cache

Add very simplistic caching of small memory blocks (< 1024 bytes)
This improves the performance of small array operations by about 15%-20%:

without cache:
In [1]: d = np.array([1,1])
In [2]: %timeit d*d*d*d
1000000 loops, best of 3: 2.1 µs per loop

with cache:
In [1]: d = np.array([1,1])
In [2]: %timeit d*d*d*d
1000000 loops, best of 3: 1.7 µs per loop

The cache is a simple list of buckets of pointers, one for each size up
to 1023 bytes.
Two caches are required one for array data one one for
dimensinos/strides as they use different allocators.
All pointers can still be deleted with their matching deallocator but
this implies the size of the block must be known at the time of the free
in order to place the pointer in the right bucket. This should not be an
issue for well behaved numpy users.

Technically the ABI is broken in this change as the size of the
dimension memory block has been decreased from 3 * nd to 2 * nd, the
increase to 3 was a relic from the NA branch and is not needed anymore.
It should be unlikely someone relies on this size.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/tests/test_multiarray.py
753149eddd46c1c1823fe3932831b2b914bc8724,"Merge pull request #3514 from seberg/object_comparison

FIX: Make object comparison ufuncs not include identity check",doc/release/1.9.0-notes.rst,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_multiarray.py,numpy/lib/polynomial.py,numpy/polynomial/_polybase.py,numpy/polynomial/polytemplate.py
f40831a53ff2d572f338b1445e40bc88a1167ce7,"MAINT: Comparison deprecation followup fixes

Makes the identity check `a = np.array([np.nan], dtype=object)`
`a == a`, etc. a deprecation/futurewarning instead of just
changing it.
Also fixes some smaller things.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_umath.py,numpy/lib/polynomial.py,numpy/polynomial/_polybase.py,numpy/polynomial/polytemplate.py
34fc091a28c62102522c6edc3015beb424d781a9,"Merge pull request #4609 from juliantaylor/random-gil

ENH: replace GIL of random module with a per state lock",doc/release/1.9.0-notes.rst,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxd,numpy/random/tests/test_random.py
17e9ff8fd67f41f0328b3963d46bbbe849bf7fbb,"DEP: Deprecate identity check in comparisons (not just removing)

Instead of just removing it, raise Deprecation/Future warnings
when the comparison object ufunc and the identity check do not
coincide.
",numpy/core/src/umath/loops.c.src
ad0b9753c063cad065882eb8b6b80f8f99afc47f,"DOC: Add (object) equality changes and error raising to release notes
",doc/release/1.9.0-notes.rst
9b8f6c72caea0c6f3fa08b304135239636e4f165,"DEP: Deprecate that comparisons ignore errors.

This means that for example broadcasting errors get raised.

The array_equiv function is changed to explicitely test
if broadcasting is possible. It may be nice to do this
test differently, but I am not sure if that is possible.

Create a FutureWarning for comparisons to None, which
should result in areal elementwise (object) comparisons.

Slightly adepted a wrong test.

Poly changes: Some changes in the polycode was necessary,
the one is probably a bug fix, the other needs to be
thought over, since len check is not perfect maybe, since
it is more liekly to raise raise an error.

Closes gh-3759 and gh-1608
",numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_multiarray.py,numpy/lib/polynomial.py,numpy/polynomial/polytemplate.py
84831ca7b7926bf1c73e1702201e7591c55588a3,"FIX: Make object comparison ufuncs not include identity check

The issue here is that PyObject_RichCompareBool does an identity
check before doing any other checks. This is good, and is the
way for example list comparisons are handled. However in numpy
comparisons are elementwise, so that the identitycheck should
not be expected. The example for this is as follows:
obj_array = np.arange(3)
a = np.array([obj_array, 0], dtype=object)
np.equal(a, a)
If an identity check is done, this returns [True, True]. But
obj_array == obj_array itself cannot be cast to a bool.

While this is slightly slower, not doing the identity check seems
more logical in the light of elementwise operations.

Closes gh-2117.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
19feb8849392a11fad6474f8bab5cd28e50952f1,"Merge pull request #4666 from ElDeveloper/issue-3488

DOC/FIX: Fix error in documentation",numpy/lib/shape_base.py
ac92c617851994ac1f400886c736cd4d44e2c836,"Merge pull request #4633 from charris/fix-polynomial-true-division

Fix polynomial true division",numpy/polynomial/_polybase.py,numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_classes.py
2142962868687eba3d05f9e50a6648a1b9b3c185,"Merge pull request #4667 from charris/fix-numpy-distutils

BUG: Fix use of setuptools.command.install._install.",numpy/distutils/command/install.py
8bc4d4588fbd2111fae0bc5e47c3662f6e48aee5,"BUG: Fix use of setuptools.command.install._install.

This private variable has disappeared in later versions of setuptools.
In older versions of setuptools it is the same as
distutils.command.install.install, so use that instead.

Closes #4664.
",numpy/distutils/command/install.py
31e969b33a5e95f4c5248b725d7a5d3f8956f52b,"DOC/FIX: Fix error in documentation

Remove misleading note about equivalency betwen column_stack and
np.vstack(tup).T.

Fixes #3488
",numpy/lib/shape_base.py
24a0fd428b80d8db50a9bd5f1c151d3a99bcdcb2,"TST: Add tests for the polynomial classes true division.
",numpy/polynomial/tests/test_classes.py
8c72a78f56d1f87ca801495bec0c0d676d2ef6a5,"BUG: Fix __truediv__ bug in polytemplate.py file.

The use of polytemplate is deprecated, this fix is only for a backport
if needed.
",numpy/polynomial/polytemplate.py
be3f0b1e1332b2a153b11f5027835a054a511427,"MAINT: Refactor numpy/polynomial/_polybase.py

1) Clean up the code and move repeated snippet to a method.
2) Remove use of has_sametype, has_samewindow, has_samedomain. I would
   like to deprecate those methods.
3) Fix error in __truediv__, and make it only allow non-boolean numbers
   for the denominator.

Closes #4631.
",numpy/polynomial/_polybase.py
99cbdbacc23041392aac3f8cc60916d603ee9b1c,"BUG: cythonize sources for wheel build

Wheel build was not cythonizing sources, giving a compile error because
needed `numpy/random/mtrand/mtrand.c` was missing.
",setup.py
e24486e15f9f71f63bdbc4309bcaf40e70ce7e31,"Fix for #4655: Make fftpack._raw_fft threadsafe
",numpy/fft/fftpack.py
beec75be6f96a5c0fc9496b587e68eb03bb4a6ba,"ENH: added functionality nanmedian to numpy

Implemented a nanmedian and associated tests as an
extension of np.median to complement the other
nanfunctions

Added negative values to the unit tests

Cleaned up documentation of nanmedian
",doc/release/1.9.0-notes.rst,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
a0cf18394d5ce33514fdc37093bd2f65ad4b0dde,"Merge pull request #4580 from juliantaylor/openblas-affinity

ENH: disable OpenBLAS affinity settings",numpy/core/numeric.py
94172e1bbaf48e121f90d0252e33dc9f433b1534,"ENH: replace GIL of random module with a per state lock

The random module currently relies on the GIL for the state
synchronization which hampers threading performance.
Instead add a lock to the RandomState object and take it for all
operations calling into randomkit while releasing the GIL.
This allows parallizing random number generation using multiple states
or asynchronous generation in a worker thread.

Note that with a large number of threads the standard mersenne twister
used may exhibit overlap if the number of parallel streams is large
compared to the size of the state space, though due to the limited
scalability of Python in regards to threads this is likely not a big
issue.
",doc/release/1.9.0-notes.rst,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxd,numpy/random/tests/test_random.py
4a2783f28b3270e4d5c79e8d0a8b04b97744ac5d,"Merge pull request #4654 from charris/fix-memory-leak-gh-4652

BUG: Fix memory leak.",numpy/core/src/multiarray/mapping.c
dad468e499458cc8024742e6ea31d5b009abd60b,"BUG: Fix memory leak.

Patch is from Julian Taylor. Closes #4652.
",numpy/core/src/multiarray/mapping.c
fae89b0e7361ae8dea924cfa1b3142ce3f483dee,"Merge pull request #4641 from gdementen/random_docstring_fixes

DOC: standardize ""size"" arg description in random module docstrings",numpy/random/mtrand/mtrand.pyx
1c774db1d3b0812fb89556592baca4f95b343f71,"Merge pull request #4648 from jaimefrio/void-api

BUG: Hold GIL for types with fields, fix #4642",numpy/core/src/multiarray/descriptor.c
63df267fcd5acaf7fc1408dbfef9cc7f53929530,"Merge pull request #4637 from juliantaylor/api-annotate

annotate reference semantics of c-api",doc/source/reference/c-api.array.rst,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/distutils/command/config.py,tools/travis-test.sh
64af3fdd0fac08e01877a56faff5f3c6d4ac3a1b,"MAINT: replace multiarray_global_vars_types by using tuples
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api.py
0c9f285f38ea4d143c5e79badd0d36cb808242a6,"Merge pull request #4640 from gdementen/patch-1

DOC: fixed typo",numpy/random/mtrand/mtrand.pyx
0816d555463437bd2c7db2ac1c96ca26a31fecf0,"BUG: Hold GIL for types with fields, fixes #4642

Set the `NPY_NEEDS_PYAPI` flag for types with fields, as these need
access to the Python API to manipulate the tuples and dicts holding
field information. It remains unset for the base `np.void` type.
",numpy/core/src/multiarray/descriptor.c
7bab95753832051c9425fea613c6dc06a863afba,"Merge pull request #4644 from crbates/patch-1

Update __init__.py",numpy/__init__.py
d6e8cde4c5795dd721fcc12c20394f049fe8904f,"Update __init__.py

interpreter is misspelled",numpy/__init__.py
1eb08d5a99b815dc97e1fa5b42665d8a78202202,"MAINT: always use tuples for api index values

simplifies the generation logic a bit
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/numpy_api.py
8e234ba9d96a05d84a4c04fdcbe474fb598e752a,"DOC: standardize ""size"" argument description in docstrings for functions of random module

there were many different versions for no good reason
",numpy/random/mtrand/mtrand.pyx
3d3c3bd6cfe72b6999e14860722837d8a29e02ce,DOC: fixed typo,numpy/random/mtrand/mtrand.pyx
a8536d5e57ffca95057e74d5d23955b7414847a7,"Merge pull request #4639 from diego898/fix-doc-example

Fixing the `poly2herm` example import line",numpy/polynomial/hermite.py
09db62b2cc079571842ab921cd6d2ba8bb2a8471,"fixing poly2herm example
",numpy/polynomial/hermite.py
cb045e9330b81c3b002339cac8213f568f7650f7,"MAINT: add a few nonnull attributes to array creation functions

also fix wrong capi documentation of PyArray_NewFromDescr stating it
accepts NULL dtype while it does not.
",doc/source/reference/c-api.array.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/ctors.c
999753f85153ae68536aebe9f51ee3ff02b950bc,"MAINT: annotate reference stealing and burrowed refs in multiarray

allows for better static analysis report with e.g. cpychecker
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,tools/travis-test.sh
d598cf1854d84e652ec1e35bb726b147fd6b311d,"BLD: allow strings for check_func declarations

makes attribute checks more sane and allows adding nonnull
",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/distutils/command/config.py
d0b3f8f4213ee2d285be7d410a0cd7a1a601a7bd,"Merge pull request #4628 from mhvk/nanfunctions-copyto-call

BUG: incorrect argument order to _copyto in in np.nanmax, np.nanmin",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
ff459fd2dc3641486b35c672e0d48855669a13a5,"Add tests using matrices
",numpy/lib/tests/test_nanfunctions.py
dd192e6ce7a99d1c24861d2875af18fced072ac9,"Merge branch 'gh-4618'

* gh-4618:
  DEP: Deprecate numpy.rank
",doc/release/1.9.0-notes.rst,numpy/__init__.py,numpy/core/fromnumeric.py,numpy/core/tests/test_deprecations.py
a45df106b5e34ae60eca0cf9f630df1e39bc0491,"DEP: Deprecate numpy.rank

This function is commonly confused with numpy.linalg.matrix_rank
and exists itself only for history reasons.

Closes gh-4616
",doc/release/1.9.0-notes.rst,numpy/__init__.py,numpy/core/fromnumeric.py,numpy/core/tests/test_deprecations.py
51ca860b6f1a373a5a454d0142bdf30659133d54,"Merge pull request #4635 from juliantaylor/cast-fastpath

ENH: add a basic type fastpath to PyArray_CanCastTypeTo",numpy/core/src/multiarray/convert_datatype.c
25fdec2a2667e53d818a98d2ad7d3189306eb8fb,"ENH: add a basic type fastpath to PyArray_CanCastTypeTo

improves small array performance by 5%-10%
",numpy/core/src/multiarray/convert_datatype.c
5c3819aaad9cee83a1e92e364097eb0b5f5c485b,"Merge pull request #4630 from rgommers/intel-noframework

BLD: remove ""-Wl,-framework,Python"" from linker flags for Intel compiler...",numpy/distutils/fcompiler/intel.py
fff48655d4bcc65eb2bcaa4faa9d62b5439db54a,"Merge pull request #4632 from rgommers/refguide-update

Doc update: NEPs, f2py examples and refguide section fix.",doc/neps/deferred-ufunc-evaluation.rst,doc/neps/{math_config_clean.txt,doc/neps/missing-data.rst,doc/neps/new-iterator-ufunc.rst,doc/neps/newbugtracker.rst,doc/neps/npy-format.rst,doc/neps/npy-format.txt,doc/neps/pep_buffer.txt,doc/neps/{structured_array_extensions.txt,doc/neps/{warnfix.txt,doc/source/_templates/indexcontent.html,doc/source/contents.rst,doc/source/f2py/python-usage.rst,doc/source/neps/datetime-proposal.rst,doc/source/neps/datetime-proposal3.rst,doc/source/neps/deferred-ufunc-evaluation.rst,doc/source/neps/generalized-ufuncs.rst,doc/source/neps/groupby_additions.rst,doc/source/neps/index.rst,doc/source/neps/math_config_clean.rst,doc/source/neps/missing-data.rst,doc/source/neps/new-iterator-ufunc.rst,doc/source/neps/newbugtracker.rst,doc/source/neps/npy-format.rst,doc/source/neps/structured_array_extensions.rst,doc/source/neps/ufunc-overrides.rst,doc/source/neps/warnfix.rst,doc/source/reference/routines.rst,doc/source/reference/routines.testing.rst,numpy/doc/misc.py,numpy/testing/utils.py
d7f761650aeca14772d3eeb11dcac4788e53e0a3,"DOC: clean up docs in userguide for interfacing to compiled code a bit.

Add a link to f2py docs, which was missing.

[ci skip]
",numpy/doc/misc.py
7d3e739a342121da74837a73a0374ed148aafe86,"DOC: fix reST formatting of npy-format NEP.
",doc/neps/npy-format.rst
b66af02c283ddd1e33436ad3a14adec0bb09785f,"DOC: add NEPs overview to documentation.
",doc/neps/deferred-ufunc-evaluation.rst,doc/neps/{math_config_clean.txt,doc/neps/missing-data.rst,doc/neps/new-iterator-ufunc.rst,doc/neps/newbugtracker.rst,doc/neps/{npy-format.txt,doc/neps/pep_buffer.txt,doc/neps/{structured_array_extensions.txt,doc/neps/{warnfix.txt,doc/source/_templates/indexcontent.html,doc/source/contents.rst,doc/source/neps/datetime-proposal.rst,doc/source/neps/datetime-proposal3.rst,doc/source/neps/deferred-ufunc-evaluation.rst,doc/source/neps/generalized-ufuncs.rst,doc/source/neps/groupby_additions.rst,doc/source/neps/index.rst,doc/source/neps/math_config_clean.rst,doc/source/neps/missing-data.rst,doc/source/neps/new-iterator-ufunc.rst,doc/source/neps/newbugtracker.rst,doc/source/neps/npy-format.rst,doc/source/neps/structured_array_extensions.rst,doc/source/neps/ufunc-overrides.rst,doc/source/neps/warnfix.rst
2c902f1a29480e324827175b891004a479461ee5,"Merge pull request #4629 from chatcannon/any_all_typo

Fixed typo in the docstrings of np.all() and np.any()",numpy/core/fromnumeric.py
1dff3cea279dd1736dfee03334404eb381fedc75,"DOC: fix examples in f2py documentation.  They didn't appear at all in html.

Also fix example in testing that Sphinx saw as section header.
",doc/source/f2py/python-usage.rst,numpy/testing/utils.py
db668f3792247422010825cf76c9dd927166468b,"DOC: remove obsolete oldnumeric/numarray sections from reference guide.

Also fix a duplicate entry for numpy.testing due to incorrect
header underlining.
",doc/source/reference/routines.rst,doc/source/reference/routines.testing.rst
f4a7cf902afabc737cd99657b46f6d73e3b8da06,"BLD: remove ""-Wl,-framework,Python"" from linker flags for Intel compiler.

The ""-Wl,-undefined,dynamic_lookup"" flag is enough to make things work
with OS X bundles.  On the mailing list an issue was reported with
Anaconda (non-framework build) where f2py was picking up the system framework
Python instead of the Anaconda one.

Thanks to Robert Kern for explaining how to fix this.
",numpy/distutils/fcompiler/intel.py
32dc770f089f967c2e323141feb3246882072562,"Fixed typo in the docstrings of np.all() and np.any()
",numpy/core/fromnumeric.py
e8a9e84a34ca9a45acfde938298f7e5dac609d75,"Merge pull request #4621 from jess010/newaxis-doc

update arrays.indexing.rst for 'newaxis' description ",doc/source/reference/arrays.indexing.rst
5348c0210dd02b53e5e0e042f56976c7cd2ae002,"BUG: incorrect argument order to _copyto in in np.nanmax, np.nanmin
",numpy/lib/nanfunctions.py
ac69505acabb347b5afe18f43a6d7a2a8d94bb52,"updated for None-npnewaxis alias comment
",doc/source/reference/arrays.indexing.rst
3fd19f236815d63bf7a43886bd0ba4418db3deea,"arrays.indexing.rst
",doc/source/reference/arrays.indexing.rst
61c699e5e1bf8b4b85ffd72a99691138d5674b50,"Merge pull request #4615 from mhvk/ma/matrix-flat-redo-shape

Revert line from #4585 to get mask, data shapes to match in .flat",numpy/ma/core.py,numpy/ma/tests/test_core.py
d69cd857d8caa3477faf05152f3be634b51175f8,"Revert line from #4585 to get mask, data shapes to match in .flat
",numpy/ma/core.py,numpy/ma/tests/test_core.py
fbf2072039f948ec1753d45d46d26b92cfacb1ef,"Merge pull request #4614 from charris/fix-gh-4613

BUG: Fix lack of NULL check in array_richcompare.",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_regression.py
bd3ca1eda2cb5159ab5acdea749dead9ca90f575,"Merge pull request #4611 from gdementen/patch-1

fixed bad signature in docstring for uniform()",numpy/random/mtrand/mtrand.pyx
df321538f2b278efb4f7e6f048f86d76dfb0a65d,"BUG: Fix lack of NULL check in array_richcompare.

The lack of this check led to a segfault.

Closes #4613.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_regression.py
b8ba37f8d342894eb2b9fff2ad6522103200ae7e,fixed bad signature in docstring for uniform(),numpy/random/mtrand/mtrand.pyx
f9e0771632428e7594ad3106019cc6cb96498b64,"Merge pull request #4585 from mhvk/ma/iterator-get-single-item

BUG: Ensure MaskedArray.flat can access single items",numpy/ma/core.py,numpy/ma/tests/test_core.py
a7eef2de430edd3ee066da6194e6a38d58f9eec2,"Ensure single record items also work correctly with MaskedIterator; tests
",numpy/ma/core.py,numpy/ma/tests/test_core.py
89daa7c12227ff1df68fc19c6a9d889494cade95,"Merge pull request #4551 from michelmno/master

ENH: adding ppc64le architecture support",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_fpmath.h
09fb4205a1d56090e13257a181f23514684f532b,"Merge pull request #4180 from jaimefrio/unique_counts

ENH: add a 'return_counts=' keyword argument to `np.unique`",doc/release/1.9.0-notes.rst,numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
fbdeac890151c3ceb31672d3e041ddc9840c1890,"Merge pull request #4589 from juliantaylor/cython-gen

BLD: remove cython c source from git",.gitignore,.travis.yml,bscript,numpy/random/mtrand/mtrand.c,setup.py,tools/cythonize.py,tools/travis-test.sh
f3209357c4f0ad570a04ea922e62ee7feadfc034,"Merge pull request #4602 from cgohlke/patch-2

BUG: ifort has issues with optimization flag /O2",numpy/distutils/fcompiler/intel.py
f97d5ca773946ed7ca5ac149f656274765007eb8,"BUG: ifort has issues with optimization flag /O2

Fixes scipy test failures.",numpy/distutils/fcompiler/intel.py
aadcf11a193a9523d557bc81060997d9cd3a9c8e,"add associativity/precedence rationale (+ a few misc tweaks)
",doc/neps/return-of-revenge-of-matmul-pep.rst
733f547f363c6d112992d9666e65c6518a21c5fb,"ENH: disable OpenBLAS affinity settings

OpenBLAS starts as many threads as it can and assigns them to cpus
This includes the main thread Python is running in.
This means any threads or processes Python starts must all share this
cpu, nullifying any parallization efforts.
Luckily this behaviour can be disabled via an environment variable which
we need to set before loading dotblas which may be linked to OpenBLAS.
Libraries loading BLAS before numpy are stills screwed.
",numpy/core/numeric.py
eae3d1a73f2f901da5956e3bcdaf2c44bfdd1ed3,"ENH: add a 'return_counts=' keyword argument to `np.unique`

This PR adds a new keyword argument to `np.unique` that returns the
number of times each unique item comes up in the array. This allows
replacing a typical numpy construct:

    unq, _ = np.unique(a, return_inverse=True)
    unq_counts = np.bincount(_)

with a single line of code:

    unq, unq_counts = np.unique(a, return_counts=True)

As a plus, it runs faster, because it does not need the extra
operations required to produce `unique_inverse`.
",doc/release/1.9.0-notes.rst,numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
52d5d109f9dedf4f006b930abef9ff9c54ec1542,"Merge pull request #4591 from szpy/bugfixes

BUG: Prevent division by zero. Closes #650.",numpy/core/src/multiarray/ctors.c
0b02990e8d33cd8c5b6809e0174173ec70080f96,"BUG: Prevent division by zero. Closes #650.
",numpy/core/src/multiarray/ctors.c
6857173fc1df9a5f196c9fab3249680c7694b493,"Merge pull request #4588 from ddasilva/ddasilva/2591

ENH: Better error w/ line num for bad column count in np.loadtxt()",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
079ca4d2da488ffb7af1fc923728c3abde867231,"ENH: Better error w/ line num for bad column count in np.loadtxt()

Resolves #2591. Adds more explicit error handling in line parsing loop.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
c9fd63407da2a529c205402fd1bda5ea20eedce2,"BLD: remove cython c source from git

Instead generate at build time. The generated sources are still part of
the sdist.
tools/cythonize.py is copied from SciPy with small changes to the
configuration.
",.gitignore,.travis.yml,bscript,numpy/random/mtrand/mtrand.c,setup.py,tools/cythonize.py,tools/travis-test.sh
a0794f63d548e688e2eed76a9dc4e8df0ea33846,"Merge pull request #4587 from ddasilva/meltingwax/4571

BUG: Explicitly reject nan values for p in binomial(n, p).",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
ac56b60a72df1ee939f3aa0826389276fc4b0b64,"BUG: Explicitly reject nan values for p in binomial(n, p). Fixes #4571.

Adds check with np.isnan(p) and raises ValueError if check is positive.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
dfebb5a9a6664148b32444497bb792ecbb2f56f5,"BUG: Ensure MaskedArray.flat can access single items
",numpy/ma/core.py,numpy/ma/tests/test_core.py
547765dd9b2131e1e8b1ef646d4cc5ba9b4dd791,"Merge pull request #4576 from mhvk/ma/subclass-printing

ENH: Ensure that repr and str work for MaskedArray non-ndarray bases",doc/release/1.9.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
24a8f3be2f8f85d67d47ba34fd5fe9a2f886aa30,"ENH: Ensure that repr and str work for MaskedArray non-ndarray bases

For repr, use the name of the base class in output as ""masked_<name>""
(with name=array for ndarray to match the previous implementation).
For str, insert masked_print_option in an ndarray view of the object
array that is created for string output, to avoid calling __setitem__
in the base class.  Add tests to ensure this works.
",doc/release/1.9.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py
3998fdf2b99d976528e3de399fb536666d588bce,"Merge pull request #4463 from abalkin/issue-4461

BUG: Masked arrays and apply_over_axes",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
e4082eb30e65276c6acac0b46b9e2d28b3b99948,"Merge pull request #4255 from juliantaylor/ufunc-attr-check

__numpy_ufunc__ check improvement",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/umathmodule.c
6c6ddaf62e0556919a57d510e13ccb2e6cd6e043,"Merge pull request #4578 from juliantaylor/static-bugs

BUG: fix memory leaks and missing NULL checks",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_multiarray.py
3c94550789ba2328ebcd2faaa51c873dc3f1852c,"BUG: fix memory leaks and missing NULL checks

found by cpychecker gcc plugin
",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_multiarray.py
76c9bb336f77aa406c62ab5f3077517dec133d30,"BUG: Masked arrays and apply_over_axes

Masked arrays version of apply_over_axes did not apply
function correctly to arrays with non-trivial masks.

Fixes #4461.
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
3ff41a68be4785298a7df9cd1d919342ec889b93,"ENH: avoid searching for __numpy_ufunc__ if its a basic python type

Checking for the attribute is a very large bottlenecks for reductions.
dtype, out, keepdims will often be basic python types so the check can
be skipped.
Also add a couple missing types to helper function _is_basic_python_type
and move it into a header so it can be used in umath.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/private/ufunc_override.h
de73f9ffffb746489b56b3bbcef3195e0bc825f3,"ENH: intern the constant python strings

Was always intended this way but not done due to a mistake in Python3
fix. Speeds up dictionary lookups a bit as string comparisons can be
skipped on hash collisions.
",numpy/core/src/umath/umathmodule.c
39de3c865538ac4d32e6fffddb76f6892e7289c8,Docstring fix for `savetxt`,numpy/lib/npyio.py
3e61f8626e8dd22ae6627c276963dbe85e0a40ae,"Merge pull request #4568 from jaimefrio/cumprod-vander.

ENH: Replace exponentiation with cumulative product in np.vander
",doc/release/1.9.0-notes.rst,numpy/lib/twodim_base.py
30aeb2ee59d8b52bdd1ace33ac3d9b4e45c17b32,"ENH: Replace exponentiation with cumulative product in np.vander

Speeds calculation up by ~3x for 100x100 matrices, and by ~45x for
1000x1000
",doc/release/1.9.0-notes.rst,numpy/lib/twodim_base.py
5b265798b516dc7db710aa3942b97cc50df146fc,"Merge pull request #3664 from mdboom/structured_array_compare

structured arrays with different byteorders do not compare",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
c53b0e4fb892c7bc6ebdc48e57e23a91da0f542e,"BUG: Compare struct arrays with different endian.

Fixes two places where dtypes with fields are compared for *exact*
equality where they should be compared for *equivalency*.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
fd0d7d204d234865c5a384e8ec1c3a0c9fe66e8f,"Merge pull request #4570 from juliantaylor/index-gil

ENH: release GIL for a[..., bool] type indexing",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
92f499ad70c67c9f41fcedc942861dc7f89f8736,"ENH: release GIL for a[..., bool] type indexing

set _save to NULL in NPY_END_THREADS to simplify some code
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
15a87e2b9cfdea2ee5a84764862a390ed2f1fd6f,"Merge pull request #4567 from juliantaylor/obj-array-create-opt

ENH: optimize array creation from homogenous python sequences",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
012a353f828c83d79ffb1a9579dd1620d2aa2754,"ENH: use fast sequence API for discover_dimensions

reduces runtime of function by about 20%
",numpy/core/src/multiarray/ctors.c
afdb698c81d58450289a222c263565219785e42e,"ENH: use fast sequence API for setArrayFromSequence

reduces runtime of function by about 10%
",numpy/core/src/multiarray/ctors.c
d36f82277056b053578f1672c6db22371f9d991a,"ENH: optimize array creation from homogenous python sequences

Instead calling PyArray_DTypeFromObjectHelper for each item in a
sequence, check if all items in the sequence are of the same scalar
type, if this is the case we only need to recurse on one item.
Also use the PySequence_Fast API to avoid expensive function calls for
the common case of lists or tuples.

np.array(range(10)) improves about 25%
np.array(range(100)) improves about 40%
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
ceeeb1a65aaa508bd7097b5c39ba36fec51934b9,"Merge pull request #4569 from juliantaylor/rn-sync

DOC: sync release notes of 1.8 branch and add some missing 1.9 sections",doc/release/1.8.0-notes.rst,doc/release/1.8.1-notes.rst,doc/release/1.9.0-notes.rst
bce5bfbce602f4687ab3b01803bcb23820e7572c,"Merge pull request #3830 from jarondl/recfromcsv

MAINT (API?): organize npyio.recfromcsv defaults",doc/release/1.9.0-notes.rst,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
77a5c89e35f3ef8f604b3452f374d22c88cbde04,"DOC: sync release notes of 1.8 branch and add some missing 1.9 sections

[ci-skip]
",doc/release/1.8.0-notes.rst,doc/release/1.8.1-notes.rst,doc/release/1.9.0-notes.rst
7b0d0754833468b960c9dd1c8b903ad30508eb70,"Merge pull request #4565 from charris/fill_value_fix

Raise TypeError when setting inappropriate ma fill_value ",doc/release/1.9.0-notes.rst,numpy/ma/core.py,numpy/ma/tests/test_core.py
92a0a2c4e49474c0240da6be25680d488877109b,"DOC: Document changes to ma.core._check_fill_value in release notes.
",doc/release/1.9.0-notes.rst
06aafa56b25ba15063b3cbc701eb67b352d1e14f,"BUG: Fix for issue #3213

Two changes to numpy.ma.core._check_fill_value:

1. When the fill value is a string and the array type is not one of
   'OSUV', raise TypeError instead of using the default fill value.

2. When the fill value overflows the type, raise TypeError instead
   of OverflowError.

Closes #3213.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
9fc98aed1473e73dc8bd97ca79728c400fcc3d37,"Merge pull request #4566 from juliantaylor/na-doc

DOC: remove obsolete NA reference from polyfit docs",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
2baee6da0913f26d44bb7ada6976d3d076d23aab,"Merge pull request #4531 from charris/polynomial-abstract-base

Use polynomial abstract base instead of template.",doc/release/1.9.0-notes.rst,numpy/polynomial/_polybase.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py
5bff3380b1c649d707bfc35a66b1e53ee3482025,"DOC: remove obsolete NA reference from polyfit docs
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
ab0642c9780a0c19c701facbc8ea85a278e4324d,"Merge pull request #4558 from charris/document-assert_raises_regex

DOC: Document assert_raises_regex in numpy reference.",doc/source/reference/routines.testing.rst
2ba74c397a5d840665d07f4fc3b2fa00214d1fcd,"Adding support of ppc64le architecture

Signed-off-by: William Grant <wgrant@ubuntu.com>
Signed-off-by: Michel Normand <normand@linux.vnet.ibm.com>
",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_fpmath.h
46929e80777075de0d4b75361da0002fee0a388f,"Merge pull request #4561 from juliantaylor/int-vectorize-compiler

allow compiler vectorization of integer compares",numpy/core/src/umath/loops.c.src,numpy/lib/twodim_base.py
468d78bbdaa5aef5785230c7c2eee4267e380eff,"Merge pull request #4562 from juliantaylor/opt-cast-loop

ENH: compile casting loops with O3 to enable vectorizer",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
dab5e3e2e23cd00a338fd221b3bd7751c6edd893,"ENH: use smallest integer for tri ranges

reduces buffer copy and comparison overhead for boolean outer product
",numpy/lib/twodim_base.py
0e44d06852048513ee168521d1c4d574f1a1de9e,"ENH: write integer compare loops in way the compiler can vectorize them

current compilers (gcc 4.8, clang 3.4) are not good in vectorizing these
loops but at least for bytes and shorts they do give decent
improvements. Properly vectorizing the operations like already done for
floats is tedious and not probably not worth the effort, especially as
64 bit integer compares only exist in SSE4 and can thus not be used by
default.
",numpy/core/src/umath/loops.c.src
43dae249ddf7618adebc7c01d91c50f435e7efcd,"ENH: compile casting loops with O3 to enable vectorizer

improves performance of some casts by 25%-50%
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
ddc95d379f410c7ff787c157ded6c40bb873215c,"ENH: apply_along_axis accepts named arguments
",numpy/lib/shape_base.py,numpy/ma/tests/test_extras.py
ef951bd3ab00fff4ffcfcf8707a9509cb3796b4b,"DEP: Deprecate the numpy/polnomial/polytemplate.py module.

Make the version of its removal Numpy 1.10.0.
",numpy/polynomial/polytemplate.py
5407a95d2b55567dbae43f96e06744425f4eea1e,"DOC: Document change of polynomial classes base class in release notes.
",doc/release/1.9.0-notes.rst
a2c96a6ad79efe81520e18078a6dee61c78113ef,"DOC: Fixup documentation for new way of generating classes.

Move the class documentation to the place of definition in the
appropriate module. This allow for documenting the specific series kind
along with the series specific default domains and windows

Remove template placeholders from the ABCPolyBase class documention.

General fixup of documentation that rendered poorly.
",numpy/polynomial/_polybase.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
a5aae2946729df3d59132edc94522919542454bd,"DOC: Cleanup polyutils.py module documentation.

Also note that PolyBase is no longer to be used.
",numpy/polynomial/polyutils.py
1eb81b7beaf571bdd534cfeec046b79b1d188714,"ENH, MAINT: Use an abstract base class for the polynomial classes.

The new base is ABCPolyBase and is intended to replace the use of the
polytemplate string.  In this way the need to compile the polynomial
classes on import is avoided.

Closes #634. Closes #3639.
",numpy/polynomial/_polybase.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
46767a2ffc6bf7b3c6841bd9b10f1f26543d22b7,"Merge pull request #4045 from abalkin/gh-4043

ENH: ma.asarray() and ma.asanyarray() will pass through input of the cor...",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py
42965e198826257d9de14823a2a359a161caa461,"DOC: Document assert_raises_regex in numpy reference.
",doc/source/reference/routines.testing.rst
69238dd8c223e447a42eac8a9ed10a0662dcdbef,"Merge pull request #4553 from seberg/fancy-negated-strides

BUG: fix fancy indexing with negated strides",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
c2c89cb6baa41ae723e476def0189923c61ec359,"Merge pull request #4557 from juliantaylor/index-nonzero

ENH: use super optimized count_boolean_trues in indexing subfunction",numpy/core/src/multiarray/mapping.c
419cb15db0c4907082ab5327a7a9ec72b8e3d83c,"Merge pull request #4542 from immerrr/fix-bincount-systemerror

BUG: fix some errors raised when minlength is incorrect in np.bincount",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py,numpy/testing/utils.py
d35d5c1a1ff9cb9d60da54d8d1e6a66a042b0d27,"Merge pull request #4541 from ElDeveloper/issue-2367

BUG:change formatting of assert_array_almost_equal",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
09530882e439591adb94aab006ac99141b83f8ef,"Merge pull request #4544 from juliantaylor/unaligned-index

BUG: fix unaligned access of new indexing",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_indexing.py
d3dfa68f87e115b4b1c869ff26d21e88c928f29a,"ENH: use super optimized count_boolean_trues in indexing subfunction

speeds up e.g. a[..., boolmask]
",numpy/core/src/multiarray/mapping.c
73959002924a43893f16c7ed6e138519bbb24424,"Merge pull request #4509 from jaimefrio/twodim-speedup

ENH: speed-up of triangular matrix functions",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
8e47f39f7afbed163fd4298b4faa88be7382b090,"Merge pull request #4555 from larsmans/partition-docs

DOC: partition doesn't have three algorithms (yet)",numpy/core/fromnumeric.py
e40c9616731852af7d13669c3a8197ed096d7853,"DOC: partition doesn't have three algorithms (yet)
",numpy/core/fromnumeric.py
812aaf67080b666dad2ccf81f275c853d46c01af,"BUG: fix fancy indexing with negated strides

When strides where negated and the subspace had a size of 1, then
finding the output array strides did not work because
DONT_NEGATE_STRIDES was not set on the iterator used to find
the output arrays strides.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
a11c16249451c552e70a5ff73406f95b50961aa5,"TST: Change tests to look at array formatting only

The tests were looking at the formatting of other elements in the string
which is not relevant for the things testsed in this case. By looking
only at the array formatting, we guarantee consistency across systems.
",numpy/testing/tests/test_utils.py
e5cf3654e81573bf583cbf6a8688a5e44fafceea,"BUG: fix incorrect minlength handling in np.bincount
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
60d434766b1a5a315674811e544d33dea5b2323d,"ENH: export nose.tools.assert_raises_regex via numpy.testing.utils
",numpy/testing/utils.py
b1dfdea4b7e1a1e52f933dfdc075030f4b9b34ee,"TST: Remove test that makes no sense

It's silly to check scalars when their string representations will vary
so much from system to system.
",numpy/testing/tests/test_utils.py
b07880ba9c0aef44ad3dcbf2b52c094c58adde60,"BUG: Fix non-compatible py3 property
",numpy/testing/tests/test_utils.py
c94e13542ad6553633da59fb68fe295df555e2c3,"TST: Add exception message formatting tests

assert_approx_equal & assert_almost_equal make internal use of
build_err_msg so a few tests have been added to check that the errors
are formatted correctly.
",numpy/testing/tests/test_utils.py
2e58804fe546bf6d476d09ba186c36a69bc577c4,"ENH: Add check for ndarray/scalar in build_err_msg

This check is needed now that build_err_msg takes a precision argument,
which is only relevant if the things being compared are ndarrays.
",numpy/testing/utils.py
fc5d3750da073fcf0bcaf4654917e7338c76b2bd,"Merge pull request #4549 from juliantaylor/datetime-test-fix

TST: increase test time to avoid negative times on UTC conversion",numpy/core/tests/test_datetime.py
60f2f518857d1bac221947fc2cde2709b10a9a1b,"TST: increase test time to avoid negative times on UTC conversion

fixes the test on windows where mingw _mktemp64 will return an error
instead of a negative time.
",numpy/core/tests/test_datetime.py
9d9c9527b23b24ba236df92d90548d2c47d19be5,"Merge pull request #4548 from juliantaylor/boolcount-improve

ENH: optimize count_boolean_trues further via unrolling",numpy/core/src/multiarray/item_selection.c
aa36680aac25fb5560f28b6ed94d4e4f654d1d81,"ENH: optimize count_boolean_trues further via unrolling

redoing the computation if the booleans do not not contain 0 or 1 allows
sharing registers for the addition and or operations so we can more
aggressively unroll the loop to save 3 multiplies and shifts. Also it
allows better pipelining of integer operations.
Improvements range from 10%-50% on a range of amd64 cpus.
",numpy/core/src/multiarray/item_selection.c
c4376726bfa8335e38d8fee6cc5e376af82a24de,"BUG: fix unaligned access of new indexing

Requires 16 bytes alignment from string and flexible dtypes, as
processing functions might access them on the itemsize which can be
larger than 1 byte (e.g. 8 bytes strings)
16 byte the largest alignment required for all numpy copy loops.
Closes gh-4314
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_indexing.py
2f0494c2601b0dd1bdde405b9937ebc06427f1e2,"Merge pull request #4547 from tecki/master

add support for python ABCs",doc/release/1.9.0-notes.rst,numpy/core/numerictypes.py,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_abc.py
90953b1ebb1dcf86c668339b9ac0bf7cd6e8204e,"Merge pull request #4365 from larsmans/c-fixes

MAINT: fix unused variable warning",.gitignore,numpy/core/include/numpy/npy_3kcompat.h
a80946d77e6b488189024d14667d3fe191bdb2f8,"ENH: speed-up of triangular matrix functions

* `np.tri` now produces less intermediate arrays. Runs about 40% faster for
  general dtypes, up to 3x faster for boolean arrays.
* `np.tril` now does smarter type conversions (thanks Julian!), and together
  with the improvements in `np.tri` now runs about 30% faster. `np.triu`
  runs almost 2x faster than before, but still runs 20% slower than
  `np.tril`, which is an improvement over the 50% difference before.
* `np.triu_indices` and `np.tril_indices` do not call `np.mask_indices`,
  instead they call `np.where` directly on a boolean array created with
  `np.tri`. They now run roughly 2x faster.
* Removed the constraint for the array to be square in calls to
  `np.triu_indices`, `np.tril_indices`, `np.triu_indices_from` and
  `np.tril_indices_from`.
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
44be277a858c7ac466cc82d2acff8df075d914af,"ENH: add numerator and denominator to integers

numbers.Integral types are supposed to have a numerator and
denominator attribute. This adds those two trivial attributes.
",numpy/core/src/multiarray/scalartypes.c.src
2d73ff34f48980778b4e808afc76c0c1fa841ba7,"ENH: add support for python ABCs

Beginning with version 2.6, python supports abstract base classes,
which contain a class hierarchy for numbers. This class hierarchy is
very similar to the one of numpy, so it is very easy to register
the numpy type hierarchy with the python type hierarchy.

This patch adds those registrations and also adds unit tests for it.
",doc/release/1.9.0-notes.rst,numpy/core/numerictypes.py,numpy/core/tests/test_abc.py
540c5c865354f0046ed9e7fc2828ab6eef8cbedb,"MAINT: ignore some more generated C files
",.gitignore
9f754d66d555d64cdab87fbf3b55783c4895593a,"MAINT: fix unused variable warning
",numpy/core/include/numpy/npy_3kcompat.h
4112bf1a19f614fc426b82ff6b3ae86d8b25f92b,"TST: Add tests for build_err_msg
",numpy/testing/tests/test_utils.py
de7c651d531c227d04195b5da21313c57b702b08,"BUG:change formatting of assert_array_almost_equal

assert_array_almost_equal now prints the number of digits that were
being compared in the test instead of always printing 8 (the default
for array_repr). This would lead to uninformattive error messages.

Fixes #2367
",numpy/testing/utils.py
8409b4cc094c03aab284d1fc5fc55240a1f6b342,"Merge pull request #4545 from charris/style-fix

STY: Fix some multiline C comments in npy_3kcompat.h.",numpy/core/include/numpy/npy_3kcompat.h
6b8a647e338e1adeb587b83f44d9458e027c7829,"STY: Fix some multiline C comments in npy_3kcompat.h.
",numpy/core/include/numpy/npy_3kcompat.h
3a4030c650a0510b8e673f34464f4ef64212b022,"Merge pull request #4358 from seberg/fast-select

ENH: Speed improvements and deprecations for np.select",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
a0bbdcfda546a112b36353f8b5c6dd2c0e07f916,"Merge pull request #4538 from seberg/size1_reductions

BUG: nditer: Initialize buffer reduce pos",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_ufunc.py
123b319be37f01e3c4f2e42552d4ca121b27ca38,"ENH: Speed improvements and deprecations for np.select

The idea for this (and some of the code) originally comes from
Graeme B Bell (gh-3537).
Choose is not as fast and pretty limited, so an iterative
copyto is used instead.

Closes gh-3259, gh-3537, gh-3551, and gh-3254
",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
adf38debadf55932961211f77646bc16187859d8,"BUG: nditer: Initialize buffer reduce pos

The FirstVisit function uses this, but when the reduction is
over a single element it isn't considered a reduction. This is
fine, however the reduce pos must still be initialized to 0 in
that case. Also changes the check order so that it is not
necessary to initialize the outerstrides as well.

See also gh-4134, and gh-4535.
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_ufunc.py
730bff388f4847a4c1148fb72d3fcb3aa4f0a41a,"Merge pull request #4071 from endolith/patch-1

DOC: Link convolve with polymul",numpy/core/numeric.py,numpy/lib/polynomial.py
e5b803c742094fb420224905794100eeca6a0fca,"Merge pull request #4535 from juliantaylor/itersize-1

BUG: fix uninitialized use of size 1 reductions",numpy/core/src/multiarray/nditer_api.c,numpy/core/tests/test_ufunc.py
3302291884cedf7089b608688a3fa2e696f629ea,"BUG: fix uninitialized use of size 1 reductions

Size 1 reductions do not intiialize the iterator fully as normal
reductions which triggers uninitialized use in NpyIter_IsFirstVisit.
To fix this check the size of the iterator and return true if it only
has size 1.
",numpy/core/src/multiarray/nditer_api.c,numpy/core/tests/test_ufunc.py
51c65c1990c63d4d1fbd8a37d4c69415b0a225b5,"Merge pull request #4533 from charris/redo-gh-4529-commit-message

BUG: fix broken operand initialization for einsum.",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_einsum.py
b148f0a9fe72d567629fd18ccd15f6e1636beea0,"BUG: fix broken operand initialization for einsum.

Closes #4528.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_einsum.py
4f3a20436802c68d296095744d2f014499c63785,"Merge pull request #4512 from juliantaylor/opt-srcstride0-copy

ENH: optimize srcstride0 copy with O3",numpy/core/include/numpy/npy_common.h,numpy/core/setup_common.py,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
af69b3fe1b2bd9bf1b8bc5fe3885160e3ae175eb,"Merge pull request #4490 from charris/fix-random-multivariate-normal

Fix random multivariate normal",doc/release/1.9.0-notes.rst,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
cec481508340a6b4154d8905b47d3cf01c5e7cfd,"Merge pull request #4522 from ninjin/master

FIX: items/keys iterators in 3k, list wrapping",numpy/_import_tools.py
8ba277d1a55f285d70659a0aa1489591cf46f321,"DOC: Note new random.multivariate_normal warning in release notes.
",doc/release/1.9.0-notes.rst
1c825f38d74bd9435c0b0c691dbea0a36a1ab0af,"TST: Add some tests for random.multivariate_normal.

Explicitly Test that the default shape does not raise a
DeprecationWarning.

Check that a covariance matrix that is not positive-semidefinite
raises a RuntimeWarning.
",numpy/random/tests/test_random.py
d36f81372229aac3455dcb69b784e1363d290239,"ENH, MAINT: Check that covariance is positive-semidefinite.

numpy.random.multivariate_normal uses SVD to obtain the covariance
square root, but the result will be incorrect if the covariance is not
positive-semidefinite and no warning will be given. However, a check can
be made even while using the SVD by checking if the rows of u.T and v
have the same sign, where u and v are given by u, d, v = svd(a).

A deprecation warning is also fixed. When the default size was used an
empty list was passed to multiply.reduce, which resulted in a default
float 1. for a shape index. That is no longer legal. The problem is
fixed by using an array reshape, which also avoids potential overflow in
the original computation.

Closes #4489.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
de0e571e324e4f11187b79c91b0fe0cc03b27402,"DOC: Link convolve with polymul

Matlab uses `conv` for both convolution and polynomial multiplication. Clarifying that numpy has functions for each.
",numpy/core/numeric.py,numpy/lib/polynomial.py
5025c40965fa5fb2b591f07c152b966dc7b730f0,"FIX: items/keys iterators in 3k, list wrapping
",numpy/_import_tools.py
2b984294e98a7cf1e60455cf9022ca7b7e6a7a84,"Merge pull request #4518 from juliantaylor/datetime-overflow

BUG: catch overflow of nominator in datetime conversions",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
7ef9c48b6b811deb45b7f602087dd63c4b88862e,"BUG: catch overflow of nominator in datetime conversions

closes gh-4486
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
e67765b235f7539adcde0ea047726ee35dae9cdf,"Merge pull request #4515 from ogrisel/undefined-asarray

FIX: missing asarray import in numpy.libs.utils",numpy/lib/tests/test_utils.py,numpy/lib/utils.py
caf3fc4d37d56b4d7e80ce6e7d564cef698171b9,"TST: add unittest for byte_bounds
",numpy/lib/tests/test_utils.py
741e5c77f9a9df06716a685b91668c01ef95ebcd,"FIX: missing asarray import in numpy.libs.utils
",numpy/lib/utils.py
7e40517d04a4743f37aa9f6dfb2aeb2343f5443a,"Merge pull request #4514 from abergeron/get_info

Add the change to disutils in the release notes.",doc/release/1.9.0-notes.rst
d1ae6cf41f931cb6f07c239e8955f55eaf00ebea,"DOC: Add the change to disutils in the release notes.
",doc/release/1.9.0-notes.rst
8357e0ba2b301d03ec4f355d2619127007eb8c39,"Merge pull request #4387 from abergeron/get_info

ENH: Make output of get_atlas_info conditional on system_info.verbosity",numpy/distutils/command/config.py,numpy/distutils/exec_command.py,numpy/distutils/system_info.py
e72b7e9a51107ba77db0473bf9fd3b6b4fb0f954,"ENH: optimize srcstride0 copy with O3

enables autovectorization with gcc and improves performance by about 25% for cached data.
",numpy/core/include/numpy/npy_common.h,numpy/core/setup_common.py,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
1d884dd4425cae52c4558c354c39908800741f59,"fix PEP headers to placate PEP-0000 builder, mention Julia in notation section, and remove stray ^^ operator left over from the @@ purge
",doc/neps/return-of-revenge-of-matmul-pep.rst
6b38cdd2c2543e3957a593c48628f1daf23d48a9,"Merge pull request #4507 from juliantaylor/test-add

TST: add some more tests",numpy/core/tests/test_regression.py,numpy/lib/tests/test_function_base.py
f38471792b73905eaf12b49112a712dd0ee9a358,"Merge pull request #4503 from rproepp/3504-quantities

Fix linspace for use with physical quantities",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
0e933e6ccb3d273e09d7cbcebf4ee6d7467a0085,"New version just submitted to PEP editors.

Main changes:
- @@ is gone
- A few small factual inaccuracies have been fixed
- I added a discussion of Guido's "".M *"" idea to the ""Rejected
  alternatives"" section
- Added an (incomplete) ""Implementation details"" section, based on
  Nick's comments.
",doc/neps/return-of-revenge-of-matmul-pep.rst
4a764d3c7afccedc6e96fce0bdabe6ed44f255dc,"BUG: Fix linspace for use with physical quantities

The fix for issue 3504 led to errors when using linspace with the quantities package. Multiplying with 1 instead of adding 0 prevents issues when using physical quantities.
",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
5df0158905289854700673ba5dee11982a70ab2b,"TST: add some more tests

test for gh-4494
test median returns array scalars and works with object arrays
",numpy/core/tests/test_regression.py,numpy/lib/tests/test_function_base.py
e3794e7eadcaed88b32f8759d1592d491220a4ad,"Merge pull request #4494 from embray/astropy-1987

BUG: Adds missing Py_INCREF in array_boolean_subscript",numpy/core/src/multiarray/mapping.c
ad8e2c7cf0d96b66b1e46088b797c0a0a9f02415,"Merge pull request #4502 from mwiebe/einsumfix

Fix for obscure einsum bug (#4485)",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/tests/test_einsum.py
10e289c5da320faed3f5f2592162d040020e1e1e,"BUG: Buffered stride was erroneously marked fixed (fixes #4485)
",numpy/core/src/multiarray/nditer_api.c
04eaf270887d568023ce4a6f3475510e1c4e563a,"TST: Test for einsum/nditer fixed stride bug
",numpy/core/tests/test_einsum.py
81428d8e1bbea9dd728f05419010f6a294d0fdc9,"BLD: Fix build on Windows
",numpy/core/src/npymath/ieee754.c.src
b80ef7539cc91f4c78a80f425b0906f497fc1f12,"Merge pull request #4483 from meltingwax/meltingwax/2469

BUG: Fix commutativity of {dot,multiply,inner}(scalar, matrix_of_objects)",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_ufunc.py
ea639028632c5e7c2cd5ebc8f404c567b98c1dee,"Merge pull request #4496 from hmeine/PY_ARRAY_UNIQUE_SYMBOL_docs

mention possible definition of unique symbol in .h",doc/source/reference/c-api.array.rst
dab00406037cee1c34b1bc75249982743cfe2908,"Merge pull request #4500 from jaimefrio/mapping-shadowing

MANT: rename variable to avoid shadowing",numpy/core/src/multiarray/mapping.c
2f38c8e5e86c360aaae5b7e461bb8e27a2520977,"DOC: suggest definition of unique symbol in .h

I find it much more convenient to define the PY_ARRAY_UNIQUE_SYMBOL in a
header file #included by all files of the extension (than to repeat its definition in each and every file).",doc/source/reference/c-api.array.rst
df71ae6e8a301a38ea9bae23f63ac7379f49458e,"MANT: rename variable to avoid shadowing

The variable `obj` in `prepare_index` is shadowed in an inner scope within
the function. Renamed the inner scope variable to `tmp_obj` to avoid
confusion.
",numpy/core/src/multiarray/mapping.c
ddd02d50e8cd06d84deecd3b2943813be20b91b8,"Merge pull request #4497 from juliantaylor/index-gil-release

ENH: release gil for indexing operations",numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c
646f54e42ae0d3a1ba8851f4437756414ea9acca,"Merge pull request #4498 from meltingwax/meltingwax/2092

DOC: specify that 2d array must be non-empty in np.poly error message.",numpy/lib/polynomial.py
403c26a8a569b357d228e7aff2025965f444f9ca,"Merge pull request #4067 from hmeine/master

explain character codes of dtype.kind",doc/source/reference/arrays.dtypes.rst,doc/source/reference/c-api.types-and-structures.rst,numpy/add_newdocs.py
f8942f520c1193169a72aa4126eba9b583b92f26,"DOC: specify that 2d array must be non-empty in np.poly error message.

Fixes #2092. Changes message passed to ValueError.
",numpy/lib/polynomial.py
6ae3946f9bceee9ce2ce0fe16f538663ae92149c,"ENH: release gil for put and putmask
",numpy/core/src/multiarray/item_selection.c
259db01274c8a5cb4f378fc1147af46c4b9f739b,"ENH: release gil for indexing operations

closes gh-4310
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c
68179d562294ee6c75ebe6dbbb5c57f0acb4fcaa,"""(byte-)string"" in PyArrayInterface.typekind docs",doc/source/reference/c-api.types-and-structures.rst
c0014729f973f1baa6d614154aa0d21b3fb79291,"explain character codes of dtype.kind

""one of 'biufcSUV'"" is not very helpful if it stands alone,
also the 'O' typecode was missing.",numpy/add_newdocs.py
e86077ab5a742b8fd81a137c946a551752f237f4,"doc fixes to 'array-protocol type strings'

The item size is not always used (and not always means exact bytes), and
'O' was not in the table.",doc/source/reference/arrays.dtypes.rst
17227ce130cae09f03c55df1ed22798be901c7ff,"Merge pull request #4493 from charris/reference-cython-not-pyrex

DOC: Change pyrex to Cython in c-info.how-to-extend.rst.",doc/source/user/c-info.how-to-extend.rst
9d24bc1464d4621c9cfff94c05ec417ddd19a914,"add more comprehensive discussion of alternative symbols
",doc/neps/return-of-revenge-of-matmul-pep.rst
d369f1e51c235fe00a6ca96db5cedee5e7a347b1,"Remove excessive spacing
",numpy/core/src/multiarray/mapping.c
a2ca82f0b145e0e5f6c051259bd0df4ea1b87127,"DOC: Change pyrex to Cython in c-info.how-to-extend.rst.
",doc/source/user/c-info.how-to-extend.rst
8eb120fd13c50b269bb752a4dd5207c1fba9c905,"Merge pull request #4488 from charris/remove-numpybook

MAINT: Remove doc/numpybook.",doc/numpybook/Figures/contiguous.eps,doc/numpybook/Figures/contiguous.fig,doc/numpybook/Figures/contiguous.pdf,doc/numpybook/Figures/fig1.eps,doc/numpybook/Figures/fig1bw.eps,doc/numpybook/Figures/fig2.eps,doc/numpybook/Figures/fig2bw.eps,doc/numpybook/Figures/hierarchy.dia,doc/numpybook/Figures/hierarchy.eps,doc/numpybook/Figures/hierarchy.fig,doc/numpybook/Figures/hierarchy.pdf,doc/numpybook/Figures/hierarchy.png,doc/numpybook/Figures/threefundamental.eps,doc/numpybook/Figures/threefundamental.fig,doc/numpybook/Figures/threefundamental.png,doc/numpybook/capi.lyx,doc/numpybook/comparison/ctypes/code.c,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/ctypes/newfile.dat,doc/numpybook/comparison/ctypes/timeme,doc/numpybook/comparison/f2py/add.f,doc/numpybook/comparison/f2py/add.pyf,doc/numpybook/comparison/f2py/filter.f,doc/numpybook/comparison/f2py/filter.pyf,doc/numpybook/comparison/f2py/filtermodule.c,doc/numpybook/comparison/f2py/timeme,doc/numpybook/comparison/pyrex/add.c,doc/numpybook/comparison/pyrex/add.pyx,doc/numpybook/comparison/pyrex/c_numpy.pxd,doc/numpybook/comparison/pyrex/filter.c,doc/numpybook/comparison/pyrex/filter.pyx,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/pyrex/timeme,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/comparison/weave/timeme,doc/numpybook/graphics/note.eps,doc/numpybook/graphics/note.fig,doc/numpybook/graphics/note.png,doc/numpybook/graphics/tip.eps,doc/numpybook/graphics/tip.fig,doc/numpybook/graphics/tip.png,doc/numpybook/graphics/tip.xfig.fig,doc/numpybook/graphics/warning.eps,doc/numpybook/graphics/warning.fig,doc/numpybook/graphics/warning.png,doc/numpybook/mybook.layout,doc/numpybook/numpybook.lyx,doc/numpybook/runcode.py,doc/release/1.9.0-notes.rst
a22bb0e4dd4265216128cfb4796730d1df2b5d94,"BUG: Fix commutativity of {dot,multiply,inner}(scalar, matrix_of_objs)

Fixes #2469 and #4482. Relaxes fail condition to allow subtype as documented.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_ufunc.py
d319c240b9957659d7afa8b333ee6263fe25d930,"yet more word tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
c86a38c318f12fb43d821220b0b6bedba98fab9b,"realized I wasn't so sure of my claim about in-place matrix multiplication, so couch it more cautiously
",doc/neps/return-of-revenge-of-matmul-pep.rst
32de06e34ee071bd3da88d41155472eef37d8a03,"add 'unresolved issues' section; + wording tweaks and a little more elaboration of the problems with mixing np.ndarray and np.matrix
",doc/neps/return-of-revenge-of-matmul-pep.rst
48c77a64aba109de54d90f103203f1990325c37c,"Merge pull request #3908 from juliantaylor/median-percentile

add extended axis and keepdims support to percentile and median",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
08550b9735776e90e4ea0256275cedc92d2bfdcb,"Need to INCREF dtype again since PyArray_NewFromDescr steals a reference
",numpy/core/src/multiarray/mapping.c
7d53c812d3e68ff28320ee7e32bc9816937b4142,"MAINT: revert back to separate median implementation

Merging median and percentile make would break astropy and quantities as
we don't call mean anymore. These packages rely on overriding mean to
add their own median behavior.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
50b60fef378cf6ae99334475141bebca8fe43f50,"Merge pull request #4339 from abalkin/issue-2219

ENH: Implemented ma.append",numpy/ma/core.py,numpy/ma/tests/test_core.py
eea1a9c49024c18fda3ad9782dee3956492cfa1a,"ENH: add extended axis and keepdims support to median and percentile
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
9c4602f98096abed5632d5fd1f12549a2c5b360c,"Merge pull request #4487 from charris/move-swig-to-tools-directory

Move swig to tools directory",MANIFEST.in,doc/release/1.9.0-notes.rst,doc/source/user/c-info.python-as-glue.rst,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc
c7bb1b6f59b3cafe0daafaaf590d597de50a0091,"DOC: Document removal of doc/numpybook in 1.9.0 release notes.
",doc/release/1.9.0-notes.rst
5b97375291b6f2502b3fcdecb1753e067de68880,"MAINT: Remove doc/numpybook.

Remove doc/numpybook. It has become outdated in parts and its contents
is now part of the official numpy documentation.
",doc/numpybook/Figures/contiguous.eps,doc/numpybook/Figures/contiguous.fig,doc/numpybook/Figures/contiguous.pdf,doc/numpybook/Figures/fig1.eps,doc/numpybook/Figures/fig1bw.eps,doc/numpybook/Figures/fig2.eps,doc/numpybook/Figures/fig2bw.eps,doc/numpybook/Figures/hierarchy.dia,doc/numpybook/Figures/hierarchy.eps,doc/numpybook/Figures/hierarchy.fig,doc/numpybook/Figures/hierarchy.pdf,doc/numpybook/Figures/hierarchy.png,doc/numpybook/Figures/threefundamental.eps,doc/numpybook/Figures/threefundamental.fig,doc/numpybook/Figures/threefundamental.png,doc/numpybook/capi.lyx,doc/numpybook/comparison/ctypes/code.c,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/ctypes/newfile.dat,doc/numpybook/comparison/ctypes/timeme,doc/numpybook/comparison/f2py/add.f,doc/numpybook/comparison/f2py/add.pyf,doc/numpybook/comparison/f2py/filter.f,doc/numpybook/comparison/f2py/filter.pyf,doc/numpybook/comparison/f2py/filtermodule.c,doc/numpybook/comparison/f2py/timeme,doc/numpybook/comparison/pyrex/add.c,doc/numpybook/comparison/pyrex/add.pyx,doc/numpybook/comparison/pyrex/c_numpy.pxd,doc/numpybook/comparison/pyrex/filter.c,doc/numpybook/comparison/pyrex/filter.pyx,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/pyrex/timeme,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/comparison/weave/timeme,doc/numpybook/graphics/note.eps,doc/numpybook/graphics/note.fig,doc/numpybook/graphics/note.png,doc/numpybook/graphics/tip.eps,doc/numpybook/graphics/tip.fig,doc/numpybook/graphics/tip.png,doc/numpybook/graphics/tip.xfig.fig,doc/numpybook/graphics/warning.eps,doc/numpybook/graphics/warning.fig,doc/numpybook/graphics/warning.png,doc/numpybook/mybook.layout,doc/numpybook/numpybook.lyx,doc/numpybook/runcode.py
03564ae7499b739920e8aa905389239a8a20f53d,"and yet even more phrasing tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
83f5127eae0c4193782ae0387c17622442cba8dc,"more phrasing tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
dfe6c7ed74c087c0deabfd4f7a50224498840838,"Merge pull request #4473 from Sankarshan-Mudkavi/fix-gh-2208

BUG: Fixes gh-2208, alignment in subarrays",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
ba9da003727a6266f5a996858fe231c7384f7ba2,"phrasing tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
3ede17e917d7fe0af24d88e3675ba1ab6fecd7c2,"more updates based on people's latest suggestions
",doc/neps/return-of-revenge-of-matmul-pep.rst
9472a8d22ec8002d703b783c4cba92778833a287,"clean up in prep for python-ideas
",doc/neps/return-of-revenge-of-matmul-pep.rst
f151004567f61c1a613dd78a87521adf795a4942,"DOC: Document doc/swig move in 1.9.0 release notes.
",doc/release/1.9.0-notes.rst
147c6bb949e5d41fb06322c6ec8e93a2f3513037,"STY: Whitespace patrol on numpy.i.
",tools/swig/numpy.i
a38888c18cd2a20de0eb0578b3fa8660cda79582,"MAINT: Move doc/swig to tools/swig.

Also update MANIFEST.in and documentation to reflect the move. The
discussion of this change is at #2384.

Closes #2384. Closes #4374.
",MANIFEST.in,doc/source/user/c-info.python-as-glue.rst,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc,{doc
4fd4850d6b8bb9a8837e19b7ef2b38d0cd67fdd1,"MAINT: Remove no longer existing files from MANIFEST.in.
",MANIFEST.in
0c82f6995a8d89b7ca8de046d6ae697b07f8a963,"Added tests for fix in alignment of subarrays, gh-2208
",numpy/core/tests/test_dtype.py
12472aab0426b98edbe4dc52f4f48c92d11c99bd,"Merge pull request #4466 from seberg/delay-size-nditer-size-check

BUG: Delay npyiter size check when size may change",doc/release/1.9.0-notes.rst,doc/source/reference/c-api.iterator.rst,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/nditer_templ.c.src,numpy/core/tests/test_nditer.py,numpy/linalg/tests/test_regression.py
424b56efe73c8a372cec61f4d5c22724ec1b4aab,"Merge pull request #4479 from leomao/master

BUG: when initialize a vectorize object, always set self._ufunc to None first. fix #3285.",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
5a3b0abf6da4a7357e24a8243bee14b3cc7a242f,"BUG: Delay npyiter size check when size may change

When a multi index is tracked and RemoveAxis can be called, the
size of the iterator may still change. This was causing failures
for example for the SVD, because the gufunc machinery requires
a temporarily larger iterator for output allocation.

Thanks to Jaime (jaime.frio@gmail.com) for noting that this is
plausible since the size check can be delayed pretty ok up
until GetIterNext (or similar functions).

Closes gh-4442
",doc/release/1.9.0-notes.rst,doc/source/reference/c-api.iterator.rst,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/nditer_templ.c.src,numpy/core/tests/test_nditer.py,numpy/linalg/tests/test_regression.py
aff43c0cb10796de7d6dfcc23bc27607ad2aacba,"STY: change and delete some comments in recfromcsv

Removed two irrelevant comments about code history.

P.S. my first try with Github's online editor.",numpy/lib/npyio.py
42d6a74e1715930a09fc9f5053fc381d4c9cce45,"remove assert in _get_ufunc_and_otypes, add a test in test_function_base.py
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f82fe71457670ea6f5178fc86fc815c3daf6ad17,"Merge pull request #4475 from juliantaylor/gil-release

Gil release for nonzero",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
ff1dd4e9a0e64a7b5f497b2838b0ad8a7d279b92,"Merge pull request #4480 from juliantaylor/error-returns

BUG: add missing gufunc failure return values and missing malloc fail check",numpy/core/src/umath/ufunc_object.c
aa5160480e8571200382dcdaf2c475f3967b9597,"BUG: add missing gufunc failure return values and missing malloc fail check
",numpy/core/src/umath/ufunc_object.c
7add97bcee029ae5269532c33b9531ebf26f89c5,"ENH: release gil for np.packbits and np.unpackbits
",numpy/lib/src/_compiled_base.c
d62c4357b263e8b0cbae9210d5bbe467ddf262b2,"ENH: release gil for np.take and np.arange

implies adapting check_and_adjust_index to allow threadsafe error
reporting.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c
2f8c7a711fb8b86b0f2a81c802efab3984ff61bc,"ENH: Implemented ma.append

Fixes #2219.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
19b2be5292a9be7fce8fb8715b1c0fddc52d96d8,"ENH: release gil for nonzero
",numpy/core/src/multiarray/item_selection.c
390497831094034ad4d0e27d7a0f8ffc6d743542,"MAINT: add NPY_BEGIN_THREAD_NDITER and remove unnecessary needs_api checks

the thread variable is initialized to NULL and checked by the end macro
so the needs_api check is redundant.
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c
3d419a1537446fab061d2774bdedf1e634a0ef31,"when initialize a vectorize object, always set self._ufunc to None first. fix #3285
",numpy/lib/function_base.py
05dfbeeafa243714a7a1c04b1d621f4f58e7c59f,"add copyright notice
",doc/neps/return-of-revenge-of-matmul-pep.rst
3151e78d94f441082a248d78d7576438f9aae11b,"another ReST tweak
",doc/neps/return-of-revenge-of-matmul-pep.rst
09df6397dfac1bf6b31e945e43925a3b6df62ab1,"more ReST fixes
",doc/neps/return-of-revenge-of-matmul-pep.rst
2f0e55b82da5d57d9a10f6bd03fa941faadd23bc,"fix ReST typoes that were breaking footnotes
",doc/neps/return-of-revenge-of-matmul-pep.rst
ebca136800d26971570a66a91ebabacf165ae57a,"phrasing tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
976b50c15876fe0b5d29bb2d32849962e22024b5,"lots better text, more polishing yes
",doc/neps/return-of-revenge-of-matmul-pep.rst
42be275997e56b7e21d3adab5d5a5142876db9f0,"Merge pull request #4474 from juliantaylor/nonzero-bug

BUG: prevent nonzero memchr from running out of bounds",numpy/core/src/multiarray/item_selection.c
cf26fc9a0750782c208b9b116c4f92ca20cf451b,"BUG: prevent nonzero memchr from running out of bounds
",numpy/core/src/multiarray/item_selection.c
60b5dfef5b1679f8d6485dcef402a3d0831b53e9,"Merge pull request #4471 from meltingwax/meltingwax/2552-r2

ENH: Explicitly use __eq__ in assert_equal(a,b)",numpy/testing/utils.py
42354bad13b5565a33e231ccddfdee3dc2a4e685,"much expanded background section, to start addressing feedback from sympy/sage folks
",doc/neps/return-of-revenge-of-matmul-pep.rst
c1031bd7d85f6f16079c685c20d41877107521c6,"ENH: Explicitly use __eq__ in assert_equal(a,b)

Fixes #2552. Changes primary test expression in function.
",numpy/testing/utils.py
2766776c30f87183b5a33b1a3a5772ee3834cd21,"Merge pull request #4370 from juliantaylor/where-improve

ENH: improve PyArray_Nonzero for sparse bool masks",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_numeric.py
61d7a10b7d244e83413747a9f0772e5a50236dfa,"ENH: improve PyArray_Nonzero for sparse bool masks

we already count the number of true elements so we can decide when its
sparse and use faster (4-byte) vectorized npy_memchr.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_numeric.py
81982f83c41049d3eda8499b960fbed1b5a41530,"make the initial section even more overwritten
",doc/neps/return-of-revenge-of-matmul-pep.rst
d369c1a54db44172cbfc50e518eb1e858e62e699,"add some more fields to the Big List o' Fields
",doc/neps/return-of-revenge-of-matmul-pep.rst
d99195e0251ec9a4b6cbff94fa3da7d7d19671a4,"More edits; pretty clean at this point.
",doc/neps/return-of-revenge-of-matmul-pep.rst
3203a058081fc250a75920782200691a20dcf72d,"edit edit
",doc/neps/return-of-revenge-of-matmul-pep.rst
1a977aca329332bfedac82fb17d50984e0097533,"BUG: Fixes gh-2208, alignment in subarrays
",numpy/core/src/multiarray/descriptor.c
4da29a8e7393356094b0eb3289b14360beac9d89,"Merge pull request #4459 from Sankarshan-Mudkavi/fix-gh-1367

ENH: Added an output argument for numpy.outer",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
51fc048a0eb6be3c1a9226b46ece0346e9cb54e4,"Added versiontag to docstring
",numpy/core/numeric.py
0007cd647b66d6d35dd61c308afca7a35b78aa2e,"Merge pull request #4456 from juliantaylor/travis-updates

work around outdated travis boxes",tools/travis-test.sh
b0990170e1974e566402db285d913fc456f3c57a,"Merge pull request #4457 from cimarronm/linalg_lstsq_docfix

DOC: Fixed documentation on lstsq function on when it return an empty re...",numpy/linalg/linalg.py
ea75479ce8b43a14ac8aed23525c767d4e09f97a,"DOC: Fixed documentation on lstsq function on when it return an empty residuals array
",numpy/linalg/linalg.py
bf2a953362b7725e999662b1f5d0ba63f16b28b5,"TST: work around outdated travis boxes

run manual apt-get update to pick up the latest py3 security update
",tools/travis-test.sh
26f053db9d9cf9b4701dc8f4c48f733338635fa7,"ENH: Added an output argument for numpy.outer
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
a6f9b782cd9b60fc1464e6a4a7ef9a7762fcf2d5,"Merge pull request #4451 from meltingwax/meltingwax/revert-4421

BUG: Revert PR #4421: causes SciPy tests to fail",numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py
4b2b77e0b50b3b3ffdb0ea17f38e14d3b8e82ebd,"Revert ""Merge pull request #4421 from meltingwax/meltingwax/4382""

Caused SciPy tests to fail when built with this NumPy.
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py
683bc33d1407509de8c078698727109b3759dc12,"Merge pull request #4450 from juliantaylor/api-restore

BUG: restore api for file npy_PyFile_Dup and npy_PyFile_DupClose",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c
0bf8fecf01336a54d147d9929b38673183eb323a,"Merge pull request #4334 from jspreston/patch-1

numpy.i bugfix: fortran ordering check",doc/swig/numpy.i
ea8975718f7d275dfa2c91bf1de8b3fe6d792d9c,"BUG: restore api for file npy_PyFile_Dup and npy_PyFile_DupClose

breaking the api breaks matplotlib build and pip installation.
Introduce npy_PyFile_Dup2 and npy_PyFile_DupClose2 as replacements
",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c
a509af15328c7f7461934de81e176d559e5fd03c,"Merge pull request #4418 from charris/remove-cython-pyrex-directories

MAINT: Remove doc/cython and doc/pyrex files.",doc/cython/MANIFEST,doc/cython/Makefile,doc/cython/README.txt,doc/cython/c_numpy.pxd,doc/cython/c_python.pxd,doc/cython/numpyx.pyx,doc/cython/run_test.py,doc/cython/setup.py,doc/pyrex/MANIFEST,doc/pyrex/Makefile,doc/pyrex/README.txt,doc/pyrex/c_numpy.pxd,doc/pyrex/c_python.pxd,doc/pyrex/notes,doc/pyrex/numpyx.c,doc/pyrex/numpyx.pyx,doc/pyrex/run_test.py,doc/pyrex/setup.py,doc/release/1.9.0-notes.rst
94a1c20e8153a92ae51f5915468fcff266ab497b,"Merge pull request #4421 from meltingwax/meltingwax/4382

BUG: Fix support for builds with directories that contain whitespace",numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py
2e2bd93641aa505da8206d16d87271e606bb5192,"Merge pull request #4449 from juliantaylor/vectorize-isnan

ENH: vectorize isnan",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
7571ca733d58d2eef0b8cd5f550cab2959b852a9,"Merge pull request #4447 from charris/small-optimization

MAINT: Use static variable in numpy/core/src/multiarray/descriptor.c.",numpy/core/src/multiarray/descriptor.c
fea6079da7929aff63bf8ef59b20e7a04dafcf0c,"Merge pull request #4448 from sviterok/fix_broadcasting_doc

DOC: Update link to EricsBroadcastingDoc",numpy/doc/broadcasting.py
37967930e05700af8ee3b66bdb35c5b8a02d17dd,"ENH: vectorize isnan

isnan on amd64 is equivalent to x != x so we can use the existing code
with only adding a specialization for unary loops.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
30b24450537ae4805c281b29e2aec6674c8880e6,"Merge pull request #4437 from abalkin/issue-4436

BUG: Masked array filled method ignores fill value",numpy/ma/core.py,numpy/ma/tests/test_core.py
342a935d24adf0746a01bfa37fd1cfe696ddc571,"MAINT: remove some duplication in vectorized compare code
",numpy/core/src/umath/simd.inc.src
baf254c3550e5ccea56f939f69bc857c322ec959,"Merge pull request #4446 from juliantaylor/bool-fix

BUG: fix double bool compares not being set to 0x1",numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
9b68fe73947942406dec072d9412310883cdf67c,"Update link to EricsBroadcastingDoc
",numpy/doc/broadcasting.py
18eb88b083779564250cee0fe7a77ae771f996ed,"MAINT: Use static variable in numpy/core/src/multiarray/descriptor.c.

This produces slightly cleaner code. When the const string array is not
static, gcc puts it on the stack and initializes it on every entry.
",numpy/core/src/multiarray/descriptor.c
1dc00021dae1b0b56f6c3435d4e5d7b383228b82,"Merge pull request #4402 from meltingwax/meltingwax/4357

BUG: adds check in dtype.name that string starts with ""numpy."" prefix before removing it (Fixes #4357)",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
6a902a08fe7e777518af730d9af079fd90753081,"BUG: fix double bool compares not being set to 0x1

mask needs to be applied after all packing else the result is the
saturated values (127)
",numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
50bf6df95bdb5e4254719b0a6061cd1cdece2b7c,"BUG: Fix support for builds in dirs with whitespace

Add escaping and quoting of dirs and enabled POSIX support in lexer.

Closes #4382.
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py
460adc0dcbc8782f81b9279a6f7917291d038ee8,"BUG: Fixes SystemError in dtype(user_defined_type).name

Adds an additional check that the ""numpy."" prefix exists before removing.

Closes #4357.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
787fbff92bef3940dc8e10ca657cc983f8cdbbb9,"BUG: Masked array filled method ignores fill value

When string fill value is passed to the filled method of
a masked array with object ('O') dtype, it is ignored and
masked elements are filled with '?' instead.

Fixes #4436
",numpy/ma/core.py,numpy/ma/tests/test_core.py
8722ea095cad0fbe81882727309c814847c78dbf,"Merge pull request #4435 from jaimefrio/compare-doc

DOC: dtype's compare requires aligned, not swapped arrays",doc/source/reference/c-api.types-and-structures.rst
64694a56a203fe0d5ef5ad3d437f1dc5a0ca6a85,"Merge pull request #4428 from jarondl/genfromtxt-doc

DOC: add missing parameters to npyio.genfromtxt, fix #2929",numpy/lib/npyio.py
91fa07e8ec35f613c83afb7bbdcfb8bf9e7861ec,"Merge pull request #4430 from juliantaylor/apply-over-doc

DOC: document equivalence of apply_over_axes and tuple axis ufuncs",numpy/lib/shape_base.py
9d8f31c10530e1f030fb9e64524070fd0b6b59e5,"DOC: dtype's compare requires aligned, not swapped arrays
",doc/source/reference/c-api.types-and-structures.rst
f6800f561ae3d148a4948512caa5ae23f5f27f78,"DOC: document equivalence of apply_over_axes and tuple axis ufuncs
",numpy/lib/shape_base.py
6030f096a34e6bbd6a504b6e4d5f6773a3c54b6e,DOC: two minor typos in genfromtxt,numpy/lib/npyio.py
3e00e0058fb28bf22018d0d641f4a51814f5c9bb,"Merge pull request #4433 from jnothman/patch-4

DOC fix incorrect variable name in example",doc/source/reference/c-api.iterator.rst
b1d5501ee1c8181dcb1b5808dbed4c32e57ec5e4,"DOC fix incorrect variable name in example

Undefined `dataaddr` -> `dataptrarray`",doc/source/reference/c-api.iterator.rst
de6ec889f48c224bddece8ed77faf83ec7e83c2b,"Merge pull request #4429 from juliantaylor/bool-comp-improve

ENH: improve vectorization of float comparisons",numpy/core/src/umath/simd.inc.src
81bb076a6301df2c48aca940ba2754f2091dd149,"Merge pull request #4432 from jaimefrio/getarrayparamsfromobj_doc

DOC: Remove extra reference (&) in PyArray_GetParamsFromObject example",numpy/core/src/multiarray/ctors.c
3f1199bab79e400d76bf0c21e8e0c4befaf3cee4,"Merge pull request #4431 from meltingwax/meltingwax/3311

BUG: Fix deepcopy() of rank-zero arrays.",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
cb92b934dcd39d3bcb176ff65b31fea1dda4c534,"DOC: Remove extra reference (&) in PyArray_GetParamsFromObject example
",numpy/core/src/multiarray/ctors.c
726937e3a3c17bf6253bb78097cf9e48484b8278,"BUG: Fix deepcopy() of rank-zero arrays.

Removed call to PyArray_Return() on return value.

Closes #3311.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
8fca578e615979def5333325068629922c0e415a,"ENH: improve vectorization of float comparisons

Unroll and use pack instructions instead of slowish movemask with lookup
table.
Doubles performance AMD phenoms and about 30% on Intel haswells.
Core2 also gain a few percent.
",numpy/core/src/umath/simd.inc.src
e9afd4091e447fcf90ead63598a4932b6779bf3d,"Merge pull request #4414 from mosessky/master

BUG: fix issue#4354 byte_bounds() bug closes gh-4354",numpy/lib/utils.py
479437d295edde0158cff805c40fe3e5a17d3954,"DOC: add missing parameters to npyio.genfromtxt, fix #2929

`loose` `missing` and `skiprows` were missing from the docstring of
`npyio.genfromtxt`. The later two are actualy deprecated, but were added
nonetheless.
",numpy/lib/npyio.py
4e1bffa7cc430a9275bcc4c9c27a907c78395cda,"BUG: fix ValueError for byte_bounds() on datetime array
close gh-4345
",numpy/lib/utils.py
d4c7c3a69a0dc2458c876dd17a15b1a18b179fd8,"Merge pull request #4423 from charris/fix-documentation-build

BUG: DOC: Fix documentation build.",doc/release/1.9.0-notes.rst
53b17c5422e7a319cf19b8c1f6ebb67844d3a423,"BUG: DOC: Fix documentation build.

The documentation was not building. The apparent cause was a problem in
parsing some `...` constructs in 1.9.0-notes.rst. Some of those
constructs looked intended as links and others just looked wrong. All
uses of `...` were replaced by inline literals ``...`` just to be safe.
I have no idea where or what the actual bug was.

Also spellchecked and reformatted for line length.

Closes #4346.
",doc/release/1.9.0-notes.rst
0013ffb1c438846e83497b2b343e20f9531c27ae,"Merge pull request #4420 from jnothman/patch-3

DOC apply correct documentation to np.ma.argmin",numpy/ma/core.py
028a45c5137d50e553c6784e4f54faf76ac654a1,"DOC apply correct documentation to np.ma.argmin

A typo assigned it the documentation for argmax.",numpy/ma/core.py
dea0beab8c457e80c68c0d2693dbaf27de350d9f,"DOC: Document removal of doc/pyrex and doc/cython directories.
",doc/release/1.9.0-notes.rst
e98811675a61def0fcf255c6994df874a3dd55ea,"MAINT: Remove doc/cython and doc/pyrex files.

Pyrex is obsolete and cython does a good job with Numpy these days.
These directories are not packages, so I don't think they need
deprecation.

Closes #4373.
",doc/cython/MANIFEST,doc/cython/Makefile,doc/cython/README.txt,doc/cython/c_numpy.pxd,doc/cython/c_python.pxd,doc/cython/numpyx.pyx,doc/cython/run_test.py,doc/cython/setup.py,doc/pyrex/MANIFEST,doc/pyrex/Makefile,doc/pyrex/README.txt,doc/pyrex/c_numpy.pxd,doc/pyrex/c_python.pxd,doc/pyrex/notes,doc/pyrex/numpyx.c,doc/pyrex/numpyx.pyx,doc/pyrex/run_test.py,doc/pyrex/setup.py
52bac2cb96fa1ed5cb811303ad5ef402d74e76df,"Merge pull request #4415 from juliantaylor/log1p-expm1-no-c99

BUG: fix non-c99 fallback for np.inf input to log1p/expm1",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
76ecffaf443076c78424213d9e681bdfe5b3f409,"Merge pull request #4401 from meltingwax/meltingwax/4359

BUG: Fix infinite recursion in else case of __format__() implementation (fixes #4359)",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_regression.py
2371f139c2d3b6eabd7eab7c95e875b72a0ec219,"BUG: Fix infinite recursion in str.format of flex arrays (Fixes #4359).

The implemention of __format__ on generic objects (PEP 3101) was changed to use string conversion when no better method is found.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_regression.py
18cda3b66cfb50396c419cd66ae86e2828d03b32,"BUG: fix non-c99 fallback for np.inf input to log1p/expm1

closes gh-4225
",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
0dbd06f95d37e42bea3708954e539db70592e7ea,"Merge pull request #4411 from jyu-rmn/master

typo",numpy/polynomial/polynomial.py
df39aa68fa7e542d4cf9a19d59ecf8708a1da5bb,"Merge pull request #4409 from juliantaylor/partition-doc

DOC: remove mention of quickselect in argpartition docs",numpy/add_newdocs.py
ec3f521c38f83ef98f86f3e2a45a458ef3751330,typo,numpy/polynomial/polynomial.py
da9f29a12e3224da87c84cc36ad16dc932cb517e,"DOC: remove mention of quickselect in argpartition docs

the default algorithm is introselect
",numpy/add_newdocs.py
41a17e8110754efc885af10878e4a57a72293653,"Merge pull request #4377 from ContinuumIO/as_strided_fix

Fix stride_stricks.as_strided function for object arrays",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
4d2aceca643c3f8e8b3edbf9a2172ea4b94a3118,"Merge pull request #4338 from jaimefrio/cross-broadcast

BUG: Fix broadcasting in np.cross (solves #2624)",doc/release/1.9.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
94d35b500fc1e9daacc56e5dfc2d0cda590ea76f,"Merge pull request #4372 from charris/fix-gh-2423

DOC: Fix documentation of normed keyword in histogram2d and histogramdd.",numpy/lib/function_base.py,numpy/lib/twodim_base.py
a4e76451a7c93e2ba521a2205a762b26ed7c4616,"Merge pull request #4376 from charris/fix-gh-2807

DOC: Improve the documentation of numpy.load.",numpy/lib/npyio.py
50da92a6980cd88a39c587c257fe35dc0c470f5a,"Merge pull request #4400 from charris/fix-ufunc-documention

Fix ufunc documention",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/umathmodule.c
64e9f78f529ac0919383bbcec74e3d2a5e7f321e,"Merge pull request #4399 from juliantaylor/mingw-filefix

BUG: enable windows large file support for mingw",numpy/core/include/numpy/npy_common.h
24438fbd45e3d858a5ec48e80dd4b87e8d4bdca4,"Merge pull request #4284 from robquant/histogramdd_rightmost_binedge

Closes issue #4266, fixes histogramdd treatment of events at rightmost binedge",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
e97601d8d35f5221f437efc4434f4d6e2a597cfb,"Merge pull request #4146 from seberg/issue-4145

BUG: Only convert 0d arrays to scalars in power",numpy/core/src/multiarray/number.c,numpy/core/tests/test_umath.py
6bfd6d40d7bac9d4295c88ec59b55e7114c77d3f,"DOC: Document ldexp and frexp.

The documentation needs to be in umathmodule.c as that is where ldexp
and frexp and defined. I moved the current documention from
add_newdocs.py to ufunc_docstrings.py, manually translated them into C
strings, and inserted them into umathmodule.c.

Closes #2354.
",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/umathmodule.c
0a3b146cc95e26f00937c6821bb531f7c33185b4,"DOC: Correct and extend the documentation of fmod and remainder ufuncs.

Closes #3563.
",numpy/core/code_generators/ufunc_docstrings.py
cc380c58f10153bbb07ef4ca75d78f2435dd5cec,"BUG: enable windows large file support for mingw

The (non-lfs) posix api mingw otherwise uses does not seem to work on win32.
The windows lseek prototypes are available in the ancient mingw32 version
we use for our windows binaries but not the fseek/ftell, so they are
defined manually.
",numpy/core/include/numpy/npy_common.h
a22130fad3f2a2c20ca535ebdcc84d27237e4438,"Merge pull request #4396 from juliantaylor/paver-3.4

MAINT: add python3.4 to paver file",pavement.py
b3f497571ebb7eb54065c5e801672f667bc185cd,"MAINT: add python3.4 to paver file
",pavement.py
7e0cd9a45dd81a84cfbcfbe957ae69c5d9ebce76,"BUG: Only convert 0d arrays to scalars in power

Operations such as `x**array([2])` would convert the
2 into an integer and loose the dimension information,
because the array (at this time, it is deprecated),
supports `__index__` even though it is not 0-d.

This fixes it, by not trying the index machinery
when it was an array, since it is unnecessary.

Closes gh-4145
",numpy/core/src/multiarray/number.c,numpy/core/tests/test_umath.py
39f11331744aeb6d8e8cd3c557a1e107d0dac816,"DOC: npyio.recfromcsv keyword argument changes

Added a note to recfromcsv about the `dtype` keyword,
as suggested by @hpaulj. Also added a note to the release notes,
about the change in the `update` keyword, as suggested by @charris.
",doc/release/1.9.0-notes.rst,numpy/lib/npyio.py
3b99f376c9e2d128291c16a896a4b302b75020c1,"TST: Added regression test for recfromcsv dtype error, as suggested by @hpaulj
",numpy/lib/tests/test_io.py
803a75fca8e814b9ba46aef585eefeb94a16325d,"MAINT (API?): organize npyio.recfromcsv defaults

Organizes the default kwargs in recfromcsv. Changes two undocumented
kwargs behaviors:

*  previously, if a user set `names=None`, it was ignored and replaced
   with `names=True`
*  the `dtype` kwarg was ignored. If `update` was given, it was used as
   `dtype`, and if not, None was used. We can retain the `update` behavior
 by using `kwargs.setdefault(""dtype"",kwargs.get('update', None))`.
  This Closes #311 .
",numpy/lib/npyio.py
447c72413da15428bef59a78d2ec3aee663fe4c0,"Merge pull request #4394 from ariddell/patch-1

DOC: Fix typo in np.random.choice documentation",numpy/random/mtrand/mtrand.pyx
615d230aed9af9a5fbeb43fe9a0757831e70bf34,"DOC: Fix typo in np.random.choice documentation

np.random.permutation returns an array, which can be sliced.",numpy/random/mtrand/mtrand.pyx
f1aab14e17a7a92baad4857be6a3bb3c3106e0ec,"Merge pull request #4391 from juliantaylor/cov-array

BUG: accept non arrays in cor and corrcoeff",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
0dbbbd48d79dd4b652e82e76c3b6e3815f254fc6,"Merge pull request #4386 from juliantaylor/sse2-negative

ENH: vectorize negative with sse",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py
df84ecfea50ef33a1259c67c534a09238c0eefc8,"BUG: accept non arrays in cor and corrcoeff

closes gh-4295
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
bf00084478f36926ce17b7fe8fb52d899a2593f6,"DOC, MAINT: Spell check and break long lines in ufunc_docstrings.py.

Some bits are also rephrased and nan is replaced by NaN where
appropriate.
",numpy/core/code_generators/ufunc_docstrings.py
c2afa6213880733ee705aa847755b539ca62fb73,"ENH: Make output of get_atlas_info conditional on system_info.verbosity
",numpy/distutils/command/config.py,numpy/distutils/exec_command.py,numpy/distutils/system_info.py
3870d1ae49c0c55907bda7d65b46b0ce40467ca5,"ENH: vectorize negative with sse

negative on amd64 is the same as absolute except using xor instead of andnot
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py
8c4d9bedd9d85d86c41f956cdb5140e112c2ac08,"Merge pull request #4383 from argriffing/more-versionadded

DOC: some versionadded notes",numpy/lib/npyio.py,numpy/testing/utils.py
a0470bc303f760ee7f14e2d73d150f94599e5692,"DOC: assert_no_warnings versionadded 1.8 -> 1.7
",numpy/testing/utils.py
1f2771cc7170abee173849da7028ed02cb8e531f,"DOC: some versionadded notes
",numpy/lib/npyio.py,numpy/testing/utils.py
3a2f048b830822e8395f0d42c42b8fd395a14204,"Merge pull request #4375 from ContinuumIO/fix_scalar_inherit

Fix scalar inherit",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarinherit.py
a98b6b4ef12d09c51e5c9f015992c5b2ae164607,"Fix stride_stricks.as_strided function for object arrays

Currently, calling as_strided for object array results in 'TypeError: Cannot change data-type for object array.'. Fix so that dtype of new array is only set for void dtype, as originally intended.
",numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
73750e64c62412f26f5188a92f3ea194e0b29600,"DOC: Improve the documentation of numpy.load.

Add the fact that for pickled files, a file-like object must also
support the readline() method.

Closes #2807.
",numpy/lib/npyio.py
3a64972a6220764582b31a6ad3f354e9b1259264,"Add test-case for multiple-inheritance on an array-scalar.
",numpy/core/tests/test_scalarinherit.py
149359fe0d19b9ce6845dca062a7f7d5bb48f0b7,"Fix infinite recursion when initializing sub-class of array scalars.
",numpy/core/src/multiarray/scalartypes.c.src
33925293da281ee89137bf69a1951e3da022e03e,"DOC: Fix documentation of normed in histogram2d and histogramdd.

The documentation misrepresented what happened, leaving out division
by the total number of sample points.

Also run spellcheck over function_base.py and twodim_base.py and break
some long lines.

Closes #2423.
",numpy/lib/function_base.py,numpy/lib/twodim_base.py
2943c43d855fc5a047a5fd39330306b873eab670,"Merge pull request #4191 from juliantaylor/openblas-info

BUG: get_info('openblas') does not read libraries key",numpy/distutils/system_info.py,site.cfg.example
997f65e1b2539b8d51221bee38ae1f2a78d804f3,"Merge pull request #4333 from charris/fix-gh-2312

Fix gh 2312",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/convert.c
5100498ea6bdb4522b48550aad8841687586095a,"Merge pull request #4302 from charris/fix-gh-605

BUG: Make interp return NaN at NaN interpolation points.",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
8ce3640cb85abfc9a0c7fb55f30957e5224718a4,"Merge pull request #4336 from Sankarshan-Mudkavi/fix-issue-3504

Fixed issue 3504",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
87a9d5cba6caa7870de7b4dd195368d2fc39d38f,"Merge pull request #3984 from ContinuumIO/promote_types_fix

Fix promote_types for strings and numbers",doc/release/1.9.0-notes.rst,doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_shape_base.py
ba1e4df00d67e9fceec63a072e641942f98858e6,"BUG: Fixed issue 3504, and added tests for complex support
",numpy/core/function_base.py,numpy/core/tests/test_function_base.py
1f9d4d2613d7c8bccf7e16720e8d0fa87e74e34a,"BUG: Fix promote_types, can_cast, as astype issues

- promote_types does not return correct string size for integer and string arguments. Fix so that integer and string types are promoted to string type that is long enough to hold integer type safely cast to string.
- can_cast incorrectly returns True for certain integer and string types. Fix so that can_cast only returns True if string type is long enough to hold integer type safely cast to string.
- calling astype to convert integer to string should fail if string type is not long enough to hold integer converted to string and casting argument is set to ""safe"".
",doc/release/1.9.0-notes.rst,doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_shape_base.py
5a44a9f4e7cc37482dea650bec2c31087ea7756c,"Merge pull request #4361 from juliantaylor/py3.4-travis

TST: switch i386 build to python3.4 defaulting ubuntu 14.04",.travis.yml,tools/travis-test.sh
2872bf7a7433697483eba0030c67ae27c8f7914e,"TST: switch i386 build to python3.4 defaulting ubuntu 14.04

to do that fix a missing $DIST variable usage in the test script
",.travis.yml,tools/travis-test.sh
07ef37039541f7c1167c234f44f83504bee5ad4c,"add negative power support to @@
",doc/neps/return-of-revenge-of-matmul-pep.rst
56eb28ed29573d644696743804decf3a8d3260fc,"Merge pull request #4364 from argriffing/triu-broadcasting

ENH: tril and triu broadcasting",doc/release/1.9.0-notes.rst,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
e4c274f70cf7d7109214b1811bda61e151f727d9,"DOC: triu/tril broadcasting release notes
",doc/release/1.9.0-notes.rst
249c38e7e899803c3697bf81707f4f446a67c60a,"ENH: tril and triu broadcasting
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
9573f78c274933e3fead0ce0e976d015764d585b,"Merge pull request #4362 from njsmith/master

[DOC] Fix small inaccuracy in broadcasting docs",numpy/doc/broadcasting.py
3b94837afe99022a4c24a055cc2fe26754c78653,"move intended usage section after motivation
",doc/neps/return-of-revenge-of-matmul-pep.rst
c13e2eb59130af8d6242426822b32c9f65f1d025,"more edits
",doc/neps/return-of-revenge-of-matmul-pep.rst
f8bcb8802af1b5ba5b4c9a67109095e8072a041a,"[DOC] Fix small inaccuracy in broadcasting docs

During broadcasting, dimensions with size 1 can be matched against 0-sized dimensions, and in this case it's the size 1 dimension that will be shrunk away to nothingness. So it's wrong to say that the *smaller* dimension is the one that changes.",numpy/doc/broadcasting.py
2d152aff963cc325a32c65e4dd1b0e2e87fba4b2,"DOC: Added note to 1.9.0 release notes
",doc/release/1.9.0-notes.rst
dd8fa826c1cafc819a0590714b8d813d73ae17d5,"tweak tweak
",doc/neps/return-of-revenge-of-matmul-pep.rst
9a7a9f06727858f8de126c2319aeb6181a5a1caf,"more text tweaks
",doc/neps/return-of-revenge-of-matmul-pep.rst
76b1f2c8185f314335bee5844e35865489324fe0,"switch to just use text for the table, it's easier to read!
",doc/neps/return-of-revenge-of-matmul-pep.rst
5bb44e47ed7359ffb0c51a9fdabde381107fdb01,"more table format tweaking. too bad .rst sucks at this!
",doc/neps/return-of-revenge-of-matmul-pep.rst
8041598a6be5d9944e1969da8e5840a7631378bb,"bold the 'dot' row of table
",doc/neps/return-of-revenge-of-matmul-pep.rst
1199a313e64238f87ecbccbed504bb8134da5b9e,"add mention of ellipsis
",doc/neps/return-of-revenge-of-matmul-pep.rst
703fcc60c69974e2ec860e39583dc5d2dccb788c,"Many updates to draft PEP incorporating feedback
",doc/neps/return-of-revenge-of-matmul-pep.rst
64473572d9ce6c981c921667e5c558a2f1612e1f,"initial commit of new infix matrix multiply PEP
",doc/neps/return-of-revenge-of-matmul-pep.rst
b5c62f81a2dd8af8f8d507eb990d5f4efc77ee5f,"Merge pull request #4348 from juliantaylor/rand-int-check-bug

BUG: handle non integer types for multinomial/dirichlet size",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
826d13702dd28cff729595e37658611f4719067b,"Merge pull request #4350 from seberg/buffer-fixes

Buffer fixes",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/numpymemoryview.c
6c4e64204df6f336b617ff0447d0ea104cdf1ae6,"BUG: Hang on to originally filled Py_Buffer view.

When filling the python buffer view object, python sets
view.shape = &view.len (ndim=1, so this works). If we copy
the view info into our Memoryview object instead of having
it directly filled &view.len points into nirvana.

Closes gh-3175
",numpy/core/src/multiarray/numpymemoryview.c
e067e6b0cbdc45cb0ad4073b18cb18492810b035,"BUG: Whitespace stripping in pep3118 format parser and early free

Closes gh-3348
",numpy/core/src/multiarray/buffer.c
d2fd1af156ac095156d3fbf833392b644e61c226,"Merge pull request #4288 from nh2/fix-seterr-examples

Mistake in seterr docs?",numpy/core/numeric.py
65a73df664ff5ac9da942b2d8f8b2737867ca82a,"Merge pull request #4344 from jaimefrio/unique-sort

BUG: Fixes #2799",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
2882cc96639787335d135bf1fc10e1174c83831f,"Merge pull request #4347 from juliantaylor/partition-max

ENH: add max fastpath to partition for nan detection",numpy/core/src/npysort/selection.c.src,numpy/core/tests/test_multiarray.py
bf5fd54026a54358dc1602446af8b406bb51d99c,"Merge pull request #4349 from juliantaylor/warning-maint

MAINT: fix a bunch of compiler warnings",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/private/npy_binsearch.h.src,numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
4dcfcc5f58140c5f09fde8fae90720e32f7d3096,"MAINT: fix a bunch of compiler warnings
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/private/npy_binsearch.h.src,numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
fdb219f58740748229c2142c5643e79ae1c27d69,"BUG: handle non integer types for multinomial/dirichlet size

Closes gh-3173
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
a676f4eb6c0935686254af62d4e32e88361727a4,"ENH: add max fastpath to partition for nan detection

Allows low overhead check for NaN via isnan(partition(d, (x, -1))[-1])
",numpy/core/src/npysort/selection.c.src,numpy/core/tests/test_multiarray.py
a712c675d15385dc1cc3953a93423223d58d368d,"BUG: Fixes #2799
Use `np.sort` instead of `sorted` when the input is a list and no indices
are requested. Fixes #2799.
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
8a4ff790cc5f6b643c71ba94316058546a506ebd,"DOC: update openblas fork warning with fixed pthread build info
",site.cfg.example
5dbf5278f30d1b63388ab0af50e51d10ee54b9e7,"BUG: get_info('openblas') does not read libraries key

The documented libraries tag in the site.cfg is not read by the configuration,
instead openblas_libs is used, this is inconsistent with atlas configuration.
So libraries first and then try openblas_libs for backward compatibility.

Also ensure check_libs returns None instead of a dict of empty lists if
nothing is found.
",numpy/distutils/system_info.py
dd857489fcaa745ea569c523249fe37537bfe280,"Merge pull request #4342 from seberg/issue-4340

TST: do not use ""ignore"" to filter warnings",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_nanfunctions.py
fd399aaee5b703744f508fb2ce4718e1f4bc8984,"TST: do not use ""ignore"" to filter warnings

When a warning is ignored (or raised once) in python, the warnings
module will tag on a `__warningregistry__` dictionary to be able
to filter these warnings in the future. This is tagged on to the
current context, causing leakage to later calls (this is a bit
more complex, since where the registry ends up depends on the
layers between the original caller and warner).

In short, tests should typically not use ignore but catch the
warnings to avoid changing the user experience (or errors
on duplicate test runs).

Fixes an error on duplicate test runs (does not remove all
""ignores"" which may change behaviour outside tests).
Closes gh-4340
",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_nanfunctions.py
e31da35c5f23968e2cbfae06642ce32dc54e7627,"TST: Added out of bounds axis checking to the tests.
ENH: Minimize temporary intermediate arrays using a preallocated
     output array and in-place operations.
DOC: Added 'Supports full broadcasting' note to the docstring.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
b9454f50f23516234c325490913224c3a69fb122,"BUG: Fix broadcasting in np.cross (solves #2624)

Changed np.cross to move the axis it's operating on to the end, not the
beginning of the shape tuple, and used rollaxis, not swapaxes, so that
normal broadcasting rules apply.
There were no tests in place, so I added some validation of results and
broadcasted shapes, including the one reported in #2624
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
aa615ad086989a7fe3900dd6921e83ff5ab02814,"numpy.i bugfix: fortran ordering check

for ARGOUTVIEWM?_FARRAY[34] typemaps, the included require_fortran check was inverted -- failing if the resulting array had fortran ordering, not if it did not.  This modification inverts these checks.",doc/swig/numpy.i
34d7bee3d472e5b97c1ea7c8d7e8d9949a9ebc16,"Merge pull request #4315 from charris/fix-gh-2408

BUG: #2408, Fix f2py Python 3 error message string bug.",numpy/f2py/src/fortranobject.c
d54b6784501de8aef405794f20cf1f4b3941c68f,"Merge pull request #4305 from charris/fix-gh-4256

BUG: #4256: f2py, PyString_FromStringAndSize is undefined in Python3.",numpy/f2py/cfuncs.py,numpy/f2py/src/fortranobject.h,numpy/f2py/tests/test_callback.py
7daf5cd7569f02daa8f71805ea499fdf899d35d0,"DOC: Document tofile exception changes in 1.9.0 release notes.
",doc/release/1.9.0-notes.rst
1058717613f6932d37744f192c35c803fa603724,"MAINT: #2312, Make all tofile failures raise IOError.

Fix two that were raising ValueError instead.
Make some style cleanups.

Closes #2312.
",numpy/core/src/multiarray/convert.c
0178b12f3cd9804df066d0045a75180177962831,"Merge pull request #4321 from juliantaylor/half-sum-fix

BUG: fix initialized half sum",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
5803ec43faf46d5117ddddfc7026f098ea5b3b89,"Fix seterr example for resetting to old settings
",numpy/core/numeric.py
3aaf365b34158ceca0f80cb42e64a7e362302214,"Merge pull request #4329 from seberg/index-casting-rule

BUG: Index arrays need to be cast with SAME_KIND or FORCE casting",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
c513585f5a5eb16fc5d06f161de89a5989f3537d,"BUG: Index arrays need to be cast with SAME_KIND or FORCE casting

When checking index arrays for out of bound values, safe casting
was used. In principle this is unsafe, but we need to support indexing
with a 64bit integer array on 32bit systems.

Closes gh-4328
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
8997167e0de90b7132787ff869ba7988783bb133,"Merge pull request #4325 from charris/memmap-has-no-close

DOC: Remove close method from memmap docstring.",numpy/core/memmap.py
8a38f647215acc63bc2e953103f5d649a7c093f9,"DOC: Remove close method from memmap docstring.

Memmap objects no longer have a close method.
",numpy/core/memmap.py
871c73b181706937ef7e14aecb24b23f65ed0993,"BUG: fix initialized half sum

pairwise summation added in 1.9 broke half sums if the first element is
initialized non-zero. E.g. d += x
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
b5b47b144c78351f49b46731ccdb0de6ddf1276d,"Merge pull request #4316 from charris/fix-gh-4092

DOC: Remove \n from strings in plot examples.",numpy/lib/twodim_base.py
5db04dbce769463b0d3d1c069ae0a2d1ceeed05d,"DOC: Remove \n from strings in plot examples.

The \n occur in plot titles and mess up the generated html. An
alternative fix would be to use a raw docstring or \\n, but here
it looks simpler to just delete the problem.

Closes #4092.
",numpy/lib/twodim_base.py
b69ee4443c36d1b0f86f7c96fef8727e931c87bb,"Merge pull request #4309 from venthur/master

Mention `compress` in `take`'s See Also docstring",numpy/core/fromnumeric.py
1f8a78d97ec7273c0a75b7b010dab5cb692a3a98,"Merge pull request #4313 from MarcCote/master

Update c-api.array.rst",doc/source/reference/c-api.array.rst
1b83d85bc4cfaccb12295d993c5a12e5c4029030,"BUG: #2408, Fix f2py Python 3 error message string bug.

The original was generating an exception message and, after aliasing,
calling PyBytes_AsString on a unicode string -> error. It was also
leaking references, although that probably didn't matter in context.

The fix here is on the cheap side, just use a C string for the message
without including the extra information about the erroneous type that
led to the exception.

No test, I don't know how to evoke this error.

Closes #2408.
",numpy/f2py/src/fortranobject.c
1ca2c00862a08b0addf800748b30162e858e0a4c,"Update c-api.array.rst

Add a note explaining the ``out`` parameter of some functions.",doc/source/reference/c-api.array.rst
297f54b28e09666ef6a514498c6949aacd4494d5,"Merge pull request #4303 from charris/fix-gh-588

DOC: Typo, replace PyArrayDescr_Check by PyArray_DescrCheck.",doc/numpybook/capi.lyx,doc/source/reference/c-api.array.rst
64f730db2edc65e23883c7052f198d2e77a113b6,"Mention `compress` in `take`'s See Also docstring

closes #3620
",numpy/core/fromnumeric.py
25ac48f98e5a12d653963a2da4607ba5cac3bffa,"Merge pull request #4299 from juliantaylor/win-tempfile-fix

Windows tempfile fix",doc/f2py/f2py.1,doc/source/f2py/usage.rst,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py
2a8eea93f8fa8294448224e84276358ab2cd3b23,"Merge pull request #4304 from charris/fix-gh-3332

DOC: Document that fliplr only works on 2-D arrays.",numpy/lib/twodim_base.py
d1dc51bea3c46b99e4f4fb38b7b31f66c93dc18b,"DOC: Document that fliplr only works on 2-D arrays.

Docstring claimed 2-D was not required, but it is. Fix that.

Closes #3332.
",numpy/lib/twodim_base.py
ddcb49e5f779a9e42356914b9ec4162b722d4ab0,"BUG: #4256: f2py, PyString_FromStringAndSize is undefined in Python3.

Use PyUString_FromStringAndSize defined in npy_3kcompat instead. Not
using bytes may cause some problems, but strings seem like a better
choice. As modules generated with current f2py error out, this
particular use is not common and we are free to choose.

Closes #4256.
",numpy/f2py/cfuncs.py,numpy/f2py/src/fortranobject.h,numpy/f2py/tests/test_callback.py
a5000520ff4dcdb15b817d9d85464cdf2b943674,"DOC: Typo, replace PyArrayDescr_Check by PyArray_DescrCheck.

Found by trac user komnomnomnom.

Closes #588.
",doc/numpybook/capi.lyx,doc/source/reference/c-api.array.rst
68ae04741f73953ef5680cb80fbb3dde5f160c90,"Merge pull request #4300 from charris/fix-gh-636

BUG: Fix typo in f2py/cfuncs.py.",numpy/f2py/cfuncs.py
1c2ac8fd02cf6db60b2e15ec994b8febe025424a,"BUG: Make interp return NaN at NaN interpolation points.

A NaN interpolation point was interpreted as out of bounds on the left
side, hence the value of the left parameter in the function call was
returned.

>>> np.interp(np.nan, [-10, 10], [-2, 2])
-2.0

NaN is a better choice.

Closes #605.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
1f2f6b67e4e0dd77ab0fbb8f40df7553b912c42b,"BUG: Fix typo in f2py/cfuncs.py.

Replace ""insinged_long_long"" by ""unsigned_long_long"". Patch due to trac
user pepijndevos.

Closes #636.
",numpy/f2py/cfuncs.py
5669280ac3535c3fed083fcb1fedef2064d227fd,"DOC: remove mktemp mention from f2py manpage
",doc/f2py/f2py.1,doc/source/f2py/usage.rst
f7b0265655725267063ed25478aa7c2ab20b3a85,"TST: avoid opening files twice which doesn't work on windows
",numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py
2868dc4a0513f58eafc013f3ba3d84ae07113199,"Merge pull request #4105 from seberg/deprecate-boolean-math

DEP: Deprecate boolean math operations",numpy/core/code_generators/generate_umath.py,numpy/core/numeric.py,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
ab04e1ae0e8eca717bc7e42f3b0a60c9ff764289,"BUG: Force allclose logic to use inexact type

Casting y to an inexact type fixes problems such as
abs(MIN_INT) < 0, and generally makes sense since the allclose
logic is inherently for float types.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
e246cc79de16d54ce9b127d5faf625adb6da5f0b,"Merge pull request #4095 from seberg/descr-shape

BUG: Error checks for the dtype shape.",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
b5553b5af835d4581d503f99040749d2f11afd31,"Merge pull request #4298 from charris/fix-gh-3146

BUG: Fix wrong variable in test_build.py exception.",numpy/linalg/tests/test_build.py
76195c789a236e5b5f3520f3eced6be31384497a,"Merge pull request #4289 from seberg/speed-regression-fix

BUG: Fix performance regression for PyObject_Get/SetItem",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/tests/test_indexing.py
3248aa7d59afbb4c649ffd40e95b17e63de77c94,"BUG: Fix wrong variable in test_build.py exception.

The variable used was not defined, causing an error when the exception
was raised.

Closes #3146.
",numpy/linalg/tests/test_build.py
7bc5480be36e6527dca34a303b6cd6411c345b05,"BUG: Raise some out of bound negative index in PySequence_GetItem

PySequence_GetItem and PySequence_SetItem already fix a negative
index, so that we do not need to fix it as well.

Also clean up a little/doc fixes
",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/tests/test_indexing.py
e3f0f53685ccf5a942d7a883ea5a947c1b411aa1,"Merge pull request #4296 from juliantaylor/fasttake-microopt

minor fasttake performance improvement",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.h
fd4bf676686ea20bb46797a665af36d974fc8415,"ENH: explicitly mark invalid index branch as unlikely

gcc already detects this as unlikely but it might profit other
compilers.
",numpy/core/src/multiarray/common.h
86316b93e865bb06a5da14903e6f4c8330abb106,"ENH: hint that nelem == 1 branch is more likely

improves performance for simple takes by 10%, chunked takes spend more
time copying so the less dense code matters less.
",numpy/core/src/multiarray/arraytypes.c.src
33337281067bb1253f737b707fc783f6a6455e04,"Merge pull request #4257 from juliantaylor/tostring-depr

ENH: add tobytes and stop using tostring in documentation",doc/numpybook/capi.lyx,doc/numpybook/numpybook.lyx,doc/release/1.9.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/routines.ma.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/doc/byteswapping.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/format.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/matrixlib/tests/test_defmatrix.py
9f8771accdc11a83dc928a99bd0ba48fe7bcca89,"BUG: Fix performance regression for PyObject_Get/SetItem

Also restructures the calling conventions a little to channel
all calls through the general functions, this will add a little
overhead and could be streamlined if necessary.
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_indexing.py
792d1aeaa58bd8b7ff2688cc7dbf406bc1828b22,"Merge pull request #4294 from juliantaylor/fix-longdouble-int

BUG: fix NULL dereference on longdouble conversion error",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarmath.py
59057c77340b52e1803733895e04008a9e6973f8,"BUG: fix NULL dereference on longdouble conversion error

Closes gh-627
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarmath.py
95d70839de854a6a42d9507658e42bfc440ac739,"Merge pull request #4292 from juliantaylor/ramdisk-chroot

TST: bootstrap chroot in tmpfs",tools/travis-test.sh
db198d5a3d31374985a24d3c44c88c356d0b3a3e,"Merge pull request #4244 from jaimefrio/binsearch

ENH: Type specific binary search functions for `searchsorted`",doc/release/1.9.0-notes.rst,numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src,numpy/core/tests/test_multiarray.py
0e9956e67192db7c7e42b76661f210fd3adddbfd,"Merge pull request #4286 from juliantaylor/flex-shuffle

BUG: fix shuffling of flexible dtypes and masked arrays",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
09aef175ca454975e723f08733593e43026982d5,"TST: bootstrap chroot in tmpfs

during bootstrap eatmydata is not available in the chroot so it takes a
significant time. Avoid this by placing the whole chroot in a tmpfs
ramdisk.
",tools/travis-test.sh
31967d2bdd83ab84ffd15d63767c6bec7aec3e79,"Merge pull request #4290 from ceball/dsplit_errmsg

DOC: Fix typo in a dsplit() error message.",numpy/lib/shape_base.py
0981867cf1d7b5adab4db46d601365400ed52892,"BUG: fix shuffling of flexible dtypes and masked arrays

closes gh-4270 and gh-3263
also regenerate with cython 0.20.1
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
f02ed1a95cab2f9d4d002abf0bc4d76df89548a7,"DOC: Fix typo in a dsplit() error message.
",numpy/lib/shape_base.py
9350d4dc9cc5a8288c965008c8dd6034c991289a,"MANT: Minor style corrections, `get_(arg)binsearch_func` is no longer inline.
DOC: Added note on `doc/release/1.9.0-notes.rst`
",doc/release/1.9.0-notes.rst,numpy/core/src/private/npy_binsearch.h.src
c4c139bba033c420a6edbe585b2846426e3e694c,"Fix histogramdd treatment of events at rightmost binedge

Fixes Github issue #4266
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
58e9e27c0c110f9be1558a53fb547dc1abc76fa4,"DEP: Deprecate boolean `-` operations

Boolean - is not well defined, especially the unary and
binary operator are not compatible. In general boolean
minus seems to have no real application and does not do
what might be expected.

All ""allclose"" type functions (numpy, tests, masked) have to
now check for boolean to avoid the deprecation warning. In
the future one could think about removing it again and just
allowing the upcast.
",numpy/core/code_generators/generate_umath.py,numpy/core/numeric.py,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_regression.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/testing/utils.py
f57c77b88a735d5f49a407881777ff2e9f3b1be2,"Merge pull request #4282 from jaimefrio/bincount-minmax

ENH: single pass over array in `bincount` to determine output size",numpy/lib/src/_compiled_base.c
b8a6eb61ffa3199ced987d44aeb331dcff299eb7,"MANT: separated initial assignment for `min` and `max`
",numpy/lib/src/_compiled_base.c
9dcdb57792d9b03144b55ebe84bc97b32af6c1db,"ENH: single pass over array in `bincount` to determine output size
`bincount` checks its input array to make sure there are no negative entries,
and to determine the size of the output array. This is done by calling two
different functions, each having to loop over the whole array. This PR
adds a new function, `minmax`, that computes the minimum and maximum of the
array in a single pass over it. This leads to speed-ups peaking at 1.5x,
with typical values for large arrays around 1.15x - 1.25x.

A full benchmark summary of the new implementation, including a supposedly
more efficient algorithm that turned out to run slower, can be found [here](https://gist.github.com/jaimefrio/8743836).
",numpy/lib/src/_compiled_base.c
05c5177885133cdf4831ffa795c2f9c033316848,"MAINT: Added `NPY_VISIBILITY_HIDDEN` to binary search functions in
       `binsearch.c.src` and `npy_binsearch.h.src`.
",numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src
688b243552cc98d8e1be791eeda3fba81bfbe807,"Merge pull request #4279 from juliantaylor/symbol-cleanup

MAINT: hide symbols that shouldn't be exported",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/shape.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/private/npy_partition.h.src
58ffcdc62b1db9d6c762a82ca483484a5cd7c92b,"Merge pull request #4247 from jaimefrio/digitize-monotonic

BUG: check for monotonic bin arrays in digitize",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
c8975ff262292d760b533bb433de50b686b15f9e,"MAINT: rewrote `check_array_monotonic` following @charris suggestion to
       minimize indexing.
",numpy/lib/src/_compiled_base.c
6a6d53c962e7455481dcb0899d46217549f76e65,"MAINT: hide symbols that shouldn't be exported
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/shape.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/private/npy_partition.h.src
e2addbd77fbed5aa64a07f9b08e217c63e15467f,"Merge pull request #4276 from charris/fix-stat-methods

BUG: Fix mean, var, std methods for object arrays.",numpy/core/_methods.py,numpy/core/tests/test_multiarray.py
2facd5cbdcaa08b61270c0c0760a39cd03acc007,"ENH: add tobytes and stop using tostring in documentation

tostring returns bytes which are not equal to string, so provide a
tobytes function alias.
tostring does not emit a deprecation warning yet so rdepends do not need
to check two names to support older versions of numpy without warnings.
",doc/numpybook/capi.lyx,doc/numpybook/numpybook.lyx,doc/release/1.9.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/routines.ma.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/doc/byteswapping.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/format.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/matrixlib/tests/test_defmatrix.py
4d686a1e44462c34b60de9049dd499aed60de643,"MAINT: Remove checks for presence of decimal module.

The decimal module has been available since Python 2.4 and we no
longer support Python earlier than 2.6.
",numpy/core/tests/test_multiarray.py
4ebf25e1e3b3b0c8619cce395a96d0dffa9e4e8a,"BUG: Fix mean, var, std methods for object arrays.

This takes care to preserve the object type for scalar returns and
fixes the error that resulted when the scalar did not have a dtype
attribute.

Closes #4063.
",numpy/core/_methods.py,numpy/core/tests/test_multiarray.py
f65593dd69cae9b0fb30c06c07868dafb8436d11,"STY: adapted code to `C_STYLE_GUIDE.rst.txt`.
MAINT: rewrote `check_array_monotonic` to use array indices, not pointers.
TST: tests for proper handling of bins with all items almost equal now check
     the return value for correctness, not just that an error is not raised.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
e672f8aa06f54c2835c43a819f3954d80c04501b,"STY: adapted code to `C_STYLE_GUIDE.rst.txt`
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src
bd5894b29b897f16da8a3d64e0df94e93d6b2d4a,"Merge pull request #4274 from arunpersaud/ap/rfft-doc-fix-typo

DOC: fixed small type in rfft notes",numpy/fft/fftpack.py
de6729d5499b7d93f9ee78f2800476fef9323c35,"Merge pull request #3798 from seberg/new-index-machinery

ENH: Reimplementing the indexing machinery",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_function_base.py
09d0520b58df0054880465b7ceae0e83a3b8e421,"Merge pull request #4273 from juliantaylor/test-file-leak

TST: clean up tempfile in test_closing_zipfile_after_load",numpy/lib/tests/test_io.py
6a7da266ca6a55b0439117ae654664d51ebff19e,"Merge pull request #4267 from juliantaylor/fuzz-test

BUG: add more malloc failure checks",numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/ufunc_object.c
df66018e576dfbf25a82e7f4399350bae57eef5c,"Merge pull request #4271 from juliantaylor/big-file-test-fix

TST: fix test_io.TestSavezLoad",numpy/lib/tests/test_io.py
b93b49314803a8d57fd7580a2225036bd0325880,"BUG: fix use of capi without gil in ufunc.at

without a pointer to store the error NpyIter_ResetBasePointers uses
python errors to signal problems which requires the GIL.
",numpy/core/src/umath/ufunc_object.c
cedc9c4995afa0e9386c5b741cbc99c5543c806c,"BUG: fix missing memory allocation failure checks
",numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalarapi.c
8225401e7b1a4ddeac6dcb53ffbf7a35535b3b94,"DOC: fixed small whitespace error in rfft notes
",numpy/fft/fftpack.py
d5b4a8110ae8cfbee9bbaedaf68fe1a3cbd35a6d,"- removed unused `store_arr` variable from `PyArray_SearchSorted`.
",numpy/core/src/multiarray/item_selection.c
0970b672c49b835623f7e228ac3eb76569665962,"- initialize `last_key_val` to first value in `key` to avoid compiler warnings.
",numpy/core/src/npysort/binsearch.c.src
8296aa0b911c036c984e23665ee0f7ddca579b91,"TST: clean up tempfile in test_closing_zipfile_after_load
",numpy/lib/tests/test_io.py
524b9eaa33ec67e34eb31a208e02bb934f778096,"TST: fix test_io.TestSavezLoad
",numpy/lib/tests/test_io.py
e4103716d0ae5613721de63c91980b6c15d9a9dc,"- Refactored code, to have type specific and generic binary search functions
  share signature. `get_(arg)binsearch_func` now handles finding the right
  function for all cases, making it transparent to `PyArray_SearchSorted`.
- Reordered types in `(arg)binsearch_map` to be sorted by type num. Since
  the function is searched using binary search, this is a requirement. Only
  `npy_half` was out of place. Added comment to remind future expansions.
- Corrected reference counting for `dtype` in `PyArray_SearchSorted`.
- The requirement for a coniguous `sorter` array had been dropped, but the
  stride for it was set to the element size. This created an opportunity for
  a very unlikely bug, that is now corrected. Added test to verify it.
- Removed unused includes from `binsearch.c.src` and `npy_binsearch.h.src`.
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src,numpy/core/tests/test_multiarray.py
6c866c561f1cfd632a8cb08c525f868766d8858b,"BUG: fix two missing array creation failure checks
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/nditer_pywrap.c
d554c2954b82b120ce77c1fd9a74c4deb85503a3,"BUG: Fix common.h convert_shape_to_string.
",numpy/core/src/multiarray/common.h
636e70be1e215f9e64831cf0b2e7020d4c30f4c8,"- Modified generic searches to take a PyArrayObject and use its PyArray_DESCR
  to fetch a compare function, rather than the global state function that
  the sort functions take.
- Added get_genericbinsearch_func and get_genericargbinsearch_func to
  npy_binsearch.h.src, to get a function pointer to the right generic type
  search function. This makes the code in item_selection.c easier to follow,
  I think.
- Littered PyArray_SearchSorted with comments with my ref counts for dtype,
  hopefully I got it right this time.
",numpy/core/setup.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src
f2d06ceb03490d60a5720581f2a0bef75cb9ce89,"Merge pull request #4261 from ahmadia/allow_vendor_compiler_versions

BUG: Detect vendor versions of GNU Compilers",numpy/distutils/fcompiler/gnu.py
aba22aaa11df747f1587bb3f5bb0fd79daa71511,"BUG: Fix statement before declaration in mapping.c (again...)

Undid it by accident.
",numpy/core/src/multiarray/mapping.c
35a5639b432960708a2873a672704bc7ec2fb039,"DOC: Add some examples to the indexing change release notes
",doc/release/1.9.0-notes.rst
b292046ca2448d6d5059a4a835f9188d15badb0f,"MAINT: Comments from charris and some extra documentation
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_constr.c
98b1892b3ec87f37ad15b289177bf5b83feed56f,"BUG: Fix statement before declaration in mapping.c
",numpy/core/src/multiarray/mapping.c
c3eb6c549c91ce5f66a514788c7924e671c0fe9c,"BUG: Skip must check SIZE and NDIM...

Found by pandas tests...
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_indexing.py
9635b48428f9c06aa0fdd30d46dbf9e6738240da,"BUG: Move 0-d array-is-scalar special case into array branch

This should also fix array-likes
",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
97e9053ef7da4d6f8b4fef175604b1fdb0e5e28a,"DOC: Minor release notes changes
",doc/release/1.9.0-notes.rst
d1cf9054705ab2fbd5193c9bf970b3b655076ff5,"MAINT: Remove old undefs in mapping.c
",numpy/core/src/multiarray/mapping.c
628e0efd4356dc9488bc79cbe28f905a72839998,"DOC|MINOR: minor fixes to release notes indexing part.
",doc/release/1.9.0-notes.rst
e0b28df9fa386b6aa8f439a5949e984c90a8320d,"MAINT: move npy_index_info into mapping.h
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.h
4e92b2b4d6a8e09dbbc659fa1a721550c7bd9c8d,"TST: Fix buggy ref-count test
",numpy/core/tests/test_indexing.py
b99396899cfba88ee51ef7a09e69c03bb0979212,"DOC: Add indexing info to release notes
",doc/release/1.9.0-notes.rst
4836b6526e1cc4f5cad473fbeb91cbbc72bf5e3c,"TST: Simple indexing subspace broadcasting test.
",numpy/core/tests/test_indexing.py
4cc60668976c7ecf88e7c5776d0e159c113bb899,"STY|DOC: Small fixes
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
44c1f7a0876ca8d18ac07b5f637998b197086267,"BUG: Memory order of indexing result should be flexible

Memory order of non-trivial indexing results should adept to
the input.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
b1f8e29dfe87c886f546699ced509df7027bb0dd,"STY: mapping.c minor style fixes
",numpy/core/src/multiarray/mapping.c
1e647c595dc6e4d5dec4b0a3ecf136b33ae89627,"STY/DOC: minor fixes
",numpy/core/src/multiarray/mapping.c
90421c6b876ed391a9d1c3439327ab5342c136ce,"DOC: Some doc fixes
",numpy/core/src/multiarray/mapping.c
753bcc42f63546ecb0892a260f8117f4a07fd276,"BUG: Test and fix array converson before transpose

When SwapAxes is called a base class array is needed or the
subclass might mess with the shape. Fixes the previously
not-working test and code
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
854400057f0287b80cfac42e16f98d0daa097aed,"TST: Add deprecation tests
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_deprecations.py
628f60db43282e87a56e98561211ad04cf55eed7,"TST: Just one more small test
",numpy/core/tests/test_indexing.py
52b4a94b8d01854246bdb6cd53337d043d635251,"ENH,TST: Add many tests and have boolean finalize at end.

__array_finalize__ is now called in boolean indexing on the
result array, so that all numerical values are available.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
169926fd81fced556396b3709334b98ecddde1b7,"BUGS: Fix subspace casting and make fancy broadcasting consistent

Normal CopyInto allows removal of 1s from the start, but
broadcasting never did (and did not here before). This allows that
case, though by creating a view.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
fe859f13e2ce05c5e60c8bc446ba4dbc56e493ce,"TST: Add some broadcasting assignment tests
",numpy/core/tests/test_indexing.py
009b17a85a22707e63ac9ea1896413992bbf9ce5,"BUG: Fix native byteorder check for trivial loops
",numpy/core/src/multiarray/mapping.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/tests/test_indexing.py
b85dcf89078968b9d8e42ded22a5ed32c5d434f6,"MAINT: Small cleanups
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
059f7d416dcb3c3c35665f72aec5c8a80370c1a2,"ENH: Only check getitem index in inner loop if a single index

Otherwise they might be broadcasted which makes index checking
in the inner loop unnecessary expensive. The overhead itself
should not be too high in that case.

Also some cleanup
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c
fa35a252de2e7ba30276ca30ab67775d4f2e9383,"ENH: Add trivial loop special cases for fancy indexing

This optimizes simple contiguous loops for a single fancy
index into a 1-d array and also for general index checking
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/private/lowlevel_strided_loops.h
020ec9612e522f2bc6dffb54da00cc4919457541,"BUG: Fix reference count issues
",numpy/core/src/multiarray/mapping.c
96dbf1bc7378cd67d690de628ad78016610058bb,"ENH: Use template for inner loops and use stransfer
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/private/lowlevel_strided_loops.h
13b44ee04a924aeccfb67fc986fa68d221bd86e2,"BUG: Check if extra operand has too many dimensions

This was *not* done for the 1-d special case previously.
",numpy/core/src/multiarray/mapping.c
308bf7ab1ad5ed2650fc1e0f7dbc0397f34737c6,"ENH: Create meaningful broadcasting errors

Also checks dimensions a bit stricter (not relavent currently),
silence error (back to old behaviour...)

When advanced indexes cannot be broadcast, an index error is
now raised. When the assignment values cannot be broadcast
a ValueError is raised.

Note shape printing in nditer is no changed so that it is (2,)
and not (2).
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py,numpy/core/tests/test_regression.py
2d82c059dfbd5cde0538fddf023f5e8a9fe0d041,"GRR: Fully consider scalar arrays as array indices

This will break matrix[:,np.array(1)] = vals (transposed lhs
during assignment)
",numpy/core/src/multiarray/mapping.c
80d3bdd1d2f5cdc81557cc78efbc6928c1f750c9,"GRRRRR: Scipy ndimage.measurement uses 1-D iteration order...

... for assignments
",numpy/core/src/multiarray/mapping.c
3ec6314556f3cc28ce7ac6fbe63ddc15d90f2065,"BUG: Abort iteration when dtype buffering errored

This means that if the buffer is smaller then the array,
a transfer may be done up until the first bad element is
reached. This is in line with all other transfers.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
269b6da86909af5d573ffe00c3d9d10dbfcb094a,"readd mapping.c change lost in rebase
",numpy/core/src/multiarray/mapping.c
8533c52709f3850280f28ba5f1c0367361717445,"Fix bugs with old mapiter compatibility
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
f4772b1acf6bf2aa63fd28c1648c474df379f0da,"Further fixups
",numpy/core/src/multiarray/mapping.c
ef22bd4e22356df5c35b5a30a69c51d04ac33a3c,"Working mostly now, need to plug back in the exposed API
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
5b3d406cad485871bb4623034dc3607c3126179a,"Working on a thourough rework of mapiter
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
1bad2c3eeb4ddc2906eb24d10a20e4f85766e4c7,"Start trying to include operand into iterator
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
9f55b02fd35092c72ce4c0b6360246e86581cec5,"Followup stuff
",numpy/core/src/multiarray/mapping.c
28dab27a3f215d566f2b6e54485057df2a0b22c8,"Attempt to start optimizing setmap
",numpy/core/src/multiarray/mapping.c
4b3f60757a351bf4edf35b0cbfa6df4dbbb9aab5,"WIP,BUG: Fix outer iteration bug.
",numpy/core/src/multiarray/mapping.c
a7f39ff37e0b09b144090a3a4486e21155d09e2b,"WIP,ENH: Already allow boolean scalars for 0-d arrays

Since indexing into a 0-d array with an integer is impossible,
we can disable any conversion/interpretation is integer code
to special case the 0-d array for now and fix this annoying
issue...
",numpy/core/src/multiarray/mapping.c
4780be1af1dba624dba006e73c5675b890d63eb7,"WIP: Restore binary compatibility of MapIterObject (hopefully)
",numpy/core/include/numpy/ndarraytypes.h
acafbff07a8687d9990d83f2c0f0e17e9b5eca46,"WIP: Move Ellipsis setting check and clear warnings
",numpy/core/src/multiarray/mapping.c
23c3b30e7c9d600bac618020cc5db3dc5c59a645,"WIP,TST,DOC: tiny fix

maybe triggers Travis too...
",numpy/core/tests/test_indexing.py
631710bbf4a6ef7a3119214cc890b9d18bcc42a7,"WIP: fix field order; And MapIterNext iteration end
",numpy/core/src/multiarray/mapping.c
085115713db4701790838101451d5f5212124574,"WIP,TST: Fixup python3 tests
",numpy/core/tests/test_multiarray.py
1b35cb9e5b1e45cd9c4cb11107a5a794a07c5f77,"WIP: bug fixes and field oder access change
",numpy/core/src/multiarray/mapping.c
a32709fba5d0c19c320599c242e2faef47231045,"WIP,TST: Small fixes for the tests
",numpy/core/tests/test_deprecations.py
efdc9b078cf172bd693a7a2f8117cb2404b12f54,"WIP: use fast_take and fix Deprecations
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
fe615783daf2763496fc827e2377d9baaefcda26,"WIP,TST: Fix tests to match new behaviour
",numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py
3e35c313a61273382391c65fa8eab24e61c0cab9,"WIP: Speed improvements by using EXTERNAL_LOOP
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
607863d7387e80dab4b064856b598a8c86e9bee4,"ENH: Attempt to rewrite the index parsing.

Some optimizations still missing.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_indexing.py,numpy/lib/tests/test_function_base.py
c7a30d538ba4c984d6f97b613486a3738b2c7922,"Merge pull request #4262 from juliantaylor/mktemp-remove

remove insecure mktemp usage",numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/f2py/__init__.py,numpy/f2py/f2py2e.py,numpy/lib/tests/test_io.py
0bb46c1448b0d3f5453d5182a17ea7ac5854ee15,"ENH: remove insecure mktemp use

mktemp only returns a filename, a malicous user could replace it before
it gets used.
",numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/f2py/__init__.py,numpy/f2py/f2py2e.py,numpy/lib/tests/test_io.py
ed569bfa689a3f58425af2c5007a6779a7f4c4a7,"Detect vendor versions of GNU Compilers

Cray and other HPC vendors provide patched versions of the GNU compilers
with modified version strings.  Use re.search instead of re.match in the
version detection scripts to account for modified version strings.

Ref: https://github.com/numpy/numpy/issues/4259
",numpy/distutils/fcompiler/gnu.py
b7850701a31127cad8c7399cea6be9cd5f71bec5,"Merge pull request #4248 from juliantaylor/scalar-memleak

BUG: fix scalar type memory leak",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarmath.py
ba05979d0d243b529f3e95d2029f7827c21e297d,"- Modified resetting of binary search indices when multiple keys are being
  searched, following @juliantaylor's suggestion. This speeds up searches of
  ordered keys by a lot (up to 3x), but slightly slows down purely random
  keys. Some benchmarks are available [here](https://gist.github.com/jaimefrio/8704101#file-gistfile2-txt)
- Added tests for proper handling of the smart index resetting when the last
  key was larger than all items in the searched array.
- Added basic tests for all implemented dtypes.
- This last change unearthed a funny behavior of `PyArray_CheckFromAny`,
  which was changing the byteorder attribute of `NPY_UBYTE` from `NPY_IGNORE`
  to `NPY_NATIVE`, and triggering lots of failures in `np.core.test()`. So I
  modified `PyArray_CheckFromAny` to leave `NPY_IGNORE` byteorders alone.
- Removed the now unused binary search functions from `item_selection.c`.
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/tests/test_multiarray.py
0b92be65cc0063cabab6b9552df74788c4077e5b,"BUG: IRR was returning nan instead of valid negative answer.

This change corrects the following two bugs in numpy.irr:

* When the solution was negative, numpy.irr returned nan instead of the
  correct solution because of the mask applied to the roots. Corrected
  by removing the mask that 0 < res < 1.
* When multiple roots were found, numpy.irr was returning an array of
  all roots rather than a single float. This bug was corrected by
  selecting the single root closest to zero (min(abs(root)).

With these corrections, numpy.irr returns the same result as the
corresponding spreadsheet function in LibreOffice Calc for all test
cases (additional test cases were added to cover cases with multiple
positive and negative roots)
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
e9ebefec819ec3c193d4763d9f995c053fee58a3,"BUG: fix scalar type memory leak

have an explicit tp_free that is different from PyObject_Free which is also the
tp_free of PyBaseObject so python does not COPYSLOT it, instead it takes the
next parent PyInt which has a different allocator.
Also added it for arrays just in case, currently not required as they don't
don't inherit from a python type.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarmath.py
839225599b1fb18ebb09424459ebd2066a8f21f9,"BUG: check for monotonic bin arrays in digitize

The check for monotonic bin arrays of digitize doesn't properly handle
inputs with repeated entries at the beginning of the array:

```
>>> np.__version__
'1.8.0'
>>> np.digitize([1], [0, 0 , 2])
array([2], dtype=int64)
>>> np.digitize([1], [2, 2, 0])
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
ValueError: The bins must be monotonically increasing or decreasing
```

Modified `check_array_monotonic` in `_compiled_base.c` to skip over repeating
entries before deciding to check for increasing or decreasing monotonicity
and added relevant tests to `test_function_base.py`.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
7044588130a2316db8dc3abd081a8e6655d98cac,"ENH: Type specific binary search functions for `searchsorted`

This PR replaces the generic binary search functions used by `searchsorted`
with type specific ones for numeric types. This results in a speed-up of
calls to `searchsorted` which is highly dependent on the size of the
'haystack' and the 'needle', with typical values for large enough needles
in the 1.5x - 3.0x for direct searches (i.e. without a `sorter` argument)
and 1.2x - 2.0x for indirect searches. A summary benchmark on float and
int arrays can be found [here](https://gist.github.com/jaimefrio/8704101).

Furthermore, the type specific binary search functions can take strided
inputs for all their arguments, which is a step in the right direction to
eventually add an `axis` argument to `searchsorted`.
",numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/binsearch.c.src,numpy/core/src/private/npy_binsearch.h.src
ad5bded8658c41161106a1ed51e3889bc1cf6b6b,"Merge pull request #4243 from juliantaylor/sdist-check

BLD: check submodules on sdist",setup.py
4cd72742079c6eba4ec0803975c43b779545b537,"BLD: check submodules on sdist

prevents broken source distributions due to not up to date submodules.
",setup.py
0a2be83023ee59c13f16410712129e26716bf4df,"Merge pull request #4239 from astaric/documentation_fix

DOC: Fix description of ma.average parameter.",numpy/ma/extras.py
b58a854359d06dd5a61cf236c328a2aefc8ecce4,"DOC: Fix description of ma.average parameter.

Replace mention of variance in numpy.ma.average doc string with average.
",numpy/ma/extras.py
c159cb078b4069ba8fdeddedb0ee7f01dd0656d2,"Merge pull request #4238 from pv/reduceat-doc

DOC: fix error in reduceat documentation",numpy/add_newdocs.py
a258e3cfbd28fb48722c5c83999f6910ef8d827a,"DOC: fix error in reduceat documentation

reduceat does not allow out-of-bounds indices currently
",numpy/add_newdocs.py
05b236430617dfc6003f60b513c072870d577b2a,"Merge pull request #4234 from jennystone/Branch1

BUG: removed inconsistencies of count (Issues #3368 and #4228)",numpy/ma/core.py,numpy/ma/tests/test_core.py
3d8da08211406bafb6cf2b95794a3911447b22ba,"BUG: Removed the inconsistencies of the function ma.count
The inconsistency of ma.count when appled on masked_array with mask as
'nomask' has been removed. the return type of the function has also been
standardized according to the docs.Corresponding changes in testing to
check the functioning of ma.count
Closes gh-3368 and gh-4228
",numpy/ma/core.py,numpy/ma/tests/test_core.py
0f7dffa43a06e936cd13910128f9aa5da9c7a105,"Merge pull request #4237 from juliantaylor/sdist-updates

Sdist updates",MANIFEST.in
0f6641b1539e068f5a3ee5df42c95b64f45c4665,"BLD: exclude compiled python files in source distribution

they could accidentally appear in the source distribution if sdist was
run after a make -C doc.
",MANIFEST.in
e573709d57cbddefcb819515ff023db970d83d8d,"BLD: include f2py docs in source distribution

update was forgotten in the move to the doc/folder
",MANIFEST.in
2fc0c65c4f465762f5f479d173205c9158529a83,"Merge pull request #4233 from pv/copybutton

MAINT: update scipy-sphinx-theme",doc/scipy-sphinx-theme
3cd21374c7ef32691adf75393191ca6960747b4f,"MAINT: update scipy-sphinx-theme

Adds copybutton that toggles "">>>"" in code samples.
",doc/scipy-sphinx-theme
4cdf911c3308e55558ca191e91e703305ab46197,"Merge pull request #4232 from juliantaylor/check-win-compile

TST: fail on declaration-after-statement in travis test",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_multiarray.py,tools/travis-test.sh
2f2f64cf7133c9028585ca5502e41c1bce52416f,"TST: test count_nonzero on unaligned memory
",numpy/core/tests/test_multiarray.py
8358f04ce9e6651e79f83a5960f3e3fcd383538f,"Merge pull request #4215 from juliantaylor/where-obj-fix

BUG: fix reference count, thread safety and dtypes of np.where",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
d79ce1af7725ea96dab8474c7b86a7e58ccb36d6,"TST: test non integer item does not return array

from gh-4223 in the 1.8 branch
",numpy/core/tests/test_indexing.py
89e59e0ac2572759d9fc6ade519e135a16fc7308,"TST: fail on declaration-after-statement in travis test

required for windows compilers
",tools/travis-test.sh
b8407f3ca97fe184aba3e5df8d35f58182f711bc,"BLD: Fix ANSI C syntax error

Fixes msvc9/10 error C2143: syntax error : missing ';' before 'type'
",numpy/core/src/multiarray/multiarraymodule.c
79cd73535675f189ee77d9cc82c39dfb7149c0e4,"DOC: document special float scalar casting change in release notes
",doc/release/1.9.0-notes.rst
cc81da650820e6a623dce41cc66d4b926c7f6941,"BUG: min_scalar_type_num: special float values can be represented in half

E.g. pandas sometime uses float('NaN') which would otherwise convert to
float64 where not required. The new np.where which uses
PyArray_ResultType is a case where the conversion is unnecessary.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_multiarray.py
631655e66a4c6bbcd907c07ff40c8bfa342311df,"Merge pull request #4213 from juliantaylor/choice-improv

improve random.choice performance and regen with cython 0.20",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
bc54f96e72c02adf59b73067b31deea24cf3063d,"Merge pull request #4220 from juliantaylor/ufunc-at-ver

DOC: add versionadded:: 1.8.0 to ufunc.at docstring",numpy/add_newdocs.py
5e5cf6236703fe2824e062ca1921fc2a15a89744,"Merge pull request #4221 from rgommers/fix-f2py-warning

MAINT: fix some f2py related build warnings.",numpy/f2py/src/fortranobject.c
35f996a8b3e2e85caa54f037f5d9e93561551aea,"MAINT: fix some f2py related build warnings.
",numpy/f2py/src/fortranobject.c
6c9fee60f6c2cf79368f2c5ca30ce807453dafb5,"DOC: add versionadded:: 1.8.0 to ufunc.at docstring
",numpy/add_newdocs.py
e95b6acf10ba8bf4a8c2b7c1841cb1c5f7d6818d,"BUG: properly handle references of objects in new np.where

Objects must go over the objects copyswap function and GIL must be taken
before dereferences for correct reference counting.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
783b96d0c77c384ca0050d47d34b969f6caeb74e,"Merge pull request #4212 from rgommers/buildwarnings

Fix some build warnings",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/test_rational.c.src,numpy/linalg/umath_linalg.c.src,numpy/random/mtrand/initarray.h
b0427e2b5ee0a1978453eada8a25c77c1fa2c2b6,"MAINT: regenerate with cython 0.20 and fix a warning it emits

Fixed warning is ""Non-trivial type declarators in shared declaration"".
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
9ff14157824dcfc6c78f9a23d19776c7b55dfa76,"ENH: reduce overhead of probs check of choice

Use kahan_sum as multinomial does.
Closes gh-4188
",numpy/random/mtrand/mtrand.pyx
fd9f876ad8af93848bdef49f9baf9115d83acc2c,"MAINT: silence some build warnings due to missing NO_IMPORT_ARRAY
",numpy/core/src/dummymodule.c,numpy/core/src/umath/loops.c.src,numpy/random/mtrand/initarray.h
57caa73f5dfb73a9820c076d4be0ef7948189b25,"MAINT: fix build warnings in test_rational.c.src
",numpy/core/src/umath/test_rational.c.src
40be024546df50a12bbe6b98a8892bd399b840b3,"MAINT: fix build warnings for umath_linalg

The removal of CFLOAT for eig/eigvals is related to a bug, see c355550dd80.
Can be put back once that issue is fixed.
",numpy/linalg/umath_linalg.c.src
42c40bc24341cc3d9a17a84b0fb0e50265dc8cac,"MAINT: remove unused variables from einsum.c.src and loops.c.src

Fixes some build warnings.
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/umath/loops.c.src
b449dfde4bce9ff12a71dab8d14015b4233200a3,"MAINT: remove unused simple_capsule_dtor() from npy_3kcompat.h

This removes a lot of build warnings when including this file.
",doc/release/1.9.0-notes.rst,numpy/core/include/numpy/npy_3kcompat.h
bbb49186401b6efe298057eb244e651aaf4ad865,"Merge pull request #4211 from rgommers/fix-knownfail

BUG: testing.run_module_suite() didn't pass on KnownFailure plugin.",numpy/testing/nosetester.py
9dabdb872ccfdc23669e53b22e6dac7c0b6eb462,"BUG: testing.run_module_suite() didn't pass on KnownFailure.

This results in errors whenever you run tests using KnownFailure
like so: ``python test_mymodule.py`` (where run_module_suite is
used in the file, like numpy and scipy do).
",numpy/testing/nosetester.py
3dfc6d654280e47917752d0694f7a1a781335b6e,"Merge pull request #4207 from juliantaylor/where-api

BUG: set the needs_api variable in np.where",numpy/core/src/multiarray/multiarraymodule.c
33b6326e9e74be93b779a46bcd3e20d924fd0239,"BUG: set the needs_api variable in np.where
",numpy/core/src/multiarray/multiarraymodule.c
bd8d70a9597b88c1cbe454adaf58c211da0f929e,"Merge pull request #4206 from juliantaylor/single-thread-fix

BUG: fix build with single-threaded python",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/linalg/lapack_lite/python_xerbla.c
13fbb675daf30be0771085b621b6934064203492,"BUG: fix build with single-threaded python

Some symbols are not defined leading to:
ImportError Undefined symbol: PyGILState_Release

Closes gh-3255
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/linalg/lapack_lite/python_xerbla.c
7f46687865db7b88c285ea12ccef43f4b7026a0d,"Merge pull request #4205 from juliantaylor/travis-dbg

TST: add travis test using python-dbg",.travis.yml,tools/travis-test.sh
27c119af2b86c7f56de6e3660f6105453cc11468,"Merge pull request #4197 from juliantaylor/memview-leak

BUG: fix minor memory leak in memoryview failure case",numpy/core/src/multiarray/buffer.c
8ef97a9c21f24964f4cee2e56ec9141b217ff186,"TST: add travis test using python-dbg

python-dbg adds couple extra asserts on reference counts, memory
allocation and also enables a few numpy internal asserts.
",.travis.yml,tools/travis-test.sh
2f8d33bc755b869639e38e0482c0abda956578cc,"BUG: fix minor memory leak in memoryview failure case
",numpy/core/src/multiarray/buffer.c
796ac14fb05694365fb423e5684ccac4330470f2,"Merge pull request #4204 from pbugnion/feat_run_module_suite_argv

ENH: Added argv argument and docstring to run_module_suite.",numpy/testing/nosetester.py
c25e8b7bcee3ce49a6d6daad3520295c58f6ccbc,"STY: Style adjustments to run_module_suite.

Cosmetic adjustments to previous commit (893fe99) following ""charris""'s
comments.
",numpy/testing/nosetester.py
23d40e89ff996f7183cfdc508b0924631d497032,"Merge pull request #4193 from pv/prune-lapack-lite

MAINT: linalg: prune unused routines from lapack_lite",numpy/linalg/lapack_litemodule.c,numpy/linalg/tests/test_linalg.py
893fe99b7957198adf8b74109d334266fdc31006,"DOC: Added docstring for run_module_suite.
",numpy/testing/nosetester.py
e7f4ad04c12986f1b94759cbd0a6a27d2124f107,"ENH: Added argv argument to run_module_suite.

Adding an 'argv' optional argument to the
""numpy.testing.run_module_suite"" function lets the client pass arguments
to the nose testrunner.

For example, this lets the user add things like:

run_module_suite(sys.argv)

at the end of a test module, so that arguments specified on the command
line will get passed to the nose runner. The user could then run:

$ python test_module.py --nocapture
",numpy/testing/nosetester.py
19796ca4d42d091979eee73ab0bbfa463d83892e,"Merge pull request #4182 from juliantaylor/where-improve

ENH: optimize np.where via nditer with external loop",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
53fa3bba2acb80af5f5aadbb2223238f7c8627a5,"Merge pull request #4187 from juliantaylor/large-file-fix

BUG: Fix large file support on 32 bit",.travis.yml,numpy/core/bscript,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/ctors.c,numpy/lib/bscript,numpy/lib/tests/test_format.py,tools/travis-test.sh
74c1c4800c713916f3d135b27c56cd0bae2e0c82,"Merge pull request #4200 from juliantaylor/thread-thresh

ENH: avoid more thread save/restores for small iteration counts",numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/umath/ufunc_object.c
ea027f37e67639d5c73a729f66b07588d8bced6a,"ENH: release GIL during where iteration
",numpy/core/src/multiarray/multiarraymodule.c
bba4ed5398d9b9102d7bd51ebb3ce84a62291c23,"TST: document reason for truncate instead of seek past end
",numpy/lib/tests/test_format.py
a4d1e26c56d29fa24cae8570cdedd9d6064679c4,"MAINT: add a configure check for ftello and fseeko

Works on Ubuntu/Debian, might require lfs macros on some platforms to
succeed, but its also defined by Python.h so it should mostly work.
",numpy/core/include/numpy/npy_common.h,numpy/core/setup_common.py
0f435533bd0c67f8224c249dd43bcb9dd1d3997a,"Merge pull request #4196 from pv/fix-tofile-test-osx

TST: core: fix tofile file positioning test",numpy/core/tests/test_multiarray.py
a724c93d071d19c7ba839de73a93d86979faa930,"Merge pull request #4194 from larsmans/openblas-docs

DOC: site.cfg: warn against OpenBLAS and multiprocessing",site.cfg.example
7488ebeee75f98a01dc6c9bab6e98e254ff54c95,"DOC: site.cfg: warn against OpenBLAS and multiprocessing

Fixes #654 by not fixing it; I don't think NumPy *can* actually fix
the problem as it's a design flaw in Python's multiprocessing. Listed
various alternatives (Python 3.4 forkserver, single-threaded OpenBLAS,
Python threading).
",site.cfg.example
48558df89911b5211ae8d58e1d5e937bb1b57c33,"ENH: avoid more thread save/restores for small iteration counts

Releasing the GIL is not worthwhile for small loop iteration counts.
This was previously only done for non-reduction ufuncs.
Do this now also for reductions and assignments.
Improves performance of small reductions by about 10% as they avoid two
save and restores.
",numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/umath/ufunc_object.c
edeaf3f08463fd8149f9294970075b0b3ba31ea9,"MAINT: move array creation earlier and use goto for deallocs
",numpy/core/src/multiarray/multiarraymodule.c
feadae424d73877522a691789f46957453c32a72,"TST: core: fix tofile file positioning test

Python 2 I/O is a thin wrapper on FILE* C-API. All Python code must
follow the ANSI C requirement (see man fopen) that there is a seek or a
flush between reads and writes, otherwise the behavior is undefined.
Whether this is required depends on the CRT implementation; glibc
doesn't seem to require it, but OSX apparently does.

Fixes gh-4189
",numpy/core/tests/test_multiarray.py
f5f109a4dc843d9129384cf9d687c5f1945c0212,"MAINT: add an explicit check on zero iteration
",numpy/core/src/multiarray/multiarraymodule.c
490a9b2dc013d3c0bd951973d9d12011226a6f1c,"ENH: improve new where function

Allow object and zerosized iteration and move bool casting of mask into
the iterator logic and improve tests appropriately.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
593e3c30c24f0c61a271dc883c614724d7a57e1e,"ENH: optimize np.where via nditer with external loop

Implementation via PyArray_Choose is very slow, a direct implementation
is 10 times faster.
Optimizing Choose is more complicated due to its higher complexity and
would require specialization for optimal np.where anyway, but it is
something that could be done in future.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
0b85f91364729286fe4e6f5343c31015d8248012,"Merge pull request #4061 from larsmans/c-fixes

MAINT: Minor C fixes",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/umath/test_rational.c.src
cd7f2833697b0785279d3c3ac7b9263977dbf10a,"MAINT: umath: get rid of ""statement with no effect"" warning

(What was this line for anyway?)
",numpy/core/src/umath/test_rational.c.src
f5dd97df5883f492ed5419cd1b4b8d78dd90d157,"MAINT: multiarray: fix types

convert_datatype.c and number.c now compile without warnings.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h
38d9c26373fed5b54e4b5bba20b14840eb409190,"MAINT: linalg: prune unused routines from lapack_lite
",numpy/linalg/lapack_litemodule.c,numpy/linalg/tests/test_linalg.py
da3ad01d20c283adf5222e8ad7cc95731e0fc900,"TST: run slow chroot test earlier for better load balancing
",.travis.yml
a1c6d4aa8191384d0521fca59839deec3f2a29f8,"TST: run 32 bit test with python3
",tools/travis-test.sh
dd8be8e6eccfac111e42997676b85ee8b39756a1,"BUG: fix npy_PyFile_Dup error handling

no caller deals with the -1.
",numpy/core/include/numpy/npy_3kcompat.h
d64d62b76df62e8b20eea060db05ef23c472354d,"BUG: fix large file support on 32 bit systems

On linux large file support must be enabled and ftello used to avoid
overflows. The result must not be converted to a size_t, but a long
long.
",numpy/core/bscript,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/src/multiarray/ctors.c,numpy/lib/bscript,numpy/lib/tests/test_format.py
4b4796a35dfafbc4e037a5f1cd4a26d6a2e17f41,"BUG: Fix typos in conversion_utils

Unparenthesized logical expressions in if statements caused clang
compilation failure on OSX.
",numpy/core/src/multiarray/conversion_utils.c
d400b0422a016cf9ca75cc8e9375ea3c5324e88a,"Merge pull request #4183 from charris/gh-4099

ENH: Remove unnecessary broadcasting notation restrictions in einsum.",doc/release/1.9.0-notes.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
b1b0ea8030cad32d6fce2e6e6b5068e54bd6b7a7,"ENH: Remove unnecessary broadcasting notation restrictions in einsum.

In a case where 'ik,kj->ij' works, einsum would raise an error for
'ik,k...->i...' because the 'ik' did not have ellipsis

In einsum.c.src prepare_op_axes() pass all 'broadcast' cases through the
'RIGHT' case (interation from the end).

Since the BROADCAST variable is not longer needed, all instances of it have
been removed from einsum.c.src

test_einsum.py - adds a test_einsum_broadcast case.
",doc/release/1.9.0-notes.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_einsum.py
d1dbf8e796ab6bcdc4f3b71252f3921ab2a62269,"Merge pull request #3895 from larsmans/norm-dot

ENH: use dot in linalg.norm",numpy/linalg/linalg.py
42c8ced9257869a3897d84e2d5da570ddbb5fc59,"Merge pull request #4177 from juliantaylor/objmalloc

ENH: replace a few small allocations with PyObject_Malloc",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/scalartypes.c.src
e58dc055e99ee88fa8d77acc89269a2cdc6cf406,"Merge pull request #4152 from pv/fromfile-fix

BUG: core: ensure file handle positions are in sync",numpy/core/bscript,numpy/core/include/numpy/_numpyconfig.h.in,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
03a2535613934f3f08593d20935e5cc84ce9782c,"BLD: add off_t size detection to bento build
",numpy/core/bscript,numpy/core/include/numpy/_numpyconfig.h.in
3de3fdab02907194b0cf10ead1c82258ccfe02db,"BUG: core: use correct Python format string for npy_off_t
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py
41690fcf9bff30cb3d49d8c147bca1f595bfa70b,"ENH: core: switch to off_t and lseek in Python 3 file seeks

This removes dependency on CRT implementation details (whether
fflush/fclose actually seeks the underlying raw file handle or not).

Also, check seek error statuses.
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c
dd05022ba5ccb4959662c99ac4b5e1363d09f920,"BUG: core: ensure file handle positions are in sync

The Python3 file handles keep records of current file positions, so that
the raw handle needs to be restored to the original position in order
to not confuse the mechanism.

Fixes gh-4118
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
927cfcfbb77555f145df1ff90afe87fcbaf6c027,"Merge pull request #4165 from juliantaylor/lfs-mtrand

BUG: compile random in lfs mode",numpy/random/bscript,numpy/random/setup.py
6834b3a2da002eccc279a9e9a594713a467cc483,"ENH: replace a few small allocations with PyObject_Malloc

It uses a faster small object allocator for sizes smaller than 512 bytes
(256 in python2). This improves nditer construction and scalar
operations by about 10%.

For now only replace high profile encapsulated nditer allocation and
python object (PyArray and gentype) allocations that go over tp_free to
ensure no non-buggy third party application is broken.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/scalartypes.c.src
5f36f57ecd0322c6a6110bd910c82ebdc65262b0,"Merge pull request #4171 from cowlicks/ufunc-override-out

BUG: Allow __numpy_ufunc__ to handle multiple output ufuncs.",doc/neps/ufunc-overrides.rst,numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_umath.py
b3420fd08d45f591a2149a87ad0889c6c4d45dda,"Merge pull request #4170 from juliantaylor/memoryview-error

BUG: core: fix memoryview issues with python 3.4",doc/source/reference/c-api.config.rst,numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
e770f92087ec0ae38c86b6960a7f1d29335b9378,"Merge pull request #4175 from takluyver/patch-1

DOC: Update link to numpydoc README",doc/HOWTO_DOCUMENT.rst.txt
43dcd321567b1c97e27f86498c6334af03e126d6,"MAINT: Update link to numpydoc README

This is the counterpart of my PR numpy/numpydoc#7 renaming the README.",doc/HOWTO_DOCUMENT.rst.txt
ff7d5f990fb6184b6b116f444cf2c0d0cf099463,"Merge pull request #4173 from leaz/patch-2

Add '.FOR' to src_extensions",numpy/distutils/fcompiler/__init__.py
d77dda36097e147994c1f860eec30f798bbcb442,"Add '.FOR' to src_extensions

The uppercase source extension '.FOR' is also commonly used.",numpy/distutils/fcompiler/__init__.py
d849245b44417e3e632a19a5e04a627ca6434887,"BUG DOC TST: Allow __numpy_ufunc__ to handle multiple output ufuncs.

Added details about how the output variables are handled to the spec.
Also adds tests for ufuncs with multiple outputs.
",doc/neps/ufunc-overrides.rst,numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_umath.py
28eb575c0c73a2061942b72b80ff6c43a67a431a,"BUG: fix native-only long long check

Caused all long longs to be required native only in memoryviews.
NPY_SIZEOF_LONG_LONG never existed, replace documentation with existing
NPY_SIZEOF_LONGLONG and code with a sizeof(npy_longlong).
",doc/source/reference/c-api.config.rst,numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
57330377d914e163389d66cf644915f851f37242,"BUG: return immediately if memoryview cannot be non-native

late return triggers an assert with python3.4 in debug mode.
Closes gh-4138.
",numpy/core/src/multiarray/buffer.c
45ec18e2153613642dffd8cb52278e4ca4c3605c,"ENH: optimize complex vector norm

Also used ravel(order='K') to prevent copies.
",numpy/linalg/linalg.py
1ffe713c551707cb8edff9e401b5be5911fe5a06,"Merge pull request #4161 from juliantaylor/32bit-travis

TST: add 32 bit travis tests",.bento_travisci.sh,.travis.yml,tools/travis-test.sh
b3bdb4b8522a47926fdf0568528386565b9d194d,"MAINT: enable verbose bento build
",tools/travis-test.sh
b6cb0305a95d22a389a4127fda19c90629dfdffe,"TST: add 32 bit travis tests

Implemented by setting up a chroot in the travis VM and moving all the
test logic, including bento build, to a single script.
This is still reasonable fast, about twice as slow as the normal tests.
When Travis updates to a newer OS it can be replaced by standard cross
compiling.
",.bento_travisci.sh,.travis.yml,tools/travis-test.sh
9ab9648062ffa1b75a173fffadbca67c5e090cc2,"BUG: compile random in lfs mode

randomkit.c uses fopen which requires LFS mode to support larger than 64
bit files on 32 bit systems.
",numpy/random/bscript,numpy/random/setup.py
bb91617de316dd98d38e96a4df1e5de1bda3f805,"Merge pull request #4149 from argriffing/doc-matrix-rank

DOC: matrix_rank",doc/source/reference/routines.linalg.rst,numpy/linalg/__init__.py
b8b58bcec749edb01f49daf1ec37d9e9f8422dbb,"Merge pull request #4158 from rgommers/f2py-no-reload

MAINT: remove use of ``reload`` from f2py.  See gh-4139.",numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py
b91d3f456040a39a37cc1281ba499cb4316d15ec,"Merge pull request #4163 from juliantaylor/complex-norm-fix

BUG: fix complex norm of higher order",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
7213b97ae2c16dcf6fdd692030614e102abecda8,"Merge pull request #4168 from pv/f2py-docs

DOC: Move f2py docs under doc/ and link to Sphinx docs",{numpy,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,doc/source/_templates/indexcontent.html,doc/source/contents.rst,doc/source/f2py/advanced.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,doc/source/f2py/distutils.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,doc/source/f2py/getting-started.rst,doc/source/f2py/index.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,doc/source/f2py/python-usage.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,doc/source/f2py/signature-file.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,doc/source/f2py/usage.rst,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,numpy/f2py/Makefile,numpy/f2py/NEWS.txt,numpy/f2py/README.txt,numpy/f2py/docs/usersguide/default.css,numpy/f2py/docs/usersguide/docutils.conf,numpy/f2py/docs/usersguide/index.txt
4f7d1019f2b4313ae2a5a601fb09fcaabbd9c952,"DOC: f2py: fix some typos etc
",doc/source/f2py/getting-started.rst,doc/source/f2py/python-usage.rst,doc/source/f2py/signature-file.rst,doc/source/f2py/usage.rst
3b3a531f9564d5696b3a50d41636b58d65ba1330,"DOC: f2py: more Numeric -> numpy updating
",doc/source/f2py/getting-started.rst,doc/source/f2py/signature-file.rst
6c7af638e760d3229f460cb7475548ef2a3a7ca9,"DOC: f2py: update numpy.distutils part a bit
",doc/source/f2py/distutils.rst,doc/source/f2py/setup_example.py
31f50a81974319a470cd6e913ef914f3e54f2390,"DOC: f2py: minor fixups
",doc/source/f2py/distutils.rst,doc/source/f2py/index.rst,doc/source/f2py/python-usage.rst
def9fda423c0dafc3720870f3d83a0f02d5ac2c2,"MAINT: remove unused file
",doc/source/f2py/default.css
6325f92017337b0b0e340689959eba465c8dbd94,"DOC: f2py: Numeric -> numpy
",doc/source/f2py/array_session.dat,doc/source/f2py/getting-started.rst,doc/source/f2py/python-usage.rst,doc/source/f2py/scalar_session.dat,doc/source/f2py/signature-file.rst,doc/source/f2py/string_session.dat
337366c6d512b47e6a702d18a3f3f6240c3fda4a,"DOC: split up f2py user guide + markup fixes
",doc/source/contents.rst,doc/source/f2py/advanced.rst,doc/source/f2py/distutils.rst,doc/source/f2py/getting-started.rst,doc/source/f2py/index.rst,doc/source/f2py/python-usage.rst,doc/source/f2py/signature-file.rst,doc/source/f2py/usage.rst
5bcfbe92fd7fa5db67ba0fc06a1e63a806c33127,"DOC: fix up f2py user guide formatting
",doc/source/f2py/index.rst
75c2d2fe3cc9daa6589707fb6b8512ffa48fc365,"DOC: move f2py documentation under doc/ and link its user guide with Sphinx
",{numpy,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,{numpy/f2py/docs,{numpy/f2py/docs,{numpy/f2py/doc,{numpy/f2py/doc,doc/source/_templates/indexcontent.html,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,numpy/f2py/docs/usersguide/index.txt,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,{numpy/f2py/docs/usersguide,numpy/f2py/Makefile,numpy/f2py/NEWS.txt,numpy/f2py/README.txt,numpy/f2py/docs/usersguide/docutils.conf
a32807e61b25205cc08d552127234b56709c6242,"Merge pull request #4166 from juliantaylor/man-hyphen

DOC: f2py manpage, use minus instead of hyphens for options",numpy/f2py/f2py.1
551541c428846ee48f5947792f445d16373ab335,"DOC: f2py manpage, use minus instead of hyphens for options
",numpy/f2py/f2py.1
bd6d287dd73c483654cfb10f4cfab4dcc7548dd2,"BUG: fix complex norm of higher order

asfarray truncates the complex part, so it must be avoided for complex
types.
Closes gh-4156.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
192355eb77883b1bd779f0a0bbad9e137de3193d,"Merge pull request #4159 from juliantaylor/doc-sync

DOC: synchronize release notes with 1.7.x",doc/release/1.7.2-notes.rst
2f4a837d23e4d321958aa8c69db88f2ce692dc81,"DOC: synchronize release notes with 1.7.x
",doc/release/1.7.2-notes.rst
9dbeb2ef07c0afadbe368a7e73baa428b3760816,"MAINT: remove use of ``reload`` from f2py.  See gh-4139.
",numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py
3130900fadb0f388dac588fc7b83199f9341a708,"Merge pull request #4144 from larsmans/norm-bugs

BUG: linalg: norm fails on longdouble, signed int",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
14fb7000694523919fe4045096fbfa3703b1d1fe,"Merge pull request #3916 from larsmans/dotblas-64bit-safe

64-bit safe _dotblas",numpy/core/blasdot/_dotblas.c
c2b40f40e2d0a8e56facf6d73958a03afb12bdd0,"DOC: more matrix_rank docs
",numpy/linalg/__init__.py
3a6c1c2e84c7d41075297c96a777bab3701d941c,"DOC: matrix_rank
",doc/source/reference/routines.linalg.rst
dff072619643c6d668446b229d44b7e4d45e6ec0,"BUG: linalg: norm fails on longdouble, signed int

This fixes the following bug with longdouble:

>>> x = np.arange(10, dtype=np.longdouble)
>>> np.linalg.norm(x, ord=3)
Traceback (most recent call last):
  File ""<ipython-input-5-7ee53a8ac142>"", line 1, in <module>
    np.linalg.norm(x, ord=3)
  File ""/tmp/v/lib/python2.7/site-packages/numpy/linalg/linalg.py"", line 2090, in norm
    return add.reduce(absx**ord, axis=axis)**(1.0/ord)
UnboundLocalError: local variable 'absx' referenced before assignment

As well as the handling of minimal values for signed integers:

>>> x = np.array([-2**31], dtype=np.int32)
>>> np.linalg.norm(x, ord=3)
/tmp/v/lib/python2.7/site-packages/numpy/linalg/linalg.py:2090: RuntimeWarning: invalid value encountered in double_scalars
  return add.reduce(absx**ord, axis=axis)**(1.0/ord)
nan
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
61998c22df08e7ec0938bedef931ac824cfb634a,"Merge pull request #4141 from rgommers/py34-fixes

Fix a few issues that show up with python 3.4b1",numpy/lib/npyio.py,numpy/lib/tests/test_function_base.py
9e836c2c5cc0911269ac692a25fc4ec42273354b,"TST: fix test failure due to comparing floats with assert_equal.

Observed on 32-bit linux with python 3.4b1
",numpy/lib/tests/test_function_base.py
8d4cc1e485d518a48111ce1b0e38edd7a8279946,"MAINT: don't use open(.., 'U') in Python 3.x, is deprecated.

This is default behavior in 3.x; in 2.x open() doesn't have a `newline`
kw.  So make code Python-version-specific.
",numpy/lib/npyio.py
bc82e93cbc0d8b3294764932339eb78a8a1e6e3c,"Merge pull request #4137 from juliantaylor/sumfix

BUG: Ensure signed division of stride for pairwise sum",numpy/core/src/umath/loops.c.src
ecc20a36f62a17ab8da34033ebbd37c0d64c02da,"BUG: Ensure signed division of stride for pairwise sum

Avoids wrong wrapping with i386 12 byte long doubles.
Closes gh-4136.
",numpy/core/src/umath/loops.c.src
0856259fde5351d29eeabfc064ef9d625cf27339,"Merge pull request #4112 from rhewett/meshgrid_single

ENH: Allow meshgrid to take 1D and 0D inputs",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
86df1b137af94fc5f1af7b9e5f14f30d065ad26e,"Merge pull request #4102 from seberg/issue-612

FIX: Array split should not hack empty array shape away",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
d68a6b84a455ac8a39eee74f16470255843970c4,"Merge pull request #4133 from ContinuumIO/datetime_sort

Add lexsort support for datetime and timedelta",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
823ff90d0783fa89ab8a16e646a05803d973c4e4,"Add lexsort support for datetime and timedelta
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
e7fe68ad3ce7f91cb152df49115f353ba9d75789,"Merge pull request #4103 from seberg/issue-616

BUG|API: Raise wrong arg{min|max} out shape and stricter check",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
f43dee7e4ffbe06eaa8d116d405d0b12f2e3b468,"BUG|API: Raise wrong arg{min|max} out shape and stricter check

The error was not raised when the output array size did not match
the given out array causing segfaults if the out array was smaller.

This also makes the shape check strict and changes the error
to a ValueError. The shape check could be relaxed for leading
ones. ufuncs and assignments do this.
",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_multiarray.py
c91b4c3703eef84eca84063994d07332020c7707,"BUG: Fix array_split empty array type and add FutureWarning

Fixes the result type of empty output arrays.

The FutureWarning warns about changed behaviour. A ""kludge"" was
introduced into array split converting converting the result of
something like:

>>> np.array_split(np.array([[1, 1]]), 2)
[array([[1, 1]]), array([], dtype=int64)]

instead of retaining the shape of the empty/second array to
be (0, 2). A FutureWarning is now raised when such a
replacement occurs.

Closes gh-612
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
b7144d207540e7948f8f83dc85634c22ce61f53f,"Merge pull request #4127 from nouiz/argmax

DOC: Fix doc and error handling in Argmax",doc/source/reference/c-api.array.rst
a8e86abb2d5c9ff0a62cbe4ad846d3b44993f878,"ENH: Allow meshgrid to work for 1D and 0D cases.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
a2507f658d1261b348109fad31ec2431463e2825,"Merge pull request #4128 from longjon/master

Avoid overallocating memory in arraypad with user supplied function",numpy/lib/arraypad.py
cf22b319191c47b66d6a690888cb16ba0e08c122,"Avoid overallocating memory in arraypad with user supplied function

Previously, arraypad used zeros(shape).astype(dtype) instead of
zeros(shape, dtype), which could allocate up to eight times more memory
than necessary.
",numpy/lib/arraypad.py
65c57d79793f3cded1c9fc1f6fec78a99c8288af,"Fix the doc of PyArray_ArgMax and PyArray_ArgMin
",doc/source/reference/c-api.array.rst
ff325bb2a3e06355051bb044b6047907027105d5,"Merge pull request #4114 from rgommers/travis-bento

Fix Bento issues and add Bento build to Travis CI config",.bento_travisci.sh,.travis.yml,bento.info,bscript,numpy/core/bento.info
aff396d13ad2e64dc0df1a095e53e7dcb67710d7,"Merge pull request #4124 from seberg/issue-4123

BUG: Fix missing NULL check in lexsort",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
684b159e583ad1c8c658cf128661169bfdfc10c3,"BUG: Fix missing NULL check in lexsort

When Getitem of the lexsort sequence argument failed
this was not checked.

Closes gh-4123
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
205598b0a4ff9cf81904d3871a7fd37931d914a2,"Merge pull request #4117 from abalkin/gh-2276

BUG: Propagate error when assigning an instance to an array item.",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
03d37473fcd15dba37eb93e2777886e9fdecb481,"BUG: Propagate error when assigning an instance to an array item.

Prior to this fix, numpy would swallow an error that may occur when
an instance of an old-style class would be used to set an item in an
incompatible array.  This would result in a SystemError.

Fixes #2276.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
e8869437dc88127b828297e7e945ac02c0e283e8,"Merge pull request #4115 from msperlich/master

BUG: fix loading from compressed .npz (Issue 4093)",numpy/lib/format.py,numpy/lib/tests/test_format.py
f5f223f44394235bff517260aee16b928ea8471b,"MAINT: Change test to read random sized chunks

Speeds the test up vs. reading single bytes at a time, and is now
correctly handled when reading the magic string and array header.
",numpy/lib/tests/test_format.py
e09c5f040fa020bb47c6610356214c0477c206aa,"MAINT: Introduced _read_array function

This wrapper function is used everywhere in format.py now to ensure to
correctly the handle the case when fp.read returns fewer bytes than
requested.

Also added a test for the orignal bug, loading an array of size more
than 64K from a zip file.
",numpy/lib/format.py,numpy/lib/tests/test_format.py
bdb6f8cabf755d4d7b18a3d7e7475480ce6fc008,"MAINT: Better handling of very small chunks

Issue 4093: Improved the handling of the case when the amount of data
read by fp.read is smaller than dtype.itemsize. Also changed the test
code to make sure this case is tested.
",numpy/lib/format.py,numpy/lib/tests/test_format.py
161ca8ff732ed58613b9bdcb2f1dcad7178a76c5,"STY: pep8
",numpy/lib/tests/test_format.py
aa2443af6e6de74edff19757ba1c827b69f7640f,"TST: Adds test case for Issue 4093
",numpy/lib/format.py,numpy/lib/tests/test_format.py
faf4131f6b264477e4047257440eebdf27c2f767,"BUG: Fixes Python3 compatibility
",numpy/lib/format.py
3ba1d94e0b4f6665a594f5664c706782eda22d6e,"BUG: fix loading from compressed .npz (Issue 4093)

In Python 2.6.x the number of bytes read from a zip file is 2^16, which
is less than the 2^18 requested by lib.format.py. This change handles
the case where fp.read() returns fewer than the requested number of bytes.
",numpy/lib/format.py
eef2e7336d9d332646f6611120154a511020da70,"DOC: update version number in bento.info
",bento.info
915dda710f3e1acb80bdcbfdaaf839968511cde7,"MAINT: remove useless email notification in .travis.yml
",.travis.yml
d2e676f1b814b215f765a7d77c691fb00e788591,"TST: add Bento build to Travis CI runs.
",.bento_travisci.sh,.travis.yml
55c76f67cbc8f68fc83bda48f3a7f457720a7d77,"BLD: fix Bento build issue with new .h.src templating.
",bento.info,bscript
b6fa5cac176e48f6976b472df2b5d6d4acfa9f11,"BLD: fix syntax errors in bento.info
",numpy/core/bento.info
3aa76bac67882f29901640f73cdb1b9d9e0c9029,"Merge pull request #4110 from rgommers/setuppy

MAINT: setup.py improvements - allow some setuptools commands to work.",setup.py
17716d7571618b1a55dd5bfda4da2de53b808e54,"MAINT: setup.py improvements - allow some setuptools commands to work.
",setup.py
d05518cdd5efb7ecf3cccf9b3815bd663d96eb56,"Merge pull request #4111 from chrisdembia/patch-1

Correct typo in interp() docstring.",numpy/lib/function_base.py
bfec9eeb4d8b11cd4c695aae1ebe089a21709819,"Correct typo in interp() docstring.

The docstring for interp() contained the grammatically-incorrect text ""defaults is"". I corrected this to ""default is"".",numpy/lib/function_base.py
d47b6de83b9435628ee2883df4b029601fe46d0e,"Merge pull request #4106 from juliantaylor/objargs

ENH: use PyObject_CallFunctionObjArgs in Generic*Function",numpy/core/src/multiarray/number.c
6b05a67b7d1f69e219f34b693fc893da07e9b506,"ENH: use PyObject_CallFunctionObjArgs in Generic*Function

ObjArgs is a few percent faster than the format version. This is
noticable in scalar operations.
",numpy/core/src/multiarray/number.c
056ab73e567b8dae84055108dee6166d637baa57,"Merge pull request #4098 from seberg/issue-3352

BUG: fix incorrect type in binomial ditsributions.c",numpy/random/mtrand/distributions.c
6e141d70edf8872a42cefdcbad49725a5a882467,"BUG: fix incorrect type in binomial ditsributions.c

This caused slowness and wrong/potentially wrong results
when the binomial result is larger then a native C int.

Closes gh-3352
",numpy/random/mtrand/distributions.c
043e3574f3bdd72f786fe2bef44fd51baa5524fe,"Merge pull request #4058 from juliantaylor/intern-strings

ENH: intern some commonly used strings in umath module",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/umathmodule.c
05ab6f4dd3b3608f76bf408335d48753f93b7486,"Merge pull request #3685 from juliantaylor/pairwise

ENH: implement pairwise summation",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
95ff68f9688464970c3712f1eeac34304f8566e6,"Merge pull request #4094 from cgwaldman/master

BUG: fix NaT handling in _strided_to_strided_string_to_datetime",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_datetime.py
1951d3d4c1011132560ae4326f636e5cef01d918,"BUG: Error checks for the dtype shape.

Also creates a clean tuple for the shape tuple, instead of
passing potentially mutable objects through.

Closes gh-4009
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
67b95a3e7a4d54b4fa255b693f569b5d463e3e19,"BUG: fix NaT handling in _strided_to_strided_string_to_datetime

When converting an array of strings to datetime64, a ""NaT"" occurring
in the input would cause all subsequent values to be converted to NaT.
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_datetime.py
c0a0cd741d3ebf5b176bd8347db9d3e6bacc00df,"ENH: also use pairwise summation for half and complex types
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
5da472239a2fb958e410304a6e34b8da50580dab,"Merge pull request #4089 from seberg/issue-3494

BUG: Fix negative axis insert (issue 3494)",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
b0bc01275cac04483e6df021211c1fa2ba65eaa3,"ENH: fix stride issue and unroll 8 times to improve accuracy

Fix missing stride accounting in calling recursive function.
Unroll 8 times to improve accuracy and allowing vectorizing with avx
without changing summation order.
Add tests.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
9d6caf9710e98af2a99cc72650b95dd7ea0727ee,"TST: add test for negative axis values in np.insert.
",numpy/lib/tests/test_function_base.py
50fad03b2ab81d9518e95138f2425ecd82740be3,"BUG: Fix np.insert with negative axis.

In some cases a negative axis argument to np.insert would result
in wrong behaviour due to np.rollaxis, add modulo operation to
avoid this (an error is still raised due to arr.shape[axis]).

Closes gh-3494
",numpy/lib/function_base.py
8db0dc738b9db4ed889718f78b3b8d99d341b088,"Merge pull request #4066 from garyo/master

DOC: Improved doc for boolean array indexing",numpy/doc/indexing.py
0debb6b0db746db4b4e33d31bc71db9877ee46e9,"DOC: further tweaks to boolean indexing doc to improve clarity
",numpy/doc/indexing.py
f57b255e3e83f308480d1c471aa4104b04f41e17,"ENH: umath: simplify pairwise sum

Simple recursive implementation with unrolled base case. Also fixed
signed/unsigned issues by making all indices signed.

Added a unit test based on @juliantaylor's example.

Performance seems unchanged: still about a third faster than before.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_ufunc.py
1e624fa13455e932573b9f421d2865e1fea0cd48,"ENH: implement pairwise summation

pairwise summation has an average error of O(log(n)) instead of O(n) of
the regular summation.
It is implemented as summing pairs of small blocks of regulary summed
values in order to archive the same performance as the old sum.

An example of data which profits greatly is
d = np.ones(500000)
(d / 10.).sum() - d.size / 10.

An alternative to pairwise summation is kahan summation but in order to
have a low performance penalty one must unroll and vectorize it,
while pairwise summation has the same speed without any vectorization.
The better error bound of O(1) is negligible in many cases.
",numpy/core/src/umath/loops.c.src
a5038d9e1aa31ee1e74c3d96647c4b6780d81046,"DOC: further improvements for boolean array indexing doc
",numpy/doc/indexing.py
8ff4c66af5d054ec901f74909a995fd8c31900ef,"ENH: skip redundant checking of subok keyword in _find_array_prepare

all currently existing callers only call this function if subok has
already been checked to be true, but keep the code to make clear it has
to be checked.
",numpy/core/src/umath/ufunc_object.c
b731d4dd67f5c6851eb439d50b3606d23c371c64,"ENH: intern some commonly used strings in umath module

Allows using the PyObject dictionary functions instead of the costly
C-string variants.

Make use of this in some of the ufunc subtype wrapper functions.

Improvement:

    a, b = np.arange(200.), np.arange(200.)
    %timeit np.add(a, b, out=a)
    1000000 loops, best of 3: 768 ns per loop

vs before:

    %timeit np.add(a, b, out=a)
    1000000 loops, best of 3: 1.03 µs per loop
",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/umathmodule.c
f4749b7b2514db9f12978438a2131df981dc14d6,"Merge pull request #4077 from ogrisel/streaming-numpy-save

Streaming numpy.save to arbitrary file objects ",numpy/lib/format.py,numpy/lib/tests/test_io.py
7a497ffdecceec2d8574674a2b8b04f7927f75d4,"TST: Increase test coverage of numpy.save/load roundtrips
",numpy/lib/tests/test_io.py
207474ffcf835baa4d8511eff1f021f1b2bf6532,"ENH: Use nditer in numpy.save to stream bytes to custom file objects
",numpy/lib/format.py
1d1803257467c554db208a24b857d613b872b9bd,"ENH: dotblas: re-route all cblas_?dot calls to chunked versions

Also factored out and simplified NumPy->BLAS stride conversion.
",numpy/core/blasdot/_dotblas.c
46dd681ff4aed02a87b27db684f8600b5b7a7fa3,"BUG/ENH: blasdot: make *dot calls 64-bit safe

BLAS uses int for all its size types, so the size is going to be
silently truncated on platforms where sizeof npy_intp > sizeof int,
i.e. on modern 64-bit platforms. In this case, we do a dot product
in reasonably-sized chunks and add the result ourselves.

On platforms where sizeof(int) == sizeof(npy_intp), i.e. typical
32-bit platforms, it's up to the compiler to optimize the loop away.

Also tried to make the code more readable, replaced int by npy_intp
in a few places and removed useless register declarations (modern
compilers ignore those).
",numpy/core/blasdot/_dotblas.c
78e29a323316642899f8ff85e538b785f0d5e31f,"Merge pull request #4064 from juliantaylor/import-speed

ENH: improve add_newdocs performance",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
acfe123c5f56113139cbd3b8faeb7934316054e8,"DOC: Improved doc for boolean array indexing
",numpy/doc/indexing.py
9f611dec1ebed4c8c933d5d310ceaf67aedbb8a4,"Merge pull request #3980 from larsmans/refactor-gemm-gemv

MAINT: dotblas: factor out all gemm and gemv calls",numpy/core/blasdot/_dotblas.c
66174b8aa5644b11054b72761e89e22fd8a18eae,"ENH: improve add_newdocs performance

replace slow exec with a direct __import__.
improves `import numpy` speed by about 10%.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
74e5c1291c96428ab5dac361edfa94bd2ec51d66,"Merge pull request #4057 from juliantaylor/unaligned-macro

MAINT: make NPY_CPU_HAVE_UNALIGNED_ACCESS a numeric macro",numpy/core/include/numpy/npy_cpu.h,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
773c8f3ff8c1ca2377253bc0c003a795a242b596,"MAINT: make NPY_CPU_HAVE_UNALIGNED_ACCESS a numeric macro

allows using it in if statements like for count_nonzero
also fix a compiler warning by casting
",numpy/core/include/numpy/npy_cpu.h,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
2c02016111f05a040ef7fe97f3455d355077c1d4,"Merge pull request #4020 from juliantaylor/memcrash

BUG: fix missing check for memory allocation failure in ufuncs",numpy/core/src/umath/ufunc_object.c
6eb4a4318bddd6105e91f962dec4a5590f524d02,"Merge pull request #4056 from herr-biber/master

Fix typo.",numpy/lib/twodim_base.py
843792b6d349133114930911424772e6bbbc0c9c,"Merge pull request #4047 from arunpersaud/convolve_doc

DOC: use variable names in formula for convolve",numpy/core/numeric.py
b4b5ad21de6e3be3e537c72727f88d40e65d221e,"Fix typo.
",numpy/lib/twodim_base.py
9f8639aaf2791f3f6e2f5e9f28877314f35db1a3,"DOC: use variable names in formula for convolve

Use the variables names `a` and `v` as used in the function instead of
using `f` and `g`. This makes it clearer which array ""slides"" along the other.
",numpy/core/numeric.py
1ebbd5cf03546be6b5bed727f89eb98c6cdf5d15,"Merge pull request #4055 from takluyver/patch-2

MAINT: Update links to numpydoc source code and README",doc/HOWTO_DOCUMENT.rst.txt
d10c9ffe6de74543d711d3bdf450328a6c8367cc,"MAINT: Update links to numpydoc source code and README

These links pointed to numpydoc's location within the numpy project on Github, but it has since been split out to a separate repository, breaking the links.",doc/HOWTO_DOCUMENT.rst.txt
a49c2797c84825e397de1a5dea4daf0b6db3f160,"BUG: Fixed mask_rowcols().

Previous implementation relied on ma.asarray() to always create
a new object.

See gh-4043.
",numpy/ma/extras.py
a49f07e940ab0a4faf7d5d3a29a977122f0224ea,"Merge pull request #4051 from juliantaylor/valgrind

fix two uninitialized uses reported with valgrind",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/umath/ufunc_object.c
b861cffb48f97bafaef9802989434617baf9d77c,"Merge pull request #4044 from juliantaylor/scalar-conv-enh

ENH: check if type is basic python type before checking for __numpy_ufunc__",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/number.c
1bc2ae55205447cf062f252eab40ba874400f410,"Merge pull request #4042 from chatcannon/f2pydoc

A few F2PY documentation improvements",numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt
ce6f34856f3bb923ceb5a2e22e1b1420d335eff0,"Merge pull request #4038 from seberg/issue-4036

DEP: non-integer scalar python sequence repeat",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_deprecations.py
eed68a8e7c32c7cafceda26bf13bbb702b5af1fa,"BUG: fix uninitialized use in _strided_to_strided_string_to_datetime

dt == NPY_DATETIME_NAT is used as error condition, so initialize it to
something else.
",numpy/core/src/multiarray/dtype_transfer.c
5bd9fbfdea2bb6426508323b7943d67db679dcc5,"MAINT: initialize strides for ufunc.at

avoids uninitialized use errors from valgrind, value of strides is
irrelevant as count is always 1.
",numpy/core/src/umath/ufunc_object.c
217402ee7c8b7d4b08a4384d911d7ee0254fd90f,"Merge pull request #4046 from chatcannon/speling

Spelling & notation corrections",doc/neps/datetime-proposal.rst,doc/neps/datetime-proposal3.rst,numpy/lib/twodim_base.py
0221385a2ff60fd836c9c21fbc7c89e6fdac6da0,"ENH: check if type is basic python type before checking for __numpy_ufunc__

improves performance of scalar conversions (x + .5) by ~30%.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/number.c
e4d8ad84bf098a4c4dcfb21f3b7fbb1d228b2e34,"Merge pull request #4039 from abalkin/issue-4026

BUG: ma.compressed() function returns masked array",numpy/ma/core.py,numpy/ma/tests/test_core.py
50b0e8ef83155f65425075baed32190fd8d4aab8,"BUG: ma.compressed() function returns masked array

When a masked array with nomask was passed to ma.compressed()
function, the result was the original masked array instead of
an ndarray.

Closes gh-4026.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
1a1a757b9165094e25d90985affdb8ddd16551b4,"spelling: AC -> AD in years

(could also use BCE and CE to be more politically correct)
",doc/neps/datetime-proposal.rst,doc/neps/datetime-proposal3.rst
2f348892a3a1b7174decf5d206eead59491596a8,"Spelling: loose -> lose
",doc/neps/datetime-proposal.rst,doc/neps/datetime-proposal3.rst
d8fd28389adb491e24b7cdc25cd1b20f539310c3,"ENH: ma.asarray() and ma.asanyarray() will pass through input of the correct type.

If x is of type MaskedArray for ma.asarray(x) or any subtype of
MaskedArray for ma.asanyarray(x), these functions will simply return x.
This makes them consistent with their numpy counterparts.

Closes gh-4043.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c3b7236df6f409651f9335243abf813ca9ad379c,"Changed CVS cens.ioc.ee documentation links to link to GitHub
",numpy/f2py/docs/README.txt
a0b182c1e4727acae0a6eca02f0e51030252431a,"Moved old news from README.txt to OLDNEWS.txt
",numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt
ca0d3f09ace0abcd9851fa039ad24c0fe10bdc5e,"Updated FAQ with links to github issues page etc

Removed some questions that are no longer relevant
",numpy/f2py/docs/FAQ.txt
4d0076f7e783f42dffb742063d8a05b78ba1e942,"Merge pull request #4037 from migueldvb/docs

Example to convert the type of an array using the astype method and minor typo fix",doc/HOWTO_DOCUMENT.rst.txt,numpy/doc/byteswapping.py
0e5e3d4031c1bb846a6f79b0e9ca5a25277df062,"DOC: Spelling correction for numpy.diag see also
",numpy/lib/twodim_base.py
e1e021dde998b778de0f1adb397abc523a4ccb62,"DOC: Add an example of casting array type and byte order using astype.
",doc/HOWTO_DOCUMENT.rst.txt,numpy/doc/byteswapping.py
b326be11ddaf7af27d40c205552b6fb56656adaa,"DEP: non-integer scalar python sequence repeat

This starts deprecation for code such as
np.float_(3.4) * [1, 2]
which should only work for integer objects. It may be possible
to just return NotImplemented since at least python sequences
implement their multiply themself through __index__.

Further action is only needed for PyArray_PyIntAsIntp, so this
is part of a larger deprecation now.

Closes gh-4036
",doc/release/1.9.0-notes.rst,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_deprecations.py
6132b9832d06a81457ff931c42ac09408f7b0398,"Merge pull request #4034 from endolith/patch-1

DOC: Change pad mode options to a definition list",numpy/lib/arraypad.py
f325c34611ececfdebe302f0368cb455275d51c9,"DOC: Change pad mode options to a definition list

Current formatting is not part of rst, and is not rendering correctly at http://docs.scipy.org/doc/numpy-dev/reference/generated/numpy.pad.html",numpy/lib/arraypad.py
96dd69c5244827e739fb8d998ce1f18b2ecdd088,"Merge pull request #4032 from juliantaylor/format-test

TST: improve test_long_str and add documentation",numpy/lib/tests/test_format.py
235d957a427bc2f18642475a9c65063cf0580d6c,"TST: improve test_long_str and add documentation
",numpy/lib/tests/test_format.py
896863aff98a156b2fe0fca85fa9279ae8f15aec,"Merge pull request #4027 from halfaleague/chunk-read-bug

Chunked reading fails when dtype.itemsize is larger than buffer size.",numpy/lib/format.py,numpy/lib/tests/test_format.py
ff3c89fd0b0c311db316d3d574382336ad3017f7,"Merge pull request #3996 from stromnov/master

Allow checking two or more fortran compilers instead of one.",numpy/distutils/fcompiler/__init__.py
3b6f93cb558e83bf7e1a967b51d9dc3cddc6f885,"Merge pull request #4022 from bbudescu/win-home-envvar

cross-platform code to find home folder when looking .numpy-site.cfg",numpy/distutils/system_info.py
83eb3ac0658d5e71d9860f8b1e37f285ec19c692,"BUG: Fix chunked reading of strings longer than BUFFERSIZE

This fix correctly calculates the number of BUFFER_SIZE chunks to read.
This fix takes into account dtype sizes that could be larger
than the BUFFER_SIZE, like a long string.
See #4027
",numpy/lib/tests/test_format.py
4050ac73af79ae8cc513648ff02e9a22041501c4,"Merge pull request #4024 from eltjpm/from_sequence_fix

Sequence assignment doesn't raise exception on shape mismatch",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
a7a30016a946beef8e2c5a1860222dfbc2a60a18,"test for failing chunk read of large string
",numpy/lib/tests/test_format.py
819597324c4cf4333120cdf951983681f0732ead,"BUG: Fix raising exception on invalid assignment from sequence

Closes gh-4024
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
92b9e8446d342a35fbea2dd004a99f2815b14f69,"When reading file in chunks, buffer_size < dtype.itemsize, ensure at least one read
",numpy/lib/format.py
f30cecb89264660b5818fedaf7ce1fbb3e35050b,"BUG: Support ndim=0 when constructing arrays from buffer

Previously the buffer was interpreted as 1-dimensional when
no shape was provided, even when ndim was 0.

Closes gh-4015
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
e1569a36b4096a9bb131961dac8db36773076137,"cross-platform code to find numpy config

https://github.com/numpy/numpy/issues/3995
",numpy/distutils/system_info.py
d071d3f9d80886868c5ce790289f2af03bed43b1,"Merge pull request #3974 from juliantaylor/fenv-improve

ENH: avoid expensive clears in fenv functions",doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.ufunc.rst,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/src/umath/ufunc_object.c,numpy/linalg/umath_linalg.c.src
a0568165ecc19a60eb47e1b936a0c7c0a1e83501,"BUG: fix missing check for memory allocation failure in ufuncs

closes gh-4018
",numpy/core/src/umath/ufunc_object.c
dcfe3260e2d6d9de7a2c3fb0022ecf124faa2ae2,"ENH: avoid expensive clears in fenv functions

Clearing is 50-100 times more expensive than checking on x86, so check if there
is anything needs to be cleared first. This speeds up scalar operations
by 10%-20%.
Based on Arink Verma code in #3739.

Implement the functions as new C-API functions npy_get_floatstatus and
npy_clear_floatstatus in npy_math.
",doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.ufunc.rst,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/src/umath/ufunc_object.c,numpy/linalg/umath_linalg.c.src
e7e365fa6c3fff01fcb833664425f9b468f2aefd,"Merge pull request #4010 from juliantaylor/reduce-opt

reduction micro optimizations",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c
41f2a26efc9f7853a8f00db3a6cd1f6ee855318c,"ENH: early return from PyArray_EquivTypenums if the numbers are equal
",numpy/core/src/multiarray/multiarraymodule.c
7b124cf705daf8a1a1da99a99f8ac34ea36c2d24,"MAINT: remove unused variable
",numpy/core/src/umath/ufunc_object.c
23065cf8fd7b5851592918c765de2ccf459b2683,"ENH: replace PyUFunc_GetPyValues with faster _get_bufsize_errmask

avoids unnecessary creation of unused error objects.
",numpy/core/src/umath/ufunc_object.c
c86daba7ba4371906115892e837fe33105452023,"ENH: replace Py_BuildValue with faster PyTuple_Pack
",numpy/core/src/umath/ufunc_object.c
0774804b1105e5637a9936f86acad63657d7f111,"Merge pull request #4004 from juliantaylor/doc-updates

DOC: fix layout of issue listings in release notes",doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/release/1.7.1-notes.rst,doc/release/1.7.2-notes.rst
bfc6699c3959b7e48d666f9d9bab5ee971936d8f,"DOC: fix layout of issue listings in release notes
",doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/release/1.7.1-notes.rst,doc/release/1.7.2-notes.rst
37b28f80d91ae3188ecc55ce8bb274f92d4ac904,"Merge pull request #4003 from juliantaylor/release-notes

DOC: update 1.7.2 release notes",doc/release/1.7.2-notes.rst
1beb0ec3fbd81f9179d8402fbdecb2e204421e61,"DOC: update 1.7.2 release notes

add two additional fixed bugs
",doc/release/1.7.2-notes.rst
8a2728c4df0ff7b593eb92f0f2a88b080182d37b,"Merge pull request #3999 from WarrenWeckesser/vander

ENH: lib: Rewrite vander",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
253cff04bb83e0338755863653267c19856f79d4,"MAINT: lib: Use a consistent PEP8-compliant import style in twodim_base.py and tests/test_twodim_base.py.  Also make a couple more PEP8 tweaks.
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
c5c4d0bdc1a7971f35726421b245f6f3515a2cdf,"MAINT: lib: Add a 'See Also' section to the vander docstring, and make a few more PEP8 tweaks.
",numpy/lib/twodim_base.py
cdd1419a1aef2e292991917f415cfe8d8891adf7,"MAINT: lib: remove unused imports and PEP8 clean up in twodim_base.py
",numpy/lib/twodim_base.py
6ced92b72d3c43f0fcd1e680ea0df70ef1779855,"ENH: lib: Rewrite vander: make it faster, and add an option to specify the order of the powers (either decreasing or increasing).
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
a73f729e683b89f74fe076cb2e8f17a4168ece69,"MAINT: Don't use 'import *' in lib/test_twodim_base.py.
",numpy/lib/tests/test_twodim_base.py
0ddb6d19cbddee3fae6a0dc8ba5e1151a0d5f553,"Merge pull request #3997 from juliantaylor/release-notes

DOC: add 1.7.2 release notes",doc/release/1.7.2-notes.rst,doc/source/release.rst
bd92d8c8d8f9a73bf8465421212b16d5713817b6,"DOC: add 1.7.2 release notes
",doc/release/1.7.2-notes.rst,doc/source/release.rst
cef2dc2c2758936011a064ae60956a6c19dbb0cb,"Allow checking two or more fortran compilers instead of one.
",numpy/distutils/fcompiler/__init__.py
eb40f65c66545a717b36b1af669b1ee00fbfc508,"Merge pull request #3992 from ewmoore/winhypot

BUG: hypot(inf, 0) shouldn't raise a warning",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
753d611615d4d98c37a207940c8648dc15329f66,"BUG: fix handling of infs in hypot on windows

On any platform where we used our own implementation of hypot, (e.g.
windows) there were several issues with infs.

hypot(inf, y) == inf, for all y including nan.  We now check for inf and
handle this case explicitly for all y instead of just y = nan.

Although hypot(inf, 0) was correctly returning inf, it was incorrectly
raising the invalid floating point exception.

Fixes gh-2385
",numpy/core/src/npymath/npy_math.c.src,numpy/core/tests/test_umath.py
e7802e7c3ace41e44f5e6ed2745bfde00353d21a,"Merge pull request #3989 from charris/add-authors-to-1.8-notes

DOC: Add list of authors to 1.8.0 release notes.",doc/release/1.8.0-notes.rst
1bc4af25d715ce42ddc12fde179620496d7ee468,"DOC: Add list of authors to 1.8.0 release notes.
",doc/release/1.8.0-notes.rst
85b83e6938fa6f5176eaab8e8fd1652b27d53aa0,"Merge pull request #3982 from charris/refactor-eigh-eigvalsh

MAINT: Refactor eigh and eigvalsh and associated tests.",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
3fc490759fc87dd4702b5a6174638e9fd70019dd,"MAINT: Refactor eigh and eigvalsh and associated tests.

Do not convert the UPLO argument to a bytestring, it is not necessary.
Distribute parts of the eigh tests into the appropriate TestEigvalsh or
TestEigh test class.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
14153dc41baae421e429ce6295267763a571172a,"MAINT: dotblas: factor out all gemm and gemv calls
",numpy/core/blasdot/_dotblas.c
47b5af987bf31553329334fa08898dac67dbf1ac,"Merge pull request #3978 from juliantaylor/py3-eigh-bug

BUG: fix broken UPLO of eigh in python3",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
103abc22f803cd825a12c9ec900df26b34d501df,"Merge pull request #3979 from pv/gcov

MAINT: runtests: enable generation of C code coverage info via gcov",runtests.py
f8e07275f05e95a4d0af098b06d37925602f7861,"BUG: reject invalid UPLO with ValueError in eigh/eigvalsh

to prevent unintentional use of wrong function. Restores 1.7 behavior.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
4f386f14fa0349bbf23aaad44b2b7ec6b03504e7,"Merge pull request #3969 from juliantaylor/memchr-bug2

BUG: fix handling of negative strides in npy_memchr",numpy/core/setup_common.py,numpy/core/src/multiarray/common.h,numpy/core/tests/test_api.py
5005b2913ce67d1c660473945b2a9652ca6fd7d4,"MAINT: runtests: enable generation of C code coverage info via gcov
",runtests.py
e549e69020e3dcec08185695db6f7001a62dc934,"BUG: fix broken UPLO of eigh in python3

UPLO was cast to bytes and compared to a string which is always false in
python3.
closes gh-3977
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
ef229342f2bc0fdbee3264cb245d6c0a4ebfc1ff,"MAINT: remove trailing zero count path in npy_memchr

its only actually faster than just running through the trailing bytewise
loop if the needle is in the last byte.
",numpy/core/setup_common.py,numpy/core/src/multiarray/common.h
a3e8c12ed88c6db2aa89cfbb7a69fc863e8a40dc,"Merge pull request #3965 from seberg/valgrind

MAINT: Initialize strides in NpyIter and silence valgrind",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/number.c,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_api.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/linalg/tests/test_linalg.py
3a01f4e11874be9db17fb24fa17c649fd45a8aff,"TST: Initialize some arrays to to avoid valgrind warnings
",numpy/core/tests/test_multiarray.py,numpy/linalg/tests/test_linalg.py
ef511149ebeb5e53059b75b1305d0405744b3d8a,"BUG: Further reference count issues in __int__ and friends
",numpy/core/src/multiarray/number.c
8988715e1aea7b10b230115aecae029cf6e80d66,"Merge pull request #3971 from ochoadavid/patch-1

BUG: changed string.lowercase to string.ascii_lowercase",numpy/f2py/crackfortran.py
b61cb2c893455d47fafbf9914003ce2715cab739,"crackfortran: changed string.lowercase to string.ascii_lowercase

Compatibility with Python3, which dosn't have string.lowercase.",numpy/f2py/crackfortran.py
d6e81151a80eb1922dae027a04cabf8235d58834,"BUG: Fix clongdouble type in scalar type selection
",numpy/core/src/multiarray/convert_datatype.c
6e5f0c1231af4958acfa8aa4cf3dfea404acbe9c,"MAINT|BUG: Some small refcounting fixes
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/number.c,numpy/core/src/umath/test_rational.c.src,numpy/core/tests/test_regression.py
77ecefbbae4892f45ffed0119ca3dab28a4d1f65,"BUG|MAINT: Fix reference count bugs, init NpyIter strides

Also changes some tests to not use np.empty as to avoid
valgrind spam.

The NpyIter strides are arbitrary, but 0 makes sense, and the
strides are used to decide which transfer function to use, etc.
causing lots of warnings in valgrind.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_api.py
cfd81489a61c5144c9a77bb0494877817acd24d3,"BUG: fix handling of negative strides in npy_memchr

the new code did not account for them at all, add the old loops back but
keep the stride 1 optimization for sparse masks.
",numpy/core/src/multiarray/common.h,numpy/core/tests/test_api.py
93a0ac83262dff14bb2c9a5062bf300d9d225fd3,"Merge pull request #3970 from juliantaylor/sort-keeporder

ENH: keep order in np.sort and np.partition copy",numpy/core/fromnumeric.py
f0e6e0143c4a43e0bb9dcad7c567ffaa51d7a281,"ENH: keep order in np.sort and np.partition copy

avoids unnecessary strided to contig copy for fortran arrays.
",numpy/core/fromnumeric.py
ec5b97ddb592de1e5722439c3ba0599e62e73fed,"Merge pull request #3963 from juliantaylor/default-errobj-crash

Default errobj crash",numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/core/tests/test_numeric.py
a1dad5dcfe075681128638cae47c5ae26045cb41,"ENH: merge UFUNC_ERR_DEFAULT2 variable into UFUNC_ERR_DEFAULT

It seems it was added as a precaution to avoid breaking the rather
complicated ufunc code. It effectively disabled the skipping of the
dictionary lookup for the default values for the common case and leading
to hardly tested code in third party libraries like pandas which set the
error state to numpys old default (ignore all).
The skipping improves scalar performance by 2.5-5%.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/src/umath/umathmodule.c,numpy/core/tests/test_numeric.py
b52487e026fc25e913b226381b185133ea629fc6,"BUG: fix crash on default errobj

Missing check for optional NULL argument, the case can only happen if
the error mask is 0 (the old default).
closes gh-3962
",numpy/core/src/umath/ufunc_object.c
54d3559c325be26f8fee71e1c669cc502286dc77,"Merge pull request #3952 from JStech/issue_2052

BUG: #2052 del scalar subscript causes segfault",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
0d3289fa1d1a4f54980b65ad3b3f169a2a1afa59,"Merge pull request #3954 from juliantaylor/memchr-bug

BUG: wrong boundary check in unrolled memchr",numpy/core/src/multiarray/common.h
11a931bbb935d9fe74c9b6382463f0ab840d0992,"Merge pull request #3953 from WarrenWeckesser/savetxt-bad-fmt-error

MAINT: io: handle a bad fmt argument in savetxt by raising a ValueError.",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
97e6cadc835bc3b22da0c63591addf1a9455e965,"BUG: wrong boundary check in unrolled memchr
",numpy/core/src/multiarray/common.h
c71f36658459e87cc3c938308b62ce0e0b34a6f8,"BUG: #2052 del scalar subscript causes segfault

Fixes issue #2052, where attempting to delete a scalar field causes a
segfault. Returns ValueError instead, like when attempting to delete an
array element.

Also added a test for this bug.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
0d284764a855cae11699228ff1b81e6d18f38ed2,"MAINT: io: handle a bad fmt argument in savetxt by raising a ValueError.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
55d3ef5b81b709cc9d8ad6b13f75ca0f05f65276,"Merge pull request #3856 from pv/op-before-ufunc

BUG: core: ensure __r*__ has precedence over __numpy_ufunc__",doc/neps/ufunc-overrides.rst,doc/source/reference/arrays.classes.rst,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/tests/test_multiarray.py
fd5d3088ed71bbc2fe5a774178be5e0ba04e4cd1,"BUG: core: ensure __r*__ has precedence over __numpy_ufunc__

Add a special case to the implementation of ndarray.__mul__ et al. that
refuses to work on other objects that are not ndarray subclasses and
implement both __numpy_ufunc__ and __r*__.

This way, execution passes first to the custom __r*__ method, which
makes it possible to have e.g. __mul__ and np.multiply do different
things.

Additionally, disable one __array_priority__ special case handling when
also __numpy_ufunc__ is defined.
",doc/neps/ufunc-overrides.rst,doc/source/reference/arrays.classes.rst,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/tests/test_multiarray.py
1eb5f03c4c27009cac5d7c19f36bfab718533072,"Merge pull request #3921 from mdickinson/doc-numpy-random-fixes

DOC: Fix misleading description of random_sample in numpy.random docstring.",numpy/random/info.py
a3858f3be1238970c407d045c6d2b1ad956f2df0,"Merge pull request #3951 from seberg/scalar-priority

ENH: Add scalar special cases to Priority getter",numpy/core/src/multiarray/common.c
11248b71c67fae4c891bf9f16eb5659307c67fce,"ENH: Add scalar special cases to Priority getter

Exact Python scalars can never have a priority, but checking
it is expensive. This adds checks for these to the Priority
getter function.
",numpy/core/src/multiarray/common.c
5d01dd12457285318c3b7ea26fe1de2b5190e4ab,"Merge pull request #3946 from juliantaylor/pyufunc_refactor

delay error object creation to when errors occur",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py
6d6dc6d56ed97421d1f106882854058e4fa4fdb3,"MAINT: refactor ufunc error object handling

_get_global_ext_obj: retrieves global ufunc object
_get_bufsize_errmask: get only bufsize and errormask from ufunc object
_extract_pyvals: handle NULL extobj

PyUFunc_GetPyValues implemented as _get_global_ext_obj +_extract_pyvals
drop unused first_error variable.

fix errobj memory leak in previous commit.

add some test for the extobj and warning path, the warning tests are
disabled like the raising path as they fail on a bunch of platforms.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py
43df2ee1a0e8dd27f91063a4f5e78afe06f1970b,"Merge pull request #3945 from juliantaylor/minmax-improve

ENH: unroll vector minmax loop",numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py,numpy/testing/utils.py
e79296bf9cd9872ab3a4c54c05cce8f5ac410bf7,"ENH: High time consumption by PyUFunc_GetPyValues in ufunc_object.c
For every single operation calls, numpy has to extract value of buffersize, errormask
 and name to pack and build error object. These two functions, _extract_pyvals and
PyUFunc_GetPyValues together use >12% of time.
",numpy/core/src/umath/ufunc_object.c
b0dd6901d54e687571e44c4fa1d9c7db0d00e299,"ENH: accept callable as message in assert_

Allows deferring evaluation until failure.
Used for blocked minmax test which evaluate array representations for
the error message many thousand times accumulating to a full second
useless runtime.
",numpy/core/tests/test_umath.py,numpy/testing/utils.py
46a3fc10ef27be3637d72b5a6befb440a012dc87,"ENH: unroll vector minmax loop

Improves speed by 10% on intel cpus.
Simplify code by moving the fenv support check into the dispatcher. fenv works
on all common platforms (including windows), the fallback is not worth it for
the exotic platforms where it might not be available.
",numpy/core/src/umath/simd.inc.src
4533821ca2d7f7e7963106a4797c99cc4df451c3,"Merge pull request #3950 from larsmans/c-fixes

C fixes",numpy/core/_methods.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpyos.c,numpy/linalg/lapack_litemodule.c
341eeb573a14822906e83d2e236e6152693b2e18,"MAINT: fix item_selection.c so it compiles without warnings
",numpy/core/src/multiarray/item_selection.c
405753a1051d26590b0e8844eb0d42a2e00c4808,"MAINT: typo
",numpy/core/_methods.py
31d6c4ea5882e1335b3f89e022e7df71380c07ac,"MAINT: unused variable, formatting
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/number.c
002de555e86ec02fe4ebf3765fe0f4a7e72a7db5,"MAINT: C identifiers causing UB + useless char returns

C identifiers aren't allowed to match ""^_[A-Z]"". Fixed that in
numpyos.c and removed some more useless underscores.

Changed NumPyOS_ascii_tolower and the code that calls it to handle
ints, not chars. C promotes char to int in so many situations that
char variables are just a pain. (The C standard library uses int
in <ctype.h>, for example.)
",numpy/core/src/multiarray/numpyos.c
503c7ae605f9e0c1ec7f4331979a85c5c7a9abc4,"MAINT: double underscores in Lapack-lite C module

Strictly speaking, any non-standard name with ""__"" in it causes
undefined behavior in C. It's also completely unnecessary to use
any in this module.
",numpy/linalg/lapack_litemodule.c
640c9de47b0c2f97d04506a032f6f935d5435f24,"Merge pull request #3948 from pv/runtests-path

BUG: runtests: make -t option work again",runtests.py
eef0f07b8a6ce3682d96393146121f947634107c,"Merge pull request #3947 from seberg/inline-check-index

ENH: Inline check_and_adjust_index",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h
0b9094b99e56fc6f29d856848e8e639e1316d15d,"BUG: runtests: make -t option work again
",runtests.py
81a0fe984fb5e4546a318260f8c9955440f6abf2,"ENH: Inline check_and_adjust_index

The function takes a considerable amount of time of np.take and
to also fancy indexing. Simple np.takes can speed up by more then
40%, fancy indexes around 10%.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h
18acfa462a63bcdaf86360f0c94bc9347ecafad5,"Merge pull request #3941 from charris/make-test-endian-independent

BUG: test_fortran_order_buffer fails on big endian architectures.",numpy/core/tests/test_regression.py
dc974f3a7aeff58b19822ce4253bb0edf8039f8d,"BUG: test_fortran_order_buffer fails on big endian architectures.

The numpy unicode string comparison function does not work correctly
for non-native byte orders. That is a problem needing fixing, but
test_fortran_order_buffer is only needed to check that the buffer
works correctly for fortran order buffers, so let the endianess of
test data be the platform default.
",numpy/core/tests/test_regression.py
ac6329832d23e7788ad160d88d8af6a1a1d93da3,"Merge pull request #3936 from charris/forward-port-3935

forward-port-3935 ",numpy/core/src/multiarray/mapping.h
876f416ef43f37b13615adfadcdeca39551bdb58,"BUG: multiarray/mapping -- address for former renaming of array_ass_big_item

Lead to build failures on s390 (32bit user space).
Patch by Charles Harris
",numpy/core/src/multiarray/mapping.h
af2b52ec162395e5ca034933ec621868bcaf9bc1,"Merge pull request #3933 from charris/add-missing-no-deprecated-api

MAINT: Define NPY_NO_DEPRECATED_API in struct_ufunc_test.c.src",numpy/core/src/umath/struct_ufunc_test.c.src
3b3fa76d5051078d27b1a30b77b586e09c8b889d,"Merge pull request #3931 from juliantaylor/memchr-move

move memchr like code to a function",numpy/core/include/numpy/npy_cpu.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py
7d4ea165817fc613c79bb92ccb3844df94d1beed,"ENH: improve npy_memchr(p, 0) by using __builtin_ctz (tzcnt on x86)

Improves sparse mask performance by about a factor of three, the worst
case of no consecutive mask elements slows down by about 10%-15%.
",numpy/core/setup_common.py,numpy/core/src/multiarray/common.h
cf0869ea03e671986525c20bfda52deda501b316,"Merge pull request #3913 from bspinnler/fix_correlate_docstring

DOC: fixed correlate docstring.",numpy/core/numeric.py
935017cbc3a336f66a110b53d2b595fffc8adbd7,"MAINT: add npy_memchr for memchr like operations

useful for small sizes where the function call is expensive.
",numpy/core/setup.py,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py
0f7eea9af4593f4490ff95611066e43176b5f8c8,"MAINT: silence warning by casting to right type
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/item_selection.c
0bfb598f3d38bc3a269e072ba22ce2649d46e726,"Merge pull request #3929 from chrodan/strc++11

add spaces to literal string concatination for C++11 compatibility",numpy/core/include/numpy/npy_1_7_deprecated_api.h
a6b0f40213e5f0418d3ecf37436c332478ebc039,"Merge pull request #3932 from juliantaylor/windows-annoyance

BUG: fix declaration-after-statement",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
f4eaba79790e18711b259ce8870b7966cbaa88a5,"MAINT: Define NPY_NO_DEPRECATED_API in struct_ufunc_test.c.src

Removes a compile warning and makes the function use proper macro
replacements. Also fix a pointer type mismatch warning.
",numpy/core/src/umath/struct_ufunc_test.c.src
0f99cf0476fed0a94656364454a69cfa86d0c890,"BUG: fix declaration-after-statement

closes gh-3930
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
5fdfa413964ea9c17fbe9bc1f996e5feb60bb24d,"added spaces to literal string concats

literal string concatination without spaces not
allowed in C++11 anymore
",numpy/core/include/numpy/npy_1_7_deprecated_api.h
84c52d80b05510e10e730ce9c8c026aadb429594,"BUG: cov/corrcoef complex input and empty arrays

This preserves the complex (and higher precision float or
object) type of the input array, so that the complex
covariance and correlation coefficients can be calculated.

It also fixes the the behaviour of empty arrays. These will
now either result in a 0x0 result, or a NxN result filled
with NaNs.

A warning is now issued when ddof is too large and the factor
set to 0 so that in this case the result is always NaN or
infinity/negative infinity and never a negative number.

Closes gh-597 and gh-2680
Closes gh-3882 (original pull request)
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
95a5219774818eb754053a8c45023e2e185642e7,"Merge pull request #3914 from mhvk/numeric/isclose-mask-safe

BUG Masked arrays treated incorrectly in isclose(..,..,equal_nan=True)",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
e31729bb9c7abd08b1815100abab6ca63f71b8bf,"MAINT: add NPY_CPU_HAVE_UNALIGNED_ACCESS macro

currently only i386 and amd64, must be used carefully as the compiler
may still be allowed to assume alignment and try to vectorize based on
type size alignment.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
16236e27f93b3a1b3bf6a58750fdaec68b224420,"Merge pull request #3923 from cgohlke/patch-1

BUG: close file-like objects returned by urlopen",numpy/lib/_datasource.py
a1ebc6765dea098f3f9b9180baa2cc50b042da8c,"BUG: close file-like objects returned by urlopen

Fix `ResourceWarning: unclosed file` on Python 3",numpy/lib/_datasource.py
9217077ed5134ce869b41334b3b14d2f1a52e2af,"DOC: Fix misleading description of random_sample in numpy.random docstring.
",numpy/random/info.py
f6492d927206cf87006e005f0ab19d2db20bc889,"DOC: replaced typeset formulas by pure ASCII equivalents.

Replaced typeset formulas by pure ASCII equivalents. Should now be
easier to read in source files.
",numpy/core/numeric.py
61c8568e8ae2fe0afbb7a96b72902573ac4e22e7,"Merge pull request #3919 from nkoep/master

Fix example plot of Laplace distribution",numpy/random/mtrand/mtrand.pyx
0390fe34ade1ce3ebf8b27873e2a160c6bc86da5,"Fix example plot of Laplace distribution

In the PDF used for the example plot of the Laplace distribution only the location parameter loc instead of the absolute difference between random variable and loc was divided by the scale parameter. For the example at hand this makes no difference as loc is 0 and lambda is 1. For different values, however, the plot makes no sense.",numpy/random/mtrand/mtrand.pyx
415c62c29a7d074b75c7fb0e05b21c36b5c8e077,"MAINT: update pavement.py for no-2to3.
",pavement.py
07a20f33f8dbc6a53265400eeb725fd0f146a6e9,"Merge pull request #3918 from seberg/nditer-too-large

BUG: Check that npyiter is not too large",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
fea2a00756823d98d9060ec396823fc432845204,"BUG: Check that npyiter is not too large

Since NpyIter keeps track of the total size, this cannot be
larger then npy_intp, so that an overflow check is necessary.
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
066bdec38358fa22933247bd11d7df64ee4c632c,"Merge pull request #3917 from juliantaylor/scalar-int-overflow

check integer overflows in scalarmath",numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/npy_partition.h,numpy/core/src/private/scalarmathmodule.h.src,numpy/core/src/scalarmathmodule.c.src
777c6e5346251c0c2fc9fba4d1295a7cc8fc83d7,"MAINT: add library sources to some dependencies

fixes missing recompilation of parts of numpy when the static libraries
change.
",numpy/core/setup.py
3f5ef54558e3546134be32edfdc2ed510a9cc6ca,"ENH: add scalarmathmodule.h.src with integer overflow functions

and use them in scalarmathmodule.c instead of the old (disabled) ones.
",numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/scalarmathmodule.h.src,numpy/core/src/scalarmathmodule.c.src
10ce5b29cf1fd507f1ba8d072724388089774ac4,"MAINT: add src/private in build_dir to include search paths

allows generating headers like npy_partition.h with the code generator
",numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/private/npy_partition.h
681025d3f601dd2ac4ec3b24f728b4e319218c8d,"Merge pull request #3820 from juliantaylor/microopt

A couple micro optimizations",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py
83fb19e7f37502df72d4c4865138f7d84de7c517,"Ensure masked arrays are treated correctly for isclose(..,..,equal_nan=True)
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
4dbf3fe9ae3c0f06dd129646baa7a4f6e498291d,"Merge pull request #3906 from mhvk/ma/test-pep8-and-cleanup

Convert docstrings to comments for nose; PEP8 cleanup (some tests activated)",numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py
d713f3d0247540328208e3f9e1d615f0e7381cfe,"Merge pull request #3910 from pv/runtests-fix

MAINT: update runtests.py from scipy",runtests.py
53cafa064698dd877acb82aa1b6319510fe70ef5,"DOC: fixed correlate docstring.

Replaced correlation formula with corrected version that matches the
numpy implementation. Added comment on possible further different
definitions of correlation. Added examples.",numpy/core/numeric.py
6dfe8641e5086241dda081f82dc8a12610d52fd9,"MAINT: update runtests.py from scipy

The additional chdir before starting the test allows tests that launch
subprocesses to run.

Fixes gh-3909
",runtests.py
3d9d9aa60adf788567a888f0419a4155bcab8693,"One revert (comparisons with None; not PEP8, but good to check); extra comments
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
beb1911b68e791923c56c9c99adfb14a036c20bd,"Small further cleanups of ma.tests, plus correction for python3
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
9f1c178b88ac566f3432a8955a9ede38a5390fa1,"Convert docstrings to comments for nose; PEP8 cleanup (some tests activated)
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py
46b1a4c57e038c8daa748ed6c9ad148926bc2207,"Merge pull request #3900 from mhvk/ma/pass-on-NotImplemented

BUG Ensure NotImplemented is passed on in MaskedArray ufunc's",numpy/ma/core.py,numpy/ma/tests/test_core.py
50f33ad0873057a3cd7e673d54e8fc34260049f5,"Small corrections to tests
",numpy/ma/tests/test_core.py
a2f011547749cc53013a31ddd1050345b76fe0d9,"Merge pull request #3902 from pv/fix-linalg-stride-pt2

BUG: linalg: don't tell BLAS to use zero strides",numpy/linalg/tests/test_linalg.py,numpy/linalg/umath_linalg.c.src
6ec43800d3c52a828b6dacde1202265887810dc6,"STY: linalg: fix C comment style
",numpy/linalg/umath_linalg.c.src
301d075e1d8b2471b7ecaf0182622568b54b9b68,"Add test cases to ensure NotImplemented is passed on
",numpy/ma/tests/test_core.py
984854aa605b5b4d5afe630e1879aa83845b11fb,"BUG: linalg: don't tell BLAS to use zero strides

At least OSX Accelerate fails for this case.
",numpy/linalg/tests/test_linalg.py,numpy/linalg/umath_linalg.c.src
c9ed04a5a72fa488a203a7c82cc73f390c3afe8b,"Merge pull request #3894 from juliantaylor/count_bool

ENH: add faster boolean count",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
310c8c167a31f0c84890ed2e8f159289ba9552e0,"ENH: add faster boolean count by using wider data types

about 3-5 times faster on 64 bit machines, about 2 times faster on i386.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
405d4ae2eb3f167007a627dccab370e04f1343e4,"Ensure NotImplemented is passed on in MaskedArray ufunc's
",numpy/ma/core.py
de9b44f4cdd45816c00c6005a8a1b9706545f063,"ENH: use dot (BLAS!) in linalg.norm
",numpy/linalg/linalg.py
d19d96f1a194706bc2fe9f85f088a73fbdcaa401,"Merge pull request #3862 from juliantaylor/null-free

MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checks",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
deb6b8662560b9f30cdec7de5b0135b3de54ab8f,"Merge pull request #3888 from cowlicks/backporting-docs

DOC: Notes on backporting.",doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_links.inc
664d7db5eae5b7cec7368c3571f7b63fbbf2a007,"DOC: Notes on backporting.
",doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_links.inc
31aa00150d8e42ea65f571642cb6281b6eed7dbd,"Merge pull request #3829 from jarondl/pep8-npyio

STY: pep8 for npyio",numpy/lib/npyio.py
cc0dc438617211981401048b1b17bc09b87b8ebd,"STY: pepe8 for npyio continued 2 (typo)

fixing one typo in npyio.py
",numpy/lib/npyio.py
ae8d7b5a1f85572dc64ee5d168240479c5cc189d,"Merge pull request #3885 from Nodd/py3_info

BUG: Disable check for oldstyle classes in python3 (np.info)",numpy/lib/tests/test_regression.py,numpy/lib/utils.py
c3d111cc84c04b1b70c719138cc46d3ad531bfed,"TST: Raise AssertionError on failure
",numpy/lib/tests/test_regression.py
b91c711acc0514f21f66e48c948deb83f858d234,"Merge pull request #3890 from andreas-h/patch-1

Update memmap.py",numpy/core/memmap.py
03b414fa09a17244ce499c724d4a2f42f1194205,"Merge pull request #3886 from charris/update-1.8.0-notes

DOC: Update 1.8.0 release notes.",doc/release/1.8.0-notes.rst
86f956a0e8c37acbb00850fb28b2bebc826048f3,"Update memmap.py

Clarify `memmap` docstring to better reflect the meaning of *offset*.",numpy/core/memmap.py
7d0c743511028c66b973d18d1b573af4777e412f,"DOC: Update 1.8.0 release notes.

Order highlights by significance. This is a subjective judgement.
Mention the linalg enhancements and illustrate with an example.
",doc/release/1.8.0-notes.rst
ba3697d88ef5cbc7769b21e14dd4018afc925e50,"TST: Regression test for gh-2561
",numpy/lib/tests/test_regression.py
293b9e01c5aae668e06522427870c24564a0ebc4,"BUG: Disable check for oldstyle classes in python3

Fixes gh-2561
",numpy/lib/utils.py
6a7830b143945c40b2893d02ea09951cd8c60598,"Merge pull request #3880 from pv/linalg-stride-fix

Fix bugs in umath_linalg + add more tests + remove unused code",numpy/linalg/_gufuncs_linalg.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/umath_linalg.c.src
2fa1c9d150398cc52a2752604e24bde9e762a43c,"TST: linalg: better rtol choice
",numpy/linalg/tests/test_linalg.py
727ed469beb8a53a9a270f4721147dc8032a4941,"TST: linalg: add slightly bigger test case + don't catch KeyboardInterrupt
",numpy/linalg/tests/test_linalg.py
0f516827dd081625b8b2262297be57ac855a9bb5,"MAINT: linalg: strip out unused gufuncs_linalg code

Some of the functions removed were untested, and apparently did not
function correctly (cholesky_up, inner1d, maybe more).
",numpy/linalg/_gufuncs_linalg.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/umath_linalg.c.src
bbfe9a475a962fd90022fd654829b652c6679ce9,"BUG: linalg: fix eigvalsh return type (always real-valued)
",numpy/linalg/linalg.py
694ce0e5c939a6eab80e4fe083aedf1a19ceb845,"BUG: linalg: use correct BLAS incx convention in xCOPY
",numpy/linalg/umath_linalg.c.src
f2ce6351314c228a3b80cced2e2f1746596d1ddc,"TST: linalg: add more comprehensive test cases for linalg funcs

Also remove TestCase subclassing, so that generator tests work.  Also
fix bugs in the existing generator tests that were not actually run
previously.
",numpy/linalg/tests/test_linalg.py
ec3603f43aaf4056bdd78401c23c937c5760f673,"Merge pull request #3872 from charris/fix-sunpro-issue

BUG: Include sunmath.h in npy_math.h when __SUNPRO_CC defined.",numpy/core/include/numpy/npy_math.h
15bb858cfa01ed562a747c6c7f914e630d0ecf03,"BUG: Include sunmath.h in npy_math.h when __SUNPRO_CC defined.

The include is needed for isinf.

Closes #3871.
",numpy/core/include/numpy/npy_math.h
6c189917beef5b68c1caea49d5389690c54f8c61,"STY: pep8 for npyio continued

Two slight style modifications in npyio, regarding line length.
",numpy/lib/npyio.py
7457f156bfbad591397dee780eee275f8f1fe2ce,"Merge pull request #3869 from charris/tweak-1.8-notes

DOC: Tweak the 1.8.0 release notes.",doc/release/1.8.0-notes.rst
4c4d517459e8c7b8871cdbf622823f9579b3905b,"Merge pull request #3769 from juliantaylor/percentile-compat

BUG: ensure percentile has same output structure as in 1.8",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
635181b83e4e885d37432e6654eb39f42baca543,"DOC: Tweak the 1.8.0 release notes.

Add the new nan functions and linear algebra gufuncs to highlights.
Tweak some rst formatting.
",doc/release/1.8.0-notes.rst
2df7b8c1fda628e752105344075295f99529daa7,"Merge pull request #3868 from charris/forwardport-1.9-3859

Forwardport 1.9 3859",doc/release/1.8.0-notes.rst,doc/source/reference/c-api.iterator.rst
488930a58e6a9a746eed37b5ca5ad8896b7ee13c,"DOC: add highlights to release notes and rewrite and move some sections

closes gh-3842, gh-3843
",doc/release/1.8.0-notes.rst
e8f9d6d983a05ed994f09a08fef09db7c972370e,"DOC: fix signature of NpyIter_GetIterNext in capi doc
",doc/source/reference/c-api.iterator.rst
0cfa4ed4ee39aaa94e4059c6394a4ed75a8e3d6c,"Merge pull request #3866 from charris/refactor-1.9-nanfunctions

Refactor 1.9 nanfunctions",numpy/core/_methods.py,numpy/core/tests/test_numeric.py,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
2f77e1e6e6b91a9cd11c422342c69e8fd68ee803,"BUG: Make ndarray.{var, std} work for scalars.
",numpy/core/_methods.py,numpy/core/tests/test_numeric.py
9c7e6e30315ab4541775d9a78630e88423c752c1,"BUG: Refactor nanfunctions to behave as agreed on for 1.9.

    Deal with subclasses of ndarray, like pandas.Series and matrix.

        Subclasses may not define the new keyword keepdims or deal
        gracefully with ufuncs in all their forms. This is solved by
        throwing the problem onto the np.sum, np.any, etc. functions
        that have ugly hacks to deal with the problem.

    Settle handling of all-nan slices.

        nanmax, nanmin -- Raise warning, return NaN for slice.
        nanargmax, nanargmin -- Raise ValueError.
        nansum -- Return 0 for slice.
        nanmean, nanvar, nanstd -- Raise warning, return NaN for slice.

    Make NaN functions work for scalar arguments.

        This may seem silly, but it removes a check for special cases.

    Update tests

        Deal with new all-nan handling.
        Test with matrix class as example of subclass without keepdims.
        Test with scalar arguments.

    Fix nanvar issue reported in #3860.

    Closes #3860 #3850
",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
c2dc2cdb73530805b77a75efdd106d7633f2fff3,"Merge pull request #3865 from rgommers/matrixprop-docs

DOC: make docstrings of matrix properties (.T, .H, .I, .A, .A1) work.",numpy/matrixlib/defmatrix.py
cc99961bfba5bfd118d353c4aa2290b5d593f0fa,"DOC: make docstrings of matrix properties (.T, .H, .I, .A, .A1) work.

Closes gh-1939.
",numpy/matrixlib/defmatrix.py
0950739494be8bff68db20b19919ac137960dfe8,"BUG: ensure percentile has same output structure as in 1.8

percentile returned scalars and lists of arrays in 1.8
adapt new percentile to return scalar and arrays with q dimension first
for compatibility.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
76db3ffb4b8e8a1031133a9a747310b8639890a0,"MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checks

Deallocation should just do nothing if provided a NULL pointer nditer
deletion broke this convention.
Removed many redundant NULL checks for various deallocation functions
used in numpy, they all end up in standard C free or PyMem_Free which
are both NULL safe.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
f665c617065ba59b1c517b8dd44080c83dbfd5bd,"Merge pull request #3851 from juliantaylor/median-subclass

BUG: preserve ndarray subclasses in median",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
e6f0c9023d9a57a83d83684c2f63ad924038be69,"BUG: preserve ndarray subclasses in median

closes gh-3846
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
d2316262a7837dd68904645453c0eee01427a0fc,"Merge pull request #3848 from seberg/solve_0k

BUG: Allos linalg.solve to handle zero equations.",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
88f35b7e6a9677a99d61dbebf5d3b0dfd50edf72,"Merge pull request #3841 from juliantaylor/rnotes-master

update 1.9 release notes and sync 1.8 notes with maintenance branch",doc/release/1.8.0-notes.rst,doc/release/1.9.0-notes.rst
069ecaecd09a97c54dfd1b4acb3a3721f9e91aa9,"BUG: Allos linalg.solve to handle zero equations.

This was previously correct, but the special case was missing
since the gufunc code cannot handle it.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a1fe3028793c8b9e8f0feaffb56eaa77f8a66879,"DOC: minor rewording of partition note
",doc/release/1.8.0-notes.rst
6e226461752ec092bd71300b153aa319d783b32f,"DOC: update percentile release notes and add np.array improvement
",doc/release/1.9.0-notes.rst
80b9c205743f395e9cb87b6e47cf95b8cf156122,"DOC: move support for large files to features

its nothing you should need to worry about when porting to 1.8
",doc/release/1.8.0-notes.rst
399db09c234fde2850891ffff9332f485c368f65,"DOC: mention new comparison runtime warnings in release notes
",doc/release/1.8.0-notes.rst
74abfa27763f76cbce0ec1a1763f0687e5d8a4c0,"Merge pull request #3838 from juliantaylor/null-fix

MAINT: fix another wrong NULL check",numpy/core/src/multiarray/ctors.c
ebe4ce7a8517f247b8310ee886bb935d4c0d1550,"MAINT: fix another wrong NULL check

silences cppcheck error, not a bug as the only caller checks the python
error.
",numpy/core/src/multiarray/ctors.c
0e195abba8b1a7744b0a3c4d5e9331a1b54d5541,"Merge pull request #3826 from charris/add-oldnumeric-numarray-to_init

MAINT: Make useless imports of oldnumeric and numarray safe.",numpy/__init__.py
e051ff1e0304b1e207d9ffff70b3ffb55f175a96,"Merge pull request #3832 from juliantaylor/static-issues

BUG: fix small issues found with cppcheck",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/linalg/umath_linalg.c.src
34fc33eb104305a9bb5ce6b659f87beb3d5a4737,"BUG: fix small issues found with cppcheck

uninitialized use in _strided_to_strided_one_to_n_with_finish
wrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_str
double free and memleak in umath_linalg.c.src init_@lapack_func@
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/linalg/umath_linalg.c.src
e765197d9d64563e50f1b9e541d1e4724eb5d82f,"STY: pep8 for npyio

Various pep8 fixes for npyio.py
Also reorganized the imports, and removed the unnecessary (I hope)
`_string_like = _is_string_like` statement.
",numpy/lib/npyio.py
3a6c6293cd4e6262f6b589430ea52fefb12db02a,"Merge pull request #3827 from pv/fix-gh-3796

BUG: core: consider both C and F order buffers as contiguous",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_regression.py
3820f9e9c97560ec672dc1ba3b32bc2c38dcc15f,"BUG: core: consider both C and F order buffers as contiguous
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_regression.py
9b9469980ebbd79e67c20e609b3cf1c860ba3308,"MAINT: Make useless imports of oldnumeric and numarray safe.

The oldnumeric and numarray packages were removed in numpy 1.9, but
some packages, e.g. scipy, import them even though they are not used.
This defines both to the string 'removed' in numpy/__init__.py, which
avoids an import error.
",numpy/__init__.py
33cd94b5ee56829d81bd43f3b34d113b07184c86,"Merge pull request #3821 from NextThought/master

Installation fails with NameError if SandboxViolation is raised",numpy/distutils/system_info.py
8015369a4f1357e690199090d84fa8fde99ed6a3,"Do not fail with NameError if SandboxViolation is raised
",numpy/distutils/system_info.py
19d344bfd4c0b348e6c978a6c90a1da4372d8f82,"TST: improve test speed

move slow test_memmap_roundtrip to slow tests
decrease excessively large array size used in np.sin(x) compuation
TestInterp.test_if_len_x_is_small, the code has no special path for this
large size differences.
",numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py
58d79003da26c9fb9919a82b64295338360106ba,"ENH: reduce calls to npy_is_aligned in _IsAligned

one can just bitwise_or the memory and all strides and call npy_is_aligned on
that to get the same result.
",numpy/core/src/multiarray/common.c
1475cfa46356c63c337b2d3d5903be2451dbb9c5,"ENH: speed up intp multiply overflow check

Avoid expensive division by checking against half size of the result first.
Speeds up PyArray_NewFromDescr by a factor of two according to perf.
Could still be further improved by making use of cpu overflow flags, e.g. via
clangs __builtin_mul_with_overflow or using gccs __int128 type.
",numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
a1da1939891a2d7c2809896a9abc9e003e1e8d0b,"Merge pull request #3638 from charris/remove-numarray-and-oldnumeric

Remove numarray and oldnumeric",doc/release/1.9.0-notes.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,numpy/bento.info,numpy/core/setup.py,numpy/core/tests/test_regression.py,numpy/distutils/misc_util.py,numpy/lib/tests/test_regression.py,numpy/lib/utils.py,numpy/numarray/__init__.py,numpy/numarray/_capi.c,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/include/numpy/arraybase.h,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/ieeespecial.h,numpy/numarray/include/numpy/libnumarray.h,numpy/numarray/include/numpy/numcomplex.h,numpy/numarray/include/numpy/nummacro.h,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/setup.py
02e85a520edbf79d5bf8390c4375a1795d0af9dd,"Merge pull request #3818 from lxbarth/master

BUG: fix platform detection for intel platforms",numpy/distutils/system_info.py
72accd264437e00b733bc3e3cd31827cfbb14f3b,"Fix platform detection for intel platform where get_platform() returns a string ending in x86_64, for instance 'macosx-10.8-x86_64'.
",numpy/distutils/system_info.py
24df94cff2373b07d06990cdf6a2c804506c0a39,"Merge pull request #3807 from juliantaylor/gcc-check

BUG: fix wrong gcc version check",numpy/distutils/command/autodist.py
282801ce531d38ffdfc0ea99aa5f34e321967278,"Merge pull request #3806 from njsmith/fix_cancasttypeto_deprecation

[fix] Check for errors in PyArray_CanCastTypeto DEPRECATE",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py
da8f1ff94846949f69b06409f399eb8dad544508,"[fix] If we fail to raise an error, at least dump something to the console
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py
247b4500d9505678933833301971bd56037bd33f,"BUG: fix wrong gcc version check

probably irrelevant by now, but emits a warning during compilation.
",numpy/distutils/command/autodist.py
46fbdc5e7bb770d290aa5691edba92a1a9b9ca35,"[fix] Check for errors in PyArray_CanCastTypeto DEPRECATE

If a user had set warnings to raise errors, then this DEPRECATE would
leave us with an unpropagated exception and cause havoc downstream.

Unfortunately there is no way to propagate an exception from here, so
we just have to throw it away :-(. But this is still better than the
alternative...
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py
6fbbd7f248bfa808bfe659685cf31d79a2f897f9,"Merge pull request #3790 from juliantaylor/test-speedup

TST: speed up some very slow tests",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/testing/utils.py
369f3019b6e1f31d3aa3d56a67385db592aa4bf1,"Merge pull request #3789 from juliantaylor/check-alignment

MAINT: check alignment of copy arguments in debug mode",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
67b5392a8a31e5a4412a961c4e4f5a31bfd9a780,"Merge pull request #3775 from jarondl/doc-function_base-pep8

STY: make function_base.py pep8 compatible",numpy/lib/function_base.py
21d99a683464b311ff60972293382a292dcbbe5d,"Merge pull request #3802 from juliantaylor/bool-check

BUG: do a boolean check on casting bool to other types",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_multiarray.py
856b544ac009013c90407e9cae2be68d2561f978,"Merge pull request #3800 from juliantaylor/fix-long-hash

BUG: fix hashing of long integers under python3",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
46072bd5931d76045690cb51413c050a910ad3aa,"BUG: do a boolean check on casting bool to other types

avoids some issues of booleans coming from external buffers that may not
only contain 0 or 1.
closes #3801.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_multiarray.py
74eac4e16e05167d557f7d96a9c069a1fafa5842,"BUG: fix hashing of long integers under python3

python3 long_hash is more complex than int_hash so instead of copying
into numpy call it via the Python capi.
Same for long long for wich the numpy hash function is not correct with
python 2.7 on i386.
Will be slower but doesn't need adapting each timy python changes.
closes #3793
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
5da4888cdf2e1c6c5ee1736f037ee3f18cdc2da3,"Merge pull request #3799 from esc/fix_typos_in_npyio.py

fix two typos in npyio.py",numpy/lib/npyio.py
3c1871459794dbbddb9596cfe98753893e2bef24,"fix two typos in npyio.py
",numpy/lib/npyio.py
79a1e7a9c2ded59a632329dbdfbc4783300e0142,"Merge pull request #3788 from seberg/object-copy-refs

BUG: INCREF before DECREF when copying object arrays.",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_regression.py
bab8e8c622c61175ba2a30a0968e24c2d9d7e2c0,"Merge pull request #3794 from perimosocordiae/patch-1

DOC: adding 'Returns' section to `empty` function docstring",numpy/add_newdocs.py
846e320134abfa5615f959cf06338c3459c99573,"Merge pull request #3795 from seberg/init_ufunc_at_needapi

BUG: ufunc_at needs_api requires init to 0",numpy/core/src/umath/ufunc_object.c
a2b3ad16dc4c8ee43c698ebd2d00a62b2d3dd4f4,"BUG: ufunc_at needs_api requires init to 0

as reported by valgrind...
",numpy/core/src/umath/ufunc_object.c
0c71afcc932051929c7303f3e61fbece575bc6db,"DOC: adding 'Returns' section to `empty` function

This matches the format of related functions like `empty_like` and `zeros`.",numpy/add_newdocs.py
848949a628583d8e6f51dfa61b87289982111715,"MAINT: check alignment of copy arguments in debug mode

Allows catching unaligned access issues on x86.
Triggers TestRegression.test_complex64_alignment if the fix is reverted.

Also remove some dead code.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
99ee78a112065a22f91ea4f39ec58b3513de68e3,"Merge pull request #3757 from dimasad/issue-3017-fix

BUG: fix #3017 Inconsistency in indexing 0-d arrays with Ellipsis.",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
ec50fb1b7683c44d065914b946d250dbe01aae9f,"STY: error and warning formatting on 'function_base.py'
",numpy/lib/function_base.py
a38fee98467444bdf38b2a24c20466c880380341,"STY: Error and warning newline standardization in function_base.py

Continueing the pep8 effort, adds newline afer each `Error(`
and tries to wrap correctly.
",numpy/lib/function_base.py
79d3a94f41b7e3c661eceed2f26ba6cce362ba4f,"TST: delay error message building to failures in assert_almost_equal

improves test performance by about 15%
",numpy/testing/utils.py
2657098fb9d14087a7307c917029d7f911f6ef6d,"TST: speed up some very slow tests

Minimize alignment combinations to useful set with SSE, might need to
be revisited if we add AVX support.
Move large data test_zeros test to slow and drop the extremely slow
count_nonzero() call.
Rename gen_alignment_data to _gen_alignment_data (private) to reserve
right to change it, e.g. add min_size.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/testing/utils.py
3beebbc0164afbbcc2b6840cf56174c6c073bb40,"DEP: Remove deprecated modules numarray and oldnumeric.

They were deprecated in 1.8 and scheduled for removal in 1.9.

Closes #3637.
",numpy/numarray/__init__.py,numpy/numarray/_capi.c,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/include/numpy/arraybase.h,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/ieeespecial.h,numpy/numarray/include/numpy/libnumarray.h,numpy/numarray/include/numpy/numcomplex.h,numpy/numarray/include/numpy/nummacro.h,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py
2a1705f4932f446c67074e46bd5fa9098920122d,"DEP, DOC: Document removal of oldnumeric and numarray in release notes.
",doc/release/1.9.0-notes.rst
5d76b01cd6ad11d4377ca5e94890ebd1e9897354,"DEP, DOC: Undocument numarray and numeric.

Mention that they were removed in 1.9.0.
",doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst
4974823c8379443620f1372f4f0683931c189301,"DEP, MAINT: Copy info function from numarray.

The numarray info function is called by lib.utils.info. Rename it
to _info and copy into lib/utils.py. Some modifications are made
as it only needs to support numpy.
",numpy/lib/utils.py
3512346df802732763076f3d9975a53a96bdfa57,"DEP, MAINT: Remove references to numeric and numarray.

This covers those locations that either import or build numarray
or numeric.
",numpy/bento.info,numpy/core/setup.py,numpy/core/tests/test_regression.py,numpy/distutils/misc_util.py,numpy/lib/tests/test_regression.py,numpy/setup.py
ed7e9ab53a43188268cd8ddd7e8eb125fb32e495,"BUG: INCREF before DECREF when copying object arrays.

Only the change in dtype_transfer actually seems to be
related to the simple np.copyto(a, a) bug, when a is a scalar
object array.
It seemed however safer to me, to generally turn around the
logic, even if it may not be necessary and in one place
requires an extra temporary variable.

Closes gh-3787
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_regression.py
0a389625ab97b788cbef4afb9c91467b8c745692,"Merge pull request #3766 from rgommers/fix-bento-build

Fix bento build",numpy/core/bento.info,numpy/core/blasdot/_dotblas.c,numpy/core/bscript,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/ufunc_override.h
372d9cab91990da4631b29ee946fc39ac8422bcc,"Merge pull request #3781 from seberg/test_multiarray-indent

TST: wrong indent in multiarray tests",numpy/core/tests/test_multiarray.py
c4b01c9fc013eff51518ce37917290606bdad4c4,"TST: wrong indent in multiarray tests
",numpy/core/tests/test_multiarray.py
094ebf78b231bf314bb88881546365d48a6b6c22,"TST: added test for issue #3017.

Also changed style to please numpy developers.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
6f9a41276153187a4c6e45eb0b8a9999d946608d,"Merge pull request #3772 from juliantaylor/sse-configure-check

BUG: make checking for sse intrinsics more robust",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
27e931f7e93904667ffc8609fd8cae36e0de6f48,"Merge pull request #3779 from pv/pep3118-fastpath

ENH: core: add a fast path for PEP3118 buffer string parsing",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
b7aec6035d2b2cfbcabe84e308ce3b09ea5fe540,"ENH: core: add a fast path for PEP3118 buffer string parsing

The call back to Python numpy.core._internal._dtype_from_pep3118 is an
unnecessary large overhead for the most common case, when the buffer
passed in has a simple non-composite type.

This commit adds a fast path for the simple case.
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
be9e0f0f1c5ee282a37c036a3cce135574e64057,"Merge branch 'gh-3754'

* gh-3754:
  fix indentation and nitpicks
  Moved test_multiarra_relational_operators to test_multiarray.py
  scalar relational operation
  ENH: Added test cases for relation operation. To ensure behaviour of int. There is a need to add test case which ensure and maintain the behaviour of integer. As per pr #3567, which speed up integer scalar's operations by avoiding the conversion of integer to NumPy Scalar.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
3a1f2b2f438c35ee08680c5c58a5cd54c14b74de,"fix indentation and nitpicks
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
2a303f659c0ad91e0b128811a482683cf9dfaff6,"Moved test_multiarra_relational_operators to test_multiarray.py
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
764274fc8ffff769a9c7ac2024345467b00319fd,"scalar relational operation
",numpy/core/tests/test_scalarmath.py
29c53253ecaa21e225996fa73b64ea012ac3f788,"ENH: Added test cases for relation operation. To ensure behaviour of int. There is a need to add test case which ensure and maintain the behaviour of integer. As per pr #3567, which speed up integer scalar's operations by avoiding the conversion of integer to NumPy Scalar.
",numpy/core/tests/test_scalarmath.py
0b96b2d99bb18b1bfca92c4bd8a13b5fe8add7e8,"Merge pull request #3767 from juliantaylor/mom5-improve

Mom5 selection improvements",numpy/core/src/npysort/selection.c.src,numpy/core/tests/test_multiarray.py
fffeee61686e2ff3279f3d04df510330530f51f2,"Merge pull request #3777 from pv/ufunc-override-fix

BUG: core: don't ignore raised exceptions in __numpy_ufunc__ handler",numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_umath.py
f42549fc6c80eb1ac7783393993bd9feec055f16,"REF: core: clean up PyUFunc_CheckOverride

Move argument normalization out from the inner loop, reduce complexity.
Add error checks.
",numpy/core/src/private/ufunc_override.h
acf72ea8286172b141624b27f00571f52aa289d0,"BUG: core: don't ignore raised exceptions in __numpy_ufunc__ handler
",numpy/core/src/private/ufunc_override.h,numpy/core/tests/test_umath.py
8707b0ec85c462bbaa4c3d96925d3ad6a0ec00a8,"DOC: [bento] document that adding optional GCC performance improvements is TODO

[ci skip]
",numpy/core/bscript
c1e38ddf856f81ddddad03ae6f99ce6a2d22a308,"STY: make function_base.py pep8 compatible

This makes function_base.py almost pep8 compatible.
ALSO, removes the Set import which is unneeded since python 2.4,
and organises the import statements.
",numpy/lib/function_base.py
135443768a24ab4fbfd4fa5c8fc40f27d2e25c96,"Merge pull request #3773 from charris/enable-f2py-tests

ENH: Add gfortran to travis.yml configuration to enable f2py tests.",.travis.yml
be45f3397629393352d6d8fc0db20a93d2f948da,"ENH: Add gfortran to travis.yml configuration to enable f2py tests.
",.travis.yml
90732148723ce06024ae8ca38d38ec98bd5b88d3,"Merge pull request #3753 from jarondl/fix-doc-savetxt

DOC: Fixes in the npyio documentation",numpy/lib/npyio.py
fd2e1104718490be8504f8d6665205ca594a37e7,"BUG: make checking for sse intrinsics more robust

check for two intrinsics from [ex]mmintrin.h instead of only checking
the existance of the headers.
E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.
closes #3760
",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
9b7beb6aed058f318a65277816866a81275087fa,"DOC STY: make npyio docstrings less than 80 chars
",numpy/lib/npyio.py
fde3deecd2a243721c5c3fe6f71afe1c21182dea,"Merge pull request #3752 from pv/doc-some-xref

DOC: improve __numpy_ufunc__ documentation",doc/source/reference/arrays.classes.rst,doc/source/reference/ufuncs.rst
15572e95d79ccaa0b48b5c1f48f24c0b9b7dd9d0,"Merge pull request #3658 from jjhelmus/percentile_enh_new

ENH: percentile function with additional parameters and vectorization",doc/release/1.9.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
eb8991ebe0f653a1847b67938d9848fdc2e96a26,"ENH: remove an always true conditional

v[1] < v[2] is guaranteed by the swapping a few lines above
",numpy/core/src/npysort/selection.c.src
afd2e135c78f53dee375d15085dba89d3d962411,"TST: exercise median of median of 5 code by using a median of 3 killer dataset
",numpy/core/tests/test_multiarray.py
df1456175af456d3e0238c81fe8d4cb08025c529,"Merge pull request #3765 from charris/forward-port-3761

BUG: Fix issue with PR #3491",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
fddf1e045a4ad0dd77795d74f18f8a64bb40b019,"BLD: add new test extensions (rational, struct_ufunc, operand_flag) to Bento build.
",numpy/core/bento.info
6418925464f02e20c8d3498c3d9c5391d7566254,"BLD: fix Bento build.

Issue was introduced with PR-3524, the ufunc override stuff.
",numpy/core/blasdot/_dotblas.c,numpy/core/bscript,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/ufunc_override.h
b893154ddc4460e5366b00172788edf128a1a266,"BUG: Fix issue with PR #3491

Don't convert unicode string to ascii string before getting byte length.
Also, get length of non string type as ascii or unicode depending on
output string type.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
61e0f2bb0f7225418764172ae580ad25e8860183,"BUG: fix #3017 Inconsistency in indexing 0-d arrays with Ellipsis.
",numpy/core/src/multiarray/mapping.c
0c857a8e9025cb426ec086a732c02742cea8e285,"MAINT: update release scripts for building OS X binaries.

Works with Python 3.x now that bdist_mpkg is ported (thanks @matthew-brett).
",pavement.py,release.sh,tools/numpy-macosx-installer/new-create-dmg
4f1f9d27abe9f978ef940d248537f54e364f422d,"Merge pull request #3482 from jjhelmus/linspace_enh

ENH: Add dtype parameter to linspace and logspace functions.",doc/release/1.9.0-notes.rst,numpy/core/function_base.py,numpy/core/tests/test_function_base.py
9316110a42c370616cbb80ae3e1769534d04de10,"TST: note on overwrite_input parameter in percentile

* added note that `overwrite_input` has not effect when `a` is not
  an array in the percentile function.
* added unit test to verify that no error is raised when `a` is not
  an array and `overwrite_input` is True.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
9dd212cee1c9ccab6013d52e776bcf6ef712a5e0,"MAINT: changed 'closest' interpolation to 'nearest'
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
3a4fbed7281d118659035875104ee447dfd1e47c,"small typo
",numpy/lib/npyio.py
688df31dceedaf2009afe18f54806ecb8a1c254c,"Fixes in the npyio documentation

Fixes the ""see also"" section of savetxt, which
described savez as compressing (closes #587 ). Also
replaces all occurences of .npy and .npz to use double backticks.
Some had, some did not, and some had "" symbols.
",numpy/lib/npyio.py
1840463683eeef99fcc23c4a4ab1ae8cd5139510,"DOC: improve __numpy_ufunc__ documentation

Cross-reference it from Ufunc documentation and mention the version it
was added.
",doc/source/reference/arrays.classes.rst,doc/source/reference/ufuncs.rst
6ce65d8f4a03a73fff6547cbdfa8d628214cb1b9,"Merge pull request #3746 from charris/fix-nansum-documentation

DOC: Make documentation of nansum current with 1.9.",numpy/lib/nanfunctions.py
4d53e8bef0915d08f260ca62fbc5b2ce3b8ec970,"Merge pull request #3747 from cgohlke/py_hash_t

Fix issue #3743: Hash changed signature in Python 3.3",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/hashdescr.h,numpy/core/src/multiarray/scalartypes.c.src
997fe5b8dedaf0e58de72c9c789e56c328cd02c7,"BUG: use correct type for hash values

As of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/hashdescr.h,numpy/core/src/multiarray/scalartypes.c.src
4f535ff399a84ba5bdad3630120d6c5b86689d6b,"DOC: Make documentation of nansum current with 1.9.

Simply state that Numpy versions < 1.9 returned nan instead of zero
for the sum of empty slices.
",numpy/lib/nanfunctions.py
f88a22523ec1d1ed55f4e06ac047ff188cfae6f8,"Merge pull request #3700 from larsmans/static-loggam

MAINT: make loggam static in random kit",numpy/random/mtrand/distributions.c
0262a60e3c1b182236a5ef1fd5b686e9d245301b,"Merge pull request #3741 from juliantaylor/doc-update

DOC: add isclose and partition to reference and link some docs",doc/source/reference/routines.logic.rst,doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/numeric.py
d4ef9b119f0954123de9acf5cf1fcb5358d99110,"DOC: add isclose and partition to reference and link some docs

also drop sometrue/alltrue link, its equivalent to any/all.
",doc/source/reference/routines.logic.rst,doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/numeric.py
9aed31a8ba1607241947bfe886821e9eb09f6ebb,"TST: additional test for percentile
",numpy/lib/tests/test_function_base.py
a7fc781d286ed8c7650e3a153f8762ce8a536da0,"DOC: changes to scoreatpercentile docstring, doc test now passes
",numpy/lib/function_base.py
4a084a0d77bbb7ade065e75d3602fd8b47369d76,"MAINT: cleaning up percentile function.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
07cbe999f84be4d1b0a35fdb15b53cc17bc4341d,"ENH: percentile function with additional parameters and vecorization

The percentile function was enhanced by adding limit and interpolation
parameters to give it similar functionality to SciPy's stats.scoreatpercentile
function.  In addition the function was vecorized along q and rewritten to
use the partition method for better performance.
",doc/release/1.9.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f8cdbbaee1967011d98aa454b14232488df451d3,"ENH: Add dtype parameter to linspace and logspace functions.

Many NumPy functions such as arange allow users to define the dtype of the
returned type with a dtype parameter.  This adds this same functionality
to the logspace and linspace functions.
",doc/release/1.9.0-notes.rst,numpy/core/function_base.py,numpy/core/tests/test_function_base.py
3e80e2a6c740ea8c4053e2000db295d284bb95af,"Merge pull request #3736 from charris/add-savez_compressed-to-docs

DOC: Make savez_compressed show up in the documentation.",doc/source/reference/routines.io.rst
de29fcbc0251d90f378f63588edd6fcfaa600a50,"DOC: Make savez_compressed show up in the documentation.

Closes #3708.
",doc/source/reference/routines.io.rst
f5fceebd33950113fe523c60c94f641fe8b3dce7,"Merge pull request #3725 from juliantaylor/fix-subarray-zeros

BUG: fix zero initialization with subarray dtypes",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
4d1c2d424a9743b69e50dcf4c972b1e54dc59a59,"BUG: fix zero initialization with subarray dtypes

closes #3724
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
ad3f60156d244471ad86d57bb92b2b4e32c22324,"Merge pull request #3723 from charris/workaround-dgeqrf-bug

MAINT: Make the qr raw mode test independent of the LAPACK library.",numpy/linalg/tests/test_linalg.py
f1f084245b0bf676f5c81ba16a89e1cb97f0d90f,"Merge pull request #3728 from juliantaylor/f2py-negative-refcount

BUG: f2py, fix decref on wrong object",numpy/f2py/cfuncs.py
26ade56d9c4d44e8b0cc5d4268a65341743bccac,"BUG: f2py, fix decref on wrong object

missing brackets causes decref on an wrong object.
shows itself as abort with negative refcount in test_callback using
python-dbg.
",numpy/f2py/cfuncs.py
52f58ea9501ac17d72d42a51f2f078b4853576d0,"MAINT: Make the qr raw mode test independent of the LAPACK library.

The qr factorization is not unique and the values returned by the raw
mode may differ between LAPACK versions. Consequently, the results
cannot be checked against known values.

Closes #3703.
",numpy/linalg/tests/test_linalg.py
f297de0aafe1f627a719304a0977fa3fc26879db,"Merge pull request #3726 from juliantaylor/dbg-fixes

Dbg fixes",numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py
5262478f4d8b1569c1d675bcbd1806c19e4ea597,"BUG: fix bad alignment asserts

if the arrays are smaller than a vector they don't need to be aligned.
",numpy/core/src/umath/simd.inc.src
1dd3778b8ea42d4c3e5315a80dd2baed36212649,"BUG: ensure raising of invalid on bad complex powers

put inf - inf into a volatile variable so it is not optimized away by
compilers.
",numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_umath.py
5d2e8a0968592eb4ff6dddeb9a92326da205d779,"Merge pull request #3720 from charris/refactor-test_xerbla

MAINT: Refactor test_xerbla to hide printed error messages.",numpy/linalg/tests/test_linalg.py
fa25cf7f1bf30b553197754505673600cd2dca31,"MAINT: Refactor test_xerbla to hide printed error messages.

Combine the xerbla override tests with the previous _is_xerbla_safe
decorator. The xerbla checks are then made in a forked process where the
outputs are closed so that if xerbla prints a message it does not
appear.

It would be nice to figure out a Windows version of this test.

Closes #3704. Closes #3687.
",numpy/linalg/tests/test_linalg.py
dfd9f5f5cd08f7fb9cf3cf0da1821f06f5464a09,"Merge pull request #3715 from seberg/ndindex-0size

BUG: Fix 0-sized ndindex",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
72d238271e52d4c2b2fd359ad7eb705cb2f25ee6,"Merge pull request #3696 from juliantaylor/copy-array-create

ENH: copy ndarrays if they are encountered in setArrayFromSequence",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
906a8848a3ea7eb0c5fa85653640b37caa08bbcd,"BUG: Fix 0-sized ndindex

The zerosize_ok flag to nditer was missing, so that it did not
allow for 0-sized iteration.

Closes gh-3714
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
b768db806ea09c2d7cf1561cc065e74989469e98,"Merge pull request #3709 from charris/update-conversion_utils_h

BUG: PyArray_SelectkindConverter should be in conversion_utils.h.",numpy/core/src/multiarray/conversion_utils.h
8233626b3b27a911e840dc3a585c71eab52756b4,"BUG: PyArray_SelectkindConverter should be in conversion_utils.h.

Also include numpy/ndarraytypes.h, although this seems not needed in
practice.
",numpy/core/src/multiarray/conversion_utils.h
c9b06111227f7a4ec213571f97e1b8d19b9c23f5,"Merge pull request #3701 from cgohlke/patch-2

ENH: add support for Python 3.4 ast.NameConstant",numpy/lib/tests/test_utils.py,numpy/lib/utils.py
8edccea5a3d7248de4074a7b43ad13bd81f7a535,TST: add test for Python 3.4 _ast.NameConstant,numpy/lib/tests/test_utils.py
0b7191397e7893011fda16402e1fbd56afb911d3,ENH: add support for Python 3.4 ast.NameConstant,numpy/lib/utils.py
d53d0b203e2e6a0cb6fd08c95aec891be6547264,"MAINT: make loggam static in random kit
",numpy/random/mtrand/distributions.c
73fbfb2e168e76e8a0550fbaa680f6be10ba9459,"Merge pull request #3698 from cgohlke/patch-1

BUG: check axes and window length input for all integer types in fft.helper",numpy/compat/py3k.py,numpy/fft/helper.py
fe05eaca668e4b73ac07995017b1575f40582ca2,"BUG: check axes and window length input for all integer types

On Python 2.7, the long type was excluded.",numpy/fft/helper.py
260433c574fdf0a8e97134853e8149e95b947f9a,ENH: export py3k.integer_types from numpy.compat,numpy/compat/py3k.py
25445cd10ae39deea072b84cfe2ede509e599ea5,"Merge pull request #3697 from charris/fix-simd-for-windows

BUG: Fix UFUNC_CHECK_STATUS to work on both 32 and 64 bit Windows.",numpy/core/include/numpy/ufuncobject.h
e20a54b72cb2c8a15cba3e6fe5c2045fdf5286c9,"BUG: Fix UFUNC_CHECK_STATUS to work on both 32 and 64 bit Windows.

Patch is due to Christolph Gohlke.
",numpy/core/include/numpy/ufuncobject.h
089cc017cdc0b8105d40d74eae15539b1e309e01,"Merge branch 'gradient'

* gradient:
  ENH: Improve accuracy of numpy.gradient at edges
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
332d628744a0670234585053dbe32a3e82e0c4db,"ENH: Improve accuracy of numpy.gradient at edges

* numpy.gradient has been enhanced to use a second order accurate
  one-sided finite difference stencil at boundary elements of the
  array. Second order accurate central difference are still used for
  the interior elements. The result is a fully second order accurate
  approximation of the gradient over the full domain.

* The one-sided stencil uses 3 elements each with a different weight. A
  forward difference is used for the first element,
     dy/dx ~ -(3.0*y[0] - 4.0*y[1] + y[2]) / (2.0*dx)
  and backwards difference is used for the last element,
     dy/dx ~ (3.0*y[-1] - 4.0*y[-2] + y[-3]) / (2.0*dx)

* Because the datetime64 datatype cannot be multiplied a view is taken
  of datetime64 arrays and cast to int64. The gradient algorithm is
  then applied to the view rather than the input array.

* Previously no dimension checks were performed on the input array. Now
  if the array size along the differentiation axis is less than 2, a
  ValueError is raised which explains that more elements are needed. If
  the size is exactly two the function falls back to using a 2 point
  stencil (the old behaviour). If the size is 3 and above then the
  higher accuracy methods are used.

* A new test has been added which validates the higher accuracy. Old
  tests have been updated to pass. Note, this should be expected
  because the boundary elements now return different (more accurate)
  values.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
7679c14ab9b293dd80c0800a180eb9f939e991e9,"Merge pull request #3694 from juliantaylor/test-rational-fix

BUG: fix test_rational PyNumberMethods for python3",numpy/core/src/umath/test_rational.c.src
a486a6bae0580072b3b65771f30bf25c798dc38c,"ENH: copy ndarrays if they are encountered in setArrayFromSequence

By avoiding the elementwise copy array([a,b,c]) is now as
fast as vstack([a,b,c])
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
ba08629ba9972b88c1f172ec655e13d3b9c3b21c,"BUG: fix test_rational PyNumberMethods for python3

wrong structure makes VC9 fail to compile under python3
",numpy/core/src/umath/test_rational.c.src
1ec94198399e91baf562799548c443040532cd0b,"Merge pull request #3691 from juliantaylor/windows-fpu-fix

BUG: fix windows fpu flag check for mixed x87 and sse instructions",numpy/core/include/numpy/ufuncobject.h
554ee09d07a6dde8534ffacbbccffefab0fb0776,"BUG: fix windows fpu flag check for mixed x87 and sse instructions

windows enables sse intrinsics also on 32 bit by default so we need to
check both the x87 and sse fpu flags.
closes #3680
",numpy/core/include/numpy/ufuncobject.h
b9b0ea5ee8270364af47d9f66ba1b28c57815d8a,"Merge pull request #3676 from charris/pep8-polynomial-tests

STY: Make numpy/polynomial/tests/*.py PEP8 compliant.",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py
f1e49d7b42b73e04bdb00cfab60925d7d4625cbf,"Merge pull request #3524 from cowlicks/ufunc-override

Ufunc Overrides",.travis.yml,doc/neps/ufunc-overrides.rst,doc/release/1.9.0-notes.rst,doc/source/reference/arrays.classes.rst,numpy/core/blasdot/_dotblas.c,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/ufunc_override.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py
711b9979b731745dbeff3dd47ea67eedf8603449,"DOC: Update release notes.
",doc/release/1.9.0-notes.rst
332057144d91e227f4e619e6dc8d8701d23a9ec5,"BLD TRAVIS: Added libatlas to travis build so it can test BLAS stuff.

sudo apt-get install -qq libatlas-dev libatlas-base-dev
",.travis.yml
022aea859a01a0f11372b28267a74aff9b8880f9,"BLD: Added ufunc_override.h to setup.py.
",numpy/core/setup.py
5c630f06f9012cdfff9b35cf96cea4a696c6b66c,"TST: Add ufunc override tests.
",numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py
21976ca31eda537824ad877d432634eaf103567b,"ENH: Add ufunc override functionality to ufuncs and dots.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c
c50e60d5927fe2a5719c428d6ced61af4ba4ba07,"Merge pull request #3689 from charris/fix-gitignore

BUG: .gitignore ignores all release directories.",.gitignore
3b8aba7b9e8eafc9b8615471afb4e1427192a969,"Merge pull request #3688 from jseabold/update-release-notes

DOC: Update release notes for openblas build.",doc/release/1.8.0-notes.rst
7386f6df575987b11dc570c2de44e9dabac82ba5,"BUG: .gitignore ignores all release directories.

It should only ignore the one in the root directory. The fix is to
prepend a '/' to the directory name.
",.gitignore
92ed1b27aa0372f5d47f86d73c8cfd53473078c6,"DOC: Update release notes for openblas build.
",doc/release/1.8.0-notes.rst
b5dab6df0c9feef2d0b10ea7c56abd0b1df78abc,"Merge pull request #3642 from jseabold/openblas-install

BLD: Allow easy use of openblas.",numpy/distutils/system_info.py,site.cfg.example
fb0c7bdfd370dae9d580f97ee4ceadbcaced29c5,"Use the default install location of OpenBLAS in the example
",site.cfg.example
ffd4332262ee0295cb942c94ed124f043d801eb6,"site.cfg.example should not reference blas_opt and lapack_opt

blas_opt and lapack_opt sections are not actually read by the
numpy.distutils.system_info machinery. They are just meta entry points for the
`get_info` public function that in turns introspec the atlas, openblas and mkl
sections.
",site.cfg.example
573b3b0215294a881e3504cec8818ee194679342,"Merge pull request #3657 from charris/add-hash-method-to-polynomials

BUG: Set __hash__ = None for non-hashable classes.",numpy/lib/polynomial.py,numpy/polynomial/polytemplate.py
43fcc0e4b53ef2abb4a7fa588760d943ce997550,"Make vecLib / Accelerate not shadow other optimized builds under OSX
",numpy/distutils/system_info.py
0a91ade9e89bde3163ad9035556b912dfc90db16,"Merge pull request #3678 from charris/fix-wrong-variable-type

BUG: PyArray_PyIntAsIntp had variable size check wrong way around.",numpy/core/src/multiarray/conversion_utils.c
3c8eb4eb396bd5227f2d8298ce60be0c4848fe0e,"BUG: PyArray_PyIntAsIntp had variable size check wrong way around.

This bug resulted in using a long type when a long long was required,
resulting in numerous errors when numpy was compiled as 64 bits on
64 bit windows.
",numpy/core/src/multiarray/conversion_utils.c
8255df3d6cd00281f1f9b2925648dca3a0b9e036,"STY: Make numpy/polynomial/tests/*.py PEP8 compliant.

Run autopep8 on the tests and fixup the results.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py
7ae0206c4b5685a3b0abd1865850e0c92aeb7389,"Merge pull request #3673 from charris/pep8-lib-tests

STY: Make numpy/lib/test/*.py PEP8 compliant.",numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py
545dc98f6f45218132e4581040b54d68725396c0,"Merge pull request #3675 from charris/revert-merge-pr-3567

Revert ""Merge pull request #3567 from arinkverma/avoid_conversion""",numpy/core/src/scalarmathmodule.c.src
b35728d7858a4c4d46eefd936c33a0ffa6593082,"Revert ""Merge pull request #3567 from arinkverma/avoid_conversion""

This reverts commit de9f1c92d3ca0920bce915438f0406f587aa98db, reversing
changes made to d958dec676beeac218a118fac084fa8b14bc9171.

There is a change of behavior in conversion of signed to unsigned
PyLong that shows up on my machine. For some reason this did not show
up in the travisbot tests. This reverts the merge that led to this
problem until it can be sorted out. Error shows up as

numpy/core/arrayprint.py"",
line 653, in __call__
    if _MININT < x < _MAXINT:
OverflowError: can't convert negative int to unsigned
",numpy/core/src/scalarmathmodule.c.src
d2c44c5a012d0a5db7d10a2586c8e9c58045d04b,"STY: Make numpy/lib/test/*.py PEP8 compliant.

Run autopep8 over the test files in numpy/lib/test and make fixes
to the result.

Also remove Python5 workaround.
",numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py
294dd26004fa923a06e0898c2b72350dd44a97dd,"Merge pull request #3674 from charris/add-to-gitignore

ENH: Add paver generated release directory to .gitignore.",.gitignore
2aa519728e951bbabb6f474daed0d56e4e661623,"ENH: Add paver generated release directory to .gitignore.
",.gitignore
e703ee1bceae93b026eadefdf7ecabaacbc7feda,"Merge pull request #3672 from charris/update-pavement

MAINT: Update pavement.py script.",pavement.py
de9f1c92d3ca0920bce915438f0406f587aa98db,"Merge pull request #3567 from arinkverma/avoid_conversion

ENH: Avoiding conversion of integer to NumPy Scalar.",numpy/core/src/scalarmathmodule.c.src
e4d9030e349c232440c139397e5366779f91126a,"MAINT: Update pavement.py script.

Remove builds for Python 2.6 and 3.1
Update release notes path to doc/release/1.9.0-notes.rst.
Set LOG_START to 'branch-1.8.x'
",pavement.py
d958dec676beeac218a118fac084fa8b14bc9171,"Merge pull request #3668 from charris/fix-buggy-tests

Fix buggy tests",numpy/core/tests/test_numeric.py,numpy/core/tests/test_shape_base.py,numpy/lib/tests/test_function_base.py
57245e4570fa84f2e40a6fa1cc22716d279f8c00,"MAINT: Make Warning handling cleaner in test_concatenate_sloppy0.

The test in question is in numpy/core/tests/test_shape_base. The cleanup
consists of using warning.catch_warnings instead of setting and popping the
warnings filter.
",numpy/core/tests/test_shape_base.py
d4413a319ed90a99621bc105bc35a820f65dbf5d,"BUG: Catch DeprecationWarning in numpy/core/tests/test_numeric.py.

TestCreationFuncs.check_function was spewing Deprecation warnings in
release mode. AFAICT, it did not raise errors during development because
it was buried by a TypeError. The Deprecation in question is at line
1141 in multiarray/conversion_utils.c. Hiding the deprecation should
be harmless here, but when the Deprecation is turned into an error
it will need to be caught in the test.
",numpy/core/tests/test_numeric.py
03371cdae281bbbde0c7adfc28d012d6555ad112,"BUG: Make DeprecationWarning always raise error in test.

The test_fancy in numpy/lib/tests/test_function_base.py failed in
release because a DeprecationWarning was no longer raised, it had
become a warning.
",numpy/lib/tests/test_function_base.py
536cd36c1ba45c42ad306fda5f9c4d12ee0f5afd,"ENH: Add ufunc override API.
",numpy/core/src/private/ufunc_override.h
6fe8eb607127b554195ed25f8636f5caefd477c3,"DOC: Add NEP and documentation for ufunc overrides.
",doc/neps/ufunc-overrides.rst,doc/source/reference/arrays.classes.rst
7ed2c9bfdcd2eded4c42ec485cce8e6e3a69308c,"Check for error value by PyLong_AsUnsignedLong as (unsigned long)-1
",numpy/core/src/scalarmathmodule.c.src
74b6b2cf151c4e869c35e2d226f0d6b69ea9d330,"Merge pull request #3644 from juliantaylor/nonzero-bool

ENH: add nonzero of bools fastpath",numpy/core/src/multiarray/item_selection.c
c5ee7f75d685ab520da528898df2e5570d0ee7f6,"ENH: add nonzero of bools fastpath

count_nonzero already has a fastpath but nonzero does not.
Improves performance by about 25% via avoiding a function call.
",numpy/core/src/multiarray/item_selection.c
501889408258ef1a5ffa842d8c0ecc7ffa6f5712,"Merge pull request #3647 from endolith/patch-1

DOC: hfft/ihfft description conflicts with itself",numpy/fft/fftpack.py,numpy/fft/helper.py
1ae2b9e15115e76214f51e68322c7309b1f18d33,"DOC: Unlink non-variable 'm', use monospace instead",numpy/fft/fftpack.py
78785a496440e0861561c13aafa104082d69fbe7,"Merge pull request #3655 from larsmans/c-fixes

FIX: unchecked mallocs and various other things",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/umath/ufunc_object.c
0167ac1daa6adb058d646efd0790ce129059116a,"FIX don't explicitly cast void* when final type is known
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src
ee1ec3f5517dd413161e7596b10b45ee10168843,"FIX: some more casts in ufunc_object

Introduced a helper function to get rid of repetitive code.
",numpy/core/src/umath/ufunc_object.c
b76cb5b59817b82040f4b170f7e0b6d6a6b861c1,"MAINT: remove unused goto label and useless casts
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/multiarraymodule.c
0b062a8ca9d00584fe8934c84a99b174316f4734,"FIX: unchecked mallocs and Python operations

Rewrote _tmp_string_t handling in buffer.c to use the fact that
realloc(NULL, n) is equivalent to malloc(n). There are still some
unchecked cases in this file.

Also changed some arguments to const and removed casts on malloc
return values; malloc returns void*, which is converted to any
other pointer automatically. Casting the return value of malloc
is more likely to hide bugs than to fix anything.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c
df664eade973041cf4eb554b2048380b3f0b75ae,"DOC: Remove parentheses around axis
",numpy/fft/fftpack.py
e5a80eb5f4bddf9e39dfe99502d38a1fa0a9193f,"DOC: change ""Hermite"" to ""Hermitian"", ""though"" to ""although""
",numpy/fft/fftpack.py,numpy/fft/helper.py
b350089f440fdfd28d7be1cfa23cb6b1b66fc1e4,"Merge pull request #3651 from MatthieuDartiailh/polyfit_doc

Small correction in the docstring of polyfit.",numpy/lib/polynomial.py
d334dbd400964515bb392f3f9d7978d0ddb2a9a6,"Replaced PyInt_As_Long with PyInt_AsLong and  errorchecking
",numpy/core/src/scalarmathmodule.c.src
7b415b26f4a1d58164a69ef44fb501fbd93e666f,"Added PyInt_CheckExact for python < 3 and error check for PyLong_AsLong
",numpy/core/src/scalarmathmodule.c.src
9c7ef03df6ae9553149d26ba5d367bd94b0489fd,"Moved int test cases to pr#3592
",numpy/core/tests/test_scalarmath.py
79342d5993168a5e43d57924bb3fa75a4fa3ec01,"Extracting longlong value without converting it to NyType
",numpy/core/src/scalarmathmodule.c.src
70de8aa2b3a3b300c6a858cbdbb9226ce46591e1,"ENH: Avoiding conversion of integer to NumPy Scalar.
There is a bottleneck in scalar operations, when trying to extract the
underlying C value from a Python integer/float. I have avoid conversion
for know integer type but extracting its value.
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py
e2675e3ac08f2fb3a7e606123ad063e7e956cb9d,"BUG: Set __hash__ = None for non-hashable classes.

Because neither poly1d nor the Polynomial package polynomial classes are
immutable, hence not reliably hashable, they should signal that by
setting __hash__ = None. This also fixes the warning

Overriding __eq__ blocks inheritance of __hash__ in 3.x

that is given when the command `python2.7 -3 -c""import numpy""` is run.
",numpy/lib/polynomial.py,numpy/polynomial/polytemplate.py
bec793a28a46fce9a4212e058645f017adfa9f74,"Merge pull request #3653 from larsmans/c-fixes

FIX: call through wrong function pointer type + minor stuff",.gitignore,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/umath/ufunc_object.c,numpy/numarray/_capi.c
49d7ca3e567eae47184c1dddc147e5701929df22,"MAINT: ignore some more generated C files.
",.gitignore
994bf25181ad33385dcd7f6615846f98f06e6f3e,"FIX: remove unused variables and add casts

Makes the build complete with fewer warnings.
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/umath/ufunc_object.c,numpy/numarray/_capi.c
404a21a3140ddb942d4b38aea5aa50f58d4def44,"FIX: wrong function types in ufunc_object.c

assign_reduce_identity_{zero,one} were treated as
PyArray_AssignReduceIdentityFunc, but that type has
an extra void* argument. Added the argument.
",numpy/core/src/umath/ufunc_object.c
5c7a9f2dddc21849ee272a4ccd59893cefd4b1a9,"Small correction in the docstring of polyfit. As mentionned in Issue 3640, the notes were wrong in the order of the index for p.
",numpy/lib/polynomial.py
266a1d1129ccb3328e9319db2451460b7293f681,"Merge pull request #3592 from arinkverma/int_behaviour

ENH: Added test cases to ensure the behavior of integer as it is.",numpy/core/tests/test_scalarmath.py
1ab96d234d950f7d1232179deb38e73128b28194,DOC: add note clarifying why ifftshift is needed,numpy/fft/helper.py
8cd496de463a5d5c247ed6967173aed6730dc4af,"DOC: Add examples, copy some text from rfft functions to clarify inputs and outputs
",numpy/fft/fftpack.py
202e78d607515e0390cffb1898e11807f117b36a,"Merge pull request #3645 from charris/enable-diagonal-as-view

ENH: Make the ndarray diagonal method return a view.",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
fd6cfd6828950850da27b09dab93a06dfe86308f,"ENH: Make the ndarray diagonal method return a view.

Also remove the test_diagonal_deprecation test and add test that
checks that a view is returned and that it is not writeable.

Closes #596.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
1b300362a3d184ebafde023ab17cb4bb671f7274,"Removing test for OS choices on long conventions
",numpy/core/tests/test_scalarmath.py
768a7393f7258cfb2df19df60c8ee6a1ed307eb1,"DOC: hfft/ihfft description conflicts with itself

Says Hermite spectrum when it means signal",numpy/fft/fftpack.py
6c8167168e1bbe8898ea44d41b96af60d52ce5a3,"BLD: Update with information about openblas.
",site.cfg.example
42af4e0fd15d8609f468c7c7f8a269eebbecf2f9,"Add support for using openblas for the _dotblas function.
",numpy/distutils/system_info.py
9464075c7260475bdd5d693b3046379a2bb62482,"Merge pull request #3636 from charris/fix-nanfunction-deprecations

DEP: Make nansum return 0 for all-NaN or empty axis.",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
0858d8a313d2fade35644ba1d1dbfb408041018f,"DEP: Make nansum return 0 for all-NaN or empty axis.

Make this happen and remove test parts dependent on numpy version
< 1.9. Fixes test failures in numpy after 1.8 branch.
",numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
3fe2744e6ff5e9027e01ebd166ae9bfd7aaaa309,"REL: Setup 1.9.0-notes.rst for master.
",doc/release/1.9.0-notes.rst,doc/source/release.rst
4d5ac6936c980f8a283c44a622e414706215d269,"REL: Update minor version number to 9.

Numpy 1.9.0-devel opens.
",setup.py
6c729b4423857850e6553cf6c2d0fc8b026036dd,"Merge pull request #3635 from charris/giant-style-cleanup

Giant style cleanup",BENTO_BUILD.txt,DEV_README.txt,README.txt,doc/CAPI.rst.txt,doc/DISTUTILS.rst.txt,doc/HOWTO_DOCUMENT.rst.txt,doc/Py3K.rst.txt,doc/TESTS.rst.txt,doc/cython/README.txt,doc/neps/datetime-proposal.rst,doc/neps/datetime-proposal3.rst,doc/neps/deferred-ufunc-evaluation.rst,doc/neps/generalized-ufuncs.rst,doc/neps/groupby_additions.rst,doc/neps/missing-data.rst,doc/neps/new-iterator-ufunc.rst,doc/neps/structured_array_extensions.txt,doc/neps/warnfix.txt,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/records.rst.txt,doc/source/conf.py,doc/source/dev/gitwash/configure_git.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_development.rst,doc/source/dev/gitwash/git_resources.rst,doc/source/dev/gitwash/index.rst,doc/source/reference/arrays.datetime.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.deprecations.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/routines.char.rst,doc/source/reference/routines.datetime.rst,doc/source/reference/routines.dual.rst,doc/source/reference/routines.emath.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,doc/source/user/basics.io.rst,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testSuperTensor.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,doc/ufuncs.rst.txt,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/common.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/include/numpy/npy_common.h,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/testcalcs.py,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/install.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/from_template.py,numpy/distutils/intelccompiler.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/unixccompiler.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/NEWS.txt,numpy/f2py/TODO.txt,numpy/f2py/__init__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/Release-2.x.txt,numpy/f2py/doc/Release-3.x.txt,numpy/f2py/doc/Release-4.x.txt,numpy/f2py/doc/collectinput.py,numpy/f2py/doc/f2python9-final/README.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1mess.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1session.txt,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/f2py/doc/multiarray/fortran_array_from_pyobj.txt,numpy/f2py/doc/multiarray/transpose.txt,numpy/f2py/doc/multiarrays.txt,numpy/f2py/doc/using_F_compiler.txt,numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/HISTORY.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt,numpy/f2py/docs/TESTING.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/index.txt,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/use_rules.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/_gufuncs_linalg.py,numpy/linalg/lapack_lite/blas_lite.c,numpy/linalg/lapack_lite/dlamch.c,numpy/linalg/lapack_lite/dlapack_lite.c,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/lapack_lite/zlapack_lite.c,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/linalg/umath_linalg.c.src,numpy/ma/API_CHANGES.txt,numpy/ma/README.txt,numpy/ma/bench.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/timer_comparison.py,numpy/matlib.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/functions.py,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/ieeespecial.h,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/mtrand/distributions.c,numpy/random/mtrand/distributions.h,numpy/random/mtrand/mtrand.c,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/setup.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,tools/c_coverage/HOWTO_C_COVERAGE.txt,tools/commitstats.py,tools/test-installed-numpy.py,tools/win32build/doall.py
97e5b0d2e22d65d902c9fc9450f343c6d6bd62c4,"added int test for error raises
",numpy/core/tests/test_scalarmath.py
fbd6510d58a47ea0d166c48a82793f05425406e4,"STY: Giant comma spacing fixup.

Run the 2to3 ws_comma fixer on *.py files. Some lines are now too long
and will need to be broken at some point. OTOH, some lines were already
too long and need to be broken at some point. Now seems as good a time
as any to do this with open PRs at a minimum.
",doc/newdtype_example/example.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testSuperTensor.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/common.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_umath.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/install.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/from_template.py,numpy/distutils/intelccompiler.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/unixccompiler.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/use_rules.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_nanfunctions.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/bench.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/timer_comparison.py,numpy/matlib.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/setup.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,tools/commitstats.py,tools/test-installed-numpy.py
8ddb0ce0acafe75d78df528b4d2540dfbf4b364d,"STY: Giant whitespace cleanup.

Now is as good a time as any with open PR's at a low.
",BENTO_BUILD.txt,DEV_README.txt,README.txt,doc/CAPI.rst.txt,doc/DISTUTILS.rst.txt,doc/HOWTO_DOCUMENT.rst.txt,doc/Py3K.rst.txt,doc/TESTS.rst.txt,doc/cython/README.txt,doc/neps/datetime-proposal.rst,doc/neps/datetime-proposal3.rst,doc/neps/deferred-ufunc-evaluation.rst,doc/neps/generalized-ufuncs.rst,doc/neps/groupby_additions.rst,doc/neps/missing-data.rst,doc/neps/new-iterator-ufunc.rst,doc/neps/structured_array_extensions.txt,doc/neps/warnfix.txt,doc/newdtype_example/floatint/__init__.py,doc/postprocess.py,doc/records.rst.txt,doc/source/conf.py,doc/source/dev/gitwash/configure_git.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/git_development.rst,doc/source/dev/gitwash/git_resources.rst,doc/source/dev/gitwash/index.rst,doc/source/reference/arrays.datetime.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.deprecations.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/routines.char.rst,doc/source/reference/routines.datetime.rst,doc/source/reference/routines.dual.rst,doc/source/reference/routines.emath.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,doc/source/user/basics.io.rst,doc/ufuncs.rst.txt,numpy/__init__.py,numpy/add_newdocs.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/include/numpy/npy_common.h,numpy/core/shape_base.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/config.py,numpy/distutils/conv_template.py,numpy/distutils/extension.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/f2py/NEWS.txt,numpy/f2py/TODO.txt,numpy/f2py/crackfortran.py,numpy/f2py/doc/Release-2.x.txt,numpy/f2py/doc/Release-3.x.txt,numpy/f2py/doc/Release-4.x.txt,numpy/f2py/doc/f2python9-final/README.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1mess.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1session.txt,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/f2py/doc/multiarray/fortran_array_from_pyobj.txt,numpy/f2py/doc/multiarray/transpose.txt,numpy/f2py/doc/multiarrays.txt,numpy/f2py/doc/using_F_compiler.txt,numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/HISTORY.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt,numpy/f2py/docs/TESTING.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/docs/usersguide/index.txt,numpy/f2py/func2subr.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/linalg/_gufuncs_linalg.py,numpy/linalg/lapack_lite/blas_lite.c,numpy/linalg/lapack_lite/dlamch.c,numpy/linalg/lapack_lite/dlapack_lite.c,numpy/linalg/lapack_lite/zlapack_lite.c,numpy/linalg/setup.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/umath_linalg.c.src,numpy/ma/API_CHANGES.txt,numpy/ma/README.txt,numpy/matrixlib/tests/test_regression.py,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/ieeespecial.h,numpy/oldnumeric/tests/test_regression.py,numpy/random/mtrand/distributions.c,numpy/random/mtrand/distributions.h,numpy/random/mtrand/mtrand.c,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/utils.py,tools/c_coverage/HOWTO_C_COVERAGE.txt,tools/commitstats.py,tools/win32build/doall.py
13b0b272f764c14bc4ac34f5b19fd030d9c611a4,"Merge pull request #3633 from charris/update-release-notes

DOC: Update 1.8.0-notes.rst",doc/release/1.8.0-notes.rst
59eea0cbb03ae77378b664f4d5b263cbe84daab9,"Merge pull request #3616 from seberg/buffer-pybuf_simple

BUG: Fix PyBUF_SIMPLE flag to GetBuffer.",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
577183ec731425af8adeb790fe6527412666f838,"DOC: Update 1.8.0-notes.rst

Note that the numpydoc sphinx extensions now reside in their own
repository.
",doc/release/1.8.0-notes.rst
5c2dafbbc7f473821b50d6df39dd766675fe3a88,"BUG: Fix PyBUF_SIMPLE flag to GetBuffer.

When no strides are requested, the array must be C-contiguous,
not only if a shape was also requested.

Closes gh-3613
",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
c8312982066dd3a5f43a14934a353cc80159c985,"Merge pull request #3631 from charris/fix-reference-leak

Fix reference leak",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_numeric.py
0a6217dc82fb1585d99dd29f8e1451be47386003,"Merge pull request #3632 from charris/remove-commented-out-code

MAINT: Remove some commented out code in test_indexing.py.",numpy/core/tests/test_indexing.py
465b227e57a879b3a80ba57999e391f088d83a29,"MAINT: Remove some commented out code in test_indexing.py.

The code was intended to check refcounting, and indeed, exposed a long
standing bug by failing, which is why it was commented out. That bug is
now fixed and tested by gh-3631, so the commented out code could
theoretically be made to work, but that requires enough del this and del
the other that I think it is too fragile to keep. So delete it.
",numpy/core/tests/test_indexing.py
d0bdae43724342abea17ed89f9cd6a96d11fc256,"TST: Add test for reference leak in zeros, ones, empty, and full.

Check that the reference counts of the  passed dimensions do not
change.
",numpy/core/tests/test_numeric.py
7d01fe5684698026bf80506423adbdf03f453813,"BUG: Fix reference leak in PyArray_IntpFromIndexSequence.

This caused {ones, zeros, empty}([1]*10) to increase the reference
count of 1 by 10. Same for other numbers in the list.

Closes #3589.
",numpy/core/src/multiarray/conversion_utils.c
fc5a0ba32e0df4ddcee1f253be4f77a494db0af2,"Merge branch 'fast-mask'

* fast-mask:
  MAINT: Make setting mask values with scalars faster.
",numpy/ma/core.py
0cc113c7574e40172fe4a48e9c0d90477d736ce3,"MAINT: Make setting mask values with scalars faster.

The current implementation assigns the mask value to a.flat, where a is
the mask being updated. In the scalar case, that is slower than
assigning to a[...], so when a is an instance of int, float, np.bool_,
or np.number use that instead.
",numpy/ma/core.py
aeb13affe23abaa9550521531b61f03850551106,"Merge pull request #3107 from MrBago/improve_searchsorted

Improve searchsorted",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
4674b9ee89a641f3b9da2296079a6ed2167e1d8c,"MAINT - update comments related to searchsorted to be consistent with code.
",numpy/core/src/multiarray/item_selection.c
bb925ed337d0346c414a43506537750a87c4771d,"RF - have searchsorted copy haystack when the needle is bigger than the haystack
",numpy/core/src/multiarray/item_selection.c
a06b8005f042a46c0609a559f6bae21d43572d1e,"BF - cast psorter pointer to intp
",numpy/core/src/multiarray/item_selection.c
ebcae1b508dcb7a1b0278209ecbd235f9fca9d10,"TST - add testing of searchsorted on unaligned arrays
",numpy/core/tests/test_multiarray.py
77b3df0f0571520eac7119a2d61a8b7fad249acc,"RF - allow ndarray.searchsorted to avoid making a copy for non-contiguous arrays
",numpy/core/src/multiarray/item_selection.c
4e16d97e1b1c6543d9ac5b96bd787cba3a358c69,"Merge pull request #3630 from rgommers/fix-median

BUG: fix np.median so it accepts array_like input.  Clean up median test...",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
d21a9444da04ef587a65a7787b4a4a97119bbe9f,"Merge pull request #3628 from seberg/issue-3589

BUG: MapIter leaked itself and arr and index objects",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
759a4f9ede6647991f1e347c9b3a04417c2d2f05,"BUG: fix np.median so it accepts array_like input.  Clean up median tests.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
cdbdaf182334b7b69ffdd39d711c694173ee2e2c,"Merge pull request #3629 from charris/fix-out-of-order-declaration

MAINT: Move NPY_BEGIN_THREADS_DEF to end of declarations.",numpy/core/src/umath/ufunc_object.c
6a63c7a06d97d8fc7ca4a8ac78db8f6451e9e7ed,"MAINT: Move NPY_BEGIN_THREADS_DEF to end of declarations.

The is an ';' at the end of the macro definition. When used and followed
by another ';', gcc thinks a statement has been made. An empty
statement, but still a statement. This causes compilation failure with
Python 3.4a.

The ';' should probably be removed, but that was undone in 1.7 to
maintain backward compatibility.
",numpy/core/src/umath/ufunc_object.c
d4af6123a609b062af7ed23e106b6bfffd482e7f,"Merge pull request #2821 from ContinuumIO/ufunc-fancy-indexing3

in place fancy indexing for ufuncs",doc/release/1.8.0-notes.rst,doc/source/reference/ufuncs.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
acef718f40a30188c1379c13cc49c920d9e7c303,"Change casting type for ufunc operands
",numpy/core/src/umath/ufunc_object.c
ec9d9cc8c5b8bc119130891efcaffe192f47a73b,"Bail out of loop if python error occurs
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
2ec4c94077bd3e5e01d993f82acd589ecac07b0f,"Check for python error when needs_api flag is set
",numpy/core/src/umath/ufunc_object.c
a04bb37b9346ec8c2867ba09f8a76b6615d10200,"Update docs
",numpy/add_newdocs.py
7c4eeea6a60672a52ff6cf0bf75ee9beaf5c391c,"Update docs
",numpy/add_newdocs.py
79bc97caa1bd23919ba8cb63850e12cbf5097b97,"Update docs
",numpy/add_newdocs.py
336151e810904277f227584eadc2de119a1a5ac6,"Fix memory leaks and inc dtype refs
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
1e4d589d7252ffcc55da930496cbe01c078cc3a6,"Add decrefs at end of function and return None object
",numpy/core/src/umath/ufunc_object.c
5729685578d52b13096803ce813fcb8990f84561,"Move gil release/aquire outside of loop
",numpy/core/src/umath/ufunc_object.c
6c249cd038d15a6be00f3d611bccdbcc0fa0ff5e,"Move NpyIter_IterNextFunc call outside of loop
",numpy/core/src/umath/ufunc_object.c
a4bb3bc1dc2e5c7114e77e4a92df04d57ee02c9b,"Add test for non native bytetypes
",numpy/core/tests/test_ufunc.py
b4409294b227dec3813f1e06a76f43753b7fb5c7,"Update docs
",doc/release/1.8.0-notes.rst,doc/source/reference/ufuncs.rst
2c37d3b6ec81ee6a86e4ae8f5713d48b6405cfb3,"Add test for empty subspace
",numpy/core/tests/test_ufunc.py
fcc891df4487bd45608dc2bdc7dd57f9a16c32ef,"Add NpyIter_Deallocate
",numpy/core/src/umath/ufunc_object.c
f917e38277b193d205b6ebe73b48135431468372,"Use Py_XDECREF in fail section
",numpy/core/src/umath/ufunc_object.c
8f2273388c663a6d41ab03bbe5bd8388030b32ce,"Fix deprecation warning
",numpy/core/src/umath/ufunc_object.c
c26e54884b4f490f1d939d9ecf1c799d0413e0bf,"Reverse commit 6ec51b3
",numpy/core/src/multiarray/mapping.c
ea2e1f51d23298c7d232547edeb7b2aa5771c527,"Remove unnecessary check
",numpy/core/src/umath/ufunc_object.c
9438a8f133edb4c3329746d8c23988a55f9d969a,"More clean up
",numpy/core/src/umath/ufunc_object.c
f899c19ac4c56b1c541b757df78ffe6c1f3e22a3,"Clean up previous comment and add test for unary ufunc.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
3820cf33fc0c108e7436b770fb627d9dc30625ff,"Use NpyIter object to buffer each input value

Use NpyIter object to buffer each input value in order to handle certain situations such as operands with mixed dtypes.
",numpy/core/src/umath/ufunc_object.c
b259cdc9c1ec356b6e7c4652ed60686e12fbf958,"Revert ""Call iterator_loop instead of directly calling ufunc.""

This reverts commit 2a9d5577a087e664ee047b3e099c1355000d8661.
",numpy/core/src/umath/ufunc_object.c
d467d492acec36622fcb6e060e1ba2c23b797775,"Maybe this will fix the DeprecationWarning
",numpy/core/tests/test_ufunc.py
2e652047b98390c602f8a74aac73644d5a3c95ed,"Another attempt at fixing DeprecationWarning
",numpy/core/tests/test_ufunc.py
4b3384973d4f84aa546a80e412d00231ba618fa1,"Fix DeprecationWarning on python 3.3
",numpy/core/tests/test_ufunc.py
5dea4ca1d3c6185a530e40a6ea7099e3eb3fd46c,"Add test for boolean indexing and boolean ufunc
",numpy/core/tests/test_ufunc.py
1e786ea00d9ca74bd236ed31117f1e1eb41d1484,"Add test for mixed dtypes
",numpy/core/tests/test_ufunc.py
da3f8cb19c81c909636de6ece7e33454d8cec79b,"Call iterator_loop instead of directly calling ufunc.

Call iterator_loop which will call ufunc and handle any buffering for cases with mixed dtypes.
",numpy/core/src/umath/ufunc_object.c
e4cbcb2e134bf0241d642149f6da37f5b2b5cf7d,"Just create an array object for second operand; don't cast to dtype of first operand.
",numpy/core/src/umath/ufunc_object.c
f9a3e177f8cb08aeac2cccdb1067871c97bbe065,"Add tests for 0-dim array
",numpy/core/tests/test_ufunc.py
6d7b51a4161c9b0ae23b726cab65230102a5e53e,"Improve comment for creating iter object from second operand
",numpy/core/src/umath/ufunc_object.c
2a8c04b60a5c51ce3e59f37af8e10a4dab8fe525,"Let indexing code do error checking for arguments with mismatched dimensions
",numpy/core/src/umath/ufunc_object.c
2e2d99a3241cec2247547f20099cf03cbb1bf2b3,"Remove keyword support for required arguments
",numpy/core/src/umath/ufunc_object.c
45419ea12cca9d29d874620495319307b4dec6f4,"Replace calls to New/Bind/Reset with MapIterArray
",numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_object.c
13c1847ba2f0eab36004491deb0e2b8e1140c133,"Reword some comments/documentation
",numpy/add_newdocs.py,numpy/core/src/umath/ufunc_object.c
1b81be70ff832aac385254d57fb0c6feae8873bf,"Add more comments
",numpy/core/src/umath/ufunc_object.c
d6fa103630fc8d006b78b78ff5cf422f5a615ea7,"Fix for crash when PyArray_MapIterSwapAxes is called

Set up default iteraxes array values in call to MapIterBind().
",numpy/core/src/multiarray/mapping.c
0d087dcc30f04aa4afb2fbcadd983192336d77ad,"Fix build issue
",numpy/core/src/multiarray/mapping.c
f63eb175026577eec90a64719dcfd3a51962717e,"Add documentation for new 'at' ufunc method
",doc/source/reference/ufuncs.rst
5b7cda079f3a5ce59eb1688af0297eba45d375ea,"Fix issue with 'at' method when indices are all slice objects
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_ufunc.py
a8d13b86eeca2e9362219aabca0ff76717f6a2f3,"Add more unit tests for 'at' method
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
cf9452f52e3d3be3df81f85ee744811c78140faf,"Code cleanup for 'at' method
",numpy/core/src/umath/ufunc_object.c
0eafea73b24de956dbf8a2b7422089039f22e8e2,"Add more unit tests for 'at' method
",numpy/core/tests/test_ufunc.py
7dde42ad510074aaa6273fe156dcd243b85b25fe,"Correct implementation of 'at' method that covers all corner cases
",numpy/core/src/umath/ufunc_object.c
d94cd574cf1a31e621ba5384542671d1aa8056c4,"Only allow explicit index slicing in 'at' method
",numpy/core/src/umath/ufunc_object.c
56d74a4687b8b01ed328896f91b5e42962923122,"Add comment to 'at' method unit test
",numpy/core/tests/test_ufunc.py
04c341da469150701fe7def6c98955485425b388,"Update documentation for 'at' method
",doc/release/1.8.0-notes.rst,numpy/add_newdocs.py
6bf50f16dc6e21f94606dbe4073b0aa34d2d14fa,"Update/expand unit tests
",numpy/core/tests/test_ufunc.py
7b551e9a2fbcb881211a86f1f28fdc5876af790c,"Rework 'at' method to fit customer's expectations.

'at' method should be functionally equivalent to op1[idx] += op2 (for add ufunc).
",numpy/core/src/umath/ufunc_object.c
dcea5009597382ebd798a1a680389f60e43369c1,"Misc fixes

- Fix crash when bind for second map iter fails
- Accept array like object for second operand
- Fix memory leaks
",numpy/core/src/umath/ufunc_object.c
f79e56d967010bb1a782027b0c645319380f98be,"Check for sucessful call to MapIterBind
",numpy/core/src/umath/ufunc_object.c
e1fa3d72e4a2569691aeb9f9003bdac52de7ce3e,"Add unit tests

Conflicts:

	numpy/core/tests/test_ufunc.py
",numpy/core/tests/test_ufunc.py
99fa26c29ed1847465353e6153859bc6ca7324aa,"Change 'select' method name to 'at'
",numpy/core/src/umath/ufunc_object.c
025a056fc905d3f34088fbdac366dc9667b20f9a,"Add comments
",numpy/core/src/umath/ufunc_object.c
7191df063cb598e917407b6b805c620f3dee15e2,"Add support for both unary and binary ufuncs
",numpy/core/src/umath/ufunc_object.c
925220ba72524b16e9fb2e153619dd1fc4068150,"Proof-of-concept for ufunc fancy indexing

Conflicts:

	numpy/core/code_generators/numpy_api.py
",numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_object.c
281458be347a574b8d4d28ddf49c02e2f9cf0930,"BUG: MapIter leaked itself and arr and index objects

MapIterBind incorrectly behaved when failing, cleaning up most
but not everything. The callers have to decref the mapiter
object. Which basically means that MapIterBind does not even
have to decref the new fields (they are decrefed in the
mapiter dealloc anyway).

Note that trying to add tests checking the refcounting
failed, but the tests seem to fail at least in many cases
not because of the indexing.

Closes gh-3589
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
ec418015d1a8e947feb3ca2868d976ee252782ec,"Merge pull request #3624 from charris/update-1.8-release-notes

DOC: Update 1.8.0 release notes.",doc/release/1.8.0-notes.rst
fb7bfd810925227d4889d0e0a4148135bba01031,"DOC: Update 1.8.0 release notes.

Add remarks on changes due in the next release and FutureWarnings.
Add notes on the new functions in the array C-API.
Add notes on the new function in th ufunc C-API.
",doc/release/1.8.0-notes.rst
3bc6b963a8b35e77fba901744121f6dd5f0162f1,"Merge pull request #3590 from juliantaylor/calloc

    use PyDataMem_NEW_ZERO (calloc) for PyArray_Zeros",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
d271d977bdfb977959db1ff26956666f3836b56b,"ENH: use PyDataMem_NEW_ZEROED for PyArray_Zeros

PyDataMem_NEW_ZEROED uses calloc which will take advantage of the fact
that most operating systems provide already zero initialized memory
blocks on larger allocations.
Additionally this memory can be sparse (= mapped to a single zero page)
on some systems (e.g. linux) reducing memory usage of applications
using sparse arrays.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
afceb18ded0a263196919106ad6e0dba252b204f,"ENH: add PyDataMem_NEW_ZEROED which allocates memory with calloc
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c
9b10a5f7a0f260981ad69cec147807080a456d0a,"Merge pull request #2721 from abalkin/master

Mistake in linalg.eig() documentation",numpy/linalg/linalg.py
a18d7c493a0aee6becea601a37d878c87bb43f3a,"Merge pull request #3626 from charris/gh-3397

gh-3397",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
ebfccd27a895fc2e28c2f1a2792feaea5d3913d3,"TST: Test that savetxt works with objects having a write method.
",numpy/lib/tests/test_io.py
b82c1df6f99c62a120dfd9d5c606110d593d96e7,"ENH: Make savetxt work with file like objects.

Accept any object with a ""write"" method as that is the only method
called by the code.
",numpy/lib/npyio.py
37b6baa7c73b9f395b6e4d9f89194d96a79f0090,"Merge pull request #3625 from charris/update-howtorelease

DOC: Update HOWTO_RELEASE.rst.txt.",doc/HOWTO_RELEASE.rst.txt
73db716c4ff481cde56b161d9232de3dcbeed159,"DOC: Update HOWTO_RELEASE.rst.txt.

The current version is out of date. Supported Python versions have
changed, the buildbot is no longer reachable, some links are dead,
etc.
",doc/HOWTO_RELEASE.rst.txt
a01738ceb2ced534ed498d9cae9954a0c8019850,"Merge pull request #3623 from charris/fix-postprocess-script

BUG: Use io.open instead of open for compatibility.",doc/postprocess.py
ae135881937d9eb278b3936835192223cda19bd8,"Merge pull request #3622 from charris/merge-1.8-docs

DOC: Merge doc updates from http://docs.scipy.org/numpy/patch/.",numpy/core/numeric.py,numpy/random/mtrand/mtrand.pyx
871d07987b28f4e7657aef7364f776e30b0c7daa,"BUG: Use io.open instead of open for compatibility.

The recent Python 3 fix adding encoding=""utf-8"" to the open function
fails on Python 2 because the encoding keyword is not defined. The
solution is to use io.open, which is available for Python 2.6 and 2.7
and is an alias for open when Python >= 3.0. It is reputed to be slow
when running in 2.6, but that should not be a problem.
",doc/postprocess.py
31f526ef39dfe3dd079d9534530ba80aa32f8e79,"DOC: Merge doc updates from http://docs.scipy.org/numpy/patch/.

Preparatory to 1.8.0 branch.
",numpy/core/numeric.py,numpy/random/mtrand/mtrand.pyx
3c9c31b19038dbe49c145aa014aa45e0b29b5d4c,"Merge pull request #3534 from charris/nan-stat-functions

Add nanmean, nanvar, and nanstd functions.",doc/release/1.8.0-notes.rst,doc/source/reference/routines.statistics.rst,numpy/core/_methods.py,numpy/core/fromnumeric.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/lib/nanfunctions.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_nanfunctions.py,numpy/testing/nosetester.py
580a3b60abfb9fa7f9866a87dc90f7bbc6bed184,"Merge pull request #3608 from charris/remove-1.8-diagonal-refs

DOC: Remove references to diagonal changes in 1.8.",doc/release/1.8.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/arrayobject.c
4d6575b9dfbd07b8d78d8d837d0f4810974f943f,"Merge pull request #3601 from charris/document-npv-change

DOC: Note the new behavior of financial.npv in the 1.8.0 release notes.",doc/release/1.8.0-notes.rst
98e3a6cb17f0c9ad834d88af50646127249f1a5f,"DOC: Note the new behavior of financial.npv in the 1.8.0 release notes.

Closes #3389.
",doc/release/1.8.0-notes.rst
dc73e1b104cf59f936e3c2bb5cfc3c0e147f99de,"DOC: Various fixes.

Fix typos and clarify some explanations. Document the changes in the return
values of nanargmin and nanargmax for all-NaN slices in the 1.8.0 release
notes.
",doc/release/1.8.0-notes.rst,numpy/lib/nanfunctions.py,numpy/lib/tests/test_nanfunctions.py
f9259c3732797ed5cd7db60720a5c19c1a4abe0e,"Merge pull request #3619 from charris/update-ABI-version-and-hash

Update abi version and hash",numpy/core/code_generators/cversions.py,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/setup_common.py
50989f75e132b42bc4146aa5dab576091e29ce2e,"MAINT: Update API version and API hash.

In preparation for the 1.8 release, update the API version to
0x00000009 and the API hash to f99a02b75bd60205d1afe1eed080fd53.
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/setup_common.py
38d987d392a87341f64528cdb55f7a746a7ba8d5,"BUG: Replace relative imports in cversions.py.

Scripts should not use relative imports as they won't work in a
non-package environment.
",numpy/core/code_generators/cversions.py
54cae69f027a8e1b8575e64360e27945d57afafc,"Merge pull request #3617 from saschpe/master-postprocess-encoding

Explicitly set encoding to UTF-8 in postprocess.py",doc/postprocess.py
58649612430391d9cc4d67ab39e6c8ec26ddf817,"Explicitly set encoding to UTF-8 in postprocess.py

The default (ascii) encoding breaks:

python3.3 postprocess.py html build/html/*.html
Traceback (most recent call last):
  File ""postprocess.py"", line 59, in <module>
    main()
  File ""postprocess.py"", line 27, in main
    lines = process_html(fn, f.readlines())
  File ""/usr/lib64/python3.3/encodings/ascii.py"", line 26, in

    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in
2309: ordinal not in range(128)
",doc/postprocess.py
d62f11d7e149bf8406974093e5254200471d2745,"Merge pull request #3612 from jnothman/patch-1

DOC fix legacy a.size() -> a.size in np.ravel docstring",numpy/core/fromnumeric.py
320a0ca4e7983ed7a9cc12f18af5ff075cd4d26d,DOC fix legacy a.size() -> a.size in np.ravel docstring,numpy/core/fromnumeric.py
a36ef7a8a8dd74830e0af3c8135cf4077891a96d,"BUG: Regression test needs to ignore ComplexWarning.

This was raising a warning during tests.
",numpy/core/tests/test_regression.py
f8244a6888863cb40fc93b272b6055141df4b322,"DOC: Document nanmean, nanvar, and nanstd in the 1.8.0 release notes.
",doc/release/1.8.0-notes.rst
eac46b4e6ca25ef9450c3a227818877f3de10e98,"TST: Add tests for the nansum, nanmean, nanvar, and nanstd.
",numpy/lib/tests/test_nanfunctions.py
c7dd1e5295fcc0218bab764185ff047ee7057c77,"MAINT: Refactor nanfunctions.

nanmax, nanmin
--------------
Add out and keepdims keywords.

nanargmin, nanargmax
--------------------
A NanWarning is raised if an all NaN slice detected. For all such
slices np.iingo(np.intp).min is returned as the index value.

nansum
------
The keywords dtype, out, and keepdims are added.

A FutureWarning is raised, as in the future the mean of an empty
slice after NaN replacement will be 0 instead of the current NaN.

nanmean, nanvar, nanstd
-----------------------
For all, if the input array is of inexact type then the dtype and out
parameters must be of inexact type if specified.  That insures that NaNs
can be returned when appropriate.

The nanmean function detects empty slices after NaN replacement and
raises a NanWarning. NaN is returned as the value for all such slices.

The nanmean and nanstd functions detect degrees of freedom <= 0 after
NaN replacement and raise a NanWarning. NaN is returned as the value for
all such slices.
",doc/source/reference/routines.statistics.rst,numpy/lib/nanfunctions.py,numpy/testing/nosetester.py
6a02d054d2f74dc675497144a4819ce6be7835cb,"TST: Add more extensive tests for the mean, var, and std methods.

Test the mean, var, and std methods more extensively. In addition, add
tests that:

    Check that scalar return types ar what they should be.
    Check that ValueError is raised when ddof is too big.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py
02f5258125debef5a0e5f6072805a8c72e4a1bde,"ENH: Make var and std methods raise error when ddof too big.

Currently the results may be infinite or negative. Instead, raise a
ValueError in this case.
",numpy/core/_methods.py
f16b12e87667a85ab0dd6e26ddd4083117459fa6,"BUG: Make mean, sum, var, std methods return correct scalar type.

The return type could differ depending on whether or not the value
was a scalar.
",numpy/core/_methods.py
1b6b8719735ca3e98a0a0c3f492f16ff00ba1aa9,"MAINT: Clean up core/_methods.py and core/fromnumeric.py

Use issubclass instead of issubdtype.
Add some blank lines.
Remove trailing whitespace.
Remove uneeded float casts since true_divide is default.
Clean up documentation a bit.
",numpy/core/_methods.py,numpy/core/fromnumeric.py
fcb0fef5c673ed0a5442b18bcd8c391907b4f9a7,"MAINT: Separate nan functions into their own module.

New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py are
added and both the previous and new nan functions and tests are moved
into them.

The existing nan functions moved from lib/function_base are:

    nansum, nanmin, nanmax, nanargmin, nanargmax

The added nan functions moved from core/numeric are:

    nanmean, nanvar, nanstd
",numpy/core/_methods.py,numpy/core/fromnumeric.py,numpy/core/tests/test_numeric.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/lib/nanfunctions.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_nanfunctions.py
777b6453e166df252298a47ef4f0e867614ac94a,"TST: Added tests for nanmean(), nanvar(), nanstd()
",numpy/core/_methods.py,numpy/core/tests/test_numeric.py
aaac613ea54aed930d54aebe05c0179fc14dc031,"ENH: Adding np.nanmean(), np.nanstd(), np.nanvar()
",numpy/core/_methods.py,numpy/core/fromnumeric.py
fc800230de0d4e138e6088da4b2155559d0e710a,"Merge pull request #2893 from mwiebe/reduceat_empty

Reduceat regression fix",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py
b2bfdae162452eaaaa6662a72dcd758169580ae1,"BUG: Fix additional zero-sized index case for ufunc.reduceat
",numpy/core/src/umath/ufunc_object.c
9b56a1d1f1445cf30dfdd3e14d83ac66154f4719,"TST: Add test for additional ufunc.reduceat empty parameter case
",numpy/core/tests/test_umath.py
3bd8e312418f88e698aa5bc963318d6a5480a51e,"TST: Change reduceat empty test to use i4 indices

On 32-bit platforms, was failing in casting the test
i8 index to i4. It may be desirable to allow this
in reduceat, but that change is independent of this pull
request.
",numpy/core/tests/test_umath.py
e083ceabda5c1f81426d79c51d40ba3093dcfd1f,"BUG: Fix ufunc.reduceat regression with empty index (gh-2892)
",numpy/core/src/umath/ufunc_object.c
2fe0783be04f0b4eed3025da4705c4addd4f8e9a,"TST: Add test for reduceat ufunc regression on zero-sized array
",numpy/core/tests/test_umath.py
dd2717f3b1a524c58b7bf79f234b87a6a9f68b2e,"Merge pull request #3609 from mwiebe/fill_struct_from_tuple

Bugfix: Regression when filling struct from tuple",numpy/core/src/multiarray/convert.c,numpy/core/tests/test_multiarray.py
6cae18513cf244ad919ad1f9994446c1d126f35a,"BLD: Fix build on MSVC (no uint64_t, use npy_uint64)
",numpy/core/src/umath/struct_ufunc_test.c.src
8c0c77549355a0b6d9d1194467f819893d27eb51,"BUG: Fix to allow x.fill(tuple) where x is a struct array
",numpy/core/src/multiarray/convert.c
66ad5a1b50e19cd75ada459e997da85fed7952bd,"TST: Test for x.fill(tuple) where x is a struct array
",numpy/core/tests/test_multiarray.py
df1aa99739ce194713c11a3685b9e99ac1ee1f94,"DOC: Remove references to diagonal changes in 1.8.

Not happening. Also remove reference to selecting multiple fields out of
an array returning a view from 1.8.0 release notes.

Closes #3228.
",doc/release/1.8.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/arrayobject.c
505dc05eee8362db98919b8ecd485fb5d8100e42,"Merge pull request #3607 from stefanv/select_doc_typos

DOC: Fix small typos in partition docstring.",numpy/core/fromnumeric.py
f9f58e949a06dfe584c96236225e98acc72b53de,"Merge pull request #3606 from stefanv/selection_bento_fix

BUG: Fix typo in core bento file.",numpy/core/bento.info
9e9bdc5b42b549af1955d1a5c9e59478b679e56f,"DOC: Fix small typos in partition docstring.
",numpy/core/fromnumeric.py
147c7ac58ba22cbed161a9ffc0f26415ef354bbc,"BUG: Fix typo in core bento file.
",numpy/core/bento.info
f8efcb6f191621e7c59f5385c85aeaa83be3669d,"Merge pull request #3360 from juliantaylor/selection-algo

 add quickselect algorithm and expose it via partition",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/bento.info,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h,numpy/core/src/private/npy_partition.h.src,numpy/core/tests/test_multiarray.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/matrixlib/tests/test_defmatrix.py
028007e05fd62d37fc98daf91ae0aafc1ea95cb8,"Merge pull request #3600 from charris/fix-iso-c90-breakage

BUG: Fix variable declaration after statement.",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/test_rational.c.src
4d9cd695486fa095c6bff3238341a85cbdb47d0e,"ENH: implement median in terms of partition

Partitioning is sufficient to obtain the median and is much faster.
In the case of overwrite_input=True the resulting array will not be
fully sorted anymore.
",doc/release/1.8.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
9c4c1c432b27f67eee2ad22ff5f2f9833bd1516d,"ENH: add quickselect algorithm and expose it via partition

A partition sorts the kth element into its sorted order and moves all
smaller elements before the kth element and all equal or greater
elements behind it.
The ordering of all elements in the partitions is undefined.

It is implemented via the introselection algorithm which has worst case
linear complexity compared to a full sort that has linearithmic
complexity.
The introselect algorithm uses a quickselect with median of three pivot
and falls back to a quickselect with median of median of five pivot if
no sufficient progress is made.

The pivots used during the search for the wanted kth element can
optionally be stored and reused for further partitionings of the array.
This is used by the python interface if an array of kth is provided to
the partitions function. This improves the performance of median and
which need to select two elements if the size of the array is even. A
percentile function interpolating between values also profits from this.

String selection is implemented in terms of quicksort which has the same
properties as a selection for now.
",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/bento.info,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/src/npysort/selection.c.src,numpy/core/src/private/npy_partition.h,numpy/core/src/private/npy_partition.h.src,numpy/core/tests/test_multiarray.py,numpy/matrixlib/tests/test_defmatrix.py
cb0a4f0fd9fad4caee96919f82d8efef512b3fda,"BUG: Fix variable declaration after statement.

Some declarations that are not at the beginning of a block have slipped
into the code. This breaks compilation on Python3.4a1. The Numpy coding
standard also disallows that construct.

Closes #3598.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/test_rational.c.src
0a16937e15af31ac33d76c60d72cdb9c68d7f2f1,"Merge pull request #3599 from charris/fix-operand-flags-test

BUG: Fix test_operand_flags test.",numpy/core/tests/test_ufunc.py
43a6c3d3279d3a2b308eea2cb2b7a96558b07f2e,"Merge branch 'pr/3591' into master.

See https://github.com/numpy/numpy/pull/3591
",numpy/lib/twodim_base.py
ed908c7bb01d73d072ae72421e3962836fce7f17,"DOC: fix some minor issues with histogram2d docstring formatting.
",numpy/lib/twodim_base.py
f62522c610f334f86b1be2a586211d0e4dcdd934,"DOC: update example of histogram2d to doctest format.
",numpy/lib/twodim_base.py
a23803e9e5f286d5bbdb3d5059d7630e6bd775a2,"Merge pull request #3594 from juliantaylor/is_aligned_maint

MAINT: move npy_is_aligned to common.h",numpy/core/include/numpy/npy_common.h,numpy/core/setup_common.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/private/lowlevel_strided_loops.h
3e34afc0bebb2ba49fa061ca4df5a7007d146688,"Merge pull request #3526 from zyv/fix_int_inheritance

BUG: Fix PyType_FastSubclass() check for numpy.int_ and Py3k inheritance",doc/source/reference/arrays.scalars.rst,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
d10832b74952ae6d5a27a4f1b03f6097e347d632,"BUG: Fix test_operand_flags test.

The test tests an inner loop in operand_flag_tests.c.src that expects
a long type, but it is tested using 'i8'. This fails when long is not
'i8'.

Closes #3363.
",numpy/core/tests/test_ufunc.py
41e6f0617e198fe45427d3f63b58d940f0cdd3f8,"TST: Add regression test to check numpy.int_ inheritance on Py2/Py3

Signed-off-by: Yury V. Zaytsev <yury@shurup.com>
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
83a3daf0c6d1d55c10a70bf2a90be954af8d747e,"BUG: Document that numpy.int_ doesn't inherit from int on Py3k

Signed-off-by: Yury V. Zaytsev <yury@shurup.com>
",doc/source/reference/arrays.scalars.rst
1234688ae809870007b73b4a8816711a60f8e62c,"BUG: Fix PyType_FastSubclass() check for numpy.int_

Signed-off-by: Yury V. Zaytsev <yury@shurup.com>
",numpy/core/src/multiarray/multiarraymodule.c
c6da120806f70d417619e1a34512f38dbd0dcc8d,"Merge pull request #3517 from juliantaylor/memchr-all-any

ENH: use memchr for unit stride all/any",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
78801c50ad314edae040968e5ffcd0d27dd70a45,"Merge pull request #3596 from ecprice/a

Fix documentation description of loop spam in interactive interpreter",doc/source/reference/arrays.nditer.rst
b29519a6389c1c23217d559597951a9a88bb4b4c,"Merge pull request #3597 from rgommers/testing-module-cleanup

MAINT: remove unused and broken parts of numpy.testing",numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/utils.py
d6e8c91cc8d4cf173f7378eba69bcf1e933dd879,"MAINT: remove unused and broken parts of numpy.testing

Deprecate np.testing.importall - it's pointless and partially broken.
",numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/utils.py
b2de377e77a70f7ae84fe2345af274d1963ff6d1,"Fix documentation description of loop spam in interactive interpreter
",doc/source/reference/arrays.nditer.rst
18b5c7cc680f8d99b616303056dd46b5a021dc54,"Added test case for size of long based of os
",numpy/core/tests/test_scalarmath.py
e91acdb17b2a9c65a0fb9b7a97764aa375819784,"ENH: add NPY_LIKELY and NPY_UNLIKELY macros for branching hints

Use it for npy_is_aligned expecting alignments of the power of two.
Cuts down the time spent in _IsAligned by the testsuite relative
to the rest of multiarray.so from 0.6% to 0.4%
",numpy/core/include/numpy/npy_common.h,numpy/core/setup_common.py,numpy/core/src/multiarray/common.h
433f8968e4df729093ca627546a647a31fc2ed8c,"MAINT: move npy_is_aligned to common.h

also make it and some other alignment operators a bit faster by using
unsigned integers and bitwise and if possible.
Make use of npy_is_aligned in _IsAligned too.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/private/lowlevel_strided_loops.h
7819817653003fdae4554cbfab4cdbedf824c305,"ENH: improve numpy.all()/any()

Unroll the loop once and use pminub/pmaxub to save a slow pmovmskb
instruction. Improves performance by 50% on some AMD chips.
Also add a pure libc path using memcmp and memchr for non amd64 systems.
The libc path can be faster with a very modern cpu and libc version,
e.g. an i7 with glibc 2.17 is about 20% faster than our code but many
other tested platforms are much slower (2.12 xeon, core2duo) or same
speed (2.17 phenom).
The numpy code can be removed in future when faster libc versions and
cpus are more commonly available.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
6ee3aba3d719dbecb40474331b056f2170272576,"ENH: Added test cases to ensure the behavior of integer as it is.
There is a need to add test case which ensure and maintain the behaviour
of integer. As per pr #3567, which speed up integer scalar's operations
by avoiding the conversion of integer to NumPy Scalar.
",numpy/core/tests/test_scalarmath.py
928289bf37081f4deb6755e226600998ccc23610,"Merge pull request #3513 from seberg/0d-linalg

ENH: inv/solve work with empty inner and others empty outer array",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
75ac90e5650073381a7466ac41487e98b16896ee,"Merge pull request #3565 from charris/documentation-fixes

Documentation fixes for `basics.io.genfromtxt.rst` and `creation.py`",doc/source/user/basics.io.genfromtxt.rst,numpy/doc/creation.py
870d89e2b499e8ae48dec39df4962d61a0f770f1,"Merge pull request #3521 from arinkverma/gsoc_performance

ENH: Avoiding NPY_BEGIN_THREADS for small arrays can speed-up trivial_three_operand_loop by 5%",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/umath/ufunc_object.c
3f99247298fbcd979ad0e631112e6810dca73dd0,"Merge pull request #3575 from seberg/issue-3458

BUG: Boolean assignment allowed writing to 0-sized array",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
ec81426e03add5bc869d03562a35f95c8a8f056e,"Merge pull request #3576 from mspacek/patch-3

MAINT: fix typo in npy-format.txt",doc/neps/npy-format.txt
d03cd894d4cde9523e739b96df9747d42514d443,MAINT: fix typo in npy-format.txt,doc/neps/npy-format.txt
f0910a18f164f0a71590003c24992eca90e34b61,"BUG: Boolean assignment allowed writing to 0-sized array

This was because of the assumption that broadcasting works
if the dimension is not > 1, but correct is != 1.

Adepted from a patch provided by prossahl.

Closes gh-3458.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
a0ef063d2f14e1bc3f92e63930b357a8aaf412a8,"Merge pull request #3568 from mspacek/patch-1

Fix doc typo",numpy/lib/format.py
5a5e86f4fc2691064d2e36783cf0c05936cd9020,"ENH: For smaller array, added macro NPY_BEGIN_THREADS_THRESHOLDED in ndarraytypes.h
Avoiding NPY_BEGIN_THREADS for small arrays, can speed-up trivial_three_operand_loop by 5%.
As releases of GIL, then quickly restoring just after small operation doesn't benefit.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/umath/ufunc_object.c
bf87e26cb049de0b4d5b4e0b45adc7bbb3ec263b,"Merge pull request #3572 from pv/fix-runtests

MAINT: runtests: make it work on Fedora",runtests.py
46e1d8736867d89801e1f9cea17cd36099f610a7,"MAINT: runtests: make it work on Fedora
",runtests.py
fa55f4c463806599bccf145baf22e13ff79f9a68,"ENH: inv/solve work with empty inner and others empty outer array

This makes the inverse of a 0x0 array simply be 0x0 again. It
also modifies the no-empty array check in favor of a no-empty
*inner* array, since the gufuncs seem to handle the other case
fine.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
4ea064b1d028d8ecd1b4353f22409e1714ec75dc,Fix doc typo,numpy/lib/format.py
645b9f572f0a22e9049fd736b8b91427be2c8402,"Merge pull request 'gh-3497'

* gh-3497:
  BUG: Make np.insert check for out of bounds axis arguments.
  TST: add test for negative axis values in np.insert.
  BUG: Fix bug in np.insert when axis=-1
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
ea768739dab69c0b67488179ffa67d57d63d59f8,"BUG: Make np.insert check for out of bounds axis arguments.

Also add test for IndexError exception when axis is out of bounds.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
496813f1a23363bbd50a62a60c37f6bd4e10649b,"TST: add test for negative axis values in np.insert.
",numpy/lib/tests/test_function_base.py
cb6fe848bf1a6a046fd473b72b1350ea40c8644e,"BUG: Fix bug in np.insert when axis=-1
",numpy/lib/function_base.py
196398fadb7fe402a67ccea0bc1546b36d066440,"Merge pull request #3527 from dmuellner/master

Fix for the NumPy C-API deprecation mechanism.",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/{npy_deprecated_api.h,numpy/core/setup.py
62282a90424f1643ea50375e53c326af48fee898,"More tiny changes according to Charles Harris' comments.
",numpy/core/include/numpy/ndarraytypes.h
fb416a04bf05c1d91e0ef98d010d5f13f3aecd5d,"MAINT: Cleanup doc/source/user/basics.io.genfromtxt.rst.

Remove trailing whitespace.
Break long lines.
Fix some indentation.
Use the `::` directive to indicate interactive examples.
",doc/source/user/basics.io.genfromtxt.rst
eacca11823c5d05c86ec9e715773347d5803c32e,"DOC: Fixes for doc/source/user/basics.io.genfromtxt.rst.

Add missing part of usecols negative index explanation and other
minor redaction fixes.
",doc/source/user/basics.io.genfromtxt.rst,numpy/doc/creation.py
5635b6820bb237c7ae95e7943616b9f677797526,"Merge pull request #3564 from larsmans/master

DOC: np.char.startswith checks a prefix, not a suffix",numpy/core/defchararray.py
24629467570d4bb60b169c6a5e2397dcbc0484bb,"DOC: np.char.startswith checks a prefix, not a suffix
",numpy/core/defchararray.py
b5991e07ae8653b727a857efc4b8eaa732618575,"Reflect file name change in setup.py.
",numpy/core/setup.py
c65472e9e123ad98d1fcd809cb3efb44e6205122,"Fixed typo.
",numpy/core/include/numpy/ndarraytypes.h
822b07c3b87e4583648c4a5c34c77437bb559db3,"Changes according to Charles Harris' comments.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_1_7_deprecated_api.h
713d045c09359bc37ea6be7f508d7b9330373a58,"Changes according to Charles Harris' comments.
",numpy/core/include/numpy/{npy_deprecated_api.h
b307a8a5729e5e18fa8a7ff56892947fc2d2eb79,"Merge branch 'numpy-swig' into gh-3451

* numpy-swig:
  Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24)
  Added mention of the SuperTensor tests in the README file
  Removed 'static' keyword from pyfragments.swg altoghether. I've had the following errors In function ‘SWIG_AsVal_long’: error: initialiser element is not constant In function ‘SWIG_AsVal_unsigned_SS_long’: error: initialiser element is not constant, BOTH in Windows/MinGW and Linux when compiling with gcc
  Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.
  cleaned-up loop indexes in Tensor.cxx
  cosmetic changes to numpy.i
  Fixed the capsule / cobject memory destructor. Added types to deal with lists of arrays and lists of tensors as input and inplace types.
  removed the note about testResize1 failing in testArray.py
  fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size
  Minor adjustments to numpy.i
  Updated numpy.i testing documentation
  Updated the numpy.i documentation
  Initialize all DATA_TYPE* data_temp variables to NULL
  Added Egor's ARGOUTVIEWM_ARRAY3 typemaps
  Re-instated a Python 3 fix
  Removed doc from list of sub-directories
  Upgrade numpy.i
  Got rid of a unit test

Conflicts:
	doc/sphinxext
	doc/swig/test/testFortran.py
",doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,doc/swig/Makefile,doc/swig/README,doc/swig/numpy.i,doc/swig/pyfragments.swg,doc/swig/test/Array.i,doc/swig/test/Array2.h,doc/swig/test/SuperTensor.cxx,doc/swig/test/SuperTensor.h,doc/swig/test/SuperTensor.i,doc/swig/test/Tensor.cxx,doc/swig/test/Tensor.h,doc/swig/test/Tensor.i,doc/swig/test/testArray.py,doc/swig/test/testFortran.py,doc/swig/test/testSuperTensor.py
32206dd79cafdce87cfb0db91903084c2fe2e473,"Merge pull request #2941 from raulcota/avoid_create-kill_npscalars

Avoid conversion to NumPy Scalar",numpy/core/src/scalarmathmodule.c.src
f9c225f2806adb195fbf3434b416746cdfb02c2c,"Merge pull request #3559 from hklemm/patch-1

Update structured_arrays.py",numpy/doc/structured_arrays.py
0f44fe46cfe9c15dffe4c4eff63c3a9de222d93d,"MAINT: Remove extraneous remark.

In numpy/core/src/npymath/npy_math_private.h the /* my machine */
comment is not informative.
",numpy/core/src/npymath/npy_math_private.h
7bd1f1303f80f0f79352a3c76b4b29f7c5bd73be,"ENH: Add support for Motorola extended float format
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_fpmath.h
79106925b1377c6b781fabb61daf505a35564c21,"STY: Break long lines in numpy/distutils/log.py.
",numpy/distutils/log.py
933000d2f46222ceb81fa4e39cda780cf4891438,"MAINT: typo fix in logging message

The logging message in numpy.distutils.log.set_threshold
mispelled threshold.
",numpy/distutils/log.py
c0a61b2e16b6909df5d406087ed0fd923d9edfbd,"Update structured_arrays.py

The behaviour documented did not match the actual behaviour of numpy. Explanation changed and the code example updated.",numpy/doc/structured_arrays.py
895866d337fedb2018a076002ebb9ea49fa397f3,"Merge pull request #3550 from endolith/patch-1

DOC:Some minor proofreading of Tests introduction",doc/TESTS.rst.txt
4259c4eb6a23d72f56d4fa45bc65947fd731cf27,DOC:Revert ``assert()`` back to ``assert`` (statement),doc/TESTS.rst.txt
dc9ff0d60cd0e48875247c9bc5db772db5ed754d,"Merge pull request #3547 from pv/numpydoc-move

Numpydoc move",.gitmodules,doc/HOWTO_BUILD_DOCS.rst.txt,doc/sphinxext,doc/sphinxext/LICENSE.txt,doc/sphinxext/MANIFEST.in,doc/sphinxext/README.txt,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py
fab4c0e3691da6b44b8d6a800b2677896d6e13c3,"DOC: fix HOWTO_BUILD_DOCS.rst.txt
",doc/HOWTO_BUILD_DOCS.rst.txt
3903928a67816df6d48ed63e81ebced171252112,"Add Numpydoc as a git submodule
",.gitmodules,doc/sphinxext
f4f7c53c2986584f4e07ca3990d021288f37bab6,"Move numpydoc to a separate repository
",doc/sphinxext/LICENSE.txt,doc/sphinxext/MANIFEST.in,doc/sphinxext/README.txt,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py
146eb6ae9fe97474e8a579dd8df82898dcf7f7f6,"Merge pull request #3549 from pv/doc-theme

DOC: use the new scipy-sphinx-theme in the documentation",.gitmodules,MANIFEST.in,doc/Makefile,doc/scipy-sphinx-theme,doc/source/_static/scipy.css,doc/source/_templates/indexsidebar.html,doc/source/_templates/layout.html,doc/source/conf.py,doc/source/release.rst,doc/source/scipyshiny_small.png
1eea247484093073389032da7cc72126e502ebaa,DOC:Some minor proofreading of Tests introduction,doc/TESTS.rst.txt
bf0134d63396488b2736978adea166b625b4bcf4,"DOC: put release notes in inverse order
",doc/source/release.rst
29d47bf1886d48a072448d69a3ecb845447bb581,"MAINT: ensure the sphinx theme gets included in source tarballs
",MANIFEST.in
41eeed781d0d765408692c8b9550e63f99a46f8c,"DOC: update scipy.org doc build Makefile targets
",doc/Makefile
df2198336bf8a0e513ac8f32cddf8b10278520db,"DOC: use the new scipy-sphinx-theme in the documentation
",.gitmodules,doc/scipy-sphinx-theme,doc/source/_static/scipy.css,doc/source/_templates/indexsidebar.html,doc/source/_templates/layout.html,doc/source/conf.py,doc/source/scipyshiny_small.png
756dad2846b3ae531e6ebd94b6c0fe89b48f25c6,"Merge pull request #3541 from jeromekelleher/patch-1

BUG: make preprocessor tests consistent in halffloat.c",numpy/core/src/npymath/halffloat.c
8982c77ade3b28538184c0f72087a2bce5e70162,"Merge pull request #3546 from nils-werner/cumsum-diff-link

Link cumsum and diff to one another...",numpy/core/fromnumeric.py,numpy/lib/function_base.py
62e3e6206a2d537267eb1e718864535dae8d1b72,"Link cumsum and diff to one another as theyre roughly the inverse of each other
",numpy/core/fromnumeric.py,numpy/lib/function_base.py
7b2f20b406d27364c812f7a81a9c901afbd3600c,"Merge pull request #3538 from michaelaye/patch-1

Docstring: point to correct equivalent function (one word change)",numpy/core/fromnumeric.py
6352343b8ddbf88e3ebb8bf8b65bd08424ef729b,"Repaired my misunderstanding and added np.extract

I overlooked that np.compress and ndarray.compress are different things and wrongly assumed that it was a typo. I corrected that and added np.extract for equivalency for 1-D arrays.",numpy/core/fromnumeric.py
e6a547b895770e90889d60e9f748d000323a8737,"Update halffloat.c

Corrected preprocessor form.",numpy/core/src/npymath/halffloat.c
90ececac5755b0b54d7c8c2c5d71caaeb5c0b45c,"Merge pull request #3539 from WarrenWeckesser/bug-norm-performance

BUG: linalg: norm was computing and then ignoring a product",numpy/linalg/linalg.py
80bc69023baa1974726ba6c259179a5854d84c72,"MAINT: linalg: some more clean up in norm: 'nd' was defined but not used
",numpy/linalg/linalg.py
ffb45c5f107795752a55976b185ed50784aed744,"BUG: linalg: norm was computing and then ignoring a product
",numpy/linalg/linalg.py
9c93f75f02ae5c2c1d9e8a806bcdebc63c6ba98f,"Docstring: point to correct equivalent function

np.compress' ""See also"" pointed to itself instead to equivalent np.extract",numpy/core/fromnumeric.py
c5694c5188c76701eed47c0736ee9c285f47d07d,"Merge pull request #3531 from fkbreitl/master

Updated documentation for histogram2d() in twodim_base.py according to discussion",numpy/lib/twodim_base.py
fc959610520d2e510fb2211648ca256d552d8be3,Update twodim_base.py,numpy/lib/twodim_base.py
3f8a986ecbbb0fc73ca21db8520b35e2f7b81fa4,"Fix for the NumPy C-API deprecation mechanism.
",numpy/core/include/numpy/npy_deprecated_api.h
c067c156bf2ffb96d93083e468158ecbc35baba4,"Merge pull request #3520 from charris/replace-warningmanager

Replace use of WarningManager by warnings.catch_warnings and then deprecate it.",numpy/core/tests/test_api.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/random/__init__.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/utils.py
5b10b1b38044f0a4431ee587eec186767d07fe93,Update twodim_base.py,numpy/lib/twodim_base.py
b55f2752140de3bd6969dd66960f649da44974a5,"Merge pull request #3522 from charris/fix-test_api

MAINT: Fix Python version dependent test.",numpy/core/tests/test_api.py
cb2c88790fa9d5afe92a77f920b2bf5232cb8e87,"MAINT: Fix Python version dependent test.

The buffer test in numpy/core/tests/test_api.py was apparently
testing for incorrect behavior that was corrected in Python 2.7.5.
This PR changes the test to check for the correct results and makes
running it depend on Python version.

Closes #3512.
",numpy/core/tests/test_api.py
05a15c8b621f953607429f3b67e079dfe1b439d6,"MAINT: Remove uses of the WarningManager class.

WarningManager was a workaround for the lack of the with statement
in Python versions < 2.6. As those versions are no longer supported
it can be removed.

Deprecation notes are added to WarningManager and WarningMessage, but
to avoid a cascade of messages in third party apps, no warnings are
raised at this time, that can be done later.

Closes #3519.
",numpy/core/tests/test_api.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/random/__init__.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/utils.py
a053a4372aba0af0bd63ffd5e207baf469cfc7bf,"Merge pull request #3518 from charris/use-errstate-context-manager

MAINT: Use np.errstate context manager.",numpy/core/arrayprint.py,numpy/core/machar.py,numpy/core/numeric.py,numpy/core/tests/test_half.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/lib/financial.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_type_check.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/timer_comparison.py,numpy/testing/utils.py
e1c4806b649933383fb610205fb612c438360472,"Merge pull request #3516 from charris/remove-outdated-version-checks

MAINT: Remove outdated version checks.",doc/sphinxext/setup.py,numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpymemoryview.h,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/private/npy_pycompat.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/f2py/src/fortranobject.h,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c,setup.py
2f1174dee44e901b7d028beb86f4a8ea324bd74f,"MAINT: Use np.errstate context manager.

Now that Python < 2.6 is no longer supported we can use the errstate
context manager in places where constructs like
```
    old = seterr(invalid='ignore')
    try:
        blah
    finally:
       seterr(**old)
```
were used.
",numpy/core/arrayprint.py,numpy/core/machar.py,numpy/core/numeric.py,numpy/core/tests/test_half.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/lib/financial.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_type_check.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/timer_comparison.py,numpy/testing/utils.py
28eadc0e31ca7aea5c679023d1e703856f45c879,"MAINT: Remove outdated version checks.

Because Numpy 1.8.0 will no longer supports Python versions < 2.6 we
no longer need to check for that and can also remove the code that is
specific to those earlier versions.

To make this a bit safer, the toplevel setup.py file now contains a
check of the Python version number and raises an error when run by an
unsupported version.
",doc/sphinxext/setup.py,numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpymemoryview.h,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/private/npy_pycompat.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/f2py/src/fortranobject.h,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c,setup.py
12c5fc01e37d2235713c59ac0b1346294a8e8688,"Merge pull request #3509 from arinkverma/gsoc_performance

ENH: added short path scalar array in get_ufunc_arguments from ufunc_object.c",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/umath/ufunc_object.c
6815f865678e88dab68c00c34fb1c9e7166f8f3c,"ENH: check for the same object in can_cast_scalar_to from convert_datatype.c
Check if two dtypes references to the same object in can_cast_scalar_to from convert_datatype.c,
then the result is always OK
",numpy/core/src/multiarray/convert_datatype.c
4c3ad43fc6cf68813bea09e1451f371f0a992369,"ENH: added check for scalar array in PyArray_FromArray from ctors.c
Check if object is of array with newtype is NULL. If so return it directly instead of checking for casting.
",numpy/core/src/multiarray/ctors.c
49a587cd786242b05fcfd22d5cda961d733b68d4,"Merge pull request #3510 from mwtoews/master

Add regression tests for pickleable record arrays",numpy/core/tests/test_records.py
6eeb6122cc7126500e0ea7d19cea2e7dc8904e9d,"Merge pull request #3501 from inducer/master

Fix ""numpy scalar * array-like == performance horror""",doc/release/1.8.0-notes.rst,numpy/core/src/multiarray/number.c,numpy/core/tests/test_ufunc.py
64d5832d0b675436a52e10a06d5386611c8eb889,"Add regression tests for pickleable record arrays
",numpy/core/tests/test_records.py
4441bdd95197ba10651eee8366e67176fb3b5b51,"BUG: Check earlier for higher priority in binary operators, add test

Fixes #3375
",doc/release/1.8.0-notes.rst,numpy/core/src/multiarray/number.c,numpy/core/tests/test_ufunc.py
884c403605d5679d4e224bb24263a490f1249b6f,"Merge pull request #3491 from ContinuumIO/astype_fix2

Fix creation of string arrays from object types",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
f1c776657467391781767780bb0a783d24bb8d50,"Merge pull request #3507 from juliantaylor/vectorize-cmp

ENH: vectorize boolean comparisons of floats",numpy/core/numeric.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
01a9081e7791f19d65f73e623a5dfeec52243be3,"ENH: vectorize boolean comparisons of floats

the new code will more often propagate the invalid floating point
exception if comparing against nan, so allclose now ignores it (but
still returns False)
",numpy/core/numeric.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
97372dbe877f19ae73a070b05c380cfea0871dc0,"STY: Formatting changes
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
edd989eccb6283bc4cf3605e62ad6733a95316dc,"BUG: Fix creation of string arrays from object types
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
021d52a1294c662c7e31918db2e26bdc10e37f20,"ENH: added check for scalar array in PyArray_FromArray from ctors.c
Check if object is of array with newtype is NULL. If so return it directly instead of checking for casting.
",numpy/core/src/multiarray/ctors.c
cfe411b6cccb177003c99fb780917f97f4be38e9,"Merge pull request #3500 from charris/fix-3592

Fix exceptions being swallowed by fromiter.",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_numeric.py
9b3e719b8ab153335bcc9064cf186c823367bdbe,"ENH: added check for scalar array in PyArray_FromArray from ctors.c
Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.
",numpy/core/src/umath/ufunc_type_resolution.c
55bc296b5b415f4ca575e9d17ff930b14a89306d,"ENH: added check for scalar array in PyArray_FromArray from ctors.c
Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.
",numpy/core/src/multiarray/ctors.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
df041a94c8bfc8dcff2d1abfe0eb6eebbff9d8bd,"Merge pull request #3506 from josteinbf/arraypad-padwidth-zero

Allow pad_width of zero in np.pad",numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
7c46223294001328bae117ce4a04d3a1f53a1ad6,"ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c
Check if object is of array dimension zero, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged. Also PyArray_FromAny(obj,NULL,0,0,0,NULL) calls PyArray_FromArray(obj,NULL,0) which return original obj
",numpy/core/src/umath/ufunc_object.c
ea45134062693723c2258b862f87d3750a8dc564,"TST: New test to ensure np.pad allows pad_width of zero.
",numpy/lib/tests/test_arraypad.py
c6ce294f6feeebcdf67b238564c770387be933a5,"BUG: Allow to pad arrays by zero entries.

np.pad will now accept a pad_width containing zeros. The functionality
was already implemented, but validation of input was too strict.
",numpy/lib/arraypad.py
b0f4e77643e3bd01b8108f150e284cc051ff6c4a,"STY: Fix trailing whitespace and replace test doctrings by comments.
",numpy/core/tests/test_numeric.py
f2bec652c1a3137db0e0904312fcb9fe773350ec,"BUG: Remove xrange that slipped into test_numeric.py.
",numpy/core/tests/test_numeric.py
fa9d813be019111846a85f8312982d989b23307c,"TST: Add tests for exceptions raised by fromiter.

This improves the testing of the edge cases.

Work done with @certik.
",numpy/core/tests/test_numeric.py
0c1f94dd7f946b0e2aa44e6354f6902fd38d955a,"BUG: Fix exceptions being swallowed by fromiter.

All exceptions from underlying iterator were being collapsed into a
generic one. This allows the original exception to propagate.

Closes gh-2592.
",numpy/core/src/multiarray/ctors.c
79188b21dd85e4115195971522be91a2fcb1a9d2,"Merge pull request #3495 from charris/make-fromroots-return-monic

BUG: Fix failure to return monic polynomials from roots.",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_classes.py
0739b6b0379deecac18811af27966d4515c2ff7c,"BUG: Fix failure to return monic polynomials from roots.

This bug affected the various polynomial class methods fromroots due to
the ability to specify both window and domain. In that circumstance the
roots are mapped from the domain to the window by the substitution
`x = off + scl*x`. The polynomial that was being generated was monic in
the window before substitution, but if scl was not one it was not monic
considered as a function of the variable x in the domain. The fix is to
divide the generated coefficients by `scl ** deg` so that the scaling of
the highest degree term after substitution is canceled.

It might be better to make the scaling optional in the future, but this
fix makes the result match the documentation.

Closes #3467.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_classes.py
966fb719b711c7760ff54c154f91daa7d98a225b,"Merge pull request #3489 from dmuellner/master

Fix: Documentation bug for PyArray_GETPTR1",doc/source/reference/c-api.array.rst
cb7c7be71f32b2f04ed76fb5ad0c1116605d3636,"Corrected typos in documentation for PyArray_GETPTR1.
",doc/source/reference/c-api.array.rst
29dcc540610d1bd879ad02596791b4b11990090a,"Merge pull request #2875 from ahojnnes/array-init

Add convenience functions nans, infs, nans_like, infs_like ",doc/release/1.8.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
70cb9e56f58331fae92f457705afca264a6c5b2c,"Rename filled, filled_like to full, full_like
",doc/release/1.8.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
24a0aa5edbca9982f1b4b75b27840186cfa7c266,"Merge pull request #3461 from charris/fix-load-resource-warning

BUG: Make np.load transfer file ownership to the returned NpzFile.",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
d4e70cf8091d64d137c12b1cb4d8ae726804ebad,"Merge pull request #3483 from HaroldMills/bugfix-binomial

BUG: numpy.random.binomial raised ValueError for n == 0",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
1d67e265765c624e77e1fd48a1dfe4f035675f65,"Merge pull request #3468 from RelentlessIdiot/numpydoc_returns_unnamed

ENH: Allow unnamed return values in Returns section of doc string",doc/HOWTO_DOCUMENT.rst.txt,doc/example.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/tests/test_docscrape.py
974d8e3a14477098b1418f9443c79dcb5e70e68b,"BUG: numpy.random.binomial raised ValueError for n == 0

Range test for n was incorrect.

Closes #3480
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
069e9b012cb4a43153d474fdf9f88f0351589a05,"Merge pull request #3472 from juliantaylor/load-lib

BUG: add module extensions to load_library search list",numpy/ctypeslib.py
6c433aa3f089edda07fda4054fc13ddc8a294bad,"BUG: add module extensions to load_library search list

on mac, windows and linux (with >= py3.2) shared libraries and loadable
module have different extensions, so check both for all platforms.
",numpy/ctypeslib.py
2241e6c363da15403a45640382ffd4c6033f246b,"ENH: Allow unnamed return values in Returns section of doc string

Developers usually only need the type of a return value
followed by a brief description. However, in some cases
providing a name for a return value can make the documentation
clearer. This enhancement changes the format of the Returns
section such that the type is required, and the name is
optional:

    Returns
    -------
    int
        Description of anonymous integer return value.
    x : str
        Description of string return value named `x`.

With this change, if a colon is not present, then the entire
line is interpreted as the return type. In all other cases,
the Returns section is interpreted according to the current
rules.

Consistent with the current format, if a colon is present, then
the text to the left of the colon is interpreted as the name;
and the text to the right of the colon is interpreted as the
type. This makes the proposed change backwards compatible with
existing documentation.
",doc/HOWTO_DOCUMENT.rst.txt,doc/example.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/tests/test_docscrape.py
596795bf697b6be29e21c23d7680e2d476c23436,"Merge pull request #3466 from juliantaylor/vectorize-bool

vectorize boolean reductions ",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
f361c6b073316f3ee59ac23413155145b27aed90,"Merge pull request #3429 from juliantaylor/copy-unroll

ENH: tell gcc to unroll strided copy loops",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
1ae0622fe120b9da4df32525c3fb6970217e4cb4,"ENH: vectorize boolean reductions

Improves performance by a factor of 5 to 10 depending on the cpu.
These operations currently can't be autovectorized by gcc 4.8.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
e2a74ee4d49bf724917b26c0e11759fd877efaca,"MAINT: make binary_scalar2 static and put __m128i into a template
",numpy/core/src/umath/simd.inc.src
2ea4cb39941dd8a5a3d6365fdc34cff40a05c9c7,"BUG: Make np.load transfer file ownership to the returned NpzFile.

This assures that when the loaded file is closed it also closes the
file descriptor, avoiding a resource warning in Python3.

Closes #3457.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
6dd20ff5fa5b937b86fa4a1404ceeabafceaa589,"Merge pull request #3460 from charris/fix-polynomial-companion-matrices

BUG: Campanion Matrix was scalar, not matrix for degree 1.",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
12e06a261e8ea6b08002de8e9933fd43e5465df9,"BUG: Campanion Matrix was scalar, not matrix for degree 1.

The companion matrices returned by the various polynomial types was
a scalar in the degree one case instead of a 2-D array. Fix that and
add a test to check for that result.

Closes #3459.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
b3755926f5e5dc9fde273a8bf53bd98238e8e2b8,"Merge pull request #3455 from Hoops/copy_and_swap_stride_dst

Possible memory overwrite in copy_and_swap",numpy/core/src/multiarray/ctors.c
006544acdfd8d87cfa2ad737481c8e1de3ab6586,"Merge pull request #3456 from juliantaylor/uninitialized-use

BUG: fix uninitialized-use on invalid sort kind",numpy/core/src/multiarray/item_selection.c
1b6926f2b4922fa0589715d94f7f592444969bec,"BUG: fix uninitialized-use on invalid sort kind

orign is unset at that point but used in the fail goto,
can probably only be triggered by using the C-api wrong.
",numpy/core/src/multiarray/item_selection.c
074a40c9f597b2a8ae66f5c18f027269e0dfb4d0,"Merge pull request #3453 from seberg/fix-enhanced-dtype-detection

BUG: Fix failing python long behaviour and possible heisen bug",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
ea0da13308da78928fb99eaa0876626da1e8e9ac,"BUG: Fix failing python long behaviour and possible heisen bug

The priority error fixes np.float_(64) + python_long not working
anymore. The second change reformats the
PyArray_GetAttrString_SuppressException to avoid a possible
heisenbug decrefing an object before use.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
8f547d3a42d12e8d7ac993eef37bc3088de60688,"Merge pull request #3448 from efiring/ma_compress

BUG: np.ma.compress treated inputs in wrong order; closes #2495",numpy/ma/core.py,numpy/ma/tests/test_core.py
5e977d8358fd06b5466b146f3069a7a15d9309a0,"Merge pull request #3447 from efiring/ma_mvoid_len

BUG: add __len__ method to ma.mvoid; closes #576",numpy/ma/core.py,numpy/ma/tests/test_core.py
f70632f74f7b0feb9d78aff62eb9eebbb6a502ba,"Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24)
",doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst
f56411b4913f265fba1a50eba590124d5f7a6d27,"Added mention of the SuperTensor tests in the README file
",doc/swig/README
1ed31cd9f829900ed97b31f1ed924de0d326f939,"Removed 'static' keyword from pyfragments.swg altoghether. I've had the following errors In function ‘SWIG_AsVal_long’: error: initialiser element is not constant In function ‘SWIG_AsVal_unsigned_SS_long’: error: initialiser element is not constant, BOTH in Windows/MinGW and Linux when compiling with gcc
",doc/swig/pyfragments.swg
216d8cbc46f808eeff1942b3a607afca427125f2,"BUG: add __len__ method to ma.mvoid; closes #576
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c2465b647adc8c7de8359b89b54c2203a0952ba5,"BUG: np.ma.compress treated inputs in wrong order; closes #2495
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c654c04e9213fc75f0f14b18a4a257dfdbb41b27,"Call to byte_swap_vector should use dst, not d1, because this is
modified by the call to the strided memcpy and will end up pointing
after the end of the destination buffer in that case.
",numpy/core/src/multiarray/ctors.c
2a5c2c8227b600654f31ed346c73cce77bef554d,"Merge pull request #3436 from juliantaylor/vectorize-bool

ENH: vectorize boolean logical &&, ||, abs and not",doc/release/1.8.0-notes.rst,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
bb8c89db8bc5afd39dbe42d6f1f6657e769165d7,"Merge pull request #3449 from efiring/mvoid_setitem

BUG: field assignment in masked array did not reset mask; closes #2403",numpy/ma/core.py,numpy/ma/tests/test_core.py
8e5ed9aa4c1ab255b7796df02fd9aa75fb72fb93,"Merge PR-3444 from 'jmozmoz:master' into master.

https://github.com/numpy/numpy/pull/3444
Fixed compilation with Cygwin.
",numpy/core/include/numpy/ufuncobject.h
a111f60d2f32c58f9ea6862c9ce8e9c7f71c9ee7,"MAINT: fix compilation issue gh-3443.
",numpy/core/include/numpy/ufuncobject.h
fb4edf7caaf26ac21488ae0660d51560ec75d073,"BUG: field assignment in masked array did not reset mask; closes #2403

The previous behavior when setting a field after indexing to
select an element was suitable for the hard mask case, but
not for the default soft mask.  In addition, the _hardmask
value was not being set at all in the mvoid instance.  With
this changeset, the _hardmask is passed in and __setitem__
takes it into account.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
7dc65761e66913aa34cc8afee052e89cc983fd4e,"Merge pull request #3445 from juliantaylor/revert-x86-unaligned-access

BUG: Revert ""ENH: enable unaligned loads on x86""",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
9871460decba504013e68a16313efe052f3cb679,"BUG: Revert ""ENH: enable unaligned loads on x86""

This reverts commit aef286debfd11a62f1c337dea55624cee7fd4d9e.
x86 platform works with unaligned access but the compiler is allowed to assume
all data is aligned to its size by the C standard. This means it can vectorize
instructions peeling only by the size of the type, if the data is not aligned
to this size one ends up with data not correctly aligned for SSE instructions
(16 byte).
So this flag can only be enabled if autovectorization is disabled.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
e036deb49b74fc2432066497d7c1d4bb61a74caa,"Merge pull request #3440 from WarrenWeckesser/bug-ma-average

BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684)",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
ace8ee7b4b81af7600c53e093e104ef53d54482c,"BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684)
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
4a7f2b7601ad1b82f0fd8c3df1e548e83215abcf,"MAINT: ma: clean up ma/test_extras.py: don't use 'import *'; PEP8 whitespace
",numpy/ma/tests/test_extras.py
fa5bc1c0e6f96f50dc4f20195ab6b1180726cb23,"Merge pull request #3438 from kumanna/master

Fix minor typos in Polynomial class documentation",doc/source/reference/routines.polynomials.classes.rst
3e95144a378f75da5ad3318ba8b92880904e6038,"Fix minor typos in Polynomial class documentation

Signed-Off-By: Kumar Appaiah <a.kumar@alumni.iitm.ac.in>
",doc/source/reference/routines.polynomials.classes.rst
36d288b451ac510a71307d3be4cbd7d1c1dfbe53,"Merge pull request #3432 from fhs/lstsq-doc

DOC: fix typo in linalg.lstsq doc string",numpy/linalg/linalg.py
4b4a7365aeff3dfd19d4b72765db5358963614e9,"ENH: vectorize boolean logical &&, ||, abs and not

The code ensures the result is identical to a boolean operation even
though this might be unnecessary if bools are used correctly everywhere.
The overhead doesn't matter much as vectorizing single byte operations
hits the memory bandwidth limit very quickly.

Improves performance by about a factor of 5 to 10 depending on the cpu.
These operations currently can't be autovectorized by gcc 4.8.
",doc/release/1.8.0-notes.rst,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_numeric.py
3b7d3aef83bd914ff20fdc2a3d680591e69f61de,"Merge pull request #3435 from zabbarob/patch-1

Updated info about sphinx.ext.autosummary.",doc/HOWTO_BUILD_DOCS.rst.txt
c6e4020d24be14e6c0b0f7a8605d96df148093d7,Updated info about sphinx.ext.autosummary.,doc/HOWTO_BUILD_DOCS.rst.txt
7189c63f1236567abaf7fe5e9a7cf831a650d7bb,"DOC: another minor tweak of linalg.lstsq doc string
",numpy/linalg/linalg.py
d596d6d8d842832c763dd0f661ada5ea389bd71d,"DOC: minor tweak of linalg.lstsq doc string
",numpy/linalg/linalg.py
75df68b5ca238eabc2de144dce08d481c59ffcaf,"ENH: tell gcc to unroll strided copy loops

The strided copy loops profit a lot from unrolling as the number of
operations executed is in each iterations very small.
GCC needs to be told explicitly to do unrolling even on O3.

Unrolling is only profitable if the move can be done in a single
instruction, else the increased code size makes it slower, thus the flag
is only used for operations on element sizes less equal the native
pointer size.

Tested to improve performance of by 20-50% on intel core2duo, xeon
5xxx/7xxx and amd phenom x4.
",numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
65fe95ccc7366b8584aa1a4f88664950190b7143,"Merge pull request #3431 from WarrenWeckesser/mtrand-hypergeom-edge-case

ENH: random: Allow ngood=0 or nbad=0 in mtrand.hypergeometric.",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
222070083a6051eceb9ba8a66efa56a92db4f1a5,"ENH: random: Allow ngood=0 or nbad=0 in mtrand.hypergeometric.

Also edited the 'Parameters' section of the docstring to comply
with the numpy docstring standard.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
486542aaaea65aaf1ca79d45a3761933ea205cd1,"DOC: fix typo in linalg.lstsq doc string
",numpy/linalg/linalg.py
266a968d5d9b3cb5be59e30b697f4e9876c3a00c,"Merge pull request #3410 from m-d-w/enh_np_array0.1

ENH: Optimize array creation by avoiding errors",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_api.py
f7ea47401ebd4cee5853c62ba3c849c9fdeaea46,"Merge pull request #2942 from btel/npz_optimize

BUG: Fix loading npz files >2GB on 64bit systems",doc/release/1.8.0-notes.rst,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
7c4e9e14c473060595271a856b307bbc04f1c7bb,"adjust the optimal IO buffer size for npz files
",doc/release/1.8.0-notes.rst,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
b69c48d34d6b6d9be01f37bd5117e946e2556df8,"Chunk reads in format.read_array.

Maximum data size limitations in the crc32 module cause errors when
reading more than 2 ** 32 bytes from gzip streams. Work around this
issue when reading large arrays from npz files by chunking reads to
256mb.

This appears to resolve bug #2922.
",numpy/lib/format.py
cfae0143b436c3296eebe71e2dd730625dcaae95,"BUG: fix loading large npz files (fixes #2922)
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
d4b4ff038d536500e4bfd16f164d88a1a99f5ac3,"Merge pull request #3421 from juliantaylor/complex-copy

Poor performance complex strided copies since 1.7",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
e2dd429afc204bc60e2db0f6ad4fb706ab93c273,"BUG: fix non-swapping strided copies in GetStridedCopySwap

Fixed PyArray_GetStridedCopySwap{Pair,}Fn returns paths that do not swap
the data.
It never triggered because the alignment requirement for complex data
was too low (4-8 bytes) and always fullfiled by the memory allocator.
As this is now fixed it caused failures on sparc with 16 byte long
doubles.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
d0f505004892e7d88c1d4f5c79c45eabf97ddd83,"Merge pull request #3419 from juliantaylor/vectorize-rest

min/max and base math vectorization",doc/release/1.8.0-notes.rst,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py
ffa0130774242fb1b35a5f5a36366968d489d729,"DOC: use full ufunc names
",doc/release/1.8.0-notes.rst
88b459b7cd009db6f542d6d9e365a0ee311e96be,"MAINT: fix an uninitialized use in the no fenv fallback
",numpy/core/src/umath/simd.inc.src
15f2d6073badcb21c19384c77e0f150619657bd9,"Merge pull request #3422 from charris/deprecate-modules

DEP: Deprecate the oldnumeric and numarray modules.",numpy/__init__.py,numpy/numarray/__init__.py,numpy/oldnumeric/__init__.py,numpy/testing/nosetester.py,numpy/testing/utils.py
c20531c22e6ddb7f2ccdefbcfc4f67eb1bd4b455,"MAINT: guard prototypes with HAVE_EMMINTRIN_H

avoids declared but not defined warnings
",numpy/core/src/umath/simd.inc.src
a9a470c841eeb5f0fb2c2ae9639f6c2833f03d00,"DEP: Deprecate the oldnumeric and numarray modules.

The numarray and oldnumeric modules are deprecated. This is a bit tricky
as raising a DeprecationWarning on import causes an error when tests are
run. To deal with that, a ModuleDeprecationWarning class is added to
numpy and NoseTester is modified to ignore that warning during testing.

Closes #2905
",numpy/__init__.py,numpy/numarray/__init__.py,numpy/oldnumeric/__init__.py,numpy/testing/nosetester.py,numpy/testing/utils.py
4ed88a8f9520a1f877f62724de4ea7ae3fc738af,"Merge pull request #3417 from seberg/subspace-decref

BUG: Decref subspace when subspace is 0-d in fancy indexing",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
5c7d0b9e423087e05c5eb49dffbb67f72ff3a4e1,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
"
3abe4fd00ab1eead3a5a35163821a3edac504a36,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
37b55c0ab69f828a757ca15a4463a5ae46f179ff,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c
794816b61b744cfa6bf44319ba95a19123292e0e,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
"
cc149b2414c56d08bf8b9459fe389d413c602a59,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
fda333b5b515adacd9d70ccdbac1e676386f4097,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c
16c47cfc676958bf0907bef81849c94c1d0fa52f,"TST: Refactor some test_indexing doc strings
",numpy/core/tests/test_indexing.py
aef286debfd11a62f1c337dea55624cee7fd4d9e,"ENH: enable unaligned loads on x86

x86 can handle unaligned load and there is no hand vectorized code in
this file. It would be a serious compiler bug if it adds vectorization
without checking for alignment.
Enables fast complex128 copies which are unaligned on 32 bit gcc unless
compiled with -malign-double.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
c9bf9b0b1c8a85391695d4ded39921e98c63257d,"ENH: properly fix unaligned load of complex types

the workaround of setting the aligned to false unconditionally makes
copying strided complex data extremely slow as it will always do
unaligned elementwise memmoves.
Instead set the alignment requirement for complex types correct in the
dtype to begin with.

Note that on 32 bit gcc complex double will still be aligned to 8 bytes
unless compiled with -malign-double.

It is possible this will introduce new segfaults on architectures
without unaligned loads, but this now indicates a missing alignment
check in the affected code as the array description is correct.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c
3118f4fe593039cc5d523590824b4f6b2b2de5f6,"ENH: Optimize array creation by avoiding errors
"
04add8e0166f6aaf08cc0337ea770c9f2f093246,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
1a252e6a21098e42d289c2a14ae5bee7d58c1a18,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c
a1cce4df157f74ff2ce662072cf652e473942c3c,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c
4e0f159223dd7e97db754025fce6c9f12f3fdc93,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c
7ebdaf2f2738fb5ddb1d31ee5d2e87d2542da8e9,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
6bcba96de9cead06c13d5a97e7cfe195f6cc20e5,"ENH: vectorize base math with SSE2

Improves performance by ~1.5/3.0 for float/double for inplace or cpu
cached operations
",doc/release/1.8.0-notes.rst,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_scalarmath.py
eb6cf4beacbd79dd06573aee6ac33df3e27bd509,"ENH: Vectorize float min/max operation with sse2

Improves performance by ~1.5/3.0 for float/double.
",doc/release/1.8.0-notes.rst,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py
75cdf3d82e96e4fb605f3b0ea85961bbc24e70d8,"Merge pull request #3418 from cgohlke/patch-4

MAINT: use PyOS_snprintf instead of snprintf",numpy/linalg/lapack_lite/python_xerbla.c
f502acff4a5858d1d0454079add34f836789e86d,"MAINT: use PyOS_snprintf instead of snprintf

PyOS_snprintf is portable and more secure than snprintf.",numpy/linalg/lapack_lite/python_xerbla.c
0a015869a2a1f94106a184811a1a898b41dc4ef9,"BUG: Decref subspace when subspace is 0-d in fancy indexing

Not decrefing it causes a major memory leak. This adapts the
automated tests to cover this case as well and adds refcounting
to it. Replaces some 'skip' with 0s, but I believe the skip
tests are not that important. Added 1-d special case tests
using the same indices as the multi-dim test though.

Thanks to Julian Taylor for noting the bug.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
558cd20c29db0cd89c4d92fc354602650f861064,"Merge pull request #3243 from seberg/deprecate-non-integer-arguments-new

Deprecate non integer arguments",doc/release/1.8.0-notes.rst,numpy/core/defchararray.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/number.c,numpy/core/src/private/npy_pycompat.h,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/random/tests/test_regression.py
163f6df5a6668d06cb7abfe38dbd03d19b26d6f3,"MAINT: Disallow np.bool_ being used as integer

This makes the deprecation of bools used as integers complete
from the numpy perspective. It would not be unsensible to move
the bool checks into indexing specific code though.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_deprecations.py
e67269a5c14954e03d8afaa30a5fe4299f2fd062,"MAINT: Minor style fix and integer conversion optimizations
",numpy/core/src/multiarray/conversion_utils.c
a6a2c601c28687e8ff8b44f5319280b20a9c3f71,"STY: Style fixes for integer deprecation changes

Also minor changes in the documentation.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_deprecations.py,numpy/lib/shape_base.py,numpy/random/tests/test_regression.py
0e9dccd0b8375a487b435411eb58f00d5d4a8bdc,"MAINT: Use warnings context manager instead of doing it by hand
",numpy/core/tests/test_deprecations.py
187f128563da83b8f202264658dc4dfa80899e93,"DOC: Add integer deprecations to release notes

(also minor spelling fix in comments)
",doc/release/1.8.0-notes.rst,numpy/core/tests/test_deprecations.py
704b456e49b13150aa693f4fd7d66dca0d541f0b,"Merge pull request #3415 from charris/pull-2699-rebased

Pull 2699 rebased",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
18e7f40e97cae555f0446da99180525a8d259d81,"TST: expected behaviour of .copy()
",numpy/core/tests/test_multiarray.py
d661960b3489c83485a3aa83e909e2ee603e7422,"BUG: copy.(deep)copy should preserve F-contiguity

Currently, copy.deepcopy() on certain objects in scikit-learn results
in the copied object being broken, as underlying methods depend on
members being F-contiguous. I can think of no reason that F-contiguous
arrays should not remain F-contiguous through a copy.copy/copy.deepcopy,
therefore this alters the methods to use NPY_KEEPORDER when allocating
the copy.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
8dcf3979780819db9eb2fe912aa0275f7424d50e,"Merge pull request #3407 from mrjbq7/doc-fixes

DOC: fix comments in min and ptp.",numpy/ma/core.py
c113b0f63cb687bd642f8b5bf2cc1048df9832b0,"Merge pull request #3393 from seberg/clarify-integer-types

DOC: Clarify and add C-compatible integer types to list of dtypes",numpy/doc/basics.py
a2bac9db372bb1c1570bc3c1912e09cc832f3d52,"Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.
",doc/swig/test/SuperTensor.cxx,doc/swig/test/SuperTensor.h,doc/swig/test/SuperTensor.i,doc/swig/test/testSuperTensor.py
a21d8257e823d364f96dc2a6f57c42cac75dd826,"cleaned-up loop indexes in Tensor.cxx
",doc/swig/test/Tensor.cxx,doc/swig/test/Tensor.h,doc/swig/test/Tensor.i
3e471304393244eb02215d1601d2396b3f94eb8d,"Merge pull request #3411 from juliantaylor/vectorize-fabs

ENH: Vectorize float absolute operation with sse2",doc/release/1.8.0-notes.rst,numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src,numpy/core/tests/test_umath.py,numpy/testing/utils.py
938f586d6f61654dec8e9e3f14084e98d86f60e9,"cosmetic changes to numpy.i
",doc/swig/numpy.i
7720373b1984efabe5fbd7c3988b1994d5061712,"Merge branch 'numpy-swig' of https://github.com/zindy/numpy into numpy-swig
",doc/source/reference/swig.interface-file.rst,doc/source/reference/swig.testing.rst,doc/swig/Makefile,doc/swig/numpy.i,doc/swig/test/testFortran.py
0caf9d705e6cd2bb3b1231c68424e79e110166cb,Fixed the capsule / cobject memory destructor. Added types to deal with lists of arrays and lists of tensors as input and inplace types.,doc/swig/numpy.i
7fb8b714906a92516905cc0f03e45511bd1ac1ed,"DOC: document isnan/bswap and SSE2 improvements
",doc/release/1.8.0-notes.rst
63123538b7d4d948919dfb5366a78eaa972fcda9,"MAINT: move simd functions to new file simd.inc.src

SIMD functions are called via a minimal dispatcher function.
Minizes extra code in loops.c.src and hopefully transparently allows to
simply enable more complex (runtime) dispatching rules.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/simd.inc.src
23a27572994e1c731605c6a78a1564014c2a62c8,"Merge pull request #3414 from joonro/patch-1

A minor cleanup",doc/HOWTO_DOCUMENT.rst.txt
fe4c882be4009d866f632c53fcfb7c8891c0e835,"MAINT: remove duplicate vtype template
",numpy/core/src/umath/loops.c.src
0defe6d1813e93d6b8813b6c82d8151972c26778,"MAINT: use @vpre@ for simd sqrt intrinsic prefix

allows simple extension to AVX
",numpy/core/src/umath/loops.c.src
564aa53e343e81de6864f43cb5f89932fdc1c718,"MAINT: make the simd function signature more specific
",numpy/core/src/umath/loops.c.src
987dc32499e2bcfe160c61a5c5984e05552c7038,"MAINT: fix shape mismatch issue in alignment data generator
",numpy/testing/utils.py
9d5884b0acf935401f0f8e64912b98abc73f62c3,"ENH: Vectorize float absolute operation with sse2

fabs on x86 can be implemented by masking out the sign bit.
Obtaining such a bit pattern is best done by a bitwise not on the
negative zero.
This is the same operation the compiler will convert fabs to on amd64.

Improves performance by ~1.7/3.5 for float/double for cached data
and ~1.4/1.1 for non-cached data.

If one simplifies the loops gcc could also autovectorize it but with all
hints its almost the same code length and slightly worse assembly.

The code can easily be extended to support AVX by changing vpre and
vtype to 256.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
abad5e3a753a2d0f5bbd7bdf4e8769cf9a4ef02d,"MAINT: move vectorized sqrt to own static function
",numpy/core/src/umath/loops.c.src
7af95b0f779f587dfe56c44c5091731b122ceb1a,"A minor cleanup

- 4 indent instead of 2 for equation example
- Fixed Syntax::",doc/HOWTO_DOCUMENT.rst.txt
ac8fad529af6bee86cace5ea56490c0ab007b93d,"Merge pull request #3412 from juliantaylor/float128-i386

BUG: import longdouble instead of float128",numpy/linalg/linalg.py
21350b7e1b5d482288fa122aa40ae74d04f23551,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
",numpy/core/src/multiarray/common.c
6a2f9203c1c2a45be3c7b70f041744b2660e3230,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c
e46c593ecfc419bcbfb1b118e4bbed994681074a,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/multiarraymodule.c
b4dc03606abe92fc1fa07c85b5eeb295a0e9747c,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
",numpy/core/src/multiarray/common.c
e174510eb97f7f5fdcfd1f8932d41d7cf5a6fcc4,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
1beff0a1aba140ee8397347c110533256ac50709,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/ctors.c
2017b3d6984c3334af5fa950fa619ea50a99103c,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c
5bdd6431d2c5cd6f34f20923dd2c99d2d669a4b7,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
fc92221118b882c8efecce94d49da0ac126f8305,"BUG: import longdouble instead of float128

i386 does not have 16 byte long double by default (only 12 byte/float96)
so the import prevents numpy startup.
Introduced in 1.8.0dev 40000f508
",numpy/linalg/linalg.py
2a532bc0b1f397f6f21f09a63eaacba8f1795d14,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
"
a6650e592ba928cb9fef6ed0bc4aaf497890e1b3,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
4b9d2a60ebce6eba61e48deb5460969fae875d10,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
f0cd76006425f45341398e1f665ea41370a96d49,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c
3f96717f773c0f955029053b07264ef6222dabf3,"Merge branch 'enh_np_array0.1' of https://github.com/m-d-w/numpy into enh_np_array0.1
",numpy/core/tests/test_api.py
a49d6a0edfa8dd7b9c6f7df7c4c68dc32352e9fb,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
2ebf198dfa4ea33c787bfca05267af93e27f08ea,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.h
c9c20d438b223f9ed1a43a33bb3c602ce55debc9,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
7759766618a3d0db557d4483ebcc5b7a2d919c0a,"Update default dtype of filled function in doc string
",numpy/core/numeric.py
b4b20dc8b22e96717ac7c6388256fd1ed72d24b4,"Add filled and filled_like to changelog of 1.8.0
",doc/release/1.8.0-notes.rst
8b6ccd992e8d948438e2c39aaea8ccb156350445,"Rename fill value parameter for consistency across numpy+
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
91b1b99fa01d6c9991cc833f36beef87d3c0c595,"Add examples to doc string of filled and filled_like
",numpy/core/numeric.py
494fa219b050cb3b1564e78499c8306ea514aa35,"Add separate parameter description to filled, filled_like and ones
",numpy/core/numeric.py
8ed3733b895150751d719f5c9b491671615f4b46,"Fix Python 3 test cases for filled* functions
",numpy/core/tests/test_numeric.py
dbc35587f43bc3b72b63200cfc7712aedc3db11f,"Do not compare string or unicode values
",numpy/core/tests/test_numeric.py
781cb48ab247ff76d51a6e20603d7e763768276d,"Add doc string to creation test class
",numpy/core/tests/test_numeric.py
64d236c1a319d8bd3dc2742cd8e519aacab29df3,"Comment test cases
",numpy/core/tests/test_numeric.py
5991bbeb417719663178ecf4ac283d8f538f48fd,"Add tests for zeros, ones, empty and filled
",numpy/core/tests/test_numeric.py
5be86a8af14e30127bdd102c8c0647de9a934ea3,"Add filled_like to doc string of test class
",numpy/core/tests/test_numeric.py
587b09271f12e31f0c62cd91086781cb99250578,"Use more idiomatic way of None-check
",numpy/core/tests/test_numeric.py
a6772327279d39fb5e8637fb807451879d1cf828,"Use commin method to compare array values
",numpy/core/tests/test_numeric.py
474ec4858cd3b6a09cd8bec01c67759d95896cca,"Add tests for filled_like function
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
27f0781e545b892f9393bad35fec149ed0718864,"Fix doc string
",numpy/core/numeric.py
17c6214af9f2a6b62d425e4386d9be7ae4cf6265,"Replace nans, nans_like, infs, infs_like with filled functions
",numpy/core/numeric.py
25f9d8cb92d5624409f2f2640ac637aedd7ebb25,"Fix typo in doc string
",numpy/core/numeric.py
0fe4df2726d76b2093aa5d26f0ca839ef47c3770,"Add short note in doc string about dtype for non-numbers
",numpy/core/numeric.py
6c5ef3406baf4e91fb0adfce053d2368bc09566b,"Add more related functions
",numpy/core/numeric.py
87d884e83312a38cdce626a9fb026fa5fd740049,"Add nans, infs, nans_like, infs_like convenience functions
",numpy/core/numeric.py
5f5f4b136d3f3ba54a98d1f92f7ef39ba60d466d,"ENH: Optimize array creation by avoiding errors
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c
16c55bad4aa4c49116d963eee85550258c83b934,"TST: Add basic tests for np.array
",numpy/core/tests/test_api.py
424d84bf6b18be1279d0bb3efefc33e637aad79b,"DOC: fix comments in min and ptp.
",numpy/ma/core.py
b5fd4296a21a7d580774996207d822200b893524,"Merge pull request #3403 from juliantaylor/test-multi-dec

TST: fix some function name conflicts",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py
37723a58124e0013c6f80b28a452b8ce7eb921fa,"TST: fix some function name conflicts

enables a few extra tests
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py
41f6a89fe6a0201c3575446ed4140b52f51f64b2,"Merge pull request #3402 from argriffing/patch-3

typo",numpy/linalg/linalg.py
1d96fd3bba2f1554d4c2ca0f7b78ea898c8faecc,typo,numpy/linalg/linalg.py
d307ff623dc58cd7afd02e99805e409edd5ba179,"Merge pull request #3387 from WarrenWeckesser/norm-axis

ENH: linalg: Add an `axis` argument to linalg.norm",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
1d9607ac4a1fc7270ee0686b7e3f20b2ce709bf2,"MAINT: linalg: simplify the computation of the svd-based matrix norms, and tweak the norm function's docstring.
",numpy/linalg/linalg.py
7e92df5c483c4a466315be1df7ee077c956a32b0,"Merge pull request #3400 from WarrenWeckesser/test-blasdot-failure

TST: linalg: loosen the requirements of some tests in test_blasdot.py.  ...",numpy/core/tests/test_blasdot.py
c2e531b97f0b8bfc7ba4cdbb4c2313b26a6226a8,"Merge pull request #3401 from rgommers/remove-module-index

Remove module index from docs, add missing release notes.",doc/source/_templates/indexcontent.html,doc/source/conf.py,doc/source/release.rst
0155f8d0729eccbd72d79c1d49f82b1138a46ef1,"DOC: add missing release notes to the reference guide.
",doc/source/release.rst
ab2741aed23ae5241c047c7159fa7f636753d7f9,"DOC: remove module index from reference guide.

It was broken, and after fixing it looked quite useless.
Update in conf.py is because `html_use_modindex` is deprecated.
",doc/source/_templates/indexcontent.html,doc/source/conf.py
a32335e7026e3f04bcf627d3f6af57a9c78acf48,"TST: linalg: loosen the requirements of some tests in test_blasdot.py.  Addresses part of gh-3399.
",numpy/core/tests/test_blasdot.py
8a170dce60108b252005cc51e1c1f6568feb3dc9,"STY: linalg: some PEP8 clean up.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a2926149891027fff151d50933405a696384d47c,"ENH: linalg: allow the 'axis' argument of linalg.norm to be a 2-tuple, in which case matrix norms of the collection of 2-D matrices are computed.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
7ece0ddc6ddc1dc6d81b26af0f67ffb7c71bfd00,"DOC: Clarify and add C-compatible integer types to list of dtypes

Also mention np.intp, which at least personally I think is not an
unimportant type.
",numpy/doc/basics.py
e9e490a54a87cfdbc9618b8547a7ecc81a6e2fac,"DOC: add to HOWTO_RELEASE to check that the benchmark suite runs.
",doc/HOWTO_RELEASE.rst.txt
8ab4e1ac2ad80c11f1efc9fbfe0fa32d70e6a474,"Merge pull request #3394 from juliantaylor/incl-guard-fix

BUG: fix typo on npy_config.h include guard",numpy/core/include/numpy/npy_math.h,numpy/core/src/umath/loops.c.src
54c1471d25038a8e303e68ed71f0043c5786b28b,"BUG: fix typo on npy_config.h include guard

Was overlooked as loops.c.src where np.isnan lives includes it directly.
Now all isnan calls in numpy profit from the improvement.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/umath/loops.c.src
6eb57a767713a7a2b74e1cd3365c34638ec55eac,"DOC: linalg: Improve the docstring of the new norm function.
",numpy/linalg/linalg.py
3bdb6099e6090f433a85d363b8ee7b1de0233571,"MAINT: linalg: removed unused imports from linalg.py
",numpy/linalg/linalg.py
40000f508ab5f736b5a62c97a1e4bb72d55bf19c,"ENH: linalg: Add the `axis` keyword to linalg.norm.

Also fixed a bug that occurred with integer arrays and negative ord.  For example,
norm([1, 3], -1) returned 1.0, but the correct value is 0.75.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
3a340b0db0e5629543efabdfacd54abf9f4148e7,"MAINT: Create new function PyArray_IntpFromIndexSequence

This function uses npy_intp to in principle support larger then
int sequence lengths.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h
c51f2549e824f4e8bcee550d993fe6a1ced9cacb,"STY: style and small doc fixes for integer deprecations
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/number.c
399e55bd41081555e4fc93d567a478fc576cdd00,"TST: Rework test_deprecations.py and add new tests.
",numpy/core/tests/test_deprecations.py,numpy/core/tests/test_indexing.py
482142c42e186237525855464d141e2e5eef5808,"MAINT: Remove non-integer deprecations which are now in PyIntAsIntp

Also removed old (commented) macro, the use of PyNumber_Index is
now actually implemented in PyIntAsIntp and not necessary here.

Removes PyIndex_Check compatibility macros, since we do not support
python < 2.5 anymore.

Change integer conversion error to IndexError, previously these
fell through and eventually became an IndexError.
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/private/npy_pycompat.h
a727f424a5b402558a7b7cba978449a1b015a47e,"API: Deprecate __index__ for ndim > 0

For example NumPy indexing treats np.ones(()) very differently from
np.ones((1,)). It seems a bad idea to allow __index__ for arrays that
are not 0-d, as they cannot always be safely interpreted as integers.
",numpy/core/src/multiarray/number.c
8dfc25d0e1fcaed67b8c688cfd9f5ac0641fc5e7,"API: Deprecating the use of non-integers for indices arguments

This changes the conversion utils to give deprecations for a all
non-integers (this currently includes python bools). The biggest
change is PyArray_PyIntAsIntp in which the deprecation is done.
Some other conversions are then also pointed to it.

Uses the Index machinery even for numpy types, which is faster
then the current code.
",numpy/core/src/multiarray/conversion_utils.c
5c8d5c263b93700ae92aff38bb9a8d05c0a185e6,"MAINT: adept divisions for truedivide

Following deprecations would cause problems otherwise.
",numpy/core/defchararray.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/random/tests/test_regression.py
dff8c9497b06542712e9666b43ac80b2a30f1d47,"Merge pull request #3385 from juliantaylor/memleak-3384

BUG: fix memory leak and double execution in dot",numpy/core/src/multiarray/methods.c
ee2f7b4142779e105941a48727c282b3e6991c9e,"BUG: fix memory leak and double execution in dot

introduced in 1.8.0dev 914294a42a
closes gh-3384
",numpy/core/src/multiarray/methods.c
780d829effddc666c480f38eb3c5cc13a98db5a1,"Merge pull request #3383 from WarrenWeckesser/howto-doc-wording

DOC: fix a word in HOWTO_DOCUMENT.rst.txt.",doc/HOWTO_DOCUMENT.rst.txt
900edb366994766ab4c2ca743730ab949e1cb260,"DOC: fix a word in HOWTO_DOCUMENT.rst.txt.
",doc/HOWTO_DOCUMENT.rst.txt
9303985bbe08935420d6b39f60d6f81043e7a57f,"Merge pull request #3376 from juliantaylor/unaligned-access

Unaligned access",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/loops.c.src
0258a3e65ba9fea8892aaa9761bf7e37c999c8fd,"MAINT: use npy_is_aligned in a few more places
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_scalar.c
80befa1cbc96e15cffd98273557bc68bc6fb4860,"BUG: check alignment before loading the data

some cpus don't support loads that are not aligned to the elementsize.
regression introduced in 99cb95f7379a9.
",numpy/core/src/multiarray/ctors.c
f52cc7d30b3c0bcaf7bece88e57a88bcec799ce9,"MAINT: move byteswap macros to inlines in header

removes some duplication and allows older gcc that can't detect the
byteswap pattern to use the faster swapping instructions.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/loops.c.src
d3a7c893439c31ef287daf817dbd0cbe9c5ac16b,"BUG: Handle a version string from a custom-built mingw64.

The custom build compiler ""GNU Fortran (rubenvb-4.8.0) 4.8.0"" was
incorrectly parsed as version '-4.8.0' and the flag ""-mno-cygwin"" was
added to the compilation.

See http://cens.ioc.ee/pipermail/f2py-users/2010-October/002092.html.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/tests/test_fcompiler_gnu.py
e50475a64050bdea104d39ad2c487e847fe4b031,"BUG: The npv function in financial.py was incorrectly implemented.

Correct the implementation of the npv function, its documentation, and
the mirr function that depends on it. The test_financial.py is also
corrected to take into account those modifications

The npv function behavior was contrary to what the documentation stated
as it summed indexes 1 to M instead of 0 to M-1. The mirr function used
a corrective factor to get the correct result in spite of that error so
that factor is removed.

Closes #649
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
1f11f22ad71da9cb95b541be01fbfb4eed6d3d5b,"Merge pull request #3358 from leonnnn/matrix-typeerror

ENH: Fix SyntaxError when matrix() is called with invalid string",numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py
fc4ade26312bd66474834aa0bee42265e7e15353,"ENH: Fix SyntaxError when matrix() is called with invalid string

The numpy.matrix constructor uses eval(str.translate(table)) to convert
input strings to numeric matrix contents. str.translate(table) will
return empty string if str consists only of invalid characters, causing
SyntaxError in eval(). This is confusing, as one would expect an
exception like TypeError when trying to construct a matrix from invalid
input.

This fix makes sure eval() is only called if str is not empty and
TypeError is raised otherwise.
",numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py
aa1cfce920ecef6b7c8a4a70dbd3c04c4037dceb,"Merge pull request #3371 from juliantaylor/mmap-slice-improve

Mmap slice improve",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/tests/test_shape_base.py,numpy/lib/utils.py
15c2d0ddb6bb96ba89da96e8373059804d33118d,"Merge pull request #3378 from juliantaylor/sdist-mtrand-gen

BUG: include mtrand cython files in sdist",MANIFEST.in
db3b0819989399566e0f67e6858fe6f8fc3998c2,"BUG: include mtrand cython files in sdist

the files are required to do a full source rebuild.
",MANIFEST.in
5448d7fbdc4111c80763ae519c7007982b1a6830,"MAINT: remove duplicated array extent calculation
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/common.c
19e05629b42ec73b48237c186c2475b7c80fa5cc,"ENH: improve performance of byte_bounds for continous arrays
",numpy/lib/utils.py
fae8369fba4a683783280b044915b11bbca07a44,"ENH: implement may_share_memory in C

memmap needs to call it in __array_finalize__ to determine if it can
drop the references on copies.
The python version if may_share_memory caused significant slowdowns when
slicing these maps.

closes gh-3364
",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/tests/test_shape_base.py,numpy/lib/utils.py
91ba6d616b528a60e6bdcc4c922b29f8173406aa,"Merge pull request #3373 from cgohlke/multivariate_normal-fix

multivariate_normal issue with 'size' argument",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
420f6099085f6742a4b49e4130559dabfdf6276a,"TST: remove docstrings from test_ functions

See doc/TESTS.rst.txt for the reason.
",numpy/random/tests/test_regression.py
cec1d415840c5d028677ba705a2e0375dae75fc4,"BUG: Fix multivariate_normal issue with 'size' argument

Ensure that the multivariate_normal size argument can be a numpy integer. Add regression test. Apply PEP8 to test_regression.py. Regenerate mtrand.c.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
b98eefccbf0b6f60414f87ce135e9bbd2bea5a3a,"Merge pull request #3366 from dnmiller/doc-fix

DOC: Correcting docstring for asscalar",numpy/lib/type_check.py
6bc59a0399aede915de750c2521eaaf32077d0b2,"Merge pull request #3374 from cgohlke/patch-4

TST: rename 2nd test_hypergeometric_range function",numpy/random/tests/test_regression.py
96bb03637780fa631fe49d9f48d4cc5bef42ca62,"TST: remove docstring from test_randint_range function

See doc/TESTS.rst.txt for the reason.",numpy/random/tests/test_regression.py
14f83a6f87f00e669d645af6e74a565d449041ce,"Merge pull request #3372 from juliantaylor/datetime-leak

BUG: fix leak and possible use after free",numpy/core/src/multiarray/arraytypes.c.src
6f8b7c07f763d0c90f0d68a0d16eec738cf30c22,"TST: rename one test_hypergeometric_range function

There are two test functions named `test_hypergeometric_range`",numpy/random/tests/test_regression.py
4eff7cb77c9af86442780ab4829ef95d9649ecdb,"BUG: fix leak and possible null dereference
",numpy/core/src/multiarray/arraytypes.c.src
00b2d78cbd025bfc4d1deadfcc244c6c00447350,"Merge pull request #3365 from juliantaylor/memmap-int-name

BUG: set filename to None for memmaps of unnamed files",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
747520869f24372304a7ceacc27d9834c0e47827,"DOC: Correcting docstring for asscalar
",numpy/lib/type_check.py
5f1e731fa5a2d3bca239662c27288b0b8b3588e7,"BUG: set filename to None for memmaps of unnamed files

Closes gh-3302
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
31a550189371ed21f8d38edae02f71f18a729741,"Merge pull request #3341 from juliantaylor/sse2-sqrt

vectorize sqrt ufunc with SSE2",numpy/core/code_generators/generate_umath.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_umath.py,numpy/testing/utils.py
fe69102dd34619ce18cf074ef0e6e46611bc17e7,"MAINT: use sse header macros for einsum sse activation
",numpy/core/setup_common.py,numpy/core/src/multiarray/einsum.c.src
0adccaaa910ab495e993f453956fd983775604f3,"ENH: vectorize sqrt ufunc using SSE2

specialize the sqrt ufunc for float and double and vectorize it using
SSE2.

improves performance by 4/2 for float/double if one is not memory bound
due to non-cached data.
performance is always better on all tested machines (amd phenom X2,
intel xeon 5xxx/7xxx, core2duo, corei7)

This version will not set errno on invalid input, but numpy only checks
the fpu flags so the behavior is the same.

In principle the compiler could autovectorize it when setting ffast-math
(for no errno) and specializing the loop for the vectorizable strides
and giving it some hints (restrict, __builtin_assume_aligned, etc.),
but its simpler and more reliable to simply vectorize it by hand.
",numpy/core/code_generators/generate_umath.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_umath.py,numpy/testing/utils.py
a02457f1d76dc6727f2118f2d129ce3a5261c253,"Merge pull request #3362 from juliantaylor/compiler-warnings

MAINT: fix some compiler warnings",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/linalg/umath_linalg.c.src
cf574923b764e477a6b748c3620c99c9fadf44e9,"MAINT: fix some compiler warnings

implicit declarations, wrong declarations, unused variables and fixes a
comparison typo bug in multiarraymodule.c
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/linalg/umath_linalg.c.src
e11cd9b028051659a852b7e8daa150f082d42c5a,"Merge pull request #3361 from dnmiller/master

DOC: Fix URL in documentation guide.",doc/HOWTO_DOCUMENT.rst.txt
4209975c74698a1479bf6fa4105ebeb4f9c178e0,"DOC: Fix URL for ""How to Build API/Reference Documentation""",doc/HOWTO_DOCUMENT.rst.txt
56a878c5366197e5311d9485b7ce4992dbbcfbda,"Merge pull request #3324 from nouiz/prio_cmp

Make comparison function (gt, ge, ...) respect __array_priority__.",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_multiarray.py
8ff5e37bff03925da4c1b121b38188f9fd779b4d,"Merge pull request #3356 from cpelley/f2py_script

f2py executable script shebang",numpy/f2py/setup.py
e6a1ab9cf306ca34d43b9e196f2573edb0a6c416,"BUG: f2py script shebang may refer to wrong python

The f2py executable has a shebang which uses the default python, rather
than the python it was compiled for.  This causes issues for deployment
of numpy (+f2py) across systems which have different environments.

This fix uses sys.executable to determine the resulting hardcoded
python to use.
",numpy/f2py/setup.py
c098283224215d656ce259ab7b852a9bf27523e7,"code clean up. Remove code that was never executed.

@seberg saw this.
",numpy/core/src/multiarray/arrayobject.c
daf4b40e3f2c53f5487d8721e28f5a9339d45573,"Merge pull request #3349 from njsmith/remove-tools-osxbuild

MAINT: Remove tools/osxbuild",tools/osxbuild/README.txt,tools/osxbuild/build.py,tools/osxbuild/docs/README.txt,tools/osxbuild/install_and_test.py
339e90176f06e0a8d6e677f461a490de63001771,"Merge pull request #3344 from cgohlke/patch-1

Remove the msvc_on_amd64 function",numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
9f02103ac229d5831b07c75eb1a3f36fedc416c8,"Merge pull request #3350 from njsmith/tweak-README

DOC: Remove confusing comment about warnings from top-level README.",README.txt
af306bf39e82e535fdb8982bab86c8a2600b8487,"MAINT: Remove tools/osxbuild

These scripts have been broken for years (build.py errors out
immediately if not running from an *svn* checkout), so I'm sure
no-one's using them, and they only attract pointless maintenance fixes
(py3 changes, keeping the pointless extra copy of the top-level
README.txt up to date as in #3288). Let's just remove them.
",tools/osxbuild/README.txt,tools/osxbuild/build.py,tools/osxbuild/docs/README.txt,tools/osxbuild/install_and_test.py
414983e3cb687804b3a96a4c107e350ed47360f9,"DOC: Remove confusing comment about warnings from top-level README.
",README.txt
dea0fe58708b548925778ec30fdc6e7a4cb5bbf4,"MAINT: Remove msvc_on_amd64 function

This function is no longer required for building with msvc on AMD64
",numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
074d3037cf4cb23e8ee825fc06ea1209daf53d1a,"Merge pull request #3342 from rgommers/easyinstall-issue

BLD: fix setuptools-specific easy_install issue.  Closes gh-3160.",numpy/distutils/system_info.py
de166d31c083bbb2c288ada15900f98a4245d596,"Merge pull request #3339 from endolith/min_max_docstrings

DOC: Min max docstrings",doc/source/reference/routines.math.rst,doc/source/reference/ufuncs.rst,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/lib/function_base.py
0a079b01f29919a66d4ea89767663bd875c6c1cc,"DOC: add fmax/fmin to ufuncs list and math routines list
",doc/source/reference/routines.math.rst,doc/source/reference/ufuncs.rst
eec5e489778764bb80bcb900ae88e8abc7db1ff3,"BLD: fix setuptools-specific easy_install issue.  Closes gh-3160.

An error is raised by setuptools when trying to write to /dev/null.  Was fixed
in distribute, but not in setuptools.

No multi-arch support with plain setuptools should be OK, because multi-arch is
Ubuntu specific (at least for now), and they ship distribute.
",numpy/distutils/system_info.py
7d188bf1c9ac5bf7ee41e0794d59771802b345bf,"Merge pull request #3329 from JDWarner/faster_arraypad

ENH: improved, faster algorithm for array padding",doc/release/1.8.0-notes.rst,numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
246c06d2475718ec36ba193494444464e497c69a,"ENH: improved, faster algorithm for array padding

New padding method which scales much better with dimensionality.
This new implementation is fully vectorized, builds each abstracted
n-dimensional padding block in a single step, and takes advantage
of separability. The API is completely preserved, and the old
algorithm is used if a vector function is input for `mode`.

The new algorithm is faster for all tested combinations of inputs,
and scales much better with dimensionality. Execution time reductions
from ~25% for small rank 1 arrays to >99% for rank 4+ arrays observed.
",doc/release/1.8.0-notes.rst,numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
5b28d185a494e9967bfe2db9ade040a06a078c2a,"Merge pull request #3340 from rgommers/distutils-doc

DOC: update numpy.distutils documentation, remove info.py details.",doc/DISTUTILS.rst.txt
79904acbe6b2d0298e69d8d3e548a83836a7cbdc,"DOC: update numpy.distutils documentation, remove info.py details.

Addresses https://github.com/scipy/scipy/issues/2492
",doc/DISTUTILS.rst.txt
87801b98ff8317c05197e945416982ef712ff3e5,"updated the comment.
",numpy/core/src/multiarray/arrayobject.c
1aca67fcc689b66737b39862e517e821be0c4767,"use assert function instead of python keyword
",numpy/core/tests/test_multiarray.py
029060d84e1a329d0221d861f47ded9edee28633,"Merge pull request #3337 from seberg/issue-3336

BUG: Correctly pass on ddof paramter on inside np.ma.corrcoef",numpy/ma/extras.py,numpy/ma/tests/test_regression.py
4c291f361fdc8c756e6b1cd7ff7ce2c2ddfc5ed9,"BUG: Correctly pass on ddof paramter on inside np.ma.corrcoef

While ddof has basically no effect on corrcoef, it exists,
but it was not passed on correctly (instead only bias would
be passed on). Fixes gh-3336
",numpy/ma/extras.py,numpy/ma/tests/test_regression.py
ae30efd25e6797c4d97775c6ca40b47bc54a3df3,"Merge pull request #3309 from juliantaylor/optimize-byteswap

ENH: optimize byteswapping via intrinsics",numpy/core/setup_common.py,numpy/core/src/multiarray/ctors.c
f40e9d53548a5033d1fd2c68c8257dddea14e9f1,"DOC: Harmonize max and min docstrings with each other
",numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/lib/function_base.py
bb6eb76de99447dd413d330181ca6fda188fcb04,"DOC: Mention all min/max functions from all others, clarify differences
",numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/lib/function_base.py
1c0a8fbc804594d7db0a452d9dfb491b06250105,"Move computation inside an if to speed it up.
",numpy/core/src/multiarray/arrayobject.c
61977a3a65d61af8ccdef5986c7751c5073c344b,"remove comparison not needed as this is check above and we break in that case.
",numpy/core/src/multiarray/arrayobject.c
fa3919ca825d15ef98cc0afdfecb1ced1c74c3af,"fix comment style.
",numpy/core/src/multiarray/arrayobject.c
90ea64b027a4868c47f169b4dd88c239e720bc25,"reorder code to remove not needed computation in some cases.
",numpy/core/src/multiarray/arrayobject.c
1d3fa042225ac18f505bd2e37b47b3ed0af3a67a,"Add test for the array_priority for comparison function.
",numpy/core/tests/test_multiarray.py
595022111ab025cc74a6238241097874a54f1795,"Commit from @seberg to make comparison use respect __array_priority__
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/umath/ufunc_object.c
99cb95f7379a95f978fd04d183fde2d262b262a6,"ENH: optimize byteswapping via intrinsics

Byteswapping is implemented in hardware on x86 cpus which is more than
double as fast than the existing implementation.
The masked version used for 32bit plays better with compiler pattern
matching so it can be optimized also by non-gcc/clang compilers.
",numpy/core/setup_common.py,numpy/core/src/multiarray/ctors.c
3a09d96c9e95f56c1ce31d328a93c9dc4e2bc909,"Revert ""Make comparison function (gt, ge, ...) respect __array_priority__.""

This reverts commit aa7a04741146c44ab1735782a89a60b038028bf2.
",numpy/core/src/multiarray/arrayobject.c
0337cf2f8cf555912dd39a2767a0f7f9e6398257,"Merge pull request #3308 from juliantaylor/optimize-isnan

ENH: use intrinsics for isnan, isfinite and isinf",numpy/core/include/numpy/npy_math.h,numpy/core/setup.py,numpy/core/setup_common.py,numpy/distutils/misc_util.py
c546a22219a26dd045281dc1e2708c62d949f33e,"Merge pull request #462 from ContinuumIO/ufunc-struct

Create ufunc for struct array",doc/source/reference/c-api.ufunc.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/umath/struct_ufunc_test.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_ufunc.py
d85f7aa465cf854e2be83f67f39f058660348487,"Another name change to RegisterLoopForDescr
",doc/source/reference/c-api.ufunc.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/umath/struct_ufunc_test.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_object.c
418c75e67cae97215e0614bfbd507a7a64ad21cb,"Merge pull request #3335 from ContinuumIO/outer_steps_fix

Fix segfault on OS X 64 bit",numpy/linalg/umath_linalg.c.src
1987caeb28c8a1eb0ba422117d47f54c4c11c550,"Code cleanup
",numpy/core/src/umath/test_rational.c.src
28f72e2fdc1bfacb924c83b9e7425e6d40cae6c6,"Add test for RegisterLoopByDescr and custom dtypes
",numpy/core/src/umath/test_rational.c.src,numpy/core/tests/test_ufunc.py
c2f30f9eca1a513601b27d2ae2a9c85d3ad15860,"Change name of RegisterLoopForStructType to RegisterLoopByDescr
",doc/source/reference/c-api.ufunc.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/umath/struct_ufunc_test.c.src,numpy/core/src/umath/ufunc_object.c
84fa1845878c070f190f15e37507bb7575c39d06,"Add null check
",numpy/core/src/umath/ufunc_object.c
59048190120cbced237453ace109d876d0814cee,"Remove unneeded code
",numpy/core/src/umath/struct_ufunc_test.c.src
b9f5e8faf8bf7ba9030511e77b0e65581505d620,"Whitespace change
",numpy/core/src/umath/ufunc_type_resolution.c
d812c0ded39aca8bdf60d499a9cea1a3bb7a2c6b,"Change free to PyArray_free, and formatting changes
",numpy/core/src/umath/ufunc_object.c
0e4e9300d629c41d2e3a797f381180db11abb141,"Update c-api documentation
",doc/source/reference/c-api.ufunc.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/src/umath/struct_ufunc_test.c.src
1a75f77863ca3db6dc3cdf1893e13747dd8532fd,"Add support for python 3
",numpy/core/src/umath/struct_ufunc_test.c.src
70e8f83248351278ba43e1018f46b9fa0ce371ea,"Add test for struct array ufuncs
",numpy/core/setup.py,numpy/core/src/umath/struct_ufunc_test.c.src,numpy/core/tests/test_ufunc.py
88df73b6f13300a09941fec63ba533aeb7cea2d6,"Code cleanup
",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
a3e22141622da249708c54984212c0766c330c4a,"Fix build error
",numpy/core/src/umath/ufunc_object.c
8e642e6d69a448ed80e117644abdfde9ef2ed25b,"Add comments for new RegisterLoopForStructType API method
",numpy/core/src/umath/ufunc_object.c
10efdbb0aca50a96f53ccabc682f23f4d4b75af9,"Add support for structured array ufuncs

- Add New api method PyUFunc_RegisterLoopForStructType for creating new ufunc for structured array
- Add arg_dtypes array to PyUFunc_Loop1d object. This keeps track of each struct dtype that the ufunc can handle.
- Add arg_dtypes parameter to ufunc_loop_matches function so that struct dtypes can be compared for NPY_VOID type num
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
e71e08ce192bbbd0d760d785b6df5cd5917ac1da,"Fix segfault

outer_steps array should be size 4 since op_count can be either 2 or 4
",numpy/linalg/umath_linalg.c.src
3084618057da0120297cefd1b7c325295b295284,"Merge pull request #3333 from mwiebe/win32_compile

BLD: Fixes for building on win32 with MSVC 2008",numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_type_resolution.c,numpy/linalg/umath_linalg.c.src
f7dd423fc8ad570813e0db859706899945b4dad9,"BLD: Fixes for building on win32 with MSVC 2008
",numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_type_resolution.c,numpy/linalg/umath_linalg.c.src
458b0999e34a83febd3e39c0d53ef39fe1d6dc5c,"Merge pull request #3322 from ContinuumIO/array_equal_fix

Fix array_equal and array_equiv issue",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
92503a5cb8bf52321043294b3b8b8811dd1eaee8,"Make sure comparison result is array
",numpy/core/numeric.py
44a796154a4d349768c6e2244b39e8a69d2d1680,"Merge pull request #3330 from pv/fix-xerbla-test

TST: linalg: make sure that running the xerbla test is safe",numpy/linalg/tests/test_linalg.py
a8dacf0071e039d9c24a3727ca1e978931b3621e,"TST: linalg: make sure that running the xerbla test is safe
",numpy/linalg/tests/test_linalg.py
85d8ba51998cad4860cd893c73c13c65f39bb6c4,"Merge pull request #3327 from pv/tox-fix

MAINT: remove unsupported Python versions from tox.ini",tox.ini
273225cbf57fac6fae98815b8c760620fc6d18bc,"Merge pull request #3328 from pv/runtests

ENH: Add a runtests.py script for running the test suite",doc/release/1.8.0-notes.rst,runtests.py
7f8aefc318d8625fa1492d9963512543538a7520,"MAINT: update tox.ini

Remove unsupported Python versions, flip the NPY_SEPARATE_COMPILATION
flags, and add NPY_RELAXED_STRIDES, mirroring the travis configuration.
",tox.ini
19102b01325ce8a9eb51179b7600aa75e6dbe304,"DOC: mention runtests.py in release notes
",doc/release/1.8.0-notes.rst
4a1736a79f35be43deb50ac678504b2342e6b9f8,"Merge pull request #2701 from seberg/indexing

Fancy Indexing enhancements and bug fixes",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.indexing.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_indexing.py
21feedd29f6b4ed143ba7b41ef6ec3025a9c1fe4,"ENH: Add a runtests.py script for running the test suite

The script builds Numpy and runs the test suite of the built version.
This is useful for development.
",runtests.py
c6fc9a2d916797f1867d5ed49964be25e026736d,"Merge pull request #3316 from seberg/issue-3314

BUG: Fix 0-d array special case from reductions.",numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
f39df4844617f573adce33def5785f535274707a,"Merge pull request #3325 from seberg/remove-gh-356-special-case

MAINT: Remove unnecessary 0-d special case.",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
6c8c22e41e3129c2e35e78fe6d6d73436fda8d65,"Merge pull request #3323 from ContinuumIO/broadcast_arrays_fix

Broadcast arrays fix",numpy/core/tests/test_api.py,numpy/lib/stride_tricks.py
2a2f91f3b9f28abfb5c065502fbdfffa5afbdd9f,"MAINT: Remove unnecessary 0-d special case.

This special case was made unnecessary by changes to the nditer.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
aa7a04741146c44ab1735782a89a60b038028bf2,"Make comparison function (gt, ge, ...) respect __array_priority__.
",numpy/core/src/multiarray/arrayobject.c
aac0e1b3556c3dabf69a9750d4470993ad7a6a98,"Merge pull request #359 from jayvius/operand-flags

Allow ufunc operand flags to be set",doc/release/1.8.0-notes.rst,doc/source/reference/c-api.types-and-structures.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c,numpy/core/tests/test_ufunc.py
6dc709a5aa0b17b5a74b7456d7cbd2580d9063f6,"Fix array_equal and array_equiv issue

array_equal() and array_equiv() don't work for string arrays and record arrays. This is because those methods use numpy.equals ufunc for comparison, and there are no equal ufuncs registered for strings and record arrays. Replace numpy.equals with '==' array operation, which handles strings and record arrays.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
d6cef9f122681d80f2e8ddd61685a35490f653ea,"Add test
",numpy/core/tests/test_api.py
4d8e317919cf4a0fce7403848e2f12535e65b49d,"Fix issue with broadcast_arrays() and user defined dtypes

broadcast_arrays() does not handle struct and custom dtypes correctly. Dtype of returned broadcasted arrays is always '|V8'. Fix broadcast_arrays() so that dtype of returned arrays is correct dtype for user defined dtypes.
",numpy/lib/stride_tricks.py
ec23d01d9c333f95db5d9349354766b38d37cae7,"Remove unneeded blank line
",numpy/core/src/umath/ufunc_object.c
c1bbf8fec2b03e85e2e51da17fc3badee98e0c3e,"Add null check after allocating op_flags
",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c
876aec114caeeda4c5558e32c7944f60851f1885,"Whitespace changes
",numpy/core/src/umath/ufunc_object.c
6b892cf994889518a948987be8c57353d4250dad,"Merge pull request #3318 from pv/test-exe

BUG: testing: always enable --exe",numpy/testing/nosetester.py
cdea31e67e389c960bdd5414b2de43a84cdfe04c,"BUG: testing: always enable --exe

Setuptools tends to set +x to the installed test scripts, which makes
numpy.test() to not run any tests. Having --exe always enabled is not
problematic because only files matching 'test_*.py' are looked into.
",numpy/testing/nosetester.py
ecdad497085880e18026e88d3f06c5a0feab2f39,"MAINT: document why OPTIONAL_INTRINSICS needs arguments
",numpy/core/setup_common.py
3e2069003cd671cd5c4798d28a63c23b1dd7137e,"MAINT: document intrinsic macro guards
",numpy/core/include/numpy/npy_math.h
509bc25b4f71f9ffaf259b08b259d0e8aef2129a,"MAINT: mask npy_config.h include with HAVE_NPY_CONFIG_H
",numpy/core/include/numpy/npy_math.h,numpy/core/setup.py
b114d1e0326937e5d04907ea0f666429580dc806,"ENH: add possibility to add define_macros to extensions
",numpy/distutils/misc_util.py
b76df8583ef966d434c9b87fd22422c68e6bd44e,"Merge pull request #3313 from ecatmur/master

BUG: fix potentially infinite recursion in VOID_nonzero. Fixes #3312.",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_regression.py
c018cd8570cab003f81e5b15dc0d6fce6dd7925e,"BUG: Fix 0-d array special case from reductions.

This channels scalars through the usual reduction machinery and
modifies it slightly to correctly support scalar reductions of
identity-less ufuncs.
",numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
b0ef6aebcbedc2ea528c5f8d09f31f37320b08a2,"MAINT: check for intrinsics at configure time
",numpy/core/include/numpy/npy_math.h,numpy/core/setup.py,numpy/core/setup_common.py
09b25ceb655552910e549c2fd73ccce05271f588,"TST: add a test for issue #3312
",numpy/core/tests/test_regression.py
72ffc68a7a283ac27fe7bb579738894b12744f2a,"BUG: fix potentially infinite recursion in VOID_nonzero. Fixes #3312.
",numpy/core/src/multiarray/arraytypes.c.src
0af5f87b0b5c25ce0d71dca8686414fa47708106,"Merge pull request #3310 from JDWarner/cleanup_arraypad

Cleanup arraypad.py (PEP8, PEP257) and correct docstrings",numpy/lib/arraypad.py
f9c95555c23cf5429a795ef73f8fb2b3941d434c,"MAINT: Remove unnecessary and wrong check for mapiterswap

With the slight modification of the MapIter API to allow newaxis
in fancy indexes, the MapIterObject consec field is already the
axis to transpose to, and with a leading newaxis, even if
iteraxes[0] is 0, consec may not be 0.
",numpy/core/src/multiarray/multiarray_tests.c.src
fcd9ef96455b433f07d85aca55e37aa95d17e74f,"STY: pep8 and pep257 audit.

Audit numpy/lib/arraypad.py for pep8 and pep257 compliance.
Also fix a few minor docstring corrections converting ] into ) or
vice versa.
",numpy/lib/arraypad.py
4b4dc5f4754f85becb73b0d621739a801a27210d,"Fix formatting issues
",numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/umath/ufunc_object.c
2ac16285e630acab83be645e2990805f27fe9e16,"Fix python 2/3 issues in operand_flag_tests module
",numpy/core/src/umath/operand_flag_tests.c.src
086ac27bbb7045448485a492244a5c5e11392948,"Add test for setting operand flags through c api
",numpy/core/setup.py,numpy/core/src/umath/operand_flag_tests.c.src,numpy/core/tests/test_ufunc.py
1a285423e1a4d48cab7e66266d22a5c65e8fe66e,"Update c api documentation
",doc/release/1.8.0-notes.rst,doc/source/reference/c-api.types-and-structures.rst
fdb42c4f9b27c6cfe5b071bd89eae97c0053297f,"Remove guard against read+write output operands
",numpy/core/src/umath/ufunc_object.c
486a5377e776fdb811103ff956a156a409ffd1ec,"correctly initialize op_flags and iter_flags in frompyfunc()
",numpy/core/src/umath/umathmodule.c
5792393e441a20075a11a1bd5efa4c1ba1aaf620,"initialize ufunc op_flags pointer in frompyfunc()
",numpy/core/src/umath/umathmodule.c
457ece1a3a019791d4c74001aa1965475f674586,"minor fixes for previous ufunc operand flag change
",numpy/core/src/umath/ufunc_object.c
c5a406fc3e135002c73bba1a69c3a566664e7b66,"This change allows ufunc operand flags to be set in addition to the
default operand flags set by the nditer object. For example, after
calling PyUFunc_FromFuncAndData() to create a ufunc object, the first
operand can be set to be read/write like so:

ufunc->op_flags[0] = NPY_ITER_READWRITE

Setting flags for output operands is not supported at this time and
will raise an exception.

This change also allows the global nditer flags to be set, so after
setting the read/write flag, the reduce ok flag could be set like so:

ufunc->iter_flags = NPY_ITER_REDUCE_OK
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c
c8228126ac0a00e058fb5a2c6106184b03d3fbb0,"ENH: use intrinsics for isnan, isfinite and isinf

Use of intrinsics avoids expensive function calls in tight loops on x86
cpus where these operations are implemented in hardware while still
retaining same portability.
More than doubles performance of np.isnan/isinf/isfinite.
",numpy/core/include/numpy/npy_math.h
7d76c744007afa6bb3af3b9d9fb64a65201e3635,"Merge pull request #3182 from juliantaylor/debug-ext

get_shared_lib_extension(): strip debug extension from so ext",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py
dcf7cac3fcaec17f9360f5f32751cd5ca7a61e30,"Merge pull request #3264 from endolith/patch-1

DOC: Change example to demonstrate function",numpy/lib/shape_base.py
4c6cfab6c056e641bb0bfc8a31feca2eb7229eb2,"Merge pull request #3289 from rkern/fix-numpy.org-links

BUG: Fix some README links to point to www.numpy.org",README.txt,tools/osxbuild/docs/README.txt
94f3b3082ced1ebfe1cd15e95265629f4ab60e8b,"Merge pull request #3307 from rgommers/fix-bento-build

BLD: fix Bento build after umath_linalg move from core to linalg module.",bscript,numpy/core/bscript,numpy/linalg/bento.info,numpy/linalg/bscript
3d431abd7f92efca208d92d597d5c8393ecc388d,"BLD: fix Bento build after umath_linalg move from core to linalg module.
",bscript,numpy/core/bscript,numpy/linalg/bento.info,numpy/linalg/bscript
004ce2780fc8527baff4ee220028626cd6eda6fe,"Merge pull request #3303 from ContinuumIO/rational_fix

Fix clang build issue",numpy/core/src/umath/test_rational.c.src
caa66a7279fdeb7aa34ca58868e66baeb14a5c0b,"Fix potential reference leak
",numpy/core/src/umath/test_rational.c.src
0a4c8ad3d62d1425b0f96cffc21c538415ca1633,"Merge pull request #3305 from arinkverma/master

MAINT: Remove unneeded version check from multiarray/common.c.",numpy/core/src/multiarray/common.c
7d8069760ba0638b5330827fede66af2fc72750b,"MAINT: Remove unneeded version check from multiarray/common.c.

A version check for Python >= 2.6 is no longer needed as versions < 2.6
are no longer supported.
",numpy/core/src/multiarray/common.c
b1ca509b838ef79783a5a26c567adad58fddd7fa,"Refactor previous commit
",numpy/core/src/umath/test_rational.c.src
f2072a1df47ca3c9964935e3bac0f46e78ddaa86,"Do not return anything for python 2
",numpy/core/src/umath/test_rational.c.src
f817e761bad00895d9fe96fb1514bbf71d9fde57,"Merge pull request #3301 from charris/fix-test_rational

BUG: gh-3300, Fix missing return value in test_rational.c.src.",numpy/core/src/umath/test_rational.c.src
88a9b6d26a83613b1d65539aabce62722ec4e617,"BUG: gh-3300, Fix missing return value in test_rational.c.src.

Some error returns were returning nothing rather than NULL.

Closes #3300.
",numpy/core/src/umath/test_rational.c.src
086721ce8d760feb633ff457a75982fd887fe440,"Merge pull request #3261 from keflavich/f77_ext_bugfix

bugfix in build_ext: check that ext has an attribute before trying to us it",numpy/distutils/command/build_ext.py
962f4298fcba3575335831c5b07abefd4eea4859,"Merge pull request #3281 from charris/2to3-apply-idioms-fixer

MAINT: Apply 2to3 idioms fixer.",numpy/core/code_generators/generate_umath.py,numpy/core/fromnumeric.py,numpy/core/records.py,numpy/core/tests/test_api.py,numpy/core/tests/test_numeric.py,numpy/ctypeslib.py,numpy/distutils/ccompiler.py,numpy/distutils/conv_template.py,numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/from_template.py,numpy/doc/__init__.py,numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/rules.py,numpy/lib/arrayterator.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/type_check.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/make_lite.py,numpy/ma/extras.py,numpy/numarray/alter_code1.py,numpy/numarray/functions.py,numpy/numarray/session.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/fix_default_axis.py,tools/c_coverage/c_coverage_report.py
dec4f4b76ae9b2b953bcc093275aa59f93adf6fd,"MAINT: Apply 2to3 idioms fixer.

The idioms fixer makes the following replacements.

1) int <- bool
2) comparison or identity of types <- isinstance
3) a.sort() <- sorted(a)

There were two problems that needed to be dealt with after the
application of the fixer. First, the replacement of comparison or
identity of types by isinstance was not always correct.  The isinstance
function returns true for subtypes whereas many of the places where the
fixer made a substitution needed to check for exact type equality.
Second, the sorted function was applied to arrays, but because it treats
them as iterators and constructs a sorted list from the result, that is
the wrong thing to do.

Closes #3062.
",numpy/core/code_generators/generate_umath.py,numpy/core/fromnumeric.py,numpy/core/records.py,numpy/core/tests/test_api.py,numpy/core/tests/test_numeric.py,numpy/ctypeslib.py,numpy/distutils/ccompiler.py,numpy/distutils/conv_template.py,numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/from_template.py,numpy/doc/__init__.py,numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/rules.py,numpy/lib/arrayterator.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/type_check.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/make_lite.py,numpy/ma/extras.py,numpy/numarray/alter_code1.py,numpy/numarray/functions.py,numpy/numarray/session.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/fix_default_axis.py,tools/c_coverage/c_coverage_report.py
63a9f197d040b5479b772fd3925274fc984ffd24,"Merge pull request #3294 from matthew-brett/layout-order-docs

DOC: expanding documentation of index ordering",numpy/core/fromnumeric.py
8fa264a98158f0c3c8a99061f64f954fc59094a4,"Merge pull request #2822 from ContinuumIO/custom_output_operand_fix

Fix for ufuncs with built in input operands and custom output operands",doc/release/1.8.0-notes.rst,numpy/core/setup.py,numpy/core/src/umath/test_rational.c.src,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_ufunc.py
0330caed36ab77309f367c7b67c878452b7e5dd0,"Merge pull request #379 from JonWaltman/doc-fix-duplicate-modindex

DOC: sphinxext: Fix np domain to avoid duplicate module indices in docs
",doc/sphinxext/numpydoc/numpydoc.py
7738aedf19547c72049da6c4c8c9c3b4b640ad18,"Fix np domain to avoid duplicate module indices in docs
",doc/sphinxext/numpydoc/numpydoc.py
5808c8a3f67fd03de0a5b5c2c95613a230b6b3c1,"Merge pull request #3296 from pv/fix-sphinxext

BUG: sphinxext: fix sphinx extensions broken recently",doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/traitsdoc.py
54524cdce7806e50813688b95c89b039a32f0a7c,"BUG: sphinxext: fix sphinx extensions broken recently
",doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/traitsdoc.py
85e5042394fe84effb16ea2c93dc774c0cac7a01,"DOC: expanding documentation of index ordering

Trying to separate the ideas of index ordering and memory layout.

As discussed on the mailing list
",numpy/core/fromnumeric.py
6b0784b11f422f9148d01f01cfba09a5dcb0cd4a,"Formatting changes
",numpy/core/src/umath/test_rational.c.src,numpy/core/tests/test_ufunc.py
c7c4d40895b5e7824a71e5673a7c1ad378c08638,"BUG: Fix some README links to point to www.numpy.org

Fixes #3288
",README.txt,tools/osxbuild/docs/README.txt
fb6cfd793671b37fcc5cf54c8bbeed1621fa14af,"BUG: hardcode some known shared library extensions

the configuration variables are not a reliable mean to get the shared
library extension. darwin, windows and debug linux are wrong in these
variables.
SHLIB_SUFFIX is also wrong as of python 3.3.1
closes #3057
",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py
a8805f65d25e7268a722da47d490167d99e1559f,"Merge pull request #3265 from jamestwebber/patch-2

Update masked array copy to preserve array order",numpy/ma/core.py,numpy/ma/tests/test_core.py
0d9eac4bb25d43f3908efc54fd59348345e06c54,"Merge pull request #3280 from seberg/issue-3279

BUG: np.insert must copy index array",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
0a9da01121b0f13d4e87fa44fbff7ba04472e314,"BUG: np.insert must copy index array

Otherwise it would do in-place changes to it. Fixes gh-3279.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
4682e003079069c70cae8b96991e1306da6588b6,"Rename rational module to test_rational
",numpy/core/setup.py,numpy/core/src/umath/test_rational.c.src,numpy/core/tests/test_ufunc.py
375d87071259338d4508e3f8bdd246e44b1edba9,"Rename rational.c.src to test_rational.c.src
",numpy/core/src/umath/{rational.c.src
d73fb730ec3f91e9805b9c8b909ea22b8b4fe6b6,"Add another test for ufunc custom output type
",numpy/core/tests/test_ufunc.py
ecb041694a97fa070ef8c9b3b60b5522ab4ac2cb,"More updates for python 3
",numpy/core/src/umath/rational.c.src
55d55ec93093d703261b64ebb47980446dc89251,"Fix build issues on python 3
",numpy/core/src/umath/rational.c.src
aa0b3cb3c61ff27fa004a2e65ae8ad51dc6e645a,"Add unit test for ufunc with custom type

Add unit test for ufunc with built in input types and custom output type.
Also, borrow rational custom dtype code from numpy-dtypes projects so that numpy
has a custom dtype for testing purposes.
",doc/release/1.8.0-notes.rst,numpy/core/setup.py,numpy/core/src/umath/rational.c.src,numpy/core/tests/test_ufunc.py
877d0479afa2117cc65f4282dacd654fb09f25bc,"Fix for ufuncs with built in input operands and custom output operands
",numpy/core/src/umath/ufunc_type_resolution.c
f8a21eff6a93022f31e995b41d6fe28f16e39a12,"Merge pull request #3272 from cournape/remove_obsolete_ifort_flags

ENH: remove obsolete ifort flags",numpy/distutils/fcompiler/intel.py
1d6ced7d9be4fe3a91f3411d09c4a22309dcb719,"Merge pull request #3270 from ContinuumIO/astype_fix

Fix for astype('S') string truncate issue",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py
1be5e624ba50ddf9e4d570479188e3d111522738,"Merge pull request #3271 from charris/maint-update-install-txt

MAINT: Update INSTALL.txt after dropping Python 2.4, 2.5.",INSTALL.txt
496f68336f8a434062f61725ca22025895185cd4,"Add tests for strings shorter than 64 characters
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py
7019591fa19aa0eb1a459c1e0d21b191931b1cd0,"MAINT: Improve INSTALL.txt wording and wrap lines at 75 characters.
",INSTALL.txt
c6df6b1071fb1077dc0e116cdcd20a604221a9c6,"Add support for unicode strings
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py
5866d03ad8f06e9faea17a7e0204cbb94941744c,"MAINT: Update INSTALL.txt after dropping Python 2.4, 2.5.

Make the required Python versions >= 2.6 or 3.2. Remove text specific
to earlier Python versions.
",INSTALL.txt
0291896c63201f56279c8835c59ed73fee4e1916,"Merge pull request #3268 from charris/maint-remove-unneeded-version-checks

MAINT: Remove unneeded version checks.",numpy/core/code_generators/genapi.py,numpy/core/defchararray.py,numpy/core/memmap.py,numpy/core/setup.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_print.py,numpy/core/tests/test_umath.py,numpy/lib/npyio.py,numpy/lib/utils.py,numpy/polynomial/polyutils.py
65c172fda22c330773bac59fb7cf5e82a0938a63,"Merge pull request #3269 from charris/maint-remove-py3tool-file

MAINT: Remove the tools/py3tool.py file.",tools/py3tool.py
f231558bab5be194f3a7e57ba4c9738056d3a04d,"Fix for astype('S') string truncate issue

Calling astype('S') for an array of string objects results in a string array where dtype='S64', even if the original string objects are longer than 64 characters. Add call to GetParamsFromObject() to determine maximum string object length, and use that as string dtype size.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_api.py
11b2fcf470a5c467d8ed222e7a9e6da1d70e00fb,"MAINT: Remove the tools/py3tool.py file.

The tools/py3tool.py file was responsible for running 2to3. Now that
2to3 is no longer run it is not needed and can be removed.
",tools/py3tool.py
c92d924dd3dfa9eb97f65848e04ec9391709bc09,"MAINT: Remove unneeded version checks.

Now that only Python versions 2.6-2.7 and 3.2-3.3 are supported
some version checks are no longer needed. This patch removes them
so as to clean up the code.
",numpy/core/code_generators/genapi.py,numpy/core/defchararray.py,numpy/core/memmap.py,numpy/core/setup.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_print.py,numpy/core/tests/test_umath.py,numpy/lib/npyio.py,numpy/lib/utils.py,numpy/polynomial/polyutils.py
d0d8d1c1deb28fb2b43c7180cd0e293608b6964e,"Merge pull request #3266 from charris/2to3-remove-2to3-fixer

2to3 remove 2to3 fixer",doc/release/1.8.0-notes.rst,numpy/lib/npyio.py,numpy/lib/recfunctions.py,setup.py
a09fc3341860b9ea376c7f5769feb653414e2b67,"ENH: remove obsolete ifort flags, ensure generated binaries work everywhere.
",numpy/distutils/fcompiler/intel.py
d6f62682483448adc8724345bad42a4740710a48,"MAINT: Use from future_builtins zip and map.

For Python versions 2.6 and 2.7 the iterator forms of zip and map
can be imported from future_builtins. That is done here so as to
avoid using itertools.{izip, imap}.
",numpy/lib/npyio.py,numpy/lib/recfunctions.py
ede7dc46ee115687582b7013002415933244f1c7,"DOC: Document that the 2to3 fixer is no longer used.
",doc/release/1.8.0-notes.rst
b4180e3a3a3a85f0835019d4cb7d10357c78b76c,"2to3: Stop using 2to3 and remove the tools/py3tool.py file.

The same code base now supports python versions 2.6-2.7 and 3.2-3.3.

Closes #3247.
",setup.py
ee19043127784e579a45ceb2f02ff350ec8b6019,"Merge pull request #3257 from charris/2to3-apply-unicode-fixer

2to3: Apply unicode fixer.",doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,numpy/__init__.py,numpy/compat/py3k.py,numpy/core/numerictypes.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py,numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_regression.py,numpy/ma/tests/test_regression.py,tools/py3tool.py
211154eb336f5314b33e2486fa79953c90be8a11,"BUG: Fix typo in docscrape_sphinx.py import.
",doc/sphinxext/numpydoc/docscrape_sphinx.py
3a5c5475b5c2043dbe6791d3a5100a45d491546e,"2to3: Apply unicode fixer.

The unicode fixer strips the u from u'hi' and converts the unicode type
to str. The first won't work for Python 2 and instead we replace the u
prefix with the sixu function borrowed from the six compatibility
package. That function calls the unicode constructor with the
'unicode_escape' encoder so that the many tests using escaped unicode
characters like u'\u0900' will be handled correctly. That makes the
sixu function a bit different from the asunicode function currently in
numpy.compat and also provides a target that can be converted back to
the u prefix when support for Python 3.2 is dropped. Python 3.3
reintroduced the u prefix for compatibility.

The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is no
longer a builtin in Python 3. For code compatibility, 'unicode' is
defined either as 'str' or 'unicode' in numpy.compat so that checks like

    if isinstance(x, unicode):
        ...

will work properly for all python versions.

Closes #3089.
",doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,numpy/__init__.py,numpy/compat/py3k.py,numpy/core/numerictypes.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py,numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_regression.py,numpy/ma/tests/test_regression.py,tools/py3tool.py
56e806abb78ac03a5f45090a3b9bf7a6c9964026,"Merge pull request #3242 from charris/2to3-apply-types-fixer

2to3: Apply types fixer.",numpy/compat/_inspect.py,numpy/core/fromnumeric.py,numpy/core/records.py,numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/fft/helper.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/oldnumeric/ma.py,numpy/testing/utils.py,tools/py3tool.py
63d9a9b468cc0c15325b1320cf13409b8d2210af, reduces excess cleverness from 1/2 to 1/3,numpy/distutils/command/build_ext.py
abaf953637e92a622c1b0d797ec77f05a7c6e600,"Adding a test for #3265

Test to ensure that MaskedArray.filled() doesn't change the order of the array.

This test is a little messy because there are problems constructing an F-contiguous masked array in the first place. I had to explicitly pass in F-contiguous arrays for data and mask.",numpy/ma/tests/test_core.py
4e6b48e65ed839ab57eb66e38f9b08f3f43163be,"Update masked array copy to preserve array order

Using 'K' to try to match array order, fixes https://github.com/numpy/numpy/issues/3156",numpy/ma/core.py
e3cd6a48108236cdee681e2de453a8aca1799125,"DOC: Change example to demonstrate function

""a * 0.5"" example might as well be new_func(a) directly, it doesn't demonstrate the purpose of apply_along_axis().",numpy/lib/shape_base.py
9016aa47a65fc2e3b19c82d01174f591655e517d,"bugfix in build_ext: check that ext has an attribute before trying to
use it
",numpy/distutils/command/build_ext.py
1975606394d577421c4b4e21abb8fdadbdc572c0,"Merge pull request #3220 from pv/linalg-gu

Add generalized ufunc linalg functions and make numpy.linalg use them",doc/source/reference/routines.linalg.rst,numpy/linalg/_gufuncs_linalg.py,numpy/linalg/bento.info,numpy/linalg/blas_lite.c,numpy/linalg/bscript,numpy/linalg/dlapack_lite.c,numpy/linalg/lapack_lite/blas_lite.c,numpy/linalg/{,numpy/linalg/lapack_lite/dlapack_lite.c,numpy/linalg/{,numpy/linalg/{,numpy/linalg/{,numpy/linalg/{,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_gufuncs_linalg.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/umath_linalg.c.src
1a9aa5ac15df13028e52d0a1d01fbcec9bbb687e,"Merge pull request #3250 from charris/small-nditer-cleanup

MAINT: Style cleanup of numpy/core/src/multiarray/nditer_pywrap.c.",numpy/core/src/multiarray/nditer_pywrap.c
724f081ed0807c01c706113c89b1cf24a81ada15,"MAINT: Style cleanup of numpy/core/src/multiarray/nditer_pywrap.c.

Small indentation cleanup bringing the method list into standard
Numpy form.
",numpy/core/src/multiarray/nditer_pywrap.c
9361471ebf49d31761e8ed9d7dc6512abe3241a9,"Merge pull request #3249 from charris/2to3-apply-next-fixer

2to3: Apply next fixer.",doc/sphinxext/numpydoc/comment_eater.py,numpy/core/tests/test_nditer.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/linalg/lapack_lite/fortran.py,numpy/ma/core.py,tools/py3tool.py
c6de09799decbb22bb2d7a44036f53c30356edda,"2to3: Apply next fixer.

The next builtin has been available since Python 2.6 and allows
`it.next()` to be replaced by `next(it)`. In Python 3 the `next` method
is gone entirely, replaced entirely by the `__next__` method. The next
fixer changes all the `it.next()` calls to the new form and renames the
`next` methods to `__next__`. In order to keep  Numpy code backwards
compatible with Python 2, a `next` method was readded to all the Numpy
iterators after the fixer was run so they all contain both methods. The
presence of the appropriate method could have been made version
dependent, but that looked unduly complicated.

Closes #3072.
",doc/sphinxext/numpydoc/comment_eater.py,numpy/core/tests/test_nditer.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/linalg/lapack_lite/fortran.py,numpy/ma/core.py,tools/py3tool.py
a196d789fbb8e72672c73ffcf99c687b5fd3ec3d,"Merge pull request #3248 from charris/2to3-apply-urllib-fixer

2to3: Apply urllib fixer.",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py,tools/py3tool.py
c70025a46d655a19c6c7d64dbbf96849093afb18,"2to3: Apply urllib fixer.

Various functions have been moved around in the stdlib for Python 3,
this fixes that up so that the code is valid in both Python 2 and
Python 3.

Note: monkey patching the stlib urlopen for testing looks a bit hokey
to me, but I don't see an easier, more reliable way to do the test.

Closes #3090.
",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py,tools/py3tool.py
6c47259eec0ec20c1150c2b29994de59a3158964,"Merge pull request #3245 from charris/2to3-apply-isinstance-fixer

2to3: Skip isinstance fixer.",tools/py3tool.py
3a315030822ea08a8f563fc037a708716ce5be77,"2to3: Skip isinstance fixer.

The isinstance fixer removes duplicate types in the second argument of
isinstance(). For example, isinstance(x, (int, int)) is converted to
isinstance(x, (int)). This would certainly apply if we let the long
fixer replace long by int, but as is it does nothing.

Duplicate entries are supposedly deprecated in Python 3, I'm not sure
why or how, but it does not seem to be a problem at this point. If it
ever becomes so, we can deal with it then.

Closes #3085
",tools/py3tool.py
c879ad8a39f2b74edcdaa05a2f2f854fb235537d,"2to3: Apply types fixer.

Python 3 removes the builtin types from the types module. The types
fixer replaces such references with the builtin types where possible
and also takes care of some special cases:

    types.TypeNone           <- type(None)
    types.NotImplementedType <- type(NotImplemented)
    types.EllipsisType       <- type(Ellipsis)

The only two tricky substitutions are

    types.StringType         <- bytes
    types.LongType           <- int

These are fixed up to support both Python 3 and Python 2 code by
importing the long and bytes types from numpy.compat.

Closes #3240.
",numpy/compat/_inspect.py,numpy/core/fromnumeric.py,numpy/core/records.py,numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/fft/helper.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/oldnumeric/ma.py,numpy/testing/utils.py,tools/py3tool.py
3f2c789ffd0d2e05596b15ea6cd644262f96200e,"Merge pull request #3244 from charris/2to3-apply-zip-fixer

2to3: Apply zip fixer.",doc/sphinxext/numpydoc/compiler_unparse.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_ufunc.py,numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,tools/py3tool.py
61c5ac6758d05da6cf49b7247eca850d9db83a7a,"Merge pull request #3241 from charris/2to3-apply-nonzero-fixer

2to3: Apply nonzero fixer.",numpy/oldnumeric/ma.py,tools/py3tool.py
ff464ef985cb4d3bca82cc0e7867e02ca47482dc,"Merge pull request #3238 from charris/2to3-apply-renames-fixer

2to3: Apply renames fixer.",numpy/core/arrayprint.py,numpy/oldnumeric/ma.py,tools/py3tool.py
f62bc39d25eb827b4245ddfeb25b2ff6afbb838d,"Merge pull request #3221 from seberg/document-relaxed-strides

DOC: Document NPY_RELAXED_STRIDES_CHECKING changes",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/ufuncs.rst,numpy/add_newdocs.py
01ed88af5b784d52f4fcf383e319cde67c8a22fb,"Merge pull request #3237 from charris/2to3-apply-basestring

2to3: Apply basestring fixer.",numpy/compat/py3k.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/distutils/extension.py,numpy/lib/_iotools.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/testing/nosetester.py,tools/py3tool.py
0dfe67afd1ee9e4c905bf119673f6e634221f21b,"2to3: Apply zip fixer.

In Python 3 zip returns an iterator instead of a list. Consequently, in
places where an iterator won't do it must be enclosed in list(...).
Lists instead of iterators are also used in array constructors as using
iterators there usually results in an object array containing an
iterator object.

Closes #3094
",doc/sphinxext/numpydoc/compiler_unparse.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_ufunc.py,numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,tools/py3tool.py
54ca3f28ada715a0c84686f74f3b5a7ba4aa2c95,"2to3: Apply nonzero fixer.

In Python 3 the `__nonzero__` class method is replaced by `__bool__`.
This only affects the MaskedArray class in numpy/oldnumeric/ma.py file
and the simplest solution is to provide both methods. I have my doubts
that the fixed up Python 3 version was correct or even tested, but I
think the current solution should work for as long as oldnumeric stays
in numpy.

Closes #3073.
",numpy/oldnumeric/ma.py,tools/py3tool.py
e589c6ed1dac7755bb7bd9e181a43ebeff62dcec,"Merge pull request #3239 from pv/skipif-lf

ENH: testing: remove an annoying line feed from skipif decorator",numpy/testing/decorators.py
9d849ede86cdb156a124722ce14abf1e985e6d0b,"ENH: testing: remove an annoying line feed from skipif decorator

The line feed is annoying as it makes Nose's verbose test output not
print one line per one test.
",numpy/testing/decorators.py
ffdad17d0db1d55d39911d637c650ea0acada78b,"2to3: Apply renames fixer.

Rename sys.maxint to sys.maxsize when the Python version is >= 3.  This
change was made in Python 3 because all integers are 'long' integers and
their maximum value bears no relationship to the C type that int used to
represent. The new sys.maxsize value is the maximum value of Py_ssize_t.
This change has not led to any reported problems since the numpy 1.5
release.

Closes #3082
",numpy/core/arrayprint.py,numpy/oldnumeric/ma.py,tools/py3tool.py
68338eed3ae91c9846142e088c16b63635e58178,"2to3: Apply basestring fixer.

The basestring class is not defined in Python 3 and the fixer replaces
it with str. In order to have a common code base we define basestring in
numpy/compat/py3k.py to be str when the Python version is >= 3,
otherwise basestring and import it where needed.  That works for most
cases, but there are a few files where the version dependent define
needs to be in the file.

Closes #3042.
",numpy/compat/py3k.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/distutils/extension.py,numpy/lib/_iotools.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/testing/nosetester.py,tools/py3tool.py
688bc60658b391524c6b641e0a5e5ecd73322d02,"Merge pull request #3232 from charris/2to3-apply-numliterals-fixer

2to3: Apply the `numliterals` fixer and skip the `long` fixer.",numpy/__init__.py,numpy/compat/py3k.py,numpy/core/defchararray.py,numpy/core/getlimits.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arrayterator.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/user_array.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/random/tests/test_regression.py,tools/py3tool.py
7f5af37e26ba2e99ad3ee6928b78437f601e96e0,"2to3: Apply the `numliterals` fixer and skip the `long` fixer.

The numliterals fixer replaces the old style octal number like '01' by
'0o1' removes the 'L' suffix.

Octal values were previously mistakenly specified in some dates, those
uses have been corrected by removing the leading zeros.

Simply Removing the 'L' suffix should not be a problem, but in some
testing code it looks neccesary, so in those places the Python long
constructor is used instead.

The 'long' type is no longer defined in Python 3. Because we need to
have it defined for Python 2 it is added to numpy/compat/np3k.py where
it is defined as 'int' for Python 3 and 'long' for Python 2. The `long`
fixer then needs to be skipped so that it doesn't undo the good work.

Closes #3074, #3067.
",numpy/__init__.py,numpy/compat/py3k.py,numpy/core/defchararray.py,numpy/core/getlimits.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arrayterator.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/user_array.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/random/tests/test_regression.py,tools/py3tool.py
8eebee82b88f26f40c75422f5f655dea9f86f4b6,"TST: linalg: add tests for xerbla functionality (with and without GIL)
",numpy/linalg/lapack_litemodule.c,numpy/linalg/tests/test_linalg.py
374e0b4d2c6f44fdccccfefe0546b607e5291e64,"BUG: linalg: fix LAPACK error handling in lapack_litemodule

If an exception is pending (raised from xerbla), the routines must
return NULL.
",numpy/linalg/lapack_litemodule.c
68c186d1e8413b8049128624746f29851d560f1a,"BUG: linalg: do not assume that GIL is enabled in xerbla_

With the new ufunc-based linalg, GIL is released in ufuncs, and needs to
be reacquired when raising errors in xerbla_.
",numpy/linalg/lapack_lite/python_xerbla.c
74b08b3f0284d9d2dd55a15dd98a3846913b1b51,"Merge pull request #3236 from charris/2to3-apply-itertools

2to3: Apply itertools fixer.",numpy/lib/npyio.py,numpy/lib/recfunctions.py,tools/py3tool.py
5de56efaad908f2b731a7eda2b9ca2a9196f820a,"2to3: Apply itertools fixer.

In Python 3 zip, map, and filter are all iterators, consequently the
itertools variants izip, imap, and ifilter have been removed and the
itertools fixer replaces them with the unprefixed names.

Because the places where the iterator variants are used in current look
like places where the iterator version might be useful, the approach
taken here is to define the prefixed versions to the unprefixed versions
for Python 3, but otherwise import them from itertools.

Closes #3233.
",numpy/lib/npyio.py,numpy/lib/recfunctions.py,tools/py3tool.py
06066cb01962819c9590d87ea57c77db2a306266,"Merge pull request #3235 from charris/2to3-apply-itertools_imports

2to3: Skip itertools_imports fixer.",tools/py3tool.py
7e6c3eb5693c712241fb4f6cbbe855857f8f21bc,"2to3: Skip itertools_imports fixer.

No files are changed by the itertools_imports fixer so skip it.  What
the fixer does is rename imports of imap, ifilter, and izip to map,
filter, and zip since the latter are iterators in Python 3.

Closes #3234
",tools/py3tool.py
fb9b5bd2d71c92f64f151f812b4cee08a971eb2e,"TST: linalg: test return types of generalized linalg routines
",numpy/linalg/tests/test_linalg.py
aa8fde0f62a133319cfac8e8da208fcd8e224ef1,"ENH: linalg: use signature= for internal casting rather than astype in linalg ufuncs
",numpy/linalg/linalg.py
1b3834d7b59da2e809d320992c632697355d63b6,"BUG: linalg: make umath_linalg to track errors from all inner loop iterations

This ensures that the FP invalid flag always reflects the return code
from LAPACK. Fixes a bug in 63a8aef81 where umath_linalg raises a
warning only if the error occurs in the last iteration of the ufunc
inner loop.
",numpy/linalg/tests/test_linalg.py,numpy/linalg/umath_linalg.c.src
5b9da00736edf996b8422cbb46f89b87691b7902,"DOC: Advanced indexing using np.newaxes

Mention in release notes and remove documentation which may
give the idea it cannot be used with advanced indexing.
",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.indexing.rst
5daaef775933983bff87dbe8e9b3df15f40d279b,"Merge pull request #3231 from charris/2to3-skip-setliteral-fixer

2to3: Skip `setliteral` fixer.",tools/py3tool.py
6115bba29c721aa9e2f533cd7ba3e13956f2dbd5,"TST: Add fancy indexing test for tuple indexing

This is a first version of fancy indexing tests by mimicing the
behavoir in python. Note that error messages are not tested.
",numpy/core/tests/test_indexing.py
d5bf8ac099b0204365d1df73f21ed905c5adbcb3,"2to3: Skip `setliteral` fixer.

Setliterals are not available in Python 2.6. Because the current usage
in numpy is forward compatible with Python 3 there is no need to run the
fixer.

When Python 2.6 support is dropped the fixer can be run, but that looks
to be several years off. RHEL 6 with Python 2.6 was released in 2010 and
will run for ten years.
",tools/py3tool.py
22fae03ce4d9f3855bd24e03ecdeb215eb1299e4,"MNT: Tiny cleanup for mapping.c and comments
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
4bc65576d00984642572e043a6736ae2dbf7a458,"BUG: Do not ignore subspace unless it is true 0-d

This is  more important when allowing newaxis, but already before
lead to successful indexing when it should not be suspected.
Also some maintenance.
",numpy/core/src/multiarray/mapping.c
a35a7af4160b1ca8f1744ebeee34f1c0ac0125da,"BUG: Check for maximum dimension for fancy indexing.
",numpy/core/src/multiarray/mapping.c
18ee645bf53185ff4f00ad91861356f2eb1222a0,"ENH: Allow newaxis in combination with fancy indexing.

This commit allows the use of None when also using fancy indexing.
To achieve this mit->consec is used to note the denote the
transposition axis (which means that if its consecutive but at the
start, mit->consec==0, and no transposition is necessary).
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/mapping.c
29c8ae8d042117e192938e8782a24646f8146e94,"BUG: Fix indexing 0-sized arrays using empty fancy-indexes

Due to subspace creation for fancy indexing selecting the 0s
element on every fancy dimension, this failed if the dimension
was empty. Propagating check_index to disable the unnecessary
check in this case.
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c
6ffa2ea9744e01129382b902649edfd50e848401,"Merge pull request #3225 from seberg/cleanup_subscript-merge

Cleanup subscript rebased",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/sequence.c,numpy/core/tests/test_indexing.py
1f8443764550ec4626469f6afd8e78de10e62b2e,"TST: Clarify empty fancy index test
",numpy/core/tests/test_indexing.py
9466880fc907ddf864aab47aff0642a4cb57aaf6,"MAINT: Error type fixup and clearer error message

The first error types were changed to ValueError (or introduced)
newly. Python seems to normally use IndexError or TypeError here,
so changing back to IndexError.

The second is just a clarification to say when the error actually
occurs for the user.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
f1b20f92f8a959359d01de5cf05f3d6babe8e145,"Merge pull request #3229 from jdkloe/master

Fix for issue 3192",numpy/f2py/crackfortran.py
07ed3a2defe68738ec89daf88e0a0e2e697a9182,"STY: Use PyArray_BYTES to get char*
",numpy/core/src/multiarray/mapping.c
f31f0fbe453179a2cc8be63e7f07786eb94c2578,"replace exec by eval to ensure the c variable is defined for all relevant python versions
",numpy/f2py/crackfortran.py
5cdf8410fc4d2ed05d22e6831023c40a30d9ebe7,"DOC: Add NPY_RELAXED_STRIDES_DOCUMENTATION doc to ndarry.flags
",numpy/add_newdocs.py
5c8b89c5bec14727b1cfb710494e0889d8c6568a,"DOC: Document NPY_RELAXED_STRIDES_CHECKING changes

This includes documentation in the release notes, as well as the
reference guide and smaller corrections. Thanks to Nathaniel
for major rewriting this.
",doc/release/1.8.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/ufuncs.rst
2e4ad6e2029669202ef0563f14de6eed9bd695a7,"Merge pull request #3227 from charris/2to3-apply-funcattrs

2to3: Skip `funcattrs` fixer.",tools/py3tool.py
b9232f34bfb53bf7c574bfa350dd981f58d6a2d4,"Merge pull request #452 from seberg/enhdel

ENH: delete and insert generalization and speed improvements",doc/release/1.8.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
d083c2992c170972cc4623d5d4e00ade90cf344b,"2to3: Skip `funcattrs` fixer.

In Python 3 the func.func_name attribute is replaced by the
func.__name__ attribute. The only file affected by this is
doc/sphinxext/numpydoc/phantom_import.py, and there its use
is already version dependent.

Closes #3054.
",tools/py3tool.py
b7053e8d065f820a6c2b3db7e8df3feaf5adbd71,"Merge pull request #3226 from charris/2to3-apply-buffer-fixer

2to3: Skip buffer fixer.",tools/py3tool.py
0cbe590b9bd4a1b8e862334406ef271f4bb6adaf,"2to3: Skip buffer fixer.

The buffer object is replaced by memoryview in Python >= 3. The memory
view object has also been backported to Python 2.7. However, the only
use of `buffer1/1memoryview1 is in `numpy/core/tests/test_unicode.py`
and there it is already version dependent: `memoryview` is used if the
Python version is >= 3 and `buffer` is used otherwise.

Closes #3043.
",tools/py3tool.py
1675ad9e5b95605a851337f407e1fad33cf10c9c,"FIX: rename xrange to range in python 2

np.delete abuses range to calculate start/stop/step and len. This
would create potentially large intermediates if it was a list, so
for numpy/lib/function_base.py and python < 3, use range = xrange.
",numpy/lib/function_base.py
0350d5e2194494dc1bd8bb10759557e30980fef0,"DOC: Fixup of delete/insert changes in release notes
",doc/release/1.8.0-notes.rst
6d305e49c155b744a699e9d09ca9132ee663018a,"MAINT: np.delete keep old out of bound/negative index behavior
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f17e55ddefe0e3c730be8220476b1a7ae8dc7a43,"TST: New tests for insert/delete covering warnings and corner cases
",numpy/lib/tests/test_function_base.py
b3836868e81c04973c7527beb1c32d19d97a8a29,"FIX: insert/delete fixes and warnings for non-integer indices
",numpy/lib/function_base.py
908e06c3c465434023649b0ca522836580c5cfdc,"ENH: larger fixes for np.delete and np.insert functions

There were several smaller to larger problems for these two functions,
that this addresses:
  * delete did not handle out of bound values graciously (ignoring negative
    ones)
  * both were unnecessarily slow due to use of sets
  * insert did not handle unsorted indices correctly

Further changes:
  * Add FutureWarning for boolean obj, so it can be handled similar to a
    boolean mask with indexing.
  * Add FutureWarning to remove inconsistent special cases for 0-d arrays
    (neither insertion nor deletion along an axis make sense for a scalar)
  * Allow insertion of an array with more then one element along axis when
    obj is a sequence with a single item. (i.e. array([1])).
  * Reintroduce speed optimization for scalar in insert that existed in 1.6.
",doc/release/1.8.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
8468a7580e9c87d31921881e54965ac7a4aeef7c,"MAINT: Add lost code to array_subscript_fromobject
",numpy/core/src/multiarray/mapping.c
5cfd384d4e92d7ce01478ead6e5f6af3ab0f72f4,"MAINT: Fixup merge mistakes
",numpy/core/src/multiarray/mapping.c
d128fcb4c292a27fb22befe3b2016808d79054b0,"ENH: Add exception to _nonzero_indices for zero-dim arrays

This function causes a crash otherwise, because it loops over the number
of dimensions to construct sub-iterators. If the number of dimensions is
zero, the sub-iterators will not be initialized, causing problems later on.
",numpy/core/src/multiarray/mapping.c
e7db8c0f5ef7a302e05be767ebe9cfa81d953a6d,"BUG: Repair tests

Oops..
",numpy/core/tests/test_indexing.py
7e28af952cec5cb985b2a56d01e9acae48486b03,"BUG: Fix failing subscript test cases

This fixes indexing with NumPy boolean scalar values, which caused
crashes before. Both Python and NumPy boolean scalars now behave the
same. This contains a few small changes to PyArrayMapIterNew, where
the PyArrayMapIterObject is memset to zero and a fix for the crash,
which was caused by _nonzero_indices, which did not initialize any
iterators because ndim is zero for scalars. *IterNew will now check
for scalars before running that part of the code.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexing.py
698f57fb2d0c20f7ce7f37267a6e9a1463add0e6,"DOC: Re-insert comment
",numpy/core/src/multiarray/mapping.c
fc52c2887d854bce389cc5185704b35a509aae07,"BUG: Fix old case for boolean subscripts with non-matching shape.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
e3f01df89db94886c75718f1ead7c084f9e71905,"STY: Text changes.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
62dc28a2691d28e0a5dffea6ab285aee7bf1e3bf,"BUG: Multiple fixes from merging.
",numpy/core/src/multiarray/mapping.c
8a836c53d85f63831e51e7aac9a2f77fdf25ef9f,"TST: Add more indexing tests.
",numpy/core/tests/test_indexing.py
bc925023af236fa02702afd1a11dd0342ad77e5d,"ENH: Change IndexError to ValueError for integer conversion errors.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
9442b91d13803a2862d7bbb29f8da50200df333b,"ENH: Optimize array_subscript by removing redundant error check.
",numpy/core/src/multiarray/mapping.c
2fc6673edce84bf5d7dd745964ba9dab2144d03b,"BUG: Tuple conversion may not propagate errors from int conversion.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
e813dae46054e7ef5ba4fe8a6db4597a202c3afb,"ENH: Small optimization for redundant PyArray_Check

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
fd5ae9938a690832e72218033aa4ca4e54bc626c,"BLD: Declare array_ass_item_object before use.
",numpy/core/src/multiarray/mapping.c
9ae9872a69e7c46cfdbe98ba3ac5f14deea7dc9a,"ENH: Cleanup subscript assignment code.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
38c070d1e717d84c962255097649684acf9c1af9,"ENH: Rename array_ass_big_item to array_ass_item_object
",numpy/core/src/multiarray/mapping.c
4b8ef7270aa20d1be6c807284a15646fcf1a1677,"ENH: Optimization in subscript_simple for arrays with size > 1
",numpy/core/src/multiarray/mapping.c
eab77ae891eaf08301de0c69f5b68021cd1d3ac9,"ENH: Change silent integer conversion failure into index error.
",numpy/core/src/multiarray/mapping.c
793595279432e3f4627bf713ca3554c8caa3419e,"ENH: Rename array_subscript to array_subscipt_fromobject and refactor array_subscript_nice to array_subscript

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
818e3ebc61b485465412251e86d3b4f95c75deb8,"ENH: Move Python related subscript code into array_subscript
",numpy/core/src/multiarray/mapping.c
796c274551a633e40fac051e47840ac77a5a738a,"ENH: Use array_subscript_asarray to ensure an array type return value
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
4fae90dd81c9abca631727f918b3c5d684984bf2,"ENH: Move fancy indexing code and ellipse check code into own functions.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/mapping.c
bde1a064bda6269c06d34ace67899d7d1c73ffba,"ENH: Cleanup and simplify array_item code.

Rename array_big_item to array_item_asarray and move special case
for array_item_nice into array_item_asscalar. Also remove redundant
PyArray_Return and rename array_item_nice to array_item.

Conflicts:
	numpy/core/src/multiarray/mapping.c
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/sequence.c
79126f1c6084c56348b71e1b91fb4b6bc9de86b2,"Merge pull request #3223 from charris/2to3-skip-future-fixer

2to3: Skip `future` fixer.",tools/py3tool.py
16f97614acd12b85619f8a2a52114ecc955787a6,"2to3: Skip `future` fixer.

The `future` fixer removes the `from __future__ import ...` statements.
That is fine for Python 3, but we need to keep that statement if we are
shooting for a common code base for both Python 2 and Python 3.
",tools/py3tool.py
25d55b8f0ea74f7c8a700a14ef8c256a51dd1376,"Merge pull request #3216 from charris/2to3-apply-map-fixer

2to3: Apply `map` fixer.",doc/summarize.py,numpy/compat/_inspect.py,numpy/core/numerictypes.py,numpy/core/shape_base.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/f2py/auxfuncs.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/_iotools.py,numpy/lib/financial.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/matrixlib/defmatrix.py,numpy/oldnumeric/matrix.py,numpy/testing/utils.py,tools/py3tool.py
a6164794a63215e23fa28432d9acec4727c68d02,"2to3: Apply `map` fixer.

In Python 3 `map` is an iterator while in Python 2 it returns a list.
The simple fix applied by the fixer is to inclose all instances of map
with `list(...)`. This is not needed in all cases, and even where
appropriate list comprehensions may be preferred for their clarity.
Consequently, this patch attempts to use list comprehensions where it
makes sense.

When the mapped function has two arguments there is another problem that
can arise. In Python 3 map stops execution when the shortest argument
list is exhausted, while in Python 2 it stops when the longest argument
list is exhausted. Consequently the two argument case might need special
care. However, we have been running Python3 converted versions of numpy
since 1.5 without problems, so it is probably not something that affects
us.

Closes #3068
",doc/summarize.py,numpy/compat/_inspect.py,numpy/core/numerictypes.py,numpy/core/shape_base.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/f2py/auxfuncs.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/_iotools.py,numpy/lib/financial.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/matrixlib/defmatrix.py,numpy/oldnumeric/matrix.py,numpy/testing/utils.py,tools/py3tool.py
20cc77a1a466192fb2ea11f61f6cbf678f266b87,"BUG: linalg: fix Py3 syntax
",numpy/linalg/_gufuncs_linalg.py,numpy/linalg/tests/test_gufuncs_linalg.py
1b27cb0bcce363ac223a89dbce48b2eb3f7f05b4,"MAINT: move gufuncs_linalg_contents.rst to the docstring of the module
",numpy/linalg/_gufuncs_linalg.py,numpy/linalg/gufuncs_linalg_contents.rst
9c00887ba60c0c3c4ae7ad349c6f43831c3ae353,"MAINT: move umath_linalg under numpy/linalg and use the same lapack_lite

Also, link umath_linalg against the system BLAS/LAPACK if available.
",numpy/core/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/{core/src/umath,numpy/linalg/bento.info,numpy/linalg/blas_lite.c,numpy/linalg/bscript,numpy/linalg/dlamch.c,numpy/linalg/dlapack_lite.c,numpy/linalg/f2c.h,numpy/linalg/f2c_lite.c,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/{core/src/umath,numpy/linalg/linalg.py,numpy/linalg/python_xerbla.c,numpy/linalg/setup.py,numpy/{core,numpy/{core/src/umath,numpy/linalg/zlapack_lite.c
9bfa19b11f38b5fe710d872db6a8628fc6a72359,"TST: linalg: add tests for generalized linalg functions
",numpy/linalg/tests/test_linalg.py
63a8aef815fdb2526493311b89b4d15afbb4a38d,"BUG: core/umath_linalg: ensure FP error status reflects LAPACK error status
",numpy/core/src/umath/umath_linalg.c.src
bbdca51cac02a9f9352f671229037afa139ac7b5,"ENH: linalg: use _umath_linalg for svd()
",numpy/linalg/linalg.py
cc7b048fafeb93150f118651438faf06aefe807b,"ENH: linalg: use _umath_linalg for eigh()
",numpy/linalg/linalg.py
1253d571a48f3100865e0b38895c0cceb8336aa3,"ENH: linalg: use _umath_linalg for eig()
",numpy/linalg/linalg.py
74e14775a1447942e9fede448958810d479c836b,"ENH: linalg: use _umath_linalg for eigvalsh()
",numpy/linalg/linalg.py
15a9c3b25c0aff2799c927ea9e602fc3c134d3fc,"ENH: linalg: use _umath_linalg for eigvals()
",numpy/linalg/linalg.py
2dd64051fa3f81bea0f9fe5098f7e1c24aa3f2f8,"ENH: linalg: use _umath_linalg for cholesky()
",numpy/linalg/linalg.py
04ad33ed7b6b6a0eee2a0a6e98fc8d598db487ad,"ENH: linalg: use _umath_linalg for solve()
",numpy/linalg/linalg.py
7d2fed67c3479a2f5c2e8fb25036ea2c8003f439,"ENH: linalg: use _umath_linalg for inv()
",numpy/linalg/linalg.py
87dc3f6b66465d80d8fe36aeb40a33546f979e67,"ENH: linalg: use _umath_linalg for slogdet()
",numpy/linalg/linalg.py
5b0fead2d4e3cc6c82761aba09f330147435a0cf,"ENH: linalg: use _umath_linalg for det()
",numpy/linalg/linalg.py
2e8b24e30345c75eb9101ea29e96c9fde48add7f,"ENH: linalg: add helper routines for gufuncs
",numpy/linalg/linalg.py
f0a78c76e1fffdc222e527423871d8adfe7433f6,"DOC: document the behavior of generalized N-dim linear algebra functions
",doc/source/reference/routines.linalg.rst
35f4b174ff4fd2ea02052a697e5354408aa99e81,"MAINT: mark gufuncs_linalg.py as a internal testing-only module
",numpy/core/setup.py,numpy/core/src/umath/{gufuncs_linalg.py,numpy/core/tests/test_gufuncs_linalg.py
e7a54dae03facf904b670e0619e429290b65051e,BLD: reverted api version back to 8,numpy/core/code_generators/cversions.txt,numpy/core/setup_common.py
1f8efc0573b61a5526d03cd30610e71148f32e16,MAINT: added from __future__ as suggested by charris,numpy/core/src/umath/gufuncs_linalg.py
0afe2765c8bee728e00d47c4db5c7d2da88f61af,DOC: changed <NDIMS> to … in shape descriptions in docstrings,numpy/core/src/umath/gufuncs_linalg.py
5dc27acdafa572e12d693ca926498c7a5681f548,FIX: matrix_multiply now works when given a column matrix,numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
60f54b6c1585d022428b3bb57f638536cd1e639e,ENH: added complex version for inner1d. Also added dotc1d,numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src
ad8b29b7fb23a24b3451509ab34d4f28e5e174ad,"FIX: problems with eig and eigvals. Enhanced tests.
",numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
7e3176f6e7f7295a4125e17489994e89a5c119b8,"BUG: fixed a bug in eig for complex numbers. Eigenvector results are computed properly now.
",numpy/core/src/umath/umath_linalg.c.src
8e8f247756e054578c0d5001a0c07d86eea450de,"DOC: fixed doctest in poinv so that the example matrix is positive-definite.
",numpy/core/src/umath/gufuncs_linalg.py
05ceb126a0b2107f60037f5176e2a65eebe01aad,"DOC: changed doctests for eig and eigh to be more robust
",numpy/core/src/umath/gufuncs_linalg.py
cd6c20b5a434e4de522ef11a211ed71d440485f9,"DOC: added more doctests
",numpy/core/src/umath/gufuncs_linalg.py
8556374b6313587d4afe8e5dc36f5aba7a076230,"DOC: Added doctests to docstring for fused operations
",numpy/core/src/umath/gufuncs_linalg.py
fd435bc75ae86fbbda0abd12df2ba6dbb13756b2,"BLD: Python3 build problem fixed
",numpy/core/src/umath/umath_linalg.c.src
2eeddab2a1b82622ebbfe3bb9b10864bb437657a,"BLD: python 3.x compile fix
",numpy/core/src/umath/umath_linalg.c.src
f48c1342026f1c2b1b2b6a9be2438ce869a879d5,"ENH: Added np.seterr handling of errors
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src
a2afc8523a36038e4c72e37778a3956954dc5e8a,"DOC: corrected documentation - arrays of functions -> arrays of matrices
",numpy/core/src/umath/gufuncs_linalg.py
1ec2024a639e31fbea3e507e9369a71365246d53,"STY: PEP8
",numpy/core/src/umath/gufuncs_linalg.py
bbd674dda53d1d09532e19ffc9fa5c07e9985f16,"MAINT: Rewrote the gufuncs_linalg_contents as a rst file and updated it.
",numpy/core/src/umath/gufuncs_linalg_contents.rst
e1c7ed44fd3f63ea716e1184fc9b5715258d525a,"MAINT: renamed the file describing the gufuncs_linalg module
",numpy/core/src/umath/{umath_linalg_content.txt
24b727b13564fc069240e5f76fdfa83d0393236f,"MAINT: renamed umath_linalg module to _umath_linalg as it is internal.
",numpy/core/setup.py,numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src
6e352adb808b3f0effa3b88b8acea4d5d6794b72,"DOC: Added notes on error handling.
",numpy/core/src/umath/gufuncs_linalg.py
bca1bbe344e65d2d465f954e72a7a6c5bd9a374c,"DOC: added docstring for poinv
",numpy/core/src/umath/gufuncs_linalg.py
1f79b6907da2acb10443e2b894e1b6594cedb258,"DOC: Added docstring to chosolve
",numpy/core/src/umath/gufuncs_linalg.py
87cd05f5492a21d79c25532d227984e9669cb954,"DOC: added docstring for svd
",numpy/core/src/umath/gufuncs_linalg.py
b75a0cb957d82a1d1d20a6b0d27db40024066ce2,"DOC: added docstring to solve
",numpy/core/src/umath/gufuncs_linalg.py
82976c065bca9244ef2da7f1f0c2f0817413e24e,"DOC: Added docstring to eigvalsh
",numpy/core/src/umath/gufuncs_linalg.py
43c25bb28bba61688ba4bf8e87d8157694cec9ae,"DOC: Added docstring for eigh
",numpy/core/src/umath/gufuncs_linalg.py
170726cb0f04fff398e304c31f70189a3ff4062e,"ENH: chosolve sets result to nan on LAPACK error (_potrf, _potrs)
",numpy/core/src/umath/umath_linalg.c.src
ec5020cfb11b0acba38373dc89328e14ae31db1a,"ENH: svd sets results to nan on LAPACK error (_gesdd)
",numpy/core/src/umath/umath_linalg.c.src
7aa26c3e66f35cdc0981459687b1cd244c40ff6b,"ENH: inv sets result to nan on LAPACK error (_gesv)
",numpy/core/src/umath/umath_linalg.c.src
fb2270d95119d19e13dc85f5a3206afc622e9959,"ENH: solve sets result to nan on LAPACK error (_gesv)
",numpy/core/src/umath/umath_linalg.c.src
f2b0bdd9790ee3d8b8a19839cebb7260eb024c5b,"ENH: eigh, eigvalsh set result to nan on LAPACK error (_ssyevd, _heevd)
",numpy/core/src/umath/umath_linalg.c.src
2cc6fb459a2171225b7e37fabf2c90cbdf76c16f,"ENH: cholesky handling of _potrf failures (set result to nan)
",numpy/core/src/umath/umath_linalg.c.src
e41e42637943f54cde596c2e15489c73421e9814,"TST: fixed test for gufuncs_linalg Det
",numpy/core/tests/test_gufuncs_linalg.py
76a19631d1fc8af8bc753d54fe810651726ea1a9,"fixed testdet test. It failed due to eigvails failing in single precision and notifying the failure as nans.
",numpy/core/tests/test_gufuncs_linalg.py
866d230675d1c901a90b73d4266cdbd76235f3f1,"updated api version, as one merge changed it.
",numpy/core/code_generators/cversions.txt,numpy/core/setup_common.py
d4945eac952be1d9a0d9e7f20ae2465dd7f61129,"STY: made sure that split strings had \ at the end
",numpy/core/src/umath/umath_linalg.c.src
367f33351599e776a75a7c7303013e00727ddc16,"BLD: Windows build fixes + some tabs removed
",numpy/core/src/umath/umath_linalg.c.src
01327555202b30f9b7e3fd72a2c69686ee0c1804,"updated documentation
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src
3e7707654ab031937baef82237d1011f929e277a,"reverted matrix_dot in umath_gufuncs to matrix_multiply.
added some type-tests on test_gufuncs_linalg.py
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
a75fb9ea8bc231e0f547336de4688ce4be27e825,"added tests for ufuncs in gufuncs_linalg (the ones based on pdl). Added multiply4 in the wrapper, as it was missing
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/tests/test_gufuncs_linalg.py
2276eaac7c206f2398934ff586f802777eaefcfb,"work in progress: proper tests for eig.
",numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
c355550dd80224698cb3e495753963171098d60a,"fixed the problem in eigvals (apparently)
",numpy/core/src/umath/umath_linalg.c.src,numpy/core/src/umath/umath_linalg_content.txt,numpy/core/tests/test_gufuncs_linalg.py
f6aaecbc41c9466855654c209e23fd4d43048c40,"fixed bug in matrix_multiply when using cdoubles
",numpy/core/src/umath/umath_linalg.c.src,numpy/core/src/umath/umath_linalg_content.txt,numpy/core/tests/test_gufuncs_linalg.py
8817773dd3d849c3107ee6fe6084812fa530ee41,"updated the umath_linalg_content.txt adding a mention to the wrapper code.
",numpy/core/src/umath/umath_linalg_content.txt
a0c09b88cd0fb2825f8ed8bff993af16ba76f4d8,"modified umath_linalg_content.txt to reflect changes.
",numpy/core/src/umath/umath_linalg_content.txt
f74546dee82146c22474e008668e82ef87522d06,"removed some wrappers that weren't needed with the harness fix, just changed to assignment
",numpy/core/src/umath/gufuncs_linalg.py
814add803e1895bf0bad68484f2fd926937b5c31,"work on tests and related fixes. Getting things in shape to commit to de-shaw patch
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
ecfb93c733f014a36c972593efd57ddfe56263dd,"first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.
",numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src,numpy/core/tests/test_gufuncs_linalg.py
747cd46d6b07003990cbdbb38bc5ccf993d7ae75,"wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).
",numpy/core/setup.py,numpy/core/src/umath/gufuncs_linalg.py,numpy/core/src/umath/umath_linalg.c.src
861e694d12a86ed61bddf59abb9a3a2dc02fcc54,"updated umath_linalg_content.txt
",numpy/core/src/umath/umath_linalg_content.txt
2bb6c8eb1823b3b18fcc4240e8ebdf3fdf2ccc7d,"poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.
",numpy/core/src/umath/lapack_lite/blas_lite.c,numpy/core/src/umath/lapack_lite/dlapack_lite.c,numpy/core/src/umath/lapack_lite/zlapack_lite.c,numpy/core/src/umath/umath_linalg.c.src
95eef39e8bcad65f4f8e49fe1ab20a97ca48cee6,"fixed a warning in f2c_lite.c for umath/lapack_lite
added chosolve and poinv, they need testing.
",numpy/core/src/umath/lapack_lite/f2c_lite.c,numpy/core/src/umath/umath_linalg.c.src
05f9401a646953a44a4ecdbcc09525590e977474,"fixed gufuncs so that they use the proper signature (mwiebe fix present)
",numpy/core/src/umath/umath_linalg.c.src
c47ee064940e674dace17fba46ab8f8e2aa38308,"added information about the contents of umath-linalg module
",numpy/core/src/umath/umath_linalg_content.txt
26d6bef5156399e8819dde396f4ffbe170df8e4e,"added plenty of simple functions (quadratic_form plus all the ""inspired from PDL"" ufuncs). Only missing from ""inspired from PDL"" is matrix_multiply3.
",numpy/core/src/umath/umath_linalg.c.src
c85e83390e57de517deabf033f1e69d9102b5dd1,"added some single precision functions to f2c_lite.c that were missing and needed by out library. It seems to work now on Linux.
",numpy/core/setup.py,numpy/core/src/umath/lapack_lite/f2c_lite.c
c679f7b91c6bb49603aec432b7a92879e8818437,"lapack_lite for builds of umath_linalg without an optimized lapack in the system.
",numpy/core/setup.py,numpy/core/src/umath/lapack_lite/blas_lite.c,numpy/core/src/umath/lapack_lite/dlamch.c,numpy/core/src/umath/lapack_lite/dlapack_lite.c,numpy/core/src/umath/lapack_lite/f2c.h,numpy/core/src/umath/lapack_lite/f2c_lite.c,numpy/core/src/umath/lapack_lite/python_xerbla.c,numpy/core/src/umath/lapack_lite/zlapack_lite.c,numpy/core/src/umath/umath_linalg.c.src
7f3afca2c977fe68bc7c02a58cbe5af4a4dba0e6,"modified the code so it just used external definitions of blas/lapack functions (as is made in linalg module). Changed some code so that it uses BLAS instead of cblas (the fortran functions) also in line with what it is done on linalg. Modified the matrix multiply code, made it simpler and adapted to use blas (it was using cblas with CblasRowMajor, that is not available in the fortran function.
",numpy/core/src/umath/umath_linalg.c.src
4c9f2865d3151d24369b8ff033265b33b6559ea2,"svd implemented. Single output working. Multiple options not functional due to a bug in the harness.
",numpy/core/src/umath/umath_linalg.c.src
234523c10405144747951104e4355dcc0839eddc,"working eig and eigvals priority 2 functions.
",numpy/core/src/umath/umath_linalg.c.src
c1efc4813b2cc4a21c5688d728a7085831992480,"fixed possible issues with BLAS _copy (0 is not a valid incx/incy value and the functions are not guaranteed to work with them).
also got cholesky working.
",numpy/core/src/umath/umath_linalg.c.src
67820dd267a6b4533242c6d40c4796d48e21bbe2,"solve1 and inv working
",numpy/core/src/umath/umath_linalg.c.src
2a6d450230c5f4bf78e2a0e0f3cd38ef2f0bf3e4,"solve gufunc working
",numpy/core/src/umath/umath_linalg.c.src
cf9494197867ad80d69a6fdff85be3e32943ba67,"eigh and eigvalsh working
",numpy/core/src/umath/umath_linalg.c.src
1db3f9b6fb3e83a9a80fad9046408cd548295d65,"det and slogdet working
",numpy/core/src/umath/umath_linalg.c.src
65bb3e78398e1bb702e71e5c12536848d9e1c7ca,"refactored some code, make it cleaner overall and ready to reuse some code from the matrix_multiply in other gufuncs
",numpy/core/src/umath/umath_linalg.c.src
07c02371ef1c032decea7952578c5120ac6340c9,"inner1d and mat_mult implemented using blas.
",numpy/core/setup.py,numpy/core/src/umath/umath_linalg.c.src
3ce193b332bab73810376ee304308f81ff3e9afb,"created a new module to hold linalg ufuncs.
",numpy/core/bento.info,numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/umath_linalg.c.src
230db778beaca454a95b0fb706330b6dcbd4a8f8,"Merge pull request #3005 from jphalip/in1d-inverse

ENH: add `inverse` parameter to numpy.in1d().",doc/release/1.8.0-notes.rst,numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
a3f2e0461eeec2077e7ed1f71bf1e0756e893257,ENH: add `invert` parameter to numpy.in1d().,doc/release/1.8.0-notes.rst,numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
d1b195d943da80cafd42f935fa9ec920eb18c7e5,"Merge pull request #3210 from ivanov/github-issues-linked

DOC: point to the github issues page",doc/source/about.rst,doc/source/bugs.rst
2f7de030d5029ccc8fbdf261c51ce50920ccd032,"DOC: incorporate @charris' suggestions

* Trac no longer used
* Openining ""new issue"" on GitHub
",doc/source/about.rst,doc/source/bugs.rst
7fe071ceed336b0e118c384c8ae6e469faa50102,"DOC: point to the github issues page
",doc/source/about.rst,doc/source/bugs.rst
f85bdf48aadf7b5a5f575370b589805fed190a6c,"Merge pull request #3208 from charris/2to3-apply-repr-fixer

2to3: Apply `repr` fixer.",numpy/_import_tools.py,numpy/core/records.py,numpy/distutils/tests/test_misc_util.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/use_rules.py,numpy/ma/mrecords.py,numpy/testing/utils.py,tools/py3tool.py
011f8a20044a3982b2441cb53876e9689a3f6d0c,"2to3: Apply `repr` fixer.

This replaces python backtics with repr(...). The backtics were mostly
used to generate strings for printing with a string format and it is
tempting to replace `'%s' % repr(x)` with `'%r' % x`. That would work
except where `x` happened to be a tuple or a dictionary but, because it
would be significant work to guarantee that and because there are not
many places where backtics are used, the safe path is to let the repr
replacements stand.

Closes #3083.
",numpy/_import_tools.py,numpy/core/records.py,numpy/distutils/tests/test_misc_util.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/use_rules.py,numpy/ma/mrecords.py,numpy/testing/utils.py,tools/py3tool.py
01aa27a436476d87c4d986a80225d23179eebb44,"Merge pull request #3206 from charris/forward-port-1.7.1-notes

ENH: Forward port `1.7.1` release notes.",doc/release/1.7.1-notes.rst
4a669b12e78d085f1449fdc08be3dbf9a5f5dffe,"ENH: Forward port `1.7.1` release notes.
",doc/release/1.7.1-notes.rst
1340fa646d414b49856314bad339b4ae8ea4c4d8,"Merge pull request #3205 from charris/2to3-apply-dict-fixer

2to3: apply `dict` fixer.",doc/summarize.py,numpy/core/_internal.py,numpy/core/code_generators/genapi.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_py.py,numpy/distutils/conv_template.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/from_template.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/lib/_datasource.py,numpy/lib/arraypad.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/make_lite.py,numpy/ma/core.py,numpy/numarray/session.py,tools/c_coverage/c_coverage_report.py,tools/py3tool.py
756d13449aa3d0b6be4439e87c5cb520c419d30b,"Merge pull request #3188 from asford/master

Fixing numpy.void pickling.",numpy/core/src/multiarray/scalarapi.c,numpy/core/tests/test_regression.py
6339930ff42f52259e898b18eb6e9dd7d1be4f86,"MAINT: Fixup more dictionary fixer fixes.

Most of these are places where an iterator will work as well as a
list, but two fix places where `iterkeys` was introduced which is
a bug.
",numpy/core/_internal.py,numpy/core/code_generators/genapi.py,numpy/core/numerictypes.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py
ef76d4928ea1591d382fceaa416678907ea76098,"Merge pull request #3202 from charris/2to3-reduce-fixups

MAINT: Cleanup some imports involving reduce.",numpy/core/arrayprint.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/lib/arrayterator.py,numpy/lib/tests/test_arrayterator.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/timer_comparison.py,numpy/oldnumeric/ma.py,tools/py3tool.py
a0a2e3cda794d3119f8534c13d031e0de5130b3f,"Resolving void scalar PyArray_Scalar constructor style issues.
",numpy/core/src/multiarray/scalarapi.c,numpy/core/tests/test_regression.py
aab46a78cefe9fbd46104496ffad17667784a3f5,"2to3: apply `dict` fixer.

In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` are
iterators. This causes problems when a list is needed so the 2to3 fixer
explicitly constructs a list when is finds on of those functions.
However, that is usually not necessary, so a lot of the work here has
been cleaning up those places where the fix is not needed. The big
exception to that is the `numpy/f2py/crackfortran.py` file. The code
there makes extensive use of loops that modify the contents of the
dictionary being looped through, which raises an error. That together
with the obscurity of the code in that file made it safest to let the
`dict` fixer do its worst.

Closes #3050.
",doc/summarize.py,numpy/core/_internal.py,numpy/core/code_generators/genapi.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_py.py,numpy/distutils/conv_template.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/from_template.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/lib/_datasource.py,numpy/lib/arraypad.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/recfunctions.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/make_lite.py,numpy/ma/core.py,numpy/numarray/session.py,tools/c_coverage/c_coverage_report.py,tools/py3tool.py
3c70e20a5f1aed4098ba66d21e6a1f60edc6fddd,"Merge pull request #3203 from charris/2to3-apply-print-fixer

2to3: Apply `print` fixer.",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/cython/setup.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/pyrex/setup.py,doc/source/conf.py,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py,doc/summarize.py,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_exec_command.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/setup.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/setup.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setup.py,setupegg.py,tools/allocation_tracking/setup.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/py3tool.py,tools/test-installed-numpy.py,tools/win32build/build.py,tools/win32build/doall.py,tools/win32build/misc/x86analysis.py,tools/win32build/prepare_bootstrap.py
bb726ca19f434f5055c0efceefe48d89469fcbbe,"2to3: Apply `print` fixer.

Add `print_function` to all `from __future__ import ...` statements
and use the python3 print function syntax everywhere.

Closes #3078.
",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/cython/setup.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/pyrex/setup.py,doc/source/conf.py,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py,doc/summarize.py,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_exec_command.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/setup.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/setup.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setup.py,setupegg.py,tools/allocation_tracking/setup.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/py3tool.py,tools/test-installed-numpy.py,tools/win32build/build.py,tools/win32build/doall.py,tools/win32build/misc/x86analysis.py,tools/win32build/prepare_bootstrap.py
77e09f14bdf9eeebbd20ca861cb51da3e570bb72,"MAINT: Cleanup some imports involving reduce.

Because reduce has been available in functools since Python 2.6 we
can get rid of the version checks we currently have before we import
it.

Also removes some reduce related skips in tools/py3tool.py. We were
already skipping the reduce fixer so this has no effect other than
cleaning up the code.
",numpy/core/arrayprint.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/lib/arrayterator.py,numpy/lib/tests/test_arrayterator.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/timer_comparison.py,numpy/oldnumeric/ma.py,tools/py3tool.py
7441fa50523f5b4a16c854bf004d675e5bd86ab8,"Merge pull request #3201 from charris/2to3-apply-imports2-fixer

2to3: Apply `imports2` fixer.",tools/py3tool.py
37d6468d953703f9918b7d1ff01db10ece4a545c,"MAINT: Append comma to last item tools/py3tool.py skipped fixers.

Makes it easier to put in the next fixer.
",tools/py3tool.py
8d48c8f201be60748b83cf62a233c46033dcba47,"2to3: Apply `imports2` fixer.

No files were changed by this fixer, so add it to the list of
fixers to be skipped by 2to3.

Closes #3181.
",tools/py3tool.py
49a8902a673d6fb2ba9ca446fc652aa9d2e55e1b,"Merge pull request #3191 from charris/2to3-apply-imports-fixer

2to3: Apply `imports` fixer.",doc/cdoc/numpyfilter.py,doc/numpybook/runcode.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/plot_directive.py,numpy/__init__.py,numpy/core/__init__.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/distutils/cpuinfo.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py,numpy/distutils/tests/test_exec_command.py,numpy/f2py/__init__.py,numpy/f2py/doc/collectinput.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_utils.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/numarray/functions.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/misc.py,numpy/testing/utils.py,setup.py,tools/py3tool.py,tools/win32build/build.py
3c8fc14665548c71a9cd144b2e16d9309a92e255,"Merge pull request #3200 from njsmith/travis-full-tests

[BLD] Run 'full' test suite on Travis, including 'slow' tests",.travis.yml
190f7df6dff4f06b5d61e04ab375185089fc91dd,"MAINT: Replace xrange by range.

A new use of xrange wriggled it's way in, this replaces it with range
for python3 compatibility.
",numpy/core/tests/test_nditer.py
129ae08a8a0ea7393963a5f221832ad1de8bd49f,"[BLD] Run 'full' test suite on Travis, including 'slow' tests

There's no reason *not* to run the full test suite on Travis, so long
as we fit in under the time limit. And no way to find out if we fit
under the time limit except to try ;-).
",.travis.yml
6d2665626e40f346bb5af8d780579f5a429ff9ba,"Merge pull request #3197 from charris/fix-release-notes-formatting

MAINT: Fix release notes formatting.",doc/release/1.3.0-notes.rst,doc/release/1.4.0-notes.rst,doc/release/1.5.0-notes.rst,doc/release/1.6.0-notes.rst,doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/release/1.7.0-notes.rst,doc/release/1.8.0-notes.rst
686905399753267f4447daa5a0bff8ff49098fa0,"MAINT: Fix release notes formatting.

Sphinx was complaining about the title/heading hierarchy. This
fixes those complaints.
",doc/release/1.3.0-notes.rst,doc/release/1.4.0-notes.rst,doc/release/1.5.0-notes.rst,doc/release/1.6.0-notes.rst,doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/release/1.7.0-notes.rst,doc/release/1.8.0-notes.rst
d31067827d01966c3923ed140b997f6796424f93,"Merge pull request #2965 from charris/fix-qr-mode

Fix qr mode",doc/release/1.8.0-notes.rst,numpy/linalg/linalg.py,numpy/linalg/tests/test_deprecations.py,numpy/linalg/tests/test_linalg.py
ca77e31947b74feded3d69a282e638fa2e9ebf7c,"Merge pull request #460 from endolith/regex_formatting

DOC: Formatting fixes using regex",doc/sphinxext/numpydoc/tests/test_docscrape.py,numpy/add_newdocs.py,numpy/build_utils/common.py,numpy/core/arrayprint.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/setup_common.py,numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polyutils.py,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
961a28f828fd7075af1e548a294c1443fdf4a215,"Merge pull request #3162 from seberg/unsafe-strides

Revert changes to contiguous flags definition while creating NPY_TEST_UNSAFE_STRIDES",.travis.yml,numpy/core/bscript,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_api.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,tools/test-installed-numpy.py
4394515cd5632a7f110993ff75033d407d10861d,"BUG: Fix stray '.' in import statement.

There was a stray period at the end of an import statement in
`doc/cdoc/numpyfilter.py`. Looks like a cut and paste error that
was fixed elsewhere but escaped there because the module isn't
tested. A search shows that this was the only spot in which the
error was still present.
",doc/cdoc/numpyfilter.py
507b09e523e11610ea7f9bf3350b2258120ab0d2,"TST: Add NPY_RELAXED_STRIDES_CHECKING to Travis
",.travis.yml,tools/test-installed-numpy.py
09a52ed47bb26498c97a579ce1147861df696d84,"2to3: Apply `imports` fixer.

The `imports` fixer deals with the standard packages that have been
renamed, removed, or methods that have moved.

cPickle      -- removed, use pickle
commands     -- removed, getoutput, getstatusoutput moved to subprocess
urlparse     -- removed, urlparse moved to urllib.parse
cStringIO    -- removed, use StringIO or io.StringIO
copy_reg     -- renamed copyreg
_winreg      -- renamed winreg
ConfigParser -- renamed configparser
__builtin__  -- renamed builtins

In the case of `cPickle`, it is imported as `pickle` when python < 3 and
performance may be a consideration, but otherwise plain old `pickle` is
used.

Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`
function in the `io` module, available since Python 2.6, but it expects
unicode whereas `StringIO.StringIO` expects ascii. The Python 3
equivalent is then `io.BytesIO`. What I have done here is used BytesIO
for anything that is emulating a file for testing purposes. That is more
explicit than using a redefined StringIO as was done before we dropped
support for Python 2.4 and 2.5.

Closes #3180.
",doc/cdoc/numpyfilter.py,doc/numpybook/runcode.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/plot_directive.py,numpy/__init__.py,numpy/core/__init__.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/distutils/cpuinfo.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py,numpy/distutils/tests/test_exec_command.py,numpy/f2py/__init__.py,numpy/f2py/doc/collectinput.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_utils.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/numarray/functions.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/misc.py,numpy/testing/utils.py,setup.py,tools/py3tool.py,tools/win32build/build.py
a939f2aa83e7d37d5e35e7c2a8c539c59f682598,"Merge pull request #3178 from charris/2to3-apply-import-fixer

2to3 apply import fixer",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/source/conf.py,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/summarize.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_exec_command.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setupegg.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/py3tool.py,tools/test-installed-numpy.py,tools/win32build/build.py,tools/win32build/doall.py,tools/win32build/misc/x86analysis.py,tools/win32build/prepare_bootstrap.py
5b74363e020f90f09dd41916dfc749d56421b3fa,"Merge pull request #3185 from charris/fix-pull-475

BUG: Raise immediate error in ctypes.load_library when library is bad.",numpy/ctypeslib.py
7dad2d3596ff09ef7a7e33c3dfb593a0ba6321f6,"Fixing void scalar PyArray_Scalar constructor when *base==null.

During call to `PyArray_scalar` a `PyVoidScalarObject` is created, and
it's `obval` field set to a newly allocated block of memory of the
correct item size. With a null `base` member, the subsequent call to
`copyswap` can not determine an item size and returns without copying.
Adding direct copy of input data if no `base` is provided, as no swap is
required.

Adding regression test for constructor and original pickle repro case.

Resolves numpy/numpy#1550.
",numpy/core/src/multiarray/scalarapi.c,numpy/core/tests/test_regression.py
7394fa6344aeea1bf941af0869f9a78c9e017c7c,"DOC: Document the new qr modes in the 1.8 release notes.
",doc/release/1.8.0-notes.rst
d0b6a7a48e4662b3c2788d541b06ad5d46a2f177,"TST: Add more tests for qr factorization.

The new tests cover the new modes 'complete' and 'raw'. The testing of
the 'reduced', aka 'full' mode is improved and tests are added for the
deprecation of the 'full' and 'economic' modes. A new file
`numpy/linalg/tests/test_deprecations.py` was added for the deprecation
tests.
",numpy/linalg/tests/test_deprecations.py,numpy/linalg/tests/test_linalg.py
e9dfb3bc760088fa50e14aed363041a7aac6aa29,"ENH: Add `raw`, `reduced`, `complete` modes to qr factorization.

If K = min(M, N) where the matrix to be factored has dimensions MxN,
then

'reduced'  : returns q, r with dimensions (M, K), (K, N) (default)
'complete' : returns q, r with dimensions (M, M), (M, N)
'r'        : returns r only with dimensions (K, N)
'raw'      : returns h, tau with dimensions (N, M), (K,)
'full'     : alias of 'reduced', deprecated
'economic' : returns h from 'raw', deprecated.

The options 'reduced', 'complete, and 'raw' are new. The default is
'reduced' and to maintain backward compatibility with earlier versions
of numpy both it and the old default 'full' can be omitted. Note that
array `h` returned in 'raw' mode is transposed for calling Fortran. Both
the 'full' and 'economic' modes are deprecated. For backwards
compatibility the modes 'full', 'economic' may be passed using only the
first letter but all others must be spelled out.
",numpy/linalg/linalg.py
134bcb0057007c4d821b911eb7b0df1797b054bd,"Merge pull request #349 from ericfode/float16pow

First attempt at BF for 2165 and added better tests for scalarmath pow function",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py
8b42156e8171802dda128cb23f7a0ce52c085e5a,"Update scalarmathmodule.c.src

Got rid of some white space in scalarmathmodule.c.src",numpy/core/src/scalarmathmodule.c.src
5819d28c02e4331318ac05824921d457e48d3c00,"BUG: Raise immediate error in ctypes.load_library when library is bad.

This is a fixup of PR #475 due to JeromeRoy. The problem addressed is
that when multiple errors were encountered attempting to import a
library file, only the last one was preserved. The proposed fix is to
raise an error immediately when a file of the correct name fails to
import, and raise a later error if no file is found but no errors are
raised in the search.

Closes #474, #475.
",numpy/ctypeslib.py
a6385b3a99e508e0d2ed5a6397da29d05da27ceb,"Merge pull request #273 from dlax/fix/roll

somes fixes for the roll function",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
5ad97ea70b126a1a13abc4d7500f0281ba4ddd50,"Allow threads for FFT calculations

This patch adds lines to release the Global Interpreter Lock
while calculating an FFT with fftpack.
",numpy/fft/fftpack_litemodule.c
0563ebf44c3d333a9abdc6530cd74514455f99c9,"Merge pull request #3153 from seberg/issue-3142

BUG: Do not reuse nditer buffers when not filled enough.",numpy/core/src/multiarray/nditer_api.c,numpy/core/tests/test_nditer.py
d3edb4e84e3630320a3f577a83113f086cc1b563,"Merge pull request #3104 from seberg/nditer-allow-0d

Make AdvancedNew iter more 0-d aware",doc/release/1.8.0-notes.rst,doc/source/reference/c-api.iterator.rst,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_einsum.py,numpy/core/tests/test_nditer.py,numpy/lib/index_tricks.py
7af1c6701673187b7d895b7646204d774bffc557,"API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKING

This largly reverts the changes to the flags setting api making the
newer preferable unsafe flags setting available through the
NPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meant
for testing if code will stop working when the flags definition is changed.

The old definition is modified in some details to previously to enforce
safer strides (which was not the case before). This means that ndim==1
size==1 arrays are not necessarily considered contiguous. Also empty
arrays are not considered contiguous in some cases that were contiguous
before, and the rule that an array can only be both C and F-contiguous
if it is one (or zero) dimensional is relaxed, as it is incorrect for
size <= 1 arrays.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_api.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
3a4ed02bca07d0995aedc8846b7aeac7af3bf310,"ENH: Relax aligned flag for shape[i] <= 1

In this case, either the dimensions stride will never be used to
access an element, so that it does not matter to the data alignment,
or the array has a size of 0 and is thus never unaligned.

Relaxed align flag is only active if NPY_RELAXED_STRIDES_CHECKING
was set during compile time.
",numpy/core/src/multiarray/common.c
79d22dcef7947347660cbb953cb54ee3b38822f5,"BLD: Add NPY_RELAXED_STRIDES_CHECKING flag

This flag will toggle to a new definition for the contiguous flags
where only the memory layout is forced to be correct. As a particular
example this means that np.ones((3,1)) can be both C and F-Contiguous
and its stride[-1] can be arbitrary but the array still contiguous.

The flag will also make most new arrays be created with MAX_INTP as
stride so that unsafe usage of the stride will surface more commonly.
",numpy/core/bscript,numpy/core/setup.py
fd6f038b2e003588d3c0f75a6111b3eb8616f40f,"Merge pull request #3179 from charris/fix-resource-warning

MAINT: Fix python3 ResourceWarning when running test_exec_command.py",numpy/distutils/tests/test_exec_command.py
15b7f9b6519d3b5c3d4ddc2a23459ca089527fc0,"MAINT: Fix python3 ResourceWarning when running test_exec_command.py

The tests in test_exec_command.py used with blocks with a context
manager that could redirect stderr and stdout to temporary files but
those files were not closed on exit from the block.
",numpy/distutils/tests/test_exec_command.py
670b12649e34164514fc4981d8fbacfadf1f389e,"2to3: Add `from __future__ import ...` to some files that were missed.

With the exception of numpy/distutils/tests/test_exec_command.py, all
of these files are script files in tools/osxbuild and tools/win32build.
The import in the  script files omits `absolute_import` as they are
not part of a package.
",numpy/distutils/tests/test_exec_command.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/win32build/build.py,tools/win32build/doall.py,tools/win32build/misc/x86analysis.py,tools/win32build/prepare_bootstrap.py
25ec6853e17e96448ce7d8f18eda2ef5290c2acf,"2to3: Add `from __future__ import ...` to new files.

The new files that came in when doc/sphinxext/numpydoc was restructured
as a package with test stubs did not have `from __future__ import ...`.
This fixes that omission.
",doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py
d4b88c1dbd6898fb6fcebc97f36b421999340f71,"2to3: Use absolute imports.

The new import `absolute_import` is added the `from __future__ import`
statement and The 2to3 `import` fixer is run to make the imports
compatible. There are several things that need to be dealt with to make
this work.

1) Files meant to be run as scripts run in a different environment than
files imported as part of a package, and so changes to those files need
to be skipped. The affected script files are:

    * all setup.py files
    * numpy/core/code_generators/generate_umath.py
    * numpy/core/code_generators/generate_numpy_api.py
    * numpy/core/code_generators/generate_ufunc_api.py

2) Some imported modules are not available as they are created during
the build process and consequently 2to3 is unable to handle them
correctly. Files that import those modules need a bit of extra work.
The affected files are:

    * core/__init__.py,
    * core/numeric.py,
    * core/_internal.py,
    * core/arrayprint.py,
    * core/fromnumeric.py,
    * numpy/__init__.py,
    * lib/npyio.py,
    * lib/function_base.py,
    * fft/fftpack.py,
    * random/__init__.py

Closes #3172
",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/source/conf.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/summarize.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setupegg.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/py3tool.py,tools/test-installed-numpy.py
40742184df68fc01f3392c9865f35d5402e74b01,"Merge pull request #3122 from charris/2to3-apply-xrange-fixer

2to3: Replace xrange by range and use list(range(...)) where needed",doc/neps/missing-data.rst,doc/source/reference/arrays.classes.rst,numpy/add_newdocs.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/machar.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath_complex.py,numpy/distutils/misc_util.py,numpy/f2py/crackfortran.py,numpy/f2py/tests/util.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/lib/arraypad.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/shape_base.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_twodim_base.py,numpy/linalg/linalg.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/numarray/functions.py,numpy/oldnumeric/__init__.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,tools/py3tool.py
db75eb44a31fe1bb04a0f673fd459614bfd02b85,"Merge pull request #3168 from juliantaylor/numarray-fixes

fix undefined function and add integer divisions",numpy/numarray/functions.py
b1d093ef19ca29c84bfc2fab4812a783599760dd,"Merge pull request #3141 from ewmoore/test_fast_power

TST: test_umath: fix wrong indent in test_fast_power",numpy/core/tests/test_umath.py
b995d00e2e54bc6ff97f21bd179d1fc4dc3c92cb,"BUG: Rebased tools/py3tool.py was missing `,` in list.
",tools/py3tool.py
91aa03f4a1065319e85c6ee90306971c301fd58c,"2to3: Replace xrange by range and use list(range(...)) where needed

In python3 range is an iterator and `xrange` has been removed. This has
two consequence for code:

    1) Where a list is needed `list(range(...))` must be used.
    2) `xrange` must be replaced by `range`

Both of these changes also work in python2 and this patch makes both.

There are three places fixed that do not need it, but I left them in
so that the result would be `xrange` clean.

Closes #3092
",doc/neps/missing-data.rst,doc/source/reference/arrays.classes.rst,numpy/add_newdocs.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/machar.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath_complex.py,numpy/distutils/misc_util.py,numpy/f2py/crackfortran.py,numpy/f2py/tests/util.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/lib/arraypad.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/shape_base.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_twodim_base.py,numpy/linalg/linalg.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/numarray/functions.py,numpy/oldnumeric/__init__.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_utils.py,tools/py3tool.py
e2726316605ab15e94500a78cf2f58e42fa83dd4,"fix undefined function and add integer divisions
",numpy/numarray/functions.py
1a816c79f7212102634c28e0896547671d347a60,"Merge pull request #3167 from certik/forwardport3165

TST: open the TemporaryFile in ASCII mode",numpy/distutils/tests/test_exec_command.py
df813e52675cf873d4b82347b53ed8eda5c6cc06,"TST: open the TemporaryFile in ASCII mode

This should fix gh-3165.

Conflicts:
	numpy/distutils/tests/test_exec_command.py
",numpy/distutils/tests/test_exec_command.py
c96c69bf2c133c9c68480e3cb532693fb942c051,"Merge pull request #3128 from certik/pull-request-3127

BUG: fix issue with distutils.exec_command introduced in 1.7.0.",numpy/distutils/exec_command.py,numpy/distutils/tests/test_exec_command.py
3830fcc99443cd479d4dd3fea5217c75396f9f3f,"merge conflict
"
0d35127755ba6812e722a311bfab5e6523c444bb,"DOC: regex-assisted fixes of definition list formatting
",numpy/core/arrayprint.py,numpy/lib/_iotools.py,numpy/lib/format.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/polynomial/polyutils.py
653a6fd443c237842d7a7069d929fb2892dbfe85,"DOC: Used regex to find colons missing spaces which render wrong online, also other spacing or formatting mistakes
",doc/sphinxext/numpydoc/tests/test_docscrape.py,numpy/add_newdocs.py,numpy/build_utils/common.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/setup_common.py,numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/lib/arraypad.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
1e6d6e6272a1ca83c8e45d33c50268cfa4b32511,"TST: test no reuse of non-existing buffers in nditer

This slightly changes the test to cover more cases including
the one where buffers are sometimes used and sometimes not.
",numpy/core/tests/test_nditer.py
793e83d06b2c23cdfe9a1b3abc5e16eeab3203c9,"BUG: no buffer reuse in nditer, if there was no buffer previously

If the buffer is used or not can possible change during iteration.
In this case, the buffer cannot be reused if it never existed...
",numpy/core/src/multiarray/nditer_api.c
12dce71414f546bdad87bf8eb2a7f802e315b235,"TST: Add (slow) nditer reduce buffer reuse test
",numpy/core/tests/test_nditer.py
5e8b322ea4ac4acf33bb89d7bdc4f3397d047cb4,"BUG: Do not reuse nditer buffers when not filled enough.

This checks if the previous time around, the buffers were filled
with as much data as they would be filled this time around. Since
This is difficult for the initial loop before reusing is activated
because in that case the buffer may be larger then just the
first outer reduce dimension. In that case do not allow reuse
unless the index along that dimension was 0.
When the inner reduce index is not 0, then also the reusing of
the buffer is dangerous.
",numpy/core/src/multiarray/nditer_api.c
1402d2cd75068c319994705316984e7e90f6eab4,"removed the note about testResize1 failing in testArray.py
",doc/swig/test/Array.i
91f083a694e9c9185b6a2e10275a0616d18064a6,"fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size
",doc/swig/test/Array2.h,doc/swig/test/testArray.py
4dcb06796b290ae29d4e73ad995d219087f2e949,"Minor adjustments to numpy.i

This includes so formatting adjustments, the removal of two unused
arguments for the make_fortran() function, fixing the number of
supported typemap signatures, including the ARGOUT_ARRAY4 typemap
signature in the comments section, and renumbering the typemap
signatures.
",doc/swig/numpy.i
179985fb75980d4828d1ce433121d8cbeddb67a6,"Updated numpy.i testing documentation

Simple updates to include proper statistics on the number of typemap
signatures supported and the number of individual unit tests
implemented.
",doc/source/reference/swig.testing.rst
897f335dd3a379b5dcbd25029d3cce1107c9fd42,"Updated the numpy.i documentation

The RST documentation file is now consistent with the C macros, C
functions, and list of typemap signatures of the latest numpy.i file.
",doc/source/reference/swig.interface-file.rst
e58c22b79f13ddc0741228c28f22b1dc5b326bb3,"TST: test_umath: fix wrong indent in test_fast_power

Also, use assert_ instead of assert
",numpy/core/tests/test_umath.py
ed4c76b515875a98dc8531683791b211ef5edd12,"Initialize all DATA_TYPE* data_temp variables to NULL
",doc/swig/numpy.i
64d04cd32c431d63ee8a8252b65920a796c88f0f,"Added Egor's ARGOUTVIEWM_ARRAY3 typemaps
",doc/swig/numpy.i
cdf04e9ae34f47aaa68e6d2c6e8a5760fb067c98,"Re-instated a Python 3 fix
",doc/swig/numpy.i
37e75e6e02cd9c48fe24ec0b4e700d9461b03610,"Removed doc from list of sub-directories

The doc directory has been moved elsewhere, so I removed the reference
to it in the Makefile.
",doc/swig/Makefile
671cde1471d56fa71f7a70863b64147b9b2eeb0b,"Upgrade numpy.i

The numpy.i file is now compliant with version 1.7 deprecations, but
also works with previous versions of numpy.  I have tested back to
numpy 1.4.1.

Added 4D typemaps and memory-managed typemaps.  These were supplied by
Egor Zindy.

Fixed bugs in 3D typemaps.  I was referencing $3 when I should have
been referencing $4.  Thanks to Egor Zindy for catching this.
",doc/swig/numpy.i
c7fff1bbc764c2be9adc771166b6aeac35ecaf7e,"Got rid of a unit test

This test fails after updating numpy.i to deal with deprecated code.
My investigation into the source of the failure is that the test never
should have passed, so I commented it out.  I could be wrong.
",doc/swig/test/testFortran.py
5099683c351929e938985fd770b0a03cf7285ecb,"TST: skip general test on non-posix platforms

Add a comment explaining the issue.
",numpy/distutils/tests/test_exec_command.py
36c43214d25101c7acd63e0394877b5e04661639,"TST: Redirect the other stream to temp. file

Now things behave the same if executed with either of:

nosetests
nosetests -s
",numpy/distutils/tests/test_exec_command.py
92770f4c6d6b74ee8788e621b67e757c1a21138e,"Implement separate checking for stdout and stderr

And enable a test for this that was failing before.
",numpy/distutils/exec_command.py,numpy/distutils/tests/test_exec_command.py
2fbdd9903fc9bf6e1fe797e92c0157abd67850ce,"TST: add robust tests for exec_command()

First, we test both stdout and stderr.

Second, we now test both _exec_command_posix() and _exec_command(), see
numpy/distutils/exec_command.py. This reveals a bug in the implementation which
will be fixed in the next commit. For now the failing test is commented out so
that all tests still pass.
",numpy/distutils/tests/test_exec_command.py
bd7104cef45be9a4250cb67af9225c9606498a51,"Merge pull request #3130 from mwiebe/setbaseobj_doc

DOC: Add mention of PyArray_SetBaseObject stealing a reference",doc/source/reference/c-api.array.rst
5a3ecafe1c7a57db473f926eb4be5a4040ec2344,"DOC: Add mention of PyArray_SetBaseObject stealing a reference
",doc/source/reference/c-api.array.rst
6c6194a42cd0b5f47cfa7d43d7ae71c6b5e5ae84,"PEP8: don't use \
",numpy/distutils/exec_command.py
7c3b6dd33ec8bee517f1333e1dd0d4fb7078d01c,"FIX: add _supports_fileno() for testing fileno()

The new _supports_fileno() function works in all versions of Python.
The problem was that in Python 2.x, the fileno() method of StringIO() is
missing, while in Python 3.x, it is present, but raises an exception.
",numpy/distutils/exec_command.py
ff01555976cbbac5cb1ee9ecabc170a9d6886641,"BUG: fix issue with distutils.exec_command introduced in 1.7.0.

Closes gh-2999 and gh-2915.

There are several packages (nose, scipy.weave.inline, Sage inline Fortran) that
replace stdout, in which case it doesn't have a fileno method.  This method was
attempted to be used (change in gh-2766 to fix a py3k issue).
",numpy/distutils/exec_command.py,numpy/distutils/tests/test_exec_command.py
bbcfcf6ad3cbb1cbdc348161ee44f729d41c09d1,"Merge pull request #3123 from maxalbert/master

Typo fix in FFT docs",numpy/fft/info.py
c3fedb3434f43e05adb0af822b2ed3a807f7382e,"DOC: Fix typo in fft docs (the indexing variable is 'm', not 'n').
",numpy/fft/info.py
e108e1c43466cfa34eb2ef7899c2188b0dbbb5de,"Merge pull request #3121 from charris/2to3-fix-for-in-f_dot_readlines

2to3: Remove xreadlines and replace f.readlines() by f where valid.",numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/distutils/command/build_src.py,numpy/distutils/command/install.py,numpy/distutils/conv_template.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/from_template.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,tools/c_coverage/c_coverage_report.py,tools/py3tool.py,tools/win32build/misc/x86analysis.py
342f074eb412e4cc19ab31a35a4ca04449e61597,"2to3: Remove xreadlines and replace f.readlines() by f where valid.

An open file `f` has been an iterator since python2.3 and
`f.xreadlines()` is no longer needed, so replace it with `f`. Also
replace `f.readlines()` with `f` where an iterator will do. The
replacement of `f.readlines()` is not critical because it is a list in
both python2 and python3, but the code is a bit cleaner.

Closes #3093
",numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/distutils/command/build_src.py,numpy/distutils/command/install.py,numpy/distutils/conv_template.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/from_template.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,tools/c_coverage/c_coverage_report.py,tools/py3tool.py,tools/win32build/misc/x86analysis.py
9311fb7e861e2c8eb686abded01c059b49f0b5e4,"Merge pull request #3120 from charris/2to3-remove-raw_input

2to3:DEP: Remove interactive setup and gnu compiler configuration.",numpy/distutils/core.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/interactive.py,tools/py3tool.py
baeaeac6885d67238321101863a7753d366c535e,"2to3:DEP: Remove interactive setup and gnu compiler configuration.

These havn't been deprecated, but I think few have heard of them, much
less used them. Before this change, running setup.py without any
arguments would result in interactive help. This patch removes that
interactive help and lets setup print its usual list of commands and
options.

All the script uses of the numpy/distutils/fcompiler compilers look
quite broken to me, but I have tried to maintain compatibility with the
earlier version of gnu.py after the removal of `raw_input`.

These removals solve an incompatibility between Python3 and Python2.
The current interactive setup help uses `raw_input`, which has been
removed in python3 and replaced by `input`.  However, python2 already
has an `input` that has different semantics.  Rather than deal with
this, I think it simpler to keep both `raw_input` and `input` out of
numpy.

Closes #3063
Closes #3079
",numpy/distutils/core.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/interactive.py,tools/py3tool.py
3ba223e867dd6a2bda130d0630ee9aad3c32ae97,"Merge pull request #3114 from charris/fix-resource-warnings

Fix resource warnings",numpy/distutils/system_info.py,numpy/lib/tests/test_io.py
e1055868eb6c015a568f0ccff29b37d1e3970242,"Merge pull request #2992 from seberg/choice-object-scalar

BUG: fix random.choice scalar object result and disallow 0-d arrays",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
66ffc58fb390c3953f9e3047ed9da54329af6baf,"MAINT: regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
a530098e816e1164efdb356ac2280ba25bfb1c7f,"BUG: fix random.choice scalar object result and disallow 0-d arrays

Object arrays failed due to bad check for finding out if the result should
be a scalar type and not an array when size=None. Also in this case the
creation of the new array was wrong. This should be fixed with this.

The second fix is to forbid 0-d arrays. Allowing 0-d arrays does not
make much sense. But it is dangerous because for example floats will
be interpreted as 1-d arrays, while one may expect that they are interpreted
as integers. This also saves the trouble of reliably detecting all integers...
",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
31a68dde93137eef779addb005f82ce0a57585e4,"TST: Get rid of a ResourceWarning.

I'm not sure this is the right fix, but test_closing_fid need to check
that garbage collection will close a file that goes through a bunch of
openings followed by dropping the reference. So the fix is to ignore
warnings during the test. I'd just ignore ResourceWarning, but it does
not look to be a built in warning in Python 2.7.
",numpy/lib/tests/test_io.py
96ea318b10e31c405798a3f96d93b418d188969d,"MAINT: Get rid of a ResourceWarning.

This one in numpy/distutils/system_info.py. Just keep an explicit
reference to a file, then close it.
",numpy/distutils/system_info.py
9a62d54e871b5c600d5227a9236471c696e50b5f,"Merge pull request #3115 from charris/2to3-skip-fixers

ENH: Skip already applied fixers when running 2to3.",tools/py3tool.py
9207b4c109158e96887d4262e3f9cbe2ab0fdf78,"ENH: Skip already applied fixers when running 2to3.

This is done in `tools/py3tool.py` by providing a list of fixers that
is passed in the call to 2to3 with with the `-x` option that tells
2to3 to skip them.

Closes #3113
",tools/py3tool.py
aa4d003598e66ff7c8392544d56ecdcc76493133,"MAINT: Remove 0-d iterator special case from ufunc_object.c
",numpy/core/src/umath/ufunc_object.c
20f44efee8eda236b222180f3c0964eb2ca6b5b2,"DOC: mention AdvancedNew iterator change in the release notes.
",doc/release/1.8.0-notes.rst
b66a15e0985eb809f735fb47e3d0ea6317f86406,"DOC: Add documentation clarifying the use of oa_ndim
",doc/source/reference/c-api.iterator.rst
22e1fe48db411b28530e2b289d509abc35346e52,"MAINT: Remove np.ndindex 0-d hack.
",numpy/lib/index_tricks.py
610faef24ae57bfb9e9e7f95179e1e405f4c9f0d,"TST: Add test that einsum multiplies scalars fine
",numpy/core/tests/test_einsum.py
c11fa494fd8f7efcf70097d052b13d8b25caa1ab,"TST: Add basic tests for 0-d np.nditer/np.nested_iter support
",numpy/core/tests/test_nditer.py
acce195ad306529c7f083f48a48b51876168f421,"ENH: Allow np.nditer to support scalar op_axes

Also uses oa_ndim == -1 to signal no op_axes were given. This is slightly
cleaner inside pywrap itself and is a cleaner signal for the iterator.
",numpy/core/src/multiarray/nditer_pywrap.c
2e8fcc0814486accb71aacb7d60ebcb3203f3b7a,"API: Make nditer support ndim == 0 for 0-d iterations.

There are relatively few changes necessare here. However there is a
conceptionally there are no axes for the 0-d case, and no axesdata
needs to be used. This still uses the first axisdata. Which means that
in a few places ndim == 0 is special cased or special cased to act like
ndim == 1.
It would probably be a little cleaner to to use the base pointers directly
in the 0-d case and no axes iteration at all. That would require similar
special cases though.

This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axes
are given with oa_ndim == 0 being, for the time being, dual use. Either
meaning that nothing may be given, or if something something was given
enforcing a 0-d iteration.

The necessary changes to the ufunc machinery are also done.

Documented that the dtype transfer functions do not handle the scalar
case unless even shape is set.
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_object.c
e24e0d8d41cf2b64bc4e34ee71618c10c9043e5f,"Rebase and merge pull request #330.

  Add texinfo build target for document
",doc/Makefile,doc/source/conf.py
b73eaab2fe875b0fdca1176cbdb55a4b8fcdc098,"Add texinfo build target for document
",doc/Makefile,doc/source/conf.py
6f23bce1530d032012dbd60929fb9def84c36467,"Merge pull request #3109 from njsmith/travis-check-sys-info

Travis: record some basic information about the build platform",.travis.yml
1fa4cad1ba63d6c5ea70758f42504b6c0da716d2,"Travis: record some basic information about the build platform

The question has come up sometimes about how much memory etc. we have available for Travis builds. Let's just log the relevant resource limits at the top of every build log.
",.travis.yml
b149cd5fdc03a8017036953e08d80305fe30bb53,"Merge pull request #3024 from rgommers/fix-api-deprecation

BUG: fix NPY_NO_DEPRECATED_API mechanism.",doc/HOWTO_RELEASE.rst.txt,numpy/core/code_generators/cversions.py,numpy/core/code_generators/cversions.txt,numpy/core/include/numpy/numpyconfig.h
23b87a54f2e51ba107c179e3d5486c0c9375aefd,"BUG: fix NPY_NO_DEPRECATED_API mechanism.
",doc/HOWTO_RELEASE.rst.txt,numpy/core/code_generators/cversions.py,numpy/core/code_generators/cversions.txt,numpy/core/include/numpy/numpyconfig.h
985b2674760176d7ec8d53ecc6a1a4f835a94b15,"Merge pull request #2953 from ContinuumIO/gufunc-fix

generalized ufunc signature problem fix",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
d21281a6f4070afc706da90e40802b42ceda7e99,"Merge pull request #3014 from bfroehle/f2py_unque_symbol

BUG: Choose a more unique PY_ARRAY_UNIQUE_SYMBOL in f2py.",numpy/f2py/src/fortranobject.h
2b71ffb70266592c126e2b2c9a57d3b94f87454d,"Merge pull request #3106 from seberg/remove-maskNA-nditer-doc

DOC: Remove documentation of non-existing advanced iter NA flags.",doc/source/reference/c-api.iterator.rst
398b0765c21f445db1af9e48735fe2a46f7d1efb,"DOC: Remove documentation of non-existing advanced iter NA flags.
",doc/source/reference/c-api.iterator.rst
d12dad4d42a4684d1e0a40c0105772ebab92d6bc,"Merge pull request #3026 from charris/2to3-fix-print

2to3: Put `from __future__ import division` in every python file.",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/cython/setup.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/pyrex/setup.py,doc/source/conf.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py,doc/summarize.py,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/interactive.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/setup.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/polytemplate.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setup.py,setupegg.py,tools/allocation_tracking/setup.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/py3tool.py,tools/test-installed-numpy.py
890ee94dd90769d303025e10d906f584088516d3,"Merge pull request #3102 from seberg/nditer-fix-op_axes-initialization

BUG: initialize op_axes when only itershape is given",numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_nditer.py
cabc07e185a0ffad5f8055760b385aa5cca85896,"MAINT: Make numpy/f2py/crackfortran docstring read better.

The copyright and short summary were moved to the top of the
docstring with the usage description below.
",numpy/f2py/crackfortran.py
6aa264c4bad9c89ccdd9ecd5a1cb5ef10643ec51,"2to3: Put `from __future__ import division in every python file.

This should be harmless, as we already are division clean. However,
placement of this import takes some care. In the future a script
can be used to append new features without worry, at least until
such time as it exceeds a single line. Having that ability will
make it easier to deal with absolute imports and printing updates.
",doc/cdoc/numpyfilter.py,doc/cython/run_test.py,doc/cython/setup.py,doc/example.py,doc/newdtype_example/example.py,doc/newdtype_example/floatint/__init__.py,doc/newdtype_example/setup.py,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,doc/postprocess.py,doc/pyrex/run_test.py,doc/pyrex/setup.py,doc/source/conf.py,doc/sphinxext/numpydoc/comment_eater.py,doc/sphinxext/numpydoc/compiler_unparse.py,doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py,doc/sphinxext/numpydoc/linkcode.py,doc/sphinxext/numpydoc/numpydoc.py,doc/sphinxext/numpydoc/phantom_import.py,doc/sphinxext/numpydoc/plot_directive.py,doc/sphinxext/numpydoc/tests/test_docscrape.py,doc/sphinxext/numpydoc/traitsdoc.py,doc/sphinxext/setup.py,doc/summarize.py,doc/swig/test/setup.py,doc/swig/test/testArray.py,doc/swig/test/testFarray.py,doc/swig/test/testFortran.py,doc/swig/test/testMatrix.py,doc/swig/test/testTensor.py,doc/swig/test/testVector.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/build_utils/__init__.py,numpy/build_utils/common.py,numpy/build_utils/waf.py,numpy/compat/__init__.py,numpy/compat/_inspect.py,numpy/compat/py3k.py,numpy/compat/setup.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/__init__.py,numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/getlimits.py,numpy/core/info.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/testcalcs.py,numpy/core/tests/test_api.py,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_deprecations.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_scalarprint.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/autodist.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/compat.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/interactive.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/pathccompiler.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/broadcasting.py,numpy/doc/byteswapping.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/howtofind.py,numpy/doc/indexing.py,numpy/doc/internals.py,numpy/doc/io.py,numpy/doc/jargon.py,numpy/doc/methods_vs_functions.py,numpy/doc/misc.py,numpy/doc/performance.py,numpy/doc/structured_arrays.py,numpy/doc/subclassing.py,numpy/doc/ufuncs.py,numpy/dual.py,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/collectinput.py,numpy/f2py/docs/pytest.py,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/test_size.py,numpy/f2py/tests/util.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/setup.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraypad.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arraypad.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/tests/test_utils.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_regression.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/matlib.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/setup.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_numeric.py,numpy/matrixlib/tests/test_regression.py,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/tests/test_regression.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/polynomial/__init__.py,numpy/polynomial/polytemplate.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_printing.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/print_coercion_tables.py,numpy/testing/setup.py,numpy/testing/tests/test_decorators.py,numpy/testing/tests/test_doctesting.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/tests/test_matlib.py,pavement.py,setup.py,setupegg.py,tools/allocation_tracking/setup.py,tools/allocation_tracking/track_allocations.py,tools/c_coverage/c_coverage_report.py,tools/commitstats.py,tools/py3tool.py,tools/test-installed-numpy.py
e12dc1cf32daa3e9f19295e985b640e3a04f96ea,"BUG: initialize op_axes when only itershape is given

In this case, the initialization used the number of dimensions instead
of setting it to NULL for each operand, leading to possible segmentation
faults.
",numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_nditer.py
d111fbdc1e7da219e4a30b8abd3f710b57116635,"Merge pull request #3099 from charris/2to3-methodattrs

2to3: Apply `methodattrs` fixes.",numpy/compat/_inspect.py,numpy/distutils/mingw32ccompiler.py,numpy/lib/utils.py,numpy/testing/noseclasses.py
0a5746d3c22cf296b995476bdc473a4423d7a84d,"2to3: Apply `methodattrs` fixes.

Replaces old style `f.im_func` and `f.im_class` method attributes
with `f.__func__` and `f.__class__`. Closes #3070.
",numpy/compat/_inspect.py,numpy/distutils/mingw32ccompiler.py,numpy/lib/utils.py,numpy/testing/noseclasses.py
3c13c0a925276130d66be490eed4ae337712cce2,"Merge pull request #3056 from charris/2to3-filter

2to3: Apply `filter` fixes. Closes #3053.",numpy/_import_tools.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_src.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/f2py/f2py2e.py,numpy/testing/utils.py,setup.py
02cfcb99bc976a0bfc39529999e2a0200fb9cc2a,"Merge branch '2to3-raise'

Use modern raise syntax for python 3 compatibility.

* 2to3-raise:
  2to3: Apply `raise` fixes. Closes #3077.
",doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/records.py,numpy/f2py/auxfuncs.py,numpy/lib/polynomial.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,tools/osxbuild/install_and_test.py
3655b732bd08022dab8498b44191d6c4049bc7a8,"2to3: Apply `raise` fixes. Closes #3077.

Replaces the

    raise Exception, msg:

form with

    raise Exception(msg):
",doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/records.py,numpy/f2py/auxfuncs.py,numpy/lib/polynomial.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,tools/osxbuild/install_and_test.py
d1e692d70da7532b02d752d0842987333bd76c70,"Merge pull request #3101 from charris/remove-benchmarks

REM: Remove benchmarks files.",benchmarks/benchmark.py,benchmarks/casting.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py
d1b5ea9307f2d17a13d4497d8e9516587964ccd7,"Merge pull request #3097 from charris/2to3-sys_exc

2to3: Apply `sys_exc` fixes. Closes #3086.",numpy/distutils/cpuinfo.py,numpy/f2py/diagnose.py
48df79673f81a8421421233e26f663f260bcebfd,"Merge pull request #2967 from sbyrnes321/master

DOC -- add another paragraph note to ndarray.view docs",numpy/add_newdocs.py,numpy/ma/core.py
5ce8e28a97210fac9f244e79c186433cd373999d,"Merge pull request #2988 from ewmoore/methdot2697

BUG: gh-2687 make multiarray dot method accept out array and keyword args",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py
629a2d4daa376e5639ad5106289c77b8137f9f15,"Merge branch 'enh-numpydoc'

There were some conflicts with the 2to3 work in numpy. I think I got the
fixes right.

* enh-numpydoc:
  DOC: fix doc/source/conf.py to work with Python 3
  BUG: numpydoc: check that it works with sub-classes
  TST: numpydoc: more class tests
  BUG: numpydoc: fix bugs in attribute docstring extraction + improve presentation
  TST: numpydoc: add stub test files, to check that files at least import
  MAINT: always use plot directive from Matplotlib, and prefer Sphinx linkcode
  ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package
  ENH: numpydoc: deal with duplicated signatures
  DOC: numpydoc/linkcode: mention that the extension will be in Sphinx upstream
  BUG: numpydoc/linkcode: do not detect linkcode config changes

Conflicts:
	doc/sphinxext/numpydoc/docscrape.py
	doc/sphinxext/numpydoc/docscrape_sphinx.py
	doc/sphinxext/numpydoc/linkcode.py
	doc/sphinxext/numpydoc/phantom_import.py
	doc/sphinxext/numpydoc/traitsdoc.py
",doc/source/conf.py,doc/sphinxext/MANIFEST.in,doc/sphinxext/__init__.py,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,doc/sphinxext/{,doc/sphinxext/setup.py
d1e6fc3b81bc0557d74771cfffa04af2c62012f7,"REM: Remove benchmarks files.

The files are very basic, old benchmarks testing numpy against numeric
and numarray. The competitors are almost defunct and, while benchmarks
are awesome, we really need a more polished and complete framework that
runs against the current competition. I think the early results from
these benchmarks were posted, maybe even presented, and could be found
in a search.

Closes #3088 ;) So old a tuple parameter was used.
",benchmarks/benchmark.py,benchmarks/casting.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py
9da706c1fb01a324e4a42760fbceeef78af3e2bc,"2to3: Apply `sys_exc` fixes. Closes #3086.

This uses sys.exc_info in place of sys.exc_value. The new function
goes back to at least 2002, so should be safe.
",numpy/distutils/cpuinfo.py,numpy/f2py/diagnose.py
0e4e5084e1e4a2fb369db5b4f43c500c3a9cbcd8,"BUG: Fix `not a in ...` to `a not in ...`.

Also break regular expression compiles out of the loop.
",numpy/f2py/f2py2e.py
9a73697c70e667c4655a01d3f76e5a9e850f1798,"REF: Replace filters with list comprehensions.

2to3 does a lot of list(filter(...)) sort of thing which can be
avoided by using list comprehensions instead of filters. This
also seems to clarify the code to a considerable degree.
",numpy/distutils/command/build_py.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/f2py/f2py2e.py,numpy/testing/utils.py
4b361f62be7f750dc385d0b7dc7529ad9af5e4ea,"Merge pull request #3047 from charris/2to3-callable

2to3: Fix callable.",doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/linkcode.py,doc/sphinxext/numpydoc.py,doc/sphinxext/traitsdoc.py,doc/summarize.py,numpy/core/numeric.py,numpy/core/tests/test_records.py,numpy/lib/function_base.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/testing/decorators.py
e1c7c4df0c7afb0baff683c7e3a1f4b205d6e572,"Merge pull request #3059 from charris/2to3-funcattrs

2to3: Apply `funcattrs` fixer. Closes #3058.",doc/sphinxext/phantom_import.py,numpy/compat/_inspect.py,numpy/distutils/command/build_src.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/lib/utils.py,numpy/testing/noseclasses.py
2cb5021f2110f7e24a6a30a3a0af8336f46fb621,"Merge pull request #3049 from charris/2to3-exec

2to3: apply exec fixer results.",doc/numpybook/runcode.py,doc/sphinxext/plot_directive.py,numpy/_import_tools.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/function_base.py,numpy/numarray/session.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/testing/numpytest.py,numpy/testing/utils.py
ceca28d920225715870d0a83394385e320d1bb22,"Merge pull request #3055 from charris/2to3-execfile

2to3: apply `execfile` fixer results.",setupegg.py
80af580d76cbd18a5c91851d8b404636d8acd2a9,"2to3: Apply `funcattrs` fixer. Closes #3058.

This replaces the `b.func_xxxx` with newer `__xxxx__` attribute names
For example, `f.__name__`  replaces `f.func_name`
",doc/sphinxext/phantom_import.py,numpy/compat/_inspect.py,numpy/distutils/command/build_src.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/lib/utils.py,numpy/testing/noseclasses.py
b990ed5a18b58715fa1e13642bc7f6761e597818,"2to3: Apply `filter` fixes. Closes #3053.

Generally, this involves using list comprehension, or explicit list
construction as `filter` is an iterator in Python 3.
",numpy/_import_tools.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_src.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/f2py/f2py2e.py,numpy/testing/utils.py,setup.py
36e979c465150b1846f37f1811b86f63f9d1e085,"2to3: apply `execfile` fixer results.

The execfile command is gone in Python 3. The fix is to read the file,
then compile and exec the result.
",setupegg.py
2429298dd8ddf797c3c89e65eb8a9b9e8f72a299,"2to3: apply exec fixer results.

This changes the `exec` command to the `exec` function.
",doc/numpybook/runcode.py,doc/sphinxext/plot_directive.py,numpy/_import_tools.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/lib/function_base.py,numpy/numarray/session.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/testing/numpytest.py,numpy/testing/utils.py
dd13084557f46343b9fac0c02725a826d0ca397b,"2to3: Fix callable.
",doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/linkcode.py,doc/sphinxext/numpydoc.py,doc/sphinxext/traitsdoc.py,doc/summarize.py,numpy/core/numeric.py,numpy/core/tests/test_records.py,numpy/lib/function_base.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/testing/decorators.py
0934653e151969f6912c911b5113306bd5f450f1,"Merge pull request #2950 from seberg/issue-2949

BUG: Fix strides of trailing 1s when reshaping",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
22decf9edf44617056055434093b621602a9f5f8,"Merge pull request #3027 from charris/2to3-remove-has_key-update

2to3: Remove `has_key` use that was missed.",doc/sphinxext/docscrape.py,doc/sphinxext/plot_directive.py
e84885aa39057235a8cb53558f05a07cb6da4965,"Merge pull request #3028 from charris/2to3-except-update

2to3: Update `except Exception, msg:` syntax in files not in numpy/ .",benchmarks/benchmark.py,doc/sphinxext/docscrape.py,doc/sphinxext/plot_directive.py,pavement.py,tools/osxbuild/build.py,tools/win32build/build.py,tools/win32build/prepare_bootstrap.py
046d0575d0c052c9012221f36c3a2d0ccf34abb5,"2to3: Remove `has_key` use that was missed.

The files not in the numpy/ directory were missed. This gets them
all (I hope).
",doc/sphinxext/docscrape.py,doc/sphinxext/plot_directive.py
c6397ba59fba25989b0ba37ad8267325757f1dcd,"2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .

This should finish the updating of the exception syntax.
",benchmarks/benchmark.py,doc/sphinxext/docscrape.py,doc/sphinxext/plot_directive.py,pavement.py,tools/osxbuild/build.py,tools/win32build/build.py,tools/win32build/prepare_bootstrap.py
208072f817ac14f041569f0123d3434bc9e0daba,"Merge pull request #2943 from rgommers/bento-ini-files

BUG: npy-pkg-config ini files were missing after Bento build.",numpy/core/bscript
9d8722b5bc76ecb2fe74a8e8dd3a7b1c2c83985b,"DOC: fix doc/source/conf.py to work with Python 3
",doc/source/conf.py
e1f0c1bbac9e0e472d8bad1793a9b5edc9e4f466,"Merge pull request #3020 from charris/2to3-remove-has_key

2to3: Change use 'has_key' to 'key in'.",numpy/distutils/npy_pkg_config.py
a369522a3920b6ef204f9b119c957b49843c03d7,"Merge pull request #3023 from charris/2to3-except

2to3: Use modern exception syntax.",numpy/_import_tools.py,numpy/build_utils/waf.py,numpy/core/tests/test_half.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/ctypeslib.py,numpy/distutils/interactive.py,numpy/distutils/system_info.py,numpy/f2py/capi_maps.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/f2py2e.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/util.py,numpy/lib/format.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/testing/numpytest.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py
705bf928e1256a06019c75ee945370fbe89cdde7,"2to3: Use modern exception syntax.

Example:  except ValueError,msg: -> except ValueError as msg:
",numpy/_import_tools.py,numpy/build_utils/waf.py,numpy/core/tests/test_half.py,numpy/core/tests/test_machar.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/ctypeslib.py,numpy/distutils/interactive.py,numpy/distutils/system_info.py,numpy/f2py/capi_maps.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/f2py2e.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/util.py,numpy/lib/format.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_io.py,numpy/lib/utils.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/testing/numpytest.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py
93c4db01bd10262523339822063be771615a9e62,"2to3: Change use 'has_key' to 'key in'.

Part of the 2to3 project.
",numpy/distutils/npy_pkg_config.py
a226daa75816577ac9c734133e600e5eebd9aaa9,"BUG: Choose a more unique PY_ARRAY_UNIQUE_SYMBOL in f2py.

In a few exceptional cases where symbols are shared between different
Python modules the use of `PyArray_API` in f2py (fortranobject.h)
conflicts with the regular use of the same symbol in the multiarray
module. Generally the symptom of this conflicting use is a segfault
when importing a f2py'ed module. This occurs because the module init
code somehow overwrites the first element of `PyArray_API` with the
location of `PyArray_API`, causing a crash when
`PyArray_GetNDArrayCVersion` is called.

Closes gh-2521.
",numpy/f2py/src/fortranobject.h
6de7a4be70c894e3d63ac952bd20a74c171e6413,"Merge pull request #3002 from seberg/issue-3001

BUG: Incref items in np.take on error as they are decrefed later",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_regression.py
230ee3aa201552a8a9fa13c4b319f68cbd504d85,"BUG: non-empty takes on empty axes failed for clip/wrap logic

These did no checking for this special case. And thus, wrap would go
into infinite loops trying to adjust the index, and clip would (probably)
segfault. This raises IndexError explicitely beforehand.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_indexerrors.py
58548e66d5d3bda3e884ae0c0ab0805ab0160484,"TST: Add test for np.take refcounting

Also make the testcase for take a class.
",numpy/core/tests/test_item_selection.py
b343f43eea856bd984a752f288bd148a42a789a1,"BUG: Incref items in np.take on error as they are decrefed later

When take fails during copying due to out of bound indices, then the already
copied items will be decref'd on array destruction. To avoid that, as well
as possible overlapping or already initialized object arrays, decref and
incref during the copy operation itself. Note that all basic types but
object use their own fasttake, so this does not change anything for them.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_item_selection.py,numpy/core/tests/test_regression.py
17774a6d58b889b6b7a25d6af5b66f2148d47f41,"Merge pull request #3009 from daveydave400/fix_zeros_like_doc

Added 'subok' keyword documentation to zeros_like and ones_like functions.",numpy/core/numeric.py
436b521274a1b27a0211ad18857d779329ad11c7,"Added 'subok' keyword documentation to zeros_like and ones_like
functions.
",numpy/core/numeric.py
665a00aec896344cfb12599add600f27a5f519d3,"Merge pull request #3006 from seberg/fix-empty-item

BUG: Fix regression of bad error/random behavior in item method",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
04b89c63e531ee29b8a0cdb3f2c5ce410f6169b2,"BUG: Fix regression of bad error/random behavior in item method

Appearently .item() for arrays with size != 1 correctly returned an error
in 1.6., but failed to raise the error (due to missing return) in 1.7.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
b2ed8f73901c7020e0551515d543b5138e11964a,"Merge pull request #2996 from andreas-h/patch-1

Update numpy/lib/function_base.py",numpy/lib/function_base.py
c5478ef2a402e21b5d9f9533fcb8e6f055b45a35,"Update numpy/lib/function_base.py

fix percentile docstring",numpy/lib/function_base.py
a3bc1467dee14dd4726a83af2fb1a4cb89cbf53b,"BUG: numpydoc: check that it works with sub-classes
",doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/tests/test_docscrape.py
1b2e585133c555d1b5f72c5598473a7568587645,"TST: numpydoc: more class tests
",doc/sphinxext/numpydoc/tests/test_docscrape.py
fd9064f5ee734ffb1dd1f16e7b0f6ce9cfa25df5,"BUG: numpydoc: fix bugs in attribute docstring extraction + improve presentation
",doc/sphinxext/numpydoc/docscrape.py,doc/sphinxext/numpydoc/docscrape_sphinx.py
c5efee88abd79f2338b28267377fe31be7dfa0f4,"TST: numpydoc: add stub test files, to check that files at least import
",doc/sphinxext/numpydoc/tests/test_linkcode.py,doc/sphinxext/numpydoc/tests/test_phantom_import.py,doc/sphinxext/numpydoc/tests/test_plot_directive.py,doc/sphinxext/numpydoc/tests/test_traitsdoc.py
cc832530ef784723953dcb3ae943d95da6afb557,"MAINT: always use plot directive from Matplotlib, and prefer Sphinx linkcode
",doc/source/conf.py
7f2da39dea8f869ea4d5256786f55eacbd5722e6,"ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package
",doc/sphinxext/MANIFEST.in,doc/sphinxext/__init__.py,doc/sphinxext/numpydoc/__init__.py,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/{,doc/sphinxext/setup.py
a4cd4ffd52b4b60df4e8752ea202862e2c386589,"ENH: numpydoc: deal with duplicated signatures
",doc/sphinxext/docscrape.py,doc/sphinxext/tests/test_docscrape.py
c5cb18f9486c5e6291e476890a3b6bef1424062c,"DOC: numpydoc/linkcode: mention that the extension will be in Sphinx upstream
",doc/sphinxext/linkcode.py
cedba8efabdcbbeb338a0683cf91b755ab5f9e5c,"BUG: numpydoc/linkcode: do not detect linkcode config changes

Since the linkcode_resolve is a function, it triggers configuration
change on each rebuild, resulting to full rebuild always. It's better
to make it not do that.
",doc/sphinxext/linkcode.py
38a16488d0977c5617218a36759250df7f87556e,"DOC: update bento docs (close #2993).
",BENTO_BUILD.txt
eb5de874f3e2e9e534a05ec791d3ae7c0573147e,"BUG: use the PyUString_FromString macro for Py3 compat instead.
",numpy/core/src/multiarray/methods.c
bc602230cf2fd947d47326bd6584b4d31bf1e3ae,"BUG: PyString_FromString isn't py3 compatible.

Use PyUnicode_FromString instead.
",numpy/core/src/multiarray/methods.c
914294a42ab85966dc4760b35c02cc28f1b021d6,"FIX: use PyObject_CallMethodObjArgs in array_dot

and make added comments in test_multiarray.py helpful.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py
1d04300248882b207f493c7207f83a8b467be2be,"BUG: gh-2687 make multiarray dot method accept out array and keyword
args.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py
4bf5a3feb00fe1d63e7d8fcf852cbf34e22fd60b,"Merge pull request #2974 from seberg/issue-427

Fix some large array sorts and memory error handling",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/mergesort.c.src
b859daed214cbcf9b889713c548733f288a95c56,"Merge pull request #2979 from charris/fix-nansum

BUG: Make nansum work with booleans.",numpy/lib/function_base.py,numpy/lib/tests/test_regression.py
8552cd5fcbf52dee79bdade97ca36c18599e64b4,"BUG: Make nansum work with booleans.

This broke when function_base._nannop tried to fill a boolean array with
integer zeros, raising a 'safe_casting' error. It looks like nanargmax and
nanargmin would also break, and were probably incorrect for booleans in any
case. The fix is not to use fill values for boolean and integer dtypes.
Previously that was only done for the integer dtypes.
",numpy/lib/function_base.py,numpy/lib/tests/test_regression.py
1ee888709af17b20a6ff97c9f6b3562e5ed93b77,"Merge pull request #2975 from bfroehle/tp_alloc

ENH: Use tp_basicsize, not NPY_SIZEOF_PYARRAYOBJECT, for allocation",numpy/core/src/multiarray/arrayobject.c
3f6aaa38d327eb52961b84fe99e52f04e6776d33,"Merge pull request #2976 from bfroehle/memory_waste

BUG: PyArray_LexSort allocates too much temporary memory.",numpy/core/src/multiarray/item_selection.c
91376d7a3b81098ba348f7dfebb71a9b95031a20,"BUG: PyArray_LexSort allocates too much temporary memory.

PyArray_LexSort was allocating memory to hold actual PyArrayObject's
and PyArrayIterObject's, but only storing pointers to such objects
in the array.
",numpy/core/src/multiarray/item_selection.c
92545427dfebaa680ee0f38649d12c1f1c655a7f,"ENH: Use tp_basicsize, not NPY_SIZEOF_PYARRAYOBJECT, for memory allocation.

This change allows C-API level subtypes of PyArray_Type without forcing the
developer to rewrite the tp_alloc function and only change the amount of
memory allocated.
",numpy/core/src/multiarray/arrayobject.c
2b76da387ef4c8a0317c80ce08e5bbab833b14e5,"BUG: Fix reporting of memory error inside sorting

PyDataMem_NEW was not checked for error and the occurance of
errors not returned correctly in new_sort. Also for PyArray_LexSort
and new_argsort it should now raise MemoryError correctly.
This is done by setting PyErr_NoMemory() when no error is already
present, as the low level sorting can only fail for this reason.
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/mergesort.c.src
7ccf5308193eef9c5fb0a3ee3d4e84562784c31b,"BUG: Fix dtypes in sorting functions to npy_intp

Some of the iteration variables were int, causing sorts to fail for large
arrays. Fixes github issue 427.
",numpy/core/src/multiarray/item_selection.c
625f3cde9aeacea2289ba32286ec54a65f4f4641,"DOC: update 1.7.0-notes.rst from release branch

There were some changes in the release branch that were not put into master.
After this commit, the file 1.7.0-notes.rst is synchronised with the release
branch.
",doc/release/1.7.0-notes.rst
83e39633d94ddca717ae50692b013ae7ffc39459,"DOC: Add example showing how a view of a slice can misbehave
",numpy/add_newdocs.py
c714dad734cedddd749cc7ddfd120c503e29016d,"DOC -- add another paragraph note to ndarray.view docs (cont'd)

More detail: Views are only sensitive to under-the-hood storage when
the dtype storage size has changed.
",numpy/add_newdocs.py,numpy/ma/core.py
b3f37edd68e03dc79a48f38c66e4a757aaa4d8cc,"Fixed two typos.
",numpy/lib/twodim_base.py
5b5251493d682692ac83fbeeff7bb5db3fb1996b,"Added example for 2D-histogram with variable bin size.
",numpy/lib/twodim_base.py
637dbd84d5b80d91aa2eecd950a0e509d44f112e,"DOC -- add another paragraph note to ndarray.view docs

Since most numpy operations are not sensitive to underlying data
structure (C-ordered arrays vs fortran-ordered arrays, versus slices or
transposes of arrays, etc.), but structured-array views ARE sensitive to
that, it is worth saying it explicitly in the documentation.
",numpy/add_newdocs.py,numpy/ma/core.py
0a87823d048fca997684e86718be0d46459ad4fd,"Merge pull request #2947 from charris/fix-complex-polynomial-fit

Fix complex polynomial fit",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
45920aafb53ca9db3c72db5e385e0dda07c3e04b,"Merge pull request #2960 from esc/doc/fix/ctypeslib

DOC/FIX: fix example in ctypeslib module documentation",numpy/ctypeslib.py
9118887ccb0e62d8814e31a80e1e6caf0e99eb3c,"DOC/FIX: fix example in ctypeslib module documentation

Fix some inconsistencies in the example. The library is loaded as '_lib' not
'lib' in the rest of the example. Also, the function is called 'foo_func' not
'foo'
",numpy/ctypeslib.py
49bf2045e1cc7d1fb7e2ce771fbb1636c9d28e5a,"BUG: Fix strides of trailing 1s when reshaping

When adding ones to the shape for non contiguous arrays reshapes
(i.e. either the first array is not contiguous or the the reshape
order does not match it). The strides of trailing ones were not
set. For example reshape of (6,) to (6,1,1). Previously this occured
rarely because of removed special handleing when only ones were
added or removed.
",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
4600b2fe1d7ebafef98858572b603f2a8d19db4d,"DOC: mention the change of default for separate compilation.
",doc/release/1.8.0-notes.rst
08dfe2f48ea6bab6935b1f13d9385df9f9f4f782,"FEAT: use separate build by default.
",.travis.yml,numpy/core/bscript,numpy/core/setup.py
63cf49de635ec1d64967ed746ea4839935d80bcd,"REF: make the separate compilation env handling a tad simpler.
",numpy/core/bscript,numpy/core/setup.py
7c1435c11d8bc0d1a3a380bc541a46f75749dc52,"MAINT: Use a better method to detect complex arrays.

Instead of

    if lhs.dtype.char in np.typecodes['Complex']:

use

    if issubclass(lhs.dtype.type, np.complexfloating):
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
2b4c9a66c8485973291076a6a1d3a3e9a3ffa5cc,"Merge pull request #2940 from ContinuumIO/ndindex_fix_more

BUG: Fix logic in ndindex to match __init__ method.   Fixes bug in ndindex((3,)) ",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
ccbbfd5fd4c0377672aff5701e3624254b3a3138,"TST: Add Test for column scaling in the polynomial package fits.

The test uses the complex set of sample points [1, 1j, -1, -1j] whose
squared sum is exactly zero. This would fail before the column scaling
was fixed.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
855b66f3eeab166ee504d73952b61b4b713f3c6f,"BUG: gh-2790, fix column scaling in polynomial package least squares.

The columns should be scaled using their 2-norm, but in the complex case
that was being incorrectly computed as the square root of the sum of the
squared elements rather than as the square root of the  sum of their squared
real and imaginary parts.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
dce10183bc8f3d243bd5fc70140f5ad71179d05c,"Merge pull request #2725 from seberg/take_0d

ENH: Allow 0-d indexes in np.take",doc/release/1.8.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_item_selection.py
dde7ea5c65dae6fd0b4a3355faef0c8abf167325,"Fix indentation
",numpy/core/src/scalarmathmodule.c.src
af4b113cbf6320a458b4ac341d154ec1c7af11c1,"BUG: npy-pkg-config ini files were missing after Bento build.
",numpy/core/bscript
cc70e5a0db562c96a4813f95990be72357591465,"Avoid conversion to NumPy Scalar

After profiling I noticed that a bottleneck for NumPy scalar operations
occurs when trying to extract the underlying C value from a Python float
because it first converts the Python scalar into its matching NumPy
scalar (e.g. PyFloat -> float64) and then it extracts the C value from
the NumPy scalar.

For some types, it is a lot faster to just extract the value directly
from the Python scalar.

I only did for PyFloat in this modified code but the code is laid out
such that it can be easily extended to other types such as Integers. I
did not do them because I was unsure if there was a special scenario to
handle across OS and/or between 32 and 64 bit platforms. The ratio of
speed to do different operations are listed below (Old time / New time
with modifications). In other words, the bigger the number, the bigger
the speed up we get.

Tested in Python 2.6 Windows

RATIO  TEST
1.1  Array * Array
1.1  PyFloat * Array
1.1  Float64 * Array
1.0  PyFloat + Array
1.3  Float64 + Array
1.1  PyFloat * PyFloat
1.0  Float64 * Float64
4.0  PyFloat * Float64
2.9  PyFloat * vector1[1]
3.9  PyFloat + Float64
9.8  PyFloat < Float64
9.9  PyFloat < Float64
1.0  Create array from list
1.0  Assign PyFloat to all
1.0  Assign Float64 to all
4.2  Float64 * pyFloat * pyFloat * pyFloat * pyFloat
1.0  pyFloat * pyFloat * pyFloat * pyFloat * pyFloat
1.0  Float64 * Float64 * Float64 * Float64 * Float64
1.0  Float64 ** 2
1.0  pyFloat ** 2
",numpy/core/src/scalarmathmodule.c.src
4c489f6d6edccc4d7fe2310b0e0902e980b5f52b,"TST: Add a test for ndindex call.
",numpy/lib/tests/test_index_tricks.py
ce5506f73bbb0233e825efef4f94dd39de05be07,"Fix-up logic for checking for zero-d arrays.
",numpy/lib/index_tricks.py
963c4e46dc56020ebea05bee10ceaa0feb61f022,"BUG: fix separate compilation mode for bento build.
",numpy/core/bscript
26b2fc62cc46f1b7c4405fa17be82bbd5453aff7,"BUG: fix inclusion of private hader in #d2122ea1f458e9429b692111238f7b9f4a852db2
",numpy/core/src/private/npy_config.h
f2c81b485fa18e7ab918b470403c52751648dd3a,"compile fix on linux/mac
",numpy/core/src/umath/ufunc_object.c
ce289ab57cd5249c41c6166c478b9d054fca4ddf,"Merge pull request #2923 from baeuml/swig-fix-python3

fix numpy.i for python 3",doc/swig/numpy.i
e548eedba12831bd5d68cb9c52a86e9330aa8ae0,"Merge pull request #2936 from charris/fix-print-negative-float-zero

Fix print negative float zero",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_scalarprint.py
d55b5aa49d2ba1c98d568660b1a91b4b552872f0,"TST: Add test for printing of scalar values.
",numpy/core/tests/test_scalarprint.py
e5f4f8283e7721b0a72b621b765c42d7d7866f4f,"BUG: gh-2935, fix printing of scalar float -0.0.

The issue was that the string value of scalar floating types equal to -0.0
lacked a trailing "".0"".

    >>> print np.float64(-0.0)
    -0

The problem resulted from using val < 0 to check for a leading negative
sign. That expression evaluates false when val = -0.0, and the need to
append "".0"" was not detected.
",numpy/core/src/multiarray/scalartypes.c.src
56b06fe5bf20d11ca8188a00333ddf69ed8b2e42,"Merge pull request #2933 from seberg/result_type-segfault

BUG: Fix segfault in np.result_type for None input.",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_numeric.py
51495ffc5d56d33d15a80f250c7d36038783af3e,"BUG: Fix segfault in np.result_type for None input.

Makes behavior identical to np.dtype(None), which fits to how
the function works.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_numeric.py
ee5fd949b962735d6282fb6f6e08c5c54c1edd4d,"Merge pull request #2928 from mwiebe/string_init_memleak

BUG: Fix memory leak in ndarray construction from strings (gh-2927)",numpy/core/src/multiarray/common.c
cac3de50a2cafe1114b0671dd55ec2d1f6f2601a,"BUG: Fix for generalized ufunc zero-sized input case
",numpy/core/src/umath/ufunc_object.c
fa9dbef4020bd242a9df6215bb3b9a10c8815848,"TST: Test for a generalized ufunc bug, for zero-sized inputs
",numpy/core/tests/test_ufunc.py
12be5b774be180699acba195db4dd81d6f77125c,"BUG: Fix bug in gufunc scalar case
",numpy/core/src/umath/ufunc_object.c
b5c77332b0ef46d7373c92e71866a8885f375ddf,"TST: Add test for gufunc scalar case
",numpy/core/tests/test_ufunc.py
9a70cfdd04b04fe073c746af6186803511b0b390,"BUG: Make sure the nditer doesn't complain when 0 broadcast dims
",numpy/core/src/umath/ufunc_object.c
be911e8d54a8d5a89776ed8ccacf77dca34aaed8,"BUG: Missed case of broadcasting onto core dimensions in gufunc
",numpy/core/src/umath/ufunc_object.c
1613e097b337b0042848d442fece8a975144180d,"BUG: Fix generalized ufunc so repeating labels in one input/output is ok
",numpy/core/src/umath/ufunc_object.c
1539b711871ae8b949da90eabc18d7fc3a4d1170,"BUG: Fix memory leak in ndarray construction from strings (gh-2927)
",numpy/core/src/multiarray/common.c
18bcac097c289f0ee937563652f771fe89c174f2,"fix numpy.i for python 3

PyFile_Check and PyInstance_Check have been removed from the C API
for python 3.  This removes calls to those two functions from
numpy.i for PY_MAJOR_VERSION >= 3 so that it builds with a
python 3 Python.h.
",doc/swig/numpy.i
27690e33fa2202ecb1bca338ff38320de84b27ea,"Merge pull request #2914 from charris/remove-scons-support

Remove scons support",MANIFEST.in,doc/release/1.8.0-notes.rst,doc/summarize.py,numpy/compat/setupscons.py,numpy/core/SConscript,numpy/core/SConstruct,numpy/core/scons_support.py,numpy/core/setup_common.py,numpy/core/setupscons.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/scons.py,numpy/distutils/core.py,numpy/distutils/misc_util.py,numpy/distutils/setupscons.py,numpy/f2py/setupscons.py,numpy/fft/SConscript,numpy/fft/SConstruct,numpy/fft/setupscons.py,numpy/lib/SConscript,numpy/lib/SConstruct,numpy/lib/setupscons.py,numpy/linalg/SConscript,numpy/linalg/SConstruct,numpy/linalg/setupscons.py,numpy/ma/setupscons.py,numpy/matrixlib/setupscons.py,numpy/numarray/SConscript,numpy/numarray/SConstruct,numpy/numarray/setupscons.py,numpy/oldnumeric/setupscons.py,numpy/random/SConscript,numpy/random/SConstruct,numpy/random/setupscons.py,numpy/setupscons.py,numpy/testing/noseclasses.py,numpy/testing/setupscons.py,release.sh,setupscons.py,setupsconsegg.py
ee6c66a2a71f46f02a823a8e107592ca3b76858e,"Merge pull request #2897 from ContinuumIO/ndindex_fix

Fix for #2895 ndindex failing",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py,numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
3af34a4b31e1f91a8b626c9d0b187f6aa8a034cb,"DEP: Remove more references to scons related files.

These references were in MANIFEST.in, doc/summarize.py, release.sh, and
numpy/testing/noseclasses.py and involved scons files that have been
removed, mostly setupscons.py and setupsconsegg.py that were in the top
level.
",MANIFEST.in,doc/summarize.py,numpy/testing/noseclasses.py,release.sh
eb109d2bbea6e61c289907b9962d57c768eee28f,"Merge pull request #2907 from seberg/nonarray-assignment-master

Nonarray assignment regression for boolean indexing and 1d unsafe casting",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_regression.py
8f37eccd23e140fa7cc06f35e8126df6cb19a67a,"BUG: Need to keep pointer to using scons in HOWTO_RELEASE.rst.txt.
",doc/HOWTO_RELEASE.rst.txt
7c286a408f116acc9121a989f5613ec69ee89d34,"BUG: Need to keep SCons support in cpucaps and cpuid.

These tools are not directly related to numpy builds.
",tools/win32build/cpucaps/SConstruct,tools/win32build/cpuid/SConstruct
89c7d59d92f43ba97fc4a1d3b221869ebfbf20e0,"DOC: Document removal of SCons support in doc/release/1.8-notes.rst.
",doc/release/1.8.0-notes.rst
df259db01ecf69d518fffd398dd6fb5cf60f1ba1,"DEP: Remove scons related files and code.

This removes files and code supporting scons builds. After this change
numpy will only support builds using distutils or bento. The removal of
scons has been discussed on the list several times and a decision has been
made that scons support is no longer needed. This was originally discussed
for numpy 1.7 and because the distutils and bento methods are still
available we are skipping the usual deprecation period.
",doc/HOWTO_RELEASE.rst.txt,numpy/compat/setupscons.py,numpy/core/SConscript,numpy/core/SConstruct,numpy/core/scons_support.py,numpy/core/setup_common.py,numpy/core/setupscons.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/scons.py,numpy/distutils/core.py,numpy/distutils/misc_util.py,numpy/distutils/setupscons.py,numpy/f2py/setupscons.py,numpy/fft/SConscript,numpy/fft/SConstruct,numpy/fft/setupscons.py,numpy/lib/SConscript,numpy/lib/SConstruct,numpy/lib/setupscons.py,numpy/linalg/SConscript,numpy/linalg/SConstruct,numpy/linalg/setupscons.py,numpy/ma/setupscons.py,numpy/matrixlib/setupscons.py,numpy/numarray/SConscript,numpy/numarray/SConstruct,numpy/numarray/setupscons.py,numpy/oldnumeric/setupscons.py,numpy/random/SConscript,numpy/random/SConstruct,numpy/random/setupscons.py,numpy/setupscons.py,numpy/testing/setupscons.py,setupscons.py,setupsconsegg.py,tools/win32build/cpucaps/SConstruct,tools/win32build/cpuid/SConstruct
23e9f01f54474503f0296e3ff1cb173c6228cb98,"Merge pull request #2909 from argriffing/patch-2

remove a confusing docstring line",numpy/core/numeric.py
24615f4c7744ff4a924b9488ea3b9bb7df3665f0,"BUG: Make 1d fancy indexing special case use unsafe_casting

Also make sure right hand side is converted safely to the right
type if it is not an array though.
",numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_regression.py
8362e081291e792be304cbdb8ece2e00845baf39,"BUG: Convert non-array rhs for boolean assignment with correct dtype

Enforcing the left hand side datatype for a non-array right hand side
argument in index assignments was the behavior before 1.7. and is the
general behaviour here. (note this means a non-array right hand side
checks for NaN, etc. if the left hand side is integer, but an array
right hand side does not)
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_regression.py
109f4265566d39553fb830099b7c745ad70adf46,"Merge pull request #2910 from rutsky/doctest_svd_typo

Fix typo in SVD usage example",numpy/linalg/linalg.py
75bef12aeb994065cf716841d7fd65c09b3062bc,"Fix typo in SVD usage example
",numpy/linalg/linalg.py
a66b412fa853b3b556329c23d80f092d45962282,"Merge pull request #2908 from argriffing/patch-1

Update numpy/core/code_generators/ufunc_docstrings.py",numpy/core/code_generators/ufunc_docstrings.py
d4286f864af9b53337186a71b2fca14e75e79b74,"remove a confusing docstring line

ones_like:

""With default parameters, is equivalent to a.copy().fill(1).""

This is not technically true, because 'fill' returns None.
",numpy/core/numeric.py
c1059f2d2efd03a348e7343b89a56862d82e7a8e,Update numpy/core/code_generators/ufunc_docstrings.py,numpy/core/code_generators/ufunc_docstrings.py
d1a055b0cd5ad82106901a274d58563df4cd5070,"Fix 0-d ndincr to have correct return value.
",numpy/lib/index_tricks.py
aef2cf73aafc9a945d88cb9464f62135b177a2f4,"Fix the test for numpy.ndindex()
Fix ndindex for 0-d arrays.
Add tests for tuple arguments to ndindex
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
853eae4ef4b0b4e567924c964a1663789e597538,"Use super instead of direct access to inheritance.
",numpy/lib/index_tricks.py
00a8c0ca278280d04d32fc84386c29800e3b5a00,"Merge pull request #2901 from hrw/master

Add support for AArch64 architecture",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
ae0a504b78690aafe120bf88eac65be9107b2f5b,"Fix the 0-d patch so it doesn't change the non 0-d iterator
",numpy/lib/index_tricks.py
7d7a5939dcf5821d9f381d57bfa2012568ef6b82,"Added support for AArch64 architecture

Signed-off-by: Marcin Juszkiewicz <marcin.juszkiewicz@linaro.org>
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
6d980e779c39cd398be74a52d776485f623b1994,"Fix ndindex for 0-d arrays.
",numpy/lib/index_tricks.py
dd146b6929f79fd6af27528dd4370eaebd5c57a6,"Fix the test for numpy.ndindex()
",numpy/lib/tests/test_index_tricks.py
47161378d8e4eb892846f7b0156fa2344fd11ee2,"Add test for __array_interface__
",numpy/core/tests/test_multiarray.py
ffb8c414875a1430814c1e9938d1a58defcf516d,"Add test for optional size argument for ndindex
",numpy/lib/tests/test_index_tricks.py
fda92e20428a5434a49fe439175c7b5b583e96fc,"Fix ndindex issue

Call to ndindex() with no arguments results in a ValueError exception, whereas before commit ca27396b, a call with no arguments was allowed.
Issue is due to unneeded check for shape tuple size.
",numpy/core/src/multiarray/ctors.c
849a8c5f9db1087def26e63393ec48497cee8dd4,"Merge pull request #2838 from charris/test-numpy-constants

TST: Add tests for constants.",numpy/core/tests/test_umath.py
cde76b4d11a580e6d25eebdcce373bc5d8c850f5,"ENH: Allow 0-d indexes in np.take

The TakeFrom already supported this. This removes the check which
made it not possible and adds some tests for take.

Also add documentation and information to the release notes.
",doc/release/1.8.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_item_selection.py
161bfe73e006af7c71db373aa99bdecce32f9e2a,"Merge pull request #2882 from seberg/issue2503

BUG: Fix CheckStrides and strides setter checks for available memory",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/getset.c,numpy/core/tests/test_multiarray.py
22ad3acca6cb4c029e544f6a060a864a0191087e,"Merge pull request #2888 from charris/fix-headers

Fix headers",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/numpyconfig.h,numpy/core/src/private/npy_config.h
fbda719c843a90f124419e5c022891366aa0a010,"MAINT: Remove newly defined non-prefixed macros from noprefix.h.

There was a chance that they could conflict with user defined macros.
",numpy/core/include/numpy/noprefix.h
1981d0640d6a598a043379be43d19dcf590823f1,"MAINT: Minor cleanup

Adding const and removing old comment.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/getset.c
ce8ece2d613589c2ab32a69ab91804e727eb86b0,"Merge pull request #2887 from charris/fix-unprefixed-sizeof-macros

BUG: Replace unprefixed SIZEOF_* macros with prefixed versions.",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/npymath/_signbit.c,numpy/core/src/scalarmathmodule.c.src
1d6f543eb85a2632a8dcee401e8ec76776f407e3,"BUG: Replace unprefixed SIZEOF_* macros with prefixed versions.

The sources don't define NPY_NO_PREFIX and consequently none of the
unprefixed macros are defined. Using them can lead to some unexpected
results.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/npymath/_signbit.c,numpy/core/src/scalarmathmodule.c.src
d2122ea1f458e9429b692111238f7b9f4a852db2,"BUG: Fixup use of undefined macros and remove redundant code.

The npy_config.h file used SIZEOF_DOUBLE and SIZEOF_LONG_DOUBLE, neither
of which was defined in the included config.h file. That was fixed by
including numpyconfig.h. Doing so made the code dealing with Apple type
sizes redundant as it is already present in numpyconfig.h, so it was
removed.
",numpy/core/src/private/npy_config.h
e6d6042b471cd84b6c4428a4085c58608bff99a7,"MAINT: Remove tabs from numpyconfig.h.
",numpy/core/include/numpy/numpyconfig.h
d0a54c4607c3b1bd66b11aea2d3e301be870f263,"MAINT: Gather NPY_SIZEOF* macros into one spot.
",numpy/core/include/numpy/npy_common.h
229979b47c6d1be0fb6892dff429738d8481c208,"MAINT: Add some macros to noprefix.h

Some of these are probably new unprefixed macros, but adding them
makes for a bit more safety. The unprefixed macros will be deprecated
at some point, so this probably has no side effects.
",numpy/core/include/numpy/noprefix.h
cba2994f919a29afc446c213d44ca57ca8a925af,"MAINT: Remove unneeded include from ndarraytypes.h.
",numpy/core/include/numpy/ndarraytypes.h
699c69769ca918ab3e972322bc6416278d2c481d,"MAINT: Remove unneeded comment form arrayobject.h
",numpy/core/include/numpy/arrayobject.h
05dde0f733419cc7802cd9ea7d03050db120e429,"Merge pull request #2886 from seberg/complex256-byteswap

BUG: Fix byteswapping for complex scalars",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_regression.py
d2ca91791024f74dd4754fa9b811228abd1ce613,"BUG: Fix byteswapping for complex scalars

During a cleanup, the fast paths were invalidated because SIZEOF_LONGDOUBLE
was not defined anymore and needs to be replaced with NPY_SIZEOF_LONGDOUBLE.
The other SIZEOF macros still existed however so only complex long double
broke because it switched to the already broken fast path.

This commit fixes the fast path, and replaces all SIZEOF_ macros within
arraytypes.c.src with their corresponding NPY_SIZEOF_ macros.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_regression.py
5701c87a8ffdc90dcae3dad642a494500fab9978,"Merge pull request #2884 from Juanlu001/patch-1

Fixed choice docstring, wrong default size",numpy/random/mtrand/mtrand.pyx
1899991549a318e508b3b0ba9f376ecd8d1ccdde,"Fixed choice docstring, wrong default size

Commit acf7421128b9d974d5153759650b7aaee3c2efec introduced a change in the handling of the `size` argument but the docstring wasn't updated accordingly. This commit fixes the issue.",numpy/random/mtrand/mtrand.pyx
0aaf70bd8b9cf149dbde17dc48dff228df180324,"MAINT: Move offset calculations into special function

Also adds a test to check offset calculation is correct when
setting strides for a base array with negative strides.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/getset.c,numpy/core/tests/test_multiarray.py
cce1c45afa3d821c5ca313f06b2481e55c98a238,"Merge pull request #2879 from rgommers/issue-413-arm-failures

Fix ARM failures (gh-413)",.travis-make-py24-virtualenv.sh,.travis.yml,numpy/core/tests/test_errstate.py,numpy/core/tests/test_half.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_umath_complex.py
2be873f9590d1c68f8cf2357cd0a1c72bd5874ed,"BUG: Fix CheckStrides and strides setter checks for available memory

This changes the logic of PyArray_CheckStrides to really check the
full extent the new array will have. It also changes the stride
setting to calculate the full real extent of the underlying array
without assuming (usually correctly) that the strides of the base
array are regular.

Add some tests for cases that previously failed.
This ""closes Issue gh-2503""
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/getset.c,numpy/core/tests/test_multiarray.py
8c05bdbe4a7555628c758967b8800e3e981363e2,"TST: remove Python 2.4 and 2.5 testing from Travis config.

Done because for 1.8 we're not supporting these Python versions anymore,
and this PR break 2.4 compatibility.
",.travis-make-py24-virtualenv.sh,.travis.yml
bcbfea461a61a12ea91622d7569b256381570f9f,"MAINT: remove painful to look at exec statement from np.errstate test.
",numpy/core/tests/test_errstate.py
9ff6aed1f261706df4e50dc482f004500a98548a,"TST: skip floating point warning test failures on ARM.  Closes gh-413.
",numpy/core/tests/test_errstate.py,numpy/core/tests/test_half.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_umath_complex.py
c74586282e4598e70b9b2473ee987785e2a61477,"Merge pull request #2874 from certik/fixdoc

DOC: Add missing minus sign",numpy/doc/basics.py
9e7f462b0dc386a856ec07c21876b07016c9258b,"DOC: Add missing minus sign

The int64 data type allows numbers from -9223372036854775808 to
9223372036854775807. The minus sign was missing.
",numpy/doc/basics.py
a457fd2a2a8bcd99c7e4a25c56051de46dc06525,"Merge pull request #2873 from sandrotosi/master-numpy.org

DOC: fix array interface documentation links",doc/numpybook/numpybook.lyx,numpy/core/include/numpy/ndarraytypes.h
e615890269ac9cfb26ebb490eaef76bbe4845642,"fix array interface documentation links
",doc/numpybook/numpybook.lyx,numpy/core/include/numpy/ndarraytypes.h
c56826b9255b232053d5189286dd545d736a262d,"Merge pull request #2872 from sandrotosi/master-numpy.org

DOC: point links to www.numpy.org",bento.info,doc/source/dev/gitwash/git_links.inc,doc/source/dev/gitwash_links.txt,setup.py
864353e4f2ce74e81416ee5071d8b6c4ce9e2934,"move to www.numpy.org
",bento.info,doc/source/dev/gitwash/git_links.inc,doc/source/dev/gitwash_links.txt,setup.py
4a3c3478ececa99d0382ca9a8d9d134d4bdd256d,"Merge pull request #2863 from njsmith/remove-weird-type-check

FIX: remove a spurious check in get_cast_transfer_function",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_dtype.py
6b788c890be45f527cb7cf938279014053a36185,"Merge pull request #2864 from certik/addpy3.3

BLD: Add support for Python 3.3 in paver",pavement.py
e924692e8de9fa3e36bda48e6d4070b73f870037,"BLD: Add support for Python 3.3 in paver
",pavement.py
678ad43878dfae3a85362c549a8a5ab6bf5c48f1,"FIX: remove a spurious check in get_cast_transfer_function

At least, I hope it's spurious. Certainly it's creating a spurious
error message, is unexpected by callers (one of whom specifically
makes the *opposite* check before calling get_cast_transfer_function),
and even if it is a useful check for some reason I can't see, it
certainly doesn't belong in this function (which is otherwise just
taking care of byte-swapping and alignment issues and doesn't know
anything about dtypes). And worst case, we'll have turned an exception
into a crash; even if I'm wrong, this shouldn't cause any code to go
from working to not working, just from broken to slightly-more-broken.

Test and original diagnosis by @cgohlke.

Fixes gh-2798.
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_dtype.py
ec8236e20db1bbb66df2b5c1bd0c281422a7c9c5,"Merge pull request #2858 from certik/document_datetime

DOC: Thoroughly document datetime issues",numpy/core/src/multiarray/datetime_strings.c
8a99edc3c6ae2c48c0f21d1bce5553a8540b85e0,"DOC: Add a blank line to multiline comments

Multiline comments should begin with a blank line. This patch fixes it.
",numpy/core/src/multiarray/datetime_strings.c
a8c641ffa03d23932ab5aea9d8ccced0f919ac8c,"DOC: document the change in .base

Forwardport gh-2737.
",doc/release/1.7.0-notes.rst
75bb79c26dc6f4f8fde066db6eeb99caa1fbcc8b,"DOC: Thoroughly document datetime issues

After understanding the issues with datetime (see gh-568), I have documented my
understanding as comments in the code, so that the next time there are problems
with datetime on some platform, one can quickly figure out what is going on
from the code + comments.
",numpy/core/src/multiarray/datetime_strings.c
7a0c495cdd0e07e6e8430db96aed98510845c0c2,"Merge pull request #2856 from certik/fix568

FIX: Use the NPY_TIME_T macro everywhere",numpy/core/src/multiarray/datetime_strings.c
15022cbfc5fdbae023fae3b8384459d2dee07c53,"FIX: Use the NPY_TIME_T macro everywhere

Previously, two (critical) parts of the code used `time_t` instead of
`NPY_TIME_T`. Due to the fact, that most of the time `NPY_TIME_T` was equal to
`time_t`, this bug didn't show up. But in mingw, `NPY_TIME_T` is actually equal
to `__time64_t` and then this causes 64 bit integers to be cast into 32 bit
integers (thus becoming negative), which causes localtime() to fail in mingw.

Fixes gh-568.
",numpy/core/src/multiarray/datetime_strings.c
db671db12269c6aedfbfcabfb2f17b991b44d1d0,"Merge pull request #2850 from certik/travis_fix

TST: Replace Python 3.1 test with 3.3.",.travis.yml
8093d5aaa64c51570bd89fb089fcc1505f6a404d,"Merge pull request #2853 from certik/forwardport2797

Forwardports #2797",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py
1f1537eff87721f9d3829513eadb1fe85fc1d866,"Add fix to unit test; remove debug logging

Add check to see if 12 bytes is a valid size for a long double
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_dtype.py
0f5afde4b719d622f4530c707d9577eea6c131fd,"Add debug logging to figure out why unit test fails on Travis
",numpy/core/src/multiarray/conversion_utils.c
83de7cd1810f38a845d7e281943d46c5e225633b,"Refactor unit tests and add DECREF

- Refactor unit tests for invalid dtypes so that each test is on a separate line. This will make it easier to figure out which typestring is failing the unit test.
- Add Py_DECREF for temp variable
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_dtype.py
18e73ab359968875e7df6a0b45e788feee8fd716,"Modify unit tests for 32 bit support
",numpy/core/tests/test_dtype.py
4237c6e3e2396ef0b7e9130d0c0bf15c4cba9afa,"Refactor to cover more cases; modify unit tests
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py
86dbd45bfd2753000a90756cc947089657f3db54,"Fix invalid typestring size

Revert to pre numpy 1.7 behavior where invalid typestring size was ignored and isplay deprecate warning. This warning should eventually be changed to an error in future numpy versions.
",numpy/core/src/multiarray/conversion_utils.c
9fba6c53301852ebf9d238752653a8b4e2247b26,"Merge pull request #2852 from matthew-brett/add-mailmap

ENH - .mailmap file to harmonize git shortlog",.mailmap
8ea667dc9a4bdb2417cf635418da27b6203e8d42,"ENH - .mailmap file to harmonize git shortlog

Reduce duplicates in git shortlog
",.mailmap
3abd8699dc3c71e389356ca6d80a2cb9efa16151,"Merge pull request #2800 from seberg/issue2755

BUG: Fix regression for in1d with non-array input",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
834d32bbdeda076d1dff12ab54338421d365ef4b,"TST: Replace Python 3.1 test with 3.3.

Travis does not support 3.1 anymore, but supports 3.3. See:

https://groups.google.com/d/topic/travis-ci/02iRu6kmwY8/discussion
",.travis.yml
c9325530b499f205b46d444d2f00be1bc49c9e23,"Merge pull request #2710 from jsalvatier/mapapi3

MapIter API 1d iteration fix and tests",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/tests/test_multiarray.py
9d44aaa352149a34fbc521486c07ca9187140768,"Merge pull request #2836 from cgohlke/patch-2

Fix unicode tests for flexible string representation on Python 3.3",numpy/core/tests/test_unicode.py
ec11084018d741a6f3401aaf68e8bcaf7e55428e,"Merge pull request #2818 from juliantaylor/spelling

fix a spelling error",numpy/random/mtrand/mtrand.pyx
7bc44a289758d13c4c5ccc7bc062dac8c8186160,"Merge pull request #2833 from charris/fix-deprecation-tests

MAINT: Refactor test_deprecations.py",numpy/core/tests/test_deprecations.py
b0695a8fa7d2f7d2ba1c1d295be3e3379084c4ae,"Merge pull request #2835 from charris/update-1.8.0-notes

MAINT: Cleanup 1.8.0-notes.rst.",doc/release/1.8.0-notes.rst
db52df0fd82ed084926075709cc3cd61dad3435e,"Merge pull request #2834 from charris/cleanup-1.7.0-notes

MAINT: Update and cleanup 1.7.0-notes.rst.",doc/release/1.7.0-notes.rst
36ea64728586003b6a70ea9ff2c2e021481b8fc5,"TST: Add tests for constants.

Test the values of np.pi, np.e, and np.euler_gamma to make sure
they are correct to relative tolerance 1e-15.
",numpy/core/tests/test_umath.py
2d2ae9c6411925aee53a4348a6db1616f00dc497,Fix unicode tests for flexible string representation on Python 3.3,numpy/core/tests/test_unicode.py
f7555b9b8237f88b83722d2a1533cc8585ef0737,"Merge pull request #2779 from charris/add-euler

Expose the Euler-Mascheroni constant",numpy/core/src/umath/umathmodule.c
5cd7e76024ed84569580a079733d86de0542424b,"DOC: Note that Euler's constant is exposed in numpy 1.8.0.
",doc/release/1.8.0-notes.rst
e610b2bd76a1ff2702ac57d38dd79afa6d3e477a,"MAINT: Cleanup 1.8.0-notes.rst.

Remove contents of 1.7.0-notes that were left when it was copied,
note that support for Python 2.4 - 2.5 has been dropped, and note
deprecation of non-integer indices.
",doc/release/1.8.0-notes.rst
7f1f57de438ece90761bc9b5bdce7394c26778e8,"MAINT: Update and cleanup 1.7.0-notes.rst.

The master branch version had diverged from the release branch.  This
brings them back into sync, adds a mention that Python 2.4 - 2.5 support
has been dropped, corrects spelling errors, does some reformatting, and
removes trailing whitespace.
",doc/release/1.7.0-notes.rst
b2ffc82caf9ac9f650e14d8acdfe612058d28cfa,"MAINT: test_deprecations.py cleanups.

Removed unneeded imports, corrected spelling, and put C function
references in double back-ticks.
",numpy/core/tests/test_deprecations.py
b0ac985036918c39322e18d06bd69523cfef9e39,"TST: Add test for in1d ravelling

The behavior of in1d is not really defined here, but it should
be at least consistent over different execution branches. This is
what it has been for most usages.
",numpy/lib/tests/test_arraysetops.py
6d7bcd963b28f8381ccc15500194496cdca810c7,"MAINT: Refactor test_deprecations.py

Remove an unwanted print statement and make the verbose test output
more readable.
",numpy/core/tests/test_deprecations.py
afde23f1897812570f176227fb1d32245c28bb3c,"Merge pull request #2831 from certik/fix2738

FIX: Fixes the segfault in PyArray_FromScalar",numpy/core/src/multiarray/scalarapi.c
3c23c9f6f50b5bea5f449cddd607d5758e4b45b1,"FIX: Fixes the segfault in PyArray_FromScalar

The problem was that PyArray_NewFromDescr() steals a reference to typecode and
so any further usage of it is undefined. Apparently this bug only appeared in
debug version of Python 3.2. The fix is to simply INCREF typecode and then
carefully DECREF it at each possible exit from the function.

Fixes gh-2738.
",numpy/core/src/multiarray/scalarapi.c
5f04dc8a53346e8225d0865a0e7064e4f4d93d4b,"Merge pull request #2823 from seberg/random-choice-state

BUG: internal call fix in random.choice",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
7706227842c5d57804a99ce35ac191be542938da,"Merge pull request #2812 from dwf/deprecate_scalar_float

Deprecate non-integer scalar indices and slice parameters",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/private/npy_pycompat.h,numpy/core/tests/test_deprecations.py
bb0952d780fd0488c9ea872e33c0bf9d79fe7607,DOC: Comments about deprecation timeframe.,numpy/core/tests/test_deprecations.py
83d890e21ecd991976a44af040521fd800c7a175,"BUG: internal call fix in random.choice

An random.random call from within mtrand was done by a call to
np.random.random instead of inside the class. This can possibly lead
to non-deterministic results after seeding.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_regression.py
45a7a064bc8244bc26db03c6348a0761331dfdc9,"fix a spelling error
",numpy/random/mtrand/mtrand.pyx
8ff916a47d9a64baeb16f02c8cf502b11c15b177,"DOC: Deprecation info for float-slicing.
",numpy/core/tests/test_deprecations.py
1515155e32ece1bd6dfe1ea85101ede9a8b1c44c,"ENH: DeprecationWarning for non-int slice indices.
",numpy/core/src/multiarray/iterators.c
5de9999d82fa2353fce4518a83c187a168bf2aa3,"TST: Add tests for non-int slice deprecation.
",numpy/core/tests/test_deprecations.py
3a0b66e47f53f5664c281c7e4f63f3fe9ddd1f87,"TST: disable DeprecationWarning tests in 2.4

These DeprecationWarnings use a Python 2.5+ feature (PyIndex_Check) and
don't fire for 2.4 (support for which will be dropped shortly anyway).
",numpy/core/tests/test_deprecations.py
5acc7df970c005ef52d87563450da3303db04467,"REF: nested conditionals for readability.
",numpy/core/src/multiarray/mapping.c
4f7d3ff253888b9508f1ec06b8fea6ce1d92b502,"Merge pull request #2794 from mwiebe/complex_copy_misalignment

BUG: Attempt to fix sparc segfault (gh-2668)",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_regression.py
5db0088b97982a5bf9b63ff4fe577a9e570525a4,"Merge pull request #2792 from certik/multi_arch

Add multiarch paths to the distutils' ones",numpy/distutils/system_info.py
aa8c948f8375854398b79aa3cfc027f18bf5344f,"FIX: Add multiarch paths to the distutils' ones

Thanks to Julian Taylor and Sandro Tosi from Debian for the original patch.
Ralf has posted a link to the patch here:

http://article.gmane.org/gmane.comp.python.numeric.general/51454

I have modified the patch to remove the bare except command only catch the
OSError. Also I suppress the stderr.
",numpy/distutils/system_info.py
2ca3a2488e67cb09b9c8bfbd2f59ed73dad12b74,"ENH: Add NPY_INLINE to _is_full_index.
",numpy/core/src/multiarray/mapping.c
484f876d00cdf84a9ec23d38463f266579a8e966,"REF: move tuple checks into function.
",numpy/core/src/multiarray/mapping.c
9c87855da1e90eeeab84880c3c442041d52ea398,"STY: comment blank line/*'s.
",numpy/core/src/multiarray/mapping.c
ac749afb940857b74158ce60ff780db12ed5e558,Fix typo in module-level comment.,numpy/core/tests/test_deprecations.py
783130c6c81dc096b47a0f44ef62872ab81da9f8,"BUG: Bubble errors from _tuple_of_integers.

Refactors _tuple_of_integers a little bit in order to propagate error
state. Zero indicates failure of the test (given tuple is not a tuple of
integers), whereas non-zero indicates either success (positive) or
an exception during the warning (negative). This allows us to use
(ret = _tuple_of_integers(...)) as an if condition, and then put the
error handling inside the if body.
",numpy/core/src/multiarray/mapping.c
e5fce7847d58faf6eeaf4efb591e99977698d927,"BUG: Explicitly bubble errors up, simple case.
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c
0aa1a4b81a603be4e4e975b6f00485e0eb7899b0,"TST: Add back failing tests + negative index.
",numpy/core/tests/test_deprecations.py
cdeb48be603323b2db9e6cc3eb6441f75ec622f6,"Merge pull request #2793 from certik/pull-request-2727

This is PR #2727, but rebased",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
830126cd7c5853daf50a9bf4bd3ac649096182b6,"TST: Add tests for deprecation warnings.
",numpy/core/tests/test_deprecations.py
f354ade123accc4be71654b3fe6511aabf232594,"STY: C code style.
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c
5b1d7d60f7067c2355291633d08c31f1f3c036f1,"DOC: Clarify a C code comment.
",numpy/core/src/multiarray/mapping.c
48a06cf8c9e559913c90bfb584e9a44fbed59e01,"ENH: warning on silent truncation of indices
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/private/npy_pycompat.h
c95da7d48b2b6ff135b15bb9cd169e7e7bc692ef,"TST: Add a test for bug gh-2668

This is the test attached to the bug from Matthew Brett.
I tried to make a simpler test, but it didn't repro
the problem.
",numpy/core/tests/test_regression.py
35dc14b0a59cf16be8ebdac04f7269ac455d5e43,"Merge pull request #2772 from ContinuumIO/field_names

BUG: Fix bad call of internal function and fix usage of PyField_Names",numpy/core/src/multiarray/scalarapi.c
9c5a9226e7d742e3549d4e53d07d53517096f123,"Merge pull request #2795 from d5h/issue_2551

Fix distutils build_src with 'c++' in swig_opts and a c++ comment in the...",numpy/distutils/command/build_src.py
686bcfd8a7f8de0886f993fad9fc3608ba476708,"Merge pull request #2747 from mdboom/fix-masked-recarrays-with-objects

cannot access masked array rows with np.object dtype (Fixes #2432)",numpy/ma/core.py,numpy/ma/tests/test_mrecords.py
6d3950c8ac3ad6088a473acc7d68ba405c14267c,"BUG: Fix regression for in1d with non-array input

There was a regression introduced by the speed improvement in
commit 6441c2a. This fixes it, and generally ravels the arrays for
np.in1d. However it can be argued that at least the first array should
not be ravelled in the future.

Fixes ""Issue gh-2755""
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
b7b54cdd91305e9334564c7bf388192e35016c77,"Merge pull request #2791 from juliantaylor/ma-python

add platform specific python include directories to search paths",numpy/distutils/system_info.py
761ba5dda03fededefea449672ace4560fd409a7,"Fix distutils build_src with 'c++' in swig_opts and a c++ comment in the .i file (issue #2551)
",numpy/distutils/command/build_src.py
e0dd41c0a7a4ec75f6f00dc6ef33f67964ea14b3,"BUG: Attempt to fix sparc segfault (gh-2668)
",numpy/core/src/multiarray/dtype_transfer.c
c97f405d47d059c00df6b2aea7f79fc5c520dda6,"BLD: MSVC build fix for switch of PyArray_DATA to void*

Build errors because void* doesn't have a size, so
adding an offset to it is disallowed.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c
24a1bcdcef3ce15f43402d36c8efa077777a8a4c,"MAINT: Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
7f9d7bcf616371f3318513ca5500f19124f573e1,"TST: Add tests for new feature and fix in random.choice
",numpy/random/tests/test_random.py
3e5b9b2366607bc3d85b60c34b370327e491e1ef,"BUG: Fix various problems in the previous commits.

Thanks to @alan-isaac for pointing out the 0-d vs. scalar issue.
",numpy/random/mtrand/mtrand.pyx
7b10fc90097c514e24cd477af5c1e47349d1c0ac,"BUG: Do not sort new indices in random.choice.

Random choice used np.unique to find new indices when replace
was False and p given. This is wrong since unique will sort the
indices. This solves the bug, but likely not ideal.
",numpy/random/mtrand/mtrand.pyx
2da0d2288667202ff489ba7b922b534ca98768f3,"ENH: make random.choice size argument default to None and allow tuple

The size argument to random.choice should work like it does for all
other functions in random as well.
",numpy/random/mtrand/mtrand.pyx
c6c95f4fd6e117ee70ece40e61f567480f628a8e,"add platform specific python include directories to search paths

the generic and platform specific path diverge in python3.3 in ubuntu 13.04
",numpy/distutils/system_info.py
d8370da29094cebb33271604d941ca5789929a26,"Merge pull request #2746 from GaelVaroquaux/fix-470

FIX: base always refers to the original subclass",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_memmap.py
d0c0f14260e9ad758c398902288100d533ca3ea5,"DOC: use bold for section names, monospace for variables in HOWTO_DOCUMENT.
",doc/HOWTO_DOCUMENT.rst.txt
7b75899f586ee476affbf89572d0105996725d94,"Merge pull request #2745 from certik/fix_warnings

TST: Catch possible warnings",numpy/ma/tests/test_core.py
b531ed2c4ae4c51eced5973f56690b9096227b3e,"Merge pull request #2780 from luispedro/pyarray-data-voidp

API Make PyArray_DATA return void*",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/getset.c
457b78f503bbde12c4b2b2ecf25137d7244cca38,"Add a test
",numpy/ma/tests/test_mrecords.py
7855b2605d96a5b9efe1ae48cb8d7554caaba1de,"API Make PyArray_DATA return void*

PyArray_DATA is documented as returning void*. Changing it to return
char* breaks code such as (in C++)::

    float* my_floats = static_cast<float*>(PyArray_DATA(my_array));

PyArray_BYTES returns char*, but is otherwise the same function.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/getset.c
86d7845ecddd26c8fadea1ad688077ad3a45d784,"MAINT: Use NPY_E to expose 'e'.

Previously 'e' was defined as exp(1.)
",numpy/core/src/umath/umathmodule.c
f8700f047be2a1079161874d632a55785bc1da88,"ENH: Expose Euler-Mascheroni constant.

This closes issue gh-2753.
",numpy/core/src/umath/umathmodule.c
7887c16fcceb995a6416cf32bb4a0702bf08a7bb,"goto fail better
",numpy/core/src/multiarray/mapping.c
3fcbdf8abdc19b169d43bfa964442ef928e55ed3,"removed fancy check and added more informative message
",numpy/core/src/multiarray/mapping.c
b3bf8ea01f23d394052dc0d771409f3deb6fada4,"wrong error check
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
663b3ec83467c6a9a3f9c627bf6610b59747cdaf,"gave PyArray_MapIterBind an error code on exit
",numpy/core/src/multiarray/mapping.c
a82639fa4945ccb3ddb16f9e1095a8aefaff1959,"tabs -> spaces
",numpy/core/tests/test_multiarray.py
da7770c0f818787c69cc75d9969ae9efbaa537ce,"added a fix for 1d iteration which was failing and a test to test that case
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_multiarray.py
a289be867f810e076eec4558610032bf4bc5a174,"Merge pull request #2777 from seberg/issue2775

BUG: Fix bad memory access for 0-sized outputs in numpy dot",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
300783c0ed1518ad1335f3aad9a4bda35f5e1123,"BUG: Fix bad memory access for 0-sized outputs in numpy dot

This fixes a bug where bad memory was written to in non-blas
numpy if the output was a (0, N) array. Closes ""Issue gh-2775"".
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
2e28619f968cf053d936c036752c96a31e49ab97,"Merge pull request #2774 from endolith/patch-3

Add note about definition list classifier format",doc/HOWTO_DOCUMENT.rst.txt
9c02535a58e0faa12dc3186129753d46001998a3,"Add note about definition list classifier format

and some other small changes",doc/HOWTO_DOCUMENT.rst.txt
e9beee6dc9753e9f2e148d9e574d59f219390420,"BUG: Fix bad call of internal functionand fix usage of PyField_Names
",numpy/core/src/multiarray/scalarapi.c
09d82ea2cd0664c7dbbf1b8c17700b0b71a05278,"Merge pull request #2703 from astrofrog/fix-masked-fill-view

Don't reset the fill_value of a MaskedArray when calling view() with no dtype",numpy/add_newdocs.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
b209e190994c31b95bba3acf9936c451a01e1e31,"Merge pull request #2758 from rgommers/cython-warnings

TST: also filter Cython warnings in NoseTester.  See PR-432.",numpy/testing/nosetester.py
f83663870f9d29753ae3c2b36615ea1c9421e00b,"Merge pull request #2691 from stefanv/histogram_2d_doc

DOC: Clarify confusing histogram2d docstring.",numpy/lib/twodim_base.py
83ca0fde4e62f0e7190f2609bc8944ed2a14261e,"Merge pull request #484 from endolith/rfftfreq_and_fft_docstrings

ENH: add rfftfreq() and DOC: cleanup fft docstrings",numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/tests/test_helper.py
dcc2633805d248bbf27e676a562b63edbde6dfea,"DOC: remove ""the"" from description, single backticks are for variables only
",numpy/fft/helper.py
840cbbe04023f99b1e4235152e06a16dfd8a0879,"DOC: Further tweaks to histogram2d docstring.
",numpy/lib/twodim_base.py
2596867bd3165fcde339cbb06d8879085bc5d3b1,"DOC: Reword ""Hermite symmetry"", clarify units of sample spacing
",numpy/fft/fftpack.py,numpy/fft/helper.py
02447200226894e15ee6bd61ca94e28fedf3e4a4,"Merge pull request #2769 from njsmith/fix-travis-reinstall

FIX: Use 'pip' for travis build",.travis.yml
f3905dc9fe00382e7ac666bacabc429c8b92d634,"FIX: Use 'pip' for travis build.

Closes gh-2768.
",.travis.yml
749e5c1c47a12530018839edf8358457d74224ad,"DOC: Fix length mistake in docstring (rfft length is n//2+1, not n)
",numpy/fft/helper.py
b6ea9f411b77cdd6e6013d8b4e329671c5032e62,"DOC: Add rfftfreq to Helper routines in fft module's docstring
",numpy/fft/info.py
0d593f2aa13ebf865a62a74b9085f554d33b275c,"Merge pull request #2765 from charris/fix-travis-heisenbug

Fix travis heisenbug",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_regression.py
625b426e77b159c2f7036de05fb3184f40e51bc1,"TST: Add a test for the rfftfreq() function
",numpy/fft/tests/test_helper.py
a3dbac20451f686acfb8597e1da9604a8ab7185d,"DOC: Clarify the frequencies of the rfft using fs, borrowing text from numpy.fft docstring
",numpy/fft/fftpack.py
089bfa5865cd39e2b40099755e8563d8f0d04f5f,"Merge pull request #2766 from g2p/master

Assume we can use sys.stdout.fileno() and friends.",numpy/distutils/exec_command.py
1065cc5f9565fd28b6b31c1d6c8004335298e21c,"Merge pull request #2767 from charris/fix-buglets

Maint: fix buglets",numpy/core/tests/test_regression.py,numpy/tests/test_matlib.py
df2958e28d5542d1ae515f6ed0ba1fc0a1c728bd,"Code cleanup
",numpy/distutils/exec_command.py
da5ee659fcc7891794dd18dc48b057eb72f08025,"BUG: Remove print statement in test_endian_recarray.

This print statement was responsible for the annoying 1 that
showed up in the test output stream.
",numpy/core/tests/test_regression.py
e33dbfcc42f2d241f10866e0cb8c08a5922fedc8,"BUG: Import run_module_suite in test_matlib.py

This is needed so test_matlib.py can be run by python.
",numpy/tests/test_matlib.py
649c90831075b5141b56e321f21c576ee58a06a6,"Assume we can use sys.stdout.fileno() and friends.

The workaround shouldn't be necessary in a recent python shell.
Tested in python, ipython.

In fact, distutils is almost never imported and run manually from an
interactive shell.

This removes the use of `sys.__stdout__`, which broke with distribute
0.6.30 on Python 3.
",numpy/distutils/exec_command.py
1871820bf16635270a124ba577282ec00cb093a7,"MAINT: In test_varstd_specialcases out parameters should be 0-d.

The original worked, but that is because the masked array methods
are not properly checking dimensions in this case. That should
also be fixed at some point.
",numpy/ma/tests/test_core.py
65ed5ebfeac3fb6ff8896bf624e1e08113901b76,"MAINT: Avoid unneeded call in masked array std method.

The square root of the variance was taken twice when the out parameter
was specified.
",numpy/ma/core.py
7678c988f88305bfb9be516700e8e05d902f1631,"TST: Add test for gh-2757.
",numpy/ma/tests/test_regression.py
38c150c20fa0b141aa1189b67dbaa781ee90b457,"BUG: gh-2757, masked array var method should zero masked out parameter.

When a is a 1-d masked array with all values masked and b is a 0-d masked
array, then a.var(out=b) fails to set the underlying masked value of b,
causing an invalid value warning to be raised in a.std(out=b) whenever b
contained a masked negative number. This fix sets the underlying value to
0, which is consistent with the n-d case. A better fix might be to add an
out parameter to the masked array ufuncs, but that is a bigger project.
",numpy/ma/core.py
dadf5b992802edc6d286b2ea3fd8e446759ad998,Minor fix to fill_view test,numpy/ma/tests/test_core.py
dba24990f8bef9a5a1e67ef86ff6c58d8f59082f,Improvements to ndarray.view docstring,numpy/add_newdocs.py,numpy/ma/core.py
ab66c255dc867ac00450960adeac29910dc4fa66,"Clarified MaskedArray.view documentation, and added more tests",numpy/ma/core.py,numpy/ma/tests/test_core.py
9f1b8721dc2e1b69112fa5b94b3a70b37661cc84,"TST: also filter Cython warnings in NoseTester.  See PR-432.

There a resetwarnings() call, so need to add back these filters.
",numpy/testing/nosetester.py
20224ea62ed42a3ebc0795f62b78309ff9ab1a8a,"Merge pull request #2733 from astrofrog/fix-fill-value-python3

Fix setting of fill_value for string columns in Python 3",numpy/ma/core.py,numpy/ma/tests/test_regression.py
069323db3d7863d7d777a8329eb76ac07002870e,"Merge pull request #2754 from seberg/reshape_segfault_issue

BUG: Incorrect type in _attempt_nocopy_reshape",numpy/core/src/multiarray/shape.c
bdfae97c25a290eb415c3330eb3ef2898dcdc40c,"BUG: Incorrect type in _attempt_nocopy_reshape

This caused a segmentation fault for some large reshapes as reported
by Terry J. Ligocki on the mailing list.
",numpy/core/src/multiarray/shape.c
4bacc463602fb7acf3729fb54a5f9797c0038501,"Added test for fill_value behavior in MaskedArray.view, and use fill_value to set the fill value, rather than _fill_value, since using fill_value takes care of setting _fill_value to an array.",numpy/ma/core.py,numpy/ma/tests/test_core.py
2a43ed339f1350872207b9871ebdc3fbd0a68d26,"Added a `fill_value` keyword to `MaskedArray.view`, and clarify the behavior in the docstring.",numpy/ma/core.py
15d1aa3b50f22eeb74d27ba7f5ad75b5777b2d87,Change test to use np.testing.assert_,numpy/ma/tests/test_regression.py
14c7faa1a39d38f6d42f3c751a86afd25ee320d8,"wrong error check
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
b86deb746fa996f9311bd02ef6eb0098aba5de70,"gave PyArray_MapIterBind an error code on exit
",numpy/core/src/multiarray/mapping.c
724da615902b9feb140cb6f7307ff1b1c2596a40,"Merge pull request #2726 from peterjc/msvc10

Cope with MSVC v10 aka 2010",numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py
9bd89e470c3f3128f6a61fe9fa133a99b7887bbd,"MAINT: Don't use assert to check variable type
",numpy/fft/helper.py
277a01e515624d4bfbcc1b66846fcaccb1bc0cea,"Merge pull request #2749 from pv/f2py-docstring

ENH: f2py: generate docstrings in Numpy docstring format",numpy/f2py/capi_maps.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py
7b3e6fa5c8eb92eeab20bfbb6f4298d97396e103,"TST: f2py: rewrite strings to be easier to read
",numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py
4b500dd8dbeb6e1c02a32cbc7ab27b5f6db3331f,"ENH: f2py: add 'Wrapper for ...' text to the docstring
",numpy/f2py/rules.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py
ab13a65447d245e64b59c466827b2415d77ec186,"ENH: f2py: generate docstrings in Numpy docstring format
",numpy/f2py/capi_maps.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py
2a5f8ca6b5022e0ad51a95858348b7507a9a7a2f,"Merge pull request #2748 from pv/npymath-extern

BUG: core: wrap npy_math.h into extern ""C"" so that it works correctly in C++",numpy/core/include/numpy/npy_math.h
e1a67c3d88b5a7a5d414e80c9eddd88e0676728c,"BUG: core: wrap npy_math.h into extern ""C"" so that it works correctly in C++
",numpy/core/include/numpy/npy_math.h
0196aedb5cfe00ce35e26fb3ff2081bae7d6f05e,"Fixes #2432.  Rather than creating a new data array and assigning to it (which doesn't work when it is a recarray containing object fields), just create a copy with the np.array constructor.
",numpy/ma/core.py
69d57d074c7e3ad9b73954f5f2e1519e3d2760b7,"MISC: fix whitespace in C file
",numpy/core/src/multiarray/arrayobject.c
b3bcda21d6586cb304b0278c944c9b2b740283da,"COMMENT: fix grammar in comment
",numpy/core/src/multiarray/arrayobject.c
e4fe78926c0dac9ee2bc5678d4d6a567598e2c3a,"FIX: base always refers to the original subclass

Closes #470

The use case is that if b is a memmap, 'np.asarray(b).base' should be a
memmap, and thus we put is to b in such a situation.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_memmap.py
2d841a8edc7acc3054937912b150d7a23764c41c,"TST: Catch possible warnings

Previously the test sometimes fails with the following error:

======================================================================
ERROR: Test a special case for var
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.2/lib/python3.2/site-packages/numpy/ma/tests/test_core.py"", line 2731, in test_varstd_specialcases
    _ = method(out=mout)
  File ""/home/travis/virtualenv/python3.2/lib/python3.2/site-packages/numpy/ma/core.py"", line 4778, in std
    np.power(out, 0.5, out=out, casting='unsafe')
RuntimeWarning: invalid value encountered in power

----------------------------------------------------------------------

Now we catch it, as recommended by the thread:

http://old.nabble.com/Should-abs(-nan-)-be-supported--td34389839.html
",numpy/ma/tests/test_core.py
3418ffc228a8eaa414f66879301b228d4fc029e8,"Merge pull request #2744 from stefanv/setup_etal

PKG: Fix minor typo in setup.py.",setup.py
ddbb4bd5cd3ce1b0a48b0a0d1e4a78d02eb99f98,"PKG: Fix minor typo in setup.py.
",setup.py
067b5f860d290c321cb5ed791db7f19960afb00f,"Merge pull request #2707 from rgommers/ticket-2243-downloadlink

BUG: fix download link in setup.py (which is shown on PyPi).",setup.py
9f1ee24ec0801e3980c904dd1bf27e752ee8c1dc,"Merge pull request #2736 from certik/fix415

FIX: Mark a tests knownfail on Hurd",numpy/core/tests/test_memmap.py
40d02916e9cf846dde88ccb7fc2b7f9ebd0d0308,"Merge pull request #2708 from ContinuumIO/base_traversal

Update base-traversal algorithm to stop at sub-class boundary",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_memmap.py
f6cab0a8afc16137e8e0edb3e657494d37d8d211,"FIX: Mark a tests knownfail on Hurd

Fixes gh-415. This test raises ""Function not implemented"" on Hurd:

======================================================================
ERROR: test_flush (test_memmap.TestMemmap)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/build/buildd-python-numpy_1.7.0~b2-1-hurd-i386-Ws9GSv/python-numpy-1.7.0~b2/debian/tmp/usr/lib/python3/dist-packages/numpy/core/tests/test_memmap.py"", line 72, in test_flush
    fp.flush()
  File ""/build/buildd-python-numpy_1.7.0~b2-1-hurd-i386-Ws9GSv/python-numpy-1.7.0~b2/debian/tmp/usr/lib/python3/dist-packages/numpy/core/memmap.py"", line 301, in flush
    self.base.flush()
mmap.error: [Errno 1073741902] Function not implemented

Which seems like a Hurd issue:

http://web.archiveorange.com/archive/v/dpz3Spjqy0ESHmXKVt7c

http://lists.gnu.org/archive/html/bug-hurd/2002-11/msg00243.html

So we mark it as knownfail on that platform.
",numpy/core/tests/test_memmap.py
ddb71564755d2ce803f7bd00614ae160e1a618b9,"Merge pull request #2734 from certik/fix2731

FIX: Python 3.2 debug assertion",numpy/core/src/multiarray/common.c
2654edef63b09c07e3c960a7424da1fd8eb75c20,"FIX: Python 3.2 debug assertion

Fixes gh-646, gh-2731. The patch was originally attached to gh-646 by ""skrah"".
",numpy/core/src/multiarray/common.c
4171e5093ff85391458da09342f32dec25822496,"Fix setting of fill_value for string columns in Python 3
",numpy/ma/core.py,numpy/ma/tests/test_regression.py
780c1a6bb6d18bc21fed7fa251faffb9ea51e861,"Merge pull request #2730 from leschef/faster_dot

ENH: Remove the need for temporary copies in numpy.dot",numpy/core/blasdot/_dotblas.c,numpy/core/tests/test_blasdot.py
e31eb4bb807dc58f112abdf79056806cafac7f9c,"Removed trailing printf statement
",numpy/core/blasdot/_dotblas.c
ea037770e03f23aca1a06274a1a8e8bf0e0e2ee4,"ENH: Remove the need for temporary copies in numpy.dot

in numpy core, modified the blas function call to handle
C and F order arrays without the need for copy.
This brings a significant speed up for matrix multiplication
Added a full test for matrix multiplication in test_blasdot
",numpy/core/blasdot/_dotblas.c,numpy/core/tests/test_blasdot.py
24523565b5dbb23d6de0591ef2a4c1d014722c5d,"Handle MSVC v10 in _MSVCRVER_TO_FULLVER
",numpy/distutils/mingw32ccompiler.py
1d498f54668a9a87286fa31f2779acbb048edd39,"Cope with two digit major number in MSCV v10
",numpy/distutils/mingw32ccompiler.py
d8ead4c83364f9c7d4543690eb12e4543c608372,"Include msvcr100 (MSVC v10 aka 2010) in msvc_runtime_library()
",numpy/distutils/misc_util.py
cb41689b6150b0d325755b469fba975ce105361f,"Merge pull request #2722 from seberg/stride_set

BUG: Update aligned flag when setting strides attribute.",numpy/core/src/multiarray/getset.c,numpy/core/tests/test_regression.py
c479200918f034f587d24ba59c0550d2241ddf9a,"Merge pull request #2723 from pv/py24-fix

BUG: fix Python 2.4 build with NPY_SEPARATE_COMPILATION",numpy/core/src/umath/reduction.c
bee8c4d2474bbd21acfbd4d7e8c71cf12b3d6227,"BUG: fix Python 2.4 build with NPY_SEPARATE_COMPILATION
",numpy/core/src/umath/reduction.c
0db7a4ac73d88b4ef4a717d688a7308f047d277c,"tabs -> spaces
",numpy/core/tests/test_multiarray.py
7c90615c9a34c688e7b77986df7b3250501053f3,"BUG: Update aligned flag when setting strides attribute.
",numpy/core/src/multiarray/getset.c,numpy/core/tests/test_regression.py
c6f27b0742a34f6215fcfd42541b9e9696796682,"Fixed a mistake in linalg.eig() documentation.
",numpy/linalg/linalg.py
75b8119f8145ab08a436ecfd7de868c6c6ba8f6d,"Merge pull request #2693 from glyg/master

DOC: more reproducible example in linalg.solve docstring",numpy/linalg/linalg.py
5cddd6d89c6e2282834ab1cc12efafd91ae6e08a,"Merge pull request #2717 from cbrueffer/cleanup

Looks good to me. Thanks",INSTALL.txt
6c948c5bca99c4a030e67fcc5bb2c0b9d8c72658,"Fix typos.
",INSTALL.txt
82c0bb8a964c10b4c37665c5f2f6885fa46cd6a1,"Fixes that let PyArray_DATA and PyArray_BYTES be used as lvalues.

* pull-2709:
  BUG: Remove pointer cast from the PyArray_DATA macro.
  BUG: Remove pointer cast from the PyArray_BYTES macro.
",numpy/core/include/numpy/ndarraytypes.h
e614443709ab49e4a5f2533b038e650f564d3d07,"BUG: Remove pointer cast from the PyArray_DATA macro.

This lets PyArray_DATA be used as an lvalue as some compilers raised an
error with the previous version. The type is now determined by the type of
the struct member and is char*.  PyArray_BYTES had the same problem when
used as an lvalue in Theano and the same fix is used here.  This problem
needs a bigger fix at some point as the function equivalent of the macro
does not return an lvalue.
",numpy/core/include/numpy/ndarraytypes.h
cf0f98595cf2e0c69b5432d54bd6ceef57540c67,"BUG: Remove pointer cast from the PyArray_BYTES macro.

This fixes a compilation problem encountered with numpy 1.7 when the
PyArray_BYTES macro was used as an lvalue in Theano. The macro worked as an
lvalue in 1.6 and in 1.7 only the struct name was changed, which makes the
problem a bit of a mystery, but Theano compiles with this fix.
",numpy/core/include/numpy/ndarraytypes.h
93be7c0ca93735faac3c9b03b6844a4f9ed90d71,"Merge pull request #2702 from seberg/issue2700

BUG: Reshape of 0-sized arrays failed to work without copy.",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
3b559fd7425cdfc1a58dd5e7a2ce492395e8c5de,"added a fix for 1d iteration which was failing and a test to test that case
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_multiarray.py
88124ae879e4f900311ef254529ba36378b34da8,"BUG: Update base-traversal algorithm for array sub-classes so as to stop the base-traversal when the new base would not be an instance of the sub-class.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_memmap.py
58c1bf7f6171e774197784787e98125ae2f6f349,"BUG: fix download link in setup.py (which is shown on PyPi).

Closes Trac ticket 2243.
",setup.py
0d275f114e49ef5f9569832be2743aa85c4bb4e1,"MNT: Remove _check_zeros from NewShape

_attempt_nocopy_reshape already handles this case fine. The only
purpose would be to slightly speed up this special case.
",numpy/core/src/multiarray/shape.c
237e816e203a2a5a190e23e28d945e0f089663ed,"BUG: Reshape of 0-sized arrays failed to work without copy

This also adds a check for order=Keeporder which is not supported.
""closes Issue #2700""
",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
3e99f32b8e32fcb7bd16c7c4a3163e778d07cdc6,Don't reset the fill_value of a MaskedArray when calling view() with no dtype,numpy/ma/core.py
526b7647ad3e0c295340e7b85593364eeadc5686,"Merge pull request #483 from astrofrog/fix-masked-getitem

When accessing MaskedArray rows, always return an mvoid object",numpy/ma/core.py,numpy/ma/tests/test_core.py
a890a8584319c2978735eef96ecaefefacad6346,"Merge pull request #2694 from seberg/cflags2

ENH: Make 1-dimensional axes not matter for contiguous flags",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numeric.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/reduction.c,numpy/core/tests/test_api.py,numpy/core/tests/test_regression.py,numpy/tests/test_ctypeslib.py
02ebf8b3e7674a6b8a06636feaa6c761fcdf4e2d,"MNT: Remove unnecessary special cases in _UpdateContiguousFlags

Remove unnecessary special cases for 0 and 1-d arrays as suggested
by njsmith.
",numpy/core/src/multiarray/flagsobject.c
25f536362d0417269a474ebee5815fe615bf5872,Fixed parenthesis typo,numpy/linalg/linalg.py
f88e07af35f35340ad6c0df10946aead4d2fdd51,Taking njsmith comment into account ,numpy/linalg/linalg.py
4d741d282641ae7bd152ec6d89de8f24e9983267,"MNT: Minor cleanups in comments and lowlevel_strided_loops.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/private/lowlevel_strided_loops.h
dbe4468825bd1626cd3e90edcbf69a72df3d5180,"TST: Check if contiguous flags are correct in various situations
",numpy/core/tests/test_api.py
dc2e3b7cace2d82702f163d39cb83adfab99ea3e,"Correct `linalg.solve` doc string

Fixes issue 2692",numpy/linalg/linalg.py
c5ccca92c5f136833ad85614feb2aa4f5bd8b7c3,"Merge pull request #482 from ContinuumIO/void_scalar_hash

BUG: Fix void_scalar hash function to use the elements of the record in ...",doc/release/1.8.0-notes.rst,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
dc4e38bb792825d7da23500c01b1cbd9dc4595b5,"BUG: Fix bug with size 1-dims in CreateSortedStridePerm

This reverts changes done to CreateSortedStridePerm in commit
9194b3af. The problem is that it would fail for 3x1x3 Fortran order
array for example. And special handleing seems unnecessary at least
after 1-dim axis not mattering for contiguous flags.
This ""closes Issue #434""
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/reduction.c,numpy/core/tests/test_api.py
a0891abcd7deea0af6f1e7b91e59d1da2101bdff,"MNT: Remove unnecessary stride/flags cleanup.

This code is unnecessary with changed flags behavior. It would
only serve the purpose of making strides look nicer for the
user.
The UpdateFlags was only required since 1-dim axis being removed
might change contiguous flags. But this cannot happen now.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c
8daf1443eae7e35bc8b6349e5304bd9bf2142ae7,"API: ctors changed so that contiguous flags ignore 1-dim axis

This changes ctors.c so that new arrays are created in such a way
that they are both C- and F-contiguous if possible. Also fixes
some corner cases for 0-sized arrays.
",numpy/core/src/multiarray/ctors.c
c48156dfdc408f0a1e59ef54ac490cccbd6b8d73,"API: Change Flags Updateing to allow C-/F-contiguous arrays

This changes UpdateFlags to ignore 1-dimensional axis when
setting C-/F-contiguous flags. Updates both flags always now.
",numpy/core/src/multiarray/flagsobject.c
44f83e29b4f43648ee943d9e4d170a181cae9a6b,"TST: Test order='F' combined with C/F-contiguous arrays.

Both ravel and asarray misbehaved on 1D (or more generally
C and F-contiguous arrays if order='F' was specified. Speed
test for .tostring seems not feasably.
",numpy/core/tests/test_regression.py
0e10f55839ee0c2dc361f0a74990cbe8d83a66fd,"BUG: Replace ISFORTRAN by IS_F_CONTIGUOUS.

In a few places ISFORTRAN was used to check for f-contiguouity.
This is incorrect, since ISFORTRAN never evaluated to True if
the array was also c-contiguous.
",numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/shape.c
4b281479db093a55c010610ad287c75beb6da13b,"API: Change isfortran to f-contig and not c-contig

This was a check for 1-d arrays, this is the generalization to
higher dimension if we allow higher dimensioal arrays to be both
f- and c-contiguous.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numeric.py
fb64bbf12f2405b3dc97f7736ae3dc35daf615dc,"TST: Update ctypes tests for changed contiguous flags setting.

This is unrelated to what is actually tested here.
",numpy/tests/test_ctypeslib.py
b46f589439201afabbcc9be586617e395ccc6c19,"ENH: Do not rely on clean strides for loops.

In lowlevel_strided_loops.h, do not rely that the strides for
contiguous arrays are set nicely since they can be considered not
important if an axis dimensions is zero.
",numpy/core/src/private/lowlevel_strided_loops.h
1895b157062beecbc68a0459db0d5280153e698a,"FIX: Update release notes.
",doc/release/1.8.0-notes.rst
2e2f4522275af6e256c243e2b43bf5fc1d37b07c,"DOC: Clarify size of odd-length FFTs, default `d` for fftfreq, and some PEP8 style fixes
",numpy/fft/fftpack.py,numpy/fft/helper.py
4ddb4df47c156bee8271ca4ac444a6760d321e32,"ENH: Add rfftfreq() for numpy's rfft(), which behaves differently from scipy's rfft()/rfftfreq().
",numpy/fft/helper.py
184c8d05120855012250fbc1d7f5f0991bec3eb4,"BUG: Ensure that writeable records are not hashed.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
8d83ae93706d3486447a9b40908995b406178111,"STY: drop some else clauses in roll
",numpy/core/numeric.py
1532b7cce4a296d2fc5a6ef2eea68376c57daa19,Fixed failing tests,numpy/ma/tests/test_core.py
7caac2efd9b2c9ccf4b886fc6273c9ebbcd6c9da,"When accessing MaskedArray rows, always return an mvoid object",numpy/ma/core.py
fe6f42c427239d36579723085cc5207cedd8dcd1,"Merge pull request #480 from matthew-brett/fix-distutils-log-warning

FIX: remove log line causing warning from disutils",numpy/distutils/misc_util.py
ebc9bbb0f1d3f316254b29f8965112c85b63e62f,"Merge pull request #476 from njsmith/copy-memory-order

[FIX] preserve memory order in np.copy()",numpy/add_newdocs.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
87930c4c30f14226ae8ceb0340858fd9940d67ea,"Merge pull request #466 from seberg/issue465

BUG: Fill correct strides for ndmin in array creation",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
96abba1a14db89b933f1a4514c48c3e25af019a1,"Merge pull request #454 from seberg/issue380

FIX: Issue #380",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
ca27396b2f32befb7465c4a245329716cb212b80,"Merge pull request #444 from 87/fix_array_iface

Fix for issue #291",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
a0a1863ac67be681d593859a67e154b7c0931af4,"TST: Add one more test.
",numpy/core/tests/test_multiarray.py
8b80043bc363bd0a02d4f01b2b565775cbff3069,"BUG: Fix void_scalar hash function to use the elements of the record in the hash computation just like the tuple hash
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
fd9ee7317a54ca1fa891a721476a0464308bcd72,"REF: move blas/lapack check into bento.
",bscript
8be8ce82453be30deae730920ba863db398d3051,"BUG: fix in-place build.
",numpy/core/bscript
eed2372f602c8baba959c5cb138e27de7736e07d,"FEAT: blas/lapack can be configured from command line.
",bscript
20825a9b01d22525216f5fd440ffb3d99dca12ef,"ENH: add support for arch autodetection.
",bscript
926c5adbf74ee5e9b51fcc8fc8ffc0aa6ee309bc,"Merge PR 377: expose Mapiter in the numpy API.

* PR-377:
  inplace passes tests
  fixed tests
  added initial mapiter tests
  eliminated oned and fancy arguments to MapIterArray
  changed error handling for clarity
  removed expsure of mapiter type
  changed the name of _swap_axes
  gave MapIter an API
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/setup_common.py,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
65bd91defe76f225d27b58a21a89dc5dcf7c53c2,"inplace passes tests
",numpy/core/code_generators/numpy_api.py,numpy/core/tests/test_multiarray.py
d05d9994f7345ee3de599a2e27b830ff192f90ff,"fixed tests
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
f9f949871c04aea7e2463ec7d40ad64f219cd520,"added initial mapiter tests
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
9194042e31301ddd7375e8f3a392e3841b8a4164,"eliminated oned and fancy arguments to MapIterArray
",numpy/core/src/multiarray/mapping.c
262610140504198b7a1542b65831db78bba50cb8,"changed error handling for clarity
",numpy/core/src/multiarray/mapping.c
7c64889c079b21ee1b802f7149698b27d36315e3,"removed expsure of mapiter type
",numpy/core/code_generators/numpy_api.py
860a1f71d0faf267e468f8e09e9903c00910a14e,"changed the name of _swap_axes
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/mapping.c
471dde9985d89cfa2442f80753dc639f4908134d,"gave MapIter an API
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/setup_common.py,numpy/core/src/multiarray/mapping.c
7078f01420626e8261389ce558cb27d750d6650e,"FIX: remove log line causing warning from disutils

Using numpy.distutils through easy_install caused a RuntimeWarning
because of a failed import of numpy.distutils.

Discussion here:
http://thread.gmane.org/gmane.comp.python.numeric.general/51719

The conclusion seemed to be that the safest fix is to remove the one
line of logging in the relevant callback.

Thanks to Ralf Gommers for the suggestion.
",numpy/distutils/misc_util.py
3f10c36339c0fe40e72378a990e6b3c5423805fb,"Merge pull request #477 from seberg/ticket2218

BUG: Fix complex to bool conversion in lowlevel_strided_loops",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_regression.py
0022325e516fd249bd1b754b9363f2b8b793d148,"Merge pull request #455 from rgommers/devguide-update

Devguide update",doc/source/dev/gitwash/development_setup.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/following_latest.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/gitwash/patching.rst
43f1d5c6ae33fb23b494a2039b303aab3e0e8186,"Merge pull request #459 from jseabold/fix-unicode-repr-object

Fix unicode repr object",numpy/core/arrayprint.py,numpy/core/tests/test_arrayprint.py
a8ffb486a825104362698f9738d1759a63251724,"TST: Complex to bool conversion (Ticket 2218)
",numpy/core/tests/test_regression.py
f085bc29c5c5fe47c2e1c5481aef016917439cd1,"BUG: Fix complex to bool conversion in lowlevel_strided_loops

Closes ""Ticket 2218"".
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
1a71edc55b227e590022d402e5b6558d3a9921f1,"[FIX] preserve memory order in np.copy()

This switches us back to the behaviour seen in numpy 1.6 and earlier,
which it turns out that scikit-learn (and probably others) relied on.
",numpy/add_newdocs.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
e18e7441700db0ff2fd8f51901aa416c63e35cbc,"DOC: fix a typo in a comment
",numpy/core/tests/test_shape_base.py
92ecbdde33f6f61712d7d1a0e4500c76a65aac7a,"TST: Add more tests.
",numpy/core/tests/test_multiarray.py
de3075f5484a6e71273633bc1202c0971f8889e2,"BUG: Disallow shapesize > 1 when coercing scalar to array
",numpy/core/src/multiarray/ctors.c
097e823c84048a85082e4e1c9e35952ad39b2064,"ENH: Assume object is scalar if no shape and data attribute are given
",numpy/core/src/multiarray/ctors.c
acdf49b8cf4090dae1640a12ad4b919c6dc40feb,"BUG: Handle scalars correctly.
",numpy/core/src/multiarray/ctors.c
78d0272b42c0cbece26d79e197734ea0a0a360fa,"Merge pull request #449 from seberg/setobjref

FIX: PyErr_SetObject does not steal reference (Ticket 2216)",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/umath/ufunc_type_resolution.c
c5e8990bd857fd0869e7437428e5bf0d491336a0,"TST: Test that ndmin honors requested and original order.
",numpy/core/tests/test_regression.py
095534fbceb34b03a5c963acd77834a9b001bf38,"BUG: Fill correct strides for ndmin in array creation

Closes ""Issue #465"", strides need to be set according
to the requested contiguous flags.
",numpy/core/src/multiarray/multiarraymodule.c
1ea15928299f3dcb320a7482fc9df8650547b663,"Merge pull request #461 from nouiz/doc

small doc update",numpy/add_newdocs.py,numpy/core/numeric.py
c006f6195090f0524ca0510f9d7f716747d8b3d5,"Add doc to {empty,zeros,ones}_like that tell in witch version their dtype and order parameter was added
",numpy/add_newdocs.py,numpy/core/numeric.py
a3e883ac7a3ae5de88455d782752045464fe9f07,"DOC: Used regex to find colons missing spaces which render wrong online, also other spacing or formatting mistakes
",doc/sphinxext/tests/test_docscrape.py,numpy/add_newdocs.py,numpy/build_utils/common.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/setup_common.py,numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/lib/arraypad.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/matrixlib/defmatrix.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
0f5bbfaec635de96892e003457a1d638bf0c3786,"TST: Change expected output for Python 3.
",numpy/core/tests/test_arrayprint.py
4134859a39ac6d8f292b3469c4f399827eaf4578,"Merge pull request #457 from njsmith/fix-diagonal-refcounting

BUG: Fix memory leak in PyArray_Diagonal",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
8e0a542830e336a036ab9ca64a7ccf87d1953c40,"BUG: Use numpystr for arrayprint fallback instead of str
",numpy/core/arrayprint.py
04fddc0a2d017eef03345f9b3afb0622c9d50584,"TST: Add failing test for unicode array with object dtype
",numpy/core/tests/test_arrayprint.py
80b3a3401382cb3f14c5b76dd90d9f932f50ad15,"BUG: Fix memory leak in PyArray_Diagonal

Thanks to Gael Varoquaux for the catch.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
622045abdc567ae3f4995ed355f3fc690533621e,"TST: reshaping of zero strided array (Issue #380)
",numpy/core/tests/test_regression.py
6a847ef7361f4ab4910e69f20cb740d4a2eca4b6,"Merge pull request #440 from matthew-brett/crazy-axis-concat-warning

BUG: allow any axis for np.concatenate for 1D",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
7a5a8ad078615036ddf9bc0323aedf4a706296ab,"BUG: strides should only be changed if dimensions==1

This fixes Issue #380"".
",numpy/core/src/multiarray/shape.c
c8010d0ebca7e0d84c653a9440faf12d26feed9e,"Merge pull request #451 from njsmith/unsafe-cast-deprecation

Unsafe cast deprecation",doc/release/1.7.0-notes.rst,doc/source/reference/ufuncs.rst,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
c906fdce4daaae37df7e6a8abc291f04caf35ea4,"DOC: expand sections on commit messages and merging/rebasing in the devguide.

This commit address comments from Charles on PR #455.
",doc/source/dev/gitwash/development_workflow.rst
12e8079011ce231dacd0ba118b847311e87766fc,"BUG: PyErr_SetObject does not steal reference.

Closes ""Ticket #2125"" and ""Ticket #2216""
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/umath/ufunc_type_resolution.c
0dd5a76bcc3da1c3b016a1304bba31c6c55cdeb4,"DOC: one more edit to the dev-guide.

Recommend to update master before creating your feature branch.
Thanks to Nicky van Foreest for feedback on the dev-guide.
",doc/source/dev/gitwash/development_workflow.rst
936fb7c3e2636bfc7f1f9ece72ab37e3df073bba,"DOC: remove section ""Patching"" from dev-guide.

This section is outdated, and following it pretty much ensures that your
patches will languish in Trac.
",doc/source/dev/gitwash/development_setup.rst,doc/source/dev/gitwash/following_latest.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/gitwash/patching.rst
32d13f613b3528f3110db54ccf2095ecdac9faa6,"DOC: a few edits to make ""Development Workflow"" in the dev guide clearer.
",doc/source/dev/gitwash/development_workflow.rst
5a6601af7696c277310df44ad7cea6a84c01d8bc,"DOC: document in dev-guide how to write a good commit message.
",doc/source/dev/gitwash/development_workflow.rst
fd63e8f7dcbab6b7c66bd4be400153592319e7b3,"Merge pull request #420 from seberg/contig

Reset flags when Axes are removed. Array might now be 1D, or removed axe...",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
c8ed8baac1921be53d31d014760f9b278d4b9c2e,"Merge pull request #365 from bfroehle/static_f2py_size

BUG: Exported f2py_size symbol prevents linking multiple f2py modules.",numpy/f2py/cfuncs.py
f18987a69c297b5602b00c22b9759d2ece4a7bf1,"STY: another wording tweak (thanks to @charris)
",numpy/core/tests/test_ufunc.py
c038fe59a8c355fee50a6c2ac236e750e0ad0ad5,"STY: fix up style and a few wordings on previous commit
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py
cea0a209875be753a74b8c7bb02aa9531726ee98,"FIX: Transition scheme for safer in-place ufunc operations

In numpy 1.6 and earlier, if you do
  np.add(int_arr, float_arr, out=int_arr)
or
  int_arr += float_arr
then the result will be silently truncated to integer values. This
often produces bugs, because it's easy to accidentally end up with an
integer array and not realize it.

Therefore, there seems to be consensus that we should switch to using
same_kind casting by default for in-place ufunc operations. However,
just switching this (as was done initially during the 1.7 development
cycle) breaks a lot of code, which is rude and violates our
deprecation policy.

This commit instead adds a special temporary casting rule which acts
like ""unsafe"", but also checks whether each operation would be allowed
under ""same_kind"" rules and issues a DeprecationWarning if not.

It also moves NPY_DEFAULT_ASSIGN_CASTING into the formal API instead
of leaving it as a #define. This way we can change it later, and any
code which references it and is compiled against this version of numpy
will automatically switch to whatever we change it too. This avoids
the situation where we want to remove the temporary magic value we're
using to create DeprecationWarnings now, but can't because it would be
an ABI break.
",doc/release/1.7.0-notes.rst,doc/source/reference/ufuncs.rst,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_ufunc.py
47086158cb00a151b67c442ae759ce230ec0de34,"ENH: More capable test functions for warnings

1) New function assert_no_warnings
2) Make assert_warns and assert_no_warnings pass through the
   function's return value on success, so that it can be checked as
   well.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
32b1e64dfe854091a8ac4dbc38ca035f207419e9,"BUG: Fixes for Python 3.x
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c
9597b1fdef7c46b0d1b1485fb680099ec7115f76,"Merge pull request #419 from stefanv/modinit

Use PyMODINIT_FUNC and update docs accordingly.",doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/blasdot/_dotblas.c,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c,numpy/f2py/rules.py,numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c,numpy/fft/fftpack_litemodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/numarray/_capi.c
58aefff1ab5a23a42db29479bc05cc93237588e1,"Merge pull request #446 from cgohlke/patch-1

Style: consistently use spaces instead of tabs in .py files",numpy/build_utils/waf.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/pathf95.py
ccbf5cf2fc35ec0a3e2c184fb846bb808aee3610,"MAINT: Use linspace instead of arange in some examples.

The original code used arange with offsets and scaling to generate
sample points. Using linspace simplifies the code and clarifies
the intent.
",numpy/lib/function_base.py
0ab86f0073faf3ff6e22902f8c45e41f62e0f703,Style: consistently use spaces instead of tabs,numpy/build_utils/waf.py
d7215411dab5aade2a70d2938adb4308c923b054,Style: use 4 spaces per indentation level as per PEP8,numpy/distutils/fcompiler/pathf95.py
44381b83edccdd747643323b7f592c96e1f002ba,"Fix whitespace formatting

Use spaces instead of tabs",numpy/distutils/fcompiler/gnu.py
54b4dc7d40d013e388fabc81a4e36a4a8c0ed1a4,"BUG: Make sure empty shapes are disallowed when data is specified
",numpy/core/src/multiarray/ctors.c
bfceb537ee18c02537fd56b76328bd000a272ff2,"TST: Add test for special case in array interface
",numpy/core/tests/test_multiarray.py
9e7a7665394f8f314428343a6c7a9dfdcadf40ed,"BUG: Make shape check for special case a bit stricter
",numpy/core/src/multiarray/ctors.c
fa967ee478e819ce34ee6de2745f3be4c5350b67,"ENH: Allow objects to use the array interface without specifying data
",numpy/core/src/multiarray/ctors.c
69afd27b870cd85f06c4409fcffd0734ddb2fe76,"TST: test DeprecationWarning raised by concatenate

From review by Nathaniel - thanks.
",numpy/core/tests/test_shape_base.py
4475eadaa879cdc82f5331abc22ab47b99e6b040,"BUG: change FutureWarning to DeprecationWarning

Use of PyErr_WarnEx causing failure for Python 2.4.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
21a1d73627992d4d904150a0056ae8d55af6f1b5,"BUG: allow any axis for np.concatenate for 1D

Previous numpies allowed the user to pass any integer as axis argument
to np.concatenate, when the input arrays were 1D.  At some point we
tightened up on this, raising an error for axis values other than 0.
This raises a FutureWarning for axis numbers != 0, but allows them, for
backwards compatibility.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
d8988abc295ef2d6cf1e3a5ffb0d766ebd4cd3a8,"Merge pull request #441 from matthew-brett/astype-doc

DOC: describe output from astype method",numpy/add_newdocs.py
93cbc839d471e01a6cd2228f622e9908c15965df,"Merge pull request #443 from 87/fix_concat

Fix for issue #442",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_shape_base.py
7c183a5d03ae31a6369cdcc608b4e4fabf83484f,"TST: Add test for concatenate with None-axis
",numpy/core/tests/test_shape_base.py
027c3d91b6b5bbc0f7e50cce8a39da439e165d39,"BUG: Concatenate with axis None should work regardless of matching array shapes
",numpy/core/src/multiarray/multiarraymodule.c
9ff9c0a16cca3d41b17932f776bd8ffce676737c,"Merge pull request #433 from rgommers/intel-fortran-flags

MAINT: update Intel Fortran compiler flags for the 21st century.",numpy/distutils/fcompiler/intel.py
5bfd65a55517e7a0af60d31e8dba6dc2f6b87df1,"DOC: describe output from astype method

Expand docstring for ``astype`` method.
",numpy/add_newdocs.py
a17875bbf54d19a29621a173d177d56047ad4ad7,"Merge pull request #432 from rgommers/silence-cython-warnings

MAINT: silence Cython warnings about changes dtype/ufunc size.",numpy/__init__.py
aed8fc547bfac6f3d9248e65a53e3eae6393a715,"Merge pull request #429 from 87/fix_insert

Fix for issues #392 and #378",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
b6a1acdd6c989e6e2ab6d68f1b60af030bcccc49,"Merge pull request #431 from njsmith/fix-travis-py24-build

FIX: use py24-compatible version of virtualenv on Travis",.travis-make-py24-virtualenv.sh
6315567d69fd58e607ef1c75f2a9cbeb0b451dd7,"Merge pull request #430 from njsmith/test_pareto-fix

FIX: loosen numerical tolerance in test_pareto()",numpy/random/tests/test_random.py
854f67f29753a892ad79605b971821247fe84044,"MAINT: update Intel Fortran compiler flags for the 21st century.

Thanks to Intel for this contribution.
Note that there's also an MKL application note which recommends these flags:
http://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl
",numpy/distutils/fcompiler/intel.py
170ed4e33d6196d724dc18ddcd42311c291b4587,"MAINT: silence Cython warnings about changes dtype/ufunc size.

These warnings are visible whenever you import scipy (or another package) that
was compiled against an older numpy than is installed.  For example compiled
against 1.5.1, like current scipy binaries are, and used with 1.7.0.

These warnings aren't useful; if numpy would really break its ABI it would be
noticed in no time without these warnings.
",numpy/__init__.py
9c9d4bc6d1c8feb3c268b6421fe01f02eebfd3ab,"FIX: use py24-compatible version of virtualenv on Travis

Travis recently upgraded to virtualenv 1.8, which has dropped support
for Python 2.4. So, in our Python 2.4 setup script, we need to
explicitly fetch and use virtualenv 1.7. Likewise for pip 1.1.

File imported from the already-fixed version for patsy:
  https://github.com/pydata/patsy/blob/0316d2901f4195db06e8091c15f37d9fe4ad09de/.travis-make-py24-virtualenv.sh
",.travis-make-py24-virtualenv.sh
a16f387350c9524c45ca36ff26dbb2c431d9dc41,"FIX: loosen numerical tolerance in test_pareto()

The problem was that in 32bit Ubuntu 12.04, one gets the following:

>
/home/njs/numpy/.tox/py27/local/lib/python2.7/site-packages/numpy/random/tests/test_random.py(363)test_pareto()
-> np.testing.assert_array_almost_equal(actual, desired, decimal=15)
(Pdb) actual[1, 0]
52828779.702948704
(Pdb) desired[1, 0]
52828779.702948518

and the test was comparing the numbers to 1e-14, which obviously
failed.

Fixes #424.
",numpy/random/tests/test_random.py
1688b29fb1ea4e548762ae79522c50abce88d55b,"TST: Add test for boolean insert
",numpy/lib/tests/test_function_base.py
1e6f7a7db94afc69f88ebf0b0235888dc377ce25,"TST: Add extra test for multidimensional inserts.
",numpy/lib/tests/test_function_base.py
926564c195d30542312123b7d76fe091c3453881,"BUG: Fix for issues #378 and #392
This should fix the problems with numpy.insert(), where the input values
were not checked for all scalar types and where values did not get inserted
properly, but got duplicated by default.
",numpy/lib/function_base.py
a744f3cd24d2ad920f311dc58878a861599bd01b,"BUG: fix npymath install location.
",numpy/core/bento.info,numpy/core/bscript
ef61260e9ecc21b273ca4655db511d9636c8b441,"BUG: fix custom post_check.
",numpy/build_utils/waf.py
2d48841465749f36f3b7129266630d1bd99676fa,"BUG: forgot to build _dotblas in bento build.
",numpy/core/bento.info,numpy/core/bscript
cdd8095b7d27c57111de60acb240e012ffa5eace,"REF: remove unused imports in bscript.
",bscript
a72ce7edc9ff9e98ba73251c626abccb0691415e,"Update numpy/core/code_generators/ufunc_docstrings.py

Revert PR #423 (which was based on a misunderstanding).",numpy/core/code_generators/ufunc_docstrings.py
4c73e7c5b2953d338a91ab912d3077c09acadaed,"Merge pull request #423 from adamlwgriffiths/master

Fix typo in documentation (101 instead of 10). ",numpy/core/code_generators/ufunc_docstrings.py
0f1d2d929a0f7babb6d4471e987be1da34e06e34,"Fix typo in documentation (101 instead of 10).

Examples demonstrate using an array with (-10, 0, 10),
but this specific example has a typo that lists the
last number as 101.
This is reflected in the diagrams having axis labeled
from -10:+10.
",numpy/core/code_generators/ufunc_docstrings.py
380ce9436c3c94de60ef9ada40f3917990ed1472,"Tests related to Issue #387
",numpy/core/tests/test_regression.py
e4bafb2a4a3c682aaec18cc184c6a95ee1a30c26,"Reset flags when Axes are removed. Array might now be 1D, or removed axes of size 1 destroy contiguousity.
",numpy/core/src/multiarray/shape.c
ead9e09c5adbc94bfc3c5cc8344089b836cfffd5,"Use PyMODINIT_FUNC and update docs accordingly.

See https://github.com/scipy/scipy/pull/279
",doc/source/user/c-info.ufunc-tutorial.rst,numpy/core/blasdot/_dotblas.c,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c,numpy/f2py/rules.py,numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c,numpy/fft/fftpack_litemodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/numarray/_capi.c
cd9092aa71d23359b33e89d938c55fb14b9bf606,"Merge pull request #417 from certik/fix416

FIX: Regenerate mtrand.c with Cython 0.17",numpy/random/mtrand/mtrand.c
727cbc4a71aa088d479dd4b3508a0f5cc16cbf7b,"FIX: Regenerate mtrand.c with Cython 0.17

Fixes #416
",numpy/random/mtrand/mtrand.c
7d30cada0e3ec6119c30212238c4d8d7fe678dc5,"Merge pull request #397 from certik/fix2189

BUG: Add a test for Ticket #2189",numpy/core/tests/test_regression.py
96525749fbecc6695f0dfbf2a7b00ec0105a1078,"Merge pull request #376 from cgohlke/patch-2

Allow long numbers in numpy.rec.array formats string",numpy/core/_internal.py,numpy/core/tests/test_dtype.py
fab65b74554c4a6118707167dedbfcec630f7a2a,"Merge pull request #404 from certik/pr401_fix

FIX: simplify the import statement",numpy/core/_internal.py
84698e3e0f4c60c39ea778a3c0aada9d76b5f93a,"Merge pull request #393 from stefanv/ndindex

Improve ndindex execution speed.",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
bb0e4f356cce2f199d9c08ffe572fbabadc846d1,"Retain backward compatibility. Enforce C order.
",numpy/lib/index_tricks.py
942bdb26bee477a8ac2c6b1c1c963c52c7c08403,"Improve ndindex execution speed.
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
0713354fa282f096e30886e7617d84ee2938390d,"FIX: Add a test for Ticket #2066
",numpy/core/tests/test_regression.py
cb5a27eacb0165752fc5ab82633911d90df28af4,"BUG: Add a test for Ticket #2189
",numpy/core/tests/test_regression.py
e60c70d7ca5dbe45860c44673ddab02d47770155,"Merge pull request #405 from certik/pr400_fix

BUG: Fix ticket #1588/gh issue #398, refcount error in clip",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_regression.py
103988055053f7a30083fd28c0887a5f2922a67c,"BUG: Add a test for Ticket #1588

The bug was fixed by the previous patch.
",numpy/core/tests/test_regression.py
8b2e6bed904415006d59344b27a0b23b35fab9ca,"BUG: Fix ticket #1588/gh issue #398, refcount error in clip

This patch enforces a strict dichotomy for the variables 'indescr'
and 'newdescr', so they are either NULL, or they own a reference.
Following the consequences of this allowed the reference error
to be tracked down.
",numpy/core/src/multiarray/calculation.c
8c75aa01e2f4ec02eb1d852a14da3e9e03107da8,"Merge pull request #395 from certik/fix369

FIX: bug in np.where and recarray swapping",numpy/core/src/multiarray/scalarapi.c,numpy/core/tests/test_regression.py
0086bbc0145b9e9612b299e0b36b4782160c9ce1,"FIX: simplify the import statement
",numpy/core/_internal.py
c6d8734eddc133d2fe6babc7bde53d5e981945a1,"Merge pull request #401 from jayvius/get-view-fix

BUG: Fix Ticket #2187",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
93100c92b57dd9663b688fdd94efc7d05ef7ff38,"Fix returned copy

Fix returned copy so that copy of view with offsets copies only fields in view, not all the fields from original array. Also add unit tests to make sure this doesn't break when copy is fully deprecated in favor of returning a view.
",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
68320a10f2e29a70a9a39110263c040aab689147,"Merge pull request #390 from rgommers/silence-deprecation-warning

MAINT: silence DeprecationWarning in np.safe_eval().",numpy/lib/utils.py
ecbd938adb1a370017a5ff8ca20b2c66141f48fe,"FIX: bug in np.where and recarray swapping

Fixes #369 and the Ticket 2185

Thanks to @seberg for providing the patch.
",numpy/core/src/multiarray/scalarapi.c,numpy/core/tests/test_regression.py
5c944b9c6915264380aa2df3dcfd0629867fbe80,"Merge pull request #386 from certik/yop_atlas

pavement.py: rename ""yop"" to ""atlas""",pavement.py
132b373a3e50286534df73d07215c11d14d71dda,"MAINT: silence DeprecationWarning in np.safe_eval().

It comes from the Python compiler package, which isn't available on Python 3.x.
We already handle that issue by instead importing the ast module.
",numpy/lib/utils.py
fb2df768354e60d5d261a2523b4d2ac626c03d8c,"pavement.py: rename ""yop"" to ""atlas""
",pavement.py
63cd8f3cc751771fd27636009b8c0341a2beff45,"BUG: fix bento build.
",numpy/core/bscript
1e7979fecc787eed295e82002ee3c7c339c5a09d,Remove test_recarray_from_long_formats,numpy/core/tests/test_records.py
e391a4461507b1ba89a7ee1167d23fc13a308795,Add test for long number in shape specifier of dtype string,numpy/core/tests/test_dtype.py
1079fa42597e2a8900110f7498236e9f034d1179,Add test for long numbers in numpy.rec.array formats string,numpy/core/tests/test_records.py
d009f0f5f67dc4bad97560487d61fc399cb23c06,Allow long numbers in numpy.rec.array formats string,numpy/core/_internal.py
fcdbcac4fa300a81e687fe93a956b54e7a6f7db5,"Merge pull request #373 from cianci/concatenate_leak_fix

Fix memory leak in concatenate.",numpy/core/src/multiarray/multiarraymodule.c
4676f33f9c77b04e9c599e642de7ab465f48ea8f,"Merge pull request #372 from certik/py3.3-cleaner

A fix for the PyUnicodeObject Python 3.3",numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_unicode.py
f2ac38f09ff258339ef44572a3abba02019e1f55,"Use PyUnicode_DecodeUTF32()

This function handles the swapping automatically and it returns a unicode
object in one of: UCS1, UCS2 or UCS4 internal Python format.
",numpy/core/src/multiarray/scalarapi.c
09d2c51fa1d09b17060a8545b925f4dded9dedb1,"Follow the C guidelines
",numpy/core/src/multiarray/scalarapi.c
8a4e0f57844452ceca43388cb87f5a53c3471c80,"Fix memory leak in concatenate.

Temporary array was not being freed after use.
",numpy/core/src/multiarray/multiarraymodule.c
4234b6b13e3ee9da6fc1c24e9e8c442d77587837,"FIX: Make sure the tests produce valid unicode

The tests are testing byte order for unicode, so we can only use such unicode
data, so that both versions (swapped and unswapped) are valid unicode.
",numpy/core/tests/test_unicode.py
a9d58ab42da8d2ed9071044848a54c5e066b557a,"FIX: Fixes the PyUnicodeObject problem in py-3.3

Previously NumPy did not compile in Python 3.3 due to the changes in PEP 393.
This patch simply calls PyUnicode_FromKindAndData() from the new Python 3.3 API
and possibly swaps the data before calling it if needed. The data in NumPy is always UCS4 and the PyUnicode_FromKindAndData() internally converts it to UCS1, UCS2 or UCS4 depending on the maximum code point.

The following tests now fail, because they produce invalid unicode in the
process (will be fixed in the next patch):

======================================================================
ERROR: Check byteorder of 0-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 277, in test_values0D
    self.assertTrue(ua[()] != ua2[()])
SystemError: invalid maximum character passed to PyUnicode_New

======================================================================
ERROR: Check byteorder of multi-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 297, in test_valuesMD
    self.assertTrue(ua[0,0,0] != ua2[0,0,0])
SystemError: invalid maximum character passed to PyUnicode_New

======================================================================
ERROR: Check byteorder of single-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 286, in test_valuesSD
    self.assertTrue(ua[0] != ua2[0])
SystemError: invalid maximum character passed to PyUnicode_New

======================================================================
ERROR: Check byteorder of 0-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 277, in test_values0D
    self.assertTrue(ua[()] != ua2[()])
SystemError: invalid maximum character passed to PyUnicode_New

======================================================================
ERROR: Check byteorder of multi-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 297, in test_valuesMD
    self.assertTrue(ua[0,0,0] != ua2[0,0,0])
SystemError: invalid maximum character passed to PyUnicode_New

======================================================================
ERROR: Check byteorder of single-dimensional objects
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/home/ondrej/py33/lib/python3.3/site-packages/numpy/core/tests/test_unicode.py"", line 286, in test_valuesSD
    self.assertTrue(ua[0] != ua2[0])
SystemError: invalid maximum character passed to PyUnicode_New
",numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src
fd15162fbff5dd68c548284947d39bb2a2481183,"Merge pull request #371 from rlamy/bytes-pickle

Copy bytes object for small arrays when unpickling an array",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
d1839283a2b0b393096cf6bda9b386ea5809d4b0,"Re-enable unpickling optimization for large py3k bytes objects.

Mutating a bytes object is theoretically unsafe, but doesn't cause any
problem in any existing version of CPython.
",numpy/core/src/multiarray/methods.c
339c35f30a0a3b52b13980dabb8eeda9602b686f,"Copy bytes object when unpickling an array
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
e0457eb3e0bb146411dc9471127329c560155bb7,"BUG: Exported f2py_size symbol prevents linking multiple f2py modules.
",numpy/f2py/cfuncs.py
26fed25e7f040564e7be4f82d7cd8a8fcc8fa287,"Merge pull request #367 from cgohlke/patch-1

Fix tests for empty shape, strides and suboffsets on Python 3.3",numpy/core/tests/test_multiarray.py
02f3d1f73ca5957d3b5a3e575293e4d970de4267,"Fix tests for empty shape, strides and suboffsets on Python 3.3",numpy/core/tests/test_multiarray.py
b74c6be49424012e707733871c472fd08f154834,"Merge pull request #362 from njsmith/missing-header

[FIX] Add missing header so separate compilation works again",numpy/core/src/multiarray/mapping.c
f2f0ac06ec94c312348b49136071488f9eb3c155,"Merge pull request #364 from jiffyclub/update-testing-reference-docs

Update Testing Reference Docs",doc/source/reference/routines.testing.rst
bc9c0a91e226a3c3943f3ae1e46c939d9be7085c,"Added entries for assert_allclose, assert_array_almost_equal_nulp, and assert_array_max_ulp into the numpy testing reference documentation.
",doc/source/reference/routines.testing.rst
eebd7b2c64560ed3378f4b86413b0acaebaa9171,"[FIX] Add missing header so separate compilation works again

(Broken by PR #350.)

Should be applied to maintenance/1.7.x as well.
",numpy/core/src/multiarray/mapping.c
9cb8c3bb2fafe813e98ed52f9cbc392a082bf20e,"Merge remote-tracking branch 'upstream/master'
",numpy/distutils/fcompiler/__init__.py
efcb8bfea9fbe77ea47c4432dbacd1c5381a263f,"Update release notes.
",doc/release/{2.0.0-notes.rst
a806876ef5875720d048de24060b4a3ca9309f09,"Merge pull request #325 from ahmadia/patch-2

prefer gfortran (gnu95) over vendor compilers, g77, g95 on OSX & Linux",numpy/distutils/fcompiler/__init__.py
5b4e61b8a18d79385d503624886d9d5f2038b31b,"BUG: Fix some tests in PR #192
",numpy/lib/tests/test_function_base.py
88cf94d5ddc1c42e2ff078dc4fbb3c626efedae3,"Fix-up logic so that it is more readable.
",numpy/core/src/multiarray/common.c
7b8d30b4c1dc0f33d9988d47de24c77cbeea41f8,"Merge remote-tracking branch 'hackerschool/2028fix'
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
bc1005324566269d016ad9c17a25b43c6b9fc1de,"Merge pull request #350 from jayvius/get-view2

Add transition code for returning view when selecting subset of fields",doc/release/1.7.0-notes.rst,doc/source/reference/arrays.indexing.rst,numpy/core/_internal.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_multiarray.py
578a4199a81e7464011661fcf8d46a8af2235db2,"Merge pull request #352 from HackerSchool12/bugfix808

BF bug #808",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
0b2bfa9c13070b08b3632f15a3aa327146994cc4,"Merge pull request #192 from rgommers/meshgrid3d

Meshgrid enhancements (>2-D, sparse grids, matrix indexing)",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
c83e5b691513f235c7f1deb398943bf9cd4b35bb,"Merge pull request #327 from teoliphant/restore_api

Restore ability to not include semi-colons.",doc/source/reference/c-api.deprecations.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h
bf2c101136d7a28eb04794f24ffaaa251f4ca603,"Merge pull request #348 from njsmith/fix-shuffle

[FIX] Make np.random.shuffle less brain-dead",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/testing/tests/test_utils.py
2d4a1cf774c21016cd1336094e2e5b683a0cb1f1,"prefer gfortran over g77 and vendor compilers on OS X and Linux
",numpy/distutils/fcompiler/__init__.py
a419a3036aa8202d00eb6e857c79d66adc56bed0,"Merge branch 'master' of https://github.com/numpy/numpy into patch-2
",.gitignore,doc/TESTS.rst.txt,doc/release/1.7.0-notes.rst,doc/source/dev/gitwash/development_setup.rst,doc/source/reference/c-api.array.rst,doc/source/reference/index.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.polynomials.rst,doc/source/reference/routines.random.rst,doc/source/reference/routines.statistics.rst,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/bento.info,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/shape_base.py,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/npysort/sort.c.src,numpy/core/src/private/npy_pycompat.h,numpy/core/src/private/npy_sort.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_multiarray_assignment.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/lib/_iotools.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_io.py,numpy/lib/type_check.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/testing/decorators.py,numpy/testing/nosetester.py,tools/allocation_tracking/alloc_hook.pyx,tools/allocation_tracking/setup.py,tools/allocation_tracking/sorttable.js,tools/allocation_tracking/track_allocations.py,tox.ini
a03e8b4d286e91ef5823c059dcfb7a52ce420725,"change DeprecationWarning to FutureWarning
",doc/release/1.7.0-notes.rst,doc/source/reference/arrays.indexing.rst,numpy/core/tests/test_multiarray.py
2eb9610acab872538742ce7db5cbbae6cb23360e,"Add tests for record array indexing

- add tests for record array indexing with multiple field names
- add tests for DeprecationWarning when writing to array returned
  by record array indexing with multiple field names
",numpy/core/tests/test_multiarray.py
bf58296eae309e92d8632bad4f52d602cb8c0f22,"update 1.7 release notes
",doc/release/1.7.0-notes.rst
781468b5938ce1a79804613b222063d81e99963d,"Updated reference docs for DeprecationWarning
",doc/source/reference/arrays.indexing.rst,numpy/core/src/multiarray/arrayobject.c
a32325d1d5fc5e23622db5027a6dd35d42193e95,"Call view object's copy method
",numpy/core/_internal.py
91cb088047bd357a1b266fa8cb9d0deefea5820c,"Change WARN_ON_WRITE Deprecation Warning

Change WARN_ON_WRITE Deprecation Warning to include returning a copy
when selecting muultiple fields of a structured array.
",numpy/core/src/multiarray/arrayobject.c
0c09e1f184fde335f3533b0b9ef6ea46379309db,"fix previous commit to return copy of view instead of view
",numpy/core/_internal.py,numpy/core/src/multiarray/mapping.c
6363bb7cbb1d0e292e8af87f92a28faf781d3d95,"Add ability to get view when selecting subset of fields.

Add ability to get view when selecting subset of fields in a struct array,
for numpy 1.8.0. Currently a copy is still returned - set WARN_ON_WRITE flag
which will be removed in a future version of numpy.
",numpy/core/_internal.py,numpy/core/src/multiarray/mapping.c
6c772fab57934d24b66638ea5001eb02d1662f5e,"Merge pull request #361 from njsmith/warn-on-write-futurewarning

Switch WARN_ON_WRITE to issuing FutureWarnings instead of DeprecationWarnings",doc/release/1.7.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_multiarray.py
b8a2ea7d5416775e71266167bad3e02b292316dc,"DOC: Update API description with suggestions from charris.
",doc/source/reference/c-api.deprecations.rst
b798f12abac2c5ac807fe9f523fd89e57efaa57c,"Switch WARN_ON_WRITE to issuing FutureWarnings instead of DeprecationWarnings

FutureWarnings are displayed by default, so they should be used
whenever a future change will change the semantics of existing code
(as opposed to making existing code simply stop working).

List discussion:
  http://www.mail-archive.com/numpy-discussion@scipy.org/msg37500.html
",doc/release/1.7.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_multiarray.py
b26c675e2a91e1042f8f8d634763942c87fbbb6e,"[FIX] Make np.random.shuffle less brain-dead

The logic in np.random.shuffle was... not very sensible. Fixes trac
ticket #2074.

This patch also exposes a completely unrelated issue in
numpy.testing. Filed as Github issue #347 and marked as knownfail for
now.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/testing/tests/test_utils.py
93e42ddff0005b51fcecbc6731ab8cbd268e6e6b,"DOC: update language of C-API deprecations.
",doc/source/reference/c-api.deprecations.rst
1234d1ccc891c427e090eff6d45f8e195330f96a,"Merge pull request #360 from cgohlke/patch-3

Fix `WindowsError: [Error 32]` in test_not_closing_opened_fid (test_io.T...",numpy/lib/tests/test_io.py
08c507b740a1a8f1f55217f683938c375a006975,Fix `WindowsError: [Error 32]` in test_not_closing_opened_fid (test_io.TestSavezLoad),numpy/lib/tests/test_io.py
f369ed602922ae19f77a54838ca2e7b65697c119,"Merge pull request #332 from nouiz/fillwbyte_doc

Add doc for PyArray_FILLWBYTE to tell the ndarray must be c contiguous.",doc/source/reference/c-api.array.rst
0d59c78f227b00e0bb97731623f5cba56483e7b8,"better new doc sentence following code review.
",doc/source/reference/c-api.array.rst
4d371699a957b3f5c306ee0f5b8c2548c49338e5,"DOC: add info on docstrings in test functions/methods.  Also fix a typo.

Reviewed by @charris in combination with PR-358.
",doc/TESTS.rst.txt
78f66726040a87d3d0955f1d437c5a7c745bc632,"Added cast to error check, and fixed indentation.
",numpy/core/src/multiarray/common.c
4a2295d09d76b5e3eeeb62bc6d8f384a81af27d5,"Merge pull request #358 from rgommers/howto-generator-tests

DOC: add details on how to use generator tests to documentation.",doc/TESTS.rst.txt
23dba57bced24f74e1c0a80865f0efa617c90a33,"DOC: add details on how to use generator tests to documentation.

Thanks to Pauli Virtanen for this useful suggestion.
",doc/TESTS.rst.txt
120c6bdca272717c21ce4d79c29142ef64c457c0,"more tabs removed (hunting for c formatter to take care of this next time)
",numpy/core/src/multiarray/common.c
2c04244da264cb1665d6162ae119d2f05ad65150,"BUG: Ticket #808: Insert was not performing properly when an integer was
the argument passed to be used as the item to be insterted, and a list was
passed as the positions. This was fixed by simply duplicating the item to
be inserted so that it was a list of equal length and then control was
passed to the already exsisting code to handel this case
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
681bceb247b960b8939e021713f00d0de09900cb,"Tab Fix
",numpy/core/src/multiarray/common.c
3d3102989eb760a711db3ade580a84541e5ee403,"Style Fix
",numpy/core/src/multiarray/common.c
f9c68672f457de5a55f3919a26da865070340acb,"Merge branch 'pull-357'

* pull-357:
  BUG: change default threshold for matrix_rank
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
78b7693d1a3381aabb23b244332e5a568f58909f,"BUG: change default threshold for matrix_rank

The default tolerance threshold for matrix_rank was passing as full rank
some matrices that were numerically rank deficient.  This commit changes
the default tolerance to match the algorithm in MATLAB and Numerical
recipes.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
6966bdcf28ec709e794d4b0c65cb72b0275d8e92,"BUG: ticket #2028: When min_scalar was not checking to see if numbers could fit into unsigned long longs. This was fixed by adding an extra case to function to check if the passed number could fit into a unsigned long long if it could not fit into anything else. Additionaly, regression tests were added.
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
6a1ab0382a8a7e7415277231fedc0ee1ef60326c,"Merge pull request #355 from charris/updated-pull-307

Put PyIndex_Check in a private include file.",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/npy_pycompat.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umath_tests.c.src,numpy/lib/src/_compiled_base.c
9e5efde7ca6db3d790fa7ca39d544d019ab061e9,"STY: Remove duplicate #include.
",numpy/core/src/multiarray/nditer_pywrap.c
61236250c3cc1153b233deb0ce83c6cebbc24c64,"fixed some style problems
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py
423ddfb0484eecdf825209337b20ec929f038b6f,"STY: core: move non-Py3 specific stuff out from npy_3kcompat.h to private npy_pycompat.h

npy_3kcompat.h is semi-private, so this can be done.
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/npy_pycompat.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umath_tests.c.src,numpy/lib/src/_compiled_base.c
ce0a7912e2e909cae4c4d2fc6d9745a97d2161c2,"BUG: core: don't pollute public namespace with PyIndex_Check on Python 2.4

Public numpy headers shouldn't define a replacement PyIndex_Check.  This
causes unexpected behavior in Python2.4 in 3rd party code.
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h
afcc4cd5c645a4abdfa789f688a1e9f9f81762af,"Merge pull request #354 from cgohlke/patch-2

Add numpy specific fseek, ftell to avoid potential problems with windows and amd64.",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/npy_common.h,numpy/core/src/multiarray/ctors.c
4e74a93e31371baed2fb027123d3cd16c8832ecc,Use npy_ftell and npy_fseek,numpy/core/src/multiarray/ctors.c
2ee97d6014b4c1c2b33a02bdcf99cd1e15808360,Use npy_ftell and npy_fseek,numpy/core/include/numpy/npy_3kcompat.h
7a060fe503f52e8b042393a5c1f6fdda7329a787,define npy_fseek and npy_ftell,numpy/core/include/numpy/npy_common.h
24b74a21844f5398be0ae4e28e4191aa845547a2,"Merge pull request #353 from bfroehle/py3k_raise

ENH: np.testing.decorators: Use Py3k compatible raise syntax",numpy/testing/decorators.py
18d6b8f4246ea1b3f5718283b57f41de6211c4e7,"ENH: np.testing.decorators: Use Py3k compatible raise syntax
",numpy/testing/decorators.py
a77a7cd5ed6bc12772ba33c151f40fbe73e9d212,"First attempt at BF for 2028 and added better tests for scalarmath pow function
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py
143fb1874b3ff3875a93accad3e87056a44d77d0,"DOC: Forward port 1.7.0 release notes
",doc/release/1.7.0-notes.rst
7eec4e3e4f74eef612e807e829a2f154cb02abbe,"Merge pull request #344 from HackerSchool12/gitignoreupdate

added generated c files to gitignore",.gitignore
09c1e40cceb1f4c1b04f6afd63a7b1f53c974603,"Merge pull request #345 from rgommers/ticket-1664-powerpc-failure

TST: mark longdouble tests for spacing/nextafter as knownfail on PPC.",numpy/core/tests/test_umath.py
817e8976c57dab134177d4206ca81e3da40da369,"requested filetypes and dirs to gitignore
",.gitignore
7bd918542dbcce64e643eba07a2ce665be2e13d4,"TST: mark longdouble tests for spacing/nextafter as knownfail on PPC.

See #1664.
Thanks to Matthew Brett for suggesting this improved detection of PPC.
",numpy/core/tests/test_umath.py
149dede9bd70b9d780669e7f7a3ee935295cd342,"added generated c files to gitignore
",.gitignore
e50d16e150f919b9c62f5c03628ac340955dcb5f,"Merge pull request #337 from rgommers/pull-335-genfromtxt

BUG: make genfromtxt work with comments=None.  Closes Github issue 329.",numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
0920bede09b4a467c9c4e977607c38fd81371087,"Merge pull request #324 from walshb/fix_memcpy_overlap

Use memmove instead of memcpy for strided copies, since src and dst can overlap.",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_multiarray_assignment.py
f4c47a5e366d39f225a19db78010d9785dd801de,"Merge pull request #339 from charris/generic-sorts

Add generic versions of heapsort and mergesort so that those sorts will be available to all numpy types. The generic versions are probably not as fast as the type specific versions, but they will always be there.",numpy/core/SConscript,numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/npysort/sort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py,numpy/lib/tests/test_arraysetops.py
76d5ae80dc0fc212ee0a8962bc7f83dae274668f,"UPD: Replace PyDataMem_{NEW,FREE} by malloc and free.

PyDataMem_{NEW,FREE} are part of the numpy api after 8ecb4b23
and that fits poorly with the sort library. This means a fair
amount of memory usage may go untracked due to the work array
needed by mergesort.
",numpy/core/src/npysort/mergesort.c.src
895ed8195ef917a649b77d678610d60fa4ac8ca4,"BUG: test_unique needs to test bigger arrays.

Small arrays are sorted with insertion sort, which is a stable
sort.  Consequently larger arrays are needed to check that the
sort used is properly stable.

The test was also refactored to make it more compact.
",numpy/lib/tests/test_arraysetops.py
5a929a4875bc3e33d0333d8684d6eeaa0e4d45f4,"TST: Improve type coverage in test_unique.
",numpy/lib/tests/test_arraysetops.py
cd3e1e258407ec233139461445e35787ef42088d,"BUG: Add include needed for separate compilation.
",numpy/core/src/multiarray/item_selection.c
591ed4e51e996ee7151ae025b0a836ae9fe1c0a4,"ENH: Refactor mergesort so that the code is more consistent.

One small step on the way to a template to rule them all.
",numpy/core/src/npysort/mergesort.c.src
7036fb3c68d5ad956847e1f65b8630ed97ea8ff7,"ENH: Make sort tests use prime number of elements.
",numpy/core/tests/test_multiarray.py
5be7e01a6d67f2adeb167a280986547773dc3ce0,"ENH: Add generic sorts for quicksort, heapsort, and mergesort.

These all have the same signature as the c qsort apart from an
error return that is needed for memory allocation errors.  With
these functions the different kinds of sorts are made available
for types that don't have type specific sorts.

This fixes the np.unique bug introduced in 1.6.2 where record
arrays and such didn't have mergesort. It also allows lexsort to
work with all array types.
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/private/npy_sort.h,numpy/core/tests/test_multiarray.py
286a15f77dbc657e2dfceb0bab35e4891e62b4f7,"ENH: Add tests for object and structured array sorts.

The tests only cover quicksort at this time. This is preparation
for adding type specific sorts of object and structured arrays.
",numpy/core/tests/test_multiarray.py
d619a0d443f1a064cf1e2b48198a17e0fd89849c,"ENH: Split sort source file by sort kind.

The different sort kinds are now located in

    quicksort.c.src
    mergesort.c.src
    heapsort.c.src

Both direct and indirect sorts are included in each file. This cleanup
was done so that additional sorts or quickselect could be added without
undue clutter.
",numpy/core/SConscript,numpy/core/bento.info,numpy/core/setup.py,numpy/core/src/npysort/heapsort.c.src,numpy/core/src/npysort/mergesort.c.src,numpy/core/src/npysort/quicksort.c.src,numpy/core/src/npysort/sort.c.src
6f335e02de416fc9dc569d5041e9d812d4b5f653,"Fix-up deprecations language.
",doc/source/reference/c-api.deprecations.rst
9a4ef177a17a3f41ba3456e9768317e1d6ccf81d,"Fix the deprecations language.
",doc/source/reference/c-api.deprecations.rst
3556a2bc6605ac7267f420b3fb8d406b74616b47,"BUG: genfromtxt: make comments=None work with spaces in strings.
",numpy/lib/_iotools.py,numpy/lib/tests/test_io.py
8ecb4b23bcef5b9e004d8c175e7d6ae473751907,"Merge pull request #309 from thouis/malloc_hooks

ENH: expose PyDataMem_NEW/FREE/RENEW as numpy API functions with an event hook.",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/npysort/sort.c.src,numpy/core/tests/test_multiarray.py,numpy/lib/src/_compiled_base.c,tools/allocation_tracking/alloc_hook.pyx,tools/allocation_tracking/setup.py,tools/allocation_tracking/sorttable.js,tools/allocation_tracking/track_allocations.py
64c3a8f464e1b187aef833dda5ad0ce7dba44ef4,"Add separate-build tests to tox.ini
",tox.ini
1a70875974aecec81de1866ad9847d511d420f65,"BUG: make genfromtxt work with comments=None.  Closes Github issue 329.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
436a28f4ea4d596c59e85745eac7446f7e18903f,"Merge branch 'merge-wiki-edits' into master.
",doc/source/dev/gitwash/development_setup.rst,doc/source/reference/index.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.polynomials.rst,doc/source/reference/routines.random.rst,doc/source/reference/routines.statistics.rst,numpy/add_newdocs.py,numpy/core/defchararray.py,numpy/core/numeric.py,numpy/core/shape_base.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/type_check.py,numpy/linalg/linalg.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/testing/nosetester.py
ffca0587e99f3b3ecce80fa8cfd28bdf17abbf31,"GEN: regenerate mtrand.c to make doc changes show up.
",numpy/random/mtrand/mtrand.c
0e9e1076b0768236664259c8895d944c1d251b50,"DOC: merge doc wiki edits.  A number of small edits in linalg and lib.
",numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/type_check.py,numpy/linalg/linalg.py
2c9981b61ca56b41a5e7b9fbe785b6b54727aea4,"DOC: merge wiki edits.  Add percentile to statistics routines (ML suggestion).
",doc/source/reference/index.rst,doc/source/reference/routines.statistics.rst,numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/shape_base.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/random/mtrand/mtrand.pyx,numpy/testing/nosetester.py
3445712afcd71d2a3d61973de45aa94c38613dd5,"DOC: merge wiki edits for chararray.  Thanks to Tim Cera.
",numpy/core/defchararray.py
5df8f24ba2ccf97b0fabd60d3f215be8f03a08bc,"DOC: merge wiki docs - edits under doc/.
",doc/source/dev/gitwash/development_setup.rst,doc/source/reference/index.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.polynomials.rst,doc/source/reference/routines.random.rst,doc/source/reference/routines.statistics.rst
b42653982c7e8a093369ec9b1cf6088e47c29904,"Update C-API version hash
",numpy/core/code_generators/cversions.txt
aeff403ff868e822ebebdb8e6fb02055cd6ccf5b,"Merge remote-tracking branch 'upstream/master' into malloc_hooks
",.travis-make-py24-virtualenv.sh,.travis.yml,doc/HOWTO_RELEASE.rst.txt,doc/release/2.0.0-notes.rst,doc/source/reference/arrays.maskna.rst,doc/source/reference/arrays.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.maskna.rst,doc/source/reference/c-api.rst,doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.rst,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/bscript,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busdaycal.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/reduction.c,numpy/core/src/umath/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umathmodule_onefile.c,numpy/core/tests/test_api.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_maskna.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_ufunc.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py,numpy/lib/twodim_base.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/testing/utils.py,setup.py
3b9a0fea12ae89fe6ce745d9af0beb3df17260b8,"Merge pull request #328 from yarikoptic/master

fix ticket #2178: ""own"" (to close) file handles in load() only if they were not opened before",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
613589e2286b03171829bf4ff8cb5c9c863df4be,"BF(PY3): open file handles in tests in binary mode

otherwise zipfile of python3 gets confused to receive bytes for the header
whenever handle is opened for a text (unicode) file
",numpy/lib/tests/test_io.py
dd86cb378fb287e1e45ad8893097dc5a7f796aa8,"Merge pull request #323 from njsmith/zero-size-reductions

BUG: handle length-0 axes correctly in ufunc.reduce without identity",numpy/core/src/umath/reduction.c,numpy/core/tests/test_ufunc.py
b009f97755be92ec75b9e3c0d071043d49c57d71,"Add doc for PyArray_FILLWBYTE to tell the ndarray must be c contiguous.
",doc/source/reference/c-api.array.rst
c35c83c2e7b9f0cd51606d5a63c36cc68cf4556a,"BF: removed too much -- own_fid should be False while working with .npz
",numpy/lib/npyio.py
81a03cff05e250fd9982042c332bd4e15e0b3962,"ENH: added a rudimentary test for having #1517 (too many open files) fixed
",numpy/lib/tests/test_io.py
153f764db0a8bb15d52c76be44058922916abef5,"ENH: Since file handle could not be reopened (during load()) -- no need for ""isclosed"" logic
",numpy/lib/npyio.py
731cf3aaaa95c714361f4062e6929f5a324586cc,"BUG: fix incorrect references to parents in memmap children.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
4219824f899d31a0fb205536bf1477d68bcc5d71,"BF: PY3 and PY2 < 2.7 compatibility fixes for prev 2 commits
",numpy/lib/npyio.py
0e3a3d96c7a8e522184c7ca0388cd9d401e902cd,"ENH: unittest for preceeding commit fixing #2178
",numpy/lib/tests/test_io.py
4df244465c3db3a8e9e624d17ed2982f595e2b8a,"BUG: do not ""own"" the FID for GzipFile and file if provided to load already opened (ticket #2178)

Also made all assignments of own_file go in pair with assignments to fid to make things clearer
",numpy/lib/npyio.py
d2c8843f0ec8a3b2f81b062b346a94ed5331d4a3,"Removed misleading comment.
",numpy/core/tests/test_multiarray_assignment.py
4f03448ba0cec054fdad0889d137e5dd80e240d8,"Added test for overlapping array assignments.
",numpy/core/tests/test_multiarray_assignment.py
85a66079edbbe2f9d507d2d71e09e104d1ccfe5c,"Replaced all instances of memcpy with memmove.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
1d4decdf49b26bab6889ed8ab2943558709567ca,"API: Restore ability to not use semicolons.
",numpy/core/include/numpy/ufuncobject.h
7316499dd60baa7bb260875b79f7d22be491c986,"prefer gfortran (g95) over vendor compilers, g77 and g95 on OSX and Linux.  

Retain preference for g77 on Windows and vendor compilers on other platforms. ",numpy/distutils/fcompiler/__init__.py
2014f27622f1cab09f7e96a044722d01ffaad2ca,"Fix two instances of memcpy with overlapping source and destination.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
15738e15cc80fdf1d5a2472076cdb8fde4b9a890,"BUG: handle length-0 axes correctly in ufunc.reduce without identity

In numpy 1.6, reduction operations with no identity
(e.g. numpy.maximum) gave an error iff they were asked to reduce a
0-element dimension. This regressed during the 1.7 development cycle,
so that they started giving an error if *any* dimension had 0
elements, even ones that were not reduced over. Fixes bug #2078.
",numpy/core/src/umath/reduction.c,numpy/core/tests/test_ufunc.py
e15d0bdd3cc0bc0928e1f4d0b419a2fb3de02af9,"Merge pull request #322 from stefanv/fix_np_core_bscript

PKG: Fix numpy core bscript.",numpy/core/bscript
56183d7d4d36e099c6e81ece3bc9ad5a957207b3,"PKG: Fix numpy core bscript.
",numpy/core/bscript
da3da3d1887d60720e1a2d160d654624ed03421d,"Merge pull request #321 from rgommers/update-howto-release

DOC: update HOWTO_RELEASE document.",doc/HOWTO_RELEASE.rst.txt
5639414be0869a2e53a62ffeeffb838ddcf9df60,"DOC: update HOWTO_RELEASE document.
",doc/HOWTO_RELEASE.rst.txt
8006fd4e940cacf334a3683265948245e3a4fdc2,"Restore ability to not include semi-colons.
",numpy/core/include/numpy/ndarraytypes.h
6a06466c5970e4f1cd5ba5ba5457eeb41d9a7280,"Merge pull request #317 from cournape/travis_ci_separate_compilation

Travis ci separate compilation",.travis.yml,numpy/core/bscript,numpy/core/setup.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime_busdaycal.h,numpy/core/src/umath/reduction.c
465c2f44f0c19d2abe7b5d060c447f69526ca14c,"BUG: fix separate compilation (with distutils only for now).
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime_busdaycal.h,numpy/core/src/umath/reduction.c
6bb3ef6b9737f9aae021f8905170eeb160f67d6f,"TST: fix .travis.yml to re-enable python 2.4 builds.
",.travis.yml
e57266c9c738d5823f1eb3e8df846a4df5092179,"TST: fix matrix def in travis to avoid unwanted builds.
",.travis.yml
e29dc430bd4d55650ec8996ee58feca126c433ea,"ENH: handle separate compilation in bento as in setup.py.
",numpy/core/bscript
6e1e61da848e8d538d4a0482f4cc9cdcf87aad54,"TST: add separate compilation to travis-ci matrix.

We only test 2.7 and 3.2 for now. If NumFocus does a donation, maybe we
can reasonably expand to all the versions we care about.
",.travis.yml
9982831d955bfd87ead42704c76992c3633f4664,"ENH: allow NPY_SEPARATE_COMPILATION to be set to 0 to disallow separate build.
",numpy/core/setup.py
699c2f3cca63966bf086c58a59e1b6ee6fa7e090,"BLD: fix Bento and Numscons builds, that were broken in b272bc60.
",numpy/core/SConscript,numpy/core/bscript
eee46518b869ae05490c085783fd5b09a40b2273,"Change version number on master to 1.8
",setup.py
db1701baf57965e8533293426a0c3b403e81f39a,"BUG: Fix boolean indexing to previous behavior by adding an additional check before using the new code path.  Add tests.
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_multiarray.py
134174c9265dd87ea802c89cac7a89478e3184f4,"Merge pull request #297 from njsmith/separate-maskna

Split maskna support out of mainline into a branch",doc/source/reference/arrays.maskna.rst,doc/source/reference/arrays.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.maskna.rst,doc/source/reference/c-api.rst,doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.rst,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/reduction.c,numpy/core/src/umath/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umathmodule_onefile.c,numpy/core/tests/test_api.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_maskna.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/lib/function_base.py,numpy/lib/twodim_base.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/testing/utils.py
651ef74c4ebe7d24e727fd444b1985117ef16fae,"Merge pull request #313 from endolith/patch-1

fix typos",numpy/core/function_base.py
493f23d4a7215b14af62b64f6fc7f9f524099795,fix typos,numpy/core/function_base.py
5b5a0f4999dfac66c9c27160737352c727a3517b,"Wrap hook functions with GIL, add example.

Wraps the SetHook and calls to the hook with the GIL, to prevent races.
Adds an example of using the interface for callbacks into python code.
",numpy/core/src/multiarray/multiarraymodule.c,tools/allocation_tracking/alloc_hook.pyx,tools/allocation_tracking/setup.py,tools/allocation_tracking/sorttable.js,tools/allocation_tracking/track_allocations.py
36681eb2c4b731d5f8e639607aff41404aa8fc45,"travis-ci: add python 3.1 to the list of tested versions.
",.travis.yml
d129a54335eb7186a408404ad93b7fd63c6ea919,"Disable email notifications from travis-ci for now
",.travis.yml
27c7526c05ce50db2c56f53522051274ea390d07,"Merge remote-tracking branch 'msabramo/travis'
",.travis-make-py24-virtualenv.sh,.travis.yml
9e2c5af6cac932bd9f8415ea0af72b2e30d196de,"Simpler .travis.yml to test everything from py2.4 to py3.2

Uses Travis's new ""matrix: include:"" feature which makes
""the 2.4 hack"" more straightforward.
",.travis.yml
7d841f3923c7db63f5ac0f27417a7b026aa90118,"Merge pull request #310 from njsmith/remove-print-statement

[enh] Remove a print statement in datetime.c",numpy/core/src/multiarray/datetime.c
5dbd76a482ccca278c2882318bc44f6da9f7d45b,"[enh] Remove a print statement in datetime.c

This removes a distracting ""'xxx'"" printed while running the test suite.
",numpy/core/src/multiarray/datetime.c
3626d0c4fe510d615ef3e5ef3cf4ed2bfb52b53e,"Remove PyArray_ReduceWrapper from public API

There are two reasons to want to keep PyArray_ReduceWrapper out of the
public multiarray API:
 - Its signature is likely to change if/when masked arrays are added
 - It is essentially a wrapper for array->scalar transformations
   (*not* just reductions as its name implies -- the whole reason it
   is in multiarray.so in the first place is to support count_nonzero,
   which is not actually a reduction!). It provides some nice
   conveniences (like making it easy to apply such functions to
   multiple axes simultaneously), but, we already have a general
   mechanism for writing array->scalar transformations -- generalized
   ufuncs. We do not want to have two independent, redundant
   implementations of this functionality, one in multiarray and one in
   umath! So in the long run we should add these nice features to the
   generalized ufunc machinery. And in the short run, we shouldn't add
   it to the public API and commit ourselves to supporting it.

However, simply removing it from numpy_api.py is not easy, because
this code was used in both multiarray and umath. This commit:
 - Moves ReduceWrapper and supporting code to umath/, and makes
   appropriate changes (e.g. renaming it to PyUFunc_ReduceWrapper and
   cleaning up the header files).
 - Reverts numpy.count_nonzero to its previous implementation, so that
   it loses the new axis= and keepdims= arguments. This is
   unfortunate, but this change isn't so urgent that it's worth tying
   our APIs in knots forever. (Perhaps in the future it can become a
   generalized ufunc.)
",numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/umath/reduction.c,numpy/core/src/umath/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule_onefile.c,numpy/core/tests/test_numeric.py
605c2b45caa8838716b736e322f9e1b5d347daba,"Move reduction.{c,h} from multiarray/ to umath/

This is done as a separate commit to make sure git can track the
change. This commit will not build. See next commit for actual changes
and rationale.
",numpy/core/src/{multiarray,numpy/core/src/{multiarray
b272bc605ce7784be5b3edb13ad7afe22b04e71f,"Remove maskna API from ndarray, and all (and only) the code supporting it

The original masked-NA-NEP branch contained a large number of changes
in addition to the core NA support. For example:
 - ufunc.__call__ support for where= argument
 - nditer support for arbitrary masks (in support of where=)
 - ufunc.reduce support for simultaneous reduction over multiple axes
 - a new ""array assignment API""
 - ndarray.diagonal() returning a view in all cases
 - bug-fixes in __array_priority__ handling
 - datetime test changes
etc. There's no consensus yet on what should be done with the
maskna-related part of this branch, but the rest is generally useful
and uncontroversial, so the goal of this branch is to identify exactly
which code changes are involved in maskna support.

The basic strategy used to create this patch was:
 - Remove the new masking-related fields from ndarray, so no arrays
   are masked
 - Go through and remove all the code that this makes
   dead/inaccessible/irrelevant, in a largely mechanical fashion. So
   for example, if I saw 'if (PyArray_HASMASK(a)) { ... }' then that
   whole block was obviously just dead code if no arrays have masks,
   and I removed it. Likewise for function arguments like skipna that
   are useless if there aren't any NAs to skip.

This changed the signature of a number of functions that were newly
exposed in the numpy public API. I've removed all such functions from
the public API, since releasing them with the NA-less signature in 1.7
would create pointless compatibility hassles later if and when we add
back the NA-related functionality. Most such functions are removed by
this commit; the exception is PyArray_ReduceWrapper, which requires
more extensive surgery, and will be handled in followup commits.

I also removed the new ndarray.setasflat method. Reason: a comment
noted that the only reason this was added was to allow easier testing
of one branch of PyArray_CopyAsFlat. That branch is now the main
branch, so that isn't an issue. Nonetheless this function is arguably
useful, so perhaps it should have remained, but I judged that since
numpy's API is already hairier than we would like, it's not a good
idea to add extra hair ""just in case"". (Also AFAICT the test for this
method in test_maskna was actually incorrect, as noted here:
   https://github.com/njsmith/numpyNEP/blob/master/numpyNEP.py
so I'm not confident that it ever worked in master, though I haven't
had a chance to follow-up on this.)

I also removed numpy.count_reduce_items, since without skipna it
became trivial.

I believe that these are the only exceptions to the ""remove dead code""
strategy.
",doc/source/reference/arrays.maskna.rst,doc/source/reference/arrays.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.maskna.rst,doc/source/reference/c-api.rst,doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.rst,numpy/add_newdocs.py,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py,numpy/core/tests/test_indexerrors.py,numpy/core/tests/test_maskna.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/lib/function_base.py,numpy/lib/twodim_base.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py,numpy/testing/utils.py
32370937a5692befe4971790cc0b71f72fe08bb1,"Add void *user_data to EventHookFunc and SetEventHook
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c
be294ab42bc51c7588e9ed50982046c03f00f618,"ENH: expose PyDataMem_NEW/FREE/RENEW as numpy API functions with an event hook.

Moves PyDataMem_NEW/FREE/RENEW to the external API.
Fixes PyDataMem_NEW/RENEW to return void* instead of char*.
Replaces PyDataMem_NEW/FREE with NpySortArray_malloc/free in sort.c.src
  (should be reverted if npysort is moved to be part of multiarraymodule).
Adds PyDataMem_SetEventHook which takes a (PyDataMem_EventHookFunc *) as an argument,
  with signature:
       void hook(void *old, void *new, size_t size).
  When not NULL, hook will be called at the end of each PyDataMem_NEW/FREE/RENEW:
   result = PyDataMem_NEW(size)        -> (*hook(NULL, result, size)
   PyDataMem_FREE(ptr)                 -> (*hook(ptr, NULL, 0)
   result = PyDataMem_RENEW(ptr, size) -> (*hook)(ptr, result, size)
Adds tests in multiarray_tests.c.src, driven by tests/test_multiarray.py.
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/npysort/sort.c.src,numpy/core/tests/test_multiarray.py,numpy/lib/src/_compiled_base.c
1b6582d98c58afd977a69ac49f7e8e0d08a800b8,"Merge branch 'index_error_info'
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_indexerrors.py
004082c59c102e2f458a595db8adecd21c18793f,"Tweak out-of-bounds exception message based on list feedback
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h
a83e212d40ea4ccb49ab75a60fd5d7afa9307c2a,"Work around Python 2.4's Py_ssize_t not being the same as npyint_p
",numpy/core/src/multiarray/mapping.c
6fe584f1d2775d96fa68ccb4707ba0f658e85376,"ENH: use new metadata registration for version and config.
",bento.info,bscript,numpy/__config__.py.in,numpy/version.py.in
53e49df035a1eea97ac7291638696d9098d9143c,"REF: remove unused import.
",bscript
cf72f825c30d4f651bd23814420c9c8f2405581d,"Merge pull request #287 from ahmadia/patch-1

Fix dirty handling of internal compiler variable ",numpy/core/src/npymath/ieee754.c.src
c8beafda2251693396794a23601acf167a0e61d5,"Merge pull request #290 from mforbes/new-vectorize-clean

ENH: Add kwarg support for vectorize (tickets #2100, #1156, and #1487) (clean)",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
f2a7464e3b879f2d43709da5f2e456285d107f30,"Merge pull request #295 from mwiebe/datetime_unit_16compat

BUG: Add a gap in NPY_DATETIMEUNIT enum where 1.6 had the busday unit",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src
db5168b157444af0a2da3fc02135d0f0871d92ba,"Merge pull request #305 from r0k3/picklemaskedconstant

Fix for the error while pickling MaskedConstant.",numpy/ma/core.py,numpy/ma/tests/test_core.py
a8f1612c75cc120b6d22896c36a68fea330f5fbe,"Merge pull request #306 from nouiz/fill_diagonal

fix the wrapping problem of fill_diagonal with tall matrix.",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
637fa6233b4e5af81e0c8e629adcbee1918b4ebd,"Merge pull request #308 from jakevdp/histogram_fix

Remove unused declarations",numpy/lib/function_base.py
6cb02660163c107e2cf407c1483bad485fa5fd95,"remove unused variables from histogramdd
",numpy/lib/function_base.py
e909e4eafba23b6dd6391c8ea6aeb003c6192ef4,"add the warp parameter to fill_diagonal for people that could want the old behavior.
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
69c33bf74bcdc1d9781bd5db27f942f6d676c032,"fix the wrapping problem of fill_diagonal with tall matrix.
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
a11aab3960005e89f812c59731099de981d73784,"BUG: fix pickling MaskedConstant
",numpy/ma/core.py
e2ec1eaa235dd60ecf768b89d22aa5a35395882a,"TST: pickling MaskedConstant
",numpy/ma/tests/test_core.py
a0d1a961a9e3428d378e2189b8c337cc629a2fae,"Merge pull request #304 from thouis/datetime_refcnt

fix previous patch: c_metadata should match metadata before DECREF",numpy/core/src/multiarray/descriptor.c
3dbfaa06b45b89b6163574e5349526032920e11b,"fix previous patch: c_metdata should match metadata before DECREF
",numpy/core/src/multiarray/descriptor.c
d0f520a30990c018114672f24197866452a2d088,"make sure self->metadata is valid before calling DECREF
",numpy/core/src/multiarray/descriptor.c
db50690809bebb4e66375b6c0a34e9637e68dde9,"More careful checking of datetime metadata in dtype __setstate__()
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
7953c010971fc091230833355d930ec4ebdd29a0,"BUG: missing incref for metadata of datetime dtypes.
",numpy/core/src/multiarray/descriptor.c
501309341f3cb54c7fbcdeffb342ee217cfa5ade,"Merge pull request #299 from teoliphant/fixup_flat

Fix flat arrays so they cannot be used to write to read-only memory.",numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_multiarray.py
87a445e461fdc25fc682130e0c058e5dd022695f,"BUG: Disallow writing to flat iterators for readonly arrays. Ensure __array__ does not create UPDATEIFCOPY if underlying array on iterator is readonly.   Plus some tests.
",numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_multiarray.py
ac9477775a39449b6a13c7538cf576a9d511919b,"Merge pull request #298 from dlaxalde/sphinxext/cleanup

sphinxext cleanup",doc/sphinxext/LICENSE.txt,doc/sphinxext/setup.py
263c877e4f0835c2a7f4ceb6cac5f41ac7a825a6,"sphinxext: remove mention of old files in LICENSE.txt
",doc/sphinxext/LICENSE.txt
adddbc72a7aa9faeb61c708f1c2c0568d0398303,"sphinxext: some cleanup in setup.py

- remove obsolete entry_points (the corresponding code was removed in
  08e85c1820f8502e2a5009da4d3d89c6462a911b).
- drop setuptools import
- adjust setup() argument to conform with distutils format
",doc/sphinxext/setup.py
85b682893f1d38cbb3b31f827889e1d54edbc95e,"Merge branch 'master' into clean-up-diagonal
",.gitignore,bento.info,bscript,doc/HOWTO_DOCUMENT.rst.txt,doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/source/release.rst,numpy/core/__init__.py,numpy/core/bento.info,numpy/core/bscript,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/tests/test_numeric.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/system_info.py,numpy/fft/bscript,numpy/lib/bscript,numpy/lib/financial.py,numpy/lib/tests/test_financial.py,numpy/random/bscript,release.sh,tools/test-installed-numpy.py,tox.ini
330468f751410f56eeacb29cb26320faeaec5135,"Add coverage tests for IndexErrors, fix one bug, clean up two checks

Adds numpy/core/tests/test_indexerrors.py with tests to cover failure cases in indexing not covered
by other tests.

Added a missing check for invalid index in multiarray/iterators.c:iter_ass_sub_int().
Used the new checking code in multiarray/iterators.c:iter_ass_subscript().
Changed a ValueError to an IndexError in multiarray/mapping.c:PyArray_MapIterBind().
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_indexerrors.py
56f865980447b2fc5475b1b71ef7347383660782,"Add check_and_adjust_index(), and replace most index checks with it.

This commit adds a check_and_adjust_index(npy_intp *index, npy_intp max, int axis) function
which checks index against max, setting an IndexError and returning -1 if it's not valid,
and otherwise adjusting index in-place to handle Python's negative indexing, and returning 0.

It also changes most places in the code where indexes were being checked and adjusted with a
call to this function.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c
4c68a33a5b75cbfed1aa0b3b23e947563b9a513a,"ENH: report bad value and dimenion to IndexError exceptions
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c
1a050bb5de62dc15c9edf8c7625e71cb8abe4b1b,"Add .travis.yml for Travis CI (http://travis-ci.org/)
",.travis-make-py24-virtualenv.sh,.travis.yml
de8c536813472be29a6292721df83d73dbf7016e,"Merge remote-tracking branch 'mwiebe/nditer_buffer_flag' into merge-293
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h
ee607114d440023d5c717faecaa1368ea0ffa137,"BUG: Add a gap in NPY_DATETIMEUNIT enum where 1.6 had the busday unit

1.7 doesn't have the business day unit, but instead provides
a separate business day API. For binary compatibility, as
experienced in Pandas use of datetime64, it's a good idea for
the numbers to stay the same.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src
127ae2f54d2c96fc7318fe12a3e2009e517828d1,"ENH: Add kwarg support for vectorize (tickets #2100, #1156, and #1487)

  This is a substantial rewrite of vectorize to remove all introspection and
  caching behaviour.  This greatly simplifies the logic of the code, and allows
  for much more generalized behaviour, simultaneously fixing tickets #1156,
  #1487, and #2100.  There will probably be a performance hit because caching is
  no longer used (but should be able to be reinstated if needed).
  As vectorize is a convenience function with poor performance in general,
  perhaps this is okay.  Rather than trying to inspect the function to determine
  the number of arguments, defaults, and argument names, we just use the
  arguments passed on the call to determine the behaviour on each call.

  All tests pass and code is fully covered

Fixes:
Ticket #2100: kwarg support for vectorize
- API: Optional excluded argument to exclude some args from vectorization.
- Added documentation, examples, and coverage tests
- Added additional coverage test and base case for functions with no args
- Factored original behaviour into _vectorize_call
- Some minor documentation and error message corrections

Ticket #1156: Support vectorizing over instance methods
- No longer an issue since everything is determined by the call.

Ticket: #1487: result depends on execution order
- No longer caching, so the behaviour is as was expected.

ENH: Simple cache for vectorize

- Added simple cache to prevent vectorize from calling pyfunc twice on the first
  argument when determining the output types and added regression test.
- Added documentation for excluded positional arguments.
- Documentation cleanups.
- Cleaned up variable names.

ENH: Performance improvements for backward compatibility of vectorize.

After some simple profiling, I found that the wrapping used to
support the caching of the previous commit wasted more time than
it saved, so I added a flag to allow the user to toggle.  Moral:
caching makes sense only if the function is expensive and is off
by default.

I also compared performance with the original vectorize and opted
for keeping a cache of _ufunc if otypes is specified and there are
no kwargs/excluded vars.  This case is easy to implement, and allows
users to reproduce (almost) the old performance characteristics if
needed. (The new version is about 5% slower in this case).

It would be much more complicated to add a similar cache in the case
where kwargs are used, and since a wrapper is used here, the
performance gain would be negligible (profiling showed that wrapping
was a more significant slowdown than the extra call to frompyfunc).

- API: Added cache kwarg which allows the user to toggle caching
       of the first result.
- DOC: Added Notes section with a discussion of performance and a
       warning that vectorize should not be used for performance.
- Added private _ufunc member to implement old-style of cache for
  special case with no kwargs, excluded, and with otypes specified.
- Modified test case.

Partially address ticket #1982
- I tried to use hasattr(outputs, '__len__') rather than
  isinstance(outputs, tuple) in order to allow for functions to return
  lists.  This, however, means that strings will get vectorized over
  each character which breaks previous behaviour.  Keeping old
  behaviour for now.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
fd78546183651fc47c2d3429d03bed0a4299d475,"BUG: fix CBLAS/LAPACK detection logic.
",bscript
7ec6cf4216abbe3539ce0cca3d53a436c1e6deb5,"REF: simplify extension customization.

We are using the new tweak_* bento API wherever possible.
",numpy/core/bscript,numpy/fft/bscript,numpy/lib/bscript
87295b3e2202da7a9bfe44062c0c715b5bc08d6f,"REF: use simpler API in top bscript.

We use the new register_outputs_simple + remove some redundant code.
",bscript,numpy/core/bscript,numpy/random/bscript
fc466d4410ac05d2a80d29541579e8d1145d40f8,"BUG: add missing umath_tests extension to bento build.
",numpy/core/bento.info,numpy/core/bscript
d2589285674934ae544e1f4f5d9e4df93c297903,"BUG: install required generated headers.
",bento.info,numpy/core/bscript
42cb7911f4183ae4fee331a207012a006f28d778,"BUG: add missing f2py files in bento build.
",bento.info
689026311449adc87114998d6d8a1c977278960e,"BUG: add missing test data in bento build.
",bento.info
1fa15b0708f62096f0301d3c2fe4442db1ec145d,"BUG: '-framework Python' is not needed and can interfere.
",numpy/distutils/fcompiler/intel.py
c6b67ff101291aaa99d49893f4bb3e653f43b3c9,"DOC: Remove duplicate unique links in HOWTO_DOCUMENT.
",doc/HOWTO_DOCUMENT.rst.txt
4542c43b567af9064f36759afe6064bbb3315728,"BUG: Add a new flag to nditer to indicate when op uses buffering

Thouis tracked down an intermittently occurring bug in
ticket #2144, where a reduction under certain situations
would produce wrong results. This occurs when the array
data and the nditer's buffer happen to be adjacent in
memory.

This fixes it by replacing the ""clever"" trick of checking if
the iterator's pointer is in the buffer with an explicit
flag to signal buffer usage. The reason this can't be reliably
handled via the pointer/buffer check is that the pointer updates
are handled by the consumer of the iterator, who may update
them in place or may use local variables instead. Thus, the
pointer could still point to the beginning of the buffer, or
could point at the byte immediately after the buffer. Using
a flag avoids all of this and should be reliable.
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_impl.h
dabe9ab064ae32bfd7cee8c0dc58b175a6955e49,"ENH: Make internal per-op nditer flags type a typedef

There are 8 flags now, so to add another one requires
bumping up the size. This change makes that easy.
Also, because the internal structure of nditer is
not exposed to the ABI, we can change it at will.
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h
f2f306d55ead9a052dea0b1bc7e4a24a2e8916c8,"LDBL_TRUE_MIN falls back to __LDBL_DENORM_MIN__ if not defined
",numpy/core/src/npymath/ieee754.c.src
470c8572022ad2cecb21224bfeb8108524fd510a,"Merge pull request #285 from njsmith/add-tox

Add a little command-line tool for running tests, plus tox support",.gitignore,tools/test-installed-numpy.py,tox.ini
fce322d5605793f6a5baecfd7f620c79936b768c,"Merge pull request #286 from yarikoptic/master

Explicit import of modules into the space in core/__init__.py",numpy/core/__init__.py
e3862feeba9d7909ae500d0c08d2234a7c221c47,"Fix dirty handling of internal compiler variable 
__LDBL_DENORM_MIN__ with C11 LDBL_TRUE_MIN
(with help from @jedbrown)",numpy/core/src/npymath/ieee754.c.src
51616c9265155f75e536ba19c32f9f91337243af,"Rename PyArray_RequireWriteable to PyArray_FailUnlessWriteable

Also clean up its API slightly so that the caller passes in a name
describing the array being checked which is used to generate an error
message, rather than writing an error message from scratch.
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/umath/ufunc_object.c,numpy/numarray/_capi.c
baaf1819e3e9319c58269a7a06eb4b20e0a08eec,"Move internal NPY_ARRAY_WARN_ON_WRITE flag into an internal header.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.h
b7e76c15da2d20d194dc56355e0dbabfdaa45636,"ENH: Explicit import of modules into the space in core/__init__.py

Otherwise there is no strict guarantee that they would be available
later on during population of __all__.

This issue was ran into while opening a python file in emacs with python-mode
and ropemacs:

Loading pymacs...done
Pymacs loading ropemacs...
File mode specification error: (error ""Python: Traceback (most recent call last):
  File \""/usr/lib/python2.7/dist-packages/Pymacs/pymacs.py\"", line 146, in loop
    value = eval(text)
  File \""<string>\"", line 1, in <module>
  File \""/usr/lib/python2.7/dist-packages/Pymacs/pymacs.py\"", line 246, in pymacs_load_helper
    object = __import__(module_name)
  File \""/usr/lib/python2.7/dist-packages/ropemacs/__init__.py\"", line 4, in <module>
    import ropemode.interface
  File \""/usr/lib/python2.7/dist-packages/ropemode/interface.py\"", line 3, in <module>
    import rope.base.change
  File \""/usr/lib/python2.7/dist-packages/rope/base/change.py\"", line 2, in <module>
    import difflib
  File \""/usr/lib/python2.7/difflib.py\"", line 36, in <module>
    from collections import namedtuple as _namedtuple
  File \""collections.py\"", line 16, in <module>
    import numpy as np
  File \""/usr/lib/pymodules/python2.7/numpy/__init__.py\"", line 137, in <module>
    import add_newdocs
  File \""/usr/lib/pymodules/python2.7/numpy/add_newdocs.py\"", line 9, in <module>
    from numpy.lib import add_newdoc
  File \""/usr/lib/pymodules/python2.7/numpy/lib/__init__.py\"", line 4, in <module>
    from type_check import *
  File \""/usr/lib/pymodules/python2.7/numpy/lib/type_check.py\"", line 8, in <module>
    import numpy.core.numeric as _nx
  File \""/usr/lib/pymodules/python2.7/numpy/core/__init__.py\"", line 30, in <module>
    __all__ += numeric.__all__
NameError: name numeric is not defined
"")
",numpy/core/__init__.py
e3e5028e2e5c1e55b63dac6624df1c6713a6d274,"Add a little command-line tool for running tests, plus tox support

Tox is a handy little tool to make it easier than not to run proper
tests that exercise the build system and are run against multiple
Python versions: http://pypi.python.org/pypi/tox
See comment at the top of tox.ini for hints.
",.gitignore,tools/test-installed-numpy.py,tox.ini
ac4ce7b5284c8d1fbda734149121dd1eff52155a,"Fix diagonal-related warnings and tests on Python 3
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/getset.c,numpy/core/tests/test_multiarray.py
58392b0ec64b58f1c178f2f88328e864db59b39d,"Don't assume ctypes is available, it's not true on Python 2.4
",numpy/core/tests/test_multiarray.py
6d361274491df708393dbd8aa8a3431f3f743748,"Clean up PyArray_Diagonal changes based on Chuck's feedback

- NPY_ARRAY_WARN_ON_WRITE flag definition is protected by #ifdef
  _MULTIARRAYMODULE, to make totally sure that we can recycle the flag
  bit later.
- Improve docs for PyArray_SetUpdateIfCopyBase.
- Make the deprecation warning for writes to the diagonal array
  somewhat more terse.
- Use DEPRECATE macro instead of calling PyErr_Warn/PyErr_WarnEx
  directly.
- Comment formatting fixed.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c
3f45eaa310b0ead7270d56697018173dc4b7daad,"Fix numpy.distutils to find atlas BLAS on Ubuntu

As per discussion here:
  http://mail.scipy.org/pipermail/numpy-discussion/2012-May/062363.html
numpy.distutils was failing to find BLAS on my Ubuntu 11.04 system.

The problem is that _check_libs looks for libraries in several
directories, and it turns out that the ""atlas"" library was found in
both /usr/lib64/atlas-base *and* in /usr/lib64, which confused
_check_libs into thinking that it couldn't be found at all.

With this fix, scipy now builds against numpy master for me.
",numpy/distutils/system_info.py
ebffab2feca24dbd7b503d9b2519f60d6810091b,"BUG: Changed ipmt to accept array_like arguments.

The ipmt function was also fixed to handle broadcasting. The tests
were improved and extended to cover the broadcasting capability.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
b081857c29ce946c503e07c7d53597f443d1a646,"MAINT: port release notes and release script changes from 1.6.x.
",doc/release/1.6.1-notes.rst,doc/release/1.6.2-notes.rst,doc/source/release.rst,release.sh
e41267b424a1781b9b53a7a2fd05158435fab604,"Merge pull request #283 from rgommers/ticket-1755-knownfail

TST: mark test for floating point exceptions as knownfail.  See #1755.",numpy/core/tests/test_numeric.py
977878adf0ac08ee44ab45204c0c3d90acf1ac13,"TST: mark test for floating point exceptions as knownfail.  See #1755.

Note that this test was marked as knownfail in 1.5.x and 1.6.x; it is reported
as failing on many different platforms.
",numpy/core/tests/test_numeric.py
53d99f2de4be22ca4aff01d5527ff8c8e0455ae9,"Add a missing guard for Python versions <2.6
",numpy/core/tests/test_multiarray.py
da9bf058341b7569ed26953fc25564a98ab33578,"Fix a C90 compatibility error
",numpy/core/src/multiarray/arrayobject.c
83f6abe7ab0ccea0a03e97f03606f237a7b563a6,"Un-KNOWNFAIL the nditer test after merging Mark's fix from master
",numpy/core/tests/test_nditer.py
412c8a6ad055b7809e5a77e8d5f257c33e102284,"Merge branch 'master' into clean-up-diagonal
",bscript,doc/source/reference/c-api.array.rst,numpy/core/bscript,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_nditer.py
6c883959588b29c5ac92ef2723d24a93db63d716,"TST: Fix memoryview 2.6/2.7 compatibiliy in maskna pep3118 test
",numpy/core/tests/test_maskna.py
a169c98909e8b120f0ab37a7238ba60db8eaebf8,"TST: ticket #1878, test argmin with minimum signed integers.

The bug in ticket #1878 has been fixed in 1.7 but it still needs a test.
Thanks to tlatorre.
",numpy/core/tests/test_multiarray.py
5c96ec6b92605f67b7c7dd7d7af986c57e7c2a6b,"Merge pull request #268 from FrancescAlted/master

The docs should stress that functions that create arrays actually steals a reference to dtype descriptor",doc/source/reference/c-api.array.rst
6594f47b0119950fbf5f247601a26e8bb9516d92,"Merge pull request #278 from mwiebe/NA_buffer_errorcheck

BUG: maskna: PEP3118 code wasn't raising an error on NA-masked arrays",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_maskna.py
5a86e25b5680595b066615ac97ae97bec63a56fc,"BUG: nditer: Memory leak from setting 'base' attribute two ways

Numpy uses its 'base' attribute in two different ways, both
to manage the memory of an external data buffer, and to track
an array for 'UPDATEIFCOPY' purposes. The nditer was creating
a temporary view with negative strides to match the strides of
input arrays, but then also wanted to use UPDATEIFCOPY. Unfortunately
this choice to overload 'base' for both purposes prevents that
from working, and the result was a memory leak.

This bug has been fixed by choosing instead to retain positive
strides and not fully match the order of input memory when
doing the UPDATEIFCOPY.
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
4fce387ddca6f2e68ae3fa5c21778fceeb636426,"ENH: use custom_python instead of built-in waf tool.
",bscript
35f735d8e001cda6f28f98b31ced5190ff06ef77,"BUG: fix typo in bscript.
",numpy/core/bscript
c247305a75a20e4e5d421e691d931d6cc98c39ce,"Typo fix

Thanks to Travis for catching it.
",doc/release/2.0.0-notes.rst
0812564322e1cd282cff489c46a8ce51f7fc2a89,"Document the PyArray_Diagonal transition scheme.
",doc/release/2.0.0-notes.rst,numpy/core/fromnumeric.py,numpy/lib/twodim_base.py
bea52bf307782b2a211b7fcfa6696fad45dae275,"Transition scheme for allowing PyArray_Diagonal to return a view

PyArray_Diagonal is changed to return a copy of the diagonal (as in
numpy 1.6 and earlier), but with a new (hidden) WARN_ON_WRITE flag
set. Writes to this array (or views thereof) will continue to work as
normal, but the first write will trigger a DeprecationWarning.

We also issue this warning if someone extracts a non-numpy writeable
view of the array (e.g., by accessing the Python-level .data
attribute). There are likely still places where the data buffer is
exposed that I've missed -- review welcome!

New known-fail test: eye() for maskna arrays was only implemented by
exploiting ndarray.diagonal's view-ness, so it is now unimplemented
again, and the corresponding test is marked known-fail.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_multiarray.py,numpy/lib/twodim_base.py
d403fed2423caec4149937fe48781ac68b21fddb,"Add a test for ndarray.diagonal()

All 'expected' values were computed using numpy 1.5.1, so we can be
pretty sure that the recent rewrite didn't change any results.
",numpy/core/tests/test_multiarray.py
6a90adaea6ba4330e8da4db546425d9cdcc5a940,"Funnel all assignments to PyArrayObject->base through a single point

This patch removes all direct assignments of non-NULL values to the
'base' field on PyArrayObjects. A new utility function was created to
set up UPDATEIFCOPY arrays, and all assignments to 'base' were
adjusted to use either PyArray_SetBaseObject or the new
PyArray_SetUpdateIfCopyBase.

One advantage of this is that it produces more consistent error
handling. This error handling revealed a bug in the nditer code,
which this patch does *not* yet fix.

The bug is that npyiter_new_temp_array sometimes (when dealing with
reversed axes) creates an array and then returns a view onto it. But,
npyiter_allocate_arrays assumes that the array returned by
npyiter_new_temp_array can have UPDATEIFCOPY set, which requires
reassigning its 'base' field. Previously, this meant that the
temporary array leaked. Now, it produces a ValueError.

This code path doesn't seem to actually be hit very often; only one of
the nditer tests fails because of the change. See
   numpy/core/tests/test_nditer.py:test_iter_array_cast_buggy
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py,numpy/numarray/_capi.c
cbce4e6565e7a7fbe065502b264622ce7d64740a,"Consolidate all array writeability checking in new PyArray_RequireWriteable

This is mostly a code cleanup, but it does have a user-visible effect
in that attempting to write to a unwriteable array now consistently
raises ValueError. (It used to randomly raise either ValueError or
RuntimeError.)

Passes numpy.test(""full"").
",doc/release/2.0.0-notes.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_multiarray.py,numpy/numarray/_capi.c
3bbbbd416a0ae68d68a11bbbedca1460a560378b,"NEP: Add some details about how existing C-API access interacts with NA
",doc/neps/missing-data.rst
65fdf09a6a6a6c85439e1f6333ce9354be8da730,"Merge pull request #276 from charris/fix-format-variable-mismatch

BUG: Fix format/variable incompatibility.",numpy/core/src/multiarray/descriptor.c
bfa66da9bddf4bd50a0c098d8d2dc79b17e8b4a2,"BUG: maskna: PEP3118 code wasn't raising an error on NA-masked arrays
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_maskna.py
bfaaefe52fd5ad3cb5d0a1c75061d9866716babe,"BUG: fix running tests with coverage=True.

The --cover-inclusive argument means that coverage.py tries to include every
single .py file in the source tree in the coverage report. This leads to test
errors, because it tries to import files like setupscons.py (which will of
course directly fail for anyone not having numscons installed).
",numpy/testing/nosetester.py
5a64b000f9df6eea36a5fe0f5ef0cfc62a4e63d6,"Merge pull request #277 from dlaxalde/doc/test-verbose

DOC: verbosity -> verbose in testing guidelines",doc/TESTS.rst.txt
8669d3f7f6aa463ff8b2fb787e06063259b8fa0f,"DOC: verbosity -> verbose in testing guidelines
",doc/TESTS.rst.txt
7939c20c9c3fd2129de12d77400ae6bae2a50d20,"BUG: Fix format/variable incompatibility.

This shows up in python 2.4 where Py_ssize_t is an int.
Also remove unused variable.
",numpy/core/src/multiarray/descriptor.c
bb162a291b765a34a2e6fab845c36f34c01357af,"Merge branch 'pull-274'

* pull-274:
  BUG: Fix datetime 1.6 pickle compatibility test for Python 3.
  STY: Elaborate comment about cloning dtype's c_metadata
  DOC: Improve documentation comment from PR 274 comment
  ENH: Change NPY_AUXDATA_FREE macro based on PR feedback
  BUG: Output the datetime64 dtype to the pickle format from 1.6
  ENH: Change datetime64 to use c_metadata instead of metadata
  ENH: Add a NpyAuxData c_metadata to PyArray_Descr
",numpy/core/_internal.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_datetime.py,numpy/lib/type_check.py
ddc944eb6ae67de5c0e184505651ca1f50517bbd,"BUG: Fix datetime 1.6 pickle compatibility test for Python 3.

In Python 3 the pickle.loads function expects a bytes argument, so
convert the test strings.
",numpy/core/tests/test_datetime.py
dc468d1e2cebf350a38e719741f691db2c2f1bdc,"STY: Elaborate comment about cloning dtype's c_metadata
",numpy/core/src/multiarray/descriptor.c
2c4f794b9ed9618cb8187af98eb59b73bb380e2e,"DOC: Improve documentation comment from PR 274 comment
",numpy/core/src/multiarray/descriptor.c
9d63daee9d7bc050aef46f3a22efed06d9baed4b,"ENH: Change NPY_AUXDATA_FREE macro based on PR feedback
",numpy/core/include/numpy/ndarraytypes.h
b7cb21ac6f0d23d8c330afbf8bb900e85d27f668,"BUG: Output the datetime64 dtype to the pickle format from 1.6
",numpy/core/src/multiarray/descriptor.c
e686b367db354189b1154c2a47cc4b1adcfca1fd,"ENH: Change datetime64 to use c_metadata instead of metadata
",numpy/core/_internal.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_datetime.py,numpy/lib/type_check.py
eb40102ef70ca9a3e2d8953b54db9df90a0a10ee,"ENH: Add a NpyAuxData c_metadata to PyArray_Descr

The purpose of this is to allow dtypes with metadata to
have faster C-level performance. With this, datetime64
metadata lookup can become a single C pointer dereference,
compared to a C-string to Python-string conversion +
a Python dict lookup as it is presently.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c
be90de8e31b76db8154e8ab9cefc21c1d25d0f45,"FIX: handle empty arrays in roll
",numpy/core/numeric.py
37fab7a8fcf72653289a3a3453130696977eb0f7,"FIX: roll raises a ValueError is axis > ndim
",numpy/core/numeric.py
5bc0a84022c2c65addf306f50eef6f37244ae595,"TST: add tests for roll function
",numpy/core/tests/test_numeric.py
c869d124d08665b703539c9b2f14ec6ffbae0be0,"BUG: ufunc: The refactored reduction code didn't work with object arrays
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
084eed79b7064d6e351281a75d0f0baecc6d851a,"Merge pull request #272 from mwiebe/datetime64_compare

BUG: umath: greater_equal ufunc was using the wrong type resolver",numpy/core/code_generators/generate_umath.py,numpy/core/tests/test_datetime.py
6c95a007ad8f661e6ab0185a16e6782c7ba158d5,"BUG: umath: greater_equal ufunc was using the wrong type resolver, failed with datetime64

This bug was found by running the pandas master against numpy master.
",numpy/core/code_generators/generate_umath.py,numpy/core/tests/test_datetime.py
d609dffc97c024eb1c827a7da3e4f5098cf48b1e,"REL: change Sphinx version in release script to 1.1.3.

Version 1.0.4 was used till now, but has become too old.  New version gives far
fewer warnings and thereby increases the reference guide with O(100) pages that
previously got lost.

Also update current Cython version number.
",doc/HOWTO_RELEASE.rst.txt,pavement.py
d7d6b6c8d067c5af02ca57f0646df77233021ea3,"Stress that all array creation C functions steals a reference to descr.
",doc/source/reference/c-api.array.rst
259fff8f08dabd8198d2ec0f5abe99a05a5477d5,"BUG: Fix some test bugs.

Fix incorrect python version checks in test_print.py.
Fix missing build_err_msg import and wrong variable in test_io.py.
",numpy/core/tests/test_print.py,numpy/lib/tests/test_io.py
0b99c90e3f6004789fa5115e14234a8d6f4a07bd,"DOC: Add datetime to the changed items in the release notes.
",doc/release/2.0.0-notes.rst
bb50db652f93f24bd2b487d001130dbb8a56daea,"DOC: Add a section documenting 1.6/1.7 datetime64 differences
",doc/source/reference/arrays.datetime.rst
3cb783ecc96fb57ec09c23e21d53c44158c43c0d,"REF: simplify top bscript file.
",bscript
caf3b9e89fe63efcfcacb58bae64ff4724b81d9f,"STY: Whitespace cleanups.
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/ucsnarrow.c
4929ebab7bc937c59138493fcbfbd21d03ca316b,"WRN: Remove unused function prototype from ctors.h.
",numpy/core/src/multiarray/ctors.h
7bf82862aeb832e18a676cf167de898fe701aca9,"WRN: Fix unused variable compiler warnings in scalarmathmodule.c.src.

Two templates were broken up and specialized. The corresponding
substitution loops could also be specialized, but this wasn't
done this time through. Breaking up the templates clarifies the
code at the expense of extra text, but I think the improved
clarity is a good tradeoff.
",numpy/core/src/scalarmathmodule.c.src
e96ed36909c495b6000e6f664b24ff69ce2e02d9,"WRN: Fixed some unused variable compiler warnings in arraytypes.c.src.

Also break templated @from@_to_@to@ functions into two templates
to simplify the code a bit.
",numpy/core/src/multiarray/arraytypes.c.src
1dba433756be0139d0b9ec591678c456fd54bdc2,"STY: Remove unused functions.

MyPyUnicode_Resize and MyPyUnicode_New are no longer used, so remove them.
",numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/ucsnarrow.h
32775060950bd0eac622642a3dafb4d758f7e627,"BUG: ticket #1578, fix PyArray_Scalar.

PyArray_Scalar needed to use PyObject_* memory management since the numpy
unicode object inherits tp_alloc from PyUnicode_Type.

Observation: realloc returns null on error and that isn't always checked in
Numpy.
",numpy/core/src/multiarray/scalarapi.c
d78746bd838761279c666465859a4b650525b422,"BUG: ticket #1578, fix UNICODE_getitem.

Use PyUnicode_FromUCS4 in UNICODE_getitime so that the same memory
management is used for all parts of the returned PyUnicodeObject.
",numpy/core/src/multiarray/arraytypes.c.src
321a01462b4ce54aba30241dc0dd8a03f96b4347,"ENH: Add PyUnicode_FromUCS4 to ucsnarrow.
",numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/ucsnarrow.h
8330e6f9496294fdc875be77b89ebb12ab8bb8ae,"ENH: Always include ucsnarray.h and ucsnarray.c

This removes the include dependency on PY_UNICODE_WIDE in preparation
for defining more general unicode functions in the ucsnarray.c file.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/ucsnarrow.h
243ab1e394b2d2a7a3714d56e309785654373c5c,"ENH: Fix bento script to always include ucsnarray.h and ucsnarrow.c.

This fix is kept separate to facilitate cherry picking for a backport.
",numpy/core/bscript
416e1abb102ab3fd5fe266853109c370e74070cf,"DOC: fix link and add explanation on how to run examples.
",doc/HOWTO_DOCUMENT.rst.txt
dafb2dd0ea89821fe9c90c42e218869cc2025e9f,"Merge pull request #253 from charris/fix-filter-importwarnings

Fix filter importwarnings

This PR fixes the issue left over from merging PR-251.",numpy/testing/nosetester.py
b86dc69d1b1d2a63998512b9acaedf71cabd732a,"FIX: Implement Ralph's suggestion of removing category.
",numpy/testing/nosetester.py
cb9d3592e3fd91bc0081904848df454bd8167b91,"BUG: Fix testing failure on missing ImportWarning in Python 2.4.
",numpy/testing/nosetester.py
4872caccb9a4f5d11e46072159f282337e09c70e,"BLD: fix build error on Windows with MSVC9. Thanks to Christoph Gohlke.
",numpy/core/setup_common.py
c17738ac4093377a991a7d221349f8de6e06c690,"BUG: Find only platform-specific dlls in winsxs directory.
",numpy/distutils/mingw32ccompiler.py
b0b4afcbf2883e40ddee7a60348caf0736612260,"ENH: Use get_mktime as wrapper for mktime.
",numpy/core/src/multiarray/datetime_strings.c
bc6159a6ff307d45828100b7a575bfc51c5c2c6b,"ENH: Add get_mktime function to support multiple platforms.
",numpy/core/src/multiarray/datetime_strings.c
5d0e0aa8513a6c79a4ea3b01541e4cd335a1f439,"BUG: Force MinGW to use 64-bits time type.
",numpy/core/src/multiarray/datetime_strings.c
913e55dddeb922168da56706d2d414dd746eddea,"Merge pull request #251 from rgommers/no-importwarnings

TST: filter ImportWarnings in NoseTester.",numpy/testing/nosetester.py
9dfda59826e894b897aa025910f2cf2b2cf06d92,"Merge pull request #252 from rgommers/ticket-2103-cython-warning

Fix some test warnings",numpy/core/tests/test_datetime.py,numpy/random/__init__.py
12fe3d1ed6d788d6fd593a68b458bf4d2f980519,"TST: remove spurious warning for optional dependency pytz.
",numpy/core/tests/test_datetime.py
0574e05641b38d54482e0199c8a85670e594b8c4,"TST: filter Cython warning on import of random module.  Closes #2103.
",numpy/random/__init__.py
0679842c6059f7abcb8f9d724a1342021b78ed49,"Revert ""BUG: ticket #1578, Fix python-debug warning for python >= 2.7.""

This reverts commit 0a3a954c3750419552c076aa444563ac20def14a. The fix
caused segfaults for python built using the default ucs2 unicode size. It
looks like the cause is memory corruption in the PyObject pooled memory. In
particular, the routines in ucsnarrow.c lack the checks and fallbacks
present in the original Python source code in Objects/unicodeobject.c. I
think the best fix is to rewrite the relevant bits of numpy code so that
they don't use the MyPyUnicode_* routines at all, but rather the routines
present in Python.
",numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/ucsnarrow.c
08c20a2c23397eed0923e9ca768b4fe26c244730,"TST: filter ImportWarnings in NoseTester.

Warnings show up when a directory with the same name as a Python file or
compiled extension is seen which doesn't have an __init__.py file in it.  This
situation is very common, for example in SciPy where many extensions are
created from source files located under a directory with the same name.

This filter is located within a context manager, so only filters when running
tests.
",numpy/testing/nosetester.py
59019f1493d311c11e758b75e11653b34f7b7bad,"FEAT: update to last bento+waf.
",bento.info,bscript,numpy/build_utils/waf.py
0c5f480f2db3566a1add20a2f286e6b7e9608c94,"Merge pull request #250 from charris/fix-debug-crash

BUG: Fix segfault when tests are run with python 2.7 debug.",numpy/core/src/multiarray/na_mask.c,numpy/core/tests/test_regression.py
fc4784a482c83f68f13abe4a54051da25348c005,"BUG: Fix segfault when tests are run with python 2.7 debug.

I don't know that the crash is python2.7 specific, it may also occur
in earlier versions of python. The cause was mismatched memory
allocation/deallocation of maskna data.
",numpy/core/src/multiarray/na_mask.c,numpy/core/tests/test_regression.py
d50f961849a9a5f694e72329e8565f3c261e64a8,"TST: Add test for ticket #1578

The usefullness of this test is questionable, as it only shows up
as a core dump when run under python-debug for python versions >= 2.7,
and then it will only fail if run before other failing tests. It is
included as it may be useful as a record.
",numpy/core/tests/test_regression.py
9aac5430326820f2c17c0cbdcd9bf072728fface,"STY: Small style fixes.
",numpy/core/src/multiarray/ucsnarrow.c
0a3a954c3750419552c076aa444563ac20def14a,"BUG: ticket #1578, Fix python-debug warning for python >= 2.7.

In Python >= 2.7 the memory management of unicode objects changed from
PyMem_* to PyObject_*. Numpy had its own modified copy of some of the
Python code for handling unicode objects and it needed to be updated
to deal with the change. Thanks to Joseph Miessner for tracking this down
and finding the fix.
",numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/ucsnarrow.c
0dac136795ba7d6f2b371fe5a7c34c34fe0a9a5f,"Merge pull request #249 from tonysyu/fix-split-doc

DOC: Fix outdated docstring for `split` and `array_split`.",numpy/lib/shape_base.py
905335bd9ca4a7126a612b94ac43401b6f03bff7,"DOC: Fix outdated docstring.

Equal and nearly-equal size requirement is not true when passing a 1-D array of indices.
",numpy/lib/shape_base.py
b6b5ba1387d754a595838bab4dbdd80f61e0d63e,"BUG: fix regression for indexing chararrays with empty list. Closes #1948.
",numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
1e89ff5197cdcb9434f1595a4a2fe9ef7780d085,"WRN: Fix some compiler warnings.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/linalg/lapack_litemodule.c
032bcf08ee3b930e250329bfbd27ea270e5fa013,"BUG: old_defines.h needs a guard.
",numpy/core/include/numpy/old_defines.h
f047010fa90d8186eeba59d8f18bc12523b3a27f,"ENH: Check that npy_no_deprecated_api.h is included before it is needed.
",numpy/core/include/numpy/npy_no_deprecated_api.h
40cba31c25338402817df31773bcca4a7620a3a1,"STY: Remove trailing whitespace.
",numpy/random/mtrand/initarray.h
b0b20150425de845a78df6a8f5504e9bf3f0182c,"UPD: Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
3ddf3e1e387d035ab85f12cba65455e5dc7210f6,"UPD: Make _dotblas.c use non-deprecated macros/functions.
",numpy/core/blasdot/_dotblas.c
ca0a3e1692cbe14fb5dbae0cf7d576be96a369a9,"UPD: Make sort functions use non-deprecated macros/functions.
",numpy/core/src/npysort/sort.c.src
c5eee115be8f01006479cba909d3f7363de08f1b,"UPD: Add NPY_NO_DEPRECATED_API to some more files.

_dotblas needs more work to remove direct access to ndarray internals.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/random/mtrand/initarray.c
c993797eb6926b85fcd3b85859e59d0e72000f4a,"UPD: Update files for versioned deprecation.
",numpy/core/include/numpy/npy_no_deprecated_api.h,numpy/core/include/numpy/old_defines.h,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/umath_tests.c.src,numpy/fft/fftpack_litemodule.c,numpy/linalg/lapack_litemodule.c
4a2de4b598bdf81a40954e039169be19d52f3bf8,"UPD: Make numpy.pxd and mtrand.pyx use non-deprecated macros/functions.

The non-deprecated macros and functions were defined for Cython in
numpy.pxd and mtrand was fixed to use them. In particular, direct
access to structure internals in mtrand.pyx needed to be replaced
by the new access functions.
",numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxd
d47578dd3bd57973eff75c2e89053a733d6bce8f,"ENH: Add npy_no_deprecated_api.h

This is to provide a file defining the NPY_NO_DEPRECATED_API macro that
can be included in Cython *.pxd file.
",numpy/core/include/numpy/npy_no_deprecated_api.h
b40c2622c1fa20714a1527f8969feb0acf7f6ba5,"MOV: Rename numpy.pxi to numpy.pxd to conform to current Cython.
",numpy/random/mtrand/{numpy.pxi
d9cdd043ba28bd18ea551295b252463ec9d62a85,"UPD: Make fftpack_litemodule.c use non-deprecated macros/functions.
",numpy/fft/fftpack_litemodule.c
3fe4045450ecbaad620406ca752945c42ad2f414,"UPD: Make lapack_litemodule.c use non-deprecated macros/functions.
",numpy/linalg/lapack_litemodule.c
475cc40f147f29ce0e93edb95573257db8e03e2d,"API: Update c_api_version hash.
",numpy/core/code_generators/cversions.txt
d73c036cc375ebba260d8604d13c91718c576cb9,"DOC: Update documentation and release notes about C-API deprecations
",doc/release/2.0.0-notes.rst,doc/source/reference/c-api.deprecations.rst,doc/source/reference/c-api.rst
64c3be01cd18d1cab9cefaa5fa5cd8f78fda761e,"DEP: Update NPY_NO_DEPRECATED_API to be version-based
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h
e1218cc68ddab6b806628877de19394616df04f7,"DEP: Update all the '#define NPY_NO_DEPRECATED_API' instances to be
versioned
",numpy/core/src/dummymodule.c,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/npysort/sort.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/umathmodule.c,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c
5ede7c7bc2e9342269e708fd183c5311917b9169,"VER: Bump up NPY_API_VERSION from 6 (Used by 1.6) to 7

Also added NPY_1_7_API_VERSION to numpyconfig.h to help with
NPY_NO_DEPRECATED_API macro usage.
",numpy/core/code_generators/cversions.txt,numpy/core/include/numpy/numpyconfig.h,numpy/core/setup_common.py
8e8a4ca90319e28d21c6ba32d7249c47ad014025,"BUG: Fix missing np prefix in test_function_base.py.
",numpy/lib/tests/test_function_base.py
11859c0a2f113e66fdd8384eea93b688a8e08b22,"BUG: ticket #2097, fix bounds checking in searchsorted when sorter invoked.

The bounds are checked on the fly. This won't always raise an error if
there is an out of bounds index, but only when that index is used in the
binary search. Since we don't check that the sorter actually sorts the
array, this seems reasonable. Only safety is ensured, not correctness.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
b35eaccfae6ec00310e7203a310e3de7b6b8018d,"Merge pull request #245 from jseabold/digitize-open-right

ENH: Give digitize left or right open interval option",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
168a55e66f992c9dbbb991f9a729fb04a6437c17,"STY: Touch up documentation in arraypad.py

Rearrange some of the documentation and shorten lines. A few long
lines of code were also broken.
",numpy/lib/arraypad.py
7270d9e6054e105c6c7ace66b443870a9e299b75,"ENH: Add module containing functions for padding n-dimensional arrays.

The various padding functions are exposed as options to a public 'pad'
function.  Example:

    pad(a, 5, mode='mean')

Current modes are 'constant', 'edge', 'linear_ramp', 'maximum', 'mean',
'median', 'minimum', 'reflect', 'symmetric', 'wrap', and <function>

This commit includes unit tests and doctests and is based on feature
request ticket #655.
",doc/release/2.0.0-notes.rst,doc/source/reference/routines.padding.rst,doc/source/reference/routines.rst,numpy/lib/__init__.py,numpy/lib/arraypad.py,numpy/lib/tests/test_arraypad.py
313fe46046a7192cbdba2e679a104777301bc7cf,"ENH: Add 'sorter' argument to searchsorted.

The new argument allows one to search an argsorted array by passing
in the result of argsorting the array as the 'sorter' argument. For
example

    searchsorted(a, sorter=a.argsort)
",doc/release/2.0.0-notes.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py
54746848f313ba1ee22a812e8b500d4bcc334910,"TST: Add namespaces to digitize tests + one more test
",numpy/lib/tests/test_function_base.py
d1d7a158970d39aef56e10352efc559bd543e5c8,"DOC: Clarify digitize docs and add example
",numpy/add_newdocs.py
0488f85de8a9ec3755198f57d40e9b091ca2aaee,"ENH: Give digitize left or right open interval option
",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
0d1b60136862dd831ca586516d47561181e321ec,"BUG: Fix .gitignore again, using github suggestions.

http://help.github.com/ignore-files/
",.gitignore
ec78cc7cc51e9c9d4a01a7ede1b4b17aae2fc352,"ENH: Add some filenames to .gitignore, fix .DS_Store entry.
",.gitignore
044c7a670005f38f229b2da11fec9f9f4204de29,"WRN: Fix compiler warnings in _compiled_base.c.
",numpy/lib/src/_compiled_base.c
1957cb3c3574aaecf45d1512bddc10a0bcc39639,"STY: Style cleanups in numpy/lib/tests/test_function_base.

Make imports from numpy.testing explicit.
Use np namespace.
",numpy/lib/tests/test_function_base.py
b9576ed22a57cb8c7bf04038c5792bb2b499f390,"ENH: improve interp() speed in some cases.

The interp function was computing slopes for all intervals, even when there
were only a few points to be interpolated. Now it only does so when the
number of interpolation points exceeds the number of sample points.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
72185d34170369ec07e8e84ed18d2f6a814e327a,"STY: Style fixes to numpy/core/tests/test_regression.

Make imports from numpy.testing explicit.
Make test_unique_stable check against specific results.
",numpy/core/tests/test_regression.py
7c5d239d24c9a0b76f66dd273bf53278a3138264,"STY: Style fixes to test_multiarray.

Make imports from numpy.testing explicit.
Break some long lines.
",numpy/core/tests/test_multiarray.py
d959ab9ccaaf1bc0552dd94556ae97836480b2b1,"STY: Cleanup test_half.py a bit.

Make imports from numpy.testing explicit.
Make module runnable from command line.
",numpy/core/tests/test_half.py
6ecc58c87c0454554d677d5544012d35c74b4db4,"TST: Test float16 __array_interface__.
",numpy/core/tests/test_half.py
372666accfbb1a213b71a64b0d8f60f9f6e5c246,"BUG: ticket #2073, fix float16 __array_interface__ bug.
",numpy/core/src/multiarray/common.c
dbf235169ed3386b359caaa9217f5280bf1d6749,"BUG: ticket #2063, make unique return consistent index.

Make unique use  mergesort when return_index is true. This quarantees that
the returned indices are of the first occurrence of the unique elements and
makes the behavior better defined and consistent.
",numpy/core/tests/test_regression.py,numpy/lib/arraysetops.py
960a86be3539f67ea5200d6fe22ae0e82324af30,"BUG: ticket #2086, make datetime and timedelta recognize byte order.

The descriptor construction of these types was ignoring the byteorder
character.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
2dc81ff91a16b4fb1e555d5c3898b7eb9e2a08b3,"STY: Bit of style cleanup.
",numpy/core/src/multiarray/descriptor.c
0168296657b279cd225b2f525613d152cb3b65dd,"DOC: label datetime support as experimental. Closes #2072.
",doc/release/2.0.0-notes.rst,doc/source/reference/arrays.datetime.rst
41f7d21182fddbc71b2100fdb3425a5e7e2f35b6,"DOC: label the current NA implementation as experimental in 1.7.x

This has been extensively discussed on the mailing list.  See #2072.
",doc/release/2.0.0-notes.rst,doc/source/reference/arrays.maskna.rst,numpy/add_newdocs.py
f84ac77e50456191a2574913494d1e5ce5a4d92b,"Use sizeof(npy_ucs4) instead of hardcoded shift, and make test py3k compatible.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
5c7086a07bf5b0bc98af4545136d107e29fd6649,"Fix unicode string length computation in UNICODE_compare and add test.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
caa0883c9e142d6c2f7e1ad6857e9988fd8da17f,"MAINT: port few missing changes to 1.6.0 release notes from 1.6.x branch.
",doc/release/1.6.0-notes.rst
aea76b85ad98c5fe89582d70344ca768b6cffec1,"DOC: allclose: document better what happens when Infs or NaNs are present.
",numpy/core/numeric.py
81aa8f25ce05df3e9d27bf2beee740c1f2ce7e36,"MAINT: explicitly check for NaNs in allclose(). Closes #1905.

Also clean up the logic behind handling infs.

The removed seterr call becomes unnecessary when explicitly checking for NaNs.
It was introduced only recently in c4c0e985.
",numpy/core/numeric.py
3503c5f40af552692c855e10a95730480d3251f2,"Merge pull request #236 from charris/fixes-2.4

Fixes all tests with Python 2.4 and closes #2071.",numpy/core/numeric.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_regression.py
88da562d1c02b2c1803b4bfb3fc81ba1470e0d5c,"DOC: Fix documentation misstatement
",numpy/core/tests/test_regression.py
c4c0e9851b9f75cfa4448bd87669c005c2a661ad,"PY24: Ignore invalid in allclose and isclose.

I'm sure this is the right fix. Later versions of python don't need this
fix and it may be that there is a better knob to turn.
",numpy/core/numeric.py
850e2ab573d7fac171a364d68371dc57b92112fc,"PY24: Use TypeError instead of AttributeError.

Python 2.4 raises TypeError instead of AttributeError when an
attempt is made to delete a non-writable attribute.
",numpy/core/tests/test_dtype.py,numpy/core/tests/test_nditer.py
933465a1c07f4aed6b9211816cf0c66aed19ad94,"PY24: Use sys.version_info[0] instead of sys.version_info.major.
",numpy/core/tests/test_regression.py
8e4756c388ad4c630e0bdc03ffb9c254e5a2dce2,"BUG: BLD: fix OS X build issue introduced in the PEP8 cleanup in 72c6fbd.
",numpy/distutils/system_info.py
6fd716c0a5fb7ae7c114c844f700857c093debff,"BUG: Fix test for Python version < 2.6.

Copied python implementation of combinations from python 2.7
itertools.combinations documentation into test_maskna. Combinations
wasn't part of itertools before Python 2.6.
",numpy/core/tests/test_maskna.py
dc4fd6462ab6f59f69b20f0148adeb96646942f0,"BUG: Fix f2py test_kind.py test.

Newer Fortran compilers for Intel may support quad precision, so
_selected_real_kind_func needs to report that for precisions >= 19.
",numpy/f2py/crackfortran.py
32a4a7d282c4cdbbfdf09ff10345e05ccec58919,"BUG: Fix ticket #2081.

Need to double the return value of PyUnicode_GetSize when computing
the elsize of unicode strings if python is compiled with 2 byte unicode.
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_regression.py
016ad9fb4d818feae2974ffae7c4ff0bbc99e3b0,"BUG: native but not '=' byte order error in lapack

The check_object call in lapack_litemodule was checking if the passed
array was of byteorder '=' or '|', but this check failed for arrays of
specified native byte order ('<' on little-endian).
",numpy/linalg/lapack_litemodule.c,numpy/linalg/tests/test_linalg.py
83480b6eb106d8c7e1d9293d7adc988c7c670778,"BUG: BLD: add missing line in distutils/system_info.py

This was incorrectly refactored in commit 1e8e5154, causing the build to break
on some systems.
",numpy/distutils/system_info.py
0258f19da8a21462d95abad68041056e6951c508,"BUG: Fix build error in third-party plugins
",numpy/core/include/numpy/ndarraytypes.h
a4dbfc184265998e0f3c42a046e2aa3e81380b54,"Merge pull request #229 from npinto/system_info_lib_dirs.

Closes ticket 993.  Review: https://github.com/numpy/numpy/pull/229

There's some concern about future maintainability (by David C.), but overall
the benefits seem to outweigh the possible drawbacks.
",numpy/distutils/system_info.py
72c6fbd61508b6d67ffc20d89b508c003e07578c,"MISC: cosmetic changes to distutils/system_info, PEP8 safe.
",numpy/distutils/system_info.py
1e8e51542b2bc45a4733953623ce2a0e53cd43a0,"ENH: support for detecting libraries in several directories simultaneously, see http://projects.scipy.org/numpy/ticket/993
",numpy/distutils/system_info.py
89d11fcadc5d7b7ec5aa3a547af7fc11d249a158,"Test commit to trigger buildbot -- ignore.
",TEST_COMMIT
32f8807e7714b809ff58d545613a376f793eee62,"Last buildbot test of the day.
",TEST_COMMIT
8f304c60fc126793f8d7b96131981045e87b27bc,"Trigger buildbot again.
",TEST_COMMIT
8bdfce6a26294b3ed9914b8c62aff516be0cbf40,"Testing buildbot, please ignore.
",TEST_COMMIT
cfee94ea79d5f54fd0fb8cec53cc655aad428a0f,"BUG: Fix npy_PyFile_CloseFile return type.

Also make npy_PyFile_OpenFile mode argument const char*.
",numpy/core/include/numpy/npy_3kcompat.h
737f690d1c1c6e5ceeb9e1967001e50500459ecd,"BUG: In Python 3K PyComplex can't convert byte strings.

This may be more a workaround for a Python 3K inconsistency or bug,
but it is probably better to use unicode for these sorts of calls.

The fix itself is a bit of a hack, but so is the *_to_* function.
It really needs a rewrite.
",numpy/core/src/multiarray/arraytypes.c.src
95a52abd7e08d87310bd0f79a1d7a0299aaf8571,"STY: Put some comments in standard form.
",numpy/core/src/multiarray/scalartypes.c.src
c1c066806a5e533a71ef070e8a486e15195d65c1,"BUG: Use byte string instead of string in python3 buffer test.

The python3 unicode strings don't have the __buffer__ interface.
",numpy/core/tests/test_multiarray.py
84f324a6d4846a61a9ac8c1a4a933a9f16d79b54,"PY3: Fix FindDependenciesLdd ""ResourceWarning: unclosed file"".
",numpy/linalg/tests/test_build.py
1a643b719226b0411e62a28192dbc2f4bf51b5b9,"PY3: Fix test, ""ResourceWarning: unclosed file"".
",numpy/core/tests/test_records.py
2d9ef04f274d6ef6b2ac1d269a763a4565480caa,"PY3: Fix test ""ResourceWarning: unclosed file"".
",numpy/core/tests/test_regression.py
a76f0ed264aea213667e0e28707d5dbee7e1d351,"PY3: Fix fromtextfile ""ResourceWarning: unclosed file"".
",numpy/ma/mrecords.py
2655a68b15f582eca294072e87be51caf9ca0d7c,"PY3: Fix memmap ""ResourceWarning: unclosed file"".
",numpy/core/memmap.py
b379fd7422257fcac463699288fb541e71240974,"PY3: Fix tofile ""ResourceWarning: unclosed file"".
",numpy/core/src/multiarray/methods.c
5eab544a97b632164a03ad887d53e92f4f9898a0,"PY3: Fix fromfile ""ResourceWarning: unclosed file"".
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/multiarraymodule.c
bb7e5e200198dc1de879156b1fb9da380ec4c7de,"BUG: fix flags type when exposed to python.
",numpy/core/src/multiarray/descriptor.c
5268fe6ecd5637169bffe2dfd1fa7af5dbda4862,"BUG: fix #2017 by ignoring type_num in the hash input.

Since type_num is not considered in PyArray_EquivTypes (for dtype
equality comparison), seems reasonable to ignore it for hashing as
well.
",numpy/core/src/multiarray/hashdescr.c,numpy/core/tests/test_dtype.py
e4f976430691d0f3823aaa61aed80088cdd2b148,"BUG: fix inconsistencies in dtype flag type at the C level.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/hashdescr.c
1513a984fcded0ef716f30a069f1c05867e626e5,"STY: cleanup hashdesc.c to follow our C conventions.
",numpy/core/src/multiarray/hashdescr.c
39029f56f3851f703eafc77dd83c3d51136c9471,"DOC: generate links to source code
",doc/source/conf.py,doc/sphinxext/linkcode.py
56f66bb13cfb68fde9172fc9ffc5b9c191c3e320,"GEN: Regenerate mtrand.c from modified mtrand.pyx.
",numpy/random/mtrand/mtrand.c
6fae463e1bb42c49c1726910852fa419171a4e80,"BUG: Use npy_intp instead of long in mtrand.

This fixes a problem on 64 bit Windows where a 64 bit index is
needed but long is only 32 bits.
",numpy/random/mtrand/initarray.c,numpy/random/mtrand/initarray.h,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/mtrand_py_helper.h
aae5b0a2b7e683792d56bb5c6994dca1e4b9b4b6,"TST: fix string comparison test failures on Windows for Python 2.5.

This is caused by the inconsistent floating point handling of Python itself.
On Windows with 2.5:
>>> ""%s"" % 1e-6
'1e-006'

With 2.6:
>>> ""%s"" % 1e-6
'1e-06'

Reviewed as PR-225.
",numpy/core/tests/test_getlimits.py,numpy/lib/tests/test_io.py
8670ca3b83991faf90d57363b551fdc90a196826,"Merge pull request #219 from mwiebe/test_warn_param

Add parameters in NoseTester constructor as well as in NoseTester.test() to control which warnings raise an error.  An explicit difference is made between the master branch and release branches.

This was mentioned on the ML: http://thread.gmane.org/gmane.comp.python.numeric.general/48210
",doc/HOWTO_RELEASE.rst.txt,doc/TESTS.rst.txt,numpy/testing/nosetester.py
7c070892e22d988e663e9b2ec3ba9d60c47696e8,"BUG: Fix alignment bug in data copy routine

Thanks to Matthew Brett for tracking this down on a 64-bit SPARC
running Debian.
",numpy/core/src/multiarray/dtype_transfer.c
7d225bb13db65de26d504559d815aac775ed0426,"STY: Code cleanups.

Don't do from numpy.testing import *, put spaces after commas, etc.
",numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py
88a02920daf0b408086106439c53bd488e73af29,"BUG: Fix bug in irfftn.
",numpy/fft/fftpack.py,numpy/fft/tests/test_helper.py
2c53bfaa654327cfd1176a0c2da428b66ccbf8d9,"Merge branch 'add-isclose-function'

* add-isclose-function:
  ENH: Made ""isclose()"" NA-aware, added release note and versionadded.
  TST: Test that isclose().all() == allclose() for all test cases.
  TST: Added masked array and scalar tests for ""isclose()"".
  ENH: Allow ""isclose()"" to work with subclasses of ndarray (such as masked arrays).
  ENH: Added ""isclose()"".
",doc/release/2.0.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
b9f0f1f8b54d0e4cf74ea5e7d80893d66585c4a1,"ENH: Made ""isclose()"" NA-aware, added release note and versionadded.
",doc/release/2.0.0-notes.rst,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
07e640c634ae7e7f859b3def5783e2e50b6002f4,"TST: Test that isclose().all() == allclose() for all test cases.
",numpy/core/tests/test_numeric.py
d292acd4cb3ff6928b2cc211e220d664e96e820f,"TST: Added masked array and scalar tests for ""isclose()"".
",numpy/core/tests/test_numeric.py
56e3e526e026125ba16d30339c4411042b950b06,"ENH: Allow ""isclose()"" to work with subclasses of ndarray (such as masked arrays).
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
63394270fc28dc5615fe018728af894a2ffb2858,"ENH: Added ""isclose()"".
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
723303deb2e130ad2226edb3ada7eaa351897542,"DOC: minor correction to NoseTester doc.
",numpy/testing/nosetester.py
8df4e67caedd2aa42c932c605ad833c9702452a0,"TST: add some string kw options to simplify switching NoseTester behavior.
",doc/HOWTO_RELEASE.rst.txt,numpy/testing/nosetester.py
7961e1f56ec9754cafcb9a67445b01d47d1b1676,"TST: add ""raise on warning"" behavior to NoseTester constructor.

Also document that behavior has to be switched for a release, and remove
comments on turning on deprecation warnings that don't apply anymore.
",doc/HOWTO_RELEASE.rst.txt,doc/TESTS.rst.txt,numpy/testing/nosetester.py
e692a7579b89bf43e8456f418e6b625a4e4a4233,"WRN: A small tweak to make deprecation warnings always at least print
",numpy/testing/nosetester.py
eec299b2a384b92a45e6965dadce23b7a40ab250,"TST,WRN: Add a parameter to control which warnings raise during testing

The default is set to (RuntimeWarning, DeprecationWarning), and
the intent is to leave it as this on master, but change it to ()
immediately after branching for 1.7 in that branch.
",numpy/testing/nosetester.py
1857ee3e9049260366634f350d67c3fe7609116c,"DOC: Change versionadded from 2.0.0 to 1.7.0 where needed.
",numpy/lib/npyio.py
40f0844846a9d7665616b142407a3d74cb65a040,"ENH: Allow bincount to accept empty arrays.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_regression.py
0b400cbe4bc80139d0fe88a327d4f7c3b75ecc0f,"Fix typo (all ready -> already)
",doc/TESTS.rst.txt
f4dd54aa614b263950b7a57329eb0ab9a2f2eadf,"DOC: merge wiki doc edits.
",doc/source/dev/gitwash/following_latest.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/swig.interface-file.rst,numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/fft/info.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/linalg/linalg.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
91f87e1f613630ff0ad9864017f059afcd6e57f1,"BUG: Fix ticket #1990.

When an array is created from a sequence of numeric (boolean, int, float,
complex) and string (bytes, str, unicode) values, the resulting array type
is string, but only the string values were being used to choose the string
length, leading to truncation of data.
",numpy/compat/py3k.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/tests/test_regression.py
d878ad9e8e2fd128eb6615f77574789f4ee5eb69,"BUG: Fix test_umath tests for python 3k.

The problem was:

TypeError: Cannot create a consistent method resolution
order (MRO) for bases object, _FilterInvalids

Fixed by explicitly deriving _FilterInvalids from object.
",numpy/core/tests/test_umath.py
879536e6c2b3ab2ad1f40f6d458aab3e68ace863,"DOC: Add a C style guide.
",doc/C_STYLE_GUIDE.rst.txt
0abb5edeade4405464850d54ba8ae7cd9535bdfb,"BUG: fix some Python 2.4 compatibility issues.
",numpy/core/tests/test_umath.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
09f01d825e38298f02d4b5f50fb814c0b34db98f,"BUG: fix ticket #2029.

The fix is to disallow views of masked arrays if the element size
of the view is different than that of the original.
",numpy/core/src/multiarray/getset.c,numpy/core/tests/test_maskna.py
b9872b41422e33c9910829cd54268a510ec9436b,"Merge pull request #215 from rgommers/windows-runtime-warnings.

This PR fixes a number of warnings, that were converted to test errors in
master.  Some of them were only visible with MSVC.
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py
e962f6b0be32515d6a1d9fb25d24ca250d632a4c,"TST: filter one more printed warning.

This one wasn't actually converted to a test error, because it's not a
RuntimeWarning.  Maybe need to add an option to raise on UserWarning too.
",numpy/lib/tests/test_io.py
955f471ed5034f772fa1eb1a86429a79e53ff541,"TST: filter RuntimeWarnings for invalids from some more test files.

This should fix the test errors seen on both MinGW and MSVC9 related to this.
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py,numpy/lib/tests/test_function_base.py
da0054cf2086eddbe39dec79914df1ec722d53a4,"TST: fix RuntimeWarnings due to invalid values in umath tests.
",numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py
ba40918d39c8e0c41a6bffac67d2d74dd335161f,"BLD: fix Cygwin build error.  Closes #1944.  Thanks to Sebastian Sohr.
",numpy/core/src/npymath/ieee754.c.src
3f685a1a990f7b6e5149c80b52436fb4207e49f5,"Change version number to 1.7.0
",setup.py
e57c2baf8da49851a5971f790b9f4c206b52722d,"Merge pull request #217 from mwiebe/nditer_arraydtype

BUG: Allow nditer object to be created with array-dtypes",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
4c356098a81c019eb141e444a09f6ea2a14166a2,"ENH: add angle() function to ma
",numpy/ma/core.py,numpy/ma/tests/test_core.py
50e50fa3b2fc0ba88eaf98e9e8bccf63232c46d2,"BUG: Allow nditer object to be created with array-dtypes

There was an error-check which prevented this for scalar inputs,
but otherwise it already worked. Added a test as well.
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
0c1c499561066f0053b065830f5b4e900de590bc,"Merge pull request #213 from mwiebe/datetime-win

BUG: datetime: Restrict 'local' timezone print to >= 1970",numpy/core/src/multiarray/datetime_strings.c
d5962f411fb924c2f818ae9df71effb68642f6f2,"Merge pull request #212 from mwiebe/cache-fortran-detect

BLD: Avoid repeatedly testing for the Fortran compiler when it is missing",numpy/distutils/fcompiler/__init__.py
1ef79b71e18e6ab00002447128f617003b05af29,"BUG: datetime: Restrict 'local' timezone print to >= 1970

On the Windows platform, the library calls fail before 1970.
For NumPy consistency across platforms, we have chosen to
apply this in every case.
",numpy/core/src/multiarray/datetime_strings.c
ad2ce5946fd27f525cf3ff912e2b19b35f28b676,"BLD: Avoid repeatedly testing for the Fortran compiler when it is missing
",numpy/distutils/fcompiler/__init__.py
16d49fda2516d5a76f973302db96c751bba8a7ca,"DEP: Fix some functions now deprecated in Python 3.

The functions are assertEquals and assert_ (Python's TestCase, not ours).
",numpy/core/tests/test_memmap.py,numpy/tests/test_ctypeslib.py
c4482f56b347760260a695a72f7ccbd26d02756c,"ENH: lib: break reference cycle in NpzFile (#2048)

This allows these objects to be freed by refcount, rather than requiring
the gc, which can be useful in some situations.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
56a54727433d38cc3e9187c029a0d2bcfdcfcc2f,"ENH: Add const qualifier to some arguments in ndarraytypes.h functions.

Some of the new access functions in ndarraytypes.h can use the const
qualifier. In particular, this avoids a lot of warnings when the code in
f2py is updated to use non-deprecated means of accessing ndarray internals.
",numpy/core/include/numpy/ndarraytypes.h
b20a013ef99aadb87f7ce21648e1ebbc6623bd49,"Merge branch 'fix-attribute-delete'

* fix-attribute-delete:
  TST: Test attempted deletion of attributes/iterator_elements.
  BUG: Make attempted attribute/iterator_element deletions not segfault.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py
4ba819a9cb73cc6e55ac3ca4c13190460b145003,"TST: Test attempted deletion of attributes/iterator_elements.

The attributes without getters are also tested. They raise the same
error as the mutable attributes when deletion is attempted but they
are tested separately.
",numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py
56dde5f10da0fc36624d487df6fd650c92827336,"BUG: Make attempted attribute/iterator_element deletions not segfault.

Attempted attribute deletion raises an Attribute error. Deleting
an iterator index or slice raises a TypeError. This is a change for
nditer, which used to raise ValueError when deletes were attempted.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/nditer_pywrap.c
ae3dd3304bc76dfe9f9514c922669feeb50e3073,"Merge pull request #207 from teoliphant/2033-fast-power-fix

BUG: Fix Ticket #2033 and fix fast_power behavior for integer arrays.",numpy/core/src/multiarray/number.c,numpy/core/tests/test_umath.py
d4ec9096aebb7e9eef2adaa85db9c266eda943b1,"Add comment.
",numpy/core/src/multiarray/number.c
aa2b608d2faf417bbf0fdb018d0c2b94082c0683,"BUG: Fix Ticket #2033 and fix fast_power behavior for integer arrays.
",numpy/core/src/multiarray/number.c,numpy/core/tests/test_umath.py
7e202a2dd96a43579dfe82defe7ec7b63ffdd3ab,"BUG: ticket #2046, deleting array attributes causes segfault.

Add check for NULL in setter functions and return Attribute error
if found.
",numpy/core/src/multiarray/getset.c,numpy/core/tests/test_multiarray.py
015cada57ddd00d866e2a8ef396f83582c192884,"Added ipmt (interest portion of payment) and ppmt (principal portion of payment) functions. Added doctests and unit tests.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
ca258fc430fbcba6a3824dd3834f8e14259a62c8,"Merge branch 'replace-noprefix'

* replace-noprefix: (30 commits)
  BUG: Fix typo npydouble.
  UPD: Remove now redundant typedef.
  UPD: Fix a few more spots missing prefixes.
  BUG: Fix scons build script so it works with umathmodule.c.
  STY: Cleanup some prefixing that crept into comments.
  UPD: Various fixes, Remove #define NPY_NO_PREFIX from files in core.
  ENH: Add some needed macros to include files.
  UPD: Use prefixed types in scalartypes.c.src.
  UPD: Make multiarray *.c files use prefixed macros.
  UPD: Use prefixed types in arraytypes.c.src.
  ENH: Add a few needed macros to npy_common.h.
  UPD: Include ndarrayobject.h instead of arrayobject.h in boolean_ops.c.src.
  UPD: Use prefixed types in lowlevel_strided_loops.c.src template headers.
  UPD: Use explicit prefixed types in einsum.c.src template headers.
  UPD: Use prefixed versions of double and int in multiarray_tests.c.src.
  UPD: Remove includes of noprefix.h in ufunc_object.c and _compiled_base.c.
  BUG: Fix unprefixed reference to cdouble in ndarrayobject.h.
  UPD: Use prefixed macros in numpy/core/src/scalarmathmodule.c.src.
  UPD: Use prefixed macros in numpy/core/src/umath/funcs.inc.src.
  MOV: Rename umathmodule.c.src umathmodule.c since it has no templates.
  ...
",numpy/core/SConscript,numpy/core/blasdot/_dotblas.c,numpy/core/bscript,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/{umathmodule.c.src,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c
096b436e6e93d09057eb415e76b1f452170db3e6,"Merge pull request #201 from mwiebe/tests_dep_error

TST: Make deprecation warnings raise exceptions during test run",README.txt,numpy/core/tests/test_maskna.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/testing/nosetester.py
a2bb1cc9b6fc37583494d9a3e14b0ace59d210a5,"BUG: Fix improper usage of warning filters in the tests
",numpy/core/tests/test_maskna.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
c8c2082755457f4c16b0af7e1ca091dbb690341d,"TST: Make RuntimeWarning raise an error during tests, same as
RegressionWarning
",numpy/testing/nosetester.py
26802c93733886e3f0561bbd0e0e5753d2916143,"Use asbytes for Python 3 compatibility.
",numpy/core/tests/test_ufunc.py
4c0576fe9947ef2af8351405e0990cebd83ccbb6,"ENH: Add ability to pickle ufuncs as requested in ticket #1743
",numpy/core/__init__.py,numpy/core/tests/test_ufunc.py
87214fbfb095664e70702da421bc0df4cddd26c5,"BUG: Fix typo npydouble.
",numpy/core/src/npymath/npy_math_complex.c.src
089fe5b0b429f0121efb758cabadfe667e427ad6,"UPD: Remove now redundant typedef.
",numpy/core/src/umath/umath_tests.c.src
ff6c88733fcf8abdac0fa444d5a9ed8b11e4dac9,"UPD: Fix a few more spots missing prefixes.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/scalartypes.c.src
d93d0214eaec2cd45119ad1f7485e5628faffc2a,"TST: Make deprecation warnings raise exceptions during test run
",README.txt,numpy/testing/nosetester.py
27befc81755b2d78ad7c9b4892e679996d9eb482,"Merge pull request #193 from mwiebe/O8_O4_depr_fix

DEP: Fix up handling of the O4/O8 deprecation",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
0c77beb77344a86b4ee49e24059c567a5551148e,"BUG: Fix scons build script so it works with umathmodule.c.
",numpy/core/SConscript
8d1b91e25a74c8b6576460ec5f773faed427b75c,"MAINT: remove empty file.
",numpy/core/code_generators/genapi2.py
58d883a627ab7f3ee7defcf481603b30705f3939,"DOC: add to release HOWTO that the C API version should be updated.
",doc/HOWTO_RELEASE.rst.txt
794e9c3b37bb08e95e31b40889947d1d772b8f18,"STY: Code cleanup in polynomial [*]fromroots functions.

Use divmod instead of // and % separately.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
ef767a54fae8977cb15d7e0849a8cb626c4b0f2c,"ENH: Improve the computation of polynomials from roots.

The original method was overly sensitive to roundoff. Of the two
approaches considered, gauss integration or binary subdivision of
the roots, the latter is more compatible with using other number
representations such as mpmath. No method is going to be suitable
for large numbers of arbitrary zeros but the current method is a
significant improvement.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
5203d726962d32335fbf767e12ec5614df23dae0,"STY: Cleanup some prefixing that crept into comments.
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/ucsnarrow.c
1d90743cc4d7b697b8c96a2f3369410779968a0f,"DEP: Fix up handling of the O4/O8 deprecation

First issue was that the deprecation warning was still
being raised even when an error was being raised (like for 'O3').

Second issue was that unpickling of legacy pickles which have 'O8'
or 'O4' should not raise the deprecation warning. To handle this
required introduction of a global variable, which has been named
and commented to make it clear this was a necessary evil for this
specific case, not a standard NumPy practice.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_multiarray.py
13010c7f1b338a6286a4b4bb7376a1f3df833d24,"Merge pull request #194 from m-paradox/dtype_names_depr

DEP: Remove dtype names immutability deprecation for 1.7",numpy/core/src/multiarray/descriptor.c
6bde534712abc4ab4d15d3a461dd780fdf7eaa5b,"UPD: Various fixes, Remove #define NPY_NO_PREFIX from files in core.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c
f6a2c7ca3a090e0dc107b60b0a5771247a84e032,"ENH: Add some needed macros to include files.

The unprefixed macros in interrupt.h were prefixed with NPY_,
The unprefixed macros in interrupt.h were added to noprefix.h.
The arrayobject.h file was fixed to work with the new interrupt.h.
Some needed macros were added to npy_common.h.
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_interrupt.h
9897d953895a0a2fc5cc9d8d8db2010958b0d7aa,"UPD: Use prefixed types in scalartypes.c.src.
",numpy/core/src/multiarray/scalartypes.c.src
d48b756b232c99b6624d76db3188090052e0db60,"STY: meshgrid: some minor changes to address review comments.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
b2c1a1cdbb0a0b5213068280bf33bbefe466f69f,"UPD: Make multiarray *.c files use prefixed macros.

This consists of removing the #define NPY_NO_PREFIX and
including numpy/ndarrayobject.h instead of numpy/arrayobject.h.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c
f332b6f975555f5d8536c002ab8bb6266346470a,"UPD: Use prefixed types in arraytypes.c.src.

Almost all of these are in the template headers, but there are a few spots
where the current structure made it easier to use NPY_ or npy_ in the
template itself.
",numpy/core/src/multiarray/arraytypes.c.src
1dec2134505cc4c39d4d2c8bc7e72e0df27642c9,"ENH: Add a few needed macros to npy_common.h.
",numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h
d4cfc64d3bafab4690c7ea75a8b1f04ac9fa900e,"UPD: Include ndarrayobject.h instead of arrayobject.h in boolean_ops.c.src.
",numpy/core/src/multiarray/boolean_ops.c.src
fc85a4643f691759530ff2f29ce1df7e69b72b56,"UPD: Use prefixed types in lowlevel_strided_loops.c.src template headers.

The rational for this is that everything is explicit in the template
header and easily accessed there. I also think it better to keep the
names and types independent, but that is arguable. The file was
otherwise in no need of updating.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
41a41f1ef4c4f53ee39bd4332d1e9d0acc0b16ca,"UPD: Use explicit prefixed types in einsum.c.src template headers.

The rational for this is that everything is explicit in the template
header and easily accessed there. I also think it better to keep the
names and types independent, but that is arguable. The file was
otherwise in no need of updating.
",numpy/core/src/multiarray/einsum.c.src
1099bdc9d410381f9206c798971d5ef178537414,"UPD: Use prefixed versions of double and int in multiarray_tests.c.src.

Just for consistency. Also a few exception style changes.
",numpy/core/src/multiarray/multiarray_tests.c.src
1941ed6c2ae5100ee4c085513ab89500c812aef0,"UPD: Remove includes of noprefix.h in ufunc_object.c and _compiled_base.c.
",numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
265b1fb4de483d3039c42b8c53673d3c0779132e,"BUG: Fix unprefixed reference to cdouble in ndarrayobject.h.
",numpy/core/include/numpy/ndarraytypes.h
77caaafb47034280e1b3c3e63067a976919e5d47,"UPD: Use prefixed macros in numpy/core/src/scalarmathmodule.c.src.

Also a fair amount of stylistic cleanups. This module lives in a
state of stylistic sin and needs an intervention.
",numpy/core/src/scalarmathmodule.c.src
93c2a70282b2b7382334bf0a7fa769bb0bcbce28,"UPD: Use prefixed macros in numpy/core/src/umath/funcs.inc.src.

Also make the templated stuff a bit simpler.
",numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/umathmodule.c.src
91eed7a8e32ad42943472e9eef24955bee2a0976,"MOV: Rename umathmodule.c.src umathmodule.c since it has no templates.

Update core/bscript and core/setup.py to reflect the name change and
remove umathmodule.c.src as a template file that needs to be converted.
",numpy/core/bscript,numpy/core/setup.py,numpy/core/src/umath/umathmodule.c
585d6ea0a84925a3f5d73b50bb9a4378ca54f27b,"UPD: include ndarrayobject.h instead of noprefix.h in umathmodule.c.src.
",numpy/core/src/umath/umathmodule.c.src
9599dde326067516f6fabf046883c5fe2e6cbe5f,"UPD: Use prefixed macros in numpy/core/src/umath/loops.c.src templates.

Also include ndarrayobject.h instead of noprefix.h.
",numpy/core/src/umath/loops.c.src
89bd21bc4416d110b671dbf431d005e701193119,"STY: Simplify template logic in numpy/core/src/umath/loops.c.src.

This consists of removing constructs like @s@@type@ so that
substituting prefixed types works better. It has the side effect
of making the types more explicit in the template headers.
",numpy/core/src/umath/loops.c.src
debd12235b6c769d14efc9b3b02ec191ac25a344,"UPD: Use prefixed macros in numpy/core/src/umath/*.src, skip templates.

Don't do the template headers yet. Affects
numpy/core/src/umath/funcs.inc.src
numpy/core/src/umath/loops.c.src
",numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src
fb0ca3634809c41d39a9cc67cafc30fbfc928300,"UPD: Use prefixed macros in numpy/core/src/npymath/*.src files.
",numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/npymath/npy_math_complex.c.src
040061d8369f0a1f2f846929dcf5400a2f7ae8cd,"UPD: Use prefixed macros in umath_tests.c.src.
",numpy/core/src/umath/umath_tests.c.src
38b0a6eae695aa63696b11a33179d4cb3629553d,"UPD: Use prefixed macros in lapack_litemodule.c.

Also included ndarrayobject.h instead of noprefix.h.
",numpy/linalg/lapack_litemodule.c
acad872c5bb8138cd2b0a065830cb88270f1d55f,"UPD: Use prefixed macros in *.c files except numarray and linalg.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/umath/ufunc_object.c,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/lib/src/_compiled_base.c
12fb59edc49c52a0800fa08b2f518cda06fc8d87,"UPD: Use prefixed macros in *.h files except in numpy/numarray.
",numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/scalartypes.h
2371a5f26a94066b534d7f906e58ec51a12be081,"UPD: Use prefixed macros in loops.h.src and regenerate loops.h
",numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
ff4aef410c77246f9c5adf1507f79aa279383724,"DEP: Remove dtype names immutability deprecation for 1.7

To be added back after the 1.7 release is branched.
",numpy/core/src/multiarray/descriptor.c
5b59ae23cb435c6d8ecb3d81d7c98aa5aa00d7c0,"Merge branch 'replace-old-defines'

* replace-old-defines:
  DOC: clarify numpy version for removal, document sed script better.
  STY: Fix up the 2.0 (1.7) release notes.
  DEP: Deprecate the old_defines.h header and the macros therein.
  UPDATE: Replace macros in old_defines.h by new.
  DOC: numpybook - Replace macro names in old_defines.h with new.
  DOC: Replace references to macros in old_defines with new.
  STY: Replace more found macros in old_defines.h with new.
  ENH: Add sed script that replaces macros in old_defines.h.
  STY: f2py - replace macros in old_defines.h with new.
  STY: linalg - replace macros in old_defines.h with new.
  STY: fft - replace macros in old_defines.h with new.
  STY: lib/src - replace macros in old_defines.h with new.
  STY: core/src - replace macros in old_defines.h with new versions.
",doc/numpybook/capi.lyx,doc/numpybook/comparison/f2py/filtermodule.c,doc/release/2.0.0-notes.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/swig/numpy.i,doc/swig/pyfragments.swg,numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/oldnumeric.h,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/ucsnarrow.h,numpy/core/src/multiarray/usertypes.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c.src,numpy/f2py/capi_maps.py,numpy/f2py/cfuncs.py,numpy/f2py/doc/fortranobject.tex,numpy/f2py/docs/HISTORY.txt,numpy/f2py/src/fortranobject.c,numpy/f2py/src/test/foomodule.c,numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/test_array_from_pyobj.py,numpy/fft/fftpack_litemodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/numarray/_capi.c,numpy/numarray/include/numpy/arraybase.h,tools/replace_old_macros.sed
bbf49fcad1ac5029ab31235e90235c6161ea41ba,"DOC: clarify numpy version for removal, document sed script better.
",doc/release/2.0.0-notes.rst,tools/replace_old_macros.sed
cceb8f6dd11633cedfcc84c4498a887a4dbc056f,"STY: Fix up the 2.0 (1.7) release notes.
",doc/release/2.0.0-notes.rst
8886322d21acec025d668b6431d0070c89b7a90d,"DEP: Deprecate the old_defines.h header and the macros therein.

The old_defines.h file is no longer included in ndarrayobject.h, but
instead in the npy_deprecated_api.h file. It is no longer part of the numpy
build and its deprecation is noted in the release notes.
",doc/release/2.0.0-notes.rst,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/include/numpy/old_defines.h,numpy/core/setup.py
8a0e7cd26ea2803b8580dcca1d1306baa1d702dc,"UPDATE: Replace macros in old_defines.h by new.

With the exception of the numarray fixups these were all instances
that were results of code generation.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/numarray/_capi.c,numpy/numarray/include/numpy/arraybase.h
c4b92ea0a2530c1dfe582d7f5635a0b793286166,"DOC: numpybook - Replace macro names in old_defines.h with new.
",doc/numpybook/capi.lyx
28214cf236251897038dcedfb50a62a2a2007358,"DOC: Replace references to macros in old_defines with new.

Also remove swig support for numpy < 1 from numpy.i since it expects
the old macros.
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/swig/numpy.i,doc/swig/pyfragments.swg
95e2e1574bf14ce463489752427274c0d138a6ec,"STY: Replace more found macros in old_defines.h with new.
",doc/numpybook/comparison/f2py/filtermodule.c,numpy/core/blasdot/_dotblas.c
08338bd1e1aa4b383391b1a2c9ed954534aaa8c9,"ENH: Add sed script that replaces macros in old_defines.h.
",tools/replace_old_macros.sed
b63f91e4ce487c89a67ca31ccb2e1c53574b7857,"STY: f2py - replace macros in old_defines.h with new.
",numpy/core/include/numpy/oldnumeric.h,numpy/f2py/capi_maps.py,numpy/f2py/cfuncs.py,numpy/f2py/doc/fortranobject.tex,numpy/f2py/docs/HISTORY.txt,numpy/f2py/src/fortranobject.c,numpy/f2py/src/test/foomodule.c,numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/test_array_from_pyobj.py
6f9a3ce3545d73d338d6e4467992b66c143093f8,"STY: linalg - replace macros in old_defines.h with new.
",numpy/linalg/lapack_litemodule.c
33726b1b0e5f6709fd7fd19eaa7ce9b40b3dfa4c,"STY: fft - replace macros in old_defines.h with new.
",numpy/fft/fftpack_litemodule.c
9b12b1d233a8f91216ea7bfd879ae2593a041375,"STY: lib/src - replace macros in old_defines.h with new.
",numpy/lib/src/_compiled_base.c
215a91a9a0e790273a3dc1203709190025ce0641,"STY: core/src - replace macros in old_defines.h with new versions.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/ucsnarrow.h,numpy/core/src/multiarray/usertypes.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c.src
48d6edb89112bf00eaaa55f4b7d284b68a9ab84f,"BUG: fix incorrect exception handling in arrayprint.  Closes ticket 2038.
",numpy/core/arrayprint.py
b8bfcd02a2f246a9c23675e1650c3d316d733306,"DOC: Fix another detail in randn documentation.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
7a6239e51c844b2822ec30c2602bae7aff85689b,"STY: Add comment and rename monotonic_ functino to be more descriptive
",numpy/lib/src/_compiled_base.c
3a86a97eb728a12c562578ea6e1f99c5f9b45620,"Merge remote-tracking branch 'dwf/release_gil_in_libfunctions'
",numpy/lib/src/_compiled_base.c
9e2fd1066c92876bf1f3272ba1edf1acee9f0d04,"TST: Test gradient(...) of datetime64 and timedelta64 arrays.
",numpy/lib/tests/test_function_base.py
06d947c51726c303cc5c30f16643903d89da7207,"ENH: Support datetime64, timedelta64 in gradient. Allow array-like input.
",numpy/lib/function_base.py
7bb277bacb92fcbb1ab2980234fe033dcc70d628,"DOC: Document macro changes in release notes.
",doc/release/2.0.0-notes.rst
0858831eaab3ce46bab4b3a3cc35b6cc6ee19f08,"STY, BUG: Cleanup some macros and move a NULL check.

Some macros are changed into statements with the {...}do while(0)
construction, while a few others have had the trailing semicolon
removed. This makes the macro usage a bit safer and more consistent,
but it is possible some third party code will be affected.

A NULL check was moved ahead of the spot where the variable is
first used.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/numpyos.c
b5959b60b969f512d125d87f09e49a503b88b299,"DOC: Fix docstrings of rand and randn a bit more and regenerate.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
5547a9b428cb01b2f5909952c434a42626c6c959,"STY: Merge some error strings into single lines.
",numpy/core/src/multiarray/methods.c
da2962c649ae66dd551ba6f2c2d71cb4609ffcf2,"TST: add a test that itemset raises an exception when the array is not writeable
",numpy/core/tests/test_multiarray.py
b95db7f9c39fc8f6d84077578b370d0c766fa819,"BUG: multiarray: in array_setscalar, check that the array is writeable (ticket #1622)
",numpy/core/src/multiarray/methods.c
67ba2871d104513e8c25aded9fb47a99108d8688,"DOC: add a high-level comment for arr_insert_loop
",numpy/lib/src/_compiled_base.c
aad737eb4b5ffb3429ca46c9791c9d87572c3550,"Merge pull request #188 from dwf/getmap_counter_precision_bug

BUG: PyArray_{Get,Set}Map counter types are ""int"", should be ""npy_intp""",numpy/core/src/multiarray/mapping.c
65d300597b6fad1c1df5c5edef4f00bfb80c0af3,"BUG: Fix identical int->npy_intp in PyArray_SetMap

Thanks to Christoph Gohlke for pointing this out.
",numpy/core/src/multiarray/mapping.c
178bd8b4a668328f27886f218be0e337c21952ba,"BUG: PyArray_GetMap using low-precision counter

Should be using npy_intp rather than int.
",numpy/core/src/multiarray/mapping.c
4fcb53ee59a7c4b0bfc7b3c2d2f7b18d9f93bfaa,"Merge branch 'ticket_2027'
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_einsum.py
e74585da4b5519115995cbca915e69b48370a162,"TST: Add a test for ticket #2027
",numpy/core/tests/test_einsum.py
7d909e34332a2f97250c68b9852298a621368457,"BUG: einsum: Fix issue #2027, inner loop 3rd data pointer was not being incremented
",numpy/core/src/multiarray/einsum.c.src
aea993c4a36cf91f93e31fcf2cdbfa0843e787b0,"BUG: Change nditer to match documentation about grow_inner flag
",numpy/core/src/multiarray/nditer_pywrap.c
2f9ed8dc99f4553c4a1f9a670ca31354b61399a7,"PYX: Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
d389db548062fafd202c25b94d3d3e276d6b9727,"Fixed RandomState docstrings.
",numpy/random/mtrand/mtrand.pyx
d36e076f0559157745c8cc0186a8484081e55a1d,"BUG: Fix ticket #2021.

The return from PyArray_DescrFromObject PyArray_SearchSorted needed
to be checked for NULL. Also added checks in other spots where
PyArray_DescrFromObject was called. Added regression test for same.
Made a few small code cleanups along the way.

All the checks may not be necessary, but
1) No one should have to waste brain cycles figuring that out.
2) Bugs happen.
3) Things change.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
6666eecf374153d949c9a9bfec2e4577b979c3f1,"STY: Double space between main test functions.
",numpy/core/tests/test_maskna.py
8a4ebf4c800a8f734b3bd620917b4823a2c87e10,"TST: Test that 'astype' method works for maskna arrays with masked values.
",numpy/core/tests/test_maskna.py
d3cef4f979eeff01fd0127bd4592e98d8a927587,"BUG: Make output of 'astype' method a maskna array if source array is.
",numpy/core/src/multiarray/methods.c
55472ca381c472d86ebb899cb2d786e8e9be8ba5,"Merge branch 'pull-181'

* pull-181: (39 commits)
  TST: Remove docstring from test_class_methods.
  DOC: Fix bogus output in polyval example.
  DOC: Improve numpy reference documentation of polynomial classes.
  DOC: Clarify the column order of 2-D and 3-D Vandermonde matrices.
  DOC: Fix cut and paste error, derivative <- integral.
  SPELL: Spellcheck the modules. Clarify an example.
  DOC: Move removing deprecated imports note to deprecation section.
  ENH: Modify test classes to produce more informative test messages.
  WHT: Whitespace cleanup.
  REM: Remove deprecated imports from polynomial package.
  DOC: Document new polynomial package functionality in the release notes.
  DOC: Document the use of the polynomial convenience classes.
  TST: Add tests for NA support in the polynomial fitting functions.
  ENH: Add support for NA to the least squares fitting routines.
  TST: Add tests for mismatched types, domains, and windows.
  BUG: The polynomial convenience classes let different types interact.
  DOC: Lower toc number of levels.
  DOC: Finish documenting new functions in the polynomial package.
  DOC: Document xxxfit functions in the polynomial package modules.
  DOC: Add version added to some of the polynomial package modules.
  ...
",doc/release/2.0.0-notes.rst,doc/source/reference/routines.polynomials.chebyshev.rst,doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.polynomials.hermite.rst,doc/source/reference/routines.polynomials.hermite_e.rst,doc/source/reference/routines.polynomials.laguerre.rst,doc/source/reference/routines.polynomials.legendre.rst,doc/source/reference/routines.polynomials.package.rst,doc/source/reference/routines.polynomials.polynomial.rst,doc/source/reference/routines.polynomials.rst,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
356537c381ef49db349214b5a8f918c80cd8cb1c,"TST: Remove docstring from test_class_methods.

And don't use the 'exec' statement to write the tests.
",numpy/polynomial/tests/test_classes.py
b7a5b170ff68fc502e4fbc5055d23a8ed082482a,"DOC: Fix bogus output in polyval example.
",numpy/polynomial/polynomial.py
4364975c3b46385e18dfed4a6f54801a0d49bfef,"DOC: Improve numpy reference documentation of polynomial classes.

Add more explanation of what happens in polynomial substitution and also of
its use in casting between types. Clean up some rst glitches.
",doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.polynomials.hermite.rst,doc/source/reference/routines.polynomials.hermite_e.rst
894d93e98c6b35037829dc4f78fd86245becb7ff,"DOC: Clarify the column order of 2-D and 3-D Vandermonde matrices.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
0402e1c6a5cc5693a1f021446f20baebe9073890,"DOC: Fix cut and paste error, derivative <- integral.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py
a4e99a7998a30d8e777510aaa5926b436a844f2b,"SPELL: Spellcheck the modules. Clarify an example.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py
88163cb1ffb3a98a4ecc74481312a618813a9f1e,"DOC: Move removing deprecated imports note to deprecation section.
",doc/release/2.0.0-notes.rst
77b8a2608168235fbb96543ddaac0d7b4ef663ff,"ENH: Modify test classes to produce more informative test messages.

The tests were all generator based and that produced the same message
for all the tests when they were run in verbose mode. The quick fix
was to use the generator to write named test functions for all the tests.
",numpy/polynomial/tests/test_classes.py
cb19ab65dfa741b043892310c1aab18f3d8d7691,"WHT: Whitespace cleanup.
",numpy/polynomial/polynomial.py
d41fc4d518cb516c254959ca8c096bc8db2c81e9,"REM: Remove deprecated imports from polynomial package.
",numpy/polynomial/__init__.py
9e2fbabc59a6c2f15bd697557e878616b6a166b5,"DOC: Document new polynomial package functionality in the release notes.
",doc/release/2.0.0-notes.rst
d3ac8f70813c04b1ebfcb8e94b825f50f6b35a92,"DOC: Document the use of the polynomial convenience classes.
",doc/source/reference/routines.polynomials.classes.rst
d305119d2087423169f810e531d7690af44c4079,"TST: Add tests for NA support in the polynomial fitting functions.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
cd8f59d96788a2573a845988594a9fca3507c698,"ENH: Add support for NA to the least squares fitting routines.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py
4e84ece1f000e6477eb4e3c5b4e2a8480e62e88c,"TST: Add tests for mismatched types, domains, and windows.

Test that those combinations raise ValueError for the arithmetic operations
of the convenience classes.
",numpy/polynomial/tests/test_classes.py
a0319da8224b88bc305ad741d7f8996097920af6,"BUG: The polynomial convenience classes let different types interact.

In particular for arithmetic where one could end up with a Polynomial
type with Chebyshev coefficients after an addition. It is unlikely that
that would be done on purpose.

The PolyDomain error message was also replaced by a TypeError with
an appropriate message. That seems like a better choice.
",numpy/polynomial/polytemplate.py
9d40c7c809ec974cd616c8afaa2c56c1259c18a9,"DOC: Lower toc number of levels.
",doc/source/reference/routines.polynomials.rst
dc7719f66452288d7c0192f93c07c8b18d870b75,"DOC: Finish documenting new functions in the polynomial package.

The old functions could use a review, but that isn't pressing.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
c462637f9b398600d25ca449aef8586d8d9d6210,"DOC: Document xxxfit functions in the polynomial package modules.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
08c8c54051e27f80f7e30646ef367eb709b3e6cf,"DOC: Add version added to some of the polynomial package modules.
",doc/source/reference/routines.polynomials.chebyshev.rst,doc/source/reference/routines.polynomials.hermite.rst,doc/source/reference/routines.polynomials.hermite_e.rst,doc/source/reference/routines.polynomials.laguerre.rst,doc/source/reference/routines.polynomials.legendre.rst,doc/source/reference/routines.polynomials.package.rst,doc/source/reference/routines.polynomials.polynomial.rst
175d90a3e1aedaecc296e3661df5b18bcf5b1749,"DOC: Revise documentation for the basic functions.

Step 1 in the polynomial package documentation revisions.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
6bc4374ff68718a02f254e599bbf34e104b58fbe,"BUG: Fix up links to classes.

The Sphinx markup was incorrect the documentation to the polynomial
convenience classes wasn't being generated.
",doc/source/reference/routines.polynomials.chebyshev.rst,doc/source/reference/routines.polynomials.hermite.rst,doc/source/reference/routines.polynomials.hermite_e.rst,doc/source/reference/routines.polynomials.laguerre.rst,doc/source/reference/routines.polynomials.legendre.rst,doc/source/reference/routines.polynomials.polynomial.rst
2e6ef3517c49b0dbd3a9d92d13852b34730ff516,"DOC: Rearrange the polynomial documents.

This is the first step in cleaning up the polynomial documentation
and writing an instructional section on the convenience classes.
",doc/source/reference/routines.polynomials.chebyshev.rst,doc/source/reference/routines.polynomials.classes.rst,doc/source/reference/routines.polynomials.hermite.rst,doc/source/reference/routines.polynomials.hermite_e.rst,doc/source/reference/routines.polynomials.laguerre.rst,doc/source/reference/routines.polynomials.legendre.rst,doc/source/reference/routines.polynomials.package.rst,doc/source/reference/routines.polynomials.polynomial.rst,doc/source/reference/routines.polynomials.rst,numpy/polynomial/legendre.py
3c2603f1fe11ef6bc44de1160a7ab43325a35883,"HACK: Make __array_priority__ = 1000.

This works around changes in the treatment of __array_priority__ that
were part of commit 32b32c2. Previously the rop's of the right hand
object were called whenever it had the __array_priority__ attribute
and was not an ndarray or derived thereof.  After the change the
object needed to have greater priority, in this case > 0. It isn't
clear that the new behavior is the correct one and if it is reverted
then setting __array_priority__ back to 0 will provide a test for that
decision.
",numpy/polynomial/polytemplate.py
2986478463127f4b32d22d80570219a0007898ab,"TST: Finish moving class tests into test_classes.

There are currently errors that will be fixed if pull #178 goes in.
The tests were also changed to use generators, which makes them
run noticeably slower but give better error messages and makes the
tests a bit cleaner.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
855ced252054e1049e3179824e27a7ab4f669459,"TST: Move more tests into numpy/polynomial/tests/test_classes.py
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
8ad18ab3799d669d93759e7c20ff6457ed1e2bc2,"TST: Add tests for basis and cast static class methods.

A new test file, test_classes, has been added so that conversions
between all the class types can be tested. Several tests common to
all the classes were also moved to this file. Ideally all the common
tests will be moved, but that isn't done yet.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_classes.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
a76c3339a9c1f869ec0c5dff7b0379828b3c8598,"ENH: Add static methods basis and cast to the polynomial classes.

The new basis method is a convenient way to return an instance of the basis
function of given degree for the class. It is intended mostly for
pedagogical purposes.

The new cast method provides an alternate way to convert an instance of one
polynomial class to another. It complements the convert instance method.
",numpy/polynomial/polytemplate.py
1c7d73c6ada2df49d99bce4f931d0eac76322f61,"TST: Add tests for Gauss quadrature and weight functions.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py
c936d86f2e8f7eb1ecde5e2ea522199ced56d05e,"ENH: Add functions for Gauss quadrature and associated weight functions.

The new functions for Gauss quadrature  are of the form xxxgauss, where xxx
is any of cheb, leg, lag, herm, herme. They return the Gauss points and
weights for Gauss quadrature of the various orthogonal polynomial types
given the degree. They are tested to work up to degree 100.

The new functions for the weight are of the form xxxweight, where xxx is
any of cheb, leg, lag, herm, herme. They return the value of the weight
function for the various orthogonal polynomial types given and array of
points.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py
9906d6d8c113048509f93778946a4c4771c4f6b6,"BUG: Fix test that was in wrong spot.
",numpy/polynomial/tests/test_hermite.py
4dbae53e1a65471f79449eda6be6eb088b5e29fa,"ENH: Add companion matrix functions.

The new companion matrices are related to the old by a
similarity transformation that makes them better conditioned
for root finding. In particular, the companion matrices for
the orthogonal polynomials are symmetric when the zeros of a
single polynomial term is wanted. This produces better zeros
for use in Gauss quadrature.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_hermite_e.py
00ff295c10c6428e1542b80e7d82ab2c556b3ffd,"TST: Add tests for multidimensional coefficient array functionality.

Test the multi-dimensional coefficient array functionality.
Reorganize and cleanup some previous tests.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
266915b2d5480474f9eeb1cb7a11e6753e4fcf2e,"BUG: Small fixes and additions

Where xxx is one of poly, cheb, leg, lag, herm, herme:

Refactor  xxxval2d, xxxval3d, xxxgrid2d, and xxxgrid3d for clarity.
Check that coordinate arrays are compatible in xxxval2d, xxxval3d.
Work around einsum bug that affected xxxvander3d.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
26e2ae4b8b55bc82cd46d5d309ac5eced4bc8fe4,"BUG: The derivative tests were using incorrect test coefficients.

The coefficients used were [1] + [0]*i instead of [0]*i + [1].
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
8e8b85d404e8453e469b3273528c4dc5f30b819f,"ENH: Make derivatives and integrals work on multidimensional array.

An axis keyword was added to the function signatures of xxxder and
xxxint, where xxx is any of poly, cheb, leg, lag, herm, herme. The
evaluation method for the Chebeshev series was also changed to avoid
using z_series and to more closely resemble the other implementations.

At some point the z_series will be removed from the chebyshev module
and only used for trigonometric series.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
a4f51d7fc667d1274df936737f4e258b0e240020,"ENH: Add functions for producing 2D and 3D pseudo Vandermonde matrices that are useful for least squares fits to data depending on two or three variables using the various polynomial basis.

The new functions have names polyvander2d, and polyvander3d,
where 'poly' can be replaced by any of 'leg', 'cheb', 'lag',
'herm', or 'herme'.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
58d9618a08f6837614c0e74cadec089639ad16ec,"ENH: Modify the various polynomial series so that multidimensional coefficient arrays can be used. Add functions for evaluation of 2D and 3D polynomial series evaluated either on a specified set of points or on a cartesian product of 1D points.

The new functions have names polyval2d, polygrid2d, polyval3d, and
polygrid3d, where 'poly' can be replaced by any of 'leg', 'cheb', 'lag',
'herm', or 'herme'. These additional functions should cover the common
multidimensional cases and provide examples for anyone who wants to go to
higher dimensions.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
0a17ccb5dad99e6dd33ab315223f1b0a6ffe98ae,"STY: Whitespace cleanup and double space between function definitions.
",numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
b8179388d3868be2cc26b6ca12e937c7f83a9d5c,"BUG raise TypeError instead of NotImplementedError for wrong types
",numpy/core/src/umath/ufunc_object.c
3d9bedb70f2fe2761a3ee123004ccbba0f037b2e,"DOC: putmask: mention copyto is NA-aware, and recommend to switch to it.
",numpy/add_newdocs.py
8c113493f1f6d88f2829afcbcd3d28312751e610,"DEP: undeprecate putmask. Used a lot, no need to deprecate it.
",numpy/add_newdocs.py,numpy/core/src/multiarray/item_selection.c
825efdbd24ef396ce7c622180a50525df5c99c35,"BUG: array_divmod did not check for Py_NotImplemented.

The consequence of this bug was the __rdivmod__ wasn't called for user
classes that defined __array_priority__.
",numpy/core/src/multiarray/number.c
1475319160baed782daa39e0de0c0655c2abe4b5,"BUG: savetxt now handles complex arrays.  Closes #1573.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
3fb541ef51ca60cf5a903ed83f69120fe3f5373a,"TST: meshgrid: test expected shapes for Cartesian and matrix indexing.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
4e571172a210612bdeba1db0135b7d5fbc44ee0c,"BUG: meshgrid: raise error on single input.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
166d0819dc86fb68380b66ffa91c966fa77cbc26,"REV: Revert check for NULL pointer in NpyCapsule_Check

Essentially all functions in the Python C API require nonnull arguments,
and crash if given nulls.  PyCapsule_Check is no exception, and numpy
should probably mirror the standard behavior.  As of change e873d58492,
we don't need this check for null, so revert.

Specifically, this reverts commit e9c42cab112d94dbcade9f1afc64b26af0521e14.
",numpy/core/include/numpy/npy_3kcompat.h
31eccabfd84dd1058afa0ce8908e00dfd74cfa71,"BUG: ufunc_type_resolution.c: Fix another user defined type ufunc bug
",numpy/core/src/umath/ufunc_type_resolution.c
1b7673d7ddf3671e5ffd05fef864708dc6dd4752,"BUG: ufunc_object.c: Fix a bug in user-defined loop resolution
",numpy/core/src/umath/ufunc_type_resolution.c
de5156079754f4021553cbaa0d870c168911adf4,"convert_datatype.c: Check for null pointer before calling NpyCapsule_Check
",numpy/core/src/multiarray/convert_datatype.c
3b3735d13665d264c991788f9f494d5c04ab1526,"BUG: Fix dimension checks in random.choice. Make sure last entry in cdf
is exactly 1.0.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
2988b0e6726c3c581bbede2d2c1cc5df0b629fab,"Merge branch 'pull-151'

* pull-151:
  FIX: Add release notes, use inverse cdf method for non-uniform sampling with replacement, change searchsorted to use side='right', and regenerate mtrand.c.
  FIX: Changed named to choice, reverted other changes.
  ENH: New sample function, bugs in tests fixed
",doc/release/2.0.0-notes.rst,doc/source/reference/routines.random.rst,numpy/random/__init__.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
26195cfe921818d97776c83f4c84286ae79bf1de,"FIX: Add release notes, use inverse cdf method for non-uniform
sampling with replacement, change searchsorted to use side='right',
and regenerate mtrand.c.
",doc/release/2.0.0-notes.rst,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
67f24e8f2e12d9f5b8510ffd0769b13f18f5636a,"FIX: Changed named to choice, reverted other changes.
",doc/source/reference/routines.random.rst,numpy/core/tests/test_multiarray.py,numpy/fft/tests/test_fftpack.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/random/__init__.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
8b6c850cf3e6ec664705e9823014e59edc1a26e7,"ENH: New sample function, bugs in tests fixed
",doc/source/reference/routines.random.rst,numpy/core/tests/test_multiarray.py,numpy/fft/tests/test_fftpack.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/random/__init__.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
3d0b348450addcc33bd30e9c0b3ea5b10106ab4d,"Merge branch 'pull-176'

* pull-176:
  TST: Add test for weight modification.
  BUG: Handle weight correctly and don't modify the original.
  MAINT: Make masked ma.polyfit match current polyfit.
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
008e5e9c6ee24b6675dc582373c4a14cbe5ec22e,"TST: Add test for weight modification.
",numpy/ma/tests/test_extras.py
eb042bf3bf192c3652b959c2f75ee79225b252b5,"BUG: Handle weight correctly and don't modify the original.
",numpy/ma/extras.py
30964867d133f4ec2422e2cdf1cd69a28b7c45f1,"MAINT: Make masked ma.polyfit match current polyfit.
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
37d723cb629e3e8cb4d9ed7b85702fbd6350818d,"MAINT: clean up docstring and some minor items in meshgrid.  Remove ndgrid.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
e37a90c8bd1bf99f89b537ce47492095d6ae147c,"ENH: enhance meshgrid to generate 3D grids, sparse grids, matrix indexing.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
5a683949d87fbad1dc93fb4fcb8b8293e7d19dc4,"MAINT: update version match regexp for IBM AIX Fortran compilers.

The patched version correctly matches the output of ``xlf -qversion`` on my AIX platform:

  $ uname -a
  AIX c1t0101 3 5 00CF49B14C00
  $ xlf -qversion
  IBM XL Fortran for AIX, V12.1
  Version: 12.01.0000.0000
  $
",numpy/distutils/fcompiler/ibm.py
059334c491940752b08070074cc221b69487e5e4,"STY: Small coding style cleanups.
",numpy/core/src/multiarray/convert_datatype.c
e9c42cab112d94dbcade9f1afc64b26af0521e14,"BUG: Check for NULL pointer before calling PyCObject_Check or
PyCapsule_CheckExact. This may be a Python bug but we might as
well check anyway. Reported by Geoffrey Irving.
",numpy/core/include/numpy/npy_3kcompat.h
eb46577e7be25d0a578d6275683ae6f28ac8ae06,"BUG: Do not segfault on dot between sparse matrices.
",numpy/core/src/multiarray/multiarraymodule.c
04d225afa2b7b780a735fd95eb557ac3eb66e686,"BUG: forgot to add numpy template.
",numpy/version.py.in
7f302cca29a057636cffe9be18a81f4d4d762ca0,"BUG: fix #1984 (generate correct version.py).
",bscript
729778534afcfd54008020cfeb9c39c37d9e429b,"BLD: add support for the new X11 directory structure on Ubuntu & co.
",numpy/distutils/system_info.py
4daf94998a2d69c8039cdc883d76ee340e31880b,"BUG: Fix maximum/minimum for object arrays in Python 3.
Use PyObject_RichCompareBool instead of PyObject_Cmp.
",numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py
d7b59fec39103bdce756f223e8a0267d749bd58d,"STY: Some coding style fixups.
",numpy/core/src/multiarray/calculation.c
6fc0737d623f3065eb6fe720ce13cf1ef07cfdfe,"ENH: Explicitly coded argmin for timedelta
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/usertypes.c,numpy/core/tests/test_multiarray.py
31c29026bdde0735aceeebeb2e050f0c52fb1146,"ENH: Add 'pgfortran' as a valid compiler in the Portland Group
suite of fortran compilers. Adjust the version string command.
",numpy/distutils/fcompiler/pg.py
ec56ee1c4ef750c9db7b2ab6ab4bf1658971a070,"BLD: fix up detection of Intel CPU on OS X in system_info.py.
",numpy/distutils/system_info.py
1dc1877493312eb5fe107729a9309e8636968891,"ENH: add context manager for NpzFile class.
",numpy/lib/npyio.py
efe04c8205e39d1edfe206df1c865c99bbd3af66,"DOC: mention that NpzFile instances must be closed.
",numpy/lib/npyio.py
fcae1eda38cfe8daba63d79356c2d231ef311721,"BUG: core: fix compilation for UCS-narrow
",numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/old_defines.h
35952aaed7caa1307a7551c053d0ac57fef047d4,"DOC: describe required version of GCC in MinGW on Windows in release doc.
",doc/HOWTO_RELEASE.rst.txt
909010af44d3cab2066bfe02a916a36fe1040e54,"BUG: Fix version comparison bug on Py25.
",numpy/distutils/mingw32ccompiler.py
9ba2d5301afdfbba3c53a117c2cc417bf04ae037,"BUG: Fixes for Python3 and some further enhancements.
",numpy/distutils/mingw32ccompiler.py
33dec5f3d364eccc9ee8d9e88a8710cea9ee94ec,"ENH: Incorporated review advice and changed macro hack to MinGW hint.

When doing the typedef change, it conflicted with existing typedefs.
I realized that MinGW did not know which MSVC runtime it would link with,
but it had conditional definitions for MSVC 8 and up, which can be activated
by defining __MSVCRT_VERSION__. So I added it to the compiler macros, which
made the fallback hack and extra typedef unnecessary.
",numpy/core/src/multiarray/datetime_strings.c,numpy/distutils/mingw32ccompiler.py
ab2337159de0335e47d4b535fe558c7017c190bc,"BUG: Add another preprocessor statement for 64-bits fallback mechanism.
",numpy/core/src/multiarray/datetime_strings.c,numpy/distutils/mingw32ccompiler.py
a069994282979fee21cacd079f2cf0da4bac8286,"BUG: DLL finder should also look in WinSxS directory.
",numpy/distutils/mingw32ccompiler.py
f8e383499b37ef517044903293733328dc9e581c,"BUG: Also build MSVC debug library if MINGW_USE_CUSTOM_MSVCR is defined (best effort).
",numpy/distutils/mingw32ccompiler.py
be070517dd285d7ca870b5ac74f6269e11f21843,"ENH: In debug mode, do not use customized MSVC runtime library.
",numpy/distutils/mingw32ccompiler.py
1fa57b6ef5a1dcfd78a9a7f4585f647977f1c01b,"ENH: Clean up symbol definition file.
",numpy/distutils/mingw32ccompiler.py
d7eafb051bbb626c6fb36323e9766b11d81b84ba,"ENH: Some commments. Skip customization for MSVC < 8.0.
",numpy/distutils/mingw32ccompiler.py
c763301b61f4f42d45f4435f07557f0c265a79c3,"ENH: Use customized MSVC runtime library if present.
",numpy/core/src/multiarray/datetime_strings.c
2b248e51f6522a21260c2b752a117b7927046793,"ENH: Generate custom MSCV runtime library for mingw32.
",numpy/distutils/mingw32ccompiler.py
2e899dd23bc36ffad5590c8bc11de22d51a16966,"BUG: Fixing reference counting bug in array comparison
",numpy/core/src/multiarray/arrayobject.c
8e606173b3436c641adc07b826866542e7ce5ff7,"BUG: fixing reference leak from the numpy refactor @ 4c21144
",numpy/core/src/multiarray/ctors.c
7471adc81aa9312d80ce62bee4485221682d12ef,"BUG: porting bugfix from refactor @ 708d6be
",numpy/core/src/multiarray/iterators.c
3927c3aa28ea2ed8dbb5228de3e69928972da412,"BUG: porting bugfix from refactor @ 3da77df
",numpy/core/src/multiarray/ctors.c
3a7e61c7d55be9a84929747c38cd71e62593129d,"BUG: Fixed reference count bug where scalar value assignment by field to an array would increment the reference count of the scalar.
",numpy/core/src/multiarray/arrayobject.c
be52978667fd10d26c9c0013385513eaece78dd3,"BUG: Fixing reference leak in datetime metadata retrieval
",numpy/core/src/multiarray/datetime.c
1f20595a834712e2e8451cd10a2b04b638bef72a,"BUG: fixed reference leak when new record dtype squashed old one in sort
",numpy/core/src/multiarray/methods.c
63dff6b50eeb090fac208ac09cd7e2e977a531ae,"BUG: fixed reference counting bug in PyArray_FromScalar that occurs when using an extended dtype
",numpy/core/src/multiarray/scalarapi.c
b331af180ce13dded190045f2ecccc4b1ce12464,"BUG: Fixed reference leak when gen_arraytype_subscript fails
",numpy/core/src/multiarray/scalartypes.c.src
943f2b19591a93fe8385a2ed437bf5eafe4aefec,"BUG: fixing reference leak in OBJECT_fill
",numpy/core/src/multiarray/arraytypes.c.src
dadf7ed8b3bfb10ee3249918a9d48e4a3e3f0e7c,"PyArray_FromBuffer: Allow creating arrays from empty buffers or empty slices.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
10ed90c3424a7621188f5b4736c08692836cdf5a,"Merge branch 'pull-161'

* pull-161:
  BUG: Attempt Y2038 fix, and restrict local timezone parsing to 1970 and later, because of Win32
  BUG: Attempt to fix the Y2038 problem parsing dates >= 2038
  TST: Add tests for the Y2038 problem
  BUG: Remove floor_divide support for timedelta64 // timedelta64
  DOC: Update year range in LICENSE.txt copyright
  TST: Add true_divide and floor_divide tests for the mm_d timedelta case
  STY: Fix a few cases of spaces not following conventions
  BUG: Add %lld exception for Python 3.1 as well
  WRN: Remove many warnings when building at a higher warning level
  BUG: datetime: Fix timedelta / timedelta -> float64 on Python 3
  BUG: datetime: Fix str() function of datetime arrays
  BUG: datetime: Make datetime_as_string produce a UNICODE array instead of STRING array on Python3
",LICENSE.txt,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_datetime.py
55df3c69a986423b0c1839395d3f385f0d5e236a,"BUG: Attempt Y2038 fix, and restrict local timezone parsing to 1970 and later, because of Win32

On MS Windows, dates earlier than 1970 cause mktime to error. This patch
also applies to parsing the same Y2038 hack that was done for printing.
",numpy/core/src/multiarray/datetime_strings.c
b1e5fa05ad4803856ec3272a900707eaf4a7f92e,"BUG: Attempt to fix the Y2038 problem parsing dates >= 2038

Also incorporated part of Han Genuit's pull request #23, to try
and reduce the difficulty dealing with the merge conflict that
will result from these concurrent changes
",numpy/core/src/multiarray/datetime_strings.c
6a3ca96df7179e745c76dc09a67bf37af3d818ce,"TST: Add tests for the Y2038 problem

This only seems to be cropping up on 32-bit Linux, where time_t is 32 bits,
and there appears to be no 64-bit time_t extension like on Windows.
",numpy/core/tests/test_datetime.py
90a54f4683926ffbe158f0d0ace76cf6a6a3bee3,"BUG: Remove floor_divide support for timedelta64 // timedelta64
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_datetime.py
d4160e319acf29c383285f89818500a1fa900613,"DOC: Update year range in LICENSE.txt copyright
",LICENSE.txt
0d231984bb867eb1634f3b92a76dcd9c4958c7f3,"TST: Add true_divide and floor_divide tests for the mm_d timedelta case
",numpy/core/tests/test_datetime.py
ee33440f2b9e553228aed83bdbd8d61e63316c00,"STY: Fix a few cases of spaces not following conventions
",numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/sequence.c
d81a85cbdbd8d59df8b8166badaf369cb2f03ff9,"BUG: Add %lld exception for Python 3.1 as well
",numpy/core/src/multiarray/scalartypes.c.src
231b96a460b86f6f8867be6f5b8261fbd3784ebe,"WRN: Remove many warnings when building at a higher warning level

This includes warnings about shadowed variables, some bad casts,
and others. Fixing these warnings also fixed a memory leak in one instance.
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_datetime.py
e1a66b674e4f1f04a94b4bfc412d58045d64406a,"BUG: datetime: Fix timedelta / timedelta -> float64 on Python 3
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
f0d8fede3ae93c5e07257d176d275393fc66abd7,"BUG: datetime: Fix str() function of datetime arrays

Done by making the unit given by datetime_data be a string instead of
bytes in Python 3.
",numpy/core/src/multiarray/datetime.c
a1b9a1aa76a76570224161316d7b20e7fc8464a2,"BUG: datetime: Make datetime_as_string produce a UNICODE array instead of STRING array on Python3
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/shape.c
fac867419eccdc48aebccdec9216eba52d1676e1,"DOC: add note on formatting math to HOWTO_DOCUMENT.
",doc/HOWTO_DOCUMENT.rst.txt
214134f00dcd895582d80f9f09a961f8e33eb02c,"REF: simplify multi-loop breaking with a goto.
",numpy/lib/src/_compiled_base.c
7d6ceb52c040df3f66e49b0ab11ec7b9108266fe,"ENH: release the GIL for arr_insert inner loop.

Releases it only conditionally, as object arrays require refcounting to
be performed within the inner loop, making GIL release impractical.
",numpy/lib/src/_compiled_base.c
e6696cb736b05f0bb01fe4baac683746ace63a24,"REF: factor out inner loop of arr_insert.

This makes subsequent thread-friendly modification easier.
",numpy/lib/src/_compiled_base.c
623195534e98b12c5c109d0963b26d57617da99b,"ENH: release GIL for C loops in ravel/unravel.
",numpy/lib/src/_compiled_base.c
a5268155c0486061c85d581a4ab75e21f8cbb8f1,"ENH: Use char instead of int for error flag.
",numpy/lib/src/_compiled_base.c
0d95803ea6c3f305cc2ceb848cee614b78a7902f,"ENH: less fine-grained GIL management in digitize.
",numpy/lib/src/_compiled_base.c
6e4016fb251ffc20d3f1f57165b20735f368a2e2,"ENH: release the GIL in some C library functions.

Sandwich certain potentially long running for loops that don't touch any
Python objects between NPY_BEGIN_ALLOW_THREADS and NPY_END_ALLOW_THREADS
so that the interpreter can potentially schedule another Python thread.
",numpy/lib/src/_compiled_base.c
aded70c4d02eec7a347af9868f1691dc49310f4d,"STY: Fix spelling and reword text.
",doc/HOWTO_DOCUMENT.rst.txt
d6ccacad9815d56131f8148c23243f355008b75d,"DOC: numpydoc.py was still using old, scipy trac url in docstring
",doc/sphinxext/numpydoc.py
81bf4855ca7fb79b8c43f89a8e6b376885b0dab1,"DOC: mention numpydoc in numpy conventions

Explain why it's good to use numpydoc and link to both numpydoc and some
installation and usage instructions.
",doc/HOWTO_DOCUMENT.rst.txt
a2a9dfb692e36bdaf5667fb0d41e05c79d77f981,"BUG: Fix polynomial tests.
",numpy/lib/tests/test_polynomial.py
af22fc43921e2e7f77e909a1acf77011f682ff7b,"ENH: Add weights and covariance estimate to standard polyfit.
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
073bc39c58a6788ffda6aaa7549955cc3d4fdc93,"TST: skip umath complex tests on all platforms except linux.  Closes #1926.
",numpy/core/tests/test_umath_complex.py
d07f06233f8c79dbc4abebdfe24d0bdfe62f3cc9,"Merge pull request #152 from 87/ref-fix

BUG: Fix reference leak in PyArray_DTypeFromObject",numpy/core/src/multiarray/common.c
ebb582fe184f026450dc2bb24b847c9d0e7bd804,"BUG: Fix reference leak in PyArray_DTypeFromObject
",numpy/core/src/multiarray/common.c
da2af087f11e122372d61bb00eb7fe2d91b47139,"DOC: update bento instructions.
",BENTO_BUILD.txt,bscript
c44c5325f8fcfb0ed82230ae63ea5dee62d348b0,"MISC: cloadable is not useful anymore.
",numpy/core/bscript
900d82ecd42932fc62c080341f8c918c9e1125b7,"DOC: Add note about <ufunc>.reduce evaluation order
",doc/release/2.0.0-notes.rst
98ccad69e870ac35c20f0130586c70448d315134,"Merge pull request #149 from 87/ref-fix

Bugfix in PyArray_SetBaseObject",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_maskna.py
1af2f37eae78986b370e2d44df6c5156945d69d8,"FIX: Make tril/triu return the same dtype as the original array.

This should fix:

    * http://projects.scipy.org/numpy/ticket/1848
    * http://projects.scipy.org/scipy/ticket/1449
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
e411631e136bcdf53ef421102d8cb989beaacf08,"BUG: PyArray_SetBaseObject didn't set proper base when collapsing views
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_maskna.py
f3e70d9c0ea5db74033be9f437bb8e275839c9dc,"STY: Some style cleanups.
",numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
180750b9a4a4dc46be32ed6d738329b2ab97abfa,"ENH: Add function for adding docstrings to ufuncs.
",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/ufunc_object.c,numpy/lib/function_base.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
d91521e5fd858726998146e6055f677cc3aeb011,"FIX: add ufsparse to the libraries search path.

Fixes a build failure on macports when it detected umfpack but was
unable to build the extension module. Equivalent to the
'/usr/include/suitesparse' path under Debian.
",numpy/distutils/system_info.py
f73ced293e2a37306264763faafef369db18b602,"BUG: update bento script for boolean_ops.c.src.
",numpy/core/bscript
857ef85a91adb9435b5790a083ed9b16e5194b01,"ENH: no need to hardcode gcc anymore.
",bscript
3763b5778b19ced9168c5d6234ef4daf961910ea,"MISC: add cavead on top bscript.
",bscript
322c67e5df62284b2cb5b2095e6f45e2733f009a,"MISC: warn about numscons scripts being deprecated.
",setupscons.py
a458b11b168ba122da94a45aa0e58f2156fe38c8,"BUG: fix non-mandatory win32-specific check.
",numpy/random/bscript
7129d909e8ea5f612250f1ad4435daa5cf0c2144,"ENH: add example to link against MKL on win32.
",bscript
85ea48b3fdf4074bf9fbacf5dd16b20c6448fec7,"BUG: only add gcc-specific flag if actually using it.
",bscript
f31b401eb6e14548b45830538983de6b8e245d9b,"BUG: forgot to add long double check.
",numpy/build_utils/common.py
3eda301e5d925beca6170686ae2b01f86d707ade,"BUG: temp hack to circumvent a waf bug on win32 ?
",numpy/core/bscript
512df8b5686c70df49f0d51966e76430fe7aa63f,"BUG: check for missing win32-specific format stuff.
",numpy/core/bscript
5e1cdb6f63dd1fafd3ecc1942d59f3491d61fb84,"BUG: complex.h is not mandatory.
",numpy/core/bscript
f92e0f45c77b53764340e36c52bbcecc2d524d2c,"BUG: temp hack to fix some function checks.
",numpy/core/bscript
94fab366240aecdacc66d4d4a77aef5f6e2921a9,"FEAT: add check_ldouble for bento build.
",numpy/build_utils/waf.py
1220e44e092ca835da9567e4f82eb977e4a42c5d,"FEAT: fix numpy.random build issues with MSVC.
",numpy/random/bscript
ec59e5af21046dfdcdc5639ca2f06fad260f2d41,"ENH: update bento build to recent changes in numpy.core.
",numpy/core/bento.info,numpy/core/bscript
4ed5624b0d2ee3de95087cd51aec0f98a7c6c2c6,"BUG: make sure autoconf macros are set to 1, not True.
",numpy/build_utils/waf.py
6b1783791d0fcb5d4b5177a699d73f988179862f,"ENH: write conf defines comments when test failed as well.
",numpy/build_utils/waf.py
9346bc6c69c297607efea9eb5a951e44dbe861f4,"STY: tweak configure comments to match autoconf more closely.

This makes comparison easier.
",numpy/build_utils/waf.py
d3f13afc06982e7b508b238fc3a948ca3f998d12,"ENH: remove custom fixes for mac osx now integrated in waf.
",bscript
dfafdcd89e0051eb006b7db30bcac84ab812c922,"REF: use new API for higher level builder reuse.
",bscript,numpy/core/bscript,numpy/fft/bscript,numpy/lib/bscript,numpy/linalg/bscript,numpy/random/bscript
0d8b63637b2503546ff374ccc8c1dc5ad69e29ca,"REF: use new hook signature.
",bscript,numpy/core/bscript,numpy/fft/bscript,numpy/lib/bscript,numpy/linalg/bscript,numpy/random/bscript
dab6ffc037959ef8c2b621ecfc69bf132fdffc44,"REF: use new recursive hook file support.
",bento.info,numpy/bento.info
e00b1585d27f4290b9875d9318e620dbce995450,"REF: define hook file locally.
",bento.info,numpy/core/bento.info,numpy/fft/bento.info,numpy/lib/bento.info,numpy/linalg/bento.info,numpy/random/bento.info
d247f01753c64548a08c08892e89808bc6b73d2b,"ENH: register waf-specific options.
",bscript
7847043c0003c18b617c8eb1c8cd5ffddcaabd21,"ENH: update to last bento.
",bscript,numpy/core/bscript,numpy/fft/bscript,numpy/lib/bscript,numpy/linalg/bscript,numpy/random/bscript
d73761de71e9143ac244d6e8b7a5f9f08e80769c,"ENH: remove unneeded waf recursive context path magic.
",numpy/core/bscript
a654ec7ac3a458fa0a6435a27f1f961fe1d9f06b,"ENH: workaround for waf python tool bug.
",bscript
313e00ecba9eceb79326a1ac917be469441ff0b2,"BUG: fix more separate-compilation issues.
",numpy/core/bscript
6e47f14aafb2d8b74859b9f5c85f785847e72043,"STY: fix ws in bento.info
",bento.info
ff50ddea0f0a6f1415e4d312b418c09c6f4462fb,"BUG: fix renaming of new iterator source file.
",numpy/core/bscript
26403b686f5f2cec29f8179f9af771c1cbe2198e,"BUG: build waf build utils in separate module to avoid 'spurious' imports.
",numpy/build_utils/__init__.py,numpy/build_utils/waf.py,numpy/core/bscript
c334fbbf35e4eb4eb1dfc0c08412e9a0d6e5a873,"ENH: add support for separate compilation of multiarray (still does not work though).
",numpy/core/bscript
28dc101efff78fb9101cbf557085bc5acb15252a,"BUG: fix unicode config checks.
",numpy/core/bscript
499f9b0bd93f5568b8ee86da18e7561839a54519,"BUG: use 1/0 instead of booleans in config.h
",numpy/build_utils/__init__.py
de71afe7411d6343eaeca034e05f5709a5a472e5,"HACK: temporary deal with bugs in waf python tool.
",bscript
07cf7f47f74986212a11ab0e13a187d3c2735a7b,"FEAT: add wide unicode detection.
",numpy/core/bscript
f6736078a554f14768420b0a43b9f1d596762bcd,"FEAT: add basics for separate build.
",numpy/core/bscript
a52f88fc04fd7f7548dce3f8489a42f628e54cbd,"STY: better name for top hooks.
",bscript
c615391e5304245bffeb969fb28ce32bc6e47c99,"BUG: remove unnecessary header inclusion which breaks builds.
",numpy/core/include/numpy/halffloat.h
1566df7351a7261101703d152cfbe51fa4bd8e2b,"ENH: remove temporary hacks for recurse path settings.
",numpy/core/bscript,numpy/fft/bscript,numpy/lib/bscript,numpy/linalg/bscript,numpy/random/bscript
37396fc97b78bbf30e79c6651c40f5aed5b26808,"BUG: build _dotblas as callback.
",numpy/core/bscript
75fedf0311fb4d5e62f8e05bce143fb3f95a6975,"BUG: extra source files section.
",bento.info
fd59c8328035c22533fb6d27c632aa651b76e7ae,"BUG: only handle python files in in-place customization.
",bscript
69af3d08e8a8cbaf35277c4b718237bf3f1a89c1,"ENH: add fft/random support.
",bento.info,numpy/fft/bento.info,numpy/fft/bscript,numpy/linalg/bscript,numpy/random/bento.info,numpy/random/bscript
b6aeed33b7d24449d51fdece5a142b939d2743ed,"FEAT: add numpy.linalg.
",bento.info,numpy/linalg/bento.info,numpy/linalg/bscript
aa7e9bda76003fa4b9843de02b949d211a0c858c,"FEAT: numpy.core and numpy.lib both build
",bento.info,bscript,numpy/core/bento.info,numpy/core/bscript,numpy/lib/bento.info,numpy/lib/bscript
992b4a79e00f48ea85e7fa5d3413bda999b20918,"BENTO: add complex checks.
",numpy/build_utils/__init__.py,numpy/core/bscript
12c538f45c0cf98d411035bf4c8b65950c319986,"BENTO: check for inline support.
",numpy/build_utils/__init__.py,numpy/core/bscript
f5f821a58140a7189f23b40c5f00239f58c990c7,"BENTO: add math runtime checks.
",numpy/build_utils/__init__.py,numpy/core/bscript
54788a37d9eda1ae4d71cd81080574bb47caea55,"BENTO: add signal/smp stuff in configure.
",numpy/core/bscript
6fd71aeb7f5d4a67984044740827a223a3bcff64,"BENTO: add basic type checks.
",numpy/build_utils/__init__.py,numpy/core/bscript
096aa37ee3e718052aaf007db60de7da02438c24,"BENTO: workaround for waf bug on darwin.
",bscript
f110ad252fb9b3f4fcf569a943a1531ddd03ee56,"BENTO: check for C99 formats + add check_declaration.
",numpy/build_utils/__init__.py,numpy/core/bscript
026876020592b9720f029b109cc0d4837710689a,"BENTO: start support for numpyconfig.
",bscript,numpy/core/bscript
0461be7de3314c3e410e2280214e9854571a44ae,"BENTO: start numpy.core configuration + waf_utils helpers.
",numpy/{waf_utils
0c7af4b378fa065b356335ef214255450a4f7a2a,"BENTO: start numpy.core configuration

We also add configuration helpers in numpy.build_utils.
",bento.info,bscript,numpy/core/bento.info,numpy/core/bscript,numpy/waf_utils/__init__.py
d2f648a6ea7717aec98f1a7db11788808b3fbca1,"BENTO: start bento packaging using waf.
",bento.info,bscript
9ecd91b7bf8c77d696ec9856ba10896d8f60309a,"Merge branch 'pull-141'

* pull-141: (167 commits)
  ENH: missingdata: Make PyArray_Converter and PyArray_OutputConverter safer for legacy code
  DOC: missingdata: Add a mention of the design NEP, and masks vs bitpatterns
  DOC: missingdata: Updates from pull request feedback
  DOC: missingdata: Updates based on pull request feedback
  ENH: nditer: Change the Python nditer exposure to automatically add NPY_ITER_USE_MASKNA
  ENH: missingdata: Make comparisons with NA return NA(dtype='bool')
  BLD: core: onefile build fix and Python3 compatibility change
  DOC: Mention the update to np.all and np.any in the release notes
  TST: dtype: Adjust void dtype test to pass without raising a zero-size exception
  STY: Remove trailing whitespace
  TST: missingdata: Write some tests for the np.any and np.all NA behavior
  ENH: missingdata: Make numpy.all follow the NA && False == False rule
  ENH: missingdata: Make numpy.all follow the NA || True == True rule
  DOC: missingdata: Also show what assigning a non-NA value does in each case
  DOC: missingdata: Add introductory documentation for NA-masked arrays
  ENH: core: Rename PyArrayObject_fieldaccess to PyArrayObject_fields
  DOC: missingdata: Some tweaks to the NA mask documentation
  DOC: missingdata: Add example of a C-API function supporting NA masks
  DOC: missingdata: Documenting C API for NA-masked arrays
  ENH: missingdata: Finish adding C-API access to the NpyNA object
  ...
",doc/neps/missing-data.rst,doc/release/2.0.0-notes.rst,doc/source/reference/arrays.maskna.rst,doc/source/reference/arrays.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.maskna.rst,doc/source/reference/c-api.rst,doc/source/reference/routines.maskna.rst,doc/source/reference/routines.rst,doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/_methods.py,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/include/numpy/halffloat.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/shape_base.py,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_api.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_indexing.py,numpy/core/tests/test_maskna.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_na.py,numpy/core/tests/test_nditer.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_shape_base.py,numpy/lib/twodim_base.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/matrixlib/defmatrix.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/testing/utils.py
10fac981763e87f949bed15c66127fc380fa9b27,"ENH: missingdata: Make PyArray_Converter and PyArray_OutputConverter safer for legacy code

These functions now reject inputs with NA, and there are alternative
functions PyArray_AllowNAConverter and PyArray_OutputAllowNAConverter
that functions should use when they intend to support NA.
",doc/source/reference/arrays.maskna.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.maskna.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c
f818910471ac900bd2a440ee35ded10756af5dad,"DOC: missingdata: Add a mention of the design NEP, and masks vs bitpatterns
",doc/source/reference/arrays.maskna.rst
e4a1c55ea488cad7af3556c336be68f7d7ff02ff,"DOC: missingdata: Updates from pull request feedback

From Chris Jordan-Squire
",doc/source/reference/arrays.maskna.rst,doc/source/reference/c-api.maskna.rst
0bfefe3910b8401e8d458bca8fb05e9725b9b711,"DOC: missingdata: Updates based on pull request feedback

From github users xscript and 87.
",doc/source/reference/arrays.maskna.rst
858ee47017be6f18b3e3c557f3fc9f7cc02bfe93,"ENH: nditer: Change the Python nditer exposure to automatically add NPY_ITER_USE_MASKNA
",numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_nditer.py
99774bee1e138bbe2c52a4cc6f54975279f436e3,"ENH: missingdata: Make comparisons with NA return NA(dtype='bool')
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/na_object.c,numpy/core/tests/test_na.py
5c7b9bb8fec7d2abbb13ad56be23afc49296df2f,"BLD: core: onefile build fix and Python3 compatibility change
",numpy/core/_methods.py,numpy/core/src/multiarray/multiarraymodule_onefile.c
159bfbcf97ed89f08d4fcfc8f64c5ad51657df2a,"DOC: Mention the update to np.all and np.any in the release notes
",doc/release/2.0.0-notes.rst
73d41dd2497ddf291b55d7af28f748f6ca4b9065,"TST: dtype: Adjust void dtype test to pass without raising a zero-size exception
",numpy/core/tests/test_multiarray.py
ea622f36ffa9041faabeaa9143aa565856756024,"STY: Remove trailing whitespace
"
b94f43da3e418b9a200bd9cf4f2193585759c32b,"TST: missingdata: Write some tests for the np.any and np.all NA behavior
",numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/tests/test_maskna.py
cc326304a60c35d38dc29adf2544a29d6dcedfee,"ENH: missingdata: Make numpy.all follow the NA && False == False rule
",doc/neps/missing-data.rst,numpy/core/_methods.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_ufunc.py,numpy/lib/tests/test_recfunctions.py
a43d255dbc243ea7910e1b92ba83704e1a880c70,"ENH: missingdata: Make numpy.all follow the NA || True == True rule
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/boolean_ops.c.src,numpy/core/src/multiarray/boolean_ops.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/matrixlib/defmatrix.py
6706908c90668fffc729456c35bc8d3a3c8243c6,"DOC: missingdata: Also show what assigning a non-NA value does in each case

Thanks to chebee7i for the feedback
",doc/source/reference/arrays.maskna.rst
b64ace52c232fca7c1532666d202b756389a6b33,"DOC: missingdata: Add introductory documentation for NA-masked arrays
",doc/release/2.0.0-notes.rst,doc/source/reference/arrays.maskna.rst,doc/source/reference/arrays.rst,doc/source/reference/routines.maskna.rst,doc/source/reference/routines.rst,numpy/add_newdocs.py
094992665c66ec66bb33042bfa1c1dc496e11b5c,"ENH: core: Rename PyArrayObject_fieldaccess to PyArrayObject_fields

Because it's shorter and seems like a decent name.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c
3e32ef204af784b57627313754491d2d3ca9370d,"DOC: missingdata: Some tweaks to the NA mask documentation
",doc/source/reference/c-api.maskna.rst
770c94ef5ab2478bc9f5451f931613d7424459e1,"DOC: missingdata: Add example of a C-API function supporting NA masks
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.maskna.rst,doc/source/reference/c-api.rst,numpy/core/src/multiarray/conversion_utils.c
847404a650757ba8ab6dae3af937890230b00f84,"DOC: missingdata: Documenting C API for NA-masked arrays
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.maskna.rst
5459e09ca6874ab0cdd7b6d4b69a068bcd0b12ed,"ENH: missingdata: Finish adding C-API access to the NpyNA object
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h
68de5aa2d6525544b5cfc31cc81a28e48fcb5006,"ENH: missingdata: Expose Npy_NA as a global singleton, same as Py_None
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_object.c,numpy/core/src/multiarray/na_object.h
c15ac7edbbd5cb1e8171b12ca8cf1566210032ca,"ENH: missingdata: Rename na_singleton.[ch] to na_object.[ch]
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/{na_singleton.c,numpy/core/src/multiarray/{na_singleton.h,numpy/core/src/multiarray/scalarapi.c
e2d06e95a18bd566c4ae59af2eb5f620e402dd54,"BUG: missingdata: Add support for NA masks to the order='K' case of np.ravel
",numpy/core/src/multiarray/shape.c,numpy/core/tests/test_maskna.py
6c0ad59d384606ccf2a0afa20fb9d8a15ddd7255,"ENH: missingdata: Add maskna= and ownmaskna= parameters to np.asarray and friends

Also fix some array() NA mask construction issues and make sure the
base object doesn't collapse past the owner of the NA mask being
viewed in addition to the data.
",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_maskna.py
f9c1d415535a9ffde2676b7cec82d37548ee0afd,"ENH: missingdata: Add maskna= flag to np.identity constructor
",numpy/core/numeric.py,numpy/core/tests/test_maskna.py
e0b8c5cc72d9b36f13650ad53bae0a500aebb652,"ENH: missingdata: Add maskna= flag to np.eye constructor
",doc/release/2.0.0-notes.rst,numpy/core/_methods.py,numpy/core/tests/test_maskna.py,numpy/lib/twodim_base.py
32b32c2ac6b25f6ca867d72f23f2bb5b66d1cbee,"BUG: umath: Make the ufunc follow the actual priority for __r<op>__

Previously it returned not implemented just based on the existence
of the array priority, it didn't actually check the priority value.
",numpy/core/src/umath/ufunc_object.c
4b157933641dc3b0241b9f1d68851a6661fa6604,"ENH: core: Add static caching of the callables for C to core._method calls
",numpy/core/_methods.py,numpy/core/src/multiarray/methods.c
64e30a7261e5a575a12beed1c3971f80779760f1,"ENH: missingdata: Add skipna=, keepdims= parameters to methods

Also fix some memory leaks, improve some type resolution code. The
methods still have some issues with array subtypes that needs working
through.
",doc/release/2.0.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_regression.py
6d9a2a1e7a13f076cea5e38194d56e045706c1ba,"ENH: missingdata: Add support for identity-less skipna reductions with ndim > 1
",numpy/core/src/multiarray/reduction.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_maskna.py
c9764c13eb0e1eef23345025c75577600b472ab3,"ENH: missingdata: Future-proof AssignNA and AssignMaskNA for later multi-NA support
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/umath/ufunc_object.c
6282b55d3262c134711e5ad4de62047c56866e8c,"ENH: missingdata: Move ReduceMaskNAArray out of the public API

Keep this function private, to keep flexibility open for longer.
Also added what will likely be the necessary parameters for future
where mask and multi-NA expansion.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/reduction.c
9ca27aecb17baee83a58d61507250d9aaa5ca34c,"ENH: missingdata: Add wheremask to PyArray_ContainsNA

Use this to make masked assignment just check the elements its copying
for NA, so that the source array can have NAs, just not where the mask
says.
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
c8c262a1be42c3989994bdc557c7b25e22d80d83,"ENH: ufunc: Remove CreateReduceResult and InitializeReduceResult from the API

Keep them internal longer, to let the details bake some more.
PyArray_ReduceWrapper is in the API so both multiarray and umath can
use it.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h
4b79354bd51f7702794fd8c0793adc82440f4c6f,"BUG: dtype: Mitigate crash bug for some kinds of dtype inputs

This doesn't fix it in general, but does for the specific case.
The particular code in question is calling from C into Python
to do parsing. I think this is a bad idea, and should be converted
to straightforward C code instead.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_dtype.py
d7076dcb8920e24d01507677efe4f206bd0fa1eb,"ENH: missingdata: Make ndarray.view validate the maskna= parameter better
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_maskna.py
0e1a4e9525b2c1e4abae97a6927cf59b5b2d534b,"ENH: missingdata: Add maskna= parameter to np.copy and ndarray.copy
",numpy/add_newdocs.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_api.py,numpy/core/tests/test_maskna.py,numpy/lib/function_base.py
976476081b78279154950d2392aff8ee9290b60f,"DOC: Add info to the release notes about the full boolean indexing change
",doc/release/2.0.0-notes.rst
447d55d17136b8516a2ce49edae9ec82f0b00046,"ENH: ufunc: Add a mask dtype parameter to the masked ufunc loop selector

This is to allow for future expansion to multi-NA and struct-NA.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h
da2c9e4fa05b2df1062af519c7880286ab8d20c9,"ENH: umath: Switch PyUFunc_Reduce to call PyArray_ReduceWrapper to simplify code
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/src/umath/umathmodule.c.src
9a9f08e089ff49fccca1feac9620c2837f8c09bd,"ENH: umath: Add checking for reorderable ufuncs, add PyArray_ReduceWrapper to API

np.divide, for instance, isn't commutative, so the computation should
not change the order of computation. The reduce function disables
multiple-axis reductions on ufuncs which are not reorderable.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
f3d60f9696856b47f4f5818b751eba2f7dcc402a,"ENH: ufunc: Separate type resolution from loop selection

This change sets the stage for being able to produce much higher
performance loops by specializing based on any fixed strides. To do
this, type resolution must happen first to determine the dtypes,
then the iterator needs to be created, then finally the loop needs
to be selected for the given dtypes and the strides that will be
fixed throughout the iteration.

The way type resolution and loop selection where tied together before
precluded this possibility, but with the backwards-compatible design
change in this commit, such specializations will be possible in the future.
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/src/umath/umathmodule.c.src
4c88ab3e0020861488d77b6930d32474a7cce709,"BUG: missingdata: Fix long double printing of NAs
",numpy/core/arrayprint.py
9ecf721659f84dfb760af9742eae7ba7031cfd8b,"BUG: missingdata: np.isna function wasn't accepting object arrays
",numpy/core/src/multiarray/na_mask.c
48ce84dff5e10eab4db43e6baae9265deabfdb49,"ENH: missingdata: Improve error message when assigning NA to non-NA-masked arrays
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/na_singleton.h
ade350ec3e5d4bb5f13a57791759204ecb66b987,"BUG: repr: Make NA line up in the float array repr like inf and nan
",numpy/core/arrayprint.py,numpy/core/tests/test_maskna.py
32a8d7aa7bad890ccfdc0d2a5063ce674b7a9e43,"ENH: missingdata: Change NA repr to use strings like the dtype repr does
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/tests/test_na.py
3710f2bc8fa0efe0189f7477544ee0a2996bc3e5,"DOC: nditer: Document NpyIter_IsFirstVisit function
",doc/source/reference/c-api.iterator.rst
a686aef330730fceb549097d64890a9f038dbbbf,"ENH: missingdata: Add maskna= parameter to np.linspace and np.logspace
",numpy/core/function_base.py,numpy/core/tests/test_maskna.py
3fec8d3db532ee3adba31f1fe076caa343e0856a,"ENH: missingdata: Add the maskna= parameter to np.ones and np.ones_like
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/numeric.py,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/tests/test_maskna.py,numpy/core/tests/test_numeric.py
840323e81c41f02926a0d29b62b202a74b1fc2fa,"STY: core: Move some misc converters into conversion_utils.c to clean things up
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_pywrap.c
c3fafa497c016303ef5f861d70ff3947111d2da8,"BUG: ufunc: Missed a small update for the unitless reduction case
",numpy/core/src/multiarray/reduction.h,numpy/core/src/umath/ufunc_object.c
1848be621596d874b9e09afa1f7dd8175006980d,"NEP: missingdata: Some fixes and updates to the NEP
",doc/neps/missing-data.rst
eb21e248ec9953dafb5af3226f996b8326d8caac,"DOC: nditer: Improve the comment doc about the new NpyIter_IsFirstVisit function
",numpy/core/src/multiarray/nditer_api.c
3941e5aca8ab2cbd94f1e4e171763a4d5ef35825,"BUG: ufunc: Fix bug in multi-dimensional reduction without a unit
",doc/release/2.0.0-notes.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
4838339d30d5d1d4857781a040548c2080713e5b,"BUG: fix crash in test_datetime_as_string
",numpy/core/src/multiarray/datetime_strings.c
630c99a5f0901acbdf336bd0260fb7b83187aea0,"BLD: keep VC happy by moving inlined variable definitions to top
",numpy/core/src/multiarray/mapping.c,numpy/core/src/umath/ufunc_object.c
6d7242049fd7084cd44d5b7947f6f0d55bcd88c5,"BLD: keep VC compiler happy by moving the threading macros after variable definition
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c
e5b207316cb71a5633068df27cc5492386056bbf,"DOC: Tweak to the release notes
",doc/release/2.0.0-notes.rst
2b72d06fdc8e29cc2906890038ede8d74f4327a1,"BLD: missingdata: Fixes for Python 3
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/tests/test_na.py
066f095cb8755a434dbbeb7ce265384b2d06b30b,"TST: datetime: Change pytz warning message about skipping pytz tests
",numpy/core/tests/test_datetime.py
df907e63e4886904a7e47491dfd6c3efc9a40c08,"BLD: Failure in single file build mode because of a static function in two separate files
",numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c
01b200b10149312f51234448e44b230b1b548046,"BUG: nditer: The nditer was reusing the reduce loop inappropriately (#1938)
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_nditer.py
f45fd67fe8eefc8fd2e4b914ab4e376ab5226887,"DOC: Small tweak to release notes
",doc/release/2.0.0-notes.rst
73be11db794d115a7d9bd2e822c0d8008bc14a28,"BUG: Some bugs in squeeze and concatenate found by testing SciPy
",numpy/core/fromnumeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_shape_base.py
c8732958c8e07f2306029dfde2178faf9c01d049,"TST: missingdata: Finish up NA mask tests for np.std and np.var
",doc/release/2.0.0-notes.rst,numpy/core/tests/test_maskna.py
e15712cf5df41806980f040606744040a433b331,"BUG: nditer: NA masks in arrays with leading 1 dimensions had an issue
",numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_maskna.py
ded81ae7d529ac0fba641b7e5e3ecf52e120700f,"ENH: missingdata: Implement tests for np.std, add skipna= and keepdims= parameters to more functions
",numpy/core/fromnumeric.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_maskna.py
a112fc4a6b28fbb85e1b0c6d423095d13cf7b226,"ENH: missingdata: Implement skipna= support for np.std and np.var
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h
0fa4f22fec4b19e2a8c1d93e5a1f955167c9addd,"ENH: missingdata: Support 'skipna=' parameter in np.mean

Also add 'keepdims=' parameter to reductions, to support writing of
the np.std function.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/umath/ufunc_object.c
bfda229ec93d37b1ee2cdd8b9443ec4e34536bbf,"ENH: missingdata: Create count_reduce_items function

This function either cheaply returns the product of the sizes of
all the reduction axes, or counts the number of items which will
be used in a reduction operation when skipna is True. Its purpose
is to make it easy to do functions like np.mean and np.std.
",doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/tests/test_maskna.py
d9b3f90de3213ece9a78b77088fdec17910e81d9,"ENH: missingdata: Move the Reduce boilerplate into a function PyArray_ReduceWrapper
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h
67ece6bdd2b35d011893e78154dbff6ab51c7d35,"ENH: missingdata: Finish count_nonzero as a full-fledged reduction operation
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_numeric.py,numpy/testing/utils.py
6bfd819a0897caf6e6db244930c40ed0d17b9e62,"ENH: missingdata: Towards making count_nonzero a full-featured reduction operation
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/umath/ufunc_object.c
a1faa1b6883c47333508a0476c1304b0a8a3f64e,"ENH: missingdata: Move some of the refactored reduction code into the API

Doing this so that it can be used both in multiarray and umath, to make
writing new reduction operations generally easier.

Also made PyArray_Squeeze work with NA-masked arrays.
",doc/release/2.0.0-notes.rst,numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/setup.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/reduction.c,numpy/core/src/multiarray/reduction.h,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
f597374edc298810083799e8539c99fc0a93b319,"ENH: missingdata: Change default to create NA-mask when NAs are in lists

Also adjust the repr to drop maskna=True when this rule will enable it
automatically.
",doc/neps/missing-data.rst,numpy/core/numeric.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_maskna.py
965e4cff5c4c50e8ff051a3363adc6cf6aa640cd,"ENH: missingdata: trying some more functions to see how they treat NAs
",doc/neps/missing-data.rst,doc/release/2.0.0-notes.rst,numpy/lib/function_base.py
b1cb211d159c617ee4ebd16266d6f1042417ef75,"ENH: missingdata: Add nastr= parameter to np.set_printoptions()
",doc/neps/missing-data.rst,numpy/core/arrayprint.py
ba4d1161fe4943cb720f35c0abfd0581628255d6,"BUG: missingdata: Fix mask usage in PyArray_TakeFrom, add tests for it
",doc/neps/missing-data.rst,doc/release/2.0.0-notes.rst,numpy/core/arrayprint.py,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_maskna.py
a3a0ee8c72fdd55ffacb96bbb1fa9c3569cfb3e9,"BUG: missingdata: The ndmin parameter to np.array wasn't respecting NA masks
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_maskna.py
9194b3af704df71aa9b1ff2f53f169848d0f9dc7,"ENH: missingdata: Rewrite PyArray_Concatenate to work with NA masks

It should also have less memory usage for heterogeneous inputs,
because it no longer makes extra copies in that case.
",doc/release/2.0.0-notes.rst,doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/shape_base.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_shape_base.py
99a21efff4b1f2292dc370c7c9c7c58f10385f2a,"ENH: missingdata: Add NA support to np.diagonal, change np.diagonal to always return a view
",doc/release/2.0.0-notes.rst,numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_maskna.py,numpy/lib/twodim_base.py
91e94e925764177637bc17465404a75b16c35701,"ENH: ufunc: Move the default SAME_KIND casting rule out of the ufunc code

Also, start to use it for some other out= parameters in non-ufuncs.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/umath/ufunc_object.c
c0a0e7890fa745fdd8a926eba9f02758fe6b808d,"BUG: missingdata: Fix src_itemsize in USE_MASKNA copy to buffer

This was causing some memory corruption that was difficult to track down.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
f1d685a5c77dd2c2ce008b07007babe8852cbc87,"ENH: missingdata: Move the new MultiIndex Get/Set Item functions into item_selection.c
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/methods.c
c6261dbb99ad4125284a89e879786b114dddb39b,"ENH: missingdata: Make arr.item() and arr.itemset() work with NA masks
",numpy/core/arrayprint.py,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_maskna.py
c7c080a72d05b3ec0cb93ab4f724f8b65ebf63c3,"DOC: missingdata: Add some NA mask info to the documentation
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,numpy/core/include/numpy/ndarraytypes.h
7fc4021464d529ba8f7b11ac46d1e1535075371b,"BUG: missingdata: Fleshing things out, tracking down a memory corruption
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
1c86dcf815c2d35032d47b0e7464833a60b6e054,"ENH: umath: Fix reduce with NAs for ufuncs that have no unit
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_api.py
1c9724beb70385583b4ef8386e0c171130f62507,"ENH: core: Add tests for copyto function with new array_assign_array features
",numpy/core/src/multiarray/array_assign_array.c,numpy/core/tests/test_api.py
ef875ee25089ad7e2cfaaf93608ddb47bfb7fba0,"ENH: core: Make PyArray_CopyInto and PyArray_MoveInto be calls to array_assign_array
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/ctors.c
51c9d7ca4221570a907501e68f6449051d930742,"ENH: core: Make the array assignment routine handle overlapping arrays
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/multiarraymodule.c
42b9c84cfcdd27057b902ea094247866e2d741da,"ENH: missingdata: Implement routine for array to array assignment
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign_array.c,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/private/lowlevel_strided_loops.h
d5ef96136874f9e3f475833ca5f966e9599b2223,"ENH: core: Make 1-byte low level loops use memset
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
c1ebc154bf4f9d41f28543483a902adfe347f9a3,"ENH: core: Rewrite PyArray_FillWithScalar to use array_assign_scalar
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h
20cdef13b86606f2ad1090cc8cf41f6921072d21,"ENH: missingdata: Change FillWithZero/One to AssignZero/One, add parameters

These functions now use the array_assign_scalar function to assign zero
or one, and also have 'wheremask' and 'preservena' parameters. This change
also exposed some bugs in array_assign_scalar, which were fixed.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/na_mask.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_einsum.py
9acbfb38b0f564942f55ac1eafc64b43443b4c52,"ENH: missingdata: Fix remaining issues in scalar -> array assignment function
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_api.py,numpy/core/tests/test_maskna.py,numpy/testing/utils.py
0d9f27dcc6f69e2f43224f7da292710f68eb9411,"ENH: missingdata: Finish implementation of scalar to array assignment

This still does not support a 'wheremask' which contains NA values,
but that can always be added later.
",numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/private/lowlevel_strided_loops.h
c57efbc5ab9cd4ea6bc3b8d54f16b295a5d448bc,"ENH: missingdata: Implement wheremasked scalar assignment with overwritena=True
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/array_assign_scalar.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/private/lowlevel_strided_loops.h
b769df7101b5e764ed5965067f35906a6d461380,"ENH: missingdata: Use a static buffer in scalar assignment for small dtypes
",numpy/core/src/multiarray/array_assign.c
b9a45089db195e9efd6724f3fb9ecf0f3d6f17a5,"ENH: missingata: Move the alignment check out of the assignment functions
",numpy/core/src/multiarray/array_assign.c
1f91c531797fa9c105b5f5bccd65e461554d99a1,"ENH: missingdata: Implement wheremask scalar assignment
",numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h
92d7bcad73f98c416afaf41809f6111cd095f9fe,"ENH: missingdata: Writing some low level general array assignment routines

Some bugs in the NA reductions got tracked back to a need for an
assignment operation which doesn't overwrite NA values. Making a decent
array assignment API seems like a good aproach to deal with that.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/array_assign.c,numpy/core/src/multiarray/array_assign.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/na_mask.c,numpy/core/src/umath/ufunc_object.c
5e8b9acc27b9bac80b98305d71879ecb30eeecb3,"WIP: fixing reduce NA bug
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/na_mask.c,numpy/core/tests/test_maskna.py
d54c93d29bc9ac2d32b18047e085b88afa9f7095,"ENH: missingdata: Adding NA support to various methods
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_maskna.py
79f0dd9179fb7639547aac6d975a21648fe52c45,"BUG: missingdata: Negative strides bug in USE_MASKNA nditer mode
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_maskna.py
61d1e2df1077f83355f106d80ea26f261a6d8f68,"ENH: missingdata: Make NA ufuncs work with output parameters properly
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
a7ef22aac35fbae72378c2fe54a6b9003e2b954d,"BUG: missingdata: Was adding MASKNA even when not desired currently
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_maskna.py
9061b0e9899b712c7de88d908adc3ae32155b101,"ENH: missingdata: Add skipna parameters to sum, prod, etc
",numpy/core/fromnumeric.py,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_maskna.py
1992ee21cf1b87e9e5a48beff66ebc8fc8c381f0,"ENH: missingdata: Another NA array formatting tweak
",numpy/core/arrayprint.py
2bf8b668326bead664a91f8b33d51ff0629fef5a,"ENH: missingdata: Try to get basic NA printing to be ok
",numpy/core/arrayprint.py
5c7e14abbe3e1b387a8ce66c4260cffe1851f81b,"ENH: missingdata: Make the ndarray.take function work with NA masks
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_maskna.py
2b05fadefd18f2206b11a548fc44d783898ec366,"ENH: missingdata: Fix construction of maskna array with all NAs
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_maskna.py
ecadc64f7ce5a8a683a84893d8aeb326f7a80fb8,"ENH: missingdata: Make reduction with skipna=True work better in some cases

In particular, this allows it for ufuncs without a unit, where the
array has just one dimension.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
8fff78d2bfe6faa0919b1c55b3c744e3be8b1e8e,"ENH: missingdata: Some tests/fixes for reduce method with skipna=True
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
6eccea63e3cddacd866da3abf17557d95287d1d5,"ENH: missingdata: Get ufunc reduce skipna=False working better
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
fb2f8d2111f57b2affa49ec9d22cadf45f12de24,"ENH: missingdata: Fix an iterator MASKNA bug, fill in more missing stuff
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_maskna.py
de1feee7ff45f7575e1465ee0b637aa31bba8b9a,"ENH: missingdata: Fix the remaining scipy errors

Except for 4 iterative convergence errors I always see in scipy anyway.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
0e5fb25980859a44fed8a1b5ddc85075d28c7883,"ENH: missingdata: Change things to help scipy pass its tests

Improving the NumPy tests a bit to catch these errors better...
",numpy/core/fromnumeric.py,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_indexing.py,numpy/core/tests/test_ufunc.py,numpy/matrixlib/tests/test_defmatrix.py
b471b5aace551d294f2ffe4f7be569fd6f148f50,"ENH: missingdata: Change boolean indexing to broadcast to the left manually

I've also restricted it just to allow one-dimensional masks or masks
which match the number of dimensions of the array with the data. This
will require further discussion on the list at some point.
",numpy/core/arrayprint.py,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c
ae79b71a89d4c25c028202410ef4b538081c0dce,"ENH: missingdata: Fix up more NA mask indexing, make things work in 2D
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_maskna.py
0163eb8f9de6584db731db12ec68b549fc5b1749,"ENH: Work in progress on arr.reshape, other misc changes
",numpy/core/arrayprint.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py
ea5dcd7947615678bda053ed65ab921fec6f1421,"DOC: ufunc: Document the 'axis=' improvments to reduction functions
",numpy/add_newdocs.py,numpy/core/fromnumeric.py
90c6172ee5740009fe51da84df279d182c9a3b55,"ENH: ufunc: Add tests for zero-sized array reductions
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
00dff152bb10c810176c7e47ad41e563df602208,"ENH: umath: Make sum, prod, any, or functions use the .reduce method directly

This required some extensive changes, like:
 * Making logical_or, logical_and, and logical_not on object arrays behave
   like their Python equivalents instead of calling methods on the objects
 * Changing the units for a fair number of the binary operations to
   None, so they don't get initialized to their unit values at the start

A consequence of this is that multi-dimensional reductions like sum, prod,
any, or all no longer need to make copies, so are faster in some cases.
",numpy/core/code_generators/generate_umath.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py,numpy/lib/tests/test_function_base.py,numpy/ma/tests/test_core.py
0375181e807f9def0e1bd0279214f5a00ec55485,"TST: ufunc: Tweak ma test to have a good output parameter, disable crashing NA test temporarily
",numpy/core/tests/test_maskna.py,numpy/ma/tests/test_core.py
aed9925a9d5fe9a407d0ca2c65cb577116c4d0f1,"ENH: ufunc: Rewrite PyUFunc_Reduce to be more general and easier to adapt to NA masks

This generalizes the 'axis' parameter to accept None or a list of
axes on which to do the reduction.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/halffloat.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/umath/ufunc_object.c
2f0bb5d62ffb1583f5d2928d08a542e9dd1fb7ad,"API: nditer: Rename NpyIter_GetMaskNAIndices to NpyIter_GetMaskNAIndexArray
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_pywrap.c
0c269ed28f73d373b5b0a9ba1e0aa6562ef360ed,"ENH: ufunc: Split Reduce and Accumulate apart so that adding NA support is easier
",numpy/core/src/multiarray/na_mask.c,numpy/core/src/umath/ufunc_object.c
9aa599c90f49cd3b435b0ce9a637fee5fa94321a,"ENH: missingdata: Write function for reducing the NA mask array
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/private/lowlevel_strided_loops.h
3441a3e7b0314488a697a839357e453f21de0577,"ENH: missingdata: Improve some raw iteration methods
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c
e73dd6a826ad1b0ccb0e1cbe4aacfeee644f390f,"ENH: missingdata: Progress towards supporting ufunc reduce with NA masks
",numpy/add_newdocs.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_nditer.py
61d45eee7d14336f14bae328eeb3536c6f0f2941,"ENH: missingdata: Got masked element-wise ufuncs working in preliminary fashion
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_nditer.py
682e21e35bd07cdd611d7b40069a4ba334e6109f,"ENH: nditer: Allow a virtual mask of ones for non-masked USE_MASKNA operands
",numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_nditer.py
5908170615059e27beb919521256f1d1f0c9b13f,"ENH: missingdata: Make the nditer USE_MASKNA mode work with buffering
",numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
1a58505bd5bd63961ee0b177d234a6c03aabb0c0,"TST: missingdata: Add test for buffered MASKNA iteration
",numpy/core/tests/test_nditer.py
f5140c121c9b3dd446f3a4dfd2b0f87c7f9055fc,"ENH: missingdata: Some tests for MASKNA iteration in Python
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_nditer.py
c626f19a54624b3b66a1a7d77ef1ec90c1ff27cf,"ENH: missingdata: Fill in buffered NAMASK nditer, add maskna= to zeros, empty, and empty_like
",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_maskna.py,numpy/core/tests/test_nditer.py
aef8779c2f05327aa3c247222d0ef47532fadc39,"TST: missingdata: Move maskna array tests to their own file
",numpy/core/tests/test_maskna.py,numpy/core/tests/test_na.py
987611d6a7d2cbb3c200ccb914fb57900d5193ab,"TST: missingdata: Cover some more unmasking assignment cases
",numpy/core/tests/test_na.py
9bc5528f007445f5d57e2518e39209f6f6c9a5fe,"BUG: missingdata: Add deallocation of the NA mask
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/na_mask.c
6e99d50c75041a7432da95163d20dc879bb03e80,"ENH: missingdata: Fill in view function, add many tests for NA view functions
",numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_na.py
d0d73c2544400acdd7296ce6ba0d0a5f8e534ed7,"ENH: missingdata: Write NA mask support into PyArray_CopyInto
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/ctors.c
4839dfa7bccdc89d6b8950ad702c23e48e19a3ba,"ENH: core: Revert optimistic use of PyNumber_Index for indexing

SciPy and other code has come to depend on the truncation behavior
of floating point indexing. This would be nice to fix for 2.0, however.
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c
f82acc7c403d0353eff09c2a569c689a4244c001,"TST: core: Regression test of boolean indexing was invalid, fixed it

The test made sure you couldn't assign a scalar to an empty array,
something which is perfectly fine generally in NumPy. I've changed
the test to make sure you can't assign off-size arrays with
boolean indexing.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_regression.py
a6e869b70b09df9381d341ed0d2b18f88d8fe3d6,"BUG: ma: Fix a bug in numpy.ma hardmasks, exposed by the boolean indexing rewrite
",numpy/core/src/multiarray/mapping.c,numpy/ma/core.py
626949428752cc7d52e7f3fb3e8efbe97c3d9a21,"ENH: missingdata: Implemented boolean assignment, working with NA masks
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_na.py,numpy/core/tests/test_numeric.py,numpy/lib/arraysetops.py,numpy/ma/extras.py
69e0ed8c58a284ddfd305f2b1ff17cb8d04dd432,"ENH: missingdata: Rewrote boolean indexing to support NA masks

Note I haven't hooked it up to the arr[] operator yet...
",doc/neps/missing-data.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/item_selection.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/tests/test_na.py
30bb48840646c6905d127e6d4c90e78ce197db5d,"ENH: missingdata: Get the NA mask working with slice indexing
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_na.py
f9ad427716c98f4cb3234841ecdf55ca2036d030,"ENH: missingdata: In progress making slicing work with NA masks
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/sequence.c,numpy/core/tests/test_na.py
95dc61b190224bdb5c4e155c14a796a9f4449a41,"ENH: missingdata: Finish the initial implementation of numpy.isna
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numeric.py,numpy/core/src/multiarray/na_mask.c
dc365a0ddad49c00d44926cffd1f6f19a97d1c42,"ENH: missingdata: In progress exposing USE_MASKNA to Python numpy.nditer
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c
c788fe30c164bdd511941f2c7e0101317079b8f1,"ENH: missingdata: More progress towards NPY_ITER_USE_MASKNA flag support
",numpy/core/numeric.py,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/nditer_constr.c
91861a9638391361234a442497536204f6fe59e4,"ENH: missingdata: Part way through supporting the NPY_ITER_USE_MASKNA flag
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/tests/test_na.py
25a64c8023d00fe69daa72b09469b2c60ede03ac,"BLD: missingdata: Signature of arraydescr_short_construction_repr changed
",numpy/core/src/multiarray/na_singleton.c,numpy/core/tests/test_na.py
0cc2e75cd160c44dba1dbcadfb530cfbe7d0cf98,"ENH: missingdata: Get printing of NAs to work a little bit better
",numpy/core/arrayprint.py,numpy/core/numeric.py
5e6d038bf75ef6c436e620e54158194c5d16070c,"ENH: missingdata: Clean up object dtype detection to work with NAs properly
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_na.py
f3d05b6a5b3eb84047296235141a8ba6815df762,"ENH: missingdata: Really simple printing with NA works in some cases now too
",numpy/core/arrayprint.py,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_mask.h
02b42b5823019052b28e68b01c733b4f281eda59,"ENH: missingdata: Have some basic assignment and indexing with NA working
",doc/neps/missing-data.rst,numpy/core/arrayprint.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_na.py
b2e8328b4a951ae63d2c03b6055d222603bcb58d,"ENH: missingdata: Add (untested) functions for creating the NA mask
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/private/lowlevel_strided_loops.h
fecb76173a5ac2555f4aa9062388ca62d1f781c8,"ENH: missingdata: Use NPY_NA_NOPAYLOAD instead of constant 255 everywhere
",numpy/core/src/multiarray/na_singleton.c
47b86408deb225b6eac8fe398189adaa607c9c20,"ENH: missingdata: Define the standard Python arithmetic operations for NA
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h,numpy/core/tests/test_na.py
61caa71485141358d8965a191019ad9ab6f3e2c3,"ENH: missingdata: Make comparisons with NA return NA, raise on 'if np.NA: ...'
",numpy/core/code_generators/numpy_api.py,numpy/core/numerictypes.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h
867cabefe92b127b765580432b4c05d92342e275,"ENH: missingdata: Write NA repr function
",numpy/core/src/multiarray/na_singleton.c
321b8bf5769c3daae20d0c05e9677ef70b626c5b,"ENH: missingdata: Add boilerplate for NA singleton type
",numpy/core/SConscript,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/na_singleton.c,numpy/core/src/multiarray/na_singleton.h,numpy/core/src/multiarray/nditer_pywrap.c
6d946cddb1ea7ded51f59bf4262d1169db51fed2,"ENH: Create NA singleton file
",numpy/core/src/multiarray/na_singleton.c
263df0ccb21e7ccb53ea3b6654387eb85feec932,"ENH: missingdata: Add the NA mask members to PyArrayObject
",doc/neps/missing-data.rst,numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/setup.py,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/na_mask.c,numpy/core/src/umath/ufunc_type_resolution.c
aa55ba7437fbe6b8772a360a641b5aa7d3e669e0,"BUG: stray brackets at end of define for macro
",numpy/core/include/numpy/noprefix.h
4fb84e7a220e39c34e5253202730733d8151bb9c,"Merge branch 'pull-138'

* pull-138:
  DOC: nditer: Add details about why 'readonly' is the operand default
  DOC: nditer: Tweaks to the tutorial based on feedback from Chris
  DOC: nditer: Add links to the nditer introductory doc to make it more discoverable
  DOC: nditer: Finish up the nditer walkthrough with a Cython example
  DOC: nditer: Add tutorial-style material covering more than one operand
  DOC: nditer: Write tutorial-style introduction covering single-array iteration
",doc/source/reference/arrays.nditer.rst,doc/source/reference/arrays.rst,doc/source/reference/c-api.iterator.rst,numpy/add_newdocs.py
e7786bd2191d2880344d342b5c56ca73931c1286,"DOC: nditer: Add details about why 'readonly' is the operand default
",doc/source/reference/arrays.nditer.rst
62c568837204cddfd9dca445190b227be578f5c1,"DOC: nditer: Tweaks to the tutorial based on feedback from Chris
",doc/source/reference/arrays.nditer.rst
09a750c61e816ce16927c5621e97803f542dbf38,"DOC: nditer: Add links to the nditer introductory doc to make it more discoverable
",doc/source/reference/arrays.nditer.rst,doc/source/reference/c-api.iterator.rst,numpy/add_newdocs.py
02b1c207cae97b0c0504107bf081cd0ccd3752d7,"DOC: nditer: Finish up the nditer walkthrough with a Cython example
",doc/source/reference/arrays.nditer.rst,doc/source/reference/arrays.rst
8464c96a712e9c7ba01ca0d25429b7c49d3ebdee,"DOC: nditer: Add tutorial-style material covering more than one operand
",doc/source/reference/arrays.nditer.rst
f9932164d594f83e44f9f22eaac1862cf0389598,"DOC: nditer: Write tutorial-style introduction covering single-array iteration
",doc/source/reference/arrays.nditer.rst
e53c0558424f3dcdf160036f8a7fb4ecab04470f,"DOC: Add tutorial for writing numpy ufunc extensions.
",doc/source/user/c-info.ufunc-tutorial.rst
aeda02653c73b88104ce06d5cc938849e49678fe,"Py3K compliant, extra comments added
",doc/source/user/c-info.ufunc-tutorial.rst
e2c4bb106a6434028b258ffbf0ff95bdc39ad07d,"style changes and bugs removed from docs
",doc/source/user/c-info.ufunc-tutorial.rst
79593748e6112846e93a67d86e604a18e992a038,"ENH: Docs now Py3k compliant
",doc/source/user/c-info.ufunc-tutorial.rst
2695ada8b9f99d7d087672f142eebffd325886a4,"Changed to follow PEP 7
",doc/source/user/c-info.ufunc-tutorial.rst,numpy/testing/utils.py
83a55036e9f0e4dca9819b4e6d1eb326bcf4167f,"DOCS: New ufunc creation docs
",doc/source/reference/c-api.coremath.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.rst,doc/source/user/c-info.ufunc-tutorial.rst,numpy/testing/utils.py
d7b12a38aa602839b238c2105d0fae208fe891ef,"BUG: Fix segfault when PyArray_VOID and no minitype in _array_find_type.
The segfault showed up in numpy/testing/print_coercion_tables.py and
'lookfor'.
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_multiarray.py
04741c071b54d024c86d38b85494ab9aefb77e46,"BUG: use npy_isnan, not isnan.
",numpy/core/src/umath/loops.c.src
065b34968c9d1e65ab4704f33457b3b8cffb45c2,"BUG: fix dummy module build.
",numpy/core/src/dummymodule.c
70d9f674031dc2a6983b00ab73cf67ad3fd98705,"STY: define all config.h macro to value 1 to match autoheader convention.
",numpy/core/setup.py
a90754d673aa4af4d605a657134d76422c390510,"ENH: Introduce new options extra_f77_compile_args and extra_f90_compile_args to
Configuration.add_extension. Configuration.add_library, and Extension. These options
allow specifying extra compile options for compiling Fortran sources within a
setup.py file.
",doc/DISTUTILS.rst.txt,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py
ea529d4081a38acf85a759dda25e3edf0bd307dc,"BUG: Revert commit that causes many tests not to run.

Revert ""Introduce new options extra_f77_compiler_args and extra_f90_compiler_args to Configuration.add_extension. Configuration.add_library, and Extension. These options allow specifying extra compile options for compiling Fortran sources within a setup.py file.""

This reverts commit 43862759384a86cb4a95e8adb4d39fa1522acb28.
",doc/DISTUTILS.rst.txt,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py
cdf1ff1d2f92582d5aa150573a056462341d2dcf,"Merge branch 'pull-140'

* pull-140:
  BUG: loadtxt: There was some extra nesting for subarray dtypes (Ticket #1936)
",numpy/lib/npyio.py,numpy/lib/tests/test_regression.py
a54a0bdc89dd82ca3cfee89ae70a7fe3ee00e2a2,"BUG: loadtxt: There was some extra nesting for subarray dtypes (Ticket #1936)
",numpy/lib/npyio.py,numpy/lib/tests/test_regression.py
9aac3a509e944104a28798563a2ba2d5eeb12964,"BLD: follow build_ext coding convention in build_clib to catch strange fcompiler value reported in ml.
",numpy/distutils/command/build_clib.py
00962c4b845ec461e38850f8ae17253a4eecabf2,"ENH: add useful repr's for finfo, iinfo.
",numpy/core/getlimits.py,numpy/core/tests/test_getlimits.py
43862759384a86cb4a95e8adb4d39fa1522acb28,"Introduce new options extra_f77_compiler_args and extra_f90_compiler_args to Configuration.add_extension. Configuration.add_library, and Extension. These options allow specifying extra compile options for compiling Fortran sources within a setup.py file.
",doc/DISTUTILS.rst.txt,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py
78f7542add429689465c79d2d2f2042c38239672,"ENH: refactor doctest plugin to help subclassing

Move numpy-specific parts of the plugin into their own methods, or into
class-level defines.  This makes it easier to subclass the plugin.  This
in turn may help keep more eyes on the code.
",numpy/testing/noseclasses.py
31aecd9b092d5bab27aac2288758eedbeda7bb81,"ENH: remove unused class definition

NumpyDocTestCase definition overwritten further down the file.

The deleted class only redefined the ``id`` method with the same code
as that in the parent class since before nose 0.10.
",numpy/testing/noseclasses.py
57747fcc8179eacd9a6920e6a2f69dedb08834da,"ENH: skip doctests for tests

There are various docstrings show examples of how to run the tests, and
give example test output.  Obviously the test output changes, and
running the doctests for the testing package:

import numpy.testing as npt
npt.test(doctests=True)

will cause several large sets of tests to be run in the rest of the
tree.  So I skipped these.
",numpy/testing/nosetester.py,numpy/testing/utils.py
316d1f4ec9e033b21062b8f2dcdddeef01d7a889,"FIX: fix doctest error with empty output

The numpy doctest extension generates an error with empty doctest output;
this most often comes about with the +SKIP option.

The numpy doctest plugin exposed a nose bug because it accidentally used
a different default for the 'doctest-result-variable'.

nose bug report here:
http://code.google.com/p/python-nose/issues/detail?id=445
",numpy/testing/noseclasses.py,numpy/testing/tests/test_doctesting.py
199535c5c34360be7238c80b25d810abce62e6e4,"ENH: move doctest tests to own file with ifmain

The doctesting tests were in the code file, and (for me) rather
difficult to run without running lots of other tests.  With this change
you can run the doctest tests in isolation by executing the
test_doctesting.py file.
",numpy/testing/nosetester.py,numpy/testing/tests/test_doctesting.py
8eba1efb4599adfcca6c08d041cfca3111f064db,"ENH: refactor testing to improve subclass support

Refactor ``prepare_test_args`` method to make it easier for subclasses
to adapt its behavior.  This should make it easier for nipy and other
projects to use the numpy testing machinery without wholesale copies
into their source trees.
",numpy/testing/nosetester.py
b0c1f6b67ecd5cf865cf6945bff632f81473b81a,"ENH: refactor of docteset plugin management

We previously had a baroque inheritance scheme to deal with the case
where the user had normal nose doctests enabled in their environment.
However, this scheme didn't deal with bench() routine, and was
complicated. This commit uses a null Unplugger plugin to pull the
doctest plugin off the nose configuration after it has been initialized.
We can use this for bench() and test(), and it allows the doctest module
to be enabled (by the user environment) and then thrown away.

Also rejigged the docstrings and removed the automated docstring
addition as the docstrings have already been copied and adapted in the
code.
",numpy/testing/noseclasses.py,numpy/testing/nosetester.py
5cf0a07396b88b48b6f8a922fe8b1147406cb4bc,"ENH: Add provision for headers and footers to savetxt, fixes ticket 1236.
I suggest using a separate keyword argument for structured arrays. It might
also be nice to be able to add a manual header.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
730b861120094b1ab38670b9a8895a36c19296a7,"BUG: print format fix for datetime/timedelta
",numpy/core/src/multiarray/scalartypes.c.src
418f070fc67d1ea2b6eae3259e9dcf7a980bbaaf,"STY: Rewrite some macros to look better. This code could probably use a
bigger refactor.
",numpy/core/code_generators/generate_ufunc_api.py
4dac50bf1faf2c8189c277ec8f11ead506c243b1,"BUG: Fix import_umath macro to work with python 3.
",numpy/core/code_generators/generate_ufunc_api.py
51a096bcbc86d372c3568e721acc11c3c8e92676,"ENH: Faster asarray_chkfinite
",numpy/lib/function_base.py
dba98cc143687bcb9ab25403b5d51fdefd582370,"BLD: fix build for py3k + pip. Closes #1857. Thanks to Erik Bray.

Also works inside a virtualenv.
",numpy/distutils/ccompiler.py,setup.py
57b56bc6409f30039e59d5476feb675d2c279564,"BUG: fix failing npyio test under py3k.  Thanks to Derek Homeier. Closes #1793.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
26aa3cfa5bfa5f235bfbe5943c211a43af3d42f5,"BUG: lib: use Py_TYPE to access ob_type, so it works also on Py3
",numpy/lib/src/_compiled_base.c
72ab385d17d9067f97652aeae87a820f7de41298,"ENH: let genfromtxt return empty array for empty input file instead of an error.

A warning for empty files is issued, including file name.  Closes #1793.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
2acb9282bc991c4d3789bf2f7be8a2aaf1859df0,"BUG: core: Fix memory leak, add a test which catches it (Ticket #1917)
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_regression.py
0ed05321b1b6ebfd30be5a1d5358a27e9d890ea3,"Merge pull request #122 from gandalf013/dtype_repr_fix

BUG: don't use quotes in ""dtype=name"" when printing ""simple"" arrays",numpy/core/numeric.py
16e79053e5a4b85f636739b8ca242e90ace2c0b8,"BUG: don't use quotes in ""dtype=name"" when printing arrays for ""simple"" dtypes'

See: http://mail.scipy.org/pipermail/numpy-discussion/2011-July/057797.html
",numpy/core/numeric.py
d5b29c40c3d207a9ff5338560ec2fec8af28109e,"Merge pull request #121 from mdboom/PyArray_DATA-cast

Fix PyArray_BYTES return type.",numpy/core/include/numpy/ndarraytypes.h
7b34e36c374376f537c8c27d59a9c6c15ba12de3,"In the old API, PyArray_DATA and PyArray_BYTES differ in that DATA returns a (void *) and BYTES returns a (char *).

matplotlib builds were failing because PyArray_BYTES was returning a (void *).
",numpy/core/include/numpy/ndarraytypes.h
9163993794f1bc56c279ab3d90796370d6b579c4,"Merge branch 'deprecate_array_field_access'
",doc/neps/missing-data.rst,doc/source/reference/c-api.array.rst,numpy/core/_internal.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/numpyconfig.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/memmap.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npysort/sort.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/private/npy_config.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_half.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_ufunc.py,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/lib/npyio.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_stride_tricks.py,numpy/numarray/_capi.c,numpy/numarray/include/numpy/arraybase.h,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/numcomplex.h,numpy/numarray/include/numpy/nummacro.h
affea42d886e8233fdd6f3c5760708e3a9e9b1b8,"STY: Remove trailing whitespace
",numpy/core/_internal.py,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/numpyconfig.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/private/npy_config.h,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_half.py,numpy/core/tests/test_ufunc.py,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/lib/npyio.py,numpy/lib/tests/test_index_tricks.py,numpy/numarray/include/numpy/arraybase.h,numpy/numarray/include/numpy/cfunc.h,numpy/numarray/include/numpy/numcomplex.h,numpy/numarray/include/numpy/nummacro.h
1b62bdfb04e56f75fc61dbbd1f2600a72951b19d,"BUG: fixed histogramdd bug with empty inputs.  Closes #1899.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_twodim_base.py
694a3835a98e5f68dbbd416d3df81418fb16f28d,"DOC: core: Document the PyArray_SetBaseObject function
",doc/source/reference/c-api.array.rst
a2ed62a5f42459a14c233cef35f07a032c9ca36c,"ENH: core: Rename PyArray_SetBase to PyArray_SetBaseObject to be more clear
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c
dc81482f4ab7ffbc8102197ac45e559c7a6545d6,"ENH: dtype: Make handling of struct dtype align= flag more rigorous (also fixes ticket #1912)

This adds an 'aligned'= property to the format dict, which gets put
in the str() representation when necessary to preserve it.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/tests/test_dtype.py
e2af7b755746a7269df247418ee383f1eb39c0bc,"REL: forward port changes to release scripts from 1.6.x branch.
",pavement.py,release.sh
a0599794d64d7636b4812bc60bb962380435e7ea,"STY: Updates for pull request feedback from Chuck and Ben
",doc/neps/missing-data.rst,numpy/core/_internal.py
6dcc6e45ac8c5e4fd0beb047364b8341a5c6b3c1,"MRG: Merge branch 'gandalf013/businessday2'

Changes busday_count to return negative values instead of clamping
to zero.
",doc/source/reference/arrays.datetime.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/tests/test_datetime.py
559095de6a429efe6a22e48388b23d8f73d7d5ab,"TST: datetime: Test that busday_count returns negative values when needed
",numpy/core/tests/test_datetime.py
7e1c4b0f3fb1778ee77c92cacea1a8609f3cacf8,"DOC: datetime: Update the docs to reflect busday_count change
",doc/source/reference/arrays.datetime.rst,numpy/add_newdocs.py
bd77886d6ebab0939e1515b899fa0e0a174268b6,"ENH: datetime: make np.busday_count return negative values when the start date is after end date
",numpy/core/src/multiarray/datetime_busday.c
d6c3b44b6645a02754c0acff70b35131a01353dd,"MRG: Merge branch 'walshb/datetime_array_fixes'
",numpy/core/_internal.py,numpy/lib/_iotools.py,numpy/lib/tests/test_io.py,numpy/ma/core.py
91646576e73d6cf9eb6ff4914292844ea40605f1,"ENH: datetime: Masked arrays now use NaT as default filler value.
",numpy/ma/core.py
1dd8eb73ec89b96d17cfd46dc98aae6d97762832,"BUG: datetime: Various fixes for datetime arrays.
",numpy/core/_internal.py,numpy/lib/_iotools.py,numpy/lib/tests/test_io.py,numpy/ma/core.py
ecaf1e1765eb5697a27761b49a25081b1fffb90d,"MRG: Merge branch 'steveha/datetime64_doc'
",doc/source/reference/arrays.datetime.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/tests/test_datetime.py
1d3add610afc367d59bdc0c40a16cacf766a48a9,"DOC: datetime: hyperlink busday_count and is_busday functions in datetime doc
",doc/source/reference/arrays.datetime.rst
4af52375dbd720dffc55b49f48bb59e8587ed762,"DOC: datetime: Update docstrings for busdays code.

The previous checkin has examples for working with datetime64 objects and
the busdays functions.  Edit the docstrings for busdays to harmonize them
with the language used in the examples.

Instead of saying ""business days"", now say ""valid days"".  The default
valid days are Monday through Friday, business days, but other sets of
valid days are possible.
",numpy/add_newdocs.py
17d5ecd3bb304b9f1f56e198688bea8fc1779d1b,"DOC: datetime: Add additional tutorial information.
",doc/source/reference/arrays.datetime.rst
a5391a381278a07bc4921fbd4c4965cc7d531899,"ENH: datetime: Allow whitespace in weekday mask.

Add code to allow white space in a weekday mask:

""Sun Mon Tue""

Also add additional test cases to the unit tests.
",numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/tests/test_datetime.py
5590809abed2956ca3e23a71e97d05dcd020a74f,"ENH: core: Add access macros back in conditionally, for backwards compatibilities

Sticking with inline functions when NPY_NO_DEPRECATED_API is defined.
",numpy/core/include/numpy/ndarraytypes.h
dcc355a0b179387eeba10c95baf2e1eb21d417c7,"BUG: mmap: Make the memmap subclass rely on the Python mmap's destructor being correct

There was some fishy code flushing and closing the _mmap property,
which looked as if it was paranoid in not trusting mmap.mmap to
behave properly. This was done in a way which assumed the .base
attribute isn't collapsed, something which I've changed in the refactoring.

The easiest way to fix this is to trust mmap.mmap - if this is incorrect,
the specific platform on which this fails should have been already
documented in the comments!
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
57aa9147d46c638cb2acb47b82dfbb60aa903576,"BUG: core: Needed to initialize 'obj' to NULL for Py_XDECREF_ERR in fail section
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/item_selection.c
405fc9e502336921a631c020cbcc5a7acedd39cd,"TST: rec: DType in join_by test was inconsistent
",numpy/lib/tests/test_recfunctions.py
5771857a78dc140dd6a70b007cb0ea2d8ebff77a,"BUG: core: PyArray_GetArrayParamsFromObject was treating __array_interface__ incorrectly

I'm not sure why this came up after the arrayobject field access
changes, since it looks like the bug was in there before already.
",numpy/core/src/multiarray/ctors.c
f8ff0e326c08e42fc9cb230b56079d05bd1059bc,"BUG: dtype: comma-list dtype formats didn't accept M8[] parameterized dtypes
",numpy/core/_internal.py,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_dtype.py
c9f0f296bea82af0cf475d21b44f10ebd9e99268,"ENH: core: Fix more test failures post-field access deprecation
",numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_einsum.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_ufunc.py
0a7156ffdc9fae4432d60a52a6360e4d2fa43cbb,"ENH: core: Got the tests running after the ArrayObject field access deprecation
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c
57d6b5bebb039dc6b2b3c5a2cc7bfc8e2cc3fb98,"ENH: core: More cleanups removing direct PyArrayObject field access
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/npysort/sort.c.src,numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c,numpy/numarray/include/numpy/nummacro.h
db90bf507279dffa23e6546414b82dd28ecaf984,"WRN: nditer: remove some warnings
",numpy/core/src/multiarray/nditer_pywrap.c
09debad6a877503af4db4c4070fa8bb8e0fca5fd,"ENH: core: Get it fully building without direct field access
",numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/ufunc_object.c
67c10988b1c1805988077a18ce477ba8d362e1b5,"ENH: core: more progress removing direct ArrayObject field access
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/private/lowlevel_strided_loops.h
d88bfeb397c5cc568a52c269630a3d4a0a16a1e1,"ENH: core: More cleanup towards deprecating direct arrayobject field access
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c
bff2e5159bb65f7eb939896d0b50a6162f6fd286,"ENH: core: Some fixes, change some tests to not use yield
",numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/flagsobject.c,numpy/lib/tests/test_stride_tricks.py
2bb06a5cc043943ba4147b3ddeb5fd8835310200,"ENH: core: Progress getting NumPy building without direct field access
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/numarray/_capi.c
4dce9c07eaa7756c9a6d552ac316137c83e92809,"ENH: core: More progress refactoring code to not use PyArrayObject fields directly
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalarapi.c
c135371ea35483b5d557c04bcc57785b3edd9133,"ENH: core: Work in progress making things work without direct field access
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c
b7cc20ad3400f650bbc45feb5a0bad041722ef29,"ENH: core: Deprecating direct access to the PyArrayObject fields

NOTE: WIP, code doesn't build
",doc/neps/missing-data.rst,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/item_selection.c
c625ee0c38af6148dd7758d317256f2828646a17,"NEP: missingdata: Rename 'namask' to 'maskna', which looks better
",doc/neps/missing-data.rst
84ee545993c55d915d55750f576c20ed1fe028fb,"ENH: core: Improve casting failure message produced by PyArray_FromArray
",numpy/core/src/multiarray/ctors.c
c649139121015e3d6bb82377e3c9094a0f850065,"Regression test for missing dtype and order args in asarray_chkfinite
",numpy/lib/tests/test_function_base.py
a468b2e7ec180f9fb742070e1d108a8d56bdd0ea,"BUG: fix asarray_chkfinite to take dtype and order args, as advertised

Includes a doctest for dtype.
",numpy/lib/function_base.py
64fce7c67849f44492d55ccf8a745b252bf1368b,"ENH: Add some tests for polynomial printing.
",numpy/polynomial/tests/test_printing.py
cdfe3b59be76c829d14ff028315542fd2e16ae1e,"BUG: Fix regression in printing polynomials.
",numpy/polynomial/polytemplate.py
1451b414693d63d8224857b1c67726eb8d5f97af,"DOC: fix build issues (with latex or newest sphinx)
",doc/source/_static/scipy.css,doc/source/glossary.rst,doc/source/reference/arrays.datetime.rst,numpy/doc/glossary.py
23b724476f5f442b233077f0c4bb06b1e6a0af00,"BUG: defer numpy.distutils import in ctypeslib.

Numpy.distutils was imported together with numpy due to the change in commit
025c8c77; this is unwanted.
",numpy/ctypeslib.py
6fdfd9c070ce943415d75780702a22f4bbd8f837,"TST: Added more tests for datetime array construction.
",numpy/core/tests/test_datetime.py
feb8079070b8a659d7eee1b4acbddf470fd8a81d,"BUT: Stop _array_find_type trying to make every list element a subtype of bool.
",numpy/core/src/multiarray/common.c,numpy/core/tests/test_datetime.py
2ad4a7138ac6500649ac501ea8314be439c0ede9,"DOC: core: Improve some documentation of internal functions
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/private/lowlevel_strided_loops.h
92ede9cc86fe112d0e9335a1fe94dc66cc5ad6ca,"Merge branch 'pull-108'

* pull-108:
  STY: Put some spaces around '&'.
  DOC: core: Document the mask-based nditer flags and new inline mask functions
  ENH: core: Performance optimization in CopyInto, when both casting and broadcasting
  ENH: umath: Use masked iteration to allow buffered 'where=' output operands
  ENH: nditer: Add tests for writemasked iteration, also some small fixes
  STY: Rename test_iterator.py to test_nditer.py for consistency
  ENH: core: Add a typedef, macro, and inline functions for dealing with masks
  ENH: nditer: Finish implementation of masked iteration
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.iterator.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py,numpy/core/tests/{test_iterator.py,numpy/core/tests/test_ufunc.py
fb0f2524a84757fd92ce028c474b88cf9ced40df,"STY: Put some spaces around '&'.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/nditer_api.c
789d98fa4316cf0d16d6eee9b5a0aba88036f7d7,"DOC: core: Document the mask-based nditer flags and new inline mask functions
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.iterator.rst
a99a19437e1fe8547a6a002a4b247875fd9d482b,"ENH: core: Performance optimization in CopyInto, when both casting and broadcasting

When both casting and broadcasting are occurring, and the total size of
'src' is smaller than the default NumPy buffersize, this tells the iterator
to make a copy with the 'dst' dtype so most of the operations are simple
copies with no cast.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_api.py
0ce8c51ef2f25c54c34c7c47c5ccbf0ce81cecac,"ENH: umath: Use masked iteration to allow buffered 'where=' output operands
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
d3172da58be7f3dc886c0a4c627b0b9b56efcf4d,"ENH: nditer: Add tests for writemasked iteration, also some small fixes
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/tests/test_nditer.py
62d5414c1b796e0e2e09b3b7446a46716f10a9ea,"STY: Rename test_iterator.py to test_nditer.py for consistency
",numpy/core/tests/{test_iterator.py
7afa5d81f15286898adc657179c339c190526224,"ENH: core: Add a typedef, macro, and inline functions for dealing with masks

This was suggested by Eric and Nathaniel on the mailing list.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_type_resolution.c
ad6d8f2fdae535d394920aac95276d701f27867b,"ENH: nditer: Finish implementation of masked iteration

This still needs tests, I've only validated that it doesn't break
anything already in the tests.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/private/lowlevel_strided_loops.h
b5cdaee35bab2a06604f204ba18e00bf465879a7,"ENH: Fix some functions to use copyto instead of the deprecated putmask.
",numpy/lib/function_base.py,numpy/ma/core.py
f35015c59cb35fc4503822ce686066b497c932e4,"STY: Put some spaces in.
",numpy/core/tests/test_multiarray.py
98d0c8f79443bf6f44883739d1876a3dc2498f6f,"Merge branch 'pull-105'

* pull-105:
  STY: Put spaces around the '&' and '|' operators.
  STY: Fix 'copy' 'copyto' typo and remove some trailing whitespace.
  ENH: Use np.copyto instead of np.fill in some places
  ENH: core: Add np.copyto, PyArray_MaskedMoveInto, PyArray_MaskedCopyInto
  ENH: core: Add support for masked strided transfer functions
  NEP: missingdata: Add a small note about single NA vs multi-NA
  NEP: missingdata: Describe a possible way multi-NA could be added in the future
  NEP: missingdata: Change the mask definition
  STY: Some small stylistic changes
  ENH: nditer: Add the basic checking and input of the MASK-related flags
  NEP: missingdata: Design the mask binary format so it's extensible with a payload
  DEP: core: Move 'fortran' macro into the deprecated header
  ENH: nditer: Add the per-operand masked iteration flags
  WRN: Get rid of some of the deprecation warnings about 'O4'
  DEP: core: Move NPY_AO into the deprecated API header
",doc/neps/missing-data.rst,doc/source/reference/c-api.array.rst,doc/source/reference/routines.array-manipulation.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/numeric.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py,numpy/lib/tests/test_format.py
a26bb0d7ba1f8ac541c9048bcc88bb8031d5d283,"STY: Put spaces around the '&' and '|' operators.
",numpy/core/src/multiarray/nditer_constr.c
ff803430057f9d714099cb7e1d66ba2b6b24bf24,"STY: Fix 'copy' 'copyto' typo and remove some trailing whitespace.
",numpy/add_newdocs.py,numpy/core/src/multiarray/ctors.c
978862660363f17962149ece1dfb67fa8051a8a1,"BUG: Fixed bugs in join_by and added tests
",numpy/lib/recfunctions.py,numpy/lib/tests/test_recfunctions.py
76f9e50c9e40967d9a41cb6a630b2448af9e8687,"ENH: Use np.copyto instead of np.fill in some places

This should allow one to create struct dtype arrays with np.ones
and np.zeros_like.
",numpy/add_newdocs.py,numpy/core/numeric.py
75a2c03a0836b9e094bfad4c02c643901d17c593,"ENH: core: Add np.copyto, PyArray_MaskedMoveInto, PyArray_MaskedCopyInto

These functions expose masked copying routines, with and without
handling of overlapping data. Also deprecated the np.putmask and
PyArray_PutMask functions, because np.copyto supercedes their
functionality. This will need to be discussed on the list during
the pull request review.
",doc/source/reference/c-api.array.rst,doc/source/reference/routines.array-manipulation.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/tests/test_api.py
5f03b1504bcbe31b611376b6651e0297db165bad,"ENH: core: Add support for masked strided transfer functions

This implementation has no optimization whatsoever in it yet,
it just wraps the unmasked strided transfer functions. It also
does not handle struct masks yet.
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_type_resolution.c
9910b0dbdf999e5a0d1a94d1134071612e126f06,"NEP: missingdata: Add a small note about single NA vs multi-NA
",doc/neps/missing-data.rst
7561f85bffe4fc94578dde9ea4d38dbcee5167b8,"NEP: missingdata: Describe a possible way multi-NA could be added in the future
",doc/neps/missing-data.rst
233453ab2c1100fed8c86d85c5da8ebb47c51e66,"NEP: missingdata: Change the mask definition

This change allows npy_bool to be a mask which always has payload
zero. This doesn't let combining masks with payloads to be a simple
'min' operation as the previous design, but allowing npy_bool as
the mask appears to be a very worthwhile tradeoff.
",doc/neps/missing-data.rst
cf8c0a08ab023e023cdc92046b6000da4c8b6914,"STY: Some small stylistic changes
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/nditer_constr.c
8f2ca28139657b427731d9f56be0e41d6e19fa6f,"ENH: nditer: Add the basic checking and input of the MASK-related flags
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c
e8b606589bf490d1c503fdd5915e37c7636d016c,"NEP: missingdata: Design the mask binary format so it's extensible with a payload
",doc/neps/missing-data.rst
b1de8aa9179545a2e20b8cd5a155f8112fc81d8a,"DEP: core: Move 'fortran' macro into the deprecated header

This was presumably there so that variables could be called 'fortran'
without choking up an obscure unmentioned compiler. I've also gone
through and renamed any variables from 'fortran' to something else.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/shape.c
b4143056187e079c97df6956e86d900a299b4831,"ENH: nditer: Add the per-operand masked iteration flags
",doc/neps/missing-data.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h,numpy/core/src/multiarray/nditer_pywrap.c
cd92423d1f11afead06f534c9044607eabfe11f4,"WRN: Get rid of some of the deprecation warnings about 'O4'
",numpy/lib/tests/test_format.py
5817570e2d856302dd8ca91a1b7ad5edaf8af559,"DEP: core: Move NPY_AO into the deprecated API header

This kind of shortcut is inappropriate for the default public API.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/scalartypes.c.src
834b5bf5219be6d874ff547775e728151f8d6cca,"BUG: Fix onefile compilation of multiarraymodule_onefile. Thanks to
Dirk Ullrich for the report and fix.
",numpy/core/src/multiarray/multiarraymodule_onefile.c
1b2ca743828759ff6b0b33b42ce13e27eb4a2730,"STY: Cleanup trailing whitespace.
",numpy/core/SConscript,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/dtype_transfer.c
c5c1a4808bf3c2386c5ee6c39b8156a4978092f7,"ENH: nditer: Rename nditer.c.src to indicate it has just the templated bits
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/{nditer.c.src
62a5ce1b537c9720d45e00b90924e38a432284f1,"ENH: nditer: Move the non-templated API into its own file
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_api.c,numpy/core/src/multiarray/nditer_constr.c
36f4bdfbe464259540208a5d7d927ec656524757,"ENH: nditer: Move construction/copy/destruction to its own implementation file
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_constr.c,numpy/core/src/multiarray/nditer_impl.h
e124ac52c2824332fa5b32ba92205012d71a1e8f,"NEP: missingdata: Adjust the parenthetical part of the NA/IGNORE defn
",doc/neps/missing-data.rst
98dfd7bd44044ba3d89d85f3a2e38d868bee3884,"BUG: core: Missed a use of NPY_WRITEABLE in Py3 code when cleaning API
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/getset.c
17d056ee0209f84087b8974f90961ae7dae12e4d,"NEP: missingdata: Add copyright info, some more NAMASK iterator clarification
",doc/neps/missing-data.rst
0d811920081ce77526d439dc9d4803c2a77e5993,"NEP: missingdata: Add more C API details
",doc/neps/missing-data.rst
28a2955faf6d801331ee754f8800fad7e80265b7,"NEP: missingdata: Start some details about masked iteration
",doc/neps/missing-data.rst
ddbe1d5301ad2c08ef97158d84d9856a9ac8b3cb,"Merge branch 'pull-99'

* pull-99: (24 commits)
  TST: ufunc: Disable where= buffering test temporarily
  DOC: c-api: Update to reflect array flag namespace change
  NEP: missing-data: Add Peter to the Acknowledgments
  NEP: missing-data: Add ""Python API"" and ""C API"" definitions
  NEP: missing-data: Add numpy.ma to the glossary
  NEP: missing-data: Add glossary of terms, try to clarify them better
  NEP: missing-data: Fix copy/paste/edit typo for np.all example
  NEP: missing-data: Incorporate Ben's feedback, add section on 'shared masks'
  TST: umath: Add tests for casting output parameters
  ENH: core: Deprecate some bad namespace-polluting macros
  NEP: missingdata: Rename 'hasmask' and friends to 'hasnamask' and friends
  NEP: missing-data: Add name to acknowledgments
  NEP: missingdata: Various improvements
  TST: ma: Feedback from Derek about Python 3 failures in ma tests
  NEP: Trying to make the NEP's position on missing values and masks vs bit patterns more clear
  DOC: Document the ufunc 'where=' parameter and the NpyAuxData C API mechanism
  ENH: umath: Add tests, work out kinks in ufunc 'where=' parameter
  ENH: umath: Write the function to call the masked inner loop
  ENH: umath: Add parsing of a 'where=' parameter in the element-wise ufunc
  ENH: umath: Implement the default type resolution for masked loops
  ...
",doc/neps/missing-data.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/internals.code-explanations.rst,doc/source/reference/ufuncs.rst,doc/source/user/c-info.how-to-extend.rst,numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/src/umath/umathmodule.c.src,numpy/core/src/umath/umathmodule_onefile.c,numpy/core/tests/test_ufunc.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
4703dd0d33b0455033ec9b5de526995d72b959cf,"TST: ufunc: Disable where= buffering test temporarily

Will reenable it once masking iteration features are done.
",numpy/core/tests/test_ufunc.py
bcdc5b54869a0855c2457ea9f315cbd768a339ee,"DOC: c-api: Update to reflect array flag namespace change
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/internals.code-explanations.rst,doc/source/user/c-info.how-to-extend.rst
ce78b8194069821a69a160754849b3232114ffe8,"NEP: missing-data: Add Peter to the Acknowledgments
",doc/neps/missing-data.rst
43b83d611fcfb761bf00a672834fa234764a1a9f,"NEP: missing-data: Add ""Python API"" and ""C API"" definitions
",doc/neps/missing-data.rst
e76ddf9d16ad52f4fa054a900541f43e13e8f6e9,"NEP: missing-data: Add numpy.ma to the glossary
",doc/neps/missing-data.rst
a9be5a1a2e753c52db36f1ae678115fcf046d8a4,"NEP: missing-data: Add glossary of terms, try to clarify them better

This is a step towards having everyone on the list use the same
vocabulary with specific nailed-down definitions for the terms.
",doc/neps/missing-data.rst
f2f7bd6510b24f6f1c12642afb888f82da0a353e,"NEP: missing-data: Fix copy/paste/edit typo for np.all example
",doc/neps/missing-data.rst
bc0a86219f62088e108a9464ce928890f2525084,"NEP: missing-data: Incorporate Ben's feedback, add section on 'shared masks'

This includes an email comment from Ben about 'np.any' and 'np.all'.
",doc/neps/missing-data.rst
ced013e6beb0e9cc8655a586579ac4fd3ac29551,"TST: umath: Add tests for casting output parameters
",numpy/core/tests/test_ufunc.py
8b506a28bf3c4be6e3b333eab6ec6856a383833d,"ENH: core: Deprecate some bad namespace-polluting macros

This one handles PyArray_DEFAULT -> NPY_DEFAULT_TYPE and
the NPY_* array flags -> NPY_ARRAY_*. The PyArray_DEFAULT vs NPY_DEFAULT
confusion was particularly egregious here.
",numpy/core/src/umath/ufunc_type_resolution.c
423b1e41fbbd9c110123a2f3a161cb11c79493d6,"NEP: missingdata: Rename 'hasmask' and friends to 'hasnamask' and friends

This is an attempt to reduce potential confusion between the existing
numpy.ma and the NA-supporting built-in mask.
",doc/neps/missing-data.rst
396ee78abbe198515cbb836b9a87452d8be953b1,"NEP: missing-data: Add name to acknowledgments
",doc/neps/missing-data.rst
6a6f8f52acf36289840866f437dcac9c75798202,"NEP: missingdata: Various improvements
",doc/neps/missing-data.rst
3d9db9b960cbc04a44458ea36f056a8e87196a04,"TST: ma: Feedback from Derek about Python 3 failures in ma tests
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
5fdb6badba4ad55240235b06d66c28f57e60a735,"NEP: Trying to make the NEP's position on missing values and masks vs bit patterns more clear
",doc/neps/missing-data.rst
b48c7c1c7065a5fa12645473d6d288f2f7d81df1,"DOC: Document the ufunc 'where=' parameter and the NpyAuxData C API mechanism
",doc/source/reference/c-api.array.rst,doc/source/reference/ufuncs.rst
f308fcbbe2e6a0840804716822a4315ddefa45a2,"ENH: umath: Add tests, work out kinks in ufunc 'where=' parameter
",doc/neps/missing-data.rst,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
d9aaf6f66bf1777d9bd82304a123d90cfd653f4d,"ENH: umath: Write the function to call the masked inner loop
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
bbec4c462f8327b25ecd49530b171f19aa9cb876,"ENH: umath: Add parsing of a 'where=' parameter in the element-wise ufunc
",doc/neps/missing-data.rst,numpy/core/src/umath/ufunc_object.c
e4b2e4bbef058e56db0b57986140e771d945c605,"ENH: umath: Implement the default type resolution for masked loops

This function returns a loop which calls the unmasked loop on runs
of unmasked data.
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_type_resolution.c
b2ac4ad231970a107eff18509dcd5daff9c509ae,"ENH: umath: Move the type resolution functions into their own file
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/ufunc_type_resolution.c,numpy/core/src/umath/ufunc_type_resolution.h,numpy/core/src/umath/umathmodule.c.src,numpy/core/src/umath/umathmodule_onefile.c
e72099374c89e39b8177ff656ff7a793931b4b7a,"ENH: missingdata: Move getting the masked ufunc inner loop to a different function

This is so that backwards compatibility can be retained with denying
regular ufuncs from supporting dynamic auxiliary data, but allowing
it for the masked inner loops so that the default masked loop can store the
regular inner loop it proxies calls to.
",doc/neps/missing-data.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/umathmodule.c.src
30d59c189904d12c920fb7613c0fdb40f1faf36f,"ENH: core: Create a new NpyAuxData mechanism for working with inner loop auxiliary data

There already was such a mechanism in the low level copying and casting
mechanism created for the iterator, so this mechanism has been refactored
into a form suitable for general purpose use.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/private/lowlevel_strided_loops.h
59cdc32278ff54f3868cf0a4ee3a74943467ea7e,"ENH: missingdata: Add a mechanism to get masked versions of ufunc inner loops
",doc/neps/missing-data.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/umathmodule.c.src
a84257505bfc5436affb3d62da0aac2038d6172e,"ENH: Disallow deprecated macros in more files.
",numpy/core/src/dummymodule.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/npysort/sort.c.src
bc51f3b3ec3562b76cd0208f63b8e2b7ebf208ac,"ENH: core: Make scalar math module leave out the deprecated header
",numpy/core/src/scalarmathmodule.c.src
b00beab18aea395484e22a5f2e43ddc98f978a70,"ENH: core: Deprecate some bad namespace-polluting macros

This one handles PyArray_DEFAULT -> NPY_DEFAULT_TYPE and
the NPY_* array flags -> NPY_ARRAY_*. The PyArray_DEFAULT vs NPY_DEFAULT
confusion was particularly egregious here.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src
d0160c6daa7996f9a74d3a1b98a6603949791ae8,"ENH: core: Create a header in which to move deprecated API
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_deprecated_api.h
8e94868e0e4bd2e559ab99ac8c37e1805dd9db4c,"BUG: iter: writeonly operands weren't always being buffered correctly (Ticket #1895/1896)

This interacted with the NPY_ITER_GROWINNER flag which would incorrectly
grow the length because it thought nothing was being buffered.
",numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_ufunc.py
5e4a4075a8476a6c6d46481f33a4c873f545d4c7,"BUG:py3k: fix error with recarry. Patch by C. Gohlke. Closes #1843.
",numpy/compat/py3k.py,numpy/core/tests/test_records.py
494cc99270e4f13989715934249724b92615b0fd,"DOC: datetime: Split the date/time units into two separate tables
",doc/source/reference/arrays.datetime.rst
6cf29e5b86a9b47b1bd92799db5384bd6c35e6f0,"DOC: datetime: Updates based on Chuck's feedback
",doc/source/reference/arrays.datetime.rst
401d04881144684a04ac5a81fe4fbb137dc92d05,"DOC: datetime: Start a draft of introductory datetime documentation
",doc/source/reference/arrays.datetime.rst,doc/source/reference/arrays.rst
e3a8bce0a27eb6cc28e61a6cdc824c5b0e33e344,"ENH: datetime: Remove np.datetime_ so autocomplete will find np.datetime64

This is from user feedback, indicating that always having to type the
'6' was very annoying. Unfortunately, there are still the functions
datetime_as_date and datetime_data which prevent the autocomplete from
working right.
",numpy/core/numerictypes.py,numpy/core/tests/test_regression.py
861e2273049d1c25654a2b4086db614685e7e6da,"DOC: adjust html css, and stub file generation
",doc/source/_static/scipy.css,doc/source/_templates/autosummary/class.rst
192ac749108c91a3f9537eda3977919a2ce4d2b0,"BUG: nditer: Error in detecting double reduction loop (Fixes #1885)

This bug was in the double reduction loop optimization used during
buffering, and was triggered by the bug report example because it
reduced everything to a single value.
",numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_einsum.py,numpy/core/tests/test_iterator.py
78ff5e04fcf882ec7c5761348caf180dc765343e,"Merge pull request #98 from kwgoodman/master

A few typos in the missing data NEP",doc/neps/missing-data.rst
a97de6a868e9554019ce92d00866348460095924,"DOC: A few typos in the missing data NEP.
",doc/neps/missing-data.rst
5becc3883dc177d30c83f778aa954630cd3ad551,"NEP: missing-data: Rename the NEP as it now describes more generality than just masks
",doc/neps/{c-masked-array.rst
b911992478ab40bfe9127d3f0c6604936ca84706,"NEP: c-masked-array: Add idea about np.NA __call__ method
",doc/neps/c-masked-array.rst
54a2431d4cdb0f436609cf66d813bc627b9b3d96,"NEP: c-masked-array: Add examples for missing value reductions
",doc/neps/c-masked-array.rst
08579489837322371b539a9db36219524fbfdbfc,"NEP: c-masked-array: Lots of edits to reflect NA-based interface
",doc/neps/c-masked-array.rst
f61537d099d34ba67cfdc134347fd633987cf00f,"NEP: c-masked-array: More tweaks
",doc/neps/c-masked-array.rst
08caab161a82f9076cc79f97bcf29957030c9635,"NEP: cmaskedarray: Some more tweaks
",doc/neps/c-masked-array.rst
5f41846b4435b4c8e5773fdc0674842dea9a57c2,"NEP: c-masked-array: Add example to clarify some masking semantics
",doc/neps/c-masked-array.rst
8d74430d2d98bf760a0db6d1044565623c406a69,"NEP: c-masked-array: Typo feedback from WeatherGod
",doc/neps/c-masked-array.rst
95bb76a6dc8b538fd844d3bcb9b94f12d47d78c7,"NEP: c-masked-array: Idea for a parameterized dtype with an NA bit pattern
",doc/neps/c-masked-array.rst
63c9d8744e3129dd7ddbc070ac14e6d2f24ea7e7,"NEP: c-masked-array: Add a global np.NA singleton, many more changes
",doc/neps/c-masked-array.rst
ff71c887a7a28ffb8b228e2377e7c4c7a63538e3,"NEP: c-masked-array: Refining and adding things based on feedback
",doc/neps/c-masked-array.rst
0a858a603798fa65787d71f8e62bf38c6693f36f,"NEP: c-masked-array: Some small improvements and clarifications
",doc/neps/c-masked-array.rst
b52abe1a291f61d6bd41d90b7886420d689d07d1,"NEP: c-masked-array: Add section about ufuncs
",doc/neps/c-masked-array.rst
9ec55573493ddd06da6c030fc95b0139a4c3b28e,"NEP: Design document for adding a mask to the core ndarray
",doc/neps/c-masked-array.rst
79a1db5a12b6310cc91294a92ecc0b8b6e6745f2,"DOC: list routines for dealing with raw binary files
",doc/source/reference/routines.io.rst
c6dfbdeb05c6251e5ea0e46291ed4b4d29ed7bbd,"DOC: minor documentation fixes
",numpy/add_newdocs.py,numpy/linalg/linalg.py,numpy/matrixlib/defmatrix.py
7a57dc108fe8ee981439aea38df0d35cfbffaf4c,"sphinxext: expose __call__ in the documentation, if it is present
",doc/sphinxext/docscrape.py
9a287ba152e26ec0c9a1d658a3532f61e9291faa,"BUG: deal with shared lib extension in a single place. Fix ctypes.load_library.

This is related to PEP 3149, tags in shared library extensions.  Only applies
to Linux (for now).  See also #1749.
",numpy/ctypeslib.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/tests/test_ctypeslib.py
8d451bcbdcd5f16342f779b94182d45738a8e8c6,"Merge branch 'struct_cleanup'
",doc/source/reference/arrays.dtypes.rst,numpy/add_newdocs.py,numpy/core/_internal.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_dtype.py,numpy/core/tests/test_regression.py
ddf8d422571e6fa77d4ede57eb0754f32e25b7ed,"ENH: dtype-struct: Tweaks based on Chucks feedback

Now the dict repr mode for struct dtypes always includes the itemsize=
parameter, so that it will always produce the exact same memory layout.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
2e9e8aada9b5ada7841442dba6b111e446a35849,"Merge branch 'tighten_casting'
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/calculation.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/tests/test_datetime.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
8b29cac3f3fd68daf95bd89887da1635909c9a35,"BUG: datetime-print: str() and repr() weren't handling the local tz properly
",numpy/core/arrayprint.py,numpy/core/tests/test_datetime.py
b23337999abcb3ecfa648d86f0bf049ef7e58d3e,"DOC: dtype-struct: Document the changes to struct dtypes
",doc/source/reference/arrays.dtypes.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/descriptor.c
5382d2438c9a99053ae48ea7f5743d382a0677da,"ENH: dtype-struct: Some tweaks based on Chuck's feedback
",numpy/core/src/multiarray/descriptor.c
1827b684426734e68544648b1d393334ea60189b,"ENH: dtype-struct: Move the 'itemsize' from a parameter into the struct descriptor
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
7ab154b90e9db0a3aab1af3a02502cfda25ecbe3,"ENH: dtype-struct: Ensure alignment of nested struct dtypes
",numpy/core/_internal.py,numpy/core/tests/test_dtype.py
5484bb67606bd77536c6f0f801582857e5cacbf3,"ENH: dtype-struct: Add validation that object fields have no overlap
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
09f6a8c97a2fa07864fe0c3b6584d828b9d94b3e,"TST: datetime: Fix the tests to respect the date unit/time unit boundary
",numpy/core/tests/test_datetime.py
a72132dce48e7c2b0f514258e05a40ab78850162,"ENH: ma: Fix up ma and its tests to work with default same_kind casting
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c149545d31e9fb9ba28075fc0a58cb836eab0f8a,"ENH: core: Change the ones_like ufunc so it doesn't do type checking

Since ones_like is a ufunc (unlike zeros_like and empty_like), it by
default checks the casting rule. This disables that check completely.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h
bd85dfffca8629a7e57f5f9397168e0c7dc4e677,"BUG: core: Make slow clip use casting='unsafe' for compatibility
",numpy/core/src/multiarray/calculation.c
eb6c0515443bbab21afb220e27230c727e7c5b06,"ENH: core: Change the default casting rule from 'unsafe' to 'same_kind'

This is an experimental change, to see what kind of ripple effects
tightening up the semantics of NumPy just a little bit produce.
",numpy/core/src/umath/ufunc_object.c
d4ea04b4531f218bd7752f675c30b8c8472a5243,"ENH: Merge branch 'datetime_dev'

Highlights:

* Tighten up date unit vs time unit casting rules,
  and integrate the NPY_CASTING enum deeper into the datetime conversions
* Determine a unit when converting from a string array,
  similar to when converting from lists of strings
* Switch local/utc handling to a timezone= parameter,
  which also accepts a datetime.tzinfo object. This, for
  example, enables the use of the pytz library with numpy.datetime64
* Remove the events metadata, make the old API functions raise
  exceptions, and rename the ""frequency"" metadata name to ""timeunit""
* Abstract the flexible dtype mechanism into a function,
  so that it can be more easily changed without having to
  add code to many places
",numpy/core/SConscript,numpy/core/arrayprint.py,numpy/core/code_generators/genapi.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/methods.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_datetime.py
81f156ae5da85f31909e0933b28f29b2d4c48ab7,"ENH: dtype: Allow unions and out-of-order fields

This will require validation that object dtypes don't overlap with
other fields in a follow-on commit.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
f57f1ef6e86ca85586fb566a16e5d4cdd7a35066,"BUG: dtype: Struct dtype size wasn't being padded for alignment (Ticket #1790)

In the case referenced in ticket #1790, the itemsize was set before
the padded size was calculated, so the intent was clearly that it
should have been aligned.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
6cc9613432b677816c12e14bb45d7b76fb4b7d02,"ENH: dtype: Add an itemsize= keyword parameter to the dtype constructor

The 'struct'-based repr adds this parameter, as the general way to
be able to reconstruct the dtype.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py,numpy/core/tests/test_regression.py
e11a5102d272f5e7cbf4d25c0cc27ffc134d84ee,"BUG: dtype: Fix up the list-based struct dtype string representation
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/tests/test_regression.py
935c5b0e3989103d35c5078d4c4f498d427313a5,"ENH: dtype: Fix repr of structured dtypes (Fixes #1619)

This includes preserving the 'align=True' parameter through the
new NPY_ALIGNED_STRUCT dtype flag. The code now detects whether
the list version of structured dtype construction would match
the data layout, to choose between list and struct based construction.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h
adab9034f8791dee0f03566bb05c625dbcacad56,"TST: fix py3k failure for arrayprint. Closes #1875. Thanks to Derek Homeier.
",numpy/core/tests/test_arrayprint.py
70de35b64bfafd534b7f817bc2033bd443742c96,"ENH: dtype: Use PyDataType_HASFIELDS, add a flag constant for aligned struct
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src
7c1c7a86057e72490268f084a4e77d857997312b,"ENH: datetime: Applying changes for Chuck and Derek's feedback
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime_strings.c
d82752c2411e5cda1b4fb4e67d3dea7cdd6c1852,"BUG[f2py]: fix --include_paths bug. Deprecated --include_paths in favor of --include-paths. Updated docs.
",numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py
db691b6d10a2b4003c43f0c60354cfa0a45d524b,"Merge branch 'sortlib'

* sortlib:
  STY: Delete commented out lines and add some comments.
  ENH: Generate the npysort library for linking during build, but do not install it.
  ENH: Make npy_sort.h private until the proper interface gets sorted out.
  ENH: Remove the _sort module.
  ENH: Directly initialize arraytypes with the sorting functions in the sort library.
  STY: Rename sort functions again, omit the npy_ bit from the suffix.
  ENH: Rename the sort functions using lower case suffix instead of upper case prefix. The name are now of the form <sortkind>_<npy_type>.
  ENH: Make scons build the npysort library.
  ENH: Move sorting functions into a library.
  STY: Move npy_intp definitions and associated formats into npy_common.h.
  STY: Reorganize core/setup.py a bit.
  ENH: Break out the sort functions into a separate file.
  ENH: Rename the sorting directory to npysort.
  ENH: Move comparison functions into an include file. Make include file for the future sorting library. Use prefixed numpy types.
  ENH: Rename _sortmodule.c.src and move it into a new sorting directory. Fix the build to deal with the new name and location.
",numpy/core/SConscript,numpy/core/__init__.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py,numpy/core/src/dummymodule.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/npysort/npysort_common.h,numpy/core/src/{_sortmodule.c.src,numpy/core/src/private/npy_sort.h
c60425a59a845d998a98d2f17a728db4563e5824,"STY: Delete commented out lines and add some comments.
",numpy/core/setup.py,numpy/core/src/npysort/npysort_common.h
675a20fbf5836aafcf8af17a3a49dbbd7db0f7c3,"BUG: on Apple platforms changed long long format from ""%Ld"" to ""%lld""
",numpy/core/include/numpy/npy_common.h
46c91afd4eddc3d692c5280c2a22ad0783ef8219,"ENH: datetime-strings: Support casting to/from unicode arrays
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_datetime.py
9f99d86361baaf17aaf0b6d42f3835223c52c56e,"ENH: dtype-loops: Move the dtype copy/swap function factory into a function
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/umath/umathmodule.c.src
253d886461a2bcecfe4d22246c31c3d5b9afcd61,"BUG: datetime: Mac OS X doesn't support strnlen, working around that
",numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c
008c9318789050ee53b3bd420b3610cf4c4f338e,"ENH: Add the polynomial module to the documentation.

Also:
1. Note that the polynomial package is preferred over poly1d.

2. Remove deprecation of mapparms in __init__.py as it interferes with the
   documention of the method of the same name. This is probably safe as it
   is unlikely to be used yet.

3. Make some improvements to the documentation in polytemplate.
",doc/source/reference/{routines.poly.rst,doc/source/reference/routines.polynomials.polynomial.rst,doc/source/reference/routines.polynomials.rst,doc/source/reference/routines.rst,numpy/polynomial/__init__.py,numpy/polynomial/polytemplate.py
e4d790f005331e5ff59d54b9954ab56ec847bafc,"ENH: Generate the npysort library for linking during build, but do not
install it.
",numpy/core/SConscript,numpy/core/npysort.ini.in,numpy/core/setup.py
4e52c48bd37abdce856033f48d3ce9c0a8c5483f,"BUG: core: Fix corner case of object array assignment (#1870)

This general aspect of object arrays is fraught with errors, for
example, eval(repr(x)) produces a 2 instead of 1 dimensional array
when given the x in the first example of the bug. This fix at least
makes the result requested in the bug report work.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
bdb5ed82298f170abaf14393843538a8f3af9d36,"ENH: Make npy_sort.h private until the proper interface gets sorted out.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/npysort/sort.c.src,numpy/core/{include/numpy
9fa48edb19a731dcc87e7feb497a9e728c15e4d5,"ENH: convert-dtype: Abstract the flexible dtype mechanism into a function

Since the datetime adds a new flexible dtype (datetime with generic units),
updating all the places where flexible dtypes are adjusted was error-prone.
Thus, this has been moved to a single place.

At the same time, I've added sizes for the various number types, so
they don't produce size-one strings by default anymore
",numpy/core/arrayprint.py,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_datetime.py
e834cd49957e6934ef5c6087327a72a5820fbac9,"ENH: datetime-meta: Rename the metadata from frequency to timeunit
",numpy/core/include/numpy/ndarraytypes.h
4d2ee35ac460af27976bb9b7f6e84b385922d787,"DEP: datetime-api: Make the old API functions in datetime.c raise exceptions
",numpy/core/src/multiarray/datetime.c
2ea52550b4f3f0817612d1100e0c41374e994ea2,"ENH: datetime-casting: Add casting parameter to 'datetime_as_string'

The default is 'same_kind', which allows data loss, but prevents
crossing the date unit/time unit boundary. As a special case,
printing dates with a timezone specified requires 'unsafe' casting.
",numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
cb45456d046f86d009e1a4dbdc73d893be6b3ce6,"ENH: datetime-meta: Remove 'events' from the datetime metadata

The events don't fit well within the datetime, causing many special
cases and complicating the datetime code. A better way to proceed,
which received approval from Travis with regard to the reason events
were introduced in the first place, is to do the following:

* Generalize the structured arrays so they work with ufuncs
* Either use NPY_UBYTE, or introduce a new integer modulo N type
* The structured dtype [('date', 'M8[D]'), ('event', 'u8')], then
  will operate identically to the design of events in datetime.

These other changes will have much use elsewhere as well.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
c15a807e7f731a8f4205805034416ca0e3e791b1,"ENH: datetime-casting: Add casting parameters to more conversion functions

Also clean up the tests to work with the stricter date unit vs time unit
boundary that has been added.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
4c7f8dfe94c0599514970d474b77e9bd99c36e97,"ENH: Remove the _sort module.
",numpy/core/SConscript,numpy/core/__init__.py,numpy/core/setup.py,numpy/core/src/npysort/{npy_sort_common.h,numpy/core/src/npysort/sort.c.src,numpy/core/src/npysort/sortmodule.c.src
165c087f21ada3377353014ada41227da1e34d4f,"ENH: Directly initialize arraytypes with the sorting functions in the sort
library.
",numpy/core/__init__.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src
1c3671c0890d8ec4edbe0314ce1ccb1474c7c9b8,"STY: Rename sort functions again, omit the npy_ bit from the suffix.
",numpy/core/include/numpy/npy_sort.h,numpy/core/src/npysort/sort.c.src,numpy/core/src/npysort/sortmodule.c.src
7efe96fc04f969119d1c3c09daddffe64d518b52,"ENH: Rename the sort functions using lower case suffix instead of upper
case prefix. The name are now of the form <sortkind>_<npy_type>.
",numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_sort.h,numpy/core/src/npysort/sort.c.src,numpy/core/src/npysort/sortmodule.c.src
16704fd870047d9b43334b7cef5ea98bcf5faeb3,"ENH: Make scons build the npysort library.
",numpy/core/SConscript
d1155a365d755c5b28c383bd2cd45203a8fa060f,"ENH: Move sorting functions into a library.
",numpy/core/include/numpy/npy_sort.h,numpy/core/npysort.ini.in,numpy/core/setup.py,numpy/core/src/dummymodule.c,numpy/core/src/npysort/npy_sort_common.h,numpy/core/src/npysort/sort.c.src,numpy/core/src/npysort/{sortmodule.c
527bedde2858173ef8eff3b4d572dd5090ec9070,"STY: Move npy_intp definitions and associated formats into npy_common.h.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_sort.h,numpy/core/setup.py,numpy/core/src/npysort/sortmodule.c
39a420ca5a42b7450f2ff242cd7f6c78f3832b72,"STY: Reorganize core/setup.py a bit.
",numpy/core/setup.py
8343f3885bffce54bf99b19d81112bf913746d83,"ENH: Break out the sort functions into a separate file.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/npysort/{sortmodule.c.src,numpy/core/src/npysort/sortmodule.c
aa6f11da12873ae8ce1cfde08aa7484ecafdf761,"ENH: Rename the sorting directory to npysort.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/{sorting,numpy/core/src/{sorting
60054e398e52c690a3769dea9a25883bf4cae9f4,"ENH: Move comparison functions into an include file.
Make include file for the future sorting library.
Use prefixed numpy types.
",numpy/core/include/numpy/npy_sort.h,numpy/core/setup.py,numpy/core/src/sorting/npy_sort_common.h,numpy/core/src/sorting/sortmodule.c.src
f4ba3edfe94b7990a79bff03a73369b584e9a72e,"ENH: Rename _sortmodule.c.src and move it into a new sorting directory.
Fix the build to deal with the new name and location.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/{_sortmodule.c.src
a2125428db9ad804d78b47b211f6810927e313e9,"ENH: datetime-string: Add support for datetime.tzinfo in datetime_as_string

Also add some tests using the pytz library.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py
4df8499f5dc7ae043a3aedc6c988011c0d9840e7,"ENH: datetime-autounit: Detect unit from string arrays as well

Also move datetime string functions to their own source file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_strings.c,numpy/core/src/multiarray/datetime_strings.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/scalartypes.c.src
5cb956e433f3f802773559f2d1c01fd380132121,"BUG: made PyErr_Warn[Ex] in conversion_utils.c python2.4-safe

CH: I removed trailing whitespace and moved the trailing comment
to the next line.
",numpy/core/src/multiarray/conversion_utils.c
382233c3d0fb03f20224dbfbc21e803fd7078407,"ENH: datetime-parsing: Apply the datetime unit casting rules to string parsing
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/methods.h
06ef6b786baa632b2fc408e558e1c84008c87e0e,"ENH: datetime-casting: Refine the casting rules with a date vs time unit barrier
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
2d7d59aef203ebf25b268ceaccfa1be45237b0df,"ENH: datetime-ufunc: Add m8 / m8 -> f8 case to the datetime ufunc operations
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_datetime.py
e9f4e7592ae24e220bfcd0489b4bb25b9c2fc8e7,"BUG: Py3k: some of the string type-related failures in numpy/core/tests

MW: I've removed the asbytes part and changed 'S5' to 'S0' from
    Derek's original commit.
",numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_regression.py
afe25c18c0c42cc4281068e3c91d471176b7b11d,"BUG: ufunc: Type promotion output must always be in NBO (fixes #1867)
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
8019d9196c4c40c443685dc95c4a4e5bc1c2f763,"BUG: core: promote_types wasn't always returning NBO data types
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_numeric.py
e6bffff78cd34d4ba1963c28fff3e8537f6a857a,"BUG: dtype: Cleanups and fix parsing datetime dtypes with an endian specifier

One fairly major improvement is that parsing with kind and a size now
makes sure there isn't any garbage after the size.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
abfec953e9adfc5a74ca1761da3343cc643eba50,"STY: datetime-feedback: Expand some comments and adjust spacing based on Chuck's feedback
",numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaycal.c
31056d4279310e95d6e96792cc3ca3ba18df71e2,"DOC: datetime-feedback: Applying Ralf's feedback for the parameter conventions
",numpy/add_newdocs.py
d117335ca6f74015a773008ff4516270e1849f6b,"STY: datetime-feedback: Rename np.busdaydef -> np.busdaycalendar

Also rename the busdaydef parameters to busdaycal parameters. This
change was motivated by Chuck's code review feedback.
",doc/source/reference/routines.datetime.rst,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/{datetime_busdaydef.c,numpy/core/src/multiarray/{datetime_busdaydef.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/tests/test_datetime.py
6376ba8fca4d9c71002b5ec59b4bb9813a95b63f,"DOC: datetime-feedback: Various comment/documentation tweaks from Chuck's review feedback
",numpy/add_newdocs.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c
6b5a42a777b16812e774193b06da1b68b92bc689,"DOC: datetime-bday: Document the datetime business day functions
",doc/source/reference/routines.datetime.rst,doc/source/reference/routines.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/datetime_busday.c
84e1f7d8415679231944dec9f5eaa182e0a9879c,"ENH: datetime-bday: Got is_busday function working, completed business day API
",numpy/core/numerictypes.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py
0418574b0fe6fcc7a70bbfc04a7feef25b3416a6,"ENH: datetime-bday: Got busday_count function working
",numpy/core/numerictypes.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/datetime_busdaydef.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py
f7ae666d8747e850e49f7d7b5a0daa1c5519d8be,"ENH: datetime-bday: Move the weekmask and holidays list convertors to busdaydef
",numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/datetime_busdaydef.c,numpy/core/src/multiarray/datetime_busdaydef.h
e164d9425783a102e7bfdedcd04fcafcbcdc993c,"ENH: datetime-bday: Cache the business day count in the weekmask in busdaydef
",numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busdaydef.c,numpy/core/src/multiarray/datetime_busdaydef.h,numpy/core/tests/test_datetime.py
68f1cf2216b0b5f61eb900b50e30496c0567b8dd,"ENH: datetime-bday: Create the np.busdaydef business day definition object
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/datetime_busdaydef.c,numpy/core/src/multiarray/datetime_busdaydef.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/tests/test_datetime.py
b90d182e958ca8ab75f33d013c3a500340ac56ae,"ENH: datetime-bday: Get holidays working with busday_offset
",numpy/core/src/multiarray/datetime_busday.c,numpy/core/tests/test_datetime.py
3d8fda55fdc88af22e87300a4f0723dbc19ef3ff,"ENH: datetime-bday: Functions to get and normalize a list of holidays
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/private/lowlevel_strided_loops.h
29a3cebde0cb0c18e4120701e12e244a261a710f,"TST: datetime-bday: Write some tests for busday_offset
",numpy/core/tests/test_datetime.py
db62c35f9f9e9b3fe3d8c6463cab34967024dbf2,"ENH: datetime-autounit: Unit detection working with arrays, fix ufunc reductions

The default NPY_DATETIME type was still in microseconds, because it
wasn't using the NPY_DATETIME_DEFAULTUNIT macro as it should have been.
The reduction functions in ufuncs didn't respect the metadata appropriately.
",numpy/core/arrayprint.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_datetime.py
8a8a84a89fe45187bbfb284f3a0ebdbd52396d41,"ENH: datetime-bday: Connect busday_offset so it can be called from Python
",numpy/core/numerictypes.py,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer.c.src
4fced4a2bb556e1915f035604d65e0f83450c775,"ENH: datetime-bday: Implement the weekmask part of the busday_offset algorithm
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c
e24e9d4b353247bfbef0f8f92b0b3960ce37349d,"ENH: datetime-bday: Add datetime_busday.c/.h, start busday_offset function
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/datetime_busday.c,numpy/core/src/multiarray/datetime_busday.h,numpy/core/src/multiarray/multiarraymodule_onefile.c
c3f963e6d48c9fe06a4face4518dba89e666243d,"ENH: datetime-bday: Remove business days as a datetime metadata unit

The complexity of the operations desired for business days is such
that expressing it as a unit in the datetime doesn't fit naturally.
Instead, an API operating on day-based datetimes appears to be
a superior approach.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
dadf6c21c9880244188a1ebe5ebf55c5bde920f8,"ENH: datetime-arange: Move the unit metadata promotion to a separate function

This cleans up the implementation of arange a lot, and makes the
promotion rules behave consistently.
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
98b4c3812a822669790ad2107ce72de30d4c92a4,"ENH: datetime-arange: Detect the unit when a dtype with generic units is given
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
53ab0c1fd5cc4a4b49e5a6df3450be15289eb6a3,"ENH: datetime-arange: The arange function largely works now
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
5c164119cb133c181890e04329bdadc4a69cd05d,"ENH: datetime-arange: Use the generic units for parameter conversion
",numpy/core/src/multiarray/datetime.c
d6c63e31c8761bff897b4bdf8146aa5704ada0f9,"ENH: datetime-meta: Add generic units as a datetime unit type

This allows integers to convert into timedeltas without binding
to a default unit, so that later when it's combined with another
data type it adopts that type instead of overriding it haphazardly.
This makes things generally more intuitive.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
50261be60dba090c65ee88c1531fb00a532db17a,"ENH: datetime-arange: Filling in the datetime-specific arange function

Here I've realized that default 'microsecond' units isn't very good,
and would like to make a default 'generic' unit instead.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c
487874afd0c8ef3388d39c803cebb9dd8996a28e,"ENH: datetime-arange: Add boilerplate for the specialized datetime_arange
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c
fdb4190225df2cd4f1d966f4086372f0a866e54a,"BUG: datetime: Had int instead of Py_ssize_t for an AsStringAndSize call
",numpy/core/src/multiarray/datetime.c
ab2ac7ca591256e25181ba600b23a0dd155cc1c2,"ENH: datetime-promotion: Unify datetime/timedelta type promotion

Now it always goes to the more precise unit.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_datetime.py
6395979c7bb17dc79b2037884c383b46b75bb67f,"ENH: datetime-autounit: Make 'now' and 'today' only parse with appropriate units

In particular, 'now' needs time-like units, and 'today' needs
date-like units.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
e64b6f1c8275f06c94c0b83f7b5469d7a33cd639,"ENH: datetime-autounit: Automatically detect the unit for scalar construction
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
a1e7be3cb49577d77831e2246f39bb80acd5a22f,"BUG: core: PyArray_NewFromDescr needs to update flags when strides != NULL (fixes #1863

This appears to have been a longstanding bug, but has come to the
surface because PyArray_NewLikeArray uses the function with a non-NULL
strides parameter and is used more frequently then other such uses.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_numeric.py
76ca55f8f399a9eb8081b75c3c9c2ac075a4af9a,"BLD: Fix the date-time related error on 64-bit Linux

This is yet another problem stemming from using the C types as
the basis for NumPy data types instead of sized types.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/ufunc_object.c
f986fd453ff26d6ea69384deb0cb21de04ef2ad8,"BLD: Fix build in single-file build mode
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src
a8274369fcbc3332067a8555782cb40cc4684c83,"Merge branch 'datetime-fixes'
",numpy/core/_internal.py,numpy/core/_mx_datetime_parser.py,numpy/core/arrayprint.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_regression.py,numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py,numpy/ma/core.py
fd9ef72daaa66803fd3109502fb584bbda6f407c,"BUG: Broadcast error message was displaying a garbled shape (fixes #1859)
",numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_iterator.py
a265c2e6304f12eff95417dcccacbad7827e998c,"Merge pull request #82 from m-paradox/generalize_astype

ENH: core: Generalize ndarray.astype to take new standard keyword argumen",numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_api.py
283b2e712bd52e6661f2dc338eb14caae2f5a8da,"ENH: datetime: Finish fixing up datetime printing, add datetime to string function with several options
",numpy/core/arrayprint.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/numerictypes.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
de719936cf64df1a8f1096fb7f3a2be720906da4,"ENH: datetime: Remove TimeInteger, partially fix up datetime array printing

The TimeInteger seemed like the wrong abstraction to me. Timedelta
is reasonable as an integer, and in fact if NumPy supported arbitrary
unit metadata, Timedelta could be removed and that mechanism used
instead. Datetime, however, doesn't represent an integer. Datetime
has no zero (barring big bang, God's creation, or some other choice...),
something which integers definitely have.
",numpy/core/arrayprint.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_arrayprint.py,numpy/core/tests/test_regression.py
681adf030eda8e9097cf53856dda6426b2351485,"ENH: datetime: Got repr and str for datetime scalars working
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
8f35cd72500420512915f75cbefe7dd9fc12a009,"WRN: Eliminate a number of compiler warnings
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
6c2c90c4a3bda6acb89e27d299d312f795e452bf,"ENH: datetime: Eliminate use of npy_timedeltastruct, an unnecessary abstraction
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
bf1e6f3e880362e8efda104b4e35645799232d65,"ENH: distutils: do the correct thing when swig_opts is a string in setup.py

It should be a list, but until numpy 1.5.1 a string was accepted. This broke in
1.6.0, this commit unbreaks things.

Closes #1851.
",numpy/distutils/extension.py
e08fbd04ff4f6aa71d67d722eef4fa290894fd94,"ENH: datetime: Add timedelta -> timedelta scalar casting
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
13bafaa691204ce5ddcfae5a6dd916f06e267b13,"TST: datetime: Extend the tests for the NumPy scalars as well
",numpy/core/tests/test_datetime.py
f2d9812e8e4a8a03f15d65030ca9df4cf30705ff,"ENH: datetime: Generalize the unit parser so datetime scalar can take more general units
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
b0a6e3908da85ff3e83eafbd50dfd1c440e4755d,"ENH: datetime: Fix up creation of datetime scalar
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_datetime.py
7eb97b56efac9d1a64100e46ed5000e12ecb3399,"ENH: datetime: Allow metadata parameter in datetime scalar constructors
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src
653c6454a69f75e13b65f3d9a9eea48dbcbab6c3,"ENH: Remove dead code in PyArray_SetDatetimeParseFunction
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src
3dd1018f1d0a51632d91127276631b32e3fed1e8,"ENH: datetime: Remove logical operations from timedelta

I think the right way to handle the logical operations is to
reduce them to have just a single loop with all booleans, then
use casting to get the inputs to those types. This change requires
adding custom type resolution to the reduction ufunc methods as well,
which is beyond the scope of datetime.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
33babc9304569a7773df31bf5dd265be35ece449,"ENH: datetime: Add more tests and type resolution for datetime
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/tests/test_datetime.py
7d5b355aad0a425c01cbff807e6b1ac742be5b54,"ENH: core: Rename forcecopy= to copy= in ndarray.astype

This makes it match the parameter in the array constructor with
the same meaning.
",numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_api.py
da6391a0590d51d2901e20b97db309aed62a7e83,"ENH: Handle NaT in most operations, some progress towards proper casting rules
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_datetime.py
a17a4996e4ed63d1b855a0917fb5fcdd5855a7d0,"ENH: core: Generalize ndarray.astype to take new standard keyword arguments

These include order=, casting=, subok=. Also added a forcecopy=
parameter to allow skipping of the copy when possible.
",numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_api.py
7444e85abff417512df1ea00a39fce2e3c029c15,"ENH: datetime: Add min/max type resolution, implement tests for datetime ufuncs
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h,numpy/core/tests/test_datetime.py
a3a4e5ac3abd384d9ef50065525dbae2f3358f72,"ENH: datetime: Implement the multiply and divide DATETIME ufunc loops
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
6441c2a788d0cc2a45c5e8a3ef0891ca4e42d96e,"ENH: speed up in1d() in the case of ar1 >> ar2. Closes #1603.

A timing script justifying the switching criterion is attached to ticket 1603.

Thanks to Neil Crighton.
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
7fa5c2a1718a15cf5527a54a9c7fe0d71cf3eabe,"ENH: Add ufunc datetime-aware type resolution functions for multiply and divide
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h
9f2b299f6b1dbc91c254f88ed46075387d9d6181,"ENH: Add custom type resolution function for the subtract ufunc with datetime support
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h
cb21fd9d3f4cbfc326d105ccea9bd603651cf12f,"ENH: Create type resolution function for 'add' with special datetime rules
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/ufunc_object.h
4f2a2d9a1c9cae22c1e48ae3e91e958789fe7bfb,"ENH: datetime: Got datetime interunit comparisons working
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_datetime.py
3456676fd4994a617a09fedb07d64882fa55c653,"BUG: Fix datetime metadata comparison
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c
cbfec8790018608edffb85addd79fc0fea87453b,"ENH: datetime: Some work towards getting datetime casting between units working
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_datetime.py
5bb915791662c79c9403256467affcaadf053173,"ENH: ufunc: Hook up the binary comparison type resolution
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/ufunc_object.c
3729edf672540be7f17b62c4984b49f69212f706,"ENH: umath: Add a binary comparison type resolution function

Also remove some DATETIME ufuncs that didn't make sense (since
the datetime type has no zero, these functions still make sense
for TIMEDELTA).
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c
a12f0d1d2308044e87c9902c78d809a8fcb465f1,"ENH: Generalize ufunc type resolution to be a replaceable function

The datetime64 is a parameterized type, something which can't be handled
with the simple linear list search the ufuncs currently do. This patch
adds a function pointer to the end of the ufunc object (should be
ABI compatible similar to the metadata addition in 1.4.1), which handles
type resolution. This function is set by default to a function which
executes the preexisting type resolution functionality.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_datetime.py
a106c2932c9350420a395bd2681ef8f17e4b1e36,"ENH: datetime: Tests and fixes for datetime64 <-> object roundtripping
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_datetime.py
6b8ad91154f90e26fb3428f023dab98e858c2b72,"ENH: Cleaning up object <-> datetime conversions
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
feb6c2c956b834376e0f1bb752d67ec050fde879,"ENH: Refactored DATETIME_getitem and the function it calls
",numpy/core/_mx_datetime_parser.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py
6d960a6a9c0b428ce7a41f7a235fdac08b957bef,"BUG: Was incorrectly using month and day in npy_datetimestruct
",numpy/core/src/multiarray/datetime.c
81c37aa4ed2784c8ddb2f854c1ae631315554164,"ENH: Refactor datetime conversion from PyObject* into its own function
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
442096d500ba3f52541d6395f228c670dd10117d,"ENH: Got the ISO date parser working in DATETIME_setitem

Also added support for parsing events as an integer after
the time portion of the string.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
44855ca70efd0f2057277d11f0ae9350ab1129cf,"ENH: Wrote (close to an) ISO date parser, partially modified TIMEVALUE_setitem

It turns out that the date-time API for converting the
npy_datetimestruct to an npy_datetime takes just the
NPY_DATETIMEUNIT, not a datetime metadata struct, but
I wanted to commit here as a checkpoint before adding
what's needed there.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
77b9d3e3b23b46709e86d9deb1665794f51f80a4,"BUG: Restore pickling functionality, incorporate Chuck's feedback

It turned out pickle roundtripping wasn't being tested, and the
changes I did broke that. This restores that functionality and
improves some error checking and formatting as suggested by Chuck.
",numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
3071eab84b81ef6e0d157d46404c631547fed763,"BUG: Regression of object <-> structured array data copying (ticket #1838)
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_iterator.py,numpy/core/tests/test_regression.py
4a2ad9eb8224f7356212854bcf905e94abe543ac,"BUG: Iterator reduction buffering bug when the inner loop is bigger than the buffer size (ticket #1837)

The symptoms of this bug were showing up only for a greater number of operands
because einsum runs specialized loops for fewer operands and dimensions.
",numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_einsum.py
19b71adb99587eab6e63509b01ff09c8ca544b5b,"ENH: promote_types applies the datetime promotion rules
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
8727a806b34a412bce086df9288ee18cdafe365c,"ENH: Remove 'den' datetime metadata, move datetime_data to a C function

The 'den' metadata was always 1, except during construction, so there
is no reason for it to exist. The variable is kept in the struct
for 1.6 ABI compatibility, however.

The datetime_data function used ctypes. Moving the function to C is
no more difficult, and a bit cleaner in my opinion.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/numerictypes.py,numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py,numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
6ab9c73290659a94b56a7127805bddd25d734901,"ENH: Start implementing the datetime type promotion rules, clean up datetime

Doing the type promotion rules requires some datetime utility functions
which aren't written yet. In the process of setting the stage for those,
I've moved a number of functions from descriptor.c to datetime.c and
renamed them trying to more descriptively.
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
8949fe24c057973ece3940617d396addbcbf3875,"ENH: Tighten up dtype parsing in general, to catch some more invalid datetime results

There is also a problem with 'O4' and 'O8', which are platform-specific.
I changed it to still accept both, but produce a deprecation warning.
",numpy/core/numerictypes.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py,numpy/core/tests/test_dtype.py,numpy/ma/core.py
7045cbc7e65dc13a1bb0d5ca866d455022e29f24,"ENH: Reimplement datetime dtype string parser (with error checking)

The previous implementation returned the default datetime type in
many cases instead of raising an exception. I also changed the
hybrid C + Python implementation to be purely in C.
",numpy/core/_internal.py,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_datetime.py
25bcc658a2031d709a052cdf62c8329a59b76b20,"ENH: Small changes towards datetime type promotion
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/scalartypes.c.src
026bc920296f8f3fbab22697a92dec8b844de59f,"BUG: fix f2py size variadic macro for Visual C++ 2008 compiler. Also be verbose on unspecified use modules.
",numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py
651a9421b6b869ef07d37336ddef791e96182bb5,"BUG: PyArray_FillWithZero didn't work in the general case

The call to the stransfer function had incorrect arguments. This
didn't show up because all the tests of einsum, the only current
user of the function, produced contiguous arrays which are special
cased.
",numpy/core/src/multiarray/convert.c,numpy/core/tests/test_einsum.py
9fb892241a0e7d23ab317e41fd77882e4a254c1f,"BUG: Fix buffered reduction case in nditer (ticket #1834)
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_iterator.py
cbca2458d9ade3c624d29bb1b27451af0c47372a,"TST: Reduced test case for ticket #1834

The ticket's bug is visible in einsum, but is caused by an error in how
the reduction double loop interacts with buffering in the nditer. This
test case directly tests the nditer triggering the bad code.
",numpy/core/tests/test_iterator.py
5c4efaac91413ef14a558098197f1e85d19309ef,"STY: Cleanup test_linalg a bit.
",numpy/linalg/tests/test_linalg.py
eab959b407e39ef7b35b1f0a90609e462d8527e7,"TST: Add test for QR on empty array
",numpy/linalg/tests/test_linalg.py
1802219aa005d64520f0892fa9ee223f57cfb1ec,"BUG: Add not empty check to linalg.qr
",numpy/linalg/linalg.py
b233716a031cb523f9bc65dda2c22f69f6f0736a,"use np.atleast_Nd() to boost dimensions to ndmin
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
607d2b3bbe984892fbf345788a54eafebdf967ed,"changed ndmin option in loadtxt to return shape (1, X.size) for single-row inputs
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
6df2ac2173331ed91e79e69bb5caea07c12f410d,"BUG: Fix the order of declaring variables in f2py generated code. The bug was noticable with ifort but not with gfortran.
",numpy/f2py/func2subr.py
1f2e751b7752d1007e0e83d6d881b6d534f4f15e,"DOC: Updated f2py size support note.
",doc/release/1.6.0-notes.rst
a859492c7b07dac0a56d9a08d6739e006a528f87,"BUG: Fix two argument size support for Fortran module routines. Reverted size-to-shape mapping patch and implemented two argument size function in C.
",numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/tests/src/size/foo.f90,numpy/f2py/tests/test_size.py
f393b6041c0d124b0372c494bab7de8dbe0cd422,"BUG: Fix assumed shape support for module routines.
",numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/tests/src/assumed_shape/foo_mod.f90,numpy/f2py/tests/test_assumed_shape.py
516d50cf42833c34ca617c2f09e0e779c6b93665,"BUG: Cleanup in PyUFunc_FromFuncAndDataAndSignature error case.
",numpy/core/src/umath/ufunc_object.c
ded703d47944a95c370eb1ecf518034162a89394,"BUG: Fix a bug where memory was being read after being freed.

On my system (Python 2.7, RHEL5), the call to func.__name__
returns a temporary Python string object with only a single
reference.  Dereferencing it before copying out its contents
results in reading freed memory.
",numpy/core/src/umath/umathmodule.c.src
26c957b0d7040e8a74ceb8d597de40f55d521aa8,"BUG: Fix reference counting leaks in C-based multiarray_tests
",numpy/core/src/multiarray/multiarray_tests.c.src
279764727e53c8f72143313743f5e49fb8d29308,"BUG: Fix memory leak in UMath_Tests_test_signature test
",numpy/core/src/umath/umath_tests.c.src
5626f31cbf7eaa56640a8c82fa7f741cf44b8520,"BUG: Fix memory leak in f2py_rout_wrap_call test.
",numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c
1611da9123c88714713e6d7c65be88c42cb65d1b,"BUG: Fix 1.6rc1 crash in result_type on 32-bit Windows MKL builds

Thanks to Christoph Gohlke for tracking down the error. It appears to
stem from the C preprocessor making the use of an undefined symbol
become arbitrary behavior rather than a compile error.
",numpy/core/src/multiarray/convert_datatype.c
26405fdf1ac0011d43d8904d88fe0296a92e2b42,"TST: fix test due to recent change for large arrays (ValueError / MemoryError).
",numpy/core/tests/test_multiarray.py
5aa360321321c69d8052ef0718721baae3587900,"DOC:BUG: fix percentile examples. Closes #1813.
",numpy/lib/function_base.py
99924798b0683a14d96d8db3430babc0a70fd52e,"BUG: Remove buggy test for error trying to allocate too large array.
",numpy/core/tests/test_regression.py
f7eda58cb3e603219c5faf628810a7e980ae01ea,"TST: fix test for too large array, raises ValueError, not MemoryError.

Closes #1811.
",numpy/core/tests/test_regression.py
1c24f2d1cf26aa7e79ddc4bacfc7ad8790b8707a,"TST: fix forgotten import in core/test_regression.py
",numpy/core/tests/test_regression.py
433b02a909c6ada47c721088d1fc6df67bab8ac8,"ENH: Put line ending on message to stderr.
",numpy/__init__.py
a994cf3ea84a7a29d46f30dbbc3f2b5245926d5e,"BUG: Make some variables npy_int8 instead of char.
",numpy/core/src/multiarray/nditer.c.src
cc0c0cbde7fac047bdbebd33db8508fd07665f6d,"BUG: linalg: Update the rwork size in the call to zgesdd to reflect a documentation bugfix in Lapack SVN revision 729.

See http://icl.cs.utk.edu/lapack-forum/viewtopic.php?f=2&t=1779
",numpy/linalg/linalg.py
9752349d0e6f21298b99d2175e9a7846c0589c91,"DOC: Add note about the danger of integer overflow when computing array
sizes by multiplying the dimensions together.
",numpy/core/src/multiarray/ctors.c
d8de71d14ce7ac08a51d06623437f1df35035a5e,"ENH: Ticket #1218, allow use of custom formatters in array2string and
set_printoptions. Add tests for the new functionality.
",doc/release/2.0.0-notes.rst,numpy/core/arrayprint.py,numpy/core/tests/test_arrayprint.py
be364f74946c8fb4eb8486c51c96f70642175829,"BUG: Switch char to npy_byte/npy_ubyte in min_scalar_type
",numpy/core/src/multiarray/convert_datatype.c
c518d07e83a2c4889e5520b045b29089daebd11a,"TST: Try to make the test for checking array size from dimensions a
bit more successful.
",numpy/core/tests/test_regression.py
a2e81731463448d87fb8c4282595a386532f3aee,"BUG: Fix regression in checking array size from dimensions.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
ad76bb546940dfd4f95adb3d01e6742a34fb1de1,"BUG: Fix another cast to char.
",numpy/core/src/multiarray/nditer.c.src
5eae1f468fdcd1654e985ebfe5cd37479d41a06c,"BUG: Fix signed char assumption in einsum label parsing
",numpy/core/src/multiarray/einsum.c.src
566ace25f63985e0739bcc600c35336d3c66508c,"WRN: Fix gcc warnings (4.6.0 with ""-Wall -Wno-unused-function"")
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/ufunc_object.c
7f5130a7ac41e93066f60d80203a0b8ea675c0c9,"STY: Make include flag name match file name.
",numpy/core/src/multiarray/nditer_pywrap.h
4ec659cdff4a87f7834495f25d20811c5151e6fe,"BUG: Change some char variables to npy_int8 so that they are always signed
types.
",numpy/core/src/multiarray/nditer.c.src
dea352cc6cde131072e20e65d287a99ce949a3ce,"BUG: ticket #1805, replace type char by signed char for tables.
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h
700dc6972245735e183d62f35f5dcc42960ff7e7,"BUG: PyArray_FromString failed to disallow object arrays
",numpy/core/src/multiarray/ctors.c
deb290356248b39176518b2b22af743e11e91496,"STY: Add comment about errobj reference ownership
",numpy/core/src/umath/ufunc_object.c
0a0ff695f9806e3f4475456bf70f1a789aee7a57,"BUG: Fix memory leak in reduction ufuncs -- the error object was not being dereferenced in the non-error case.
",numpy/core/src/umath/ufunc_object.c
fbdc4b737be69ab002957e5bfb0cea9d8a893788,"TST: Add some specific desirable type-promotion use cases to the tests
",numpy/core/tests/test_numeric.py
58b77b2268c36c4617fb7f1f4b1227eb347d2d5b,"DOC: Document the new keyword arguments for ufuncs
",doc/source/reference/ufuncs.rst,numpy/add_newdocs.py
d97a5e37b2085db9558ff64716e29e6cbf791a4c,"DOC: Improve the documentation about type promotion
",doc/source/reference/c-api.array.rst,doc/source/reference/ufuncs.rst,numpy/add_newdocs.py
973b112dfde7e1263914b5b8891b9833af80441b,"BUG: Fix type promotion regression for ufuncs (Ticket #1798)
",numpy/core/src/umath/ufunc_object.c
492ae119cd4a5b57065cf15c4bb05d8730ce6d36,"BUG: Fix type promotion regression for the result_type function (Ticket #1798)
",numpy/core/src/multiarray/convert_datatype.c
ffa8786846f9ec604a9f17d6bff0bebbeb1fdd3f,"TST: Add tests for scalar*array type promotion

In particular, where the kind of the scalar is greater than the kind
of the array.
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py
137ec8ec96434da6449d9c8e0303bf027f3eef00,"BUG: fix random.test_noncentral_f issue under win64 + MSVC9. Closes #1801.

Thanks to Christoph Gohlke for the patch.
",numpy/random/mtrand/distributions.c
9fc9db1df4df31c12c3f758bea8c6465313d9aef,"BUG: numpy doesn't compile anymore with ifort using -O3, changing to -O1.

Closes #1378. Thanks to Burkhard Neinhues and Christoph Gohlke.
",numpy/distutils/fcompiler/intel.py
cd6d53ffc62562e3627b991a376512a4c1b78e1a,"BLD: raise a clearer warning in case of building without cleaning up first.

Occurs only on Python 3.x when a version.py file is already present, due to
copying the whole tree into build/pyk3/.
",setup.py
f98ffb560c54a804036dbdb04d21090c22853dc1,"TST: fix regression on 64-bit Windows.
",numpy/core/tests/test_regression.py
7ad8fefb71eedbccff654ec8dc40c06b89af8b9b,"ENH: do not make backup copies when running 2to3.

Copied from scipy commit f7dae4f2.
",tools/py3tool.py
fe3852fe7c48c6dbec508b4f97c47b76c246090a,"TST: test for different line endings in genfromtxt input file. Note
that the test for '\r' is skipped for python 3k since it is known to
fail.
",numpy/lib/tests/test_io.py
966038e30b21e62ab7729527f3f0bba6e18eb805,"STY: Replace assert by assert_ in tests. There remain 124 uses of
assert in non-testing files that should be checked for correctness.
",numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_function_base.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_shape_base.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_misc_util.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_arrayterator.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_stride_tricks.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_utils.py,numpy/linalg/tests/test_linalg.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/testutils.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/matrixlib/tests/test_multiarray.py,numpy/matrixlib/tests/test_regression.py,numpy/testing/nosetester.py,numpy/testing/utils.py
4cb2eb4df95740661d7f1944451d2c1cb3482bcf,"BUG: Fix Python version comparison in last patch
",numpy/core/include/numpy/ndarraytypes.h
49882c43826029572c6a1abc80c983803298696f,"BUG: Work around the fact that Python 2.6 doesn't support %lld in PyString_Format

See ticket #1795.
",numpy/core/include/numpy/ndarraytypes.h
fd2630366581049af6c9acc4b41315363b47b55a,"STY: Fix up some remaining old-style exceptions.
I think that is the end of it.
",numpy/core/_mx_datetime_parser.py,numpy/core/getlimits.py,numpy/core/machar.py,numpy/core/numeric.py,numpy/distutils/mingw32ccompiler.py,numpy/lib/_datasource.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/ma/core.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/testing/nulltester.py
b2793ea74ea05bc64288287dd2efbe0dcae99534,"STY: Fix up some two line old-style exceptions.
",numpy/core/machar.py,numpy/core/memmap.py,numpy/core/records.py,numpy/ctypeslib.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/linalg/linalg.py,numpy/oldnumeric/mlab.py
e1a9692cc36e4353798a332c834fce7aa6cf9b54,"STY: Update exception styles, trickier ones.
",numpy/core/_mx_datetime_parser.py,numpy/core/getlimits.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/src/multiarray/testcalcs.py,numpy/ctypeslib.py,numpy/dual.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/lib/npyio.py,numpy/linalg/linalg.py,numpy/ma/mrecords.py,numpy/matrixlib/defmatrix.py,numpy/oldnumeric/ma.py
cfd766456368777bcb0d5edabd360b3aeb02d3f8,"STY: Update exception style, easy ones.
",numpy/core/defchararray.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/ctypeslib.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/fft/fftpack.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/type_check.py,numpy/lib/user_array.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/matrixlib/defmatrix.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/random_array.py,numpy/polynomial/chebyshev.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/testing/nosetester.py
a4100ba6c440bdf2a2b3cfc31995eb5e009846ee,"BUG: Fix INTP printf formatting string on 64-bit windows
",numpy/core/include/numpy/ndarraytypes.h
85ed5d0cdf876aa2de9c30a68f9617c8b632f34a,"STY: Change one more old-style class to a new-style class.
",numpy/core/tests/test_ufunc.py
2812406e48a7ffa011dc60ed37dda6131c08ae3d,"STY: Replace remaining old style classes with classes subclassing object.
",numpy/_import_tools.py,numpy/core/code_generators/genapi.py,numpy/core/getlimits.py,numpy/distutils/environment.py,numpy/distutils/misc_util.py,numpy/lib/_iotools.py,numpy/linalg/lapack_lite/make_lite.py,numpy/ma/timer_comparison.py,numpy/numarray/numerictypes.py,numpy/testing/print_coercion_tables.py,numpy/testing/utils.py
06dc70263debc5fbbb3e58592c91ca24766b3e3a,"STY: Replace old style classes in tests with classes subclassing object.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_callback.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/linalg/tests/test_build.py,numpy/linalg/tests/test_linalg.py
cff9ccb8340d7f4efcd721e1fd9ce36be27e337d,"BUG: Workaround for the fact the Python 2.4 doesn't accept 'Ub' as a file
mode, but does accept 'rbU'. Note that with either of these modes Python 3
fails to split files with '\r' line endings on linux. This is either a bug
in Python 3 or something that requires more extensive modifications to
genfromtxt. Because genfromtxt now accepts generators it should be possible
to write a generator that opens files in text mode and encodes the lines
as byte streams, and this should provide a workaround.
",numpy/lib/npyio.py
b48b2d5d73dbeef466d6c0a8b41d65d844d7b264,"BUG: Python 2.4 doesn't accept the construction class foo():
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_scalarmath.py,numpy/lib/tests/test_twodim_base.py,numpy/linalg/tests/test_linalg.py
3c338cbb2dbc8e6efd4025371a9baadd1ca9a147,"moved import statement in npyio.py for ease of reading
",numpy/lib/npyio.py
ce0019c3c0ce3f5afe6eaf6326cd13093d0644e2,"BUG: ticket #1071, fix loadtxt to handle tab delimited data with missing
values in the last column and add test for same.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
a528b98550f9e411342659069c5ac8fb7bca7bf3,"ENH: Let genfromtxt accept generators as text sources. Add test
for that case.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
9445a3d284c5cbc756fee1e6c313a114e937ddea,"BUG: Fix strings for Python 3k.
",numpy/lib/tests/test_io.py
d51f8d8ca48f51892a55cc41360625bdf9884997,"BUG: Fix integer division for python 3k.
",numpy/core/tests/test_regression.py
75bbdce22b0ed04f12fcd54a8b1e929916ebeb82,"BUG: fix fromstring segfault with dtype=bool. Closes #1689. Thanks to Justin Peel.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
0a6be6e67b3f63d298fc8af60fcfe39dfbc6a6c3,"ENH: ticket #1616, let loadtxt accept generators in additions to
file names and file like objects. Add test for for new functionality.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
6b6edfd702a0782ff665d009490b02538a5e0b28,"BUG: fix tests in test_linalg.py. Do not subclass from TestCase.
",numpy/linalg/tests/test_linalg.py
841a9a84ee42f06d115be50cbc4847539dd34857,"BUG: fix test issues in test_twodim_base.py. Simplify and make tests run.
",numpy/lib/tests/test_twodim_base.py
0d6fee5295a866c9c062a04d33a4a17b4a7781fe,"BUG: fix test_scalarmath.py, don't use TestCase subclass for geenrator test.
",numpy/core/tests/test_scalarmath.py
7aa887c0cee8cc6704615d16ee1e7f47753fe9c6,"BUG: do not subclass TestCase for generator tests. Runs ~80 more tests now.
",numpy/core/tests/test_multiarray.py
7497d609228dd3ae0ad8b76ba712031c1b4712d8,"BUG: fix allclose to work for scalar inf. Also actually runs tests.

Tests were not run before because the allclose test class was a subclass of
TestCase and used generators. This is not supported by nose, tests will be
skipped.

Also changes plain asserts to assert_().

Closes #1672. Thanks to Justin Peel for the allclose inf fix.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
f944e32ff172250045f3ca6f819bd96fbd3c6ebc,"TST: silence some harmless test warnings introduced by 65b77ee9.
",numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py
a311969ea2f47b486da14da99a26e72c12a0c20f,"ENH: add ndmin keyword to loadtxt. Closes #1562.

Thanks to Paul Anton Letnes and Derek Homeier.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
e340e665adba35a5aba7fac09e28ac1f2e4d949b,"ENH: return empty array from loadtxt for an empty file. Closes #1752.

Thanks to Paul Anton Letnes and Derek Homeier.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
a15b605771903c85a103dc0fcad423e9a9eb3a98,"TST: add test for ticket #1458.
",numpy/lib/tests/test_io.py
3d612274c0e6e8ed0dbbb98ca78fffdf67606b02,"ENH: ticket #1458, make loadtxt(..., unpack=True) unpack structured array
fields.
",numpy/lib/npyio.py
9b354f4dc00e3aef4cfceae71be60b1dc60a1927,"TST: Add test for ticket #1559.
",numpy/ma/tests/test_regression.py
abaaeec82a2a7faa4e27e006df1150626aaa6db2,"BUG: Fix atleast_1d and atleast_2d to work with masked arrays.
",numpy/core/shape_base.py
49320e87e06c0c8ef4462f7adab020348896e1c9,"STY: core/buffer: handle also cases where descr->subarray->shape is not a tuple

Currently, Numpy does not create such dtypes, but this is a sanity check
for 3rd party code that might.
",numpy/core/src/multiarray/buffer.c
7b39b9e5ef6d21a199ec95a27ed19b8b1a34bce1,"BUG: core/pickle: use only non-interned strings as buffer in unpickled arrays (#1708)

Using strings as mutable buffers is ""evil"" (since strings are
immutable), but it should ""work"" for non-interned strings.  On Python 3,
bytes are never interned, and so should also work.
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
4a43e7449e6251a62338f3b09dc65b568cc2674e,"STY: core/pickle: fix minor refcount issues in array_setstate
",numpy/core/src/multiarray/methods.c
5e8e8eda6527e7f8765e905b221bf4477d5f446c,"BUG: ticket #1428, allow int64 and uint64 integer types to be specified in
genfromtxt.
",numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py
5d5266cbf90c352251ccf5d72a2a2eba7fe235b5,"BUG: ticket #1565, fix conversion of int64 and uint64 types by loadtxt.
Add some tests for these types.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
e05da9e451c0dcbc892423601edd7c354117456e,"WHT: Cleanup trailing whitespace.
",numpy/lib/_iotools.py,numpy/lib/financial.py,numpy/lib/polynomial.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py
f9c7bde68655de06546f5c8dba30314888e409cc,"ENH: Changes (and tests) to allow exporting half-floats through the buffer interface. (#1789)

Code:
Added NPY_HALF to switch (descr->type_num) in _buffer_format_string.
Added 'e' keys to the _pep3118_native_map and _pep3118_standard_map.

Tests:
Added entries to the generic round-trip tests.
Added specialized half-float test that round-trips example values from the wikipedia page.

http://en.wikipedia.org/wiki/Half_precision_floating-point_format
http://mail.scipy.org/pipermail/numpy-discussion/2011-March/055795.html
",numpy/core/_internal.py,numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
65b77ee94131bf8365d8a6dba6fa19da1269339c,"BUG: core: make complex division by zero to yield inf properly (#1776)
",numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py
b8101c94e26ee21d3bdc49270efe14924ca08078,"BLD: do not install swig/cython/pyrex files. See #1791.

This is not a complete fix yet. Should be handled correctly in binary
installers.
",MANIFEST.in,setup.py
250245d49a62d9f26e755f1ba7b213f8cab2008c,"DOC: improve clarity of window function docs.

Thanks to Yury Zaytsev for the suggestion.
",numpy/lib/function_base.py
857e1917ec45413c45dc76682fc0c1b88cd60fc6,"DOC: Changes required to the configuration to start building docs with matplotlib's plot_directive.  Requires that matplotlib have the new ""merged"" plot_directive. (#1074)
",doc/source/conf.py
1dcf0c96df5e2f7b861c6054ead2ad7ebc77aa79,"BUG: handle empty inputs in cov and corrcoef. Closes #1773.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
89db53b1f437d846829a3c387ea61001b3b66383,"BUG: core/buffer: fix another offset counting bug in pep-3118 format string generation
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
f04bacb635ff9b90e8be6bb66ecd55b56b857073,"DOC: Document the changed default error handling for the 1.6.x release.
",doc/release/1.6.0-notes.rst
d44e74df3d31dfcd37eeef11bf5af14189c42433,"DOC: Remove the advice to 'import scipy as sp' from the documentation.
Correct a statement about how doctest namespaces are initialized in scipy.
",doc/HOWTO_DOCUMENT.rst.txt,doc/TESTS.rst.txt,doc/example.py
99836f38289ed77b635a066e0ce4c7fa8aa5848d,"Merge branch 'warnings'
",numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/tests/test_numeric.py,numpy/doc/misc.py
23ccc33c4f70a25ad872617995d359bd59a4bb7c,"BUG: Move the default errstate test over to the right place. Fix the seterr test case to take the new defaults into account.
",numpy/core/tests/test_errstate.py,numpy/core/tests/test_numeric.py
7129ec3ff04e3e598bc18c2323daec78c5521770,"BUG: Add test for the default error state.
",numpy/core/tests/test_errstate.py
dc22394efedc3dafff45dd857b96398f2f56f625,"ENH: Change the default error handling to warn instead of print, except for underflow, which remains ignored.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/doc/misc.py
ef46a0910a9233b485a3b1313d2eedc217d3981b,"BUG: core/buffer: fix bug in pep-3118 format strings for aligned structs

The offset counting for struct fields occurred in a wrong location.
Tests added.
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
fdf84d9d08b8001276e7cf4dead49e1efa91906b,"BUG: make histogramdd work with infinite size bins. Closes #1788.

Also add more informative error messages for wrongly specified bins, for both
histogram and histogram2d/dd.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
689b68c3b194019700c4de7591043fcfdab1cec6,"TST: lower precision for one more test in random. Closes #1768. Again.
",numpy/random/tests/test_random.py
7134a93f3d890eabd39eca1a35789ed963b665ca,"BUG: fix f2py bug in generating interfaces for assumed shape support as an addition to 4d43ec5.
",numpy/f2py/crackfortran.py
706c9b6553f0f9143a9854db7f25d7de8bf2598d,"Merge branch 'test-genfromtxt-fname' of git://github.com/matthew-brett/numpy into test-genfromtxt-fname
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
51a1895234b25b8bf0ace24b8ee881a91c39601c,"BUG: lib: catch SWIG NameError in lookfor (#1704)

Thanks to sebhaase for the patch.
",numpy/lib/utils.py
354d7a311ef9a6dfd4695147c644ff0294c8c4ee,"BUG: open genfromtxt file as binary; add test for filename use
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
3ebc34878f3fd1200305f06ed0d6ba1a3529b457,"DEP: deprecate normed kw in histogram and restore its old behavior. Introduce
density kw.

This reverts part of the following commits:
    3743430e
    400a2a67
    3743430e
Behavior for normed keyword is again the same as it was in Numpy 1.5. The
desired behavior (probability density) is implemented by the new density
keyword, which reflects the functionality better than ""normed"".

For a discussion on this issue, see the Numpy mailing list thread started on
Aug 6th, 2010.
",doc/release/1.6.0-notes.rst,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
d8b1b5a3a0e6a80256e1be3e652ed84a73432b24,"DOC: correct note about correspondence vstack and concatenate. Closes #1446.
",numpy/core/shape_base.py
2788f53c283d212030dc2fdaa97d494cabf4a640,"ENH: distutils: provide better support for C++ code on HPUX. Closes #1383.
",numpy/distutils/unixccompiler.py
135e9418610241dc66ce3fefe25322d14a913954,"BUG: distutils: update HP compiler flags. Closes #1377.
",numpy/distutils/fcompiler/hpux.py
a3889707c684bc3d4f885927c7d4692147be7e86,"TST: tests for deprecated decorator.
",numpy/testing/decorators.py,numpy/testing/tests/test_decorators.py
dce8638a727ea42ec97a407209ba0a722bf76380,"BUG: make np.median() work for 0-D arrays. Also add tests. Closes #1747.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
a6c2ac7f6312b3e8e553c548f2939405e16e44a6,"DOC: correct signature and description of ndarray.getfield.
",numpy/add_newdocs.py
4b45c32ec108bd197e76697088079c96cf106902,"TST: add some tests for array2print.
",numpy/core/tests/test_arrayprint.py
1ad0311a1d3d4b30c844cf2170d9a910b0e5c5ee,"BUG: make correlate/convolve work also with unicode mode arg. Closes #1705.
",numpy/core/numeric.py
c2081aec5dc551356f52f4246606101ab38c4b10,"DOC: add deprecation section to docstandard. Closes #1501.
",doc/HOWTO_DOCUMENT.rst.txt
c343611d512b62964d6fc74fbe4e589b92260e51,"DOC: update class method docstring section of docstandard. Closes #1165.
",doc/HOWTO_DOCUMENT.rst.txt
9c570e8a220087aa3677c9e5f75d6c3489821373,"DOC: update References section of docstandard. Closes #1509, #1524.
",doc/HOWTO_DOCUMENT.rst.txt
b11ae17a3e3e0ef1861e95ea67b00ecb838804e5,"DOC: add description of how to document modules to the doc standard.

Closes #1280.
",doc/HOWTO_DOCUMENT.rst.txt
99fc1281d0401b2284aeb69359c6b2ed739ade7d,"TST: core: add more tests for struct array field names
",numpy/core/tests/test_multiarray.py
4d43ec5be7aae33b058ab2f05fc811fc47bb7cb9,"BUG: fix f2py bug in generating interfaces for assumed shape support.
",numpy/f2py/crackfortran.py
96ac357b2891cc87e342cfc986be4025410b295b,"BUG: Fix f2py function wrapping (assumed_shape test) for gcc 4.5.x.
",numpy/f2py/func2subr.py
225f28c7cffc2ec4914cf34b9abf6c121cb990a8,"BUG: f2py fix to scan literal strings with ! character, fixes ticket #1228
",numpy/f2py/crackfortran.py
f2419c0e5781b3e6b2c8380e71dbbc5ec40781e7,"Merge branch 'master' of github.com:pearu/numpy

* 'master' of github.com:pearu/numpy:
  BUG: fix f2py bug of converting an expression to variable, fixes ticket #1614.
  BUG: fixing selected_real_kind for PowerPC
"
2af2e60fb488dfe251112d139446da61d44e77ab,"ENH: Make all histogram functions work with empty input.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_twodim_base.py
87e12c1dfc90fae5d0a2576add0c1879df815740,"BUG: Py3K: fix setup.py to work from a released tarball.

This was first fixed in commit 0131218 (but that broke the paver script), and
broken again in commit 13212a5d. Should now work in both cases.
",pavement.py,setup.py
7d436cc8994f9efbc51289fdf6c8c520b92e179c,"TST: Python 2.6 doesn't implement complex.__format__, so skip the tests there
",numpy/core/tests/test_print.py
10db2599077bda2d24d25e6aa682f6b96e339161,"TST: Add tests for array str formatting of complex values.
",numpy/core/tests/test_arrayprint.py
664efe2734a800c2e62ac28577234f24420f5e0b,"BUG: Fix str formatting of complex special values and clongdouble complex.
",numpy/core/arrayprint.py
88e8c15841538acb6fe42ebdbeaa93f57af6b27f,"ENH: Add scalar support for the format() function introduced in Python 2.6 (#1675)
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_print.py
73ea5e7be76d77b6ac67b772b8770b0b12d67722,"BUG: PyArray_CopyAndTranspose function was buggy (#766)

I don't expect fastCopyAndTranspose to be able to be much faster than
using .T.copy(), since .T always returns a view. Thus, this function
implements .T.copy() in C as a replacement for the buggy code.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_api.py
cf42ec0dc81ad4e7b1a1929d12518297defebed7,"DOC: lib: point the reader towards masked arrays when there is missing data
",numpy/lib/function_base.py
ac2c160c5b0ad5a420543b94a1896f5e45f67b97,"DOC: Add a note about None values in the average documentation (#1180)

It was suggested in issue #1180 to add an ignore_None= parameter to
average, but I think this does not fit cleanly into NumPy, and rather
educating users about Python list comprehensions is better. This is
an attempt to do that.
",numpy/lib/function_base.py
fb486c6a40fee977314b5a0326aab94ed52851e6,"BUG: distutils: change compile flag on AIX from -O5 to -O3. See #1261.
",numpy/distutils/fcompiler/ibm.py
d4ee39f30113ec7ed714b425878d2441257644a5,"BUG: fix f2py bug of converting an expression to variable, fixes ticket #1614.
",numpy/f2py/crackfortran.py
f790773334d0011b3c853e3de13313fa38b7a40d,"Merge branch 'master' of github.com:pearu/numpy

* 'master' of github.com:pearu/numpy:
  BUG: fixing selected_real_kind for PowerPC
"
e46ed8fa3a58147c725660b2b83b5042da08a209,"BUG: fix f2py bug of converting an expression to variable, fixes ticket #1614.
",numpy/f2py/crackfortran.py
2e96d91570637f9a118699798c6b496cb3c08a8a,"BUG: fixing selected_real_kind for PowerPC
",numpy/f2py/crackfortran.py
37c338d7f1fa3094e54c8a03817869ac9c5919cb,"BUG: fixing selected_real_kind for PowerPC
",numpy/f2py/crackfortran.py
c31bcc6a41752b26d986fc2698382df9683abdea,"BUG: Array shape formatting strings were wrong in the iterator (#1780)
",numpy/core/src/multiarray/nditer.c.src
883205409195195d33877a787fd3220fb0b0db1e,"TST: Add test for ndarray.flat modifying data (#1608)

Something appears to have fixed this issue, so creating a test
for it.
",numpy/core/tests/test_regression.py
89292bfc866f5b45b57ab634daa82b841b131915,"ENH: Speed up tolist() by removing intermediate temporary allocations (#1779)
",numpy/core/src/multiarray/convert.c
3d00f4a5c5cfc5dc089a3f3625d12ef75ded14ed,"DEP: change behavior of out-of-order selection of recarray fields by name.

This was deprecated in Numpy 1.5, see ticket #1431.
",numpy/core/_internal.py,numpy/core/tests/test_records.py
411adbafb0bebf3d6bff32dd947661eea874cf58,"TST: change assert to assert_ in core/tests/test_records.py
",numpy/core/tests/test_records.py
1049f2af91064f8ce9d365d09afffb316625b4c8,"BUG: fix indentation issue in distutils/intelccompiler.py
",numpy/distutils/intelccompiler.py
c0dcaf415f7655aeeb9c78decf82eaeec4d34120,"BUG: version string construction was not working with released=True
",setup.py
feed7055385b9b90675993819d6446b3b26c64ea,"DOC: The nditer exposure wasn't linked correctly
",doc/source/reference/routines.indexing.rst,doc/source/reference/routines.rst
b8042db4ccdc4d5eeecb046764b81d2bc3fe4a51,"API: update C API version hash after rename of nditer.niter -> nditer.nop

This is the version for 1.6.0b1, so should not be changed anymore. If any more
changes, up the version to 7.
",numpy/core/code_generators/cversions.txt
ac3cba3146a7acd1b0b5bff11e51f70f853a3813,"DOC: Slight improvements to the Python nditer exposure
",numpy/add_newdocs.py
3692b16d8a844c0c042af7c27e7cef93170ea37d,"API: Rename 'niter' to 'nop' in the nditer

This name was chosen partially based on the previous multi-iter,
which stored an array of iterators, so 'niter' made sense. In the
new nditer, it doesn't, and 'nop' for number of operands seems better.
",doc/source/reference/c-api.iterator.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c
d1506b4b72966ed23caa03ecadc087a848cdcfe6,"DOC: slogdet was added in 1.5.0.
",doc/release/1.6.0-notes.rst
1fe81365e542dd9c20c273ddf1a1c723d6ce7008,"REL: 1.6.x branch created, master open for development of Numpy 2.0
",setup.py
8f860dcb7a258f23f806fed7889464a838b2e606,"DOC: Fill in more of the nditer docs
",doc/source/reference/routines.rst,numpy/add_newdocs.py
56a6070653dab9a788dd4bebd182e1d3686947e9,"DOC: document nditer and its methods. Some blanks left to fill in.
",numpy/add_newdocs.py
cf4a16e18b469ef59a9f7146ffa80628843693f2,"DOC: Change newiter to nditer in new iterator NEP.
",doc/neps/new-iterator-ufunc.rst
5ee9804dd299899a75659aea9b989a0a3ddf996e,"TST: lower precision of lognormal test a little more. Closes #1768.

Thanks to Mark Sienkiewicz for testing.
",numpy/random/tests/test_random.py
aada93306acfb4e2eb816faf32652edf8825cf45,"ENH: Add 'subok' parameter to PyArray_NewLikeArray, np.empty_like, np.zeros_like, and np.ones_like

This way, the sub-type can be avoided if necessary. This helps mitigate,
but doesn't fix, ticket #1753, by allowing ""b = np.empty_like(a, subok=False)"".
",doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py
c1bec1ddc38648b415df4387e4172e32c29a1d94,"BUG: Fix ticket #1770, segfault with python 3.2 structured array
non-existent field.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_regression.py
c010f2ff9b520d1fdd7a97b14757e2e3f314cee0,"Merge branch 'deprecate'
",numpy/polynomial/__init__.py
1f862c760544f5ef6c94b8cfac86c91f4d850138,"DEP: Deprecate direct import of implementation functions.
",numpy/polynomial/__init__.py
7ee96bd982f98392f577ab50abd42c51de4550d2,"API: Rename 'coords' to 'multi-index' in ravel_coords and iterator API
",doc/release/1.6.0-notes.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/routines.indexing.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_iterator.py,numpy/lib/index_tricks.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_index_tricks.py
2411b7b0f1bee1472db260728de38f0dba4baf7b,"DOC: fix some reST errors in core/defchararray.py
",numpy/core/defchararray.py
cb063b26ff6aa7ae6127d763d97e737b5bc819ed,"TST: Some tests in random module were failing on RHEL4 due to too high precision.

It is not yet confirmed this is the right precision, since I don't have an
RHEL4 test machine. Changing this anyway for 1.6.0 beta 1.

See ticket 1768.
",numpy/random/tests/test_random.py
f089476bf5740df56af4ed31a3a5f6c8368563f8,"DOC: Document the addition of the new polynomials in the release notes.
",doc/release/1.6.0-notes.rst
cd97607e2f14ac5489215549cb7ff7123394386f,"Merge branch 'poly'
",numpy/polynomial/__init__.py,numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/legendre.py,numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
c2e4c9c034a3446de643fb4f8e96d21249abb7b9,"BUG: Fix valueerror typo.
",numpy/polynomial/hermite_e.py
a9f4f3ce9c4860b380294097b29af8efeeba6c97,"DOC: Add examples for hermite, hermite_e, and laguerre polynomials.
",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py
782ba88d601ffe0f2f8373b01279d362d402de8b,"DOC: BLD: fix some doc build warnings.

Word of warning: do not use Sphinx 1.0.7 (latest release), its autodoc
extension is broken. 1.0.4 works fine.
",doc/source/reference/arrays.scalars.rst,doc/source/reference/routines.char.rst,pavement.py
6880bea7cb6c8b7667a0777c1ca874d989b147bd,"STY: Rename NPY_ITER_NO_INNER_ITERATION to NPY_ITER_EXTERNAL_LOOP

It's a little bit shorter, and more intuitively expresses what the
flag does.
",doc/source/reference/c-api.iterator.rst,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/nditer.c.src,numpy/core/src/multiarray/nditer_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_iterator.py,numpy/lib/src/_compiled_base.c
6c7d3dd3fda1602a30a0fd44fa9a35494e40b045,"BUG: Another iterator broadcasting error message had a reversed shape
",numpy/core/src/multiarray/nditer.c.src,numpy/core/tests/test_iterator.py
2b9dfd49218c553fc22ba8665a5e9034a36777f1,"STY: Rename source files for the iterator to nditer_*.*
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/{new_iterator.c.src,numpy/core/src/multiarray/{new_iterator_pywrap.c,numpy/core/src/multiarray/{new_iterator_pywrap.h,numpy/core/tests/{test_new_iterator.py
37539398cbdb27cd4caebd58cf22a77ca9153416,"ENH: Rename 'np.newiter' to 'np.nditer'
",numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
52edb94fd5228b0d69ebc74ea963ae09ffb10b6f,"DOC: Add info about iterator, new functions, and C API additions to release notes
",doc/release/1.6.0-notes.rst,numpy/add_newdocs.py
becc1257b87b4d4138e33f67a2bd3db872c11848,"ENH: Import Hermite, HermiteE, and Laguerre into package namespace.
",numpy/polynomial/__init__.py
0a7870dd85f4dbbf8e6a3544856d8b752e02ac6d,"ENH: Change test_trimdeg to test_cutdeg to match method name.
",numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_laguerre.py
6799e995afbcd790e6d746c16715384560cbd30d,"BUG: Fix wrong target values. Change Hermite_e to HermiteE, rename
test_trimdeg to test_cutdeg to match method name.
",numpy/polynomial/tests/test_hermite_e.py
8ddfe35f050a0b3a5daf0b320bec8f7f373a54a5,"BUG: Fix hermemulx, rename class to HermiteE, and move __all__ after
imports.
",numpy/polynomial/hermite_e.py
bb70738f14caaa1bfd2478af283dd101d6931f17,"ENH: Rename test_trimdeg  to test_cutdeg to match method and add ability to
run as script.
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_legendre.py,numpy/polynomial/tests/test_polynomial.py
16041b5c012d60fe80da173059532ffb2d79c530,"ENH: A window attribute in polytemplate. This is helpful in defining the
mappings for the Hermite and Laguerre polynomials where the domains have
infinite bounds. The window allows one to specify the interval that the
domain maps to instead of using the default domain as was done before.
",numpy/polynomial/polytemplate.py
f047f995bd2ad064bd87de06a4d003f843a14699,"DOC: Document constructor API change, and fill in some more missing documentation
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.types-and-structures.rst
c5c3cb94ceeba095df0f1e3566d0a52d005d1bbf,"API: Simplify basic iterator constructors, add 'itershape' to advanced iterator constructor
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_new_iterator.py,numpy/lib/src/_compiled_base.c
c3f4e890e88a06866b467221d90cf8b71f83c2c5,"DOC: Updated f2py related release notes.
",doc/release/1.6.0-notes.rst
b598d9c819113f50488f6995d91dcdbe8e49c3c7,"ENH: f2py: support Fortran size function with two arguments (ticket #1765).
",numpy/f2py/crackfortran.py,numpy/f2py/tests/src/size/foo.f90,numpy/f2py/tests/test_size.py
30ee1d3526af8892e8e1c22e29f9d7be14881eba,"DOC: update 1.6.0 release notes. Add headers for items to still be filled in.
",doc/release/1.6.0-notes.rst
45269ee1c906269bc3cd481f7ed94c8100e2b858,"BUG: fix assert_almost_equal and co. to work with infs.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0de7890ac6cad3d04e4cb32fe8431950eda065fa,"ENH: add files generated during build and site.cfg to .gitignore.
",.gitignore
5289230a0008e27c89c2427873928ceb1a54264f,"BUG: For compatibility with 1.5, revert to permitting limited broadcasting of the assignment output

This change got Travis's -10 veto for 1.6.

An unfortunate consequence of reverting this is that some of the broadcasting
error messages get worse, but they're still no worse than in 1.5.
",doc/source/reference/c-api.array.rst,numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
f8c38cb088c9478416f5c99ade68342dcb3db985,"BUG: Fixed ticket #1767. Replaced assert with assert_ calls.
",numpy/f2py/tests/test_array_from_pyobj.py,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_kind.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py
61a54aa1983ec37c49d628ec5e39a6b2cb06a575,"TST: make the knownfail for TestClog unconditional on Windows.

This keeps on coming up, and checking a few corner cases does not guarantee
that other corner cases are also implemented according to the C99 standard.

Was reported again by Christoph Gohlke for Python 2.7 and 3.2 on 64-bit
Windows.
",numpy/core/tests/test_umath_complex.py
082903ecc89afe2512f7cab34b6d2b75b44a51c2,"TST: Py3K: fix bytes/string test failure in numpy.random.bytes() test.
",numpy/random/tests/test_random.py
7ca223e626ebf8749a0a7b08ba35c579b62e5e81,"TST: fix ResourceWarning under Python 3.2
",numpy/lib/tests/test_regression.py
87e0f5576f80cc3314ae368edae3461ec5c1b188,"Merge remote branch 'upstream/master' into f2py-assumed-shape

* upstream/master: (310 commits)
  REL: add 1.6.0 release notes.
  DEP: remove deprecated np.lib.ufunclike.log2 function.
  DOC: fix typo in test guidelines.
  DEP: remove deprecated items from ma/core.py
  DEP: remove deprecated get_numpy_include.
  DEP: remove unique1d, setmember1d and intersect1d_nu.
  DEP: remove deprecated names in fftpack.
  DEP: remove deprecated methods sync() and close() from memmap.
  DEP: Update deprecation messages in genloadtxt with a version number.
  BLD: update C API version again after Mark's renaming of functions.
  DOC: Replace 'deprecated' with 'superceded' in a few places, fix a typo.
  STY: Remove a micro-optimization to make code more clear
  DOC: Add some missing documentation, hyper-link the iterator documentation
  API: Remove PyArray_FillWithZero from public API
  API: Rename the iterator function pointer types to be more consistent with NumPy convention
  STY: Work around lack of variadic macros in debug tracing
  API: Change iterator API parameters ndim and niter from npy_intp to int
  ENH: add Intel 64-bit C compiler. Closes #960.
  TST: fix two divide-by-zero test warnings.
  BUG: Broadcast shape was backwards in error message (Ticket #1762)
  ...
",.gitignore,INSTALL.txt,THANKS.txt,doc/TESTS.rst.txt,doc/neps/deferred-ufunc-evaluation.rst,doc/neps/new-iterator-ufunc.rst,doc/release/1.6.0-notes.rst,doc/release/2.0.0-notes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/distutils.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/routines.dtype.rst,doc/source/reference/routines.indexing.rst,doc/source/reference/routines.linalg.rst,doc/source/reference/routines.sort.rst,doc/source/user/install.rst,doc/summarize.py,doc/swig/test/setup.py,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/getlimits.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/shape_base.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/multiarray/new_iterator_pywrap.h,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/multiarray/testcalcs.py,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/private/lowlevel_strided_loops.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_datetime.py,numpy/core/tests/test_einsum.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_half.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_new_iterator.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py,numpy/core/tests/test_unicode.py,numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/intelccompiler.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py,numpy/distutils/tests/test_fcompiler_intel.py,numpy/doc/structured_arrays.py,numpy/f2py/crackfortran.py,numpy/fft/fftpack.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/benchmarks/bench_arraysetops.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/polynomial/chebyshev.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py,numpy/testing/print_coercion_tables.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,pavement.py,release.sh,setup.py,site.cfg.example
7bb54efde16bc81ee4eedd77828edc54c12dec75,"REL: add 1.6.0 release notes.
",doc/release/1.6.0-notes.rst,doc/release/2.0.0-notes.rst
f7a4ff1b9133440133936fa04442e40f8829d1ab,"DEP: remove deprecated np.lib.ufunclike.log2 function.
",numpy/lib/tests/test_ufunclike.py,numpy/lib/ufunclike.py
216799cf9caa654a7cb519091dbd6d432b817e51,"DOC: fix typo in test guidelines.
",doc/TESTS.rst.txt
ceb9ded475887c25299d798ac90094b74d593a61,"DEP: remove deprecated items from ma/core.py

The following are removed:
  - MaskedArray.raw_data method
  - MaskedArray flag keyword
  - make_mask flag keyword
  - allclose fill_value keyword

Also change some assert's to assert_().
",numpy/ma/core.py,numpy/ma/tests/test_core.py
083f6e1933dc244db6a97b49830071be6aa6555c,"DEP: remove deprecated get_numpy_include.
",doc/swig/test/setup.py,numpy/lib/tests/test_regression.py,numpy/lib/utils.py
44ae46c70d0b9cb4909bfafe1e4dbef3cd90f5b9,"DEP: remove unique1d, setmember1d and intersect1d_nu.
",numpy/lib/arraysetops.py,numpy/lib/benchmarks/bench_arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py
f791984cf1d8aedaeaf4fa36db539744d88de051,"DEP: remove deprecated names in fftpack.
",doc/summarize.py,numpy/fft/fftpack.py
a4fed55568a7bcc92bca0c3513e4c37dd5a47348,"DEP: remove deprecated methods sync() and close() from memmap.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
a22b32bf78fdb54c5df716bfa7962f40b9e4e75c,"DEP: Update deprecation messages in genloadtxt with a version number.

Because the docstring was still using `skiprows` explicitly, that keyword can
not yet be removed. Should be done for 2.0.
",numpy/lib/npyio.py
08e83067f82463dba45c25d379bc09ec8fcdb00d,"BLD: update C API version again after Mark's renaming of functions.
",numpy/core/code_generators/cversions.txt
859c269b56e1b90c45e3f3ad2eb120e9d6a04a79,"DOC: Replace 'deprecated' with 'superceded' in a few places, fix a typo.
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst
9001b794b7bdb3ca06d56b311eaa1ca9896068ac,"STY: Remove a micro-optimization to make code more clear
",numpy/core/src/multiarray/new_iterator.c.src
65b4a8a12e13d6451b089c6ca5f55c9da684a0ac,"DOC: Add some missing documentation, hyper-link the iterator documentation
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.iterator.rst
f567479c716a6f9398820e92cde9f4ea129b889a,"API: Remove PyArray_FillWithZero from public API

This function is too specific. A function like
PyArray_FillWithValue(PyArrayObject *ao, double value)
would be better.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert.h,numpy/core/src/multiarray/einsum.c.src
0c0c49ce89f447b423c52aee795b1bf1fec4e9fe,"API: Rename the iterator function pointer types to be more consistent with NumPy convention

'NpyIter_IterNext_Fn' -> 'NpyIter_IterNextFunc *'
'NpyIter_GetCoords_Fn' -> 'NpyIter_GetCoordsFunc *'
",doc/source/reference/c-api.iterator.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/lib/src/_compiled_base.c
72ef8a6cd4a1491212e7fc4a581825e2267903c8,"STY: Work around lack of variadic macros in debug tracing
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
ec151cc1147913ab470bba277f16a7085d69ec0c,"API: Change iterator API parameters ndim and niter from npy_intp to int

These parameters are never large, so it's better to use a straight int
instead of npy_intp, consistent with ndim in PyArrayObject as well.
",doc/source/reference/c-api.iterator.rst,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c
dede2691e7db9f0dacbc55444e5495856fa3f504,"ENH: add Intel 64-bit C compiler. Closes #960.
",numpy/distutils/ccompiler.py,numpy/distutils/intelccompiler.py
46ce29dedb1005a78a8460eb0ccfd9025152b8da,"TST: fix two divide-by-zero test warnings.
",numpy/core/tests/test_umath_complex.py,numpy/ma/tests/test_subclassing.py
9e28fce21a7bec4c9f1e8c686f63c57ea475c439,"BUG: Broadcast shape was backwards in error message (Ticket #1762)
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
326afcaacb9b7105dbca2a8295e0cb5dfd562501,"BUG: Replace inline with NPY_INLINE.
",numpy/core/src/multiarray/iterators.c
047074672335698f2055a3d4b6ee090041a8a328,"Merge branch 'poisson-fix'
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
e1e5760a2a80c8c0e4847326f23ba566ed00e94c,"CYT: Regenerate mtrand.c file.
",numpy/random/mtrand/mtrand.c
df09a3feb85079eadb91a5d200494ee3de721c56,"TST: Add test for poisson exceptions.
",numpy/random/tests/test_random.py
8cd4faaa0ec7b35b804633bacbbd959180309efe,"ENH: Add check for maximum average allowed in poisson rng. Original
implementation due to olsonse.
",numpy/random/mtrand/mtrand.pyx
3882d65c42acf6d5fff8cc9b3f410bb3e49c8af8,"BLD: Increase C API version. Necessary because new C API functions were added.

This removes the MismatchCAPIWarning at the beginning of the build.
",numpy/core/code_generators/cversions.txt,numpy/core/setup_common.py
b94585c25f81d0d90d25d1ce9b2781f478606734,"Merge branch 'pandas-fix'
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
ce9fea2c202f80ab39fa2b4866efd08ad075b9f2,"BUG: fix 64-bit Intel Fortran compiler detection. Closes #1448.
",numpy/distutils/fcompiler/intel.py,numpy/distutils/tests/test_fcompiler_intel.py
f43223479f917e404e724e6a3df27aa701e6d6bf,"BUG: did not intend to change default tolerances in assert_allclose. Revert.
",numpy/testing/utils.py
f527b49ab3dee3b48f2c853bdce1f5a5af1d820d,"DOC: Update the docs for numpy.testing - prefer allclose and nulp funcs. Closes #1543.
",numpy/testing/utils.py
4aaa4b7e500514a3bc37b515445592d17dce65b1,"ENH: Make discover_dimensions pass thru all errors in list/mapping
processing except KeyError. In the latter case an object is forced.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
ab9be922f0dde0c41c33f22bbb3042dc27af2220,"BUG: fix compilation with MSVC 2008. Thanks to Christoph Gohlke.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
3e135e222e006cb039f41a0d1af2656d59c2dbb1,"STY: Remove uneeded stdio.h include.
",numpy/core/src/multiarray/ctors.c
ea403b5c993f5c897480d8bb273501fc30be55f8,"DOC: Make clear that class in test breaks the sequence protocol.
",numpy/core/tests/test_multiarray.py
891bc2e8cebc3259f83033eceb2287c9f8eaa555,"BUG: Fix cut and paste error.
",numpy/core/src/multiarray/ctors.c
cef500872547ba3f06f42a8669c7c72382451822,"DOC: Improve the content of a comment.
",numpy/core/src/multiarray/ctors.c
90e4cf055c8b469634cdb6c84e0a8843c2212e78,"TST: Add test for robustness with non-sequence detected as sequence.
",numpy/core/tests/test_multiarray.py
702ae6ac703a05f8c914a958a0b019986a07d60d,"REL: update release scripts for Python 3.2.
",pavement.py,release.sh
c3f9989fe078fec44671172680e39e100d2a843f,"ENH: Make comment more informative.
",numpy/core/src/multiarray/ctors.c
9e845494355a7bb6c6548f0f48fa83485999a460,"Make a failed sequence access error set the object creation flag.
",numpy/core/src/multiarray/ctors.c
7fa628494443fb18afb7aed3061b267b42177a83,"ENH: Use fmax.reduce and fmin.reduce to implement nanmax and nanmin.
",numpy/lib/function_base.py
c199d963e480667631c67d7a7956c195a5686c40,"BUG: Use isnan to test for nan, avoids problems with signed nans.
Replace assert with assert_. Cleanup trailing whitespace.
",numpy/lib/tests/test_function_base.py
f143ebedb577a68b7b1909ba106fcce94d53fd29,"ENH: Add tests for reduce method of maximum, minimum, fmax and fmin.
",numpy/core/tests/test_umath.py
c2747b0134057e687a9772846384a967c410e84e,"ENH: Speed up reduce for maximum/minimum type ufuncs.
",numpy/core/src/umath/loops.c.src
60adb1ac9fe688184973a02e8bce552d70d087f4,"BUG: Preliminary fix for ticket #1757.
",numpy/core/src/multiarray/ctors.c
b28b1158fc58459b80b22b6e5a7b8d446ed31035,"BUG: Field's subarray access of scalar was incorrectly Fortran (Ticket #1760)

This was the consequence of a previous bugfix which set the NPY_F_CONTIGUOUS
flag for scalars.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
c081ad795a70fcd0168edda6d63f3ebc7c5529a7,"DOC: Revert part of previous commit, moving umath docs did not work.

If the ldexp/frexp docs belong in ufunc_docsrtings.py, they need an entry in
core/code_generators/generate_umath.py. See #1759.
",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py
51b5c585890967283aa6ddcdbb9ff624f0ee4866,"DOC: add a few more wiki edits, and move umath docs to correct place.
",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/doc/structured_arrays.py
898e6bdc625cdd3c97865ef99f8d51c5f43eafff,"TST: add test for random distributions. Closes #1512.

These tests ensure that returned values stay the same, which is necessary
because other tests rely on this when setting a fixed seed.

Thanks to Vincent Davis.
",numpy/random/tests/test_random.py
efb3295b06e6595a057f100dfec3fc0c046e3679,"DOC: Copy iterator API documentation from the NEP
",doc/source/reference/c-api.iterator.rst,doc/source/reference/c-api.rst
2924d76fc1eec76cedc6fda0e9426c5d183df953,"ENH: Increase test coverage a bit to test all the fast paths.
",numpy/core/tests/test_regression.py
766cac0cf7bd616476226377b3573778c0e38476,"BUG: Fix zero-padded copy when truncating (ticket #1756)

Chuck's fix was correct, but there was another bug at play here.

I've also removed the _strided_to_contig and _contig_to_strided
specializations as they likely don't provide a significant advantage
over _strided_to_strided here.
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
677d349c22dd5538dd4bb962df11814f23a46b35,"BUG: Fix string in test for python 3k.
",numpy/core/tests/test_regression.py
3f0f12ffeb202a414d81e45254a135c8e4c74690,"ENH: Add test for ticket #1756.
",numpy/core/tests/test_regression.py
9eee670c62d539b0f9027d2c989073e2ee81103b,"BUG: Fix error in _strided_to_contig. Fixes ticket #1756.
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src
5aa65d942a6d2d93ecac069e3d2d69a7d9ff0271,"TYP: Fix typo.
",INSTALL.txt
cfff7508bc29e6bc0c44b2d42d7bb23e143d5bc3,"BUG: Fix CastToType to handle string->string casts (ticket #1748)
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_regression.py
13212a5d7919f8668522a8251bea90b3a2b22894,"BUG: fix up setup.py and pavement.py so the binary builds work again.
",pavement.py,release.sh,setup.py
96c4eea33d8d69655be9a847d35e2ff96b9d5ffd,"ENH: First commit of hermite and laguerre polynomials. The documentation and
tests still need fixes.
",numpy/polynomial/hermite.py,numpy/polynomial/hermite_e.py,numpy/polynomial/laguerre.py,numpy/polynomial/tests/test_hermite.py,numpy/polynomial/tests/test_hermite_e.py,numpy/polynomial/tests/test_laguerre.py
8a5ed09610e56f9f60089ca017b7e4abd3ce9264,"Remove unused function legtimesx, it has been replaced by legmulx.
",numpy/polynomial/legendre.py
578cbb489bfad48b1611c4cfd5d89fc6ac9a7ce8,"BUG: add polypow, chebpow, legpow to __all__ and module documentation.
",numpy/polynomial/chebyshev.py,numpy/polynomial/legendre.py,numpy/polynomial/polynomial.py
4b8923f63439b14fd20720f51bb0551f8ec595bc,"DOC: merge wiki edit for einsum docstring.
",numpy/add_newdocs.py
821afc8f1376a634612e182903c06a0c9c556d94,"DOC: commit some more fixes from the doc wiki.
",numpy/add_newdocs.py,numpy/core/numerictypes.py,numpy/lib/function_base.py,numpy/lib/npyio.py,numpy/linalg/linalg.py
85813a9a2eb163582cb518f0fe5d632b662ad0c7,"DOC: fix some formatting errors in polynomial docs.
",numpy/polynomial/chebyshev.py,numpy/polynomial/legendre.py,numpy/polynomial/polytemplate.py
6439e35ecbdb66410fb1550cf917f5bddbbe1e8e,"DOC: document inconsistent path separator in site.cfg path lists. Closes #934.
",site.cfg.example
b52fa654e1f0478fdf8f570797314835ade74765,"DOC: fix doc build complaint about too-long tables.
",numpy/core/getlimits.py
788356d6b7562749f76146d1c4bb05ba2344c865,"TST: clean up some ResourceWarnings from python 3.2.

Also make the sys.stdout temporary redirection in one of the tests a little
more robust. That is still necessary, because np.who is very noisy.
",numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_regression.py
390dd85b17a842852e93acb20f94abfbfa37c966,"DEP: fix deprecation warning from using SafeConfigParser with Python 3.2.
",numpy/distutils/npy_pkg_config.py,numpy/distutils/system_info.py
33ba9bea35467837de0dedd46ee4b78a17bd8211,"TST: replace assert with assert_
",numpy/core/tests/test_regression.py,numpy/lib/tests/test__datasource.py
4800446a9cef4b8e1ed0e34ba750cf1f92ca57b8,"TST: replace TestCase.assert_ (deprecated in Python 3.2) with assertTrue.
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py
ee0831a821744c2d013724456700573918b4ca37,"BUG: fix up shared library extension, which changed in Python 3.2. Closes #1749.
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/system_info.py,numpy/tests/test_ctypeslib.py
05142b69d8304b219fa2e85c6e810a3f91e09c8b,"DOC: add some more wiki edits, of rst files in ref/user guide.
",doc/source/reference/c-api.array.rst,doc/source/reference/distutils.rst,doc/source/reference/maskedarray.generic.rst,doc/source/user/install.rst
f059c6757a3a3b7daa423d5b961cfa2eaa171bfc,"DOC: merge wiki changes for numpy.random and regenerate mtrand.c
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
68e33f93d49d39cfd3789d85224a65036f03ee11,"DOC: merge wiki edits for numpy.core.
",numpy/add_newdocs.py,numpy/core/getlimits.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/shape_base.py
4ca2465fe169576b46dee783dd0279cfd536d9c4,"DOC: merge more doc wiki edits.
",numpy/add_newdocs.py,numpy/lib/arrayterator.py,numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/ma/core.py
7ef5d601b4fe281c797fa497c317861c7340e3ec,"DOC: merge wiki changes, structured array doc.
",numpy/doc/structured_arrays.py
cbf74076e8bf13d8d2bf4abebb0f8ca576da8551,"DOC: update notes in release script and reorganize paver script a little.
",pavement.py,release.sh
8e95e7190876632130ef8d4ebed3e8c91b4fa542,"TST: update namespace usage in lib.polynomial doctests.
",numpy/lib/tests/test_polynomial.py
4eebdf9c2576bfa66b30f93ce3179e68fab1bb93,"BUG: correct file name in fromregex.

Thanks to Mattieu Brucher for reporting.
",numpy/lib/npyio.py
81fbb517544bdae0af202de2be7f4af34e29e509,"Fix bug in constructing use statement with only.
",numpy/f2py/crackfortran.py
3dfe0e10aa27cc057b1c5acfb77df8cfb2669a6c,"Implemented selected_real_kind evaluation, added tests to catch processor dependencies..
",numpy/f2py/crackfortran.py
aea92de6e7322d5cc1674bf13e74498f310733e9,"Implemented selected_real_kind evaluation, added tests to catch processor dependencies..
",numpy/f2py/tests/src/kind/foo.f90,numpy/f2py/tests/test_kind.py
715b9c74f86cfeceb94cdd77b3080afa88e10688,"Fix assumed shape support for routines that use modules. Improved .f2py_f2cmap messages.
",numpy/f2py/capi_maps.py,numpy/f2py/func2subr.py,numpy/f2py/tests/src/assumed_shape/.f2py_f2cmap,numpy/f2py/tests/src/assumed_shape/foo_use.f90,numpy/f2py/tests/src/assumed_shape/precision.f90,numpy/f2py/tests/test_assumed_shape.py,numpy/f2py/tests/util.py
d7ea62c3153fcf51e358b93a6aeb2be4f74c08e5,"WIP: implemented assumed shape support for Fortran subroutines.
",numpy/f2py/auxfuncs.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/tests/src/assumed_shape/foo_free.f90,numpy/f2py/tests/test_assumed_shape.py
cafd2df2336258b6a107d827f60b89d20a967653,"WIP: added assumed shape array support to Fortran functions.
",numpy/f2py/crackfortran.py,numpy/f2py/func2subr.py,numpy/f2py/tests/src/assumed_shape/foo_free.f90,numpy/f2py/tests/test_assumed_shape.py
c50af53f0edbb3e059c21274dbd9204f637d677f,"DOC: update site.cfg.example with notes about umfpack/fftw.
",site.cfg.example
9e71af4a49d0ab9f2ef881bf7f40eb937a207ac3,"TYP: Fix typo.
",numpy/lib/recfunctions.py
af1e833e49dafc6d96b20de90a44633f11450b3f,"ENH: core: Allow user to pass in output array for dot()

This avoids the memory allocation. It is strict in checking that the
types are correct, but since it is intended as an optimisation, it
should only be used when the user knows what they are doing.

The out parameter is added both to the BLAS and non-BLAS versions of dot().
Tests are included.
",doc/source/reference/c-api.array.rst,numpy/add_newdocs.py,numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_blasdot.py,numpy/core/tests/test_multiarray.py
ca9d4a73391630d3565ef04cbfaf3bf45e1c5474,"BUG: core: fix build on Python 2.4
",numpy/core/src/multiarray/ctors.c
543dbea2bd80d6abd9538a89450651e39196ed6b,"BUG: Fix python3k import problem.
",numpy/lib/index_tricks.py
df5714798e5e8448928286567b018ba447ec0b6c,"BUG: ticket 1741, fix python 2.5 incompatibilityr.
",numpy/core/tests/test_regression.py
f30000bd09a4886f6d5dd9e1cb0ab437dc6c3f2f,"STY: index_tricks: Improve comments and documentation strings
",numpy/add_newdocs.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/lib/src/_compiled_base.c
bdf25de6bf7327460cfd7a7f6fbab41eb0655f18,"ENH: index_tricks: Implement unravel_index and ravel_coords functions in C
",doc/source/reference/routines.indexing.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/lib/index_tricks.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_index_tricks.py
260824fe05b1a314d67420669ee0d012c072c064,"ENH: einsum: Specialize contiguous reduction, add SSE prefetching

Also fix some compiler warnings. The biggest performance improvement
was from adding SSE prefetching.
",numpy/core/src/multiarray/einsum.c.src
8598315e41ed38faf3fb71cdc7c6f62067a9b2e8,"BUG: core: Fix potential reference leak, possibly fix segfault ticket #1737
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/umath/ufunc_object.c
5d06dcaf73c2adf287a55565a5190636839ab65c,"BUG: umath: Fix reference usage after Py_DECREF

Because of the details, I don't think this was causing a crash,
but it's a bug nonetheless.
",numpy/core/src/umath/ufunc_object.c
15850ffd3118c28d914f7156b4186f36877de98e,"STY: core: Rename 'dtype' parameter to 'requested_dtype' in GetArrayParamsFromObject

The first naming choice was a bit confusing, this should help make
it more clear.
",numpy/core/src/multiarray/ctors.c
1d952a5991bbea1b41b8a0b1a2f85349db51e2bc,"Merge branch 'array_params_from_object' of https://github.com/m-paradox/numpy into params_from_object
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py
51d10b0bed24fea5a65b1981da1a38ea91045345,"BUG: fix undefined macro.

This was surprisingly not detected by gcc, but it fixes clang build.
",numpy/core/src/multiarray/arraytypes.c.src
eec4a495c6286e891d63e841a5b9265af44f2990,"STY: remove unneeded import of ufuncobject in halffloat.c.
",numpy/core/src/npymath/halffloat.c
2c0f9f8cee2316eb80f1aac46ff7b193743337cb,"BUG: fix inline definition so that it still inlines in gcc -ansi mode.
",numpy/core/include/numpy/npy_common.h
b8921fcae1a6a9d56a477e833f78a81ffa3b1d5e,"BUG: iter: The wrong stride was specialized in some cases for reduction operands
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/new_iterator.c.src
fa5ea049410ba5ad4fcdb24cd8698ed834122ea7,"BUG: core: Fix regression ticket #1735
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_regression.py
2635398db3f26529ce2aaea4028a8118844f3c48,"ENH: core: Add new GetArrayParamsFromObject API function (fixes #1081)

This function allows code to query an object's ""innate"" type and
shape, without actually creating a NumPy array out of it.
PyArray_FromAny has been changed to use this function, as an assurance
that its implementation is correct.

This also fixes the known failure in test_regression.py.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py,numpy/lib/tests/test_io.py
13c83fd3558cc366233f0522b2922f5ee95e8c4a,"BUG: tweak NPY_INLINE definition to allow compilation in gcc -pendantic mode.
",numpy/core/include/numpy/npy_common.h
c5c6b498509276223b7fdc04b9bd3d36fb74aa85,"BUG: fix a few C99-ism in C code.
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
24392c8a4d161000dd925904f302d77b0efed219,"DOC: Note version minlength was added to bincount.
",numpy/add_newdocs.py
36480e9fac55acb65ee6a1c7212e371de84fab96,"WHT: Cleanup whitespace.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src
85993f895e7676f477f80e940a2ee925b3a0c19c,"ENH: iter: Add timing code, rewrite some sections to be faster/more clear
",numpy/core/src/multiarray/new_iterator.c.src
fcc6cc73ddcb1fc85446ba9256ac24ecdda6c6d8,"ENH: core: Small tweaks to streamline things a bit
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/mapping.c
f60797ba64ccf33597225d23b893b6eb11149860,"BUG: perf: Operations like ""a[10:20] += 10"" were doing a redundant copy
",numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/new_iterator.c.src
31725765f5ce04a96b3bb53728756d135577fbdf,"BUG: Fix a compiler warning.
",numpy/core/src/multiarray/arraytypes.c.src
d37bf941f4e7437dbadce6f207560352802f0ca6,"WHT: Whitespace cleanup.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/testcalcs.py,numpy/core/src/multiarray/usertypes.c
8b07398ec434a0082a1b95cf3683d7a17030bd68,"Merge branch 'einsum_changes' of https://github.com/m-paradox/numpy into einsum-changes
",numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_einsum.py,numpy/core/tests/test_new_iterator.py,numpy/core/tests/test_numeric.py
0e60ecbf49055d315b55408177eb5535239bab9e,"BUG: ufunc: Fix regression of accumulate with zero-size result (ticket #1733)
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_regression.py
bb20bc1c40bd2757804c1adcbaca881194bb2027,"BUG: core: Fix remaining Python 3 regressions
",numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/multiarray/number.c,numpy/core/tests/test_new_iterator.py,numpy/core/tests/test_regression.py
a7ffc7acbbdcaa6ab596b638b27210c01ef259eb,"BLD: Fix scons and setup.py build

Moving lowlevel_strided_loops.h to private needed a setup.py update.

Added the rest of the needed files in the scons configuration.
",numpy/core/SConscript,numpy/core/setup.py
5c5d026aafd9336c3461834150c407405c13593f,"ENH: einsum: Write specialized unbuffered loops for several cases

Also converted the used inner loops to SSE2, to bring
einsum fairly close to numpy.dot's performance for matrix-vector and
matrix-matrix multiplication.
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
bad160788d264aa92ce3e28e6d8feafb419f0b89,"BLD: fix numscons build.
",numpy/core/SConscript,numpy/core/src/{multiarray
31f6ff9fe0cad4d30299136e72ea2d61fa53c486,"ENH: iter: Catch another case with fixed strides.
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src
f8fccd8a4d77789a41413a98e5486d2f2bad0f02,"TST: einsum: Move einsum tests to a different file
",numpy/core/tests/test_einsum.py,numpy/core/tests/test_numeric.py
909e30a9c21e6f1d0c1a83759b42ec5efd3f2054,"ENH: einsum: Change function selection function to use tables
",numpy/core/src/multiarray/einsum.c.src
3b6b801551def0076d4d3f81b11c313c91e277b0,"ENH: einsum: Change loop unrolling to be better for small loops
",numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_numeric.py
cdb0a56c8551182e566f0308fd9f4515d5e95d89,"ENH: einsum: Add alternative einsum parameter method

This makes the following equivalent:
einsum('ii', a)
einsum(a, [0,0])

einsum('ii->i', a)
einsum(a, [0,0], [0])

einsum('...i,...i->...', a, b)
einsum(a, [Ellipsis,0], b, [Ellipsis,0], [Ellipsis])
",numpy/add_newdocs.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_numeric.py
abcdd9a62a1f83fa5d233477442cf0a34bde2143,"ENH: einsum: Disable broadcasting by default, allow spaces in subscripts string
",numpy/add_newdocs.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/tests/test_numeric.py
ec2609eda10d62da70c0dbb7e475b19d748a58d8,"BUG: core: make Numpy build again on Python 3 and 2.4
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_new_iterator.py
670d081cbe2bdb4e51e892bd3b696d50969d40d7,"BUG: Fix exception syntax to conform to python 2.4.
",numpy/testing/utils.py
4faf10e9246a77bc19c77dc80363d809f5a85396,"ENH: iter: Allow copies of read-only scalar arrays even if COPY isn't specified

When buffering, this reduces the work needed by a lot. For non-reduction
operands, the iterator always provides contiguous data when an operand
is buffered, but by making a copy the operand can be flagged as never
needing buffering
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_new_iterator.py
395146e64101ac65a057214d64135993a4c67d16,"BUG: iter: Fix checking of allocated output with op_axes specified
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
b29d5c36e8b0a62956d5e097b5b7ce73351f7bef,"BUG: core: Fix ""a[...] += 1"" with array scalar 'a'

This was crashing, because it appears Python does this:
1. call the array_subscript to get a[...], then calls inplace add on it
2. call the array_ass_subscript with (a, Ellipsis, a), which for an object
   array was setting the single element of a to point to itself, and
   caused crashes.  This case is now checked, and success is returned
   immediately when an array is assigned to itself this way.
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/number.c,numpy/core/tests/test_regression.py
08fdf3b8ff613ad51af21e53de915c232bb395e4,"WRN: core: Remove many warnings gcc produces with stricter flags
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/scalarmathmodule.c.src
cb7e0acab944d8b43550ae060b5ab888042c4954,"BUG: Fix crash in PyArray_Nonzero due to uninitialized variable usage
",numpy/core/include/numpy/npy_math.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/new_iterator.c.src
7bead6a6b5a108f2515f8a81c95eb2a42eee6240,"STY: Rename NPY_ITER_DONT_REVERSE_AXES to NPY_ITER_DONT_NEGATE_STRIDES to be more intuitive
",doc/neps/new-iterator-ufunc.rst,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/new_iterator.c.src
ab3dcf817066e7be08e0c4c6264db36674978284,"Merge branch 'mw_neps'
",doc/neps/deferred-ufunc-evaluation.rst,doc/neps/new-iterator-ufunc.rst
67e5476a4178de55451501cfb01794c22d340b7a,"Merge branch 'new_iterator' - new iterator, ufunc update, restore 1.5 ABI

New Iterator - Read doc/neps/new-iterator-ufunc.rst.
UFunc Update - Change all ufunc functions to use the new iterator.  This
               replaces the inline buffering with iterator buffering, except
               for the reductions and generalized ufunc which use updateifcopy
               at the moment.  Also adds out= and order= parameters to
               all ufuncs.
Restore 1.5 ABI - This was done by moving the new type numbers to the end
               of the type enumeration, and replacing all type promotion
               code with a table-based approach.  The ArrFuncs was
               restored by putting the new type cast functions into the
               cast dictionary, originally designed just for custom
               types.

Conflicts:
	numpy/core/src/multiarray/ctors.c
	numpy/core/tests/test_regression.py
",THANKS.txt,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/routines.dtype.rst,doc/source/reference/routines.linalg.rst,doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/multiarray/new_iterator_pywrap.h,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npymath/halffloat.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_new_iterator.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/testutils.py,numpy/matrixlib/tests/test_defmatrix.py,numpy/testing/print_coercion_tables.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,setup.py
aedce0eb9fa63e7dec3c865374a64e11374c284c,"ENH: core: Add support for numpy.ravel(a, order='K')
",numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/shape.h,numpy/core/tests/test_multiarray.py
0046a594071117d8bd379f6e9bd2d2d7a6f9852e,"NEP: iter: Add NPY_ITER_DONT_REVERSE_AXES flag
",doc/neps/new-iterator-ufunc.rst
c9d1849332ae5bf73299ea1268f6a55f78624688,"ENH: core: Add dtype= and order= parameters to zeros_like, ones_like, and empty_like
",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/shape.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py
6510cce13410a9fff4d92f6390c16a7788b1a892,"ENH: core: Add PyArray_NewLikeArray function

This function implements the numpy.empty_like semantics, but supports
the new NPY_KEEPORDER enumeration value as well as switching to a
different data type.
",doc/source/reference/c-api.array.rst,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c
aca4c6447e669d3e56e17d5842f968979eec2bcd,"STY: core: Improve formating of ParseTuple argument lists

Now in methods.c each argument gets its own line, so its easier to validate.
",numpy/core/src/multiarray/methods.c
82bd8f94caef920dc47b37826dec6716839afd51,"VER: Change version to 1.6.0
",setup.py
211191d4985b15a1d3fa773b99fec17be57de7b4,"WRN: Fix some warnings and suspicious looking code
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c
95937582ce1feade737daba0f0c10233eede64ad,"BUG: Single file build had wrong promotion table type
",numpy/core/src/multiarray/scalartypes.h
b8c1f4bca90bca44bee87eb22495e6605a43ff30,"ENH: iter: Improve performance of buffering reduce operations
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_numeric.py
779b01b039e05150ec21047fc04061fab55e5f42,"WRN: iter: Fix half-float warnings, other small tweaks
",numpy/add_newdocs.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/npymath/halffloat.c,numpy/core/tests/test_regression.py,numpy/ma/testutils.py
2a1706fd84b2970f7ab64d9d46f1c0951eac8cfa,"ENH: iter: Add a per-operand REDUCE flag
",numpy/core/src/multiarray/new_iterator.c.src
628e7b77f49b8d4afa633bbef103d6c5156b3a58,"ENH: iter: Remove internal NPY_OP_ITFLAG_COPY flag
",numpy/core/src/multiarray/new_iterator.c.src
536ee131d2fe89ff9a5552d01bca01c3d89cac90,"ENH: iter: Change permutation to a fixed-size char array
",numpy/core/src/multiarray/new_iterator.c.src
01c78669494a05a539cdbb83614b6c3312e5401e,"ENH: ufunc: Add new iterator version of generalized ufuncs
",numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
3e58b8db5d2ff4b850f63373e1b1d1c812454264,"ENH: core: Make NumPy trunk ABI-compatible with 1.5
",numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/setup_common.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/multiarraymodule.c
0a011429b13d7267a87e1cbc8c5b8fe42c22df5d,"ENH: ufunc: Move reduceat to its own function, have it use the iterator
",numpy/core/src/umath/ufunc_object.c
29e868951da7348ffa021889bfd5719bab403308,"BLD: Add einsum to the one file build
",numpy/core/src/multiarray/multiarraymodule_onefile.c
c4a556e1fcdede5fe366e4373a7f2dc802a0e898,"BUG: core: Fix things so scipy trunk passes all tests (but one)

With this patch, the latest scipy trunk (7087), built against NumPy
1.5.1, passes all tests when run against the numpy trunk.  The single
failing test, test_imresize, fails because it tests all float types,
and the new 'half' type lacks the precision to pass that test.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_regression.py,numpy/testing/utils.py
98721b3f06626314e47afa6d1ad9a1a0d3746412,"BUG: ufunc: Fix buffered reduce
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_regression.py
b58b3d167609a419a06d9d672f13501ce27d23fc,"NEP: iter: Add NpyIter_GetAxisStrideArray function
",doc/neps/new-iterator-ufunc.rst
91b7763cae7c25865df636f7d44d284ed4094bc4,"NEP: iter: Add some more functions
",doc/neps/new-iterator-ufunc.rst
cf8d15203cd24bc7a836c98117a8e4edc9debd8b,"ENH: core: Make PyArray_ArrFuncs have the same structure as in 1.5 and earlier
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/usertypes.c
585a636f95c3bf884e53a6724738a26d4a5b00e4,"ENH: core: Shuffle type numbers so any new ones go on the end.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/ufunc_object.c,numpy/lib/tests/test_recfunctions.py
62300b6f5bc3987915c106c2f414c5699ad8484f,"ENH: ufunc: Remove dead code from ufunc_object.c
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py
8a0bec00b8f92f055284769c3c0888aece0a69f0,"ENH: ufunc: Convert Reduceat to use the new iterator

Reduceat doesn't fit into the new iterator idea quite as well as the others,
so it doesn't get the matching memory layout.  Neither it nor accumulate
get buffering, though accumulate could use buffering if it was implemented
slightly differently.
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
14d5e200384ffc72782a364ae597746e1086bed6,"ENH: ufunc: Convert Accumulate to use the new iterator
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_regression.py
fadddc677dcbbaf0d5af971a512e4d305a024e4c,"ENH: iter: Add NpyIter_RemoveAxis function to the iterator API
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_new_iterator.py
b410514375ce1cfe4f1accd9c97d2c5001f6bae9,"ENH: ufunc: Release the GIL during ufunc computations
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py
7e14f031e9bd65640ccbeaa9ba8bd4ee788e28a2,"ENH: ufunc: Convert UFunc Reduce to use the new iterator
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
cdac1209a517bf0808f12340d21ac9d334f69485,"PY3K: add PyPI classifier for Python 3. Closes #1698.
",setup.py
5435bdc0a23b26455f6a47d93e39e02b394b0503,"DOC: core: Document the new einsum function
",doc/source/reference/routines.linalg.rst,numpy/add_newdocs.py,numpy/core/numeric.py,numpy/linalg/linalg.py
e81e8dab9c39a4f8523ff56bb667cd8b04de91c7,"ENH: core: Add SSE intrinsic support to some of the einsum core loops
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_numeric.py
4f5ff257c8edc320d1415dc329c51d0ea87c0ddc,"ENH: Break out regression tests into separate file and explicitly import needed
functions from np.testing.
",numpy/random/tests/test_random.py,numpy/random/tests/test_regression.py
bb97750c93ede73d81a9632de01dda0f9bce5b41,"ENH: Replace assert by assert_.
",numpy/random/tests/test_random.py
b7fbd3290e956dc1f9a8f9b99b777d22e9b5e2ce,"BUG: Ticket #1690, fix overflow error in randint. Slightly modified from the
original by committer.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
9a72a64638e1f9d981afc669c9c5ec8dbf12f0a7,"ENH: core: EinSum function works
",numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_numeric.py
ae6416a207339fa672728d8197e829a3980bbea7,"STY: clean up unused code. Closes #1409. Thanks to Bruce Southey.
",numpy/distutils/ccompiler.py
34aed2403be851d06e9d71aab8abc2c01c8ecdbc,"ENH: core: Implement iterator set up for einsum
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_numeric.py
437e555e0b2a742f0d5af88132f68fbe96dcbc3f,"BUG: Ticket #1703, make fromfile work with dtype=np.bool_ and floats.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
265ac4f50ca4ef224daed906d9e0c6244e04e030,"ENH: Add patch files to .gitignore.
",.gitignore
173cb747e86dc94b39f4ccb19e79d2fa20dbdcf8,"ENH: Ticket 1695, add test for find_common_type with booleans.
",numpy/core/tests/test_regression.py
8435696e7ee3bc03cb85decc9323cd2d0487a5f8,"BUG: Ticket 1395, make find_common_type recognize booleans.
",numpy/core/numerictypes.py
41c093508b08750e1fbfad3937f5a398b3566884,"WHT: Whitespace cleanup.
",numpy/core/tests/test_numerictypes.py
9b8ff380c2f0df0504a4c27cef131cb4f8798cbd,"BUG PyArray_FromArray: Properly handle F_CONTIGUOUS with 1D-arrays
",numpy/core/src/multiarray/ctors.c
a41de3adf9dbbff9d9f2f50fe0ac59d6eabd43cf,"ENH: core: Start einsum function, add copyright notices to files
",THANKS.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/einsum.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_numeric.py
3ec57950ce516f8f39345e2b425db9bbe64272f3,"BUG: Ticket 1490, fix searchsorted when both key and array are byteswapped.
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_multiarray.py
54b7a0d21de9cb31017d8e00de67f3207d7629a2,"ENH: Add test for long seeks in windows 64 bit systems.
",numpy/core/tests/test_multiarray.py
0baf0ecf378265f69cf8e14e337f26e51d78faa0,"BUG: Ticket #1660. Fix windows 64 bug so that fromfile works for files > 2GB.
",numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/ctors.c
27987d2b52a176e8f187a01f9f597271402c7e78,"ENH: iter: Add ability to do buffered iteration of reductions

This also tightens the error checking of reduction operations.
Now if you want to allow a reduction, you must specify NPY_ITER_REDUCE_OK.
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
87c4ec831bcf0f5da10bf53cc1c51c0ac5a5cfa4,"NEP: Correct some spelling errors
",doc/neps/deferred-ufunc-evaluation.rst
0ad51c14a62ed03baf265815f6059aff49754e83,"NEP: Add more flags and some timing results
",doc/neps/new-iterator-ufunc.rst
f6c5df89916807c5659108d884c38527f2649a2c,"ENH: core: Make the debug printf tracing macros more systematic
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
fb11cf155e5e34eb6f8f22beda7120baa36a8cec,"STY: iter: Change if statements in trivial iteration macros
",numpy/core/src/multiarray/lowlevel_strided_loops.h
edc4805f4891658846873d8b759628544c89575f,"ENH: iter: Improve broadcasting error message
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/new_iterator.c.src
a6651a1176b059bbc99f313e940cba39cb77d565,"ENH: ufunc: Add support for the sig= type_tuple parameter to new ufunc code
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_ufunc.py
42bd0c382c8014de2449911b81c6874b05e266f2,"ENH: ufunc: Implement user loop searching
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_ufunc.py
7f8e8679a282fbe6a578782827e441fcd58076a2,"ENH: ufunc: Get all tests passing with new iterator ufunc except generalized ufunc tests
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/core/tests/test_scalarmath.py
d03b685b227a41de8454ea37461b016f96a57eee,"ENH: ufunc: Change object/reference handling code to treat NULL as Py_None more consistently
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src
a8ceecad783492f6546e06812ac6b93d84ea25a1,"BUG: core: Fix issue converting nested list with a number to a string type
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
9317b745856b4bb956426b199d3422a6ef71e269,"BUG: iter: Fix 0-size edge case with trivial iteration macros
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_regression.py
87596cf6a0e6becccea111727435605fa3615e49,"ENH: ufunc: Make many more tests pass with the new ufunc code
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_numeric.py,numpy/ma/core.py,numpy/testing/tests/test_utils.py
6c6dc487ca15818d1f4cc764debb15d73a61c03b,"ENH: ufunc: Made the iterator ufunc default
",numpy/core/src/umath/ufunc_object.c
9ab33b7f5c78c3f1caad36a53af29a72a2e0bf4d,"ENH: ufunc: Add support for the __array_prepare__ property of subclassed arrays
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/src/umath/ufunc_object.c
a8f5b4ca6759c46abf4d169bed0178559518b641,"ENH: ufunc: Restructure iterator ufunc evaluation into functions
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.ufunc.rst,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
fa08ee2832e68f91a4ea38aa8d1d55dbb143cfd4,"ENH: ufunc: Simple iterator-based ufunc execution is working
",numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c
58f33f8805f2aebf78e977dbe89298ad33e1060d,"ENH: ufunc: Implement the trivial two and three-operand loops
",numpy/core/src/multiarray/ctors.c,numpy/core/src/umath/ufunc_object.c
c065a2625f650e9803c68e128cc74490c4321d6c,"ENH: ufunc: Add trivial loop detection macros for triple loops

Also allow broadcasting with scalars in trivial loops.
",numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/methods.c,numpy/core/src/umath/ufunc_object.c
eca4d03860d33a4e245c18c97b2867548f0bd11c,"ENH: ufunc: Add the main loop selection/type-determination mechanism
",doc/source/reference/c-api.array.rst,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/ufunc_object.c
3637741aa438b1a17023d49379420891132d996c,"ENH: core: Clean things up a bit

* Make PyArray_CastToType always produce a copy
* Remove special cases in ndarray.astype
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/ma/core.py
a1eee39c7adfc9ec8cc807b8d580ae8ca82cee1e,"ENH: core: Added numeric casting strided transfer functions, to speed up simple casts
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/umath/ufunc_object.c
fe08a916cf275ecd21c1b32b22aa3b8d2ca36b33,"ENH: iter: Switch the iterator to use PyArray_ResultType
",numpy/add_newdocs.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/new_iterator.c.src
5387da5247baa2a286b8cfcf5e0e5e16c531d38d,"ENH: doc: Document the new API functions

PyArray_CanCastArrayTo, PyArray_MinScalarType, PyArray_PromoteTypes,
PyArray_ResultType, PyArray_CountNonzero, and PyArray_CastingConverter.
",doc/source/reference/c-api.array.rst,numpy/core/src/multiarray/multiarraymodule.c
beba8f4e7c7071d0619558a66f0a096ca705c1c5,"ENH: core: Add functions PyArray_CanCastArrayTo and PyArray_ResultType

They have also been exposed to Python.
",doc/source/reference/routines.dtype.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/convert_datatype.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py,numpy/core/tests/test_numeric.py
81a28e7309e13f0a22464697b14c2c7d4c272ea5,"ENH: core: Add PyArray_MinScalarType and expose it to Python
",doc/source/reference/routines.dtype.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c
ee06d183c407ea315b2eb3ef41ee422b0ea30251,"ENH: core: Start converting ufunc to new iterator, add PyArray_PromoteTypes
",doc/source/reference/routines.dtype.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/umath/ufunc_object.c,numpy/testing/print_coercion_tables.py
cce7e1fcfa49b2fe8e1b9c1530269fdcebade14b,"ENH: core: Convert remaining data copying to new method, add tests for overlapping array assignment
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py
d90f19abf18d59be959e04d73b3dbd7ae04b1e89,"ENH: core: Change PyArray_MoveInto to use the new iterator as well
",numpy/core/src/multiarray/ctors.c
e916b9e44c1732fba94393056f80093a0e775134,"ENH: core: Change PyArray_CopyAnyInto and PyArray_MoveAnyInto to use the new iterator

I also found that the tricky case of CopyAnyInto wasn't being triggered
by the test suite, so added a new function ndarray.setasflat, which
calls CopyAnyInto.
",doc/source/reference/arrays.ndarray.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/matrixlib/tests/test_defmatrix.py
22d96096bf7d5fb199ca80f2fcd04e8d27815476,"ENH: core: Replace PyArray_CastTo with a call to PyArray_CopyInto

Since CopyInto uses the dtype transfer mechanism to do the copying,
this also fully handles casting.  This also exposed a byte order issue
in the dtype transfer code of converting to object arrays.

The switch from position-based structure copying to name-based copying
required a small change to a masked array test as well.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/ma/tests/test_core.py,numpy/ma/testutils.py
e39a70cffdd40ed2868a574803bd9535289d528d,"ENH: core: Add needs_api output boolean from dtype transfer

This change allows the NEEDS_PYAPI flag to be re-relaxed from the
string, unicode, and void types.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src
e6c3a0c9411fa0fb701261a206a2a4d002de68cd,"ENH: core: Implement PyArray_CopyInto using the new iterator

This change also uses the dtype conversion code implemented for new
iterator buffering, which differs slightly from the previous casting
behavior.  In particular, fields are matched up by name instead of
position, so code depending on that behavior breaks.  The loadtxt
function has been fixed to not depend on this casting behavior.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
03dd59a0fa368d30a05b5a3d7da8d41b253e087a,"ENH: iter: Add macros for detecting and using trivially iterable cases
",numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/lowlevel_strided_loops.h
eb927cee8832dc13da53b13582ba0c970c3f3154,"ENH: iter: Change PyArray_StridedTransferFn typedef to match NumPy function typedefs
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src
4f84b99ceb1e125e113b0fec0bb49bef1f4bd9ea,"ENH: iter: Run-length encode the representation of subarray broadcasting in data transfers
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/tests/test_numeric.py
165d98d9a574aaba367f20b4fcd8dec7fda0bafb,"ENH: core: Switch nonzero to use the iterator as an example, add count_nonzero function
",doc/source/reference/routines.sort.rst,numpy/add_newdocs.py,numpy/core/code_generators/numpy_api.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_numeric.py,numpy/ma/core.py
1604e898911755ee29f829ee2ae1ffcc80c3dade,"ENH: iter: Replace the last dtype decref with a transfer function method
",numpy/core/src/multiarray/dtype_transfer.c
9bf5bc64b704fcc19f6b0665666bc4b054d44094,"ENH: iter: Add support for custom dtypes by wrapping copyswap when necessary
",numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src
a57d809e7f0144af8329d3313afc87edecc5d1ea,"ENH: iter: Use the new code to do buffer decrefs
",numpy/core/src/multiarray/new_iterator.c.src
5245d390eb5e22634fd3a48a13c276216a2f894f,"ENH: iter: Add support for buffering arrays with fields and subarrays
",numpy/core/setup.py,numpy/core/src/multiarray/dtype_transfer.c,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_new_iterator.py
85f391bcf2e580e4a5644eba3719e13a6c135638,"ENH: iter: Make the transfer buffer size a macro instead of hardcoded 32
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
e15f1110afcb0e0f5eacea4a9c5c5c27818e84a6,"ENH: iter: Move cast transfer function logic to its own function
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
6d81f66b791d7e20eab0d00a33f637d393451027,"ENH: iter: Implement subarray transfer functions
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src
2b04a70392fb8a26cb0f2e3f465771be30edf2ad,"ENH: iter: Add support for iterating object arrays
",numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
7c3b6b8d471778eb9fda7636bae33a1f387ee6c1,"ENH: iter: Add check for buffered output allocation without delayed bufalloc

When allocating an output and specifying it's to be read, most iteration
modes allow the code to fill the allocated output with a value before
starting actual iteration.  When buffering is enabled and delayed
buffer allocation is not, this won't work, so throw an error
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
c44820a695e7baf1e3196f359f9d91f0afef61ae,"ENH: iter: Add support for buffering string and unicode arrays
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
f72c60510a225f242a36cdbbc3aacf1b36f05f22,"ENH: Add minlength keyword to bincount. Patch from ticket #1595.
",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
ebc963dcc18a63109c4bd9ce2110c6982431b562,"BUG: iter: Added missing new_iterator_pywrap.h
",numpy/core/src/multiarray/new_iterator_pywrap.h
e32e8c9690a6149fd4aadc7c46f35ac930c19ace,"ENH: iter: Expose PyArray_CastingConverter, add 'K' to PyArray_OrderConverter
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator_pywrap.c
d6f743da251e8967d5e44a982c0a43658008cad2,"ENH: iter: Add mechanism to use critical iteration functions without the GIL

In particular, the Reset*, GetIterNext, and GetGetCoords functions gain
a new parameter 'errmsg'.  If a non-NULL value is passed into it, error
messages are passed back in this parameter instead of setting the Python
exception.
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c
96182f80edb4b7fc251f542317642f49027a5126,"ENH: iter: Add access functions for some buffering properties
",numpy/core/code_generators/numpy_api.py,numpy/core/src/multiarray/new_iterator.c.src
595d4530fb7c1957f173da1da1a00ea8714c1832,"ENH: iter: Split flag NBO_ALIGN into NBO and ALIGN, add CONTIG flag
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
e70ee980900b8535b2387be6a18adfbc32c470bc,"ENH: iter: Add the new iterator to the exposed API

To do this, I also removed the search/replace of 'intp' to 'npy_intp',
and did that change manually in a number of files.  The NOPREFIX
macro-based emulation of C++'s ""using namespace"" feels a bit off to me
anyway.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/new_iterator.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
eff3118c9a8b1a08a43a437947f12143bb544ff4,"ENH: iter: Move new_iterator.h to the include directory
",numpy/core/{src/multiarray,numpy/core/setup.py,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c
e8101f5d55541fcd25c5fe0d3dd5f37a5c66a3fc,"ENH: iter: Add NPY_ITER_DELAY_BUFALLOC flag, fix Python iterator wrapper issues
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
3550d410594cc86ae1a3d730bf689b484e0627de,"ENH: iter: Added NpyIter_Copy function
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
07db847afe506dc1eb3a118328077fb36ba8f216,"ENH: iter: Add the ability to iterate over iterator index subranges
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
05721c2c9a58ffd0a069f9830bfae2e4b22b12d5,"ENH: iter: Make the GROWINNER flag not imply BUFFERED
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
3026d406f64e41ec34f7dc9d912466b23d10cc89,"ENH: iter: Add getting and setting of IterIndex, the iteration index
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
181794b6275db17e9af917f7c080887626314b5a,"ENH: iter: Shorten flag NPY_ITER_C/F_ORDER_INDEX to NPY_ITER_C/F_INDEX
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
ac2877b26bc6cac93dcd5dc04d94627fc836e69d,"ENH: iter: Change the meaning of itersize to be the number of elements, not the number of iterations
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/tests/test_new_iterator.py
e045964de9b1cd7dcbbb6358672f63a1e116079c,"ENH: iter: Some more small clean-ups in iterator construction
",numpy/core/src/multiarray/new_iterator.c.src
380d34e32b268f5a1dd26f18604b94303b1818bc,"ENH: iter: Clean up iterator creation code
",numpy/core/src/multiarray/new_iterator.c.src
1f75aa0d7e3caacbfeb4aa730cc4496c4727359e,"ENH: iter: Move code out of NpyIter_MultiNew into functions
",numpy/core/src/multiarray/new_iterator.c.src
45c009a3425e4c60e68fa3dbe16524ba9c19d3a8,"ENH: iter: Change internal iterator member access to improve type safety
",numpy/core/src/multiarray/new_iterator.c.src
b3efccc0e7de4c73f3bd009714f3586360baeecb,"ENH: iter: Change nested iteration pattern and add nested_iters Python function

Nested iteration now uses a function NpyIter_ResetBasePointers, and the
NPY_ITER_OFFSETS flag which was the previous way to do this has been
removed.
",numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
fe791db7b96ca4f19d490f43cf3dc5157d7e325f,"ENH: iter: Refactor npyiter_init parameter conversion into separate functions
",numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
6f87e6ec6fd43e01af386874c0dea6489608986d,"ENH: core: Change NPY_USE_UNALIGNED_ACCESS macro for low level loops
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src
f503ddb66decd2a9051b501c55a79da6be3a5a82,"BUG: iter: Fix code and test for NPY_NO_CASTING case
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
0ff9d91f8747a0a75f04d9e6596e7f8f46d379d9,"BUG: iter: Fix a crash with the NO_BROADCAST flag
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c
d7203d0cd899081c0b421ae44e31342070c7a2e9,"ENH: iter: Shorten COMMON_DATA_TYPE flag to COMMON_DTYPE
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
ba576a7faa8b5c67de4e078dba53f7fd88b0b8a1,"ENH: iter: Move casting flags into a casting= parameter
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
f36566682043e9b2a27f3171c1fc94e63977d494,"ENH: iter: Move forcing the iterator order into an order= parameter
",numpy/core/include/numpy/ndarraytypes.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
516a38d1090ff3504a60da3da9205bd1fe0ff0d9,"ENH: iter: Detect cases where buffering of some operands can be skipped
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
ed53e18a37736cfd7dd51c893d94471c4a37e92e,"ENH: iter: Added a no_broadcast flag to ensure an operand matches the iteration dimensions
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
82643de85d2a8d25ebba351d707a2f13122d6c52,"ENH: iter: Add buffering support to more casting/swapping cases
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/tests/test_new_iterator.py
578e01aa1587bb50a2eb1da09276f83289d56d41,"ENH: iter: Small iterator tweaks
",numpy/core/src/multiarray/new_iterator.c.src
0ce35a2f475fac70b10e721e972846614aeee09e,"ENH: iter: Support the combined build option
",numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
9e86467e67491a929feb2b8cb42753bad5f105c9,"ENH: iter: Add simple tests for buffering
",numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
6d41baf0f07b67aa4cfdd275b3dd562ceed9c3de,"ENH: Implemented basic buffering
",numpy/core/setup.py,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,numpy/core/src/multiarray/lowlevel_strided_loops.h,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
3f5de70b2d7841c32547b4a87c16dc6e10658335,"ENH: Add some utility functions for modifying the iterator
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
6db2223b7c8e6ff0ba338c96a0ac382430930472,"BUG: iter: Fixed finding of common dtype with outputs factored in as well
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
b07ad2bb98cdda94a25b7c9941efd37c9efa82e4,"ENH: iter: Renamed PyArray_NpyIter* -> NpyIter*, consistent with numpy-refactor NpyArray*
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
45539010b72cac60d4c66ba301f0d1910bbae05f,"ENH: iter: Shortened some flag names, adjust casting code
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
a227288d3e162b16aa73bb22308afe335adb732c,"ENH: iter: Remove max/min ndim parameters, they mostly get in the way
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
455f20f0d397f8fe28d3066cb81ab6f28328290c,"ENH: iter Change iterator to just support numpy arrays
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
404f9b5ef5ed750e238d053e60241f2bb8acd7c0,"BUG: iter: Fix dtype reference count error
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
4d705232f0e4a1c35861798cf65e29ff9296ef6c,"ENH: iter: Add the ability for Python to get a view of the iteration as an array
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
3f33e1c5c8bffcb69eccb1eb6f817f837db5ac9a,"ENH: iter: Add array subtype support using the priority property
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
e2d8b7871823a33423ea637102a4da4c2079ad55,"ENH: iter: Add ability to automatically determine output data types
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
b9f1c9aff5449cd266d438a7d70cecf90c7aa24c,"ENH: iter: Expose noinner support to the Python iterator interface
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
2878cd87b4134812072b9c2c93164077d127f1fb,"ENH: iter: Add support and tests for automatically allocating outputs
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
6e1da06ff40776313b842c0ac82eabe156047b44,"ENH: iter: Implementation and tests for nbo_align flag
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
a17241deb9b5162f6c2dc62fa3cd5f85d3496f26,"TST: iter: Add tests for array casting
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/tests/test_new_iterator.py
8780e1bf49ee25e2c04c2ad6ad185b7ed8c4c60d,"ENH: iter: Work towards supporting temporary copies
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
63ddc8d567412f71748b41c1574a1a7604e3de0b,"ENH: iter: Implement scalar casting
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
7b0f6e9d803395dfacc4f5645406a6738312d5e8,"ENH: iter: Added error checking and tests for casting-related flags
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
b14aa3f676544d8bcfae5829b0133b6ef31b0ded,"ENH: iter: Begin writing support for the iterator making temporary copies
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
a2f915a257e5321207b4f547a68ee515fee61fb9,"ENH: iter: Add ability to produce offsets instead of pointers
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
08f4cd0b2567b469a58cb88458be5c1d14bf3aa9,"ENH: iter: Add GetShape function, more tests
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
8ed883f028878c739760d3ce0118a3b732843f10,"TST: iter: Test that errors get raised for bad flag inputs
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
32f30d661b9751862f625051a4d06212b64701ac,"TST: iter: Add tests of axis coalescing
",numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
0ee1d1545b7910455dc69c7abbf1e02226d0fe26,"TST: iter: Add some tests of the new iterator
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c,numpy/core/tests/test_new_iterator.py
74530a081758c6bd70ccc4cb0cf33ab9c00c641f,"ENH: iter: Start Python wrapper of new iterator
",numpy/core/code_generators/numpy_api.py,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h,numpy/core/src/multiarray/new_iterator_pywrap.c
2dc6e3a6001c2214bfc2c9eb87b1e389fd04e86f,"ENH: iter: Tighten up per-operand read/write flags
",numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
0a986f2df8119b4570776c3ba8ae9c32d4eb60c0,"ENH: iter: Add Reset, GotoCoords, and GotoIndex functions
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
97734ae7525699600668322464435a7f54f42cdb,"ENH: iter: Create MultiNew function, make New call MultiNew
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
e327042f8c1756e3e3c7d1c7e4391359ba08c548,"ENH: iter: Move more code from the constructor into functions
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
01b265035389024bb11da41d303f3a08ad37135f,"ENH: iter: Move constructor functionality into functions
",numpy/core/src/multiarray/new_iterator.c.src
161baa869bf99aeebc7d36af755b5ba9cb98aad3,"ENH: iter: Move operand preparation into a function
",numpy/core/src/multiarray/new_iterator.c.src
3e504b96989d0fd4bb260949f126bf3435ad28a3,"ENH: iter: Make the iterator work with scalar inputs as well
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
d35ca0b92b600817a7800e67216c1bba1a9ce70b,"ENH: iter: Add readonly/writeonly flags and more input checks
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
9cdb2ead9830210d611908dc394ed6426d245e09,"BUG: iter: Axis coalescing wasn't correct
",numpy/core/src/multiarray/new_iterator.c.src
d78b89dafae2bfa042ebe3f50ab2319e71f87693,"ENH: iter: Add ability for caller to handle inner loop
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
64cad9d6d48777c5e5148c3c0eb57f684ce64eee,"ENH: iter: Add axis coalescing
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src
bfe1242492a3e448bf9b6edb5082a39e83639637,"ENH: iter: Make zero-dimensional inputs work
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src
8b20488cc3e4baaad5bddbe447c967ec562d895f,"ENH: iter: Sort the axes to find the best iteration order
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
30b6eeb59ff18430a1ebdf9b4120a39a4919221b,"ENH: iter: Add negation of axes with negative strides
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
16057cd52419d874c9214f075bc3233c7adef139,"ENH: iter: Add ability to force the iteration order (C, F, ANY)
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
fa160f2bd05615c187f9a752eb9aa92771c4b065,"ENH: iter: Add the ability to get the iterator coordinates
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
2d5a98591d897e2ea3cd3e119c1133c00bcb93a3,"ENH: iter: Track indices, use templating to specialize iternext
",numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c,numpy/core/src/multiarray/new_iterator.c.src,numpy/core/src/multiarray/new_iterator.h
c70c602cb13e674af132e9d62e9b8c3523abecfc,"ENH: iter: Basic version of iterator is running
",numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/new_iterator.c
58a408450efadbcff4b8df732d491fa16cb8406a,"ENH: iter: Start with iterator member access macros
",numpy/core/src/multiarray/new_iterator.c
7dd477a3100a0afbb7442b8a51b3471aa390e668,"NEP: iter: Add some typical inner loop examples, other small changes
",doc/neps/new-iterator-ufunc.rst
d43668c6284bc5cef4da155dcca6800b003294b7,"fix for datetime64[s] hours exceeding 24 and test to demonstrate
",numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
15d11d43b07ab80578268a8ae107c27a811ba4c2,"NEP: iter: Add functionality for allowing multi-threaded iteration
",doc/neps/new-iterator-ufunc.rst
dd46d30d534b85b205ebe9b40087c93032208a90,"NEP: iter: Add NpyIter_ResetBasePointers function, remove NPY_ITER_OFFSETS flag
",doc/neps/new-iterator-ufunc.rst
945126079dd1e48c96629799108a3dec91809085,"Apply patch by bsouthey in Ticket #1475 to turn off appropriate tests when ctypes
is not installed.  This is of particular importance to STScI since this test is
breaking our nightly build/test setup.
",numpy/lib/tests/test_type_check.py
bf5d4041d0fc2a17197b7a6101f5358d6f22c2db,"NEP: iter: Clarify op_axes slightly, and add offsets example
",doc/neps/new-iterator-ufunc.rst
ac647ffdecab5d4c4019d88db6e48b45726e6507,"NEP: iter: added table of contents
",doc/neps/new-iterator-ufunc.rst
44ba4e3501d6c8438ee2132dc917fc22663bf38b,"NEP: iter: Added Lambda UFunc example
",doc/neps/new-iterator-ufunc.rst
01ce669508080fd2d4c1f9c246a1a4260a2f2cb9,"NEP: iter: Switch from flags to a 'casting' parameter
",doc/neps/new-iterator-ufunc.rst
66c549ecf49721ece045f79b7a9c708f62a19641,"NEP: Created deferred UFunc evaluation NEP
",doc/neps/deferred-ufunc-evaluation.rst
3de1f1623fbd70643f47b4dc25c0fdb843a3b820,"NEP: iter: Created Iterator/UFunc optimization NEP
",doc/neps/new-iterator-ufunc.rst
799179d1466f274dfef66d6aeea394b2c7cff729,"BUG: core: PyArray_ObjectToScalar converts True/False to int

In CPython, boolean is a subtype of integer, so the PyInt_Check
was catching booleans as well.
",numpy/core/src/multiarray/scalarapi.c
147f817eefd5efa56fa26b03953a51d533cc27ec,"STY: Break some long lines
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/ieee754.c.src
7e18eafe4480246062b3c40e3df1e90ee268181d,"BUG: core: Some fixes and clean up of floating point exception code
",numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/halffloat.c,numpy/core/src/npymath/ieee754.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_errstate.py,numpy/core/tests/test_half.py,numpy/core/tests/test_numeric.py
e2e265248d2a1f7f71d28e3d6ebebeb8eb597c71,"BUG: Fixes ticket 1693.
",numpy/f2py/crackfortran.py
6aacc2d373c961865c43f139acbf15d9cb823c04,"BUG: Try fix for python 2.4, use list instead of tuple.
",numpy/lib/npyio.py
67ed62e086f8979fa2c49e60ba5c89a3e8feae41,"BUG: Fix ticket 1679.
",numpy/f2py/crackfortran.py
c0e1c0000f27b55dfd5aa4b1674a8c1b6ac38c36,"BUG: core: The array_richcompare result, temp, may be a scalar so need to check

This was causing a segfault on some platforms.
",numpy/core/src/multiarray/arrayobject.c
8d0b5817a3fd4f3ce465aba2fd0ddd30677b8e60,"ENH: add support for the PathScale compilers on Linux. Closes #1043.

Thanks to R. Perez.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/pathf95.py,numpy/distutils/pathccompiler.py
a70de5c870aa9406ddd84fd98e3d32d4c006d18e,"BUG: complex.h is broken on Interix, so skip it. Closes ticket #1365.
",numpy/core/setup.py
9e8bf666147f32f45debf0e1cc2b960c4e1b7e61,"DOC: Add release note mention of float16 type
",doc/release/2.0.0-notes.rst
2ee163942a7461b14f53523dadbda7b4e5e18efd,"Merge branch 'm-paradox-implement_half_dtype'
",doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/figures/dtype-hierarchy.dia,doc/source/reference/figures/dtype-hierarchy.png,doc/source/reference/ufuncs.rst,doc/source/user/c-info.beyond-basics.rst,numpy/core/SConscript,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/getlimits.py,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/halffloat.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/npymath/halffloat.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_getlimits.py,numpy/core/tests/test_half.py,numpy/doc/basics.py,numpy/doc/structured_arrays.py
c6f8dbbd240ada8d0edd0527cd218cfc46deec41,"ENH: Rename the half character code from 'j' to 'e'
",doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/ufuncs.rst,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/numerictypes.py,numpy/core/src/umath/loops.c.src
9b72aa96cec9d182062f378fca869aaa303f1ca9,"DOC: core: Update docs for half/float16 type
",doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/figures/dtype-hierarchy.dia,doc/source/reference/figures/dtype-hierarchy.png,doc/source/reference/ufuncs.rst,doc/source/user/c-info.beyond-basics.rst,numpy/core/include/numpy/halffloat.h,numpy/doc/basics.py,numpy/doc/structured_arrays.py
632ba9b0cfc07ef7ca49fedc698ebfd3a9031be2,"ENH: core: Add half/float16 character code to numpy.typecodes
",numpy/core/numerictypes.py
0a0873f46ccde5ff24fdef078965b4b79c703742,"TST: Refactor the half test to use a fixture
",numpy/core/tests/test_half.py
89d8512cda0b9c94a1ab7992ae71327761521b21,"ENH: core: Add floating point exception support to the half/float16 type
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/npymath/halffloat.c,numpy/core/tests/test_half.py
82a5d0b8c08f315ee14ed4ec9cc4c25ca6dad595,"ENH: core: Add half/float16 finfo support
",numpy/core/getlimits.py,numpy/core/tests/test_getlimits.py
88feef8f35cfb30795ed5c02031b69d99827b6f4,"ENH: core: Fix up coercion rules for half/float16
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_half.py
8f354f6208ef14753f2c5988a11536d5918c2c38,"ENH: core: Update the sorting module for half/float16
",numpy/core/setup.py,numpy/core/src/_sortmodule.c.src
db128ccbf60470b0f50eeb97c5885ac253e08c31,"ENH: core: Implement half/float16 umath loops
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_half.py
15c68128fea5618902c62c62436e2bad1eb865b7,"ENH: core: Create half/float16 data type
",numpy/core/SConscript,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/halffloat.h,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/old_defines.h,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/npymath/halffloat.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_half.py
af84876fac13ac2e4e44ac0cae599fe9d6e68643,"ENH: Remove type number ordering assumptions in CanCastSafely, ScalarKinds, and CanCoerceScalar

Also add print_coercion_tables.py to aid when refactoring
type casting/coercion/promotion.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/usertypes.c,numpy/core/tests/test_numeric.py,numpy/testing/print_coercion_tables.py
9273a6139e7b797244b5b88fb371059cc7c3ea3a,"DOC: BUG: correct description of ndarray iterator. Closes #1687.
",doc/source/reference/arrays.classes.rst
6d49edca12de7951244c6ed050872c3c40a97add,"BUG: Py3: ensure version.py imports are translated appropriately
",tools/py3tool.py
cfd4c05c121e33f0813f6e1523f846a4d7e17ce3,"TST: Add regression test for ticket #1676.
",numpy/lib/tests/test_regression.py
f0c3443b27391efb1b14161729e2df8ec24b5fcc,"BUG: data shouldn't be an optional argument.
",numpy/lib/recfunctions.py
3b8cf12ee19994389ae3261666dd32cced4787be,"BUG: Fix logic in handling of dtype in append_fields.
",numpy/lib/recfunctions.py
8fa2591fee88937b81c39a6c529fa66975f88856,"BUG: Fix GzipFile wrapper to be <= 2.5 compatible.
",numpy/lib/npyio.py
0131218566f5daf215dab7bf5b46705145ac87c6,"BUG: setup.py: write version.py only after switching to Py3 build dir

This prevents importing non-2to3'ed numpy in Python 3 build, if
numpy/version.py exists for some reason but .git does not (e.g building
multiple Numpy versions from same source tree).
",setup.py
12d020070e8c6698500103889f55bd36dfcab374,"BUG: Fix exception handling for python 3k.
",numpy/ctypeslib.py
ced0e77e34e3d46edd4e47178060b3abfc1f9221,"ENH: core: allow record array comparison when sub-arrays are present
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_multiarray.py
223f553725e41599a11313169642f064ad248059,"BUG: core: Change subarray field indexing to always append the shape, add tests
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
e6f253346d7d87ba362f8283205f09eb336c482d,"ENH: core: add order= argument to recarray __new__
",numpy/core/records.py
4926abe4504a1954ec169e3541030ffe97db7526,"DOC: Made problems with arange floating-point steps more clearly spelled out.
",numpy/add_newdocs.py
8cbed8ce5253a0aa4341e6edbf8be123a06bb123,"ENH: Remove deprecation warning from GzipFile wrapper.
",numpy/lib/npyio.py
277c740f798b93a4348054bcd9ee6f6e42f659e0,"BUG: Remove invalid reference to FULLVERSION from setupscons.py.
",setupscons.py
f26fdc9afe40e4be40fc566542ca7342e57d2909,"BUG: GzipFile wrapper objects are not garbage collected (closes ticket #1356).

The underlying problem is that classes monkey-patched via
new.instancemethod will only free memory correctly if they do _not_
implement the __del__ method, which is not the case for gzip.GzipFile.

My proposed solution is to inherit from gzip.GzipFile and override
relevant methods instead of monkey-patching.
",numpy/lib/npyio.py
9d1c386cb515617235d12006b1adfad9ccf45d52,"Merge branch 'm-paradox-scalar_fpe'
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_numeric.py
91d4145f30d6795ee4b8e41f476f847b496a3f5d,"STY: Cleanup white space and break long lines.
",numpy/core/tests/test_numeric.py
72a702d22cfcdba0346670defe887801c0e53eaf,"BUG: core: Make scalar output volatile to prevent incorrect optimizer reordering (#1671)
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_numeric.py
d1a184c1a112ffbaa553915c043c2b6851e4fc91,"BUG: setup.py: make git_version() work on Python 3
",setup.py
de4de92be21e4dda3665648ad5102b3729d4e0b0,"genfromtxt: Taking more adequate testing values when updating converters: bug #1665
",numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
fad376ead11b8e0f3101d37b62b0c8d5ba40af72,"Fix bug #1656
",numpy/lib/_iotools.py,numpy/lib/tests/test_io.py
a9d936ee92b1732256e30db44377b53769e6241e,"Fixing genfromtxt: names w/ usecols (bug #1636)
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
4a7de57448091ef02e50edf9d1e302c20a26ff0c,"DOC: rename ReST files under doc/ from *.txt to *.rst.txt, so they render on github.
",doc/{CAPI.txt,doc/{DISTUTILS.txt,doc/{EXAMPLE_DOCSTRING.txt,doc/{HOWTO_BUILD_DOCS.txt,doc/{HOWTO_DOCUMENT.txt,doc/{HOWTO_MERGE_WIKI_DOCS.txt,doc/{HOWTO_RELEASE.txt,doc/{Py3K.txt,doc/{TESTS.txt,doc/{records.txt,doc/{ufuncs.txt
a07ac0f4703cbac0e8747ac0e9e08f41cba9b896,"ENH: Add '-' to separate git hash in version.
",setup.py
0ba85ce9ce22ed1885858e052afbff8636b77bab,"Merge branch 'scottza-git-dev-versioning'
",numpy/__init__.py,setup.py
0502dabaf091833ab46f2e81a8f8f7eba9040897,"REF: Make version.py more readable
",setup.py
d5ed74419bfae16427da975de6140c1c945cf7c5,"ENH: Use seven character git hash for dev version string

- Also correct spelling of 'Unknown'
",setup.py
58e63603e6eef1e3710a0ddae938b25ffb7c3bce,"ENH: Add Git revision hash to numpy dev version string

- Appends the first 6 characters of the Git revision used to build
  Numpy

- Adds an additional attribute to easily obtain the full Git revision
",numpy/__init__.py,setup.py
8adfc76a1b6f772f3fd81b28d6696a7dbcd4ab8b,"DOC: update release docs.

- clarify some things that Vincent Davis and Friedrich Romstedt ran into when
  following this doc on a new OS X install.
- update Python versions supported at the moment.
",doc/HOWTO_RELEASE.txt
c980bfe12cf624752d8355aeecbb485df5ec2ae0,"TST: mark cexp tests as knownfail on OS X PPC.
",numpy/core/tests/test_umath_complex.py
cb8ebd26f05524725bb16037bf07af3be839b0e4,"TST: silence ldexp overflow warning.
",numpy/core/tests/test_umath.py
435c7262592e94c8519f4288a19035de054758fd,"BUG: fix issue with incorrect Fortran arch flags. Closes #1399.

The basic idea here is to compare arch flags the Fortran compiler supports with
the ones the C compiler receives, and throw out any superfluous ones.
",numpy/distutils/fcompiler/gnu.py
6e5590ff95219c5323f33159034930de2d248448,"BUG: core: nonzero() requires swap for float types
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
12e936a7f793df5b76b639382c7b302c3153c2b3,"DOC: BUG: fix bug in example of np.spacing. Closes #1659.
",numpy/core/code_generators/ufunc_docstrings.py
2b06549232202775546d425c4725b0a46002070c,"BUG: Git treats any line in .gitignore containing # anywhere as a comment.
",.gitignore
a32caf5d6db20c42e12ed17eb0f9ca835c25f9b0,"TST: core: refactor test_dtype slightly
",numpy/core/tests/test_dtype.py
b12429704242314703797ed2076d3036d19327eb,"BUG: core: force dtype subarray->shape to be always a tuple
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py
50125047593acd877f72da200a3e49343ca51cdd,"BUG: core: handle sub-arrays in dtype comparisons
",numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_dtype.py
33b3e601043a66491d468a5ba7485181ca7506cc,"add .gitattributes and fix line endings
",.gitattributes,branding/icons/numpylogo.svg,branding/icons/numpylogoicon.svg,tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
cdcbaa4ce4b47a7bfd8905222124fd22460252a5,"BUG: fix bug in dtype hash implementation for equivalent but different byte order character.
",numpy/core/src/multiarray/hashdescr.c,numpy/core/tests/test_dtype.py
6bcb36f5447ad47138e003b1d82a2c37c1027d37,"DOC: dev: update also the overview
",doc/source/dev/gitwash/patching.rst
8e4efa9233ff3dc72064a08d9eeb5973afab52a3,"DOC: dev: update instructions on sending patches
",doc/source/dev/gitwash/patching.rst
fd19f049670b8dd609f65e34d0267b6491635d1a,"BUG: core: Enabled keyword argument for 'order' parameter where it was missing, and tweaked some docs (#1581)
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py
05be85cca392b65a82cdd12d423b2b26fb5c83e8,"TST: core: disable C99 complex tests also on Solaris if it seems that the platform functions are flaky
",numpy/core/tests/test_umath_complex.py
3747ab5ec181368dcfa57a5436e40e0ec1927641,"TST: core: mark test_ldexp_overflow as known failure on Python < 2.6 on Windows, because of apparently broken C runtime in the python.org binaries
",numpy/core/tests/test_umath.py
3c2af9e9bff5ad9fdd394f43e14a43fdc6bf6d50,"DOC: dev: try to improve Git workflow docs
",doc/source/dev/gitwash/configure_git.rst,doc/source/dev/gitwash/{set_up_fork.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/following_latest.rst,doc/source/dev/gitwash/forking_hell.rst,doc/source/dev/gitwash/git_development.rst,doc/source/dev/gitwash/git_install.rst,doc/source/dev/gitwash/git_intro.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/gitwash/patching.rst,doc/source/dev/index.rst
98484bb6e3958a26d8f7a4742975e13713003c64,"TST: core: fix test_fromfile_tofile_seeks to work on Windows
",numpy/core/tests/test_regression.py
ba019417f66168b32357f397df7fd45808fd1ce4,"BUG: on Windows the sysconfig module does not contain CFLAGS info.
",numpy/distutils/fcompiler/gnu.py
106d40f3e2ece8b03494fdae8e2f64528ce594e2,"Merge branch 'deprecation-docs' of http://github.com/rgommers/numpy into rgommers-deprecation-docs
",README.txt,doc/TESTS.txt
f4d9da1e86d1031e99549073681831270e450fb4,"TST: remove a failing doctest for poly1d.

The failure only occurs on Windows and Python 2.5, there the printing of
floating point numbers is slightly different. Since this is a doctest and can
not be marked conditionally as knownfail, just removing it is simplest. It's
not a bug anyway.
",numpy/lib/tests/test_polynomial.py
9dd7c7b8ad826beefbbc0c10ff457c62f1be223d,"UPDATE: gcc-4 series do not support -mno-cygwin option.
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py
43b05fdd1c0ba1c6686297d16d257985dd986d3b,"Merge branch 'master' of git@github.com:numpy/numpy
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_umath.py,numpy/distutils/fcompiler/gnu.py
1ef8aac121008e558040d8937788daed46ce8ca4,"BUG: f2py: fix creating string object from callback function using string size.
",numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py
6cd460c0615066b33b8d36a4fc8c872b415851fc,"DOC: recommend to turn on deprecation warnings for Python >= 2.7.

This was brought up on the mailing list on 10 Sep 2010.
",README.txt,doc/TESTS.txt
93f7521dd0ac9edc0034eec5501a126cc4683b70,"BUG: core: implement a long-int loop for ldexp, for cases where int != long (#1633)

long != int on many 64-bit platforms, so a second ufunc loop is needed
to handle ldexp long int inputs.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src,numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_umath.py
d24db3430a6710d18f9f9e77c89ee442e9c0d631,"BUG: core: adjust ComplexWarning location frame up by one, so that the warning comes from the correct location (#1639)
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/scalarmathmodule.c.src
658a1dc843f26cd9f1815664d1634f3f0f9d8616,"BF - get fortran arch flags from C arch flags if available
",numpy/distutils/fcompiler/gnu.py
eca8f94e294003336d901b7e718375fad0c2619c,"BUG: DOC: fix invalid vdot documentation
",numpy/add_newdocs.py
1ee71d93fd069a51f45b4fa91e9e91d083a9334e,"Added tests to test_eq_w_None (bug #1493)
",numpy/ma/tests/test_core.py
b0c993624c87e27dc2a70f93f0ef78bedac3c36c,"Revert ""merging refs/remotes/origin/master into HEAD""

This reverts commit a14dd542532d383610c1b01c5698b137dd058fea, reversing
changes made to 11ee694744f2552d77652ed929fdc2b4ccca6843.
",.project,.pydevproject,numpy/ma/tests/test_core.py
4bbe9a87ff41f8444af73a791482c18995293ddc,"ENH - improved .gitignore
",.gitignore
a14dd542532d383610c1b01c5698b137dd058fea,merging refs/remotes/origin/master into HEAD,DEV_README.txt,doc/HOWTO_BUILD_DOCS.txt,doc/HOWTO_DOCUMENT.txt,doc/Makefile,doc/TESTS.txt,doc/numpy.scipy.org/Makefile,doc/numpy.scipy.org/_theme/scipy/index.html,doc/numpy.scipy.org/_theme/scipy/layout.html,doc/numpy.scipy.org/_theme/scipy/static/favicon.ico,doc/numpy.scipy.org/_theme/scipy/static/images/bugs.png,doc/numpy.scipy.org/_theme/scipy/static/images/documentation.png,doc/numpy.scipy.org/_theme/scipy/static/images/download.png,doc/numpy.scipy.org/_theme/scipy/static/images/feed-icon.png,doc/numpy.scipy.org/_theme/scipy/static/images/tutorial.png,doc/numpy.scipy.org/_theme/scipy/static/logo.gif,doc/numpy.scipy.org/_theme/scipy/static/numpy_logo.png,doc/numpy.scipy.org/_theme/scipy/static/scipy.css,doc/numpy.scipy.org/_theme/scipy/theme.conf,doc/numpy.scipy.org/conf.py,doc/numpy.scipy.org/content.rst,doc/numpy.scipy.org/license.rst,doc/numpy.scipy.org/old_array_packages.rst,doc/source/_templates/indexcontent.html,doc/source/conf.py,doc/source/contents.rst,doc/source/dev/gitwash/branch_list.png,doc/source/dev/gitwash/branch_list_compare.png,doc/source/dev/gitwash/configure_git.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/dot2_dot3.rst,doc/source/dev/gitwash/following_latest.rst,doc/source/dev/gitwash/forking_button.png,doc/source/dev/gitwash/forking_hell.rst,doc/source/dev/gitwash/git_development.rst,doc/source/dev/gitwash/git_install.rst,doc/source/dev/gitwash/git_intro.rst,doc/source/dev/gitwash/git_links.inc,doc/source/dev/gitwash/git_resources.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/gitwash/patching.rst,doc/source/dev/gitwash/pull_button.png,doc/source/dev/gitwash/set_up_fork.rst,doc/source/dev/gitwash_links.txt,doc/source/dev/index.rst,doc/sphinxext/README.txt,doc/sphinxext/autosummary.py,doc/sphinxext/autosummary_generate.py,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/only_directives.py,doc/sphinxext/plot_directive.py,doc/sphinxext/setup.py,doc/sphinxext/tests/test_docscrape.py,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/distutils/command/config.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/pg.py,numpy/f2py/capi_maps.py,numpy/lib/index_tricks.py,numpy/lib/npyio.py,numpy/lib/tests/test_index_tricks.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
61d945bdb5c9b2b3329e1b8468b5c7d0596dd9fc,Add more tests to test_eq_w_None (bug #1493),.project,.pydevproject,numpy/ma/tests/test_core.py
11ee694744f2552d77652ed929fdc2b4ccca6843,"BUG: core: richcompare must indicate undefined comparison via Py_NotImplemented (fixes #1491)

The Python documentation indicates that the result from comparisons
should be Py_NotImplemented when undefined, and there is no reason why
not follow that also in array_richcompare.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_regression.py
d7ff9074fcde66225478d6721cf22b2db32dc2fd,"BUG: lib: clean up ancient-Python era stuff from IndexExpression (#1196)
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
68e31fe815e0cb6276970a1c365f21e187d10ca0,"ENH: lib: allow zip64 extensions in .npz files; allows > 2GB
",numpy/lib/npyio.py
61d14a1489714890bbcf0afad3665f4af47e133d,"ENH: lib: add savez_compressed function for saving compressed archives
",numpy/lib/npyio.py
99f79e3f90c09a6b3dc3d3b1a154a99dd1510e28,"BUG: linalg: lstsq should always return real residuals (#937)
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
8630830bb05bd13aab0fcd869c8339c1515460de,"BUG: io: close file handles immediately after use, where possible (#1517)
",numpy/lib/npyio.py
a16ee31eab9d75d86b2fde2ea4d6787b5f61ea9e,"BUG: core: fix duplicate name problems in dtype.names setting (#1598)
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
2be89147998f59371077b684096ae226f7294ab2,"BUG: core: fix uint64 -> Python int cast (fixes #1287)
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_regression.py
ac7bdc53fafb3dd21b51dc6d843dbda43077ab4d,"DOC: Update the testing guidelines.

Things that are changed are:
  - use assert_() instead of plain assert, and explain why.
  - do not use ""from numpy.testing import *""
  - explain #random directive for doctests
",doc/HOWTO_DOCUMENT.txt,doc/TESTS.txt
024443026aa64db9b4884822aff1d6fd633ab8d8,"BUG: core: handle errors from PyErr_Warn for ComplexWarning
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_multiarray.py
a8441313359cd4ac0d4ce36f5a265304d25117b6,"DOC: Change mention of SVN to Git.
",DEV_README.txt
9950e72506bb5aea8e7044b6c466a60e4f74a371,"BUG: f2py: fix building modules via 'f2py -c' (broken in e6eafde)
",numpy/f2py/capi_maps.py
5a0ab023d8f81ccf83fe6adf7983d7631021cb62,"BUG: core: use #if check instead of #ifdef in checking HAVE_DECL_ISFINITE (ticket #1625)

Python #defines HAVE_DECL_ISFINITE 0 when the function is not available,
so the proper check to do is #if.
",numpy/core/setup.py,numpy/distutils/command/config.py
8b0d65986dad4b4d17a51ea272bf17afc5dd7031,"Added Portland Group compiler support for Darwin platform (thanks to Josef Koller).
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/pg.py
394bb8548cd8174c81be0876380a08ffb97b99eb,"BUG: core: fix compilation with Solaris 10 / Sun Studio 12.1 (ticket #1626)
",numpy/core/src/umath/loops.c.src
1f0c9286b83f4bd2cdcbeea02dc8846147823079,"DOC: regenerate gitwash docs
",doc/source/dev/gitwash/branch_list.png,doc/source/dev/gitwash/branch_list_compare.png,doc/source/dev/gitwash/configure_git.rst,doc/source/dev/gitwash/development_workflow.rst,doc/source/dev/gitwash/dot2_dot3.rst,doc/source/dev/gitwash/following_latest.rst,doc/source/dev/gitwash/forking_button.png,doc/source/dev/gitwash/forking_hell.rst,doc/source/dev/gitwash/git_development.rst,doc/source/dev/gitwash/git_install.rst,doc/source/dev/gitwash/git_intro.rst,doc/source/dev/gitwash/git_links.inc,doc/source/dev/gitwash/git_resources.rst,doc/source/dev/gitwash/index.rst,doc/source/dev/gitwash/patching.rst,doc/source/dev/gitwash/pull_button.png,doc/source/dev/gitwash/set_up_fork.rst
8b0453630961b5788c83381c276c63273cdd53b7,"DOC: add developer docs based on gitwash
",doc/Makefile,doc/source/_templates/indexcontent.html,doc/source/contents.rst,doc/source/dev/gitwash_links.txt,doc/source/dev/index.rst
816adf97406ce3a6d2aa3059e6b84de6791b0ee3,"DOC: remove numpy.scipy.org -- it's now in a separate repository
",doc/numpy.scipy.org/Makefile,doc/numpy.scipy.org/_theme/scipy/index.html,doc/numpy.scipy.org/_theme/scipy/layout.html,doc/numpy.scipy.org/_theme/scipy/static/favicon.ico,doc/numpy.scipy.org/_theme/scipy/static/images/bugs.png,doc/numpy.scipy.org/_theme/scipy/static/images/documentation.png,doc/numpy.scipy.org/_theme/scipy/static/images/download.png,doc/numpy.scipy.org/_theme/scipy/static/images/feed-icon.png,doc/numpy.scipy.org/_theme/scipy/static/images/tutorial.png,doc/numpy.scipy.org/_theme/scipy/static/logo.gif,doc/numpy.scipy.org/_theme/scipy/static/numpy_logo.png,doc/numpy.scipy.org/_theme/scipy/static/scipy.css,doc/numpy.scipy.org/_theme/scipy/theme.conf,doc/numpy.scipy.org/conf.py,doc/numpy.scipy.org/content.rst,doc/numpy.scipy.org/license.rst,doc/numpy.scipy.org/old_array_packages.rst
a1c795349e01fc3f6aa302f8d4c788e9a7bcec5f,"sphinxext: bump numpydoc version
",doc/sphinxext/setup.py
08e85c1820f8502e2a5009da4d3d89c6462a911b,"sphinxext: remove deprecated parts from numpydoc
",doc/sphinxext/README.txt,doc/sphinxext/autosummary.py,doc/sphinxext/autosummary_generate.py,doc/sphinxext/only_directives.py,doc/sphinxext/plot_directive.py
6716be40b753daff7d705fcd440bd9e67198cff2,"DOC: explicitly require Sphinx >= 1.0.1
",doc/HOWTO_BUILD_DOCS.txt,doc/Makefile,doc/source/conf.py
4510c4a81185eed7e144f75ec5121f80bc924a6e,"sphinxext: fix Other Parameters section parsing in docscrape
",doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/tests/test_docscrape.py
75cebc1b71a161b18a45f291b97595c1f391ca46,"Merge branch 'master' into fixes
",numpy/f2py/setup.py
a1d54a888bfa33d9f97881f78cafe92a39839b3f,"ENH: Update absoft fortran flags for v11.0.
",numpy/distutils/fcompiler/absoft.py
34667890e3927d79c5b716de9ecb17480198d9c1,"BUGLET: Need ""\\n"" in string template.
",numpy/f2py/setup.py
50479e9a6f6d07e92fa2f16dbb8abfadf83c332d,"FIX: And add missing \n for error message.
",numpy/f2py/setup.py
8f6114b11efc2a01fe1158a444aeb788ddea6b01,"BUG: Fix previous fix to numpy/g2py/setup.py.
",numpy/f2py/setup.py
29cccb69fd9f4177d06b5e74e719cad11abb014b,"BUG: Fix generated f2py bootstrap script to work with python 3k.
Thanks to Lisandro Dalcin.
",numpy/f2py/setup.py
14d8e209b0fef60fdda9ed38e4a3dec8ddf91996,"BUG: core: ensure cfloat and clongdouble scalars have a __complex__ method, so that complex(...) cast works properly (fixes #1617)
",numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_regression.py
d82003ba6ab7c0037cadbcee81d4a24463f33589,"ENH: core: emit ComplexWarning also when array scalars are cast to real/int
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_regression.py
e6eafde46153f827742e89c34a9f687b7416cab8,"FEAT: add C module and f2py fortran wrapper output customization from command line.
",numpy/f2py/capi_maps.py,numpy/f2py/f2py2e.py,numpy/f2py/rules.py
c952a9cd93344d0504508ccad13bcf818658e534,"DOC: Point the npy NEP to the git repo.
",doc/neps/npy-format.txt
f4a313ea4552b78e9e78eb347f6688517e48bd41,"DOC: Remove more SVN references.
",README.txt,doc/HOWTO_DOCUMENT.txt,doc/TESTS.txt,tools/osxbuild/docs/README.txt
9c6c71dfa439a336315e98280bc12872d2caba85,"DOC: Refer to git repo in release notes.
",doc/HOWTO_RELEASE.txt
0f49fa545c4166937491b52400cfc3da886f7475,"Merge remote branch 'charris/misc'
",.gitignore
97cecfe0830eb8fd2f54856a18fa1c51c182f662,"ENH: Add .gitignore file.
",.gitignore
c970251eba07c97f6a1ecc9ce62ee1f0d2beec16,"* fixed the behavior of {{{skip_footer}}} in {{{genfromtxt}}} when some invalid lines are present (bug #1593)
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
96afea0b32c77fa60112a1a78d66af77912e2523,"* ma.core._print_templates: switched the keys 'short' and 'long' to 'short_std' and 'long_std' respectively (bug #1586)
* Fixed incorrect broadcasting in ma.power (bug #1606)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
7213c5d804412b1ab6f23c6419ba836865af517a,"* fixed 'flatten_dtype' to support fields w/ titles (bug #1591). Thx to Stefan vdW for the fix.
* added a unittest for flatten_dtype
",numpy/lib/_iotools.py,numpy/lib/tests/test__iotools.py
a70f5718a6199919e5bddf4a7daa032ae80c6779,"BUG: distutils: make is_free_format et al. not choke on non-ascii Fortran files
",numpy/distutils/fcompiler/__init__.py
36bb1c9eff58e80fe4309837c9b8eb0bb3f40b82,"BUG: core: fix npy_PyFile_Check implementation on Py3
",numpy/core/include/numpy/npy_3kcompat.h
336cd47bd08d1b54620a446aee1e546b5631d89b,"BUG: core: on Python3, seek file handle to the current position in npy_PyFile_Dup (fixing #1610)
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/tests/test_regression.py
b4629cce24744c9c9a85912e4cfaf78a46455c12,"BUG: core: fix a missing return branch in npy_3kcompat.h
",numpy/core/include/numpy/npy_3kcompat.h
b45222e6f8eea0eaaf7c773f1370f2ebc7765a2f,"BUG: core: sync Python 3 file handle position in tofile/fromfile (fixes #1610)
",numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_regression.py
d5382aa641e3a62cb7707af07724048422960ad0,"TST: disable --detailed-errors by default -- the output it gives is more confusing than useful
",numpy/testing/nosetester.py
3843e86ee3862103364b6aae2a0af8bd4ebdc986,"BUG: core: fix _dotblas usage on Py3 (fixes #1609)
",numpy/core/tests/test_blasdot.py,tools/py3tool.py
b74533baef2a88255e36e680f5dba5c0f9dd4f7b,"REL: forward-port change in size of dmg image from 1.5.x branch.
",tools/numpy-macosx-installer/new-create-dmg
bf8f5f49f5554c115da5d3da0802a20786209cb8,"BUG: core/buffer: ensure that array_dealloc runs correctly even when PyErr flag is set (fixes #1605)
",numpy/core/src/multiarray/buffer.c
59a95e87f7225adcbad28bf40b0e1f4f6071f59f,"BUG: do not add empty string when interpolating values in LibraryInfo.

This adds superflous space in strings, which cause issues when executing
commands outside shell control (e.g. '-I/usr/include ' will not add
'/usr/include' but '/usr/include ' into the search path of compilers)
",numpy/distutils/npy_pkg_config.py
32a04c4586075ce4771b86cea1013b331afa02cd,"DOC: add instructions for updating the docs to HOWTO_RELEASE.txt
",doc/HOWTO_RELEASE.txt
93ef8f7926b25bacdfe4900dc19440f602363494,"sphinxext/plot_directive: more robust relpath
",doc/sphinxext/plot_directive.py
e5387aa939b110c6cd6c27618bdbf6a94f1f104a,"DOC: some more details on release process, and blank 2.0.0 notes.
",doc/HOWTO_RELEASE.txt,doc/release/2.0.0-notes.rst
3cb0eb32de3e01a6f6ff3778b5741d1dc1cbd522,"sphinxext: be explicit about Sphinx version requirements
",doc/sphinxext/numpydoc.py
2b1f27613a28461a3898466dc6386b23a95f5ec5,"BUG: distutils: use // in a binary search (fixes #1604 on Python 3)
",numpy/distutils/command/config.py
07b7bf30c422f1c3335042691ce269a972b98954,"TST: Change outdated message for knownfail described in #1081.
",numpy/core/tests/test_regression.py
3c3d4238d866989216b1a1deda744d3923a7acc0,"REL: Apply changes to release notes and paver script in 1.5.x branch to trunk.
",doc/release/1.5.0-notes.rst,pavement.py
7843154a930459c5dd85e1e8a4762fe99620ec4f,"DOC: update doc/swig makefile and readme after moving swig/doc into refguide.
",doc/swig/Makefile,doc/swig/README
779d063af9c88152d7b1bc829410a4edb1ff4f88,"DOC: remove built separate swig docs.
",doc/swig/doc/Makefile,doc/swig/doc/numpy_swig.html,doc/swig/doc/numpy_swig.pdf,doc/swig/doc/testing.html,doc/swig/doc/testing.pdf
72665ab87449b9896dcb2db9aae36bb12c3daba7,"DOC: integrate doc/swig/doc documentation with reference guide.
",doc/source/reference/index.rst,doc/{swig/doc/numpy_swig.txt,doc/source/reference/swig.rst,doc/{swig/doc/testing.txt
9752b73d34f5e132d8e184d01e567ae693d204fc,"Add doc/swig, doc/cython and doc/pyrex dirs back. Closes #1088.
",setup.py
4f74a4900a5d396b5f79b4a1ee75f4a32892d0f7,"sphinxext: more lenient parsing for See Also sections
",doc/sphinxext/docscrape.py
362f9cb8a640eee85b9b2e929bf9444b14ffb10b,"Made sure the warning filters in test_function_base and test_arraysetops do not modify user defined filters.
",numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py
400a2a6739e0d67e2e7965ad7fa3695bebf8511d,"added a warning concerning the buggy normalization in histogram with non-uniform bin widths
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
c663655a87cfb7e818ed9d6bdb287ef3b63c3b29,"Implemented detection of gfortran usage for ATLAS linkage. get_atlas_version returns now a tuple (version_str, info_dict). Nice thing about the patch is that specifying gnu95 compiler is not needed anymore for numpy (neither for scipy) build when using ATLAS containing gfortran compiled blas/lapack.
",numpy/distutils/command/config.py,numpy/distutils/system_info.py
3743430ec92b16aadb7d0cac4515db07a15ac635,"Fixed bug in histogram for non-uniform bin widths and normed=True.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
71dfaec057fb543a42a9ad10f187b128e274169a,"BUG: Fix bug on Windows in fromfile/tofile. Closes #1583. Thanks to C. Gohkle.
",numpy/core/include/numpy/npy_3kcompat.h
451fe6addbfd13dfe211b129ec78614ac204b948,"Fix bug to ensure that swig generated .py files are installed.
",numpy/distutils/command/__init__.py,numpy/distutils/command/build_py.py
a1b13e177d30d80c34897aa55352499785206e7d,"Fix swig target extension when swig target is not defined by the .i file but should be c++.
",numpy/distutils/command/build_src.py
ff0822c48fb6cc1689a92038d579988c2db2f154,"Make extension swig_opts effective to build_src command.
",numpy/distutils/command/build_src.py
dbe18f0da8b4ec0c521dcef4dd1355742750c865,"BUG: fix re-declaration of already defined macros in python.h.
",numpy/core/setup.py
ece594122e80e938d6dff57f7f9bc0a9bc5758b4,"DOC: update release howto with notes on PyPi and python-announce list.
",doc/HOWTO_RELEASE.txt
24eb850158bfe431607a18b88bca7c379db8c4d3,"3K: make setupegg.py work through imp.

Necessary because execfile() has disappeared in py3k.  None of this works with
bdist_mpkg at the moment, but that's a separate problem.
",setupegg.py
e777aafcf83e188419cec2b28fe7c1686a32ece0,"Merge branch 'poly'
",numpy/polynomial/polytemplate.py
45020fb87b0558142d0f3ca873839663269cb2fc,"DOC: Fix documentation and examples in legendre.py.
",numpy/polynomial/legendre.py
8f1b2d6442f1d96886e3f83886f57b0dca9106e3,"ENH: Add support for Legendre polynomials.
",numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/legendre.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_legendre.py
00b74ad6aa0931985580afcca692c89c411069ca,"Merge branch 'poly'
",numpy/polynomial/tests/test_chebyshev.py
e7c59e6a65041be003a4c840994de640167201ac,"Mention functions for Chebyshev points in release notes.
",doc/release/1.5.0-notes.rst
3ade0a810b185383e97428e8c6365da1951de436,"Merge branch 'poly'
",numpy/polynomial/chebyshev.py,numpy/polynomial/tests/test_chebyshev.py
0a0248000491b40e03f29a98055a7546316cc92f,"FIX: Merge munge.
",numpy/polynomial/chebyshev.py
cc5d13150ce5e03a3523320eeca26e41086a0074,"Merge branch 'poly'

Conflicts:
	numpy/polynomial/chebyshev.py
	numpy/polynomial/polynomial.py
",doc/release/1.5.0-notes.rst,numpy/lib/npyio.py,numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py
a0f3609e88a998626309f63a9d1288fd591de6aa,"ENH: Add {cheb,poly}mulx functions as use them to simplify some code.
Fix some documentation.
",numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
6b9762c0a918acb583bee7e387863123e339e46c,"BUG: Fix integration of zero polynomials.
Remove checks that prevent use of foreign scalar types for lower
bounds and integration constants.
Cleanup code a bit.
",numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
50db7ff052aef5e0399464a6bbaa7540b83247ea,"DOC: Complete 1.5.0 release notes.
",doc/release/1.5.0-notes.rst
bd5695e05b6697e5831e4f6fd88742db78b57258,"DEP: change default behavior of correlate(), old behavior was deprecated in
1.4.0.

The old behavior should be preserved and made available under the name xcorr or
similar. Should be done for 2.0, then the old_behavior keyword can be removed.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
0855992afc56b717090eb030fa1f05d491b8f9c6,"DEP: deprecate behavior for out-of-order field indexing of recarrays. See #1431.
",numpy/core/_internal.py,numpy/core/tests/test_records.py
095b454ae922fed8ceda320e7f0b619f55e4eebb,"BUG: define LDEXPL/FREXPL functions for MSVC builds (see #1499).

Note that this doesn't fix the Solaris issue, so #1499 not closed.
Thanks to Christoph Gohlke.
",numpy/core/src/private/npy_config.h
fe3a17a297d593fed2980f311477b0e021e32262,"BUG: workaround for undefined isnan/isinf in VS2008. Closes #1502.

Thanks to Christoph Gohlke.
",numpy/core/include/numpy/npy_math.h
6037fd4b0ebe2627bbcc0b3b131635a05ac073a6,"TST: skip C99 nan/inf tests on Windows.
",numpy/core/tests/test_umath_complex.py
0a312665ee43b12758760e9ca7bc6c161f2525a5,"BUG: Better format specifier for Py 2.7, 3.2 on win-amd64. Closes #1570.

Thanks to Christoph Gohlke.
",numpy/core/include/numpy/ndarraytypes.h
6cfb3ff7d24f87257f067359fdf0957fad8f6718,"fix (flat)notmasked_/contiguous/edges/
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
1994e4ae0f9e98c419793c7d3e6a079aa0c23010,"BUG: Make mapdomain work for multidimensional arrays as advertized in
the documentation. Fixes ticket #1554.
",numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_polyutils.py
01362e33c84a2fb03d8b6ff66de866c2d1f9da95,"BUG: Fix missing 'self' in test cleanups.
",numpy/lib/tests/test_twodim_base.py
ae2ebe1beb13b766c07c25d35cfff90eaf63ca09,"ENH: Add some tests for ticket #1579. Do some cleanups.
",numpy/lib/tests/test_twodim_base.py
4d40dff448b1b368af6752fa8b9a93716db76b3f,"BUG: Fix ticket #1579. Do some cleanups.
",numpy/lib/twodim_base.py
32c08068f877965c64bf7ddf5e3885f560b6920f,"
",numpy/ma/testutils.py
133bb76452af3dfe8e7b6c928b82bdb9fea70770,"ma.extras
* fixed the documentation of (flat)notmasked_xxx
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
3ab71ce374c3b35d4ce487e70249e73eb29fcce6,"* fixed numpy.ma.extras.flatnotmasked_contiguous (bug #1576)
",numpy/ma/extras.py
7b7bbc5541e046238ff680b9f3667f4d13174ca6,"DOC: add FILES option to doc Makefile, for partial rebuilds
",doc/Makefile
9c3297c78a0f8e680869ad3856fd6d2d9b7625f0,"sphinxext: plot_directive: insert figures at points where plt.show() is called in the text
",doc/sphinxext/plot_directive.py
0c058e7db288f05e3e4af56ed345f350046d01f4,"ENH: Make atleast_3d respect ndarray subclasses. Closes #1560.
",numpy/core/shape_base.py
c2f9eae4bcdb1137a2b949e58f073b706f866411,"TST: fix memmap test error. Closes #1550. Thanks to Christoph Gohlke.
",numpy/core/tests/test_memmap.py
bf7dc71b2a1cd18fb7b7d5db46334beed4a47f4b,"sphinxext: bug fix + some features in plot_directive
",doc/sphinxext/plot_directive.py
9195c440c499b45e0cf23f53cc0842b32cb5ee38,"DEP: Remove ma.extras functions that were deprecated in 1.4.0.
",numpy/ma/extras.py
4e7b7b6217b732abe248f271cdd3f50dea1c030c,"3K: copy built installers from build/py3k/dist instead of dist/.
",pavement.py
a18e3e6912b451461c6e844798c4b2346d455346,"3K: fix core/dotblas module initialization.
",numpy/core/blasdot/_dotblas.c
7eb6fa7befe4898e50993fc93a44389afe784d5e,"ENH: include /*.txt etc. in source dist only, rather than installing it
",MANIFEST.in,setup.py
b2a1666c9d5ef80c3bf099066040de86dc723a72,"BUG: add tools/py3tool.py to installed/distributed files.
",setup.py
ef4c6bf3f41dc29677ab3d93c707860af5665848,"3K: distutils: fix __code__ object access in mingw32ccompiler
",numpy/distutils/mingw32ccompiler.py
8626a75b380484378c4b242ef02db8cdcb66f9fe,"BUG: core/3K: use bytes.maketrans instead of the deprecated string.maketrans (fixes #1571)
",numpy/core/code_generators/generate_umath.py
7232a10cbf3233a8c344b8e3416050baf7d6f61f,"BUG: core: fix a missed PyCObject call (#1571)
",numpy/core/src/multiarray/convert_datatype.c
69c7f4345c27498eaf943a814398d869f6c8c2e0,"BUG: Fix typo in commit r8564-66.
",numpy/core/SConscript
c7978bd8e8e557dcc760a30c9f7a13987f56db6f,"BUG: core: fix refcount error in PyArray_Take (#939)
",numpy/core/src/multiarray/item_selection.c,numpy/core/tests/test_regression.py
869ccb83cbff2cb10842f7b3080f460ca8ba8b55,"BUG: core/umath: fix powers of complex 0 (#1271)
",numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_umath.py
400a612118fb24f28ee5c83d027432bc66492eff,"remove unnecessary import and reload in test_getlimits, which was causing
errors when running the test suite.
",numpy/core/tests/test_getlimits.py
62ebd8eb6a761fc7fc8e28f16b4c7a4a3d0465ac,"TST: Add tests for matlib. Closes #1242.

(From Ralf Gommers.)
",numpy/matlib.py,numpy/tests/test_matlib.py
d7bf2b58c6cd351a5a9400391ba5060ff669de4f,"BUG: fix numscons build issue introduced in r8541.

The problem was that if endian.h was not detected, @DEFINE_NPY_HAVE_ENDIAN_H@
was still present in _numpyconfig.h, causing compilation to fail.
",numpy/core/SConscript
7225d6d9c36c2df1599960935938f5c46549268d,"DOC: wiki merge, matrlixlib and some ndarray methods.
",numpy/add_newdocs.py,numpy/matrixlib/__init__.py,numpy/matrixlib/defmatrix.py
d0a25f19139a2987af5a4e2d1ebf4badb2802c16,"DOC: wiki merge, twodim_base and a few loose ones.
",numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/twodim_base.py
c38c9d4cd338cc147b67f1f160d69ab7ef0df097,"DOC: wiki merge, npyio, format and function_base
",numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/npyio.py
d110c4eb35539b782f8db42361c6ee9f1851a265,"DOC: wiki merge, core.umath
",numpy/core/code_generators/ufunc_docstrings.py
95e77d22ca559f9b6dec25145e680ea25ea75236,"DOC: wiki merge, core/numeric.py
",numpy/core/numeric.py
d2338051d8f468513e699f8b131c29d44b5008e5,"DOC: wiki merge, fromnumeric.py
",numpy/core/fromnumeric.py
a2966362c771c8d7f775166ee1126a9c3ce96691,"DOC: wiki merge, rst docs.
",doc/source/reference/arrays.dtypes.rst,doc/source/user/basics.byteswapping.rst,doc/source/user/index.rst,doc/source/user/install.rst
1a1348fa5ad27eb886730463563bf5a0026a26e2,"DOC: wiki merge, add itemset method doc.
",numpy/add_newdocs.py
cdb22699eeb56e02f2158be5750d4ac831abe8d5,"DOC: wiki merge, add distutils.npy_pkg_config.read_config docstring.
",numpy/distutils/npy_pkg_config.py
64f654fc6bcfc3f94c1ffa501873af3584c3b1c2,"BUG: fix base_repr for py3k. strings can not be indexed with floats anymore.
",numpy/core/numeric.py
d1a661df48625ce5544d83dc022c96cf8c5d41c7,"ENH: Make trapz work with ndarray subclasses. Thanks to Ryan May. Closes #1438.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
bff8bb580d6e915b9bdadea312482a169f7d1472,"DOC: sphinxext: replace directive mangling with domains (#1489)

Only Sphinx >= 1.0 is supported now.
",doc/sphinxext/README.txt,doc/sphinxext/docscrape.py,doc/sphinxext/numpydoc.py
a761330ef68caeadd73e6d01068fa81d2f9dc07c,"BUG: core/umath: do not create views unnecessarily in ndarray.__array_prepare__ (fixes #1548)
",numpy/core/src/multiarray/methods.c,numpy/core/tests/test_regression.py
d13f75802ebb5ee38a178d06c891a632f3102d89,"BUG: make sure npy_cpu.h is always included in ndarraytypes.h
",numpy/core/include/numpy/ndarraytypes.h
fa445b9f5b04c11bc3efacca28cc4c42d1ff091a,"BUG: look for endian.h.

We should use this header in npy_endian.h if available.
",numpy/core/SConscript,numpy/core/include/numpy/_numpyconfig.h.in,numpy/core/setup.py
1c02b2038a902dedc3d26ebc278dac8d4cb7f12f,"ENH: testing: add assert_tol_equal for testing array equality with specified tolerances
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
67668c8c5764b8fadbd7eed68f978846fe93310e,"BUG: support assignment x[(0,)] = foo in ndarray subtypes (#1563)

The problem was a code path trying to assign x[0], which returns a
scalar -- for actual ndarrays a internal function always returning
arrays was used.
",numpy/core/src/multiarray/mapping.c,numpy/core/tests/test_regression.py
5150c8848de84ef769a734acf7e27f660dc95219,"Fix copy-and-paste error discovered by re-factor testing...
",numpy/core/src/multiarray/convert_datatype.c
94f73b1613e37e7076da12cb51b42895fda99112,"BUG: fix usability bugs in lookfor

- allow numbers in function signature

- print the items in relevance order (not reverse relevance)

- include ufunc docstrings
",numpy/lib/utils.py
88bcac2d33376429b2ddc0cb0800f7a9dc198c87,"BUG: New implementation of base_repr. Fixes #1549, is several times faster and
adds tests. Thanks to K. Maglione.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
acbe6eb1d1b00f877d635db350d44693eb21a14c,"numpy.distutils: Fixed bug in Configuration._get_svn_revision. Introduced make_hg_version_py method, get_version supports hg revision.
",numpy/distutils/misc_util.py
12c2c52a6c924e6ea226b280a689d304b3681b8a,"BUG: attempt at fixing alpha build failure (quad prec little endian).
",numpy/core/src/npymath/npy_math_private.h
dc3aa189d6941c628fe493c78cf471b2a1cc5ba9,"DOC: Merge wiki changes for RandomState as far as possible. Closes #1503.
",numpy/random/mtrand/mtrand.pyx
fa0842ffa749a00d0573f7ab803db450b9d1c7c7,"f2py: fixed issue 1533 (scanning pyf files will report lines that do not match known patterns).
",numpy/f2py/crackfortran.py
22becbbb078ece89c6ed06bde50b8889a3ed893e,"ENH: Several changes to Paver script taken from 1.4.x branch.
",pavement.py
213302fee8b998496870d0f99159f764504d810f,"DOC: update the blurb about the array interface
",doc/source/reference/arrays.interface.rst
47aa090e5bc22c3a12cb6b16e7ddfb62c190ef19,"BUG: quick and ugly fix for long double on linux ppc.
",numpy/core/src/npymath/ieee754.c.src,numpy/core/src/private/npy_fpmath.h
3aef98e08ce4a8bb1efad76718037fd94c2cd49a,"ENH: fix long double detection for linux ppc

This does not fix build on linux ppc, as the implementation for 
long double functions is missing.

",numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_private.h
e659183918d5bbcb7ddaefe8a7dc6b0025d0a31b,"BUG: core: fix argmax and argmin NaN handling to conform with max/min (#1429)

This makes `argmax` and `argmix` treat NaN as a maximal element.
Effectively, this causes propagation of NaNs, which is consistent with
the current behavior of amax & amin.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
47702d223e7696419faf73b0d881eb1be9a7a8b0,"BUG: core/umath: make complex number comparisons False when *either* element is nan

This also fixes NaN propagation in np.maximum/minimum, for example in
the case for

    maximum(1, complex(0, nan)) -> (0, nan)

which previously yielded (1, 0).
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py
eab3c1e98d296d6307b0f89c33c57319d3ac7975,"BUG: core: make set_string_function(None) to restore the functions to what they are on import (#1130)
",numpy/add_newdocs.py,numpy/core/numeric.py,numpy/core/tests/test_numeric.py
1985497ddd1c179d5ae4b7ba061a8b8c5540f543,"BUG: core: format 'nan' and 'inf' also in array repr by default (#1050)
",numpy/core/arrayprint.py,numpy/core/tests/test_arrayprint.py
84c8c655652ca8cca087aca0512521800e29f314,"BUG: core: make .std() and .var() respect the out= keyword (#1434)
",numpy/core/src/multiarray/calculation.c,numpy/core/tests/test_regression.py
73b8b54cdf0057850cefc3b2cb0be4fad8e70fb8,"ENH: 3K: optionally use lib2to3cache in 2to3 conversion
",tools/py3tool.py
943bae6ce7e587e6fdac4bcd336f607fdc729437,"DOC: Add ""check deprecations"" step to HOWTO_RELEASE.
",doc/HOWTO_RELEASE.txt
4cff2fe33386c05dbf7aa2e22406faa38edfd81e,"Merge branch 'wgt'
",doc/release/{2.0.0-notes.rst,numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
d74911d5be8916efd3b6e6f0728c9685c6970608,"3K: numarray: Python3 fixes in _capi.c

Thanks to Christoph Gohlke.
",numpy/numarray/_capi.c
8a4fb936484cf0ba8b5e76706dc9b52b535549af,"3K: f2py: catch a misc import error
",numpy/f2py/__version__.py
4f4558ae51354526b0a4c2d7bb1da8db040fb16c,"3K: lib/tests: fix test_io.RoundtripTest on Python3 + Windows
",numpy/lib/tests/test_io.py
4bee2b42b48374dd5824e94c033327136bd6e35c,"BUG: core: finfo.tiny, resolution, and epsneg should be scalars (#1538)
",numpy/core/getlimits.py,numpy/core/tests/test_regression.py
08683302b493e2be0ab30661018c4b5f97c90995,"BUG: core: harmonize complex number formatting with Python 2.7 (#1534)
",numpy/core/src/multiarray/scalartypes.c.src
6f20d1e7650fbb3ad61855ca5d85dff0aafe2f72,"BUG: core: use PyCapsule objects only on Python >= 3.0, stay with PyCObjects on Python 2.x
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/ndarraytypes.h,numpy/core/include/numpy/npy_3kcompat.h,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/umath/ufunc_object.c,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h,numpy/lib/type_check.py,numpy/numarray/_capi.c,numpy/numarray/include/numpy/libnumarray.h,numpy/random/mtrand/Python.pxi
affa70a89ef0f23b1fd98a68c29ab6f5796746fb,"TMP
",numpy/core/include/numpy/npy_3kcompat.h
4fcfd09694621f2fc7aebc3ed7bf03a0a1ffbc4b,"ENH: 3K: add some extra NpyCapsule functions
",numpy/core/include/numpy/npy_3kcompat.h
03f4cf39407556cd235998e11cc7eeafb376dfec,"BUG: core: fix C++ issues in npy_3kcompat.h
",numpy/core/include/numpy/npy_3kcompat.h
3b21802c8aa4902627973c910aa8ab0d8c8fe2c6,"ENH: core: make npy_3kcompat.h header public, for easier usage in Scipy
",numpy/core/{src/private,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src
b08b7b1b9f903d100d2111e42c2a17599fc7a0b0,"DOC: more updates to Py3K.txt
",doc/Py3K.txt
4f732e54bd060d4fef301a20794c7610cfb6ef65,"DOC: update Py3K.txt a bit
",doc/Py3K.txt
39180414c9986eec4d0406c6cf600a9b5847858f,"f2py: fixed typos in TRYCOMPLEXPYARRAYTEMPLATE.
",numpy/f2py/cfuncs.py
7d2d320f2da7d65bdeb773594c2e9d1979b4eb4d,"BUG: core: handle sizeof(double) == sizeof(longdouble) in PyArray_CanCastSafely (fixes #1539)

Thanks to Christoph Gohlke for the patch.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_regression.py
2f15b16db2ef171d8730f76f6c97b6f67983255a,"ENH: random: strip absolute paths from generated mtrand.c line number comments; they just add unnecessary noise to the changesets
",numpy/random/mtrand/generate_mtrand_c.py
20bd63ef9dc31f6982e851b9142a7c5c60ac76cd,"GEN: random: Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
237ed35fd848dc5a312e15206b4d729cd2e91f90,"BUG: random: accept Python long as input to np.random.permutation (#1535)
",numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
8bb282307481e208f972a72c5745c63e2404cd66,"ENH: Add ddof keyword to masked versions of cov and corrcoef.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
b1c994b77d851e49a1c62248b09aeaea5645fbdf,"Fix missing rowvar in cov call in corrcoeff.
",numpy/lib/function_base.py
cda4d595f074f09d8cf113d37cb9c8079c6752d8,"Don't deprecated bias keyword, just add ddof.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_regression.py,numpy/oldnumeric/mlab.py
a5b4a598d0ef164dba7e0876133c3ea78b96aab8,"ENH: Add ddof keyword to cov and corrcoef. Deprecate bias keyword.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_regression.py,numpy/oldnumeric/mlab.py
4157e79ebb629c9dc06807c32db82951a4286ccb,"BUG: core: fix a reference leak to numpy.core._internal (thanks to Lisandro Dalcin)
",numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
9ea50db4b5ca3a26c05cf4df364fa40f873da545,"Fix memory-leak on dtype's found by Lisandro Dalcin.
",numpy/core/src/multiarray/multiarraymodule.c
0a95b13f36932bafb8bbb0d7c32b0895f50f562e,"Fixed __eq__/__ne__ for scalars
",numpy/ma/core.py,numpy/ma/tests/test_core.py
9b86617974fee246df0ebba859102897f531f659,"BUG: lib: fix sinc to handle array-like inputs properly (fixes #1523)
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
6d438e6d3e274ea6b167939d0d0abfad7b3701b9,"BUG: f2py: replace a string exception with a real one (fixes #1515)
",numpy/f2py/capi_maps.py
6ad92e5571a1aa1038b64227c05371dd48eadc96,"* masked is now an instance of a new object, MaskedConstant, that inherits from MaskedArray but prints slightly differently (no mention of a fill_value, because 'masked' can't be filled...)
",numpy/ma/core.py
29001ed1fc8f021c5150b29d161cc2145ab9668a,"Add pre-nep for a copule of structured_array_extensions.
",doc/neps/structured_array_extensions.txt
f6c74bd9035dfbdd292c75db238eb304ea790ada,"DOC: add release notes check to HOWTO_RELEASE.
",doc/HOWTO_RELEASE.txt
22357e639f2793ca3f2e75ef3b96c70cc406343f,"CLN: Cleanup nanops code a bit. Patch is from Tony Yu.
",numpy/lib/function_base.py
0db76715c5f019222db48cc28a6a49d086a8a939,"CHG: Rename reduce method in polytemplate to cutdeg. Reduce is just too
much like a ufunc and a bit vague.
",doc/release/2.0.0-notes.rst,numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
66e3231baaf2181abeafc4d37b8ad5272728ff64,"Don't track .gitignore file.
",.gitignore
e520cdd88f53448bbd5fb7b9ef06fa22635d5189,"DOC: add automatic documentation generation from C sources (using Doxygen at the moment)
",doc/cdoc/Doxyfile,doc/cdoc/Makefile,doc/cdoc/README,doc/cdoc/numpyfilter.py
5e4cd5706e7ad8cb405574fd23c2651ff4bc11b8,"BUG: fix missing macros definition for IEEE macros.
",numpy/core/setup.py
bc9cb91dc463673516b488935399d2f429c0e016,"DOC: Add removal of histogram 'new' keyword to release notes. Closes #797.
",doc/release/2.0.0-notes.rst
e786456968293b7a26fd99922ccc15de6d3fbccd,"BUG: Enable compiling Fortran code on OS X for ppc64 arch.

Thanks to David Warde-Farley. Fixes #1399.
",numpy/distutils/fcompiler/gnu.py
18aac09194438f4c6ce1bb379a2beffa98c40391,"DOC: merge wiki edits for module npyio.
",numpy/lib/npyio.py
b42757e68373c08185ffacd4043efe397d81a070,"DOC: merge wiki edits for module linalg.
",numpy/linalg/linalg.py
76e25d22ca216d8f30c74b8df79edd1d8ffdd242,"DOC: merge wiki edits for module core.
",numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py
e7c87d78cb3a6a3cb24276a5cf3fdb3f4d0bc43c,"DOC: add some info on what should be uploaded to PyPi for a release.
",doc/HOWTO_RELEASE.txt
b0c3be18006c9d872c37ffcb3ccf02c89efa7b1c,"BUG: Don't directly access Python object internals.
",numpy/core/src/multiarray/scalarapi.c
24f36750f0b2db4a63796a88de6a0ad319f2bd8d,"ENH: Add tests for nan[arg]min, nan[arg]max) for various integer types.
",numpy/lib/tests/test_function_base.py
a26c364b165b71660916ee7d15e71f8c4f19c93d,"BUG: Fix typo. Closes ticket #1496.
",numpy/core/src/npymath/npy_math_complex.c.src
cb3fb06b904dbdd71cf4a1bfd9c7e4b32332c7b9,"BUG: Fix failed detection of unsigned integers in _nanop. Fixes ticket #1300.
",numpy/lib/function_base.py
dccd8d0d688d479dfe26361eb3f18745fe690c10,"BUG, STY: Make gaussian random number generators with identical behaviour
have identical pickles.
",numpy/random/mtrand/initarray.c,numpy/random/mtrand/randomkit.c
672fd3f5677f70b118833dd38b9ed5a9d7c9268c,"STY: A Few more coding style cleanups.
",numpy/random/mtrand/randomkit.c
6be6945afdc31270eaf4463d47c271f701c7f688,"STY: Some c coding style cleanups.
",numpy/random/mtrand/initarray.c,numpy/random/mtrand/randomkit.c
b056b23a27fe4f56f923168bb9931429765084d1,"BUG: Make test using np.float96 portable by using np.longdouble instead.
",numpy/core/tests/test_umath.py
8a39c1f7d54d25504162464184d6cb8a2478d99b,"STY: Remove some hard tabs.
",numpy/core/src/multiarray/methods.c
9b0b46750ee6688f1491b7a7835bb69a16a2074f,"Added tests for float96 for ldexp (ticket #866).
",numpy/core/tests/test_umath.py
c7e5351461e4b0e43bf9b78b0c365e400bd39721,"Fix for ticket #866 (ldexp on 64 bits). Tested on ubuntu 64 bits.
",numpy/core/src/umath/umathmodule.c.src,numpy/core/tests/test_umath.py
b9557767159a8a6b770195dd7b82feff5a6d4c5b,"BUG: Use correct include path when multiple copies of NumPy is installed.
",numpy/distutils/system_info.py
1512b58b77280e35f0fdf1df79cc131042941f53,"BUG: Add some guards for bad inputs to the dtype constructor.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_dtype.py
5ab03fb56e40dd5ec20535297d1c2602e8ad17a1,"BUG: typo.
",numpy/core/setup.py
f859af0b27132c3d8dc242a7bcbd9d1ae62b1c72,"ENH: Test the exceptions and the left, right keywords of the interp
function.
",numpy/lib/tests/test_function_base.py
700512a60586b01e4bc5e33e74d0e1c87a5b6a8f,"BUG: Make interp handle 'right' keyword correctly. Add check for empty
arrays of sample points. Closes ticket #1064.
",numpy/lib/src/_compiled_base.c
9114faeada1f31ec1b010e398d773de44702b70b,"ENH: Make searchsorted faster by actually dividing the interval in the
middle.
",numpy/core/src/multiarray/item_selection.c
a7a01f351130afa9aee9bd6cf38934dc4c37cbb8,"BUG: Fix problem with numarray _capi.c and python 2.7.
",numpy/numarray/_capi.c
88e683bc3fa9497259cba637a23d60dc31f07bc6,"Update 2.0.0 release documentation to reflect changes in the Chebyshev and
Polynomial classes.
",doc/release/2.0.0-notes.rst
fc7afe0f14e31aa34e459952e4728bb4ec20daca,"CHG: Use [] instead of 'default' to specify the default domain in
Chebyshev.fit and Polynomial.fit. Document the change from numpy 1.4.x.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
4ac790852f101dc36ffc50a5eeac4e0fe157b2d7,"ENH: Add reduce method to polynomial.Chebyshev and
polynomial.Polynomial. This method behaves like truncate except
it takes the degree of the result instead of the number of
coefficients.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
6e77005137eca1e7fdd4ebd3935f7f57d6aba7bd,"REV: Revert the changes to the truncate method of Polynomial and Chebyshev.
On second thought it was a bad idea to make such a radical change to existing
behaviour. It was also hard to document the variations ;)
",doc/release/2.0.0-notes.rst,numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
59fd4c37d75895ca09f5ad06571d67084eb34324,"Add some more info to the release notes for 2.0.0.
",doc/release/2.0.0-notes.rst
894665b34accfde33581a1cca96ed9e8596fd202,"Note the changes in polynomial.polynomial and polynomial.chebyshev in
the release notes.
",doc/release/2.0.0-notes.rst
082e86f7461f066f4a4e48191d44305f47860b55,"CHG: Change the default domain for the fit class method of the
Chebyshev and Polynomial classes to None. Add 'default' as a possible
value of the domain argument to specify the default domain. This change
fits better with my experience with this method. I feel it is safe to
make this change at this late date because the functions seem little
used as yet and I would like to get them 'right' before folks catch on
to their presence.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
467f4fb2fe54ad979dc6c4aa3a11e7482b97fd0f,"ENH: Add test for the degree method added to the Chebyshev
",numpy/polynomial/tests/test_chebyshev.py
1eac0c58c8168197f8f2a53ccadd4c449f32ff31,"ENH: Change deriv and integ method documentation of the Chebyshev and
Polynomial classes to reflect the enhanced behaviour of the base functions.
",numpy/polynomial/polytemplate.py
af79cde3ecc5a7bf6b14c97698cad08f2bde82b8,"CHG: Change the truncate method of the Chebyshev and Polynomial classes
to take degree instead of length. This seems to fit better with normal
usage. I feel this change is safe at this time because these new classes
seem to be little used as yet.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
ee4a8d391e21fe41ba919b21e890348c64b5a0e7,"ENH: Add degree method to the Chebyshev and Polynomial classes.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_polynomial.py
2041434cbe99115c4c26a7910904769d9bca5c7b,"ENH:
1) Let {poly,cheb}int accept 0 for the number of integrations.
2) Let {poly,cheb}(int,der} accept floating integers for number
of integrations or derivations, raise ValueError otherwise.
3) Add tests for same.
",numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
87e2eecd808c9770355437ca871b70fe9f87b243,"STY: core: add some parentheses
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/loops.c.src
ea2be6e15d024fab1ef41713ef9eab4605c4ea3e,"* Added `apply_over_axes` as requested in ticket #1480
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
97a38c4a4233fb133b2f2fa8b4fad9e65657f572,"* add a `replace_space` option to NameValidator
* Force a file to be opened in 'U' mode (bug #1473)
",numpy/lib/_iotools.py,numpy/lib/npyio.py,numpy/lib/tests/test_io.py
ccf308399107ec304b7e0d36692f9d929b6d3416,"BUG: Correctly handle in-place output in percentile.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
7c92f3237ec81e42d490d3b5eff89725608a112d,"BUG: Allow any array-like input to percentile.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
44b42db55290aedbf3e30ef2de81d0bccc547a04,"Add percentile function.
",numpy/lib/function_base.py
c8a06aa54139120e3ecaae462b2d02cb8e92041c,"ENH: core/test: try more locales out in_foreign_locale to make it work also on modern Linux systems
",numpy/core/tests/test_print.py
13918161ec7dfe6f7ce1fb871cf978a564d80df3,"BUG/3K: lib: make savetxt work with filenames
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
b022b9c5d2e49d1d2ab07be0fe4549342ab88c1e,"BUG: compat: fix a bug in open_latin1
",numpy/compat/py3k.py
1ecf17b3d2399647c25746568981b44f1af4b039,"STY: core: reduce code duplication in _import_umath and _import_array
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py
5b4964b395f7c7c032a1d87f98b3f82c6ff8510c,"BUG: core: remove a double-DECREF in _import_umath (fixes #1483)
",numpy/core/code_generators/generate_ufunc_api.py
40c5daf1b6ddf182b4b03fb74ec83a1877f42803,"ENH: linalg: convert non-native endian arrays to native-endian before handing them to lapack_lite
",numpy/linalg/linalg.py,numpy/linalg/tests/test_regression.py
010072e61e09eb9e755d8cb616c79e56814e5b59,"BUG: linalg: check array byte order before passing it to lapack_lite (fixes #1482)
",numpy/linalg/lapack_litemodule.c
4e2e78f908d8b8191b6257614096801c5d1af2f4,"BUG/3K: distutils: do not assume that files output e.g. by gcc can be read in ascii codec
",numpy/compat/py3k.py,numpy/distutils/exec_command.py
e3cea87edc4a036b7e5643a488615c57c41de739,"DOC: Fix typo in 2.0.0 release notes.
",doc/release/2.0.0-notes.rst
427a9632db6ddc1e8659ab3191fe63873a8a188b,"BUG: Make fftshift and ifftshift accept integer arguments for the axes
value. The functions now match their documentation. Fixes ticket #1182,
patch from rgommers.
",numpy/fft/helper.py,numpy/fft/tests/test_helper.py
81a86c775143d7335613fdb960d6267fc3d602f8,"STY: Some cleanups of ndarraytypes.h.
",numpy/core/include/numpy/ndarraytypes.h
7d5a4558baf58464ba9c09a6ee94cf14f536efa3,"Add better summary of ndarraytype.h to release notes.
",doc/release/2.0.0-notes.rst
4864c3d460db80ac1e49768df4bf3246b011e862,"BUG: core: fix a datetime test case (fixes #1468)
",numpy/core/tests/test_datetime.py
cdfd96a091e004a53a3aba2be55309ddf67e2b7a,"ENH: Remove obsolete keyword 'register'.
",numpy/core/src/multiarray/datetime.c
8884dedab08177a3eecf03ce6f7e3dab1a2ab53e,"ENH: Make guard in ndarraytypes.h match the file name.
",numpy/core/include/numpy/ndarraytypes.h
b943351d541932710f444f15ea4e241af3761a1d,"ENH: Break out parts of ndarrayobject.h that don't reference the ndarray
c-api into the header ndarraytypes.h.
",doc/release/2.0.0-notes.rst,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ndarraytypes.h
befa26016d18d20d054f65885361dae31dc9cdf6,"BUG: lib: remember in a test that datetime specifiers are bytes strings
",numpy/lib/tests/test_type_check.py
75f99ab7dcc846c58a088a9233fb9af28aef0b4a,"BUG: lib: make loadtxt work on Py3 when fh returns unicode (fixes #1479)
",numpy/lib/npyio.py
8a6767f5ad921d49f6d69e0ee2da39ba9209020c,"BUG: core: ensure we have GIL before calling PyOS_string_to_double (fixes #1345)

In Python >= 2.7, the PyOS_ascii_strtod has been deprecated and replaced
with PyOS_string_to_double. However, the latter may raise Python
exceptions, which requires that GIL is held when calling it.
",numpy/core/src/multiarray/numpyos.c,numpy/core/tests/test_regression.py
217a7b2459186dff21b73a239c0daaec1ee35b44,"DOC: fix ReST warning.
",doc/HOWTO_RELEASE.txt
d4563b05529709c3a65d311afce85774470460c3,"DOC: add a description of the release process and setup needed.
",doc/HOWTO_RELEASE.txt
b66a200a4a1e98f1955c8a774e4ebfb4588dab5b,"BUG: Make interp handle zero dimensional ndarrays as interpolation
points. Add some tests for interp. Fixes ticket #1177.
unc_api.txt.tmp
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
20757e2fe36792e67613e3231e10eaa109660fea,"numpy.scipy.org: add license information (#1478), tidy up CSS
",doc/numpy.scipy.org/_theme/scipy/index.html,doc/numpy.scipy.org/_theme/scipy/static/scipy.css,doc/numpy.scipy.org/content.rst,doc/numpy.scipy.org/license.rst
f9eb8537984c12ee67657b008cdba74736538052,"Merge branch 'vectorize'
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
63ef8711fa64c096720b413f06d6666bf8c3b49c,"BUG: core: ensure keywords[] list is NULL terminated in array_choose (might be related to #1476)
",numpy/core/src/multiarray/methods.c
9836beacd161bf7409db703278006fc925477d0e,"BUG: use PyOS_string_to_double on Python 2.7

Related to #1345.  This works around PyOS_ascii_strtod raising a
PendingDeprecationWarning when GIL is released, which results to a
crash.

The full fix would be to re-acquire GIL, but I believe we will not want
to do that for performance reasons, as it doesn't otherwise seem to be
necessary.
",numpy/core/src/multiarray/numpyos.c
2c275d4489dac531ebd0885ca55de545eae58dc1,"Add slogdet to the release notes for 2.0.0.
",doc/release/2.0.0-notes.rst
bb080c5692ab978bf60c0908fbd0c49222dbeb9a,"ENH: Do some housekeeping for the newly added slogdet function.
",doc/source/reference/routines.linalg.rst,numpy/linalg/linalg.py
30e4150e507af394740c6fd92619ed19eb56268a,"ENH: Add slogdet to the linalg module. The patch is from njs with
slogdet substituted for sign_log_det. Closes ticket #1402.
",numpy/linalg/__init__.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
dd9d99c7fec0f7eedc1ad6ba4e557810f7a8954b,"ENH: Add test of polyder return type.
",numpy/lib/tests/test_regression.py
632623d6a9ca99c34dc412ca676e4d2c59e2b297,"BUG: Make polyder return a poly1d for the zeroeth order derivative when
the input is a poly1d. Fixes ticket #1249.
",numpy/lib/polynomial.py
e014ff75420eeb809699935433ab4c61bd7f6f8b,"BUG: Fix datetime_data for python versions >= 2.7.
",numpy/lib/type_check.py
adad97ce2057b59be2a3a2760df3e1190fefa160,"ENH: Simplify list destructor.
",numpy/core/src/umath/ufunc_object.c
e670f5f69143dac918c6d36649180e2ea1f597a4,"BUG: The builtin file function goes away in python 3k, use open instead.
",numpy/lib/npyio.py
50ae5233e5e0877724012d873879da13d4fb673a,"BUG: Fix use of int type where Py_ssize_t is appropriate.
",numpy/core/src/multiarray/iterators.c
fada3babf38ca4a873fd4b6670cc10bf41da27ac,"ENH,BUG: Simplify array_choose with NpyArg_ParseKeywords. Fix some uses
of int where Py_ssize_t should be used.
",numpy/core/src/multiarray/methods.c
bc656ee7cb00a6c4ad0d43f1cdd36bf8c9a026ed,"ENH, BUG: PyCObject will be deprecated in python 2.7. So use the NpyCapsule
compatibility functions in npy_3kcompat.h to replace the current calls.
This gets rid of a number of version checks and is easier to maintain.
Fix bug that was present in the ufunc _loop1d_list_free destructor in
the python3k case.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/npy_3kcompat.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h,numpy/lib/type_check.py,numpy/numarray/_capi.c,numpy/numarray/include/numpy/libnumarray.h,numpy/random/mtrand/Python.pxi
82d8d97ac30e20f9ae605df228bee43d89ef72a2,"BUG: loadtxt should handle universal newlines.
",numpy/lib/npyio.py,numpy/lib/tests/test_io.py
6dc315f8aa7e67f637bcd2beb0c4105ddfcb4a83,"ENH: core: add .dot() method to ndarrays; a.dot(b) == np.dot(a, b)
",doc/release/2.0.0-notes.rst,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/matrixlib/tests/test_defmatrix.py
bceb9c20700514db5667831ce2878f1660fb071f,"Add NEP for group-by additions to NumPy: reduceby, reducein, segment, and edges.
",doc/neps/groupby_additions.rst
a839a427939f0c29fe4757011f86bb068ab66569,"BUG: In datetime, avoid overflow by casting multipliers to npy_int64.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c,numpy/core/tests/test_datetime.py
413220795d7f928bf150f926fe286a5e0dc36cce,"BUG: Fix missing import for datatime_data.
",numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
1e659b5ab591d47449b73481f2335a7a850495b7,"Fixed .var for arrays with 1 more valid value than ddofs
",numpy/ma/core.py,numpy/ma/tests/test_core.py
56647963b940e56571ae9638e7c5f77ed58aadbb,"Move 1.5.0 release notes to 2.0.0.
",doc/release/{1.5.0-notes.rst
cec7847a4066b6cef9a1cc0748ecf13e1d56b8b5,"Add fixme note.
",numpy/core/src/multiarray/methods.c
7a0429a4717c22019a22a84f4bcd583589f9f5be,"BUG: core: fix a reference count bug in umath:InitOtherOperators (cf #1464)

Thanks to mras
",numpy/core/src/umath/umathmodule.c.src
cbe9b87ef42c0a7111ddd7f528393a0cb243c7d8,"ENH: Simplify some functions using NpyArg_ParseKeywords.
",numpy/core/src/multiarray/methods.c
22ee215bf2c34d7ec66901083cd94dc67fe26e4f,"ENH: Add NpyArg_ParseKeywords helper function.
",numpy/core/src/multiarray/methods.c
e0457991ee4a8b9c6272baa97afe49f5be93c2bf,"BUG: fix reference count bug in set_numeric_ops (fixes #1464, #1462)
",numpy/core/src/multiarray/number.c
82e08aa07fa4d6a94808f8cf7cd191d1bf6bae82,"ENH: Add some tests for ndarray.resize.
",numpy/core/tests/test_multiarray.py
b4b4829dd5daa525f21ac733240b80e5a159bffa,"BUG: Catch resize shape conversion errors.
",numpy/core/src/multiarray/methods.c
84d1bf7bab755b075498b5e7cd70006045352392,"BUG: Fix the fix so resize works like it is supposed to.
",numpy/core/src/multiarray/methods.c
8088b49b100d0933cbd71a83e5b6d28f8b38c222,"ENH: Remove order keyword from ndarray.resize. This is pretty much
Scott Sinclair's patch from ticket #840.
",numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
e8699dd5cd3e018250393d989aa1146d89ad9b72,"ENH: Remove some unused variable warnings.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/scalarmathmodule.c.src,numpy/lib/src/_compiled_base.c
42c74d784350830cf14bbea0419924d4d88559f7,"BUG: Fix missing ""%s"" in error message format. Remove unused variable.
",numpy/core/src/multiarray/buffer.c
472076b0e907b3aff8e6b8a96ca61072e0dc4477,"BUG: Fix wrong destructor type in NpyCapsule_FromVoidPtrAndDesc.
",numpy/core/src/private/npy_3kcompat.h
0a56dcb06b49721fa0b758c58183f580da1eb51a,"FIX: Workaround python3.1 callable not working with PyCapsule.
",numpy/lib/utils.py
c655f8dacceba151dde8d13006751cd6b8d149ac,"ENH: Apply old patch hanging around in my directory. I don't recall where it
came from, but it seems appropriate.
",numpy/core/tests/test_regression.py
26d51fb2bf1ae6bb0f2c5f164647ee4a572b8d10,"correct a bug in fix() that was introduced in r8293
",numpy/lib/tests/test_ufunclike.py,numpy/lib/ufunclike.py
fcc0b79de4ae35548dbc711c9273ecd875764ccd,"BUG: Use deprecated decorator in testing ufunclike.log2.
",numpy/lib/tests/test_ufunclike.py,numpy/lib/ufunclike.py
6ec10208ea799f417b612273485e081b5b07eb21,"Fix bug where __init__ was accessed for objects that might not have it.
",doc/sphinxext/numpydoc.py
514a01f6fe494456c09b9e66d910ee514e6aa9d1,"BUG: Python 2.4 doesn't support ""with"" statement, use try instead.
",numpy/lib/tests/test_ufunclike.py
0351ce05794bb62d99ca205b69eeca5f71ad2b6a,"BUG: Deprecate ufunclike.log2 and take it off the __all__ list. It was shadowing
the ufunc of the same name.
",numpy/lib/ufunclike.py
73651a6ceba09729ee7a28558187ffa7e295dc22,"ENH: Add test of sign ufunc removed from test_ufunclike.
",numpy/core/tests/test_umath.py
58ec265b495ec6aecc780f3ab1f0e2ba4bce10d4,"ENH: Rewrite doctest in test_ufunclike.py as normal nose tests. Remove test of
sign ufunc, it belongs elsewhere.
",numpy/lib/tests/test_ufunclike.py
20ccf3a5b25f25262bc2b23e092337ae4e7a4f1a,"ENH: Add more tests for new memmap object attributes.
",numpy/core/tests/test_memmap.py
b9ae90617de1b65dabe43ebc6effe29d4634abc9,"BUG: Need to use os.path.abspath on file handle name also.
",numpy/core/memmap.py
77f4e079f3a35984787e6e60e2303f79bd4ec33a,"ENH: Make the new memmap filename attribute store the full path to the file.
Add offset and mode attributes to the memmap class.
",numpy/core/memmap.py
4d821188c3baeefccaff0d8074ea0ee838327f66,"ENH: Add filename attribute to memmap.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
375542b2dd182dce0af0c32579645e7b30659bb0,"ENH: Add test for log1p on intel 32 bits for certain small values of p.
",numpy/core/tests/test_regression.py
6cc6cc62c53190e6deb980a4327f846b26dd156e,"ENH: Try to make log1p a bit more resistant to compiler shenanigans.
STY: Couple of style fixups.
",numpy/core/src/npymath/npy_math.c.src
96985ac396cd904d4f2fed3c2f37417c249f2774,"ENH: Use standard npy constant definitions in log2, exp2 functions.
STY: Some cleanups, fix goto into if statement.
BUG: Use proper name for expm1, not exp1m.
",numpy/core/src/npymath/npy_math.c.src
21178ae32f4f8dfdcc40e6b5c9eea999fcc52884,"ENH: Make npy_log2_1p and npy_exp2_1m use standard functions.
This avoids some problems with gcc optimizations on 32 intel systems.
In any case, the problem is pushed back to location single functions.
",numpy/core/src/npymath/npy_math.c.src
a63d83291ea7037da280597c275668066b8dd996,"ENH: core: add sanity checks and warnings to PEP3118 -> ndarray conversion
",numpy/core/src/multiarray/ctors.c
86d3b8181a44ab3394595c0323691d250c77d44a,"ENH: core: improve the way trailing padding is dealed with in PEP 3118 format strings
",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
b5967d0073b6eb2305ccfec07809e48d4134d7b4,"ENH: core: improve parsing of byte order from PEP 3118 format strings
",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
8371b7563102ab5021d024a60669d926d4c577a6,"ENH: core: improve PEP 3118 parser's alignment handling

Now, padding will be more forcefully inserted for native-aligned items.
",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
204efabe8d40e0ff8b7e81518476eb5253e4d09d,"BUG: core: fix bugs in PEP 3118 format string parsing

- Handle consecutive characters (eg. 'xxxx') properly
- Compute native padding correctly
",numpy/core/_internal.py,numpy/core/tests/test_multiarray.py
64e70811b58ade22a4a2c4be24b41dec23303942,"ENH: get rid of #warning directives, either by fixing the issue or changing them to comments
",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/lib/src/_compiled_base.c,numpy/numarray/_capi.c
af2b0578c642cb269478dc3b048e59d0d79e0820,"TST: mark slow f2py tests + add f2py test function.
",numpy/f2py/__init__.py,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py
9475b973951f322945a518f1cab62f2a4d21fbc1,"BUG: fix div by zero handling in nper.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
6f00924d2ca7a1faf09761a175ad3b4b1b7d0888,"BUG: move test from core to lib, mark it as deprected.
",numpy/core/tests/test_regression.py,numpy/lib/tests/test_regression.py
89e2287b295f327a0e6bc76d8e8ded0c1b89f559,"BUG: fix divide by zero warnings in tests.
",numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py
ced34d27a8eef42e0f963afa4989e2383fc3ca77,"BUG: fix kaiser for M=1.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
cfb3c55e3813cc05673a37452dea405fc0acea03,"BUG: Should be using StringIO, not BytesIO. The 2to3 script takes care
of changing the module to import from to io.
",numpy/lib/utils.py
b64659e01eeeaf1d4498f2140911499c05702c70,"* Fixed merge_arrays for arrays of size 1 (bug #1407)
* merge_arrays now accepts sequences of lists/tuples as inputs
",numpy/lib/recfunctions.py,numpy/lib/tests/test_recfunctions.py
6cf6fd356c70bdf2d6d6d39f052cea9f662ecc07,"BUG: Update StringIO in _lookfor_generate_cache for Python3.x.
Make small cleanup.
",numpy/lib/utils.py
c7685e1bac5840a3d040da5cb50291a6cf2cf0d0,"CLN: Small cleanups. Fix docstring examples.
",numpy/lib/npyio.py
5657366762f802d1119de6be6b19893daca9252d,"CLN: Remove some now unnecessary fixups to lib/npyio.
",tools/py3tool.py
44118aedbac7c1c4465443ec23d104a83b9a24f9,"Rename numpy/lib/io.py to numpy/lib/npyio.py. The py3tool can probably be
cleaned up a bit more with this change, but that is for later.
",numpy/lib/__init__.py,numpy/lib/{io.py,tools/py3tool.py
3ec490dabbd7c18b55947df1a89f042bb44d3911,"Fix wrong function name. These functions aren't used a present so this just
fixes a warning.
",numpy/core/src/private/npy_3kcompat.h
c0187e0d745e233e2610b72098d9f99154e7975d,"* added test_take_masked_indices
",numpy/ma/tests/test_core.py
6688b8de88a78abe450d0518efd11fc51988cb38,"* Use putmask instead of fancy indexing in _nanop (bug #1421)
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
5325c7bea41b61436dc9a0497179428fa9903ebb,"BUG: core: fix #1436 by reverting r8144

r8144 ""ENH: core: make PyArray_FromAny error message more clear""
is a cosmetic fix -- a revised one could be committed later on in, but
let's have this one bug fixed quick.

Also, add a regression test.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
81140fe52e67f15614a735420c3fe0f592e17ab4,"BUG: lib: fix #1435, np.gradient should use zeros_like

Thanks to Ryan May for the patch.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
070619b16e4620e7d47a5955c27328e6dd3ec9a1,"BUG: include numpyconfig.h in npy_cpu.h to address #1371
",numpy/core/include/numpy/npy_cpu.h
3b63fc8d14f11bc80280a1b7e31e15d8d435aeb3,"* fixed mvoid.__repr__
* fixed mvoid.__str__ for Python 2.4 (bug #1373)
* add support to 'fill_value' and 'hardmask' in arange/empty/identity/zeros/ones (#1391)
* intercept invalid values in `power` and derived
* added empty_like/ones_like/zeros_like to the numpy.ma namespace
* Allow indices as masked arrays in numpy.ma.take (#1418)
* test_core : temporarily disable warnings when using numpy ufuncs on MaskedArray
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
e9702d79dced193816b6be5d40711ca3bd3fb7d6,"Fix version matcher for cases where version string appears in second line (Intel Visual Compiler, IA-32, Version 11.1)
",numpy/distutils/ccompiler.py
e3be228ef31edbc51fef85bcd9ad8db6fdd73add,"minor change to ufunclike.fix, one less array to build and make compatible
with subclasses of ndarray
",numpy/lib/tests/test_ufunclike.py,numpy/lib/ufunclike.py
66cbc792058bb9881b6c64f98de53a80df09f45a,"DOC - fix doc error
",numpy/lib/twodim_base.py
4367c6fc59ac362474b59b276b508ac7f922c1d5,"ENH: Make Chebyshev and Polynomial classes dominate ndarrays.
",numpy/polynomial/polytemplate.py
aae1bebc986f4d0578c1af27e9166ad8292d7a6d,"3K: doc: note that f2py is now partly ported, and that capsules are used
",doc/Py3K.txt
dc9621d502c87ea78e1e68212724eb9ffcc2037c,"3K: f2py: make create_cb_arglist work with Py3 functions
",numpy/f2py/cfuncs.py
11ff8356427c9f04968869c1caf75f09eff8bb79,"3K: f2py: port the array_from_pyobj test module to Py3
",numpy/f2py/tests/src/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/test_callback.py
80f6b2a2ceb7981c292fd3071f5d2eba1c9866ab,"BUG: f2py: fix infinite loops in *_from_pyobj with unicode input
",numpy/f2py/cfuncs.py
4c1ae336a15e4f701848fac12a521ba67bf784d3,"3K: f2py: port much of f2py C code to Py3
",numpy/f2py/capi_maps.py,numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
2fb79c1a20753baa824d2b2e6b0ad3f2b144db9d,"3K: f2py: don't use test generators in the tests -- they don't really work on Nose on Py3
",numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py
2fe642a524a4bd2f870e7def51140f94d136af73,"3K: core: fix import_array to return NULL on failure -- according to the Py3 module init function scheme
",numpy/core/code_generators/generate_numpy_api.py
b65938a4b3102118863da58df4add651fcbb5e2d,"3K: f2py: map PyString -> PyBytes and PyInt -> PyLong on Py3
",numpy/f2py/cfuncs.py
4a26b70fd3c0dd6b4aca063a5ba504af3e91484f,"3K: f2py: address a semantic difference between Py2 and Py3
",numpy/f2py/cfuncs.py
101da729b58450021d74c9a08c5b9229c844f0b2,"ENH: testing: do not exclude array_from_pyobj from tests; it's now fixed to be nose-compatible
",numpy/testing/nosetester.py
733ebda112453f0dc51d326e230bc2613704195a,"BUG: f2py: fix F90 detection in the tests
",numpy/f2py/tests/util.py
8ed34403475e7e48232dfe3980b70eb057a2e2eb,"3K: f2py: make f2py run far enough to produce output files (they don't compile yet, though, as the C code is not Py3 compatible)
",numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/f2py2e.py,numpy/f2py/tests/util.py
9cccbf38bec50e3a3fd55c8884a70f302b34f66b,"BUG: core: add a missing #include of ndarrayobject to npy_3kcompat.h
",numpy/core/src/private/npy_3kcompat.h
c51146be95148e43603dabc94758ee45321ba3f6,"ENH: f2py: skip also test_array_from_pyobj if no C compiler is available
",numpy/f2py/tests/test_array_from_pyobj.py
5b0621d1990048d4b5e0c3108273a96a9940211f,"BUG: distutils: clean up temporary files more aggressively
",numpy/distutils/misc_util.py
16179a073380c717786262b403ae4286c9e546c6,"BUG: f2py: ensure that ARRAY_ISCOMPATIBLE macro handles also booleans
",numpy/f2py/src/fortranobject.c
399018f2b1f68877c622f8ca015c10fb40e6f625,"ENH: f2py: convert test suite to Nose form

Rewrite F2Py's test suite, so that it is run as a part of Numpy's tests.
These tests require compiling extension modules on-the-fly, so I added
a small helper module for that.
",numpy/f2py/setup.py,numpy/f2py/tests/array_from_pyobj/__init__.py,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/f2py/tests/c/return_real.py,numpy/f2py/tests/f77/callback.py,numpy/f2py/tests/f77/return_character.py,numpy/f2py/tests/f77/return_complex.py,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_logical.py,numpy/f2py/tests/f77/return_real.py,numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_logical.py,numpy/f2py/tests/f90/return_real.py,numpy/f2py/tests/mixed/run.py,numpy/f2py/tests/run_all.py,numpy/f2py/tests/{,numpy/f2py/tests/{,numpy/f2py/tests/{,numpy/f2py/tests/{,numpy/f2py/tests/{array_from_pyobj/tests,numpy/f2py/tests/test_callback.py,numpy/f2py/tests/test_mixed.py,numpy/f2py/tests/test_return_character.py,numpy/f2py/tests/test_return_complex.py,numpy/f2py/tests/test_return_integer.py,numpy/f2py/tests/test_return_logical.py,numpy/f2py/tests/test_return_real.py,numpy/f2py/tests/util.py
0132351b0073f464060e1bac8b0595198c31a4e9,"BUG: fix paver execution on windows 7 for python 2.6.
",pavement.py
29426cb08b07f74b55461a5bf0769f534527b7ba,"Add capability to ctypeslib to convert a pointer to memory to an array of a particular shape.
",numpy/ctypeslib.py
4e59ff6240c9d6dc34e4b8b66d83f04a28ef16a2,"BUG: Fix bug in lbnd implementation of the integ method of the Chebyshev and
Polynomial classes.
",numpy/polynomial/polytemplate.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
7004a5a3652d5131ef9144ead7bc7cc549f0fae2,"BUG: Make sure that the errors set by the PyCapsule functions are cleared. The
PyCObject functions don't set errors. Note that the error handling in the
current code is spotty and needs to be fixed at some point.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/usertypes.c,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src
f3580687a3f3752a8a8bebbcbe5b594055beb299,"ENH: Add support for PyCapsule.
",numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
9596a895dd01c27b9984fe8ff20e151eda41b9b8,"BUG: Fix imports in diagnose and excise old crap.
",numpy/f2py/diagnose.py
d3c7ae5389f2fd90ae35d87f87e4f7dd01572f4a,"ENH: Add diagnose to f2py package. This makes the tests a bit easier to fix.
",numpy/f2py/__init__.py
2f3321861c08533dbf30c4639c8085c74bd51148,"BUG: Shoddy quick fix of some f2py tests so they run. The tests expose errors,
but the errors look like artifacts of an unfinished refactoring and partial
update to support numpy.
",numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_logical.py,numpy/f2py/tests/f90/return_real.py
10e5c4c86607ca694dcf03ccaf0e7570a511f1cb,"ENH: Cleanup numpy and ufunc apis for Python >= 3.1. Make sure that an error is
set for all error returns so that PyErr_Print() works properly in the
import_umath* and import_array* macros.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py
30dc1beb97681e16641480e254f849294bcd1dbc,"ENH: Try to fix numarray _capi.c for Python >= 3.1. Needs testing that I am not
in a position to do.
",numpy/numarray/_capi.c
e9ba3d0530ebc923a36633e29951a9773e5585c2,"ENH: Support changed distutils API in Python 2.7.
",numpy/distutils/ccompiler.py
d96e881ccc7178628b213f6e2c958099bbcbf2ca,"ENH: Add compatibility functions in npy_3kcompat.h for the PyCObject ->
PyCapsule update. The improved error handling of PyCapsules is tossed out. When
Python3k becomes the required version and a major refactoring is undertaken,
that defect should be fixed.
",numpy/core/src/private/npy_3kcompat.h
c9dec27b5abb1ed11d5b2c58c5671060ffb8cf46,"BUG: NPY_PY3K probably isn't defined when libnumarray.h is included.
",numpy/numarray/include/numpy/libnumarray.h
5d6c8bc18261caf7162aefdeb637f00ce00e238f,"BUG: Replace deprecated PyCObject by PyCapsule for Python >= 3.1.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/npy_3kcompat.h,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src,numpy/lib/type_check.py,numpy/numarray/_capi.c,numpy/numarray/include/numpy/libnumarray.h,numpy/random/mtrand/Python.pxi,numpy/random/mtrand/mtrand.c
ea6ca76d189e8ec5acf150cec31446e65c2426ff,"3K: doc: note that f2py hasn't been really ported yet
",doc/Py3K.txt
a1427e05649aa5b0eeebc9830230d5e8bf225e1e,"Add very basic sanity test for getting include directories (related to ticket #1405)
",numpy/core/tests/test_regression.py
755e6ebabdda26f8720d5881897d31379fe81586,"Add regression test for ticket #1405
",numpy/core/tests/test_regression.py
a2dc78f54f65fa67d6d02e9fcc563752efd67509,"Fix bad usage of namespace alias change
",numpy/numarray/util.py
89147a16a8f57bf7650cd50872f46c64c528af60,"BUG: Ignore ""invalid value"" from abs in testing/utils.py
",numpy/testing/utils.py
50375e7ea744fe685abd0623446f45de2019437a,"BUG: Workarounds for isfinite/isinf invalid values.
",numpy/lib/tests/test_type_check.py
b10f849adc7b8a9a998a0912dfa0192341400ecc,"BUG: Fix unhandled divide-by-zero errors and invalid values in tests. Add some
tests to check that divide-by-zero errors are raised when desired.
",numpy/core/tests/test_umath_complex.py
0fbb6f41bc6cdf53c56753021b3bee3e7abea6c8,"3K: doc: some updates to 3K porting notes
",doc/Py3K.txt
caa3e3072b9d7f03ac1e10f42b6ece3bf7e21cf5,"BUG: Fix possibly unbalanced seterr calls. Fixes change of divide state after
running np.test().
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_umath_complex.py,numpy/ma/tests/test_old_ma.py
5b22c87bed10fd5c3e028d23590e9b6dd5e8d3af,"BUG: Fix possibly unbalanced seterr pairs. Fixes change in state of invalid
after running test().
",numpy/lib/tests/test_type_check.py
0bc06e1d4501f797b9fce40bb55bea2bf1476654,"BUG: More workarounds for np.isinf warning in tests.
",numpy/core/tests/test_umath.py,numpy/testing/utils.py
52c43da079009c4b18ec5a7ac6bf31ef6cad69ed,"BUG: Work around warning raised by np.isinf(np.inf). The isinf warning should be fixed at a
lower level and tested separately. In the meantime, this fix avoids a lot of
irrelevant warning messages in the tests.
",numpy/core/arrayprint.py
93b41a2f6082ee7293c45c7538d898369e158a61,"WHT: Remove trailing whitespace.
",numpy/core/tests/test_datetime.py
8b0afe9f6639e986eba8d4e47ec2d8195068f57e,"ENH: core: export format string as UString in numpymemoryview (Py2.6)
",numpy/core/src/multiarray/numpymemoryview.c
8e50ad6e4f3cd6dd80372475771fcf28bf700127,"BUG: core: fix PEP 3118 tests to account for variation in native long sizes
",numpy/core/tests/test_multiarray.py
3c55cff1254ead7de6f75919e295289fcbe67923,"ENH: core: better support for native vs. standard sizes and alignments in the PEP 3118 interface

Also, try to produce minimal buffer format strings without unnecessary
alignment characters.
",numpy/core/_internal.py,numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
c22cecb40a4856303eb8517a3b196c1df4de0ad2,"BUG: core: use C int size specifiers in the PEP 3118 tests, to make things work on 32 and 64 bits platforms
",numpy/core/tests/test_multiarray.py
cfc5c3bc0c7a9e81042e2c6794943eec5a6c7c20,"3K: BUG: alias divide -> true_divide correctly; just replacing the name in generate_umath.py is not the correct thing to do
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/umathmodule.c.src
3ddc421aab6ed08ee81798ada97743837042b222,"ENH: ma: use domains also in _DomainedBinaryOperation.__call__ (previously they were used only in __array_wrap__, which wouldn't be called from __div__ et al. which call the domained operations directly)
",numpy/ma/core.py
057f902ad15de0b72b79a7e83d6e6b036b21190e,"BUG: fix ppc detection macro on AIX.
",numpy/core/include/numpy/npy_cpu.h
b72473a850c6b3afa2383712260adbf85cb35125,"ENH: testing: always enable --detailed-errors assert introspection in nose
",numpy/testing/nosetester.py
2362c7ec40bf947af9fb993a5568cd70bc2a1fa0,"ENH: core: use assert_equal(x, y) instead of assert x==y -- test failures are easier to trace that way
",numpy/core/tests/test_multiarray.py
f26a0ebbca3baee6d006506a753ec18e7933772f,"BUG: Fix the invalid value warnings in test_umath.py
",numpy/core/tests/test_umath.py
3bc5ce3e5bfe8599f81a9970a61b5e401629514c,"DEP: Fix one more deprecated unittest function.
",numpy/linalg/tests/test_build.py
bc01dee3df3a46e9c032ee55749f3aa5343a9531,"STY: Use import numpy as np. This seems to fix an import error introduced by
2to3, but that may have been an artifact from a previous build. In anycase, no
harm done.
",numpy/numarray/util.py
b913aa5155f427bc34eef5327d596981ebeba7f6,"Remove a leftover empty directory
"
4a617a30bed6e825d409c134ae07702433236a88,"STY: Use explicit itertools namespace for all itertools functions.
",numpy/lib/recfunctions.py
9e24f0491bd02c28d82c04d98eba1ad3ad8e573a,"BUG: fix numarray._capi compilation
",numpy/numarray/_capi.c
0c7b0805b45c887733ff11a386267d5a4c6a7ecb,"STY: Remove unneeded import.
",numpy/lib/recfunctions.py
8d227b3f6d8e882676ce43a6651c20409b01bd96,"PY3: The izip function is no longer available in itertools. Be explicit about
using itertools.izip to 2to3 can make the fix.
",numpy/lib/recfunctions.py
22d36b2be0f244828b8956e4c0016f20ae530c30,"WHT: Whitespace removal.
",numpy/lib/io.py
2a7e659e45db24162bdc49b1a83b7c69796c6be2,"3K: ENH: ma: fix str vs bytes and int issues in ma tests
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py
eac637ec20fa18762da0a7961065f30bf5b2e328,"BUG: ma: fix inoperative error state set/restore
",numpy/ma/core.py
79430a42f67c579bc69aa375237201d2dde7c636,"BUG: ma: _check_fill_value shouldn't rely on implicit array() string casting

Since array([12345678.9, 'a']) == array(['12345678', 'a'], dtype='|S8')
ie., automatic string conversion uses only the size of the minimal data
type, not the size of the string representation, code should not rely on
array() casting items implicitly to object arrays.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
3f8f41bb3150b99407b3bbc9bac087fe07ceb009,"3K: ENH: core: support BOOL and VOID better in PEP 3118 buffers
",numpy/core/_internal.py,numpy/core/src/multiarray/buffer.c,numpy/core/tests/test_multiarray.py
2e7b3277001937b0c8ad01c7671912d6a4b8f610,"3K: ENH: core: void.item() -> byte array; simple memoryview -> Bytes
",numpy/core/src/multiarray/arraytypes.c.src
47c891de44357b29d52e2ab05ed04d6f1be094e1,"3K: ma: implement __rtruediv__, __rfloordiv__, __rpow__ for masked arrays
",numpy/ma/core.py
1c60ede5f42721319ce9fa7337d6539cea9f97f7,"3K: doc: note about consequences of removed Py_TPFLAGS_CHECKTYPES
",doc/Py3K.txt
84211286b98f6f3bfb1feeaaa0f0b3ed7bbbd6e3,"3K: lib: implement __rtruediv__ for poly1d
",numpy/lib/polynomial.py
e2a9f6d429088a9d3f61b0a562d7ea166b0b7dd3,"3K: core: mark int('0xff',16) test as known failure on Python3 -- we don't anyway support that call signature for all integer types even on Py2
",numpy/core/tests/test_regression.py
b1ab8f8657cf0165f5e9fd828857ff474d31dfdb,"3K: ma: solve some bytes vs. str issues in tests
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
4b4d5e6169fda3fad6e6587be43aefd30089e164,"3K: ENH: ma: implement data-preserving __ifloordiv__ and __itruediv__
",numpy/ma/core.py
a8bcb84ba972a11fe49f28945abc986192ae73dc,"3K: ENH: make numpy.numarray to import
",numpy/numarray/functions.py
15b39a5b04458c490dc2b46666ba4ee6d816d082,"3K: ENH: move numarray includes under numarray/include so that the 'numpy' directory does not confuse 2to3's relative import conversion
",numpy/numarray/{,numpy/numarray/{,numpy/numarray/{,numpy/numarray/{,numpy/numarray/{,numpy/numarray/{,numpy/numarray/setup.py,numpy/numarray/setupscons.py,numpy/numarray/util.py
e975168a90027794be99e221b33e8a4a94bdf434,"3K: ENH: make oldnumeric to import -- but don't implement oldnumeric.Unpickler as it's not straightforward to do
",numpy/oldnumeric/compat.py,numpy/oldnumeric/misc.py
eb1c29fffb2b1dbd5e315c1c7ba6dd0645a566ea,"3K: ENH: core: follow Python in formatting negative zeros in (-0+x*j)
",numpy/core/src/multiarray/scalartypes.c.src
700147f601a881d756128e5e4d9aeb3a356cb7b2,"3K: lib: fix bytes vs str issues in tests
",numpy/lib/tests/test_io.py,numpy/lib/tests/test_twodim_base.py
37f85303d48f7c4724da078563ceb2c6051ffc3a,"3K: lib: zip is izip on Py3
",numpy/lib/recfunctions.py
8003020b43e04c8adb7a0854080a5edf5c93f34e,"3K: lib: missing_values in genfromtxt is never a basestring on Py3
",numpy/lib/_iotools.py,numpy/lib/io.py
0a67e86f49a0dee8d39f94dd29947311d5491a29,"3K: lib: fix sort(key=) issue
",numpy/lib/utils.py
6c990fbdd58e969d179e3d721d85c9f0ea3a6005,"3K: linalg: fix integer division issue and tests
",numpy/linalg/linalg.py,numpy/linalg/tests/test_build.py
fab2b47311a315942ae12fa56a7fef43f84d3c21,"3K: polynomial: make tests to import
",numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py
866abe53b0113b890893787f966e812ff771e11f,"3K: lib: poly1d __div__ -> __truediv__, and fix its doctests
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
b47f2caba51e6e5b4e96fb16089db8e5abfcdc1b,"3K: core: fix a few str vs bytes issues in tests
",numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py
ae00919e25ec6613685915ef658bb257d3835a2c,"3K: matrixlib: adapt to changes in str.translate
",numpy/matrixlib/defmatrix.py
8b0edd6a11559d904454e2fc72f0c5663ace667f,"3K: ENH: regenerate mtrand.c with a newer Cython, for better Python 3 compatibility
",numpy/random/mtrand/mtrand.c
519fcca652d43ccbe31c0a7766ee1c7826dcad28,"3K: core/numerictypes: fix handling of Python types, and recognize bytes as a Python type
",numpy/core/numerictypes.py
e8a7df65457531e986a65483ffe79c98c7e811a8,"3K: BUG: fix unravel_index integer division
",numpy/lib/index_tricks.py
ca540012019d6ff579819c5a789124bd541dc2e3,"3K: ENH: ensure integer scalar types are hashable -- we don't automatically inherit the hash implementation from Python ints on 3K
",numpy/core/src/multiarray/scalartypes.c.src
69f7f4c7e3ca4af2ae79921895efa1c2a6b11c41,"DEP: Fix more files for unittest deprecated functions. It isn't clear why these
tests didn't issue deprecation warnings. Are they being run?
",numpy/core/tests/test_datetime.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_dtype.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/fft/tests/test_fftpack.py,numpy/lib/tests/test_function_base.py
051165fb4557b67a1f50e81ad8cfb99efeeb0641,"DEP: Fix deprecation warnings in Python 3.1. The warnings come from the unittest
module. The fix should be good for Python >= 2.4 and used the following sed script:

s/\<failUnless\>/assertTrue/g
s/\<failIf\>/assertFalse/g
s/\<failUnlessEqual\>/assertEqual/g
s/\<failUnlessRaises\>/assertRaises/g
",numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_twodim_base.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/matrixlib/tests/test_regression.py,numpy/testing/tests/test_utils.py
8f2413a2e2ac19e699c9fd6a0344fcb845abc1d2,"BUG: ensure Py_TYPE is available in _dotblas.c on Python 2.4 and 2.5
",numpy/core/blasdot/_dotblas.c
5e88c324b6597b939f451ddba0b053e5db10286a,"BUG: fix a few missing includes that may cause problems on 64-bit
",numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/scalarapi.c
e5a6c98662b0eb6631aa406d981bc0e27888369f,"3K: BUG: fix refcount error in npy_PyFile_Dup
",numpy/core/src/private/npy_3kcompat.h
2aa91ba2921894156016118069e020662f11362f,"BUG: properly check the return value of numpy.core._internal._dtype_from_pep3118
",numpy/core/src/multiarray/buffer.c
212fc25e16b8643f8653a66f5282cee304dc7653,"3K: BUG: core: fix ucsnarrow.c:MyPyUnicode_New to work correctly on Py3
",numpy/core/src/multiarray/ucsnarrow.c
57224077fecbc3f43b55966ed60a317c1b5a447b,"BUG: fix a crash due to mixing PyUnicode and PyString
",numpy/core/src/multiarray/mapping.c
11b80e7bd14501f33e6e0d9704afca8b10dce695,"3K: BUG: work around bugs in Python 3.1.1 2to3 by not using fixes_reduce

Instead, manually import reduce where necessary.
",numpy/core/arrayprint.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/lib/arrayterator.py,numpy/lib/tests/test_arrayterator.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/timer_comparison.py,numpy/oldnumeric/ma.py,tools/py3tool.py
9f9098f6f77f82eddb2471991d08ec0a37ead6f9,"3K: py3tool: use lib2to3 for the conversions

This ensures that the Py3 version of 2to3 is always used, and that
failures in conversion result to an immediate build failure.
",tools/py3tool.py
22e3125e95175fa4ac1534b872b7dd664af4e57b,"BUG: another single-file compilation fix
",numpy/core/src/multiarray/multiarraymodule_onefile.c
7140adaf8535295436b75afa3f47234ee978acaa,"BUG: lib: ensure 'bytes' is imported in io.py
",numpy/lib/io.py
c084cc1daf571a4817207ae503420cde2daad52e,"3K: core: fix single-file compilation
",numpy/core/src/multiarray/common.c
7236ac1dd10a8faf0a10524de1d2950cebd04efe,"3K: Some remaining Py_TYPE issues
",numpy/core/blasdot/_dotblas.c,numpy/core/src/scalarmathmodule.c.src
9c77c439698e34656d21f5e13bdf12210f659735,"3K: lib: more str vs bytes issues in the lib/io loadtxt, savetxt and genfromtxt
",numpy/compat/py3k.py,numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
fe8b7034708ffdf0d2efec268c9852162da56078,"ENH: compat: additional Py3 convenience functions
",numpy/compat/py3k.py
13f35de02b5b01dd0655a57a5200ea844857c2c7,"3K: lib: fix savetxt

This will make savetxt open files in the 'wb' mode on Python 3.  To
allow using any sort of newlines (which are different e.g. on Windows),
add a new 'newline' keyword.
",numpy/lib/io.py
0f2e7db0da927cc3007e37c88abd03c6be2dd255,"3K: lib: fix some bytes vs. str issues in _iotools.py and io.py -- mainly genfromtxt
",doc/Py3K.txt,numpy/lib/_iotools.py,numpy/lib/function_base.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
0e9a08cd2f5faa2b17dc6d62d4d0014386842628,"3K: lib: even more bytes/str fixes in format.py tests
",numpy/lib/tests/test_format.py
20121f4b65d7a5396a067c7ecd6818a7a5505639,"3K: lib: use BytesIO in test_io
",numpy/lib/tests/test_io.py
b1c25de02e4bc1dd37778f5919b404e93e7ecdc6,"3K: lib: fix some bytes/str issues in _format.py and its tests
",numpy/lib/format.py,numpy/lib/tests/test_format.py
2cd9854ecd3b5428744399d05b7c450fa0603a81,"ENH: lib: write fortran-contiguous data to files using arr.T.tofile instead of arr.data (required for Py3 compatibility)

The issue is that when passing a buffer object to Python's
io.BufferedWriter.write, it will try to obtain the buffer using PyBUF_ND
| PyBUF_C_CONTIGUOUS. This will fail for strided arrays -- seems to be
an issue in Python, as it probably should try to obtain a SIMPLE buffer.
",numpy/lib/format.py
e247b1d3d3a93b5119524ce6306239415e89ae74,"3K: core: in tofile etc., ensure the file is flushed before switching to FILE* I/O
",numpy/core/src/private/npy_3kcompat.h
ff26cec7eba491cf4cf48542b21f44932baf9572,"3K: lib: adapt safe_eval for Py3 ast module
",numpy/lib/utils.py
348f725101ef97f538e4652c66b54d5633d4be4d,"3K: compat: make isfileobj recognize only real file objects with FILE* pointers as file objects
",numpy/compat/py3k.py
2dd53a6599652d7e6c594c1ffa377eb3232ba69c,"3K: lib: do not slice range() in _iotools needlessly
",numpy/lib/_iotools.py
4bf9144224f26c740d6e8e6261e2eac068d854e0,"3K: lib: Make _datasource and its tests Py3 compatible + slight cleanup of the code
",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py
550df270b2daf3eb231e2232269b987d4b6120f4,"3K: fft: fix integer division in (i)fftshift
",numpy/fft/helper.py
c3c6b10be50eefeb78aa71cdb7367d48021699e7,"3K: f2py: use integer division to avoid problems with string multiplication
",numpy/f2py/auxfuncs.py
10985dc3458acd9d3286988dec1a27ece5cac25d,"3K: f2py: break cyclic imports (which are not allowed on Py3) by moving them to functions
",numpy/f2py/cb_rules.py,numpy/f2py/f90mod_rules.py
04d09a4c763e2d18c5939002d2390a607a75a05a,"3K: ENH: core: alias __round__ -> round for the generic scalar type, for the round() builtin
",numpy/core/src/multiarray/scalartypes.c.src
33d45c3ceb3871062d4af32ad368f0b732793938,"3K: doc: note in Py3K porting log that intp('0xff', 16) does not work any more
",doc/Py3K.txt
1ddd3c43fd9bbe2f893575e23ecc86f09a36ae81,"ENH: core: Fix the test for #99 -- np.long == raw Python long. The test should test np.intp instead
",numpy/core/tests/test_regression.py
c0815c57512859e7e05c6b97d05350c2c2f68e81,"3K: core: fix pickling of unicode scalars on Py3 -- they do not have buffer interface, so we need to get the buffer via the standard route
",numpy/core/src/multiarray/scalartypes.c.src
cb8c9b33c94d078e56e5ffaf22061aeab317d3a1,"3K: lib: bytes vs. str fixes in lib.format and lib.io
",numpy/lib/format.py,numpy/lib/io.py
f8401465c6b5876c57d3908e38ca37c39695033f,"3K: core: use BytesIO instead of StringIO in test_regressions on Py3
",numpy/core/tests/test_regression.py
97b333c573bbbe62e761f9880ed227802a791525,"ENH: core: allow unicode file names in PyArray_Dump
",numpy/core/src/multiarray/methods.c
4662956d7c4f1e76468d8e161f33928f20983679,"3K: core: allow unicode type strings in __array_interface__ since we allow those also in dtypes
",numpy/core/src/multiarray/ctors.c
f8012ce42ee9ce709d2f4044e74e61d5d292b3cd,"3K: linalg: fix some str/bytes issues
",numpy/linalg/linalg.py
131930539eb29b77941da2dafce566625c80234e,"3K: core: fix up some tests
",numpy/core/tests/test_regression.py
c55d31b4ddbd06acc3ce0884443966cb49149879,"3K: doc: update porting documentation
",doc/Py3K.txt
bc9be5a4a33783a9a29bd9859ae138d69d2192a8,"3K: ENH: core/numerictypes: Update string/unicode aliases for Py3
",numpy/core/numerictypes.py
ee0b81d79edf639ecd0eaeba8f66bd1e4ed398b8,"3K: ENH: on py3k, rename scalar type display names as unicode_ -> str_ and string_ -> bytes_
",numpy/core/src/multiarray/scalartypes.c.src
ee96684c96f6ab7c959658d20030efd603ccfafe,"BUG: core: make sure PyArray_FromAny respects wanted type and flags also for PEP 3118 objects
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
f553be91f4905fee9bfa3760791ba49c721cef90,"ENH: implement PEP 3118 buffer consumer on Py2.6, adding a simple Memoryview object

To use PEP 3118 buffers as ndarray bases, we need to have a way to
release the buffers on garbage collection. The easiest way to do this is
to use a Memoryview object -- but they are not available on Python 2.6.

Hence, we implement a minimal memory view object that only handles the
garbage collection, and use it on Python 2.6.  It also implements the
new buffer protocol, to allow testing the functionality.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/numpymemoryview.c,numpy/core/src/multiarray/numpymemoryview.h,numpy/core/tests/test_multiarray.py
d820db296b9d6b281dd6f79c666e1596141b9b4a,"3K: ENH: make defchararray work on Py3, and make its tests Py3 compliant

There were mainly issues in mixing bytes/unicode on Py3.
",numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
3243b041ad2f906c4b8e7c7782065bae253869f0,"ENH: Add some tools to numpy.compat
",numpy/compat/_inspect.py,numpy/compat/py3k.py
ff91dbef61f42479cbe46d4ed841a1fef16f4436,"3K: BUG: do not convert Bytes/Unicode via PEP 3118 buffers -- use 'S/U#' instead
",numpy/core/src/multiarray/ctors.c
fc064f18e131cb2bc287c4db8b95ed4a1d129dd3,"3K: doc: update Py3K port documentation
",doc/Py3K.txt
43e97ba1e6ca8c6724bcae288311ce7515869f75,"BUG: core: prefer byte strings over PEP 3118 buffers when determining array type in _array_find_type
",numpy/core/src/multiarray/common.c
b754c24a827a7462da0174e6255915b86b0b1f92,"3K: BUG: core: fix some bytes/str issues in defchararray.py
",numpy/core/defchararray.py
cb6ff9b2cac69c99d061aeee7b9483dcf4ce7a2c,"3K: ENH: core: audit some PyString -> PyBytes conversions
",numpy/core/src/multiarray/arraytypes.c.src
a62e7412565eb0a8ff466ca6eae197f8e7649834,"ENH: core: make PyArray_FromAny error message more clear

When building string/unicode arrays, PyArray_FromAny would try building
a 0-d array as a last resort. If the object is a finite-length sequence,
this always fails with an error ""ValueError: setting an array element
with a sequence"", as STRING/UNICODE_setitem do not allow this.

In some cases this message is confusing: for example on Py3,

    array([['a', 'b'], ['c', '\u03a3']], dtype='S2')

would fail because of this, even though the real error is that '\u03a3'
cannot be unambiguously cast to bytes().
",numpy/core/src/multiarray/ctors.c
d2bb6469e1e57d15f7ff39e6c39165c0f5962324,"3K: BUG: cast any object to unicode/bytes in UNICODE/STRING_setitem also for Py3, similarly as it is done in Py2

This makes UNICODE_setitem and STRING_setitem work similarly as on
Python 2 -- uses ASCII codec -- I judge this useful for compatibility
reasons.
",numpy/core/src/multiarray/arraytypes.c.src
997891720d2a8a1298ed0ae68abe41c2dc7a1c86,"3K: BUG: make test_defchararray convert properly via 2to3
",numpy/core/tests/test_defchararray.py,tools/py3tool.py
77f8ea3de6190178e78669d235c90c91bfee5e61,"3K: core: adjust some tests vs. str/bytes and int inheritance issues
",numpy/compat/py3k.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py
02aeb9bdd0411f0119cfbdb9456a37cdd2d4cc02,"3K: core: fix one str/bytes issue in records.py
",numpy/core/records.py
fdf9d7fa476c4717028ea424b0a96fc027dc9971,"3K: BUG: fix tofile/fromfile on Py3 by dup-ing the file descriptor before fdopening -- works around issues in flushing data
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/npy_3kcompat.h
87cf71e97cc256fb6e86c921c0c5d6c54a037910,"3K: BUG: core: fix some tests for Py3
",numpy/compat/py3k.py,numpy/core/tests/test_multiarray.py
69ba79ac12c615102cd1a6b8947d3ad736f6e936,"ENH: core: implement support for PEP 3118 buffer objects in asarray() and array()

This is available only for Python >= 2.7, since the MemoryView object is
not present in earlier versions of Python. (It makes releasing the
buffer much easier, via garbage collection.)
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c
a59bbf7a8790ed0495e2641c92bf3c3ce055faea,"ENH: core: add some support routines needed for consuming PEP 3118 buffers
",numpy/core/_internal.py,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/buffer.h,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/numpyos.h
efc06019c3fda0b06f16e4a3affe264c712fc92b,"ENH: add some tests for PEP 3118 buffer interface
",numpy/core/tests/test_multiarray.py
3577b83422361c67ddb0efe6fcafe5a18467bf44,"ENH: core: require PEP 3118 buffer contiguity only with ND and not STRIDES
",numpy/core/src/multiarray/buffer.c
4a59b9f51787de1d9ad8effb53498e93bbfd8d23,"ENH: core: cleanups in PEP 3118 provider
",numpy/core/src/multiarray/buffer.c
e6ee7549702996ed00b3be05dafc7261649bb666,"ENH: core: support sub-arrays in PEP 3118 buffers
",numpy/core/src/multiarray/buffer.c
f0fb3132896af12210cfb3aa17eb6f3bfc43af64,"ENH: rewrite PEP 3118 interface without adding items to structs

Implementing PEP 3118 is somewhat convoluted because of the desirata:

- Don't add new members to ndarray or descr structs, to preserve binary
  compatibility. (Also, adding the items is actually not very useful,
  since mutability issues prevent an 1 to 1 relationship between arrays
  and buffer views.)

- Don't use bf_releasebuffer, because it prevents PyArg_ParseTuple(""s#"", ...)
  from working. Breaking this would cause several backward compatibility
  issues already on Python 2.6.

- Behave correctly when array is reshaped in-place, or it's dtype is
  altered.

This commit works around these issues by keeping copies of buffer format
strings and shape/stride information in a global dictionary. Elements in
the dictionary are reused when possible, and cleared when an array is
deallocated.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c
60387a80f67dd2589c5ad4178219e4873417e877,"3K: core: sort using the key= method
",numpy/core/_internal.py
06fad78714e65de87536a591087d5cf8c6410bce,"3K: BUG: bytes as dtype should map to 1-byte strings, not long
",numpy/core/src/multiarray/descriptor.c
1c7167378e9f654a80b3cb57b7c0dd7ee573a109,"updated documentation from pydoc website (thanks to everyone who contributed!)
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.indexing.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/index.rst,doc/source/reference/internals.code-explanations.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.rst,doc/source/user/basics.indexing.rst,doc/source/user/basics.rec.rst,doc/source/user/basics.rst,doc/source/user/basics.types.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.python-as-glue.rst,doc/source/user/howtofind.rst,doc/source/user/install.rst,doc/source/user/misc.rst,doc/source/user/performance.rst,numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/doc/constants.py
e2bb09430d90c73a7be6e47ea8c4528f094f693f,"more docstring updates from pydoc website (thanks to everyone who contributed!)
",numpy/doc/basics.py,numpy/doc/creation.py,numpy/doc/indexing.py,numpy/doc/misc.py,numpy/doc/ufuncs.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/io.py,numpy/lib/shape_base.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/testing/utils.py
dcc721a5bddde3afd4ce47d7a7b76ec6c7102b92,"updated docstrings from pydoc website (thanks to everyone who contributed!)
",numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/shape_base.py,numpy/distutils/misc_util.py
d9e1ff3f202f2c80d0a7816935c73fec57734aff,"STY: Remove hard tabs, reindent.
",numpy/core/src/multiarray/scalarapi.c
cac18e9d4447fda293b0495d1a66e0428a9372bd,"STY: Remove hardtabs, reindent.
",numpy/core/src/multiarray/multiarraymodule.c
1f869cf2f5680d363e54e3d8caf8bc6992662274,"STY: Remove hardtabs, reindent.
",numpy/core/src/multiarray/descriptor.c
5eaada71571811cd2c4212dcbfbeb7b9c65f89e2,"STY: Remove hardtabs, reindent.
",numpy/core/src/multiarray/multiarraymodule.c
5a94724db09b6221be97e83af9a02033c7cda98b,"STY: Remove hard tabs, reindent.
",numpy/core/src/umath/ufunc_object.c
7e4e3e83556533abdcbb43d9f0e369076ee4b624,"STY: Remove hard tabs. Reindent.
",numpy/core/include/numpy/npy_math.h
ae6d51ff55a6b8fa370614a9162d4ed3f845c9e1,"STY: Remove hard tabs.
",numpy/core/include/numpy/npy_common.h
ba5bef9d7378fefb1dee9d117af2b920ad1e7bdf,"STY: Remove hard tab.
",numpy/core/SConscript
46cbb50b560c8a75d674f43d49b2462f5296aaa0,"BUG: Import warnings module in polynomial modules.
",numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py
624b33dc6a83dc9b7933a99a191378547d442324,"removed old behavior for the histogram function.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_regression.py
8cdc4520e7de79f2edaa261f8de53211d26dbea7,"Fix Order of scalartypes.
",numpy/core/src/multiarray/scalartypes.c.src
5100a74ec5f53f257b3071a3b8ed525137f8288c,"Update ordering of cast functions which was incorrectly placed.
",numpy/core/src/multiarray/arraytypes.c.src
20ec480ff8979fce00ab076ef74893815bf88f4e,"API and ABI changes:  Removed BigArrayType, Fixed hasobject to an integer (and inserted an unused character for alignment) and renamed it to flags.  Re-organized the ArrFuncs structure.   Moved NPY_DATETIME and friends to their 'correct' place in the type order.
",doc/CAPI.txt,doc/cython/c_numpy.pxd,doc/numpybook/capi.lyx,doc/numpybook/comparison/pyrex/c_numpy.pxd,doc/pyrex/c_numpy.pxd,doc/source/reference/c-api.types-and-structures.rst,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup_common.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/random/mtrand/numpy.pxi
29efc30b7b2290abf7c6d4d5eeddd5a97502098a,"Fix #1367 (round 2)
",numpy/ma/core.py
f45d580284a5cbb96277733ced149c4e7b7d3244,"Fix #1367
",numpy/ma/core.py
18c907f73b760346855351c88562aaf4edf0013f,"BUG: Apply patch to fix ticket #1326.
",numpy/core/tests/test_regression.py
204df1980c3a879a60529daf186663aa8b6a91da,"Fix _dotblas ob_type pointer for py3k.
",numpy/core/blasdot/_dotblas.c
7c0908e9bfc084ef730d5b8845b8528187ca6e6a,"Update trunk version to 2.0 and fix descriptor pickle code so that it produces 1.3-compatible pickle unless it cannot.
",numpy/core/src/multiarray/descriptor.c,setup.py
2f7b48c59f0998e053e108d57cde42d8778bef82,"ENH: handle complex input for assert_array_almost_equal_nulp.
",numpy/testing/utils.py
3e5a12cb388e5d9a0b8dba3d1ebf4c55bf419272,"BUG: fix typo.
",numpy/testing/utils.py
9ad03afec07ebc43e1a5315d323f219fa8738d71,"TST: add simple test for complex arrays input to assert_array_almost_equal_nulp.
",numpy/testing/tests/test_utils.py
88c05e836e527f0780a6a1430f3dc459a215badf,"BUG: Check input to poly for zero-dimensional arrays.
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
69c2a3bff7c07fd88e35b02bf1cbfa5f48abd975,"* allow fill_value to be np.void
",numpy/ma/core.py
53f1ee985c07924eec61133f8c6b8f27c481ac84,"* Make sure _fill_value is never None for structured masked arrays
",numpy/ma/core.py,numpy/ma/tests/test_core.py
5bad51bf3afc9d2256e9f6a5a1883233b3065ddd,"* Force the fill_value of a structured masked array to be defined (bug #1332)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
5d87b02f5512c14238ddff3ae6982fe735be973a,"ctypeslib: Correct tabs to spaces
",numpy/ctypeslib.py
49c5dc14aba8a4dc30e6261679022e6f89381df4,"BUG: Fix #1376, indentation problem.
",numpy/distutils/fcompiler/gnu.py
fd4618b62ef4f036f6c4c45b7ecf089d714ed9d5,"BUG: Fix #1379 by applying supplied patch.
",numpy/core/include/numpy/npy_cpu.h
58b5fb94362947ae6c75d278a7bd25ae43cfbafd,"BUG: Fix #1388. Return NULL after setting error.   Also simplify ctypeslib prep_simple function.
",numpy/core/src/multiarray/ctors.c,numpy/ctypeslib.py
1473800aeb30256517a11556fa1ad86c9127d641,"BUG: fix #1387. Raise ValueError for empty input to bincount.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_regression.py
60e53321fbb0a5e3ae630100eff32aec939a4434,"TST: add a couple of simple unit-tests for bincount.
",numpy/lib/tests/test_function_base.py
41ba0740639e9fbb11f98f017e3afdd26a30782c,"BUG: fix performance issue (#1308).
",numpy/core/src/multiarray/multiarraymodule.c
5dc876da5f2d6b23de7491f5dfdd9037f6ad3ef1,"BUG: Add more protection against uninitialized lists on the Distribution object.
",numpy/distutils/misc_util.py
7a53c06984d33b1af8e46d4beb8b7ea214713588,"BUG: guard against having an uninitialized list of scripts.
",numpy/distutils/misc_util.py
786f775567863fd5567e26566e4e8f294c89ea81,"Apply ifort.patch from ticket #1372 to allow Intel Fortran Compiler 11.1 to be called by numpy.distutils.
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/intel.py
889d1e20d0a719dfc82c16b285358ea0fef9ec0b,"* fixed the docstring of MaskedArray.sort
",numpy/ma/core.py
84b0dfd871a87a6002988a7989ec468f69e78b4e,"BUG: Fix ticket #1336 again. Merge for r8072 introduced a regression.
",numpy/core/src/multiarray/arraytypes.c.src
82dd6396d0f6d077a3f2d790f8b84586d3a4f62e,"np.genfromtxt: make sure we're using the actual names when double-checking for missing values
",numpy/lib/io.py
a9905dfed3d2fcfcfc1dda0ea53defeefe1fa07c,"Fix test for sorting with other-endian field.
",numpy/core/tests/test_multiarray.py
d61aaf74d856784f96dc20982904a79b8a4398f8,"Fix VOID_compare to handle the case of byteswapped data.  Fixes Ticket #1366.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
ab7ba2807da2526ab640a95bc671e30c8b1998f1,"STY: Remove unused variable that was added in last commit.
",numpy/core/src/multiarray/arraytypes.c.src
25c0e363dd2029ebe0710ceb9b8800737d6ba68b,"STY: First pass cleanup of arraytypes.c.src.
Coding style cleanups.
Break long lines.
",numpy/core/src/multiarray/arraytypes.c.src
2bdd7494b44dfcb670619b97818cd2fdb2da042b,"Fix bus error resulting from inlined gcc memcpy alignment assumptions.
Fixes ticket #1336.
",numpy/core/src/multiarray/arraytypes.c.src
c7c773022678a522f287a3c336fd8659e7685304,"remove webup, use upload
",doc/numpy.scipy.org/Makefile
799f186ef5afc689a70d6ce28f29a53c2ef4d1de,"mv build to _build
",doc/numpy.scipy.org/Makefile
242eb69a2e0ef7df4413e18172ed6fde85913814,"point conf to the default static content
",doc/numpy.scipy.org/conf.py
e58574c4dc4af290019db93672a950d29bc4b5db,"removing old dir
"
f59dd3aed064c476c3ec20d006cc2351c0e7301c,"consolidating static content in one location
",doc/numpy.scipy.org/{_static,doc/numpy.scipy.org/{_static,doc/numpy.scipy.org/{_static,doc/numpy.scipy.org/{_static,doc/numpy.scipy.org/{_static,doc/numpy.scipy.org/{_static
c6f34771021d619c0244d0bfd196a3b06ca43f09,"removing old dir
"
34c59cfbd08db2f821f931c11e3b365e9f1493a8,"point everything to top-level dir
",doc/numpy.scipy.org/Makefile,doc/numpy.scipy.org/conf.py
c793ba6584d2b4d35966a908f70c7db48ec37d27,"moving content up a level from source
",doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source,doc/numpy.scipy.org/{source
4c84fab26a2ac402c3f91e4f1c678fa004777a29,"mv theme to _theme
",doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/{theme,doc/numpy.scipy.org/source/conf.py
fbbedf048a3ad65a33f74e63d810428717a08785,"add make webup
",doc/numpy.scipy.org/Makefile
0d4e67d58d86bdc0bf500ccd4abfe25ad5f48448,"Remove un-necessary import.
",numpy/fft/fftpack.py
aca11687ad79d5d4e89ded880315c6b7716d4a34,"Fix test related to bug-fix in array creation from a buffer when offset is provided.
",numpy/core/tests/test_multiarray.py
09e27babf841e3588e3dc42d73bb4657cb64d121,"missed a few links
",doc/numpy.scipy.org/theme/scipy/index.html
ffaffbc9c39525f93b807bc1746463ea240fc7cd,"fixed broken links
",doc/numpy.scipy.org/theme/scipy/index.html
f19b0ec6ae7c456cae276849156193a9a21ed903,"_
",TEST_COMMIT
a2ad5277225ca02f136af32d21ced0d35522dce8,"_
",TEST_COMMIT
5d9de707fd2b27af7aed3a7f917505a0b0c5e60b,"_
",TEST_COMMIT
3cd8b8c36c4b3f176ecddc77395e1627bda01798,"_
",TEST_COMMIT
c8b89c2388d9cede51467c8233053a52f5ec441c,"_
",TEST_COMMIT
3421f5308015178bb0a683ae23d4f10a2f3f2154,"_
",TEST_COMMIT
5315c0f9c63e65a4595dd30db99eed66b85f09d7,"_
",TEST_COMMIT
33417454533203b7e30ee9d11cb61c3fc154b912,"
",TEST_COMMIT
bf8608cba94dc11176161bfea3c972832424e447,"ariver: 2010-01-14 18:41:12
",TEST_COMMIT
90e29755c828dca318dd4fd71eab7ca908246fa1,"ariver:20100114183627
",TEST_COMMIT
9dda3b03a28cb24e67b8398269d76d3d08e17b32,"
",TEST_COMMIT
137d9e5f0bcbd5aa621c0a97d76297ee30465909,"Fix math adding offset to the calculation of memory needed.
",numpy/core/src/multiarray/arrayobject.c
5aa122332ddb0483752df2e8d5ecbae201ab697e,"Make sure and account for offset in test of whether or not an array can be created from the available buffer.
",numpy/core/src/multiarray/arrayobject.c
5efba97f7e3c0734ed8367c97e02958f18bb575f,"* fix methods using axis when the mask is nomask (from 1.4.x r8041)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
d24bb94187bcba39911a93aa76582e02cfef5e20,"* Switch the order of optional parameters in ma.argsort for compatibiity w/ np.argsort (bug #1349)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
4717bd039c85c36ac173dec6e772d2c5531735c7,"small doctest fixes
",numpy/doc/misc.py
79939bdd4ebe75712afe3ec993ba2f5d8632fcdd,"make master TOC page
",doc/numpy.scipy.org/source/content.rst
7894a07c67b60821c837d9d36880081690e72867,"adding scipy icon bar to top of the page
",doc/numpy.scipy.org/source/_static/favicon.ico,doc/numpy.scipy.org/source/_static/images/bugs.png,doc/numpy.scipy.org/source/_static/images/documentation.png,doc/numpy.scipy.org/source/_static/images/download.png,doc/numpy.scipy.org/source/_static/images/feed-icon.png,doc/numpy.scipy.org/source/_static/images/tutorial.png,doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/theme/scipy/index.html
218a9a010e205c6e71c51f89a7b264a193c95c21,"Added div to center align the ohloh stats.
",doc/numpy.scipy.org/theme/scipy/index.html
5f6bfbe5e02571aa321a02b73675bf65bb3b5b79,"forgot to check-in the main page template
",doc/numpy.scipy.org/theme/scipy/index.html
2e3634c0ae6d2238476122583209816c83d7f46f,"converting the main page from rest to an html template and add ohloh link
",doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/{index.rst,doc/numpy.scipy.org/theme/scipy/layout.html
0fef6e7813c9baa2c51d3f2eb8fa1352296c30b8,"FIX - allow doctest tester to parse config before being replaced by NumpyDocTest
",numpy/testing/noseclasses.py,numpy/testing/nosetester.py
e4f233ecfedd2aafa258db2d3ae27e30604cc020,"fixed a whole bunch of doctests
",numpy/__init__.py,numpy/add_newdocs.py,numpy/core/arrayprint.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/function_base.py,numpy/core/numeric.py,numpy/core/records.py,numpy/ctypeslib.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/doc/__init__.py,numpy/doc/basics.py,numpy/doc/constants.py,numpy/doc/glossary.py,numpy/doc/indexing.py,numpy/doc/misc.py,numpy/doc/structured_arrays.py,numpy/doc/ufuncs.py,numpy/fft/fftpack.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/recfunctions.py,numpy/lib/shape_base.py,numpy/lib/tests/test_format.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/matlib.py,numpy/matrixlib/defmatrix.py,numpy/testing/noseclasses.py,numpy/testing/utils.py
5ba01996a9ab2fdfb7c120a5afae801f854a781a,"ENH - added matrix_rank function to linalg
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
55ab10cd15e165dbf129079846adaf3961b527fd,"* make sure mvoid.tolist returns standard Python objects
",numpy/ma/core.py,numpy/ma/tests/test_core.py
e700c55fa7ce25128359b843e8913311841dd855,"STY: Indentation, break lines, replace 1 by METH_VARARGS, whitespace.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c
f0846959e7f2640e519bebf44a24798084f44919,"BUG: Minimal fix for ticket #1339.
",numpy/core/src/multiarray/scalartypes.c.src
043d56bdf49b4fcc4359bec59b59a31117fd8548,"STY,DOC: Use macro METH_VARARGS everywhere. Break some lines for easy reading. Add some notes.
",numpy/core/src/multiarray/scalartypes.c.src
f8f753b33fd77211227d5e5dad2d0b9c2e3dedad,"* Force _fill_value to a 0d array (so that field values can be propagated, bug #1332)
* Make .fill_value return a scalar (int, float, void...) and not a 0d array 
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2e28be893dd2a8180505683f3aa0cc72ebe0bc47,"* fix .tolist() for mvoid objects (bug #1330)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
bc2232b84d2c5e50826f715507fa23d70c6c8718,"* Add support for `fill_value` to mvoid
* Simplify mvoid._get_data
* Simplify MaskedArray.tolist and add support for individually masked fields (bug #1330)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
f6f1c821fb5bbe83da52e917ccfd66adfd13dc92,"* added log2 
* removed the global np.seterr
* prevented warnings to be emitted with ma.ufuncs
* introduced mvoid to help the iteration/item access of masked structured arrays
",numpy/ma/core.py,numpy/ma/tests/test_core.py
6938cc09cfa9fa94448132cd48ae4257ccaddc17,"Don't segfault if file reading is somehow faulty
",numpy/core/src/multiarray/ctors.c
effa092c846c190b77ae71184f252ee9bb8f48e7,"Add ability to set date-times with integers and strings.
",numpy/core/src/multiarray/arraytypes.c.src
c26b3033271895535db947e381aaf9826039abba,"STY+BUG: fix unused and unitialized variable.
",numpy/core/src/npymath/ieee754.c.src
67be05408cae8b157f43504f9875a1c5bfa19b7e,"BUG: fix bug failure on big endian arch on Darwin.

The macros were not updated accordingly for the 16 bytes aligned BE 8 bytes
double with the recent changes for bit twiddling with long double.
",numpy/core/src/npymath/npy_math_private.h
b5e472ec593d0003135cecd8e58a5c61a976d2f3,"BUG: #1329: fix spacing for large values.
",numpy/core/src/npymath/ieee754.c.src,numpy/core/tests/test_umath.py
8bde1a547157653ea83889fbcd3c481c02b6491e,"BUG: fix escaping of pkgdir on windows.
",numpy/distutils/npy_pkg_config.py
bb0795556ccb9ff42b424297da9a0462b10d0d7d,"BUG: fix numscons build.
",numpy/core/SConscript
bfdb22a137e7ed2a8061b38f7da734f8e60101b0,"BUG: fix #1273: npy-pkg-info files did not work for eggs.

We use the pkgdir variable which is automatically translate at runtime.
",numpy/core/npymath.ini.in,numpy/core/setup.py
9a32a8d6821bec385cb572fec8f71beab136d3d5,"ENH: automatically translate pkgdir in .ini file.
",numpy/distutils/npy_pkg_config.py
5053c6fa4e6b6d4ebba30905690ca6e9940db54f,"BUG: use PyErr_Warn instead of WarnEx on Py2.4
",numpy/core/src/multiarray/convert_datatype.c
977e43600cbd7056b84d7ee802dc1402cb4b0bc5,"BUG: complex cast warning should be triggered only for casts to number types
",numpy/core/src/multiarray/convert_datatype.c
794a6c4511ced84c74bc8f2dd8cd8f277925a6ac,"ENH: emit ComplexWarning when casting complex to real (addresses #1319)

Casting complex numbers to real discards the imaginary part, which may
be unexpected. For safety, emit a warning when this occurs.
",doc/release/1.5.0-notes.rst,numpy/core/numeric.py,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_multiarray.py
8d24b14a7eed3fba60bab462e873214cc9fa2a1f,"BUG: fix 1087, thanks to Leek for the fix.
",numpy/distutils/fcompiler/gnu.py
dcd5238d0c6f07567cb94a932b4b9dfcf795e70b,"BUG: fix numscons build.
",numpy/lib/SConscript,numpy/numarray/SConscript
f253ac2ab58884d6da18c429c0823c34b72092f9,"BUG: fix #1317, uncaught SIGFPE when doing MIN_INT32 / -1.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_regression.py
0910a8e1aa858c58b3dce6930d4a0160b348b0da,"BUG: fix buggy config check for complex functions.
",numpy/core/setup.py
28be4a6b073efb779c2b488601b68272831c2b9d,"BUG: numpy.ma set fpu exception error state to ignore all at import time.
",numpy/ma/core.py
20f3fef417dc951af305f32f42d99174570f5069,"* _iotools.LineSplitter : prevent the first and/or last empty tab-separated columns to be dropped
",numpy/lib/_iotools.py,numpy/lib/tests/test_io.py
73173cd85eae72e4a22b7b465ea74be0dacd8bc6,"BUG: fix test_buffer_hashlib for 64-bit systems
",numpy/core/tests/test_regression.py
801f2b2eed815d2489acd44ed9c8a7e581a4d433,"BUG: Fix bugs in complex pow (fixes #1313)

Thanks to Francesc Alted.
",numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_umath_complex.py
37f318c8be5c0f0eb7e7d217690446fbbc0d50d2,"BUG: make assert_equal and assert_almost_equal always display err_msg
",numpy/testing/utils.py
dfebefba4ff24627c0be0c97dc198a16573f2866,"Cleanup r7978 (add err_msg support to assert_mask_equal
",numpy/ma/testutils.py
9fef44316518533cdfb6314b32fcbb015fa9f836,"* Bugfix #1173 and #1174 (Michael D.)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
f5c5c6d3b1e7e090c3bdf92cf8139355993a1c06,"Remove reliance on integer division by zero returning zero.
",numpy/polynomial/chebyshev.py
4cdc1e1b644cfcce88cb12c94c7ddcc03b64c4a0,"BUG: fix undefined symbol on Py < 2.6
",numpy/core/src/multiarray/buffer.c
577dbbd844b60958a59e062dae428a34a9c3644f,"BUG: add a work-around for #1312 -- don't define bf_releasebuffer at all

The problem is that PyArg_ParseTuple(""s#"", ...) does not accept objects
with the new buffer interface, if they have bf_releasebuffer defined.

We now work around this by not defining bf_releasebuffer, and releasing
any info associated with the buffer interface when array or its
descriptor is deallocated.

The shape+strides information for arrays stays static due to the
refcounting lock. The format information for dtypes may change
if field names are changed on-the-fly.

XXX: dtype field name changes are not currently handled.
",doc/Py3K.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/buffer.h,numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
b860d14381adc72323c0a8f5f47af39259604d09,"doc: add stub release notes
",doc/release/1.5.0-notes.rst
abf9510babf61fb5babdc6c5955b9fa7c699a95e,"3K: more careful error checking in flagsobject.c:arrayflags_getitem for Unicode input
",numpy/core/src/multiarray/flagsobject.c
3033a149c7211936594e936b9cccea49775f55a5,"3K: setup.py: really fix svn_version()
",setup.py
ab391a98addeda6f7da81756c135a0777f3f4e97,"3K: fix setup.py:svn_version to work on Py3
",setup.py
45e13617cd3742d3c79ecf242469e3b3d14fc46d,"doc: more Py3 notes
",doc/Py3K.txt
bc96ed3ed9229957631be5560389e6896c9dc6b3,"Mark a non-implemented test as a knownfailure
",numpy/core/tests/test_multiarray.py
03f0ace600624ffbb13467e6fdf4e112fc6d714f,"doc: update Py3K notes
",doc/Py3K.txt
5f8e25452e8aff0f74b3cbf8aca4e87c8c41cc23,"ENH: core: add tests for Unicode (or Bytes on Py3) in field names and titles
",numpy/core/tests/test_multiarray.py
6850a5c0be627ba002bc703a449c39064ce91433,"3K: core: some PyString conversion in arrayobject.c
",numpy/core/src/multiarray/arrayobject.c
be7c282f35ea6e0de6817d4f64380a7cae39ffa2,"core/buffer: cache format string etc. in the ndarray object
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/ctors.c
c10e61e789018fcea80832f0e1d2c007f46dff94,"3K: fix ma/test_mrecords.py so that it does not fail in test setup on Py3K
",numpy/ma/tests/test_mrecords.py
ab88a61f6d6dac9e5617f4a45475ce509ed9dd9c,"3K: add missing includes for NPY_SEPARATE_COMPILATION
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/private/npy_3kcompat.h
b5a0fa01112665fec8e165d5bbdc32bbdd2f1602,"3K: core: make comparison between Unicode and Bytes NotImplemented, as it is in Py3K
",numpy/core/src/multiarray/arrayobject.c
fe75577497ea91dfd5a8e3ce9c7e9544318ad11d,"3K: core: PyString conversion in convert.c
",numpy/core/src/multiarray/convert.c,numpy/core/src/private/npy_3kcompat.h
948b64926eba319664e26e934d824a192dfe5684,"3K: core: fix IO locale tests -- apparently some changes in Py3 Nose
",numpy/core/tests/test_multiarray.py
142d6d0b8849146515772ef2c4f5c462e5b23094,"Py3K notes: update notes Re Unicode and Pickling
",doc/Py3K.txt
9a96719489195e1c3ce5bec47f76723cf565a7a9,"3K: core: try to retain backward compatibility with Python 2 pickles

This entails using Unicode for the endian character, and accepting
Unicode data as input.

We assume the user always uses encoding='latin1' for load, if
backwards compatibility is desired!

Tests are fixed according to the above.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/methods.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
3edf9a278f17df21b81015645a4894347b22a7f3,"BUG: fix comparison between tuple and int in test_numerictypes.py
",numpy/core/tests/test_numerictypes.py
5c68587ecc8aec46c15b17f414c3ccad9c1ecb2d,"3K: core: make defchararray to import
",numpy/core/defchararray.py
be838deac67a6514c16d9042c8fb67644ae06145,"py3tool: customize 2to3 flags for some files
",tools/py3tool.py
7a78927255b9b97293d07f7876f390f77bb3be47,"3K: core: replace StringType in records.py by str
",numpy/core/records.py
7887a0c8743f973656dd806209cf2b403ae6bf92,"3K: core: stub out UCS size check on Py3 in test_unicode

Py3 str does not implement the buffer interface, so the previous way to
do the check does not work any more.  The check needs to be fixed later
on -- this commit is just to make nosetests able to import the test file.
",numpy/core/tests/test_unicode.py
5e8f66aec2eb13b81734e80a0c01806635722c7b,"3K: core: make type codes of typeinfo dict Unicode in arraytypes.c.src
",numpy/core/src/multiarray/arraytypes.c.src
cc0b2a0d03dc129d5715316e62590e69597ad595,"3K: core: PyString conversion in ufunc_object.c
",numpy/core/src/umath/ufunc_object.c
5cf494b71450235477b12f6c8489d945e363347a,"3K: core: PyString conversion in multiarraymodule.c
",numpy/core/src/multiarray/multiarraymodule.c
4a33b9e2b6a553d55e3a70be7f23e8e481b71f7a,"3K: core: do not swallow exceptions needlessly in test_multiarray
",numpy/core/tests/test_multiarray.py
ca1241a2ffc57b04563ecae7d709fbf46d94eb6c,"3K: compat: add getexception to compat.py3k
",numpy/compat/py3k.py
61d0bd66242a33da1f05364f45220e067e9e1b73,"3K: core: Remove 'getbuffer' and 'newbuffer' from multiarray in Py3

Py3 has the new memoryview object, which should obsolete these
functions.
",numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c
a875834aa90900fc47a51939e4fa0686deb8599a,"3K: core: remove unnecessary #warnings
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c
3b54de52819efbf71b55a3ca862659eba5eb4641,"3K: test_errstate should check floor divide, to avoid spurious fp exceptions
",numpy/core/tests/test_errstate.py
2fcf0ec7eaf3ba548509e3cd3f5b3a81177e6ae5,"3K: core: PyString conversion in ufunc_object.c
",numpy/core/src/umath/ufunc_object.c
9a079c7c4e8960582fda8902616e5253b3ad2f3a,"3K: core: bytes vs. str fixes in memmap.py
",numpy/core/memmap.py
1e6fbd050c42ece2c2d14598a5c32f101aba5d81,"3K: core: write only bytes to files in test_multiarray.py
",numpy/core/tests/test_multiarray.py
f5aefeeff7e853691868b0462d3fe2431e2d9c21,"py3tool: skip temporary etc files
",tools/py3tool.py
687535264d698d90be1d9da78e59ee4d91dfd811,"3K: core: everything should be Bytes in _internal.py
",numpy/core/_internal.py
de9df0a84a699b736f0f1e8adb41e6ca417b6769,"3K: core: PyString conversion in hashdescr.c
",numpy/core/src/multiarray/hashdescr.c
b3317cf1251435738d0b2c0158b77315c025b946,"3K: core: cPickle is no more, use pickle in methods.c
",numpy/core/src/multiarray/methods.c
c694f2ebba38a8514274461147d4383205f3e038,"3K: core: PyString conversion in conversion_utils.c
",numpy/core/src/multiarray/conversion_utils.c
48ea533014beff860261feabf071bc149478234b,"3K: core: PyString conversion in flagsobject.c
",numpy/core/src/multiarray/flagsobject.c
532404706ed8ed66f2db28a56a14386d8f97e080,"3K: fix test_complex_inf_nan
",numpy/core/tests/test_print.py
fc5393fd0959afef44baf7c8b690d16157b351a7,"3K: core: fix a few Name and SyntaxErrors in tests
",numpy/core/tests/test_errstate.py,numpy/core/tests/test_getlimits.py
df80ae3334f8544aa4c0f76cd2ebcf6852c2c26a,"3K: core: PyString conversion in scalartypes.c.src
",numpy/core/src/multiarray/scalartypes.c.src
b27449786494318fc00254b4d8d46ec38b9c9942,"Add more Py3K notes
",numpy/core/src/py3k_notes.txt
a0ef94ef124d29c273ac7524f81458d118daf2c1,"3K: rename compat.isfile to isfileobj to avoid confusion with os.path
",numpy/compat/py3k.py,numpy/core/records.py,numpy/lib/format.py
906d21e1b3ef6e6cd68847c427c185137a151314,"3K: lib: some fixes to lib.format on strings vs bytes; and file objects
",numpy/lib/format.py
0e53511634af0e4b8a315346b6396c2245863ed0,"3K: add some compatibility tools to numpy.compat
",numpy/compat/__init__.py,numpy/compat/py3k.py
07461f24aa32254b123d994353abc6c865f46550,"py3k_notes: some notes on PyOS
",numpy/core/src/py3k_notes.txt
55d6070b29b616fe6f5cc07de3b87f7cdec8041e,"3K: do not use PyOS_ascii_strtod -- it segfaults and is deprecated
",numpy/core/src/multiarray/numpyos.c
66ec6800671d1261b007ff39ecfae4766417d735,"random: regenrate mtrand.c
",numpy/random/mtrand/mtrand.c
108960148ba8dd319a0b656158b8c7897fcf3307,"3K: random: make mtrand to import
",numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/mtrand_py_helper.h
65b64fdf528ffae27054621b43ff78aa48b991b9,"3K: core: make umath_tests and multiarray_tests to import
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/umath/umath_tests.c.src
0bfa6057c2e08c75b81497e406d5e1f9537e0d9c,"3K: lib: use open instead of file
",numpy/lib/io.py
321ad25308c3bf41c01ac54a91ea7f64c77ca4bb,"3K: polynomial: exceptions module is removed
",numpy/polynomial/polyutils.py
9854a4f6d52c1fca0b5cb0e3fcafae5894ea5302,"3K: polynomial: Python3 friendlier template
",numpy/polynomial/polytemplate.py
3031a0045ce97cc6e0a4d906bcc75713672992aa,"3K: fft: module init for fftpack_lite
",numpy/fft/fftpack_litemodule.c
e05a07582c6eb99a434776c055d1c609c0744ca4,"3K: linalg: module init for lapack_lite
",numpy/linalg/lapack_litemodule.c
026e0d2910ac89220ee7554debbf5fdaec5e621f,"3K: core: work around some cyclic imports
",numpy/core/arrayprint.py,numpy/core/numeric.py
bbdeda175356c0d3d03b25db90149caa097dcb11,"3K: core: include npy_config in _sort
",numpy/core/src/_sortmodule.c.src
686f1b98cdef9562e1e00b4ee4c3957acdbf7c19,"3K: core: type fixes in numerictypes
",numpy/core/numerictypes.py
8028e7797548122b2f12d025c11f6a897b494dae,"3K: core: PyString conversion in descriptor.c

Field names are PyUString.

In Py3, fields dict contains only Unicode.

On Py2, however, still allow Bytes or Unicode titles to go in fields
dict, that all of Py2 semantics stay unchanged.
",doc/Py3K.txt,numpy/core/src/multiarray/descriptor.c
35523ead5c998abc1c9d64baab860d555d22e6c1,"py3tool: fix some relative imports for extension modules
",tools/py3tool.py
b69609b1e2d236bb03a4c6e616783a0a19be7f9b,"3K: lib: make _datasource 2to3 friendly
",numpy/lib/_datasource.py
b8f19165477c549646b4ab540dd2cd2adcb3dad2,"3K: lib: module init for _compiled_base
",numpy/lib/src/_compiled_base.c
1fc4a731d50397406b5d5801476db6a56e5d8eb8,"3K: module inits for all core modules
",numpy/core/src/_sortmodule.c.src,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c.src
816035e8881f19437b7f1d08b30e48cf4adac278,"core: Implement the PEP 3118 buffer protocol (exporter part)

Also, use MemoryView instead of PyBuffer for Py3.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/tests/test_multiarray.py
795b044cc36fbe63b681147767cf18e28ecf2b51,"py3k_notes: write more notes
",numpy/core/src/py3k_notes.txt
1856a558a86dff5e0f42a021919c09f166731493,"3K: core: remove PyInstance checks on Py3 -- this may need revising later on

The PyInstance type is removed in Py3, and there is no immediate
replacement for PyInstance_Check.

This commit is just made to make Numpy to compile on Py3, and the
Instance checks may need to be fixed later on.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/ctors.c
ed6b033a68f40b20b199980df45e8ac5cc279f06,"3K: core: PyInt issue in conversion utils -> always return longs
",numpy/core/src/multiarray/conversion_utils.c
1a32ea0e7ad00354262d06f1197623a09d06c199,"3K: replace divide by true_divide
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/calculation.c,numpy/core/src/umath/funcs.inc.src,numpy/core/tests/test_umath.py
cfdad71eec2a91e81a8e42005e32bbaf1a01dad0,"3K: core: use correct functions for Unicode and Bytes repr on Py3
",numpy/core/src/multiarray/arraytypes.c.src
e767232db8f2993516917483bb40aca5f3b08d0a,"3K: core: PyBytes, PyUnicode, PyUString compatibility defines in npy_3kcompat.h

Make PyBytes present also on Py2, add some convenience Unicode routines,
and define PyUString be PyString on Py2 and PyUnicode on Py3.
",numpy/core/src/private/npy_3kcompat.h
e6b6a34d0ffdd5d17f517486ed1980e01a129043,"3K: core: InternString conversion in multiarraymodule.c
",numpy/core/src/multiarray/multiarraymodule.c
cd5d54b4083a1e83d539e15973d7f0cd7ea8a278,"STY: core/ctors: use GetAttrString, not GetAttr
",numpy/core/src/multiarray/ctors.c
b6f2dae92144087e924d54c67d65f660f13e6f48,"3K: add_newdocs: use absolute import
",numpy/add_newdocs.py
6d5ba6d151d2e3bb892b2e6686b91927dc74e64d,"3K: distutils: remove unnecessary non-ascii characters in intel.py
",numpy/distutils/fcompiler/intel.py
272ed1997edfdf53275a903015025d37eaa98444,"3K: lib: fix PyString issues in _compiled_base -- may need revising
",numpy/lib/src/_compiled_base.c
b16616a553347358a8476e80b9db3a56c6362c2a,"3K: numarray: replace buffer APIs by dummy+error. Some ob_types.
",numpy/numarray/_capi.c
f4d788c18c0cb1bf37b4ef9a7f73af2aa47dfbf6,"3K: linalg: correct init function definition for lapack_lite
",numpy/linalg/lapack_litemodule.c
7fde981edb7cc6ea20ac2e0083c932900c67ff5c,"3K: distutils: produce a 3K-compatible __config__.py
",numpy/distutils/misc_util.py
0e70ee67e8a9d937b9773cedfd52344cab3e03cf,"3K: core: implement and use compatibility mode for PyFile
",numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/npy_3kcompat.h
2649c52a599840a7d811e4c171b03877cbf68043,"3K: core: handle removed tp_compare and PyObject_Compare

Also, implement tp_richcompare for flagsobject.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/private/npy_3kcompat.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umath/loops.c.src
a8fa66aee74a937109b1e3bc04076fb909966acd,"3K: define PyStringObject as PyBytesObject
",numpy/core/src/private/npy_3kcompat.h
95dd74d60d611c62f9dc614e2933a9c44ae0f30b,"3K: write READONLY, not RO
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/iterators.c
26c2727b62b5dfd9447e9fd9c41ae92299cc8690,"3K: bytes are never interned
",numpy/core/src/multiarray/scalarapi.c
8e7b7b9eff86eecd8e70b982ee0b5fa38f920fbd,"3K: Py_TPFLAGS_CHECKTYPES is always on in Py3K
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/scalartypes.c.src
0a9e563f4f4ddd0c90feb0f30736795a285ebd9e,"3K: core: adapt to changes in PyNumberMethods

Some entries were removed in Py3K -- easy to adapt to.
",numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/scalarmathmodule.c.src
e96f9e98da9e8e0c045969833345140b3a06b852,"3K: take care of changes in ob_* introduced by :pep:`3123`
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/private/npy_3kcompat.h,numpy/core/src/umath/ufunc_object.c
aa7be886274a6535169e5866383cc997231cf99d,"3K: handle most PyInt_ issues in multiarray.

Do *not* inherit PyIntArrType from PyLong on Py3 -- the is not
fixed-range and the internal representations are quite different.
Not inheriting is, in fact, what was already done on Py2 on platforms
where the sizes didn't match.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c
5bebeb3cf3d9bfe0d67076d0575601bbf0cb8fd3,"3K: compatibility wrappers for PyInt->PyLong and PyString->PyBytes

We don't redefine PyInt_Type -> PyLong_Type, since the two are very
different -- one is fixed-size and the other is not.
",numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/private/npy_3kcompat.h
f755093b31d2ac75f9f157e4835086f95ea09c2f,"3K: core: add NPY_PY3K to config.h
",numpy/core/setup.py
6815943d78d7e6bd839f9f2e1d9ba5ab66ed6c75,"3K: make setup.py call 2to3 automatically -- place sources to build/py3k
",setup.py,tools/py3tool.py
4a3fd1f40ef59b872341088a2e97712c671ea4ca,"3K: distutils: ordering between None and str is undefined in Py3K, so fcompiler should raise CompilerNotFound when version is undefined
",numpy/distutils/fcompiler/__init__.py
fe562323c1304dfc0d7029a039d4260b6c7ba613,"3K: encode str to bytes before writing in distutils/tests
",numpy/distutils/tests/test_npy_pkg_config.py
00e4fd340afddee71c8518fa048400322e95c6cb,"3K: distutils: there is no types.InstanceType in Py3, so don't use it
",numpy/distutils/fcompiler/__init__.py
33867b6cbc2d12eac9a1c2a5b7af42fda1cd1a64,"3K: testing: clean up syntax that confused 2to3
",numpy/testing/numpytest.py
c0c266ea2e678dbb4f899d6f985f35b19fb88d08,"Fix tests now that ufuncs raise NotImplementedError.
",numpy/testing/utils.py
914c498abefb4f65e160cdf6b030ff8efe8b975c,"Fix #1175 by only returning NotImplemented in the special case of a 2-input and 1-output ufunc.  Otherwise, a NotImplemented error is raised.
",numpy/core/src/umath/ufunc_object.c
e2fbec1c121e92d41322149f6c376adf2bf5346a,"DOC: point out the documention for neighborhood iterator in the 1.4.0 release notes.
",doc/release/1.4.0-notes.rst
667e611899fa2ad8afa5d72552ea59a53c471d09,"BUG: icc 11 requires complex double, complex alone is not enough to define a C99 complex number.
",numpy/core/src/npymath/npy_math_private.h
ed8c90653e434695ff4cf90b2ab1b4c736506d50,"WHT: Remove trailing whitespace.
",numpy/core/src/umath/ufunc_object.c
c355e7162b6b170372471266d3f913a07d5561e2,"BUG: Fix #1254 which allowed duplicate name and title entries.
",numpy/core/src/multiarray/descriptor.c,numpy/core/tests/test_regression.py
e399c7ab21b7f9d7a911775993613e5ed49637f0,"Fix multi-line comments.
",numpy/core/src/umath/ufunc_object.c
b443d6c96ab01ee86f45a28c8caaab8d129e111e,"OTH: Fix typo and continuation line characters.
",numpy/core/src/umath/ufunc_object.c
85995f94d4fcedc96ec2647577a8dd1375fff839,"Port the fix of the memory-leak reported in #1222 to the trunk.
",numpy/core/src/umath/ufunc_object.c
b8ceb06a0d1c7ba581cbadb2d789d2664e21b8d1,"Fix code_generator for python 3 -> python2.4 and python 3.1 build_src both run and produce same .c code .
",numpy/core/code_generators/generate_umath.py
d3cf1d88350f2817b653df405e000eb7e4ee1b8b,"Py3k: fix dict sorting in code generator.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_umath.py
54d51ba9375a62a504bac2d560358e07e5f8d078,"Py3k: add a py3k version of pyod.
",numpy/core/setup_common.py
f7dd25718e2e8135be2287bfa22967c1c7981448,"Py3k: handle relative import in ccompiler.
",numpy/distutils/ccompiler.py
944bb9fb73ed888f9917e3059274af2f3fa652fb,"remove has_key from config.
",numpy/distutils/command/config.py
90e79bd64d139f7938660635cbce558c39d98053,"Py3k: Fix comparison when version is None.
",numpy/distutils/fcompiler/gnu.py
6603acb88bd9ebf3dbcdd0f85f555cfc6f952228,"Fix version comparison when version is None.
",numpy/distutils/fcompiler/nag.py
8a0ae9f4540d8644e66668a6198faa3a6a8577a5,"BUG: fix mixed tab/space indentation.
",numpy/distutils/fcompiler/gnu.py
b60735c7b3ca67314d3dd01137670a0c2d7f1300,"Py3k: make fcompiler.compaq py3k-importable.
",numpy/distutils/fcompiler/compaq.py
6ab5f37d9358712a4da215e0adccecf0ab419651,"Py3k: make cpuinfo py3k-importable.
",numpy/distutils/cpuinfo.py
b072669a495a6e50acb5ab0a25301b721c3875d9,"Fix some more issues for ccompiler: string module obsolete.
",numpy/distutils/ccompiler.py
652cc7c0d2323ff42b9e96bbc50a1e300bcc2c25,"Fix callable in build_src command.
",numpy/distutils/command/build_src.py
d011d924657c8d3fa86078fb871930f0ef94ee4d,"Make linalg setup.py runnable under python3.
",numpy/linalg/setup.py
efadf0d436856dbd1b756035fc1faf46a607b346,"Do no use has_key in misc_utils.
",numpy/distutils/misc_util.py
5863ddfa04a64778305dfd072426373b90286355,"Make genapi runnable under python3.
",numpy/core/code_generators/genapi.py
e09b6678f73384e7b45b868911f7c8ce21c042c4,"BUG: fix system_info broken by py3k changes.
",numpy/distutils/system_info.py
c121f74bd43bc24a4ce0bee38defeea99b51f05c,"Py3k: make core setup.py py3k-importable.
",numpy/core/code_generators/generate_umath.py,numpy/core/setup.py
08ec7978368aa9d5bbaf52d8dde582e2af250eb1,"Make f2py setup.py runnable under python3.
",numpy/f2py/setup.py
ffce47a522f597017bf12f53500c886df8196c33,"Fix callable in misc_utils.
",numpy/distutils/misc_util.py
6914ea4c8429407566a037164c9e34e168c486f5,"python3 changes function object attributes names.
",numpy/distutils/misc_util.py
b1b6e581144db477b9e8780b0f22f27f7eaddfa4,"Fix print statements in numpy.distutils.environment
",numpy/distutils/environment.py,numpy/setup.py
c8d45a0520815661353b8147ad9ceb32bf8a044b,"Py3k: make fcompiler module py3k-importable.
",numpy/distutils/fcompiler/__init__.py
bee85b21cb5a7263d09e9ea58081c1c4cac55089,"Fix print statements in fcompiler for python3.
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py
d4b61015fa3f708901d0bda026864f8e77151540,"Py3k: make scons command py3k importable.
",numpy/distutils/command/scons.py
8a1ba33c12bb73543a7ee29a7ec67386e1967656,"Py3k: make template generators py3k importable.
",numpy/distutils/conv_template.py,numpy/distutils/from_template.py
cf934f7deed917eb6a8d7bc8e160207f69c481c4,"Make build_src and build_clib python3 importable.
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_src.py
2b2872b1fa4e81454835fd122bed02f931b73baf,"Py3k: make system_info importable from py3k.
",numpy/distutils/system_info.py
b3f8643a8929d6a75bfcbdf06791e3d3a116a338,"Fix print/repr/raise python3 incompatibilities in system_info and build_ext command.
",numpy/distutils/command/build_ext.py,numpy/distutils/system_info.py
271cfcfaa6ffaeea21aa5ea3bc3673f56886e3d1,"Py3k: make mingw32compiler module py3k importable.
",numpy/distutils/mingw32ccompiler.py
ee27e9b6dbbfd8a0fce1cb638053efcbdc22eb3f,"Py3k: make config command py3k importable.
",numpy/distutils/command/config.py
a3ac1f3c1641755d5ba724fdb25373eb37962bd4,"Py3k: fix unixccompiler + exec_command exception/print stmts.
",numpy/distutils/exec_command.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/unixccompiler.py
edb13fa9fa1183973a76dc89eda8f4cf2b846b91,"numpy.distutils.core importable from py3.
",numpy/distutils/core.py
c85421c3b85e794d07e8de0304136c068c7f2e17,"Py3k fix for misc_util.
",numpy/distutils/misc_util.py
36dae6932c2f4d8d8cf54f102c10f19096cc3cf6,"Make numpy.distutils.log importable from python3.
",numpy/distutils/log.py
ead042607c9d311e02b3670b3a64652a63930aa7,"Fix raise + print stmts in ccompiler.
",numpy/distutils/ccompiler.py,numpy/distutils/compat.py
26e1d7f4739e39ee16f73685bbcefdac03ae4866,"Make top numpy __init__ importable from python3.
",numpy/__init__.py
ccdfafcf58fdf3dc1d95acc090445e56267bd4ab,"Fix relative import in top numpy.distutils.
",numpy/distutils/__init__.py
2b517694e894ac6853f85899e5603758caf13c68,"Fix __builtin__ import for python3 at top setup.py.
",setup.py
541798c0ec040c11ee7b1cdab9b35865546dc28d,"Clean-up PyArray_EnsureArray so there is one return point.
",numpy/core/src/multiarray/ctors.c
2f300ed50be961076a28c60a7227233ce72975aa,"Push memory-leak fix to trunk.
",numpy/core/src/multiarray/ctors.c
fd0866ffc7ca4c3d843b156c9a706b1a3e1ad67d,"Fix Ticket #1108 by initializing correctly the block of data corresponding to the identity for the ufunc used during reduceat with a buffer.
",numpy/core/src/umath/ufunc_object.c
b3f63a20ca2fcf46f8c83e77b1b399ab4d8d24b3,"Port the fix for #1299 to the trunk and change trunk version to 1.5
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/scalarapi.c,setup.py
49d9ff44f860ee94c500294ead71f63f18d19ae9,"TST: Add regression test for Ticket #1299 and clean-up test for non-buffered structured array bug.
",numpy/core/tests/test_regression.py,numpy/core/tests/test_umath.py
55f0dfc4620cf52a47e7e1b1e9ad937c803c21b9,"REL: generate both 2.5 and 2.6 win and mac os x installers in release script.
",release.sh
453172fa1a10aecb9f79cffa9cf1a7233827169d,"REL: fix atlas detection for SSE2/SSE3 wininst.
",pavement.py
d4d34804676f06da528adffef24e7d0b7b194d9c,"REL: re-enable SSE2 binary in the superpack.
",pavement.py,tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
e0abf3b34a1e36a537ff0399743193a0878249a5,"REL: fix dmg name and dmg build.
",pavement.py
cc8c533de794404a2f8849643e6d396b05719272,"Use gcc-4.0 for python 2.5, to avoid using gcc 4.2 on Snow Leopard.
",pavement.py
42cd0d88dffb8ba97e2d070bcea54be1969e662c,"BUG: fix numscons build, missing subst in _numpyconfig.h
",numpy/core/SConscript
99b4f78b45ae58e8b9e9370a9c6d61e1e2140a50,"BUG: Fix extra declaration of _datetime_strings in descriptor.h when not
doing separate compilations. It fails for vs2009 compiliation.
",numpy/core/src/multiarray/descriptor.h
db2d4b5fe5e2325ac9d21fba27825c74eff8384f,"Small cleanups in polynomial modules.
",numpy/polynomial/polyutils.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py
f9d1cd5265b013042b5909adf92ca5ea168aaee3,"Fix documentation of array.
",numpy/add_newdocs.py
ae8a70e2e01722c83d3c977924f14fe3ee8d2d9b,"BUG: do not redefine SIZEOF_LONG in config.h if already defined in python headers.
",numpy/core/SConscript
f962cfd94bd547edac39112657661a704c587907,"BUG: fix arch-dependent SIZEOF in npy_config.h for mac os x.
",numpy/core/src/private/npy_config.h
4e632a32de64f0d197a87519736713f3920dc0fb,"ENH: add a guard to ensure config.h is never included directly.
",numpy/core/SConscript,numpy/core/setup.py
17e51af8e7e1b13f3ec19a8a25c40c85667265e9,"BUG: (#1221) special case mac os x in numpyconfig.h

Universal builds break the configure stage: we have to harcode the
arch-specific values in the case of mac os x, as we have only one configuration
stage per compile, but several arch per compile with the braindead -arch
machinery.

We rename the old numpyconfig.h to a private header, and numpyconfig.h itself
post-fix the values in the case of mac os x.
",numpy/core/SConscript,numpy/core/include/numpy/{numpyconfig.h.in,numpy/core/include/numpy/numpyconfig.h,numpy/core/setup.py,numpy/distutils/misc_util.py
9ff1e779b54237cfbcb6612feb387ad6736f8856,"BUG: import DistutilsError.
",numpy/distutils/misc_util.py
a783074b622423b665ff8c4e7e97e1eebe9b183f,"TST: add a regression test for #1081 (not fixed yet).
",numpy/core/tests/test_regression.py
2d4edf255ae85bded0844186314c42e8a35185d2,"BUG: (#1078): fix segfault when creating arrays with a sequence which contains 0d array.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_regression.py
131ac69ad30c3dbc8ca210c5dd954c62b4e7e4d6,"DOC: there is no acorrelate function.
",doc/source/reference/routines.statistics.rst
6dce85229c750519f75ac09c34997545b8586d98,"BUG: fix md5 import for python 2.6 in paver file.
",pavement.py
58f72773ff316469a47b702d387bf9dbd0270c78,"BUG: forgot to update the C_API_VERSION as well.
",numpy/core/setup_common.py
35a5f800caf19e0b0a8f0ad795e32e7f45f0b1d5,"ENH: add version 4 checksum of the C API (numpy 1.4.0).
",numpy/core/code_generators/cversions.txt
ec8c09aba8906f0f68a0661381af96fc43fc19e5,"BUG: fix wrong declaration of _datetime_strings.
",numpy/core/src/multiarray/descriptor.h
39da9239e0d47a773562e9223c868fbd0d1db3be,"BUG: declare _datetime_strings and mark its definition as a private symbol so that separate compilation works.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h
eeed9facb8574411a4e9355f792f2641d2c59559,"BUG: the _arg ufunc declaration was accidentaly removed in a previous commit, breaking the separate compilation mode.
",numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
9d658f98abd143a5f21d32ae326201029c9f40d3,"numpy.datetime --> numpy.datetime_ and fix Descr_FromScalar to correctly add DateTime Meta data.
",doc/neps/datetime-proposal.rst,numpy/core/numerictypes.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/scalarapi.c
df1edd4f4ec28fd14db64ce565b49c0e1b0f6bb9,"Remove extra comma in enum for C89 and C++ compatibility.
",numpy/core/include/numpy/ndarrayobject.h
d857eaf35b6a51b7208c90eb20c963ffe9c7cdf2,"BUG: fix 2.5 >= try/except/finally.
",numpy/testing/tests/test_utils.py
5623023a31303a2d6ec2346fb989e913b57eecc6,"TST: use assert_warns to check for warnings (and to avoid cluttering non-verbose test output).
",numpy/lib/tests/test_io.py
7277495f0c0bf4b64be4987243e1a08b2f831549,"ENH: add an assert_warns testing utility.
",doc/release/1.4.0-notes.rst,doc/source/reference/routines.testing.rst,numpy/testing/tests/test_utils.py,numpy/testing/utils.py
d9306312fb09e86736717a0b4121794de5a3034d,"REF: move warning context manager into utils.
",numpy/testing/decorators.py,numpy/testing/utils.py
734123bc38f62da38dceeb251e355ec3f720454a,"TST: mark spacing/nextafter long double versions tests as known failures on win32.
",numpy/core/tests/test_umath.py
3dd44428ecba23e1ee0521e1e0a2d2a23fa72a8e,"TST: use different tests for each precision for spacing and nextafter.
",numpy/core/tests/test_umath.py
b7daa99fbd691c47c3d9a872896cafa8cbac3999,"ENH: add release script.
",release.sh
a898a835dbfcec42861f945ad9f535fbffa84cb0,"REL: only build nosse and sse3 binaries.
",tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
b4fbc59362bd9a381ca9a60c983179a6cddb92d0,"REL: add the scripts and art for the mac os x dmg.
",tools/numpy-macosx-installer/README.txt,tools/numpy-macosx-installer/art/dmgbackground.png,tools/numpy-macosx-installer/art/dmgbackground.svg,tools/numpy-macosx-installer/dmgbackground.png,tools/numpy-macosx-installer/new-create-dmg
7b2d3ba622a43920c25984272d2af9a563ce71de,"REL: new, better paver file.
",pavement.py
b4f8890e8ae164357d88adb2eb93b51851d71e3e,"BUG: disable atan2 when built with mingw, as it uses the buggy MS atan2.
",numpy/core/src/private/npy_config.h
9d8b3dc2c4a8637886aad77613a7bc26ea0ed0f2,"TST: use 'real' test instead of generator for atan2 and hypot special values.

It makes debugging test failures easier/
",numpy/core/tests/test_umath.py
59123160158a7ae2deaee0992a8feacea761978b,"BUG: scons build was not updated to handle polynomial.
",numpy/setupscons.py
a6e1cbed30568e4ca277f93838901c9d63e3a2e5,"BUG: check for IEEE754 macro on python >= 2.6.
",numpy/core/setup.py
5622ac504b56599bb6a203141eb373f3be7c3417,"DOC: fix wrong Example section.
",numpy/distutils/misc_util.py
e089fe8a34f1d7d2e8f13dbab5a67400f1bbe345,"Fix and test conversion and construction of date-time dtypes.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_datetime.py,numpy/lib/type_check.py
d9f28a0b6811ca33f5938e9d0e6dffd16ba453e9,"doc: rewrite latex-offending markup
",doc/source/user/basics.io.genfromtxt.rst
6ac92a83070a0f047b8dc990de31eac69c970ef3,"Add function to get datetime information from a date-time dtype.
",numpy/lib/type_check.py
b0e32f4064ecee2b66d787cb4b5a7bb49f4627c4,"Add comparison of datetime dtype objects that compares units correctly and add new metadata for new datetime dtypes.
",numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c
0edcfffdcddf675f0ab8b8f2f764dbdbe914adfb,"Fix problem in divisor conversion for datetime construction and fix formating of datetime nep.
",doc/neps/datetime-proposal.rst,numpy/core/src/multiarray/descriptor.c
d4d65a38cdccd298e6cc1c7b1512e62ee7265adb,"updating manifest such that python setup.py sdist produces a tarball from which one can build
",MANIFEST.in
71c4ff95ca381756cda98bcbb0ac7f11c212d600,"ENH: update version for paver script.
",pavement.py
09a0a0a29b65376d1fa0a2498ef62d7d8e016c8c,"ENH: fix paver script for wine-built simple wininst installer.
",pavement.py
faafd31ce16d32e4a33ee8280354743179f1face,"* fixed a pb when using sum/prod on an array with dtype np.object
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
ed56288c82c237c34147afe4300437812d5cca97,"BUG: retrieve build_clib in build_ext even if it has already been run.
",numpy/distutils/command/build_ext.py
de2d49530f44c863e89d1d9ed6ecd84a2b724980,"BUG: check for compiler in get_mathlib_info, as this may be executed first.
",numpy/core/setup.py
aa7ab26d14f340c23d92a54fe5ede99b398e3323,"Add any function for python < 2.5.
",numpy/polynomial/polyutils.py
7d5b7ebd1d8e2a61c735a3db31a316d76975261d,"More fixes to least squares method documentation in Polynomial and
Chebyshev.
",numpy/polynomial/polytemplate.py
c00156559b12d49fcea7c5fcdb287ba5ba37eb69,"Improve documention of the fit method of the Cheybshev and Polynomial
classes.
",numpy/polynomial/polytemplate.py
9e082de571f6994355b6cbd9f74ca9e998688780,"Mention the new polynomial and chebyshev modules in the release notes.
",doc/release/1.4.0-notes.rst
9211df98609ea0348ad51cab611387b8e898a974,"Add support for chebyshev series and polynomials.

New modules chebyshev and polynomial are added. The new polynomial module
is not compatible with the current polynomial support in numpy, but is much
like the new chebyshev module. The most noticeable difference to most will
be that coefficients are specified from low to high power, that the low
level functions do *not* accept the Chebyshev and Polynomial classes as
arguements, and that the Chebyshev and Polynomial classes include a domain.
Mapping between domains is a linear substitution and the two classes can be
converted one to the other, allowing, for instance, a Chebyshev series in
one domain to be expanded as a polynomial in another domain.

The new modules are not automatically imported into the numpy namespace,
they must be explicitly brought in with a ""import numpy.polynomial""
statement.
",numpy/__init__.py,numpy/polynomial/__init__.py,numpy/polynomial/chebyshev.py,numpy/polynomial/polynomial.py,numpy/polynomial/polytemplate.py,numpy/polynomial/polyutils.py,numpy/polynomial/setup.py,numpy/polynomial/tests/test_chebyshev.py,numpy/polynomial/tests/test_polynomial.py,numpy/polynomial/tests/test_polyutils.py,numpy/setup.py
b8b7c9602346fe21110549d133c17a6500d4986f,"Fix misformatted see also section
",numpy/add_newdocs.py
5a0e7560e7206f9c0f049d8176eab0f8c0b951c6,"sphinxext: fix a small bug in docscrape
",doc/sphinxext/docscrape_sphinx.py
d6997779c47c3ea56df71cdabfea9f425b2ed3a7,"BUG: use %g format in assert_array_*_nulp (fix #1297, thanks to Neil Muller)
",numpy/testing/utils.py
9d48a39d23b507e18ca8fa7c5786b5eaea926d0e,"sphinxext: add numpydoc_show_class_members option (from Michael Droettboom)
",doc/sphinxext/README.txt,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/tests/test_docscrape.py,doc/sphinxext/traitsdoc.py
66313a336889e2ff898dad34ffae32d928bb2d5b,"#1201, #1202, #1203: Fix arctan2 regression failures on Solaris by using the in-built atan2 implementation on that platform
",numpy/core/src/private/npy_config.h
98e4a9c7c4c58ca667be8ca96a643b61e9da4914,"Another attempt at a truly cross-platform nextafterl implementation
",numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math_private.h
6e91f0f59818c5bc9021f1913764bb667811fbcc,"second set of checkins from doc editor
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/c-api.array.rst,doc/source/reference/distutils.rst,doc/source/reference/routines.math.rst,doc/source/reference/ufuncs.rst,doc/source/user/index.rst,doc/source/user/whatisnumpy.rst,numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py
f07c79d3709a7f81219abc3c516fd772f469c167,"first set of checkins from the doc editor
",numpy/compat/__init__.py,numpy/core/arrayprint.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py,numpy/ctypeslib.py,numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/unixccompiler.py,numpy/fft/fftpack.py,numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/scimath.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/matlib.py
3122ee546fc0617e195aeb288abe65b9ae95d983,"BUG: setuptools does not run install_clib automatically -- run it manually in install_data, if setuptools is present (fix #1194)
",numpy/distutils/command/install.py,numpy/distutils/command/install_data.py
afbe79aee518504547014c9c657e9ac1098ab6b4,"BUG: do not use bitfields for bit-twidling of long doubles.

Some compilers (Sun CC v12 for example) do not support bitfields with
more than 32 bits. We redesign the internal macros and union usages to
use bitmask instead where needed.

Not thoroughly tested yet.
",numpy/core/src/npymath/ieee754.c.src,numpy/core/src/npymath/npy_math_private.h
c96d201e94a1bd791356f5729af6b57092333414,"BUG: typo for quad long double defines in distutils build.
",numpy/core/setup.py
5aa2bb4fe50adbdcfbd1777a02c2bdd653319b43,"* fixed rec.fromrecords for an explicit dtype with an object field (bug #1283)
",numpy/core/records.py,numpy/core/tests/test_records.py
0d1344ef88835faf34647bb702148767b8e23e76,"DOC: add npy_nextafter/npy_spacing in doc ref.
",doc/source/reference/c-api.coremath.rst
32501b397070ed37298668341e93b96c55197bad,"DOC: fix nextafter docstring.
",numpy/core/code_generators/ufunc_docstrings.py
111f37a04c6e85b202cc6f7c0bb46d750c2409b1,"ENH: add test for nan and inf for spacing.
",numpy/core/tests/test_umath.py
e2134a4062e55e623ca6c374c9506ea998c4cc69,"ENH: remove any mention of original python spacing, use ufunc everywhere.
",numpy/testing/utils.py
6e3e3d4afff28305d80ca0ad4e172fbf493f5a41,"REF: move spacing tests to umath as spacing is now a ufunc.
",numpy/core/tests/test_umath.py,numpy/testing/tests/test_utils.py
cbe4c80dda4c93bd69ce7a7c4f65f21cd8e38890,"ENH: make spacing available as a ufunc.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
dc6e5983b2d1dc9858ed9356eaf119a29d72ba37,"ENH: add C implementation of spacing in npymath.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/ieee754.c.src
7037d457e4318836d94ebab4b46bafc99d0897be,"ENH: make ieee754 a templated file, need for spacing.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/npymath/{ieee754.c
c52c2bfa691b5c3303f736de518a21a2c5c141ca,"STY: fix hard tab.
",numpy/core/src/npymath/ieee754.c
3d36bf277fd19e3db66bdd0201338a3db6dddc77,"Disable 7712 patch.
",numpy/f2py/capi_maps.py
869b208ddbf83c8b3aa915532368fdf0c289b351,"doc/release: add information about arraysetops changes (from Neil Crighton)
",doc/release/1.4.0-notes.rst
d683bd8102010640184f0da458cb27ca5b2ad224,"
",TEST_COMMIT
d1e0c40459f13769ffaf059363be662dc76874d3,"f2py: fix a code generation bug when callback function is taking arguments with the same symbol name.
",numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py
5b3f51c5fd86aae9674e3399d7a0b091311c1cd2,"BUG: ppc on darwin has long double aligned on 16 bytes - adjust IEEEl2bits accordingly.
",numpy/core/src/npymath/npy_math_private.h,numpy/core/src/private/npy_fpmath.h
289f90ba1cd743c61536dd2d082f9f8bccc3c668,"ENH: add nextafterl implementation.
",numpy/core/src/npymath/ieee754.c
7c8fb79b0b688df27c2b081d781137a1cf94a64a,"ENH: add a define in scons build for long double representation.
",numpy/core/SConscript
cca51dca1237bd4b3ee933e9143f0f742beed8d0,"ENH: define union to access exact binary content of long double representation in a arch-independent manner.
",numpy/core/src/npymath/npy_math_private.h
279067a92a3e3c5201da83b0ff6b528c5c30ea4b,"ENH: canonalize the define names for long double representation.
",numpy/core/scons_support.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/src/private/npy_fpmath.h
bd16028da499766165244b9a44b5f82cd6543c24,"BUG: fix long double type defines.
",numpy/core/src/private/npy_fpmath.h
53e7c8aeb8cb250cc13e337ad9e47f16794d77f0,"BUG: fix NPY_DARWIN definition.
",numpy/core/include/numpy/npy_os.h
757a850ee1fef54eda2ebf66c263aad678d46c79,"ENH: put fpmath into private header.
",numpy/core/{include/numpy
3b7da02628d2d7270095b02ebcc34714324fd3d3,"ENH: move npy_config to a newly created private header directory.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/{
1192cf9f3d782909c820708346d26e4ffb0b2549,"BUG: float.h inclusion was lost somewhere.
",numpy/core/src/npymath/npy_math_common.h
a15f842f5df9f185f74494282f97389f74943474,"ENH: harcode long double representation defines for mac os x.

Because one gcc pass generate multiple-targets when building universal
binaries, it is hard to check any arch-specifics at compile time on Mac
OS X.
",numpy/core/include/numpy/npy_fpmath.h,numpy/core/include/numpy/npy_os.h
19287ca4b6606f7112d4cd6a2d67ac46292f9158,"ENH: put all mandatory headers for npymath in one common header.
",numpy/core/src/npymath/ieee754.c,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/npymath/npy_math_common.h,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
ba4fd564280dfe2263c6da554f5af2ef304df37b,"docs: document r7697 in release notes
",doc/release/1.4.0-notes.rst
0ff968e53840483d0831e8c1d48d61abb6a34373,"Fix invariant broken in r7697 -- *axis should be valid after PyArray_CheckAxis
",numpy/core/src/multiarray/ctors.c
faea0c8820fc773a100a4875afb42fe8f1944b3d,"Allow only axis=0 and axis=None for 0-d arrays, and disallow axis>MAX_DIMS (addresses #1286)

These changes should catch errors earlier by raising exceptions, instead
of resulting to unexpected behavior.
",numpy/core/src/multiarray/ctors.c,numpy/core/tests/test_multiarray.py
ca35f530266c73ed32b7d7e35720151c49426554,"docs : renamed basic.io.rst and basic.io.genfromtxt to basics.io and basics.io.genfromtxt
io.genfromtxt : update the doc
",doc/source/user/{basic.io.genfromtxt.rst,doc/source/user/{basic.io.rst,doc/source/user/basics.rst,numpy/lib/io.py
7e853ef0b210f8297a15a03f257ff268a78c5c1a,"BUG: do not include complex.h in public headers - this cannot work with C++, where complex.h refers to the old, deprecated header before #include <complex> was the recommended way.
",numpy/core/include/numpy/npy_common.h,numpy/core/src/npymath/npy_math_private.h
1dba64cb3f7102bffc43c06cc4822ec8f8484bc1,"linalg: support '0-norm' (scipy ticket #1037)
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
9ea7dc1cfe1a75686f1c2a2724b91a69df256be0,"BUG: do not run long double check for darwin platform (universal build breaks it).
",numpy/core/SConscript
b3b081b903afddd5f7cc785114d23560b5031c5b,"ENH: add long double representation detection to numscons build.
",numpy/core/SConscript,numpy/core/scons_support.py
5da4c5e945d860bc39be6d90ecd144f740ca3a56,"ENH: add a check to get long double representation in distutils build.
",numpy/core/setup.py,numpy/core/setup_common.py
a5ebfbbea01dafe360578c5c22da9a84c8f1319e,"BUG Fix ticket #1285. Problem located by cgranade.
",numpy/f2py/cfuncs.py
f40c4beafc7899e6bffca057b77d44f7a10ff791,"BUG: typo when defining internal nextafterf.
",numpy/core/src/npymath/ieee754.c
d9b1742ee2d6b8939e93d6f602fa2a1287d00070,"BUG: add missing macros mandatory for internal nextafter implementation.
",numpy/core/src/npymath/npy_math_private.h
c8bc37463e7cc02bd7031d6df59292dc2edff62a,"BUG: handle platform without complex support in numscons build.
",numpy/core/SConscript
d98893274d821187d2a5a6b6bed44b9a8bd4be23,"
",TEST_COMMIT
58493869a8307e62c6d828698bf5b59654158025,"BUG+ENH: Change how unaligned pointers to something that a) works on ARM and b) should be faster than memcpy on every platform.
",numpy/core/include/numpy/npy_cpu.h
379ad8a692701a35e62495f5ddea798f7da7c445,"BUG: real/imag inline def should be static inline.
",numpy/core/include/numpy/npy_math.h
e1e783725dd45b16d5bffdcf9bbe226716de9f54,"BUG: forgot to remove npy_creal/cimag definition in npymath lib, redundant with new inline versions.
",numpy/core/src/npymath/npy_math_complex.c.src
c1a3e6084f1bd96caf6b2599412e73f8e9ed119f,"BUG: fix typo in numpyconfig.h.in.
",numpy/core/include/numpy/numpyconfig.h.in
6787264ab07187a47098b77ab2e236f8fc0cb45e,"ENH: optimize real/imag extraction function, by making them inline.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_complex.c.src
39d9110d1933752102d4a2a484b693fa262a73b2,"ENH: add a check for C99-compatible binary representation for numpy complex types.
",numpy/core/include/numpy/npy_common.h
c4c82f9bc623e4ccb4505f1a2789a9673ba3d8e6,"ENH: check for complex struct sizes.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py
67957e2ed9825f647076295935ab9f28d1557a8a,"BUG: disable native C99 complex support for npy complex type, it requires numpy/scipy changes first.
",numpy/core/SConscript,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/numpyconfig.h.in
15103d3408418e4ee68e67762ef3f25f1fb00d28,"Add an example for using complex npymath stuff.
",doc/source/reference/c-api.coremath.rst
5d3f5923425a77ba2fda4e51e731dd7024b7abe5,"Mention npymath reuse in release notes.
",doc/release/1.4.0-notes.rst
0dc618c68c96495c7bbff23d28d1126aeb5e3e06,"Mention C99 complex support in release notes.
",doc/release/1.4.0-notes.rst
6a665e063cd0d48a5c628ac905d45e5c30336333,"Add highlights for 1.4.0 release notes.
",doc/release/1.4.0-notes.rst
047c625db486d8cbb84b6f5a7a498119cff54b93,"Mention neighborhood iterator in release notes.
",doc/release/1.4.0-notes.rst
a0ac87205774790e0c5203dc0a95a1d6e2ebd0b8,"BUG: fix typo in setup build for npymath.
",numpy/core/setup.py
d58297d7df88045585ee2b5356aca332295f7ef8,"BUG: remove wrong unit test for clog.
",numpy/core/tests/test_umath_complex.py
8b1f7849329ff9e20b8d222e88356569aa585393,"Remove assert_almost_equal_spec.

Not necessary anymore since we fixed complex nan/inf handling in
assert_almost_equal.
",numpy/core/tests/test_umath_complex.py
142f2a643253b080a30b32c0381ca607811c8968,"Remove assert_equal_spec.

It is not needed anymore since we fixed every nan/inf/negative zero handling in
assert_equal.
",numpy/core/tests/test_umath_complex.py
df3c8112056a69b5822be063ca4460b5e3151986,"Update C99 complex mode macro definition.
",numpy/core/SConscript
5bc8f827a8c92d7658b77bb8dfe4d8b48e60420a,"Disable one cexp test which fails on most implementations.
",numpy/core/tests/test_umath_complex.py
9b8b19acfaf6144f9ba850501655758032907e9d,"Fix indentation for cexp.
",numpy/core/src/npymath/npy_math_complex.c.src
9e44de59cb6a8fd1047d4329a907f51bee14bb44,"Revert special case for numpy cpow.
",numpy/core/src/umath/funcs.inc.src
1dec6da92fa355620acfccd8e18a6fe80e06054e,"Fix tests for complex power function.
",numpy/core/tests/test_umath.py
90267385fe176612bcb6c427c427781bce7d1c94,"Remove double declarations for complex funcs.
",numpy/core/include/numpy/npy_math.h
3c6b3ec3f59c3d547f47d575b8903924e738c390,"Use npymath implementation of complex sqrt, log, exp and pow.
",numpy/core/src/umath/funcs.inc.src
4666cb6f2f3ae45e000693909d2df5da2888a5fc,"Add missing declarations for _arg functions.
",numpy/core/src/umath/loops.h
b30c49f0b41cc4226b5c069d58f35dfced09a688,"Handle special cases in our custom cexp function.
",numpy/core/src/npymath/npy_math_complex.c.src
0d6e390bfe478b0dbe4d288466dc9e19dd53d9cf,"Add configure checks for single and extended precisions complex functions.
",numpy/core/SConscript,numpy/core/setup.py
683c9ef1fd8669be353873f6d0b171b30a87d4f3,"Remove double declarations in npymath headers.
",numpy/core/include/numpy/npy_math.h
1dabeec192be129bd1f498037f8c4ba8ac438a15,"Fix typos in some complex definitions.
",numpy/core/src/npymath/npy_math_complex.c.src
f9e855dbe62eef087ce3a25e44f106f55f101922,"Mention difference between simple decorators and implementations for complex C99 functions.
",numpy/core/src/npymath/npy_math_complex.c.src
ffbc60e677b41b8b88c253ca2a530b3ae31b6c54,"Implement float and long double versions of complex functions.
",numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
532b27f25505ae52c6c551d70da58d84f56409ab,"Add prototypes for float and long double versions of complex functions.
",numpy/core/include/numpy/npy_math.h
cb6ae09d2a73d3a6aef75ad85ce7195a102bb4c3,"Fix our private replacement to clog.
",numpy/core/src/npymath/npy_math_complex.c.src
57517bf4fc0cac9774cb60f5a7b0b66ca07d0591,"MS compiler does not like funky initializer for float.
",numpy/core/src/npymath/npy_math_complex.c.src
3a417d8ff03660d1a227f855ec2941c29844af10,"Fix npy_creal/npy_cimag when no complex support is available.
",numpy/core/src/npymath/npy_math_complex.c.src
691bb30cf6884dd4403bbcdeba6ed55e8a7a4909,"Use original npy complex type instead of custom one for npymath.

Since we use complex C99 support when available, we change npy_cdouble
definition to C99 complex type if available.
",numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
f17f47572787086c8f119be91a78ab1135331b37,"Check for C99 complex types.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/setup_common.py
60c2d9866b20686fca3465eded92705b8c29e900,"Pull cpack into the npy math API, prefix it with npy_, and use it in npymath sources.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
2a40dc555c74f7929ee68416a8b92fb830ff4997,"Fix csqrt so that only npy_fabs is used, not fabs.
",numpy/core/src/npymath/npy_math_complex.c.src
893629386fecf7b4c6f6ba98ea31209908ac02b1,"Fix csqrt so that it does not depend on complex support.
",numpy/core/src/npymath/npy_math_complex.c.src
ba29438443a804e7532f952bfef4492b89557c30,"Implement ccos, csin, clog, carg, cpow complex functions.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_complex.c.src
8b0628179915dfed8dbc8e18b4215df9016d0c72,"Implement stubs for clog, ccos, csin and cpow.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_complex.c.src
2c5a4c93e449e85ca29f1df86f71282283f87c4e,"Implement csqrt.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_complex.c.src
f0521e39691e4a6afb3786c555f56c7dd4bce4f3,"Add cexp function.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npymath/npy_math_complex.c.src
0d73a33cb64a861c7378a4b9dfa6ea312ba87c76,"Fix typo.
",numpy/core/src/npymath/npy_math_complex.c.src
999e67600154f0aac2dd131d005a089624d199af,"Do not use union initializaer: another thing that MS compiler cannot handle.
",numpy/core/src/npymath/npy_math_complex.c.src
6a9f90a18e7f220fd236c9a5af26fa60bbde9e55,"npymath now implements cabs, creal and cimag.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
8f526de0ba81f15b386ee01c3b311d69d3aaffd4,"Define C99-compatible complex type + check for a first set of very basic complex functions.
",numpy/core/SConscript,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py
7437c9ce13be2b204584946f150aa3a8b51a1c1a,"Start implementing complex support.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup.py,numpy/core/src/npymath/npy_math_complex.c.src,numpy/core/src/npymath/npy_math_private.h
a04e1ed7373071ad4550720875af8cd1006bb399,"Start complex support for npymath.

Detect if C99 complex support is available, and check for a few basic
complex functions availability.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/setup_common.py
74bca4fa9262d365eda8f59932c0d5bc86582f4b,"Fix assert_array_equal_spec for complex types.
",numpy/core/tests/test_umath_complex.py
6858cb96530560054a7b9f9b4376ee995be337b3,"Fix bogus unit tests for csqrt.
",numpy/core/tests/test_umath_complex.py
b8c51d63eebec920164e54b7ea3b4a6d3cd1139b,"Add tests for cexp.
",numpy/core/tests/test_umath_complex.py
ada6b6321174169fbfa16490491e0218545947de,"Fix cabs tests.
",numpy/core/tests/test_umath_complex.py
b56f7bbb543e75ad08321e28fe495fb8348b16aa,"Simplify and fix assert_equal_spec to handle signed 0 and complex numbers correctly.
",numpy/core/tests/test_umath_complex.py
4ad98c9779aec020b8ca848c891ecf5576ed9721,"Fix signed zero handling in exact tests + handle carg value as a real, not a complex return value.
",numpy/core/tests/test_umath_complex.py
897175751927b3c69e0fe7faf247e0eb5fad20d0,"Add unit tests for special values for csqrt.
",numpy/core/tests/test_umath_complex.py
b8c61d4c00f03a3aa69ec66a7be6f23105119370,"Reformat unit tests for special values of cabs.
",numpy/core/tests/test_umath_complex.py
656a4d071e3146fd84f964c4d0375a67a48ad4aa,"Add test for ufunc _arg - will be used to test npymath carg implementation.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath_complex.py
f5720f6d8b829c68a7d6514b2eaeae3d25bdc766,"Use hypot instead of direct evaluation of the absolute value of a complex number.
",numpy/core/src/umath/loops.c.src
75d0322ad6aec180e9eb221f12ee71a81d85ed94,"Fix cabs tests.
",numpy/core/tests/test_umath_complex.py
d6015f7307c6d090148a82cadc84e72445defb38,"Fix _spec asserts when only one arg is nan and not the other.
",numpy/core/tests/test_umath_complex.py
42e7d63182cdff19b07d03e194137f890e59b1b1,"Move complex umath tests in separate file.
",numpy/core/tests/test_umath.py,numpy/core/tests/test_umath_complex.py
c60575349b5810b393eb3092a591ac429325074c,"Fix some unit tests for special values handling of clog.
",numpy/core/tests/test_umath.py
6713e50ff2338600dae6b73cb5c51dc61c302928,"Start adding test for C99 compliance of our complex functions.
",numpy/core/tests/test_umath.py
da7e19c00710958b68b9272cc510b6a9bac36923,"DOC: mention new spacing-based testing functions in the release notes.
",doc/release/1.4.0-notes.rst
92d3b835091de3ec14b3b0bf4217d8df35f5fbd3,"DOC: mention nextafter ufunc in the release notes and reference.
",doc/release/1.4.0-notes.rst,doc/source/reference/ufuncs.rst
c0479b232319d70696387a6444900b0c03030926,"Apply fix for sun compilation from beffa. Closes ticket #1248.
",numpy/distutils/fcompiler/sun.py
784bd5f326a0853780065711e1cf91e549287c63,"
",TEST_COMMIT
7fadc59cfe6f1e05c39020c52e607986ea1d2473,"
",TEST_COMMIT
c4fd08e566fc86b020a26170c9d9de5e7a8dad98,"
",TEST_COMMIT
491681a7d1ec219c17cadbc5e71e5fd54bb24514,"BUG: fix compilation of nextafter on MS platforms.
",numpy/core/src/npymath/ieee754.c
0ccabc7abbd446ea5ce0b301db2e33392f734fe6,"ENH: add a unit test for spacing/nextafter equivalence.

Spacing and nextafter use totally different implementation, so testing
for their equivalence does not hurt.
",numpy/core/tests/test_umath.py
a30e0201fb5bd194d021dafecc8f4353ff8f04d0,"BUG: wrong exception raised in spacing for incompatible dtype.
",numpy/testing/utils.py
ef0441c420b6d9118791a137392d46f38e5c2122,"BUG: one test for nextafter was wrong.
",numpy/core/tests/test_umath.py
43e59f1d9ba7d740200d95f59ffb80cd28c1c12d,"STY: remove whitespace.
",numpy/testing/utils.py
b325f7350facb82a1fc72b4a52e61d90a0101962,"ENH: add assert_array_max_ulp comparison function.

This new comparison raises an error if the number of representable
numbers between two arrays exceeds a tolerance.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
fd1990d6425345f9b3827d91d9020e1047968a12,"ENH: add robust comparison function for floating numbers.

assert_array_almost_equal_nulp use spacing so that a single tolerance
number can be used independently on the amplitude of the floating point
number.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0c539e1f2526d09ffefc56ccead470dbbd56cd24,"ENH: add numpy implementation of F90 spacing function.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
b89aaa473462dae66fc3eaaa9712702d30e86dcf,"ENH: add a function to compute the signed-magnitude interpretation of the binary repr of a float.
",numpy/testing/utils.py
19b5dea4e52c96c08ee364295137f69af15c724e,"ENH: add a couple of tests for nextafter.
",numpy/core/tests/test_umath.py
7a96db52876e3612db75f830ef7e96a34f9960a0,"ENH: add a nextafter ufunc.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
ac72fa17adc627ca697d013c2f83a346bba62028,"ENH: implement single and double precision nextafter* for npymath.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/npymath/ieee754.c
789ec8e18116c9f4fc8998c6ec0487ab275523c6,"ENH: detect IEC 559 nextafter function.
",numpy/core/setup_common.py
c2485bd8831192f045097dc5eeb44b80bfaacf0e,"STY: fix indentation.
",numpy/core/src/npymath/ieee754.c
e1763aa87cfc69505f9d777dc6b572f0f6c3bfde,"REF: put low-leve IEEE-754 routines in separate file.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/npymath/ieee754.c,numpy/core/src/npymath/npy_math.c.src
83ee1c15620295bd71a0bc78ed479163a54513ba,"STY: Simplify the logic for datetime/timedelta typedef.
",numpy/core/include/numpy/npy_common.h
8e5018c863a45a243973e98a42675ac32f008f7b,"ENH: fix spelling error in array_api_gen_bld COMSTR builder.
",numpy/core/scons_support.py
1a8afce8a2b2a6e563a159272ab51c5ff99ffab2,"Fix #1276 - comparing string and unicode arrays broken
",numpy/core/src/multiarray/arrayobject.c,numpy/core/tests/test_defchararray.py
60c8efbd62b2768165cd95c0c32bc1875e385145,"Add clearing of the error for the case when second part of compound conditional produces NULL return
",numpy/core/src/multiarray/descriptor.c
f6762298b72b29a3d1fd97854f6e925e2f98e56c,"Add first cut of C code coverage tool
",tools/c_coverage/HOWTO_C_COVERAGE.txt,tools/c_coverage/c_coverage_collect.sh,tools/c_coverage/c_coverage_report.py
5dc5c73739995adfa7b38fc1abbf8241874a6145,"BUG: pkg_paths was wrongly set when using --package-list for numscons build.
",numpy/distutils/command/scons.py
05324d0e986a1012a342e2650b3883e13a285029,"Fix types in docstrings
",numpy/core/defchararray.py
8dc57cd463d7ed28b1ec7bdd87a6e2f930f54dda,"Add backward compatible `deprecate_with_doc`.
",numpy/lib/utils.py
11de890bdf5d91179cd9f75062e27a89a5f9fffb,"Introduced intent(align4|align8|align16) attributes. Fixes scipy ticket 794 after using intent(align8) in the corresponding scipy pyf files.
",numpy/f2py/auxfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
944524fa0ba6a9a174e1e3af99be61f35c8b4503,"Add tests for ``deprecate``.
",numpy/lib/tests/test_utils.py
b3f3088a37e737dd408f640be53c2fed8a2dedab,"Add ``deprecate`` function that doubles as a decorator.
",numpy/lib/utils.py
82c93bbb67be0c30e34b959f2bb89ca5c36ec4e5,"Add gitignore for those using git-svn.
",.gitignore
55d07fbe7b06ebe34511d53c4cabab8c9476d0ff,"Merge deprecate_with_doc into deprecate(message=""..."").
",numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/utils.py,numpy/ma/extras.py
bbab7a4c2d7b7f5a12c2326ffeb99acd87bbb52e,"Fix spelling of backticks.
",doc/HOWTO_DOCUMENT.txt
8dc4d76a02a2721faa918eaeb563dbd275808b09,"Add a few examples for parameter types in HOWTO_DOCUMENT.
",doc/HOWTO_DOCUMENT.txt
468263e7903c9d7eea8a7b0fe7b6a6b8767334e6,"Fix lookfor on python 2.6. Add a test for it. Make it import submodules more aggressively.
",numpy/lib/tests/test_utils.py,numpy/lib/utils.py
7e61011fbf714c5e933e42bda94f6661cca00a63,"Remove unnecessary variables from doc.constants (from Ralf Gommers).
",numpy/doc/constants.py
4c0338784d5f3d72b73729bdfd93350571caa156,"Replace \r by \n.
",numpy/distutils/mingw/gfortran_vs2003_hack.c
ebaaca420b826c78865b2185dba867d80f3cb22f,"numpy.scipy.org: add upload target to Makefile
",doc/numpy.scipy.org/Makefile
cdd23ab0073fb899db34d4d66f3e4b184a82c466,"Replace \r by \n.
",numpy/core/tests/test_errstate.py,numpy/f2py/doc/python9.tex,numpy/f2py/doc/win32_notes.txt
21447667e0b426c6092eba1c94aaea62114b7b5d,"docs: update HOWTO_MERGE_WIKI_DOCS.txt
",doc/HOWTO_MERGE_WIKI_DOCS.txt
cd96e95270b15ae406a94ad6a34a8070ad30cb24,"doc: add HOWTO_MERGE_WIKI_DOCS.txt

(Thanks to Ralf Gommers.)
",doc/HOWTO_MERGE_WIKI_DOCS.txt
bb129ca216f3b37b37f9e908ced5943f09994c02,"* Added docs on i/o with focus on genfromtxt
",doc/source/user/basic.io.genfromtxt.rst,doc/source/user/basic.io.rst,doc/source/user/basics.rst
c660ae4b3f7a4867c3a8081095f62f88b251b751,"Complete fix to ticket #1229.
",numpy/core/src/multiarray/convert_datatype.c
549d7bda0ba075538e803e836f66e9cfd6d85a53,"Hard tab removal.
Trailing whitespace removal.
Some coding style cleanups.
",numpy/fft/SConscript,numpy/fft/fftpack_litemodule.c,numpy/lib/tests/test__iotools.py,numpy/random/mtrand/distributions.c,numpy/random/mtrand/initarray.c,numpy/random/mtrand/numpy.pxi,numpy/random/mtrand/randomkit.c,numpy/random/mtrand/randomkit.h
4c297e11801dd9a27a35179b8ae2058a6d1c948e,"Fix bug in regression test for #1259
",numpy/core/tests/test_regression.py
1a63d2bbc2e5103fe3db1449ae8aaee29554dfd2,"Hard tab removal.
",numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/include/numpy/ufuncobject.h,numpy/core/include/numpy/utils.h
05faebf1e8f7a0598cb06238650e3f9effa19e85,"Hard tab removal:  _dotblas.c
",numpy/core/blasdot/_dotblas.c
10bc9040401e0c765833f5c01d55c97c2c9ecd0b,"Apply patch from mdroe to fix ticket #1267.
Reformat multiline comments in patch to conform to coding style.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/shape.c,numpy/core/tests/test_regression.py
cce7337fd92c8c19ab83364d35075da4908be0f8,"Cleanup scalarmathmodule.c.src.
Remove hard tabs.
",numpy/core/src/scalarmathmodule.c.src
8ba11a42c2f74d7ab0396e200a1dccf6f79a0ff7,"Cleanup ufunc_object.c.
Remove trailing whitespace.
Remove hard tabs.
",numpy/core/src/umath/ufunc_object.c
84589def577652dd41b09f9e10afbcc3975d227d,"Cleanup loops.h.src.
Remove trailing whitespace.
Remove hard tabs.
",numpy/core/src/umath/loops.h.src
d0528b0639ab5001ed4f42d4aa7cbb507f4ca1d8,"Cleanup py3k_notes.txt.
Remove hard tabs.
",numpy/core/src/py3k_notes.txt
8e4c3b572ddf18e40f3071fa1ef404009d8f85c6,"Cleanup npy_math_private.h
Remove hard tabs.
",numpy/core/src/npymath/npy_math_private.h
ab509f82cb1bc1a4f9f1c9860a132c8e0b968cf9,"Cleanup npy_math.c.src.
Remove trailing whitespace.
Remove hard tabs.
",numpy/core/src/npymath/npy_math.c.src
da19ab18b609f7842a00a6a280a26561ae387227,"Cleanup usertypes.c.
Remove hard tabs.
",numpy/core/src/multiarray/usertypes.c
a8716ca31b7e6acefd08200eda646481d803afbd,"Cleanup testcalcs.py.
Remove hard tabs.
",numpy/core/src/multiarray/testcalcs.py
0cc8ffc3bc96279c77f3f535217d76b7a6bf7735,"Cleanup shape.c.
Remove hard tabs.
",numpy/core/src/multiarray/shape.c
1284cdb6c8518b810f402bd67989431c03a3d96e,"Cleanup scalartypes.c.src.
Remove hard tabs.
",numpy/core/src/multiarray/scalartypes.c.src
46ddf4556b254691850a246581a9b9f8fb7c28af,"Cleanup scalarapi.c.
Remove hard tabs.
",numpy/core/src/multiarray/scalarapi.c
d29100e37e7f6f0f555d4ffa2c4f86398fd4a5bb,"Cleanup refcount.c.
Remove hard tabs.
",numpy/core/src/multiarray/refcount.c
b4b7ec312b2603957649a0692cd8d0b6c7311104,"Cleanup numpyos.c.
Remove hard tabs.
",numpy/core/src/multiarray/numpyos.c
35118e7df1c141857319dcdcb8dfbb911b697e91,"Cleanup multiarray_tests.c.src.
Remove hard tabs.
",numpy/core/src/multiarray/multiarray_tests.c.src
63fc1d1d9e1da49b7d7b0f8c50dcf8028e3468de,"Cleanup methods.c.
Remove hard tabs.
",numpy/core/src/multiarray/methods.c
93cdc76e7af217c7e72be99dad59dd08a87922f4,"Cleanup mapping.c.
Remove hard tabs.
",numpy/core/src/multiarray/mapping.c
0f723817d274e7b21b6d908382af59ae256102c3,"Cleanup item_selection.c
Remove hard tabs.
",numpy/core/src/multiarray/item_selection.c
261c9e4e976f446641cbccd7bcae93e1ca307104,"Cleanup getset.c
Remove hard tabs.
",numpy/core/src/multiarray/getset.c
3f1ca59e74541c1bf13232f354cf7609d82b689a,"Cleanup convert_datatype.c
Remove hard tabs.
",numpy/core/src/multiarray/convert_datatype.c
51dbc63927c562e8536ac0c324b4de52815a9d10,"Cleanup _datetime.h
Remove trailing whitespace.
Remove hard tabs.
",numpy/core/src/multiarray/_datetime.h
58bee13a3c0d34b225a341edd6082f064a11fd3a,"Cleanup convert.c
Remove hard tabs.
",numpy/core/src/multiarray/convert.c
baf04a5cedbf5caceed298e23032ba6d5bdeac03,"Cleanup ctors.c
Remove hard tabs.
",numpy/core/src/multiarray/ctors.c
8cd320bb52dc11ec5967cc1f3cc060796e74dee9,"Cleanup iterators.c
Remove hard tabs.
Remove trailing whitespace.
",numpy/core/src/multiarray/iterators.c
a0b848072c394d02af9dc87c21893556f6f40e16,"Cleanup descriptor.c
Remove trailing whitespace.
Remove hard tabs.
",numpy/core/src/multiarray/descriptor.c
ffbb90ec7b0e39ca7e8f29ee9bec24c801f7a003,"Cleanup calculation.h
Remove hard tab.
",numpy/core/src/multiarray/calculation.h
74fed7b80e31cc8ab283643e2ca75087d182720f,"Cleanup calculation.c
Remove hard tabs.
",numpy/core/src/multiarray/calculation.c
e379b2bda350eb3924e4e2f19b837b4f3790055a,"Cleanup arrayobject.c
Remove trailing whitespace.
Remove hard tab.
",numpy/core/src/multiarray/arrayobject.c
ac0f1e1611fdd8cb566142b5bc5e3c0bcde8aab1,"Cleanup datetime.c
Remove trailing whitespace.
Remove hard tabs.
Reformat multiline comments.
A few coding style fixes.
",numpy/core/src/multiarray/datetime.c
e88d4b1b866f4b64dd4962bf23c4bd3636208d5f,"* io.genfromtxt : make sure that `names` is a list and not a tuple
",numpy/lib/io.py
d7e2d9ad427fe276d1d4f22d86a02433df99c99e,"Remove some vestigial print statements
",numpy/core/tests/test_defchararray.py
49cd4ec725057f7f91192bc5814eb2862a2b15dc,"#1256: Forgot rest of patch to support Unicode elements in masked arrays.
",numpy/ma/core.py
ea99d11715fcef22e4bd9f3cb3b1624b0f3c2835,"* io.genfromtxt
  - fixed an issue when an explicit dtype has the right size, but the names don't
",numpy/lib/io.py,numpy/lib/tests/test_io.py
e8f48653c396a1ae2e838cc1f463d5c32cf1d6fa,"* io.genfromtxt
  - `usecols` can now be a comma-separated string
  - make sure that an explicit name list shorter than an explicit dtype is properly expanded
",numpy/lib/io.py,numpy/lib/tests/test_io.py
2251993805670563e641cfcc420de302930ba190,"Add regression test for #1259
",numpy/core/tests/test_regression.py
f6134e3815e272e4aa20534cbf06dcb88528f01a,"Remove obsolete commented-out code
",numpy/core/tests/test_print.py
b9a9988d2915359be65cee7493e878e9762133ec,"Use knownfailure instead of skipif for a failing test
",numpy/core/tests/test_regression.py
9f312f2f280b1e21120c271b97db848e295cea0d,"Skip test that is failing due to alignment issues on Solaris.
",numpy/core/tests/test_regression.py
4b6137af35397b349c1eb651d044e0dd245901cc,"* _iotools.StringConverter
  - prevents a `default` of 0 to be overwritten during initialization
  - allows the `missing_values` to be a comma-separated string
* io.genfromtxt
  - `usecols` can now be a single integer
  - for `usecols` and `names` to list (for compatibility w/ Python 2.5)
  - negative values in `usecols` are properly transformed to positive integers
  - fixed `usecols` with named columns
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
bbe934c2cf3fb3faf7e6ff798b7518f9637917a1,"Fix #1256: repr of masked array crashes with Unicode elements
",numpy/ma/core.py,numpy/ma/tests/test_regression.py
29f9857bc82e3bc2a44afe4b8267df492d6bd7f8,"Fix #1198: Copying objects where the stride between them is not a multiple of sizeof(PyObject*) fails.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_regression.py
1857cf27034c639a27044308c39211a811678054,"Fix coercion of unicode object to chararray
",numpy/core/defchararray.py
d12379c8934263554a5442c48f33e673710ef0e4,"Remove 'format' altogether, since I don't think I'll be implementing it any time soon.
",numpy/core/defchararray.py
7b859337c7f18ca5389433224e6a3074c7589ef6,"Fix Solaris build.
",numpy/core/src/multiarray/multiarraymodule.c
374721f4dcebd1d01677dc33d9185c7ec60b7ecb,"Fix oops in last commit.  Committed some experimental things I shouldn't have.  Sorry.
",numpy/core/defchararray.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_defchararray.py
fbbf05cfefe98fd284c08c2f3a78c7cf5503821a,"Fix Unicode object -> chararray conversion on narrow Python builds
",numpy/core/defchararray.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/convert_datatype.c,numpy/core/tests/test_defchararray.py
c4db9cf34c643bd422060de6b636f53a57557c4d,"Update defchararray.__all__ so that the documentation editor will pick up its docstrings.
",numpy/core/__init__.py,numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
64ac086496fb1268aaecabb71e25f2da63288b5b,"DOC: mention speed improvement at import time in release notes.
",doc/release/1.4.0-notes.rst
4fb4c64cae2ce1ba16082d918e94e845fa2c87f3,"DOC: add docstrings to compat and compat._inspect.
",numpy/compat/__init__.py,numpy/compat/_inspect.py
daf38f394fabdc9cecc8f2aadb3777e546679430,"ENH: move inspect copy into newly created compat module.
",numpy/__init__.py,numpy/compat/__init__.py,numpy/{lib/inspect.py,numpy/compat/setup.py,numpy/compat/setupscons.py,numpy/ma/core.py,numpy/setup.py,numpy/setupscons.py
7b481cbd0d73630359c4739b0bb2c13a62509e66,"ENH: use our own inspect instead of upstream inspect to speed up numpy import times.
",numpy/ma/core.py
32b5b409ebb252a65e6d182f0db49bde68beae80,"ENH: do not use string module.
",numpy/lib/inspect.py
c8a87fcd0b27ffdd557014c877aeb7b8f6797691,"ENH: remove things we do not need in inspect.
",numpy/lib/inspect.py
a0ae03a54e4f0e7c96aa00040b95629623fd373d,"ENH: add a toy test in inspect.
",numpy/lib/inspect.py
f7cdebb32623254cd7e223778fa734677ec0d27a,"ENH: add a copy of inspect (from 2.4.4).
",numpy/lib/inspect.py
656acfda1bd89ad45bd1db384b52b4adb6769c40,"BUG: non ascii character in docstring.
",numpy/core/defchararray.py
99d0d70ccfea19d04a25b7484af9506f28303f7e,"Minor docstring correction.
",numpy/core/defchararray.py
7deb4d5db4282e1e1c860dda268a21c6979e9725,"Many improvements to chararray.  Fixes Trac bugs 1199, 856, 855, 1231, 1235, 1240, 1241.  docstrings, full unit-test coverage, C-based vectorized string operations.
",doc/source/reference/arrays.classes.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.char.rst,doc/source/reference/routines.rst,numpy/core/defchararray.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_regression.py
66c62a8aeed8c963e2ef108685d5681e1e445f3d,"
",README.txt
8048db15c4b7cf73454ba98fcdfc89e438cf8067,"* io.genfromtxt
  - add `skip_footer` to remove some last lines
",numpy/lib/io.py,numpy/lib/tests/test_io.py
80851e34d2955a331cecb9f50d2287d33618dd3e,"* _iotools.StringConverter
  - prevents an explicit default to be overwritten during upgrade
* io.genfromtxt
  - deprecate `skiprows` for `skip_header`
  - deprecate `missing` for `missing_values`
  - `missing_values` can now be a sequence
  - add support for `filling_values`
* fixed ticket #1257
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
295e24af415bb49f12a632f0e27fb9e2a1099ea2,"doc.constants: work around some Sphinx formatting issues
",numpy/doc/constants.py
72c9eea9e58f9b57f97a32a3ab9e3ca9b25dd736,"Don't include assert_valid_refcount in numpy.testing.*

It's a private function used only in two internal regression tests.
",numpy/core/tests/test_regression.py,numpy/lib/tests/test_regression.py,numpy/testing/utils.py
8cad335f8b97100df988dbb6fd5d06072c667515,"* ma.masked_equal : force the `fill_value` of the output to `value` (ticket #1253)

* lib._iotools:
  - NameValidator : add the `nbfields` optional argument to validate
  - add easy_dtype

* lib.io.genfromtxt : 
  - add the `autostrip` optional argument (ticket #1238)
  - use `invalid_raise=True` as default
  - use the easy_dtype mechanism (ticket #1252)
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
e54df63621db89eddbadc7bf0f36798ee1f79e0a,"ENH: removed doubled code.
",numpy/core/code_generators/genapi.py
3d3f47f305532a0f4ee6655810dea09ac3e05c82,"ENH: merge genapi2 and genapi.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/genapi2.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py
c9505e977de888295e1a912aeb152c95b4562736,"ENH: remove obsolete code in genapi.
",numpy/core/code_generators/genapi.py
ed67379b0978aadcba98ad5b4ab2deef016890bf,"ENH: remove *_order.txt files.
",numpy/core/code_generators/numpy_api_order.txt,numpy/core/code_generators/ufunc_api_order.txt
9afcc82c525035459dd29fcdef970552673ec2a2,"ENH: do not use *_order.txt inputs anymore.

numscons build now uses the api dicts as Python Value nodes, and
distutils build uses the dict directly as well.

In the case of numscons, this means that changes in the API will now
automatically be detected and handled.
",numpy/core/SConscript,numpy/core/code_generators/generate_numpy_api.py,numpy/core/scons_support.py,numpy/core/setup.py
f758735fdd663b02968febf38e16beb20a9090a0,"ENH: add variables which contain full multiarray/ufunc apis.
",numpy/core/code_generators/numpy_api.py
af9836c54608b441e231bfe73c14b31427b6fe81,"DOC: document at which version we changed the way to checksum the API.
",numpy/core/code_generators/cversions.txt
57030147c3faa6faffb67de01b255279ede185f0,"ENH: use api dict instead of *order.txt files to check for API changes.
",numpy/core/code_generators/cversions.py,numpy/core/code_generators/genapi.py,numpy/core/setup_common.py
726fb0abae756d03d023e80d35e2c237fe4160af,"ENH: add a list of all api dicts which define the C API.

Wherever we need to check for API changes, we will just need to
introspect this variable.
",numpy/core/code_generators/numpy_api.py
670e8035b80dae90df486bb344f12b2697af1b46,"DOC: document how to handle numpy_api dicts.
",numpy/core/code_generators/numpy_api.py
6ec24a68d20f092fe6ec67b66f3078c43b8b873b,"ENH: use api dict for ufunc as well.
",numpy/core/code_generators/generate_ufunc_api.py
c009920808eb76f3c65847cee251d2e258363b08,"BUG: fix ufunc API indexes.
",numpy/core/code_generators/numpy_api.py
a172a1703436e096426efbfadbd6d3d97b67d159,"ENH: make the API array name customizable so that it can be reused for other apis (e.g. ufunc).
",numpy/core/code_generators/genapi2.py,numpy/core/code_generators/generate_numpy_api.py
2aa5d247f876ee8d69f53303a0a6147f10fb66b1,"ENH: move *Api classes into genapi2, as we will use them for ufunc.
",numpy/core/code_generators/genapi2.py,numpy/core/code_generators/generate_numpy_api.py
77966f7aa170f0a6eb603f5dae7111429f015262,"ENH: check lack of hole in check_api_dict
",numpy/core/code_generators/genapi2.py
7630f51a972641b79a88507e814800237ef85699,"ENH: remove unused and obsolete code.
",numpy/core/code_generators/generate_numpy_api.py
8c229d53d0de827de4e15e4ab2c432bb26b19407,"ENH: __multiarray_api.h is now entirely generated from api dicts.
",numpy/core/code_generators/generate_numpy_api.py
1e81b5ab4729bb353e918ba1f772bae8536db104,"BUG: fix datetime compilation in separate compilation mode.
",numpy/core/src/multiarray/datetime.c
66d74b302e845c3a78aeb82f4f6ee2976138d32d,"ENH: __multiarray_api.c is now entirely generated from api dicts.
",numpy/core/code_generators/generate_numpy_api.py
4fbc75a9faa5834dc605a51d58abc8627877dd80,"ENH: extension_list is now fully generated from api dicts.
",numpy/core/code_generators/generate_numpy_api.py
d27fe422c70e4c3b7fec250cfaa75febf3b859db,"ENH: create a name -> *Api item dict.

This is the first step toward the actual cleaning of the code
generation: we can now gradually generate __multiarray_api* file
 exclusively from the api dict in numpy_api.
",numpy/core/code_generators/generate_numpy_api.py
dc0960522dd532ef9916111ff4cc178c0a4bd489,"ENH: Add a FunctionApi class to handle functions when generating multiarray api boilerplate.
",numpy/core/code_generators/generate_numpy_api.py
0fbe4ede29cc438ebaf125bc5744681ecbead9aa,"ENH: handle bool values variable as other items of the API.
",numpy/core/code_generators/generate_numpy_api.py
a539040d446aedc3866116b864284c7e47550cf4,"ENH: rename classes to output strings to avoid confusion with similarly name classes.
",numpy/core/code_generators/generate_numpy_api.py
75e95e8c4cf078f8bd743f0e5d46333344069a34,"ENH: use our own generate_api_func - we will simplify it later.
",numpy/core/code_generators/generate_numpy_api.py
3ca2ff722c5c2825d88357036a1b284d393701c0,"ENH: rename decl_str to a more meaningful name.
",numpy/core/code_generators/generate_numpy_api.py
e8d2567d5e54575191e818579dd0353dc3eeba28,"ENH: the whole PyArray_API is now automatically generated for __multiarray_api.c.
",numpy/core/code_generators/generate_numpy_api.py
04434b143d6ec576711a40d31ae23d212d551715,"We do not use multiarray_api_order.txt anymore, only api dicts.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/genapi2.py,numpy/core/code_generators/generate_numpy_api.py
13988663fee467d47f0074bdae45d982ab744bd9,"ENH: change indexes to some datetime funcs to stay compatible with trunk.
",numpy/core/code_generators/numpy_api.py
377105b1fe35c8ca9c2e01ef9d47a18593578ac0,"ENH: generate funcs code from ordered dict as well.
",numpy/core/code_generators/generate_numpy_api.py
ebed8f8eb02d855da5ae402d299bd7a5f33faeea,"ENH: generate new types (timedelta) from dict as well.

We temporatily disable a few timedelta functions declarations, because
I forgot them before as well: this enables easier comparison for the
time being.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api.py
9d048961def588712d3040956a21f4363521e07c,"ENH: use api dict to generate old types code.
",numpy/core/code_generators/generate_numpy_api.py
f1ec82d5d62b967798a6fd66a856c97671e9fc1c,"ENH: automatically generate global var and bool type declaration.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api.py
cbeee2f8b17316291aa052bf7d41dfdb674f000c,"ENH: add ufunc api dict.
",numpy/core/code_generators/numpy_api.py
efd4c9d3eb3577146ad53c42b6a3bc8763642e95,"ENH: split misc_api into global var and bool_values.
",numpy/core/code_generators/numpy_api.py
52738fdb4a4882da6ac252a913e057cc984c7747,"ENH: generate first types decl from the type dict.
",numpy/core/code_generators/generate_numpy_api.py
fba5fcddfdfd8f04a6d78896259cb4ff470dc608,"ENH: first step toward generating types declaration from a dict as well.
",numpy/core/code_generators/generate_numpy_api.py
fe02ec8568f6ac8d71f21e5974e2bded5ce70567,"ENH: rename api dict for multiarray to a clearer name.

'numpy_api' is confusing: we have multiarray and ufunc APIs.
",numpy/core/code_generators/numpy_api.py
92b46e42fda591ba5909a531c7cb38bc320a7c4e,"ENH: we now grab PyArray_GetNDArrayCVersion as the other functions.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/src/multiarray/multiarraymodule.c
7fe40147eb3b072bb3366f40b6d22d22e23efb74,"ENH: factor out the function to generate func decl.

This is a first step toward more fine control on where to generate which
function.
",numpy/core/code_generators/genapi.py
d47359f93e192f38211f9a4078023cbf61f2be64,"ENH: add a series of dictionary with hardcoded ordering for the API.
",numpy/core/code_generators/numpy_api.py
f8f43c4ffd4126a99d74ef40f855484b8741b209,"ENH: Put beginning of API declaration out of the h_template.

This is a first step toward generating the full declaration list from a
dict {function_name: index_in_the_api_pointer}.
",numpy/core/code_generators/generate_numpy_api.py
1860563e20602af60025a9ea97bfde6be27dbde9,"BUG: hack to fix ABI breakage at multiarray level.
",numpy/core/code_generators/generate_numpy_api.py
5a6985ddb0c94314e5b439cbec1a473e953e1c5c,"ENH: return the number of generated items in add_api_list, so that we can reuse it as an offset later.
",numpy/core/code_generators/genapi.py
2cd3a734070c78c27af220aa4a434a9ed69a6888,"ENH: put type declaration in separate function.
",numpy/core/code_generators/generate_numpy_api.py
06c83940878af1b3dbf0d2d14fd382764a29aa27,"ENH: separate type list into old and new list.
",numpy/core/code_generators/generate_numpy_api.py
eee844a61a5067f03f1cdf6c7ece09a72be3bfca,"Fix call to copyswap.
",numpy/core/src/multiarray/scalartypes.c.src
df4d24c89e1bfda3328cc5d47ba27ce1a4b2ca1d,"Fix scalar byteswap code to use the copyswap method from the data-type object.
",numpy/core/src/multiarray/scalartypes.c.src
b35e174c17d30b45ae9f63453ae24fa1ac4f0618,"Add comment on the simplification of IsAligned().
",numpy/core/src/multiarray/common.c
de573b400dfb4cb804d492211bfc3ca5fbe9351d,"Revert some of David's patches pushed accidentally.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py
73aacc3de71819ed304756aa6f1b58d91a207a92,"ENH: return the number of generated items in add_api_list, so that we can reuse it as an offset later.
",numpy/core/code_generators/genapi.py
0835d13320f1df23fa4cdc26983218ea93542bbf,"ENH: put type declaration in separate function.
",numpy/core/code_generators/generate_numpy_api.py
ca32c6b3e142c16c91e0701c039cb7e757a41fbf,"ENH: separate type list into old and new list.
",numpy/core/code_generators/generate_numpy_api.py
19edd80ee1a1756ba3c589a7968177bcadd7be33,"Remove special cases for PyArray_VOID and PyArray_STRING in _IsAligned [patch by Hans-Andreas Engel].
",numpy/core/src/multiarray/common.c
eda97836784bc4ae42f1c82e3bd208ba88d9bc31,"BUG: remote NPY_INLINE define from numpyconfig.h template, as we now define it 'dynamically' in ndarrayobject.h.
",numpy/core/include/numpy/numpyconfig.h.in
a14fc9c73b780e29f86a631e74c660db5abfcff8,"BUG: wrongly used int for looping instead of npy_intp in neighborhood iterator header.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h
6386708bcd6deaf3f6e5f145fb59c0d4b9af86d9,"* _iotools.StringConverter
  - use '1' instead of '0' to test the update
  - add `iterupgrade` to upgrade from an iterator
* io.genfromtxt (bug #1212)
  - use `iterupgrade` to upgrade the converters, and reprocess if there's a problem to catch the offending line 
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test_io.py
9a41e774079340e1a8887d9f2310c2458580ec6c,"ENH: configure NPY_INLINE when the header is read, not at build time.

We configured the macro NPY_INLINE (for portable inline) at numpy build
time, but this problematic when a numpy extension is built with a
different compiler than the one used to build numpy itsel (e.g. building
numpy with mingw, but building a numpy extension with MS compiler).
Instead, the macro is defined everytime npy_common.h is read.
",numpy/core/SConscript,numpy/core/include/numpy/npy_common.h,numpy/core/setup.py
31de18a3c12a748d4a929fa1d00a056e1d02b892,"* Add warnings to genfromtxt describing inconsistencies in the number of columns (bug #1212)
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test_io.py
3cebdec318dd5e188eb45bc034264c68722457b9,"Proper escaping in doc.byteswapping
",numpy/doc/byteswapping.py
addbc4bca2adab0d942d636ea639aa55f39a176b,"Move some docstrings to add_newdocs
",numpy/add_newdocs.py,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src
fb16e71b5e745d8681a3e7d6cb2e6ee98ee7b79e,"doc: enable sphinx.ext.doctest extension
",doc/source/conf.py
7e04bd52dbaeb6d4aacecc6669346491f73ff99e,"Small doc rephrase
",numpy/doc/byteswapping.py
3e1dd88095d287f059a87e1746da47c968b3d707,"ENH: add byteswapping tutorial
",doc/source/user/basics.byteswapping.rst,doc/source/user/basics.rst,numpy/doc/byteswapping.py
d9665935dddea327ab47bec40d12813f7c117c78,"Make doc build to work again
",doc/Makefile,numpy/add_newdocs.py
ba1c79f22b3730efcb8e86beca3b432d8c9ce5d6,"Final doc import cleanups. Thanks to all contributors for the preceding commits!

There are still some docstrings in the queue -- those'll be committed in
later.
",doc/source/user/c-info.beyond-basics.rst,numpy/__init__.py
7587f14117ee2995450bdc4f0d6de96150b07cf3,"Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
c6e430d844ce869ca419b8ab2fb568fa0d11f809,"Docstring update: random
",numpy/random/mtrand/mtrand.pyx
094a81e1352fb6b3a7a614fc8df23d0080cf7cb5,"Docstring update: core
",numpy/core/arrayprint.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/getlimits.py,numpy/core/machar.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py
d8f0614a886488b875e34555c590e6469e24102a,"Docstring update: ma
",numpy/ma/core.py,numpy/ma/extras.py
d1572e28dd3ebaee82d747cc20eca7e86ade52d3,"Docstring update: linalg
",numpy/linalg/linalg.py
474d013a3b38c5909a7381cfa0cc2c8203807cfa,"Docstring update: lib
",numpy/lib/_datasource.py,numpy/lib/_iotools.py,numpy/lib/arraysetops.py,numpy/lib/arrayterator.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/lib/stride_tricks.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/utils.py
f1e3392d6d8813ed146ce1675f65a880634f727b,"Docstring update: testing
",numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/utils.py
0f17bf706dd5c4b160ff4d1f15ae69ef933cfc43,"Docstring update: matrixlib
",numpy/matrixlib/defmatrix.py
94b196ffab3e8cb3f308e58b835ca709fc11e8b2,"Docstring update: numpy.doc
",numpy/doc/__init__.py,numpy/doc/broadcasting.py,numpy/doc/constants.py,numpy/doc/structured_arrays.py
bede419d707fef62166352a46fa7b6b76e1a13e9,"Docstring update: fft
",numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/fft/info.py
30d4be0af19a433f9cc1f26142d509be3a8a8de5,"Docstring update: add_newdocs.py
",numpy/add_newdocs.py
65cc08216ffcd7a330f7a44991cd46bd0f14aa51,"Docstring update: doc/source/reference
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.io.rst,doc/source/reference/ufuncs.rst
e434cd50f2483dd3a6a4517656a4d34aba9db62c,"Docstring update: doc/source/user
",doc/source/user/index.rst,doc/source/user/install.rst,doc/source/user/introduction.rst,doc/source/user/whatisnumpy.rst
1521f6689a3cc48d60a75097a7ffcf4d51f9dc47,"Docstring updates, part 1
",numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/random/mtrand/mtrand.pyx
8c7d1bc554e6b5bbb7900a2f6d976d72795bb454,"Add a tool for determining active SVN committers.
",tools/commitstats.py
5932ddd5cbd9c756b0b8ab8a4b1ea690b1bb1a7b,"Add a pkg_path option to add_sconcript.

This is necessary to handle some cases where scons scripts and packages
are not in the same directory.
",numpy/distutils/command/scons.py,numpy/distutils/misc_util.py
db419336ed441f9282f43b669998864857620b4e,"Put scons data into its own class.
",numpy/distutils/command/scons.py,numpy/distutils/misc_util.py,numpy/distutils/numpy_distribution.py
28227835142b13ee55b9ff7ca0d0ddd5606b3136,"Add regression test for ticker #1243.
",numpy/lib/tests/test_regression.py
68e62cc96b01f756ddb845d4215d3d48686d9d67,"Fix ticket #1243. Patch from gnutino.
",numpy/lib/utils.py
6db651b5106b0acf1adb4a778d308202454caa35,"Update system_info.py for new files in Lapack 3.2.1.
",numpy/distutils/system_info.py
07b03471e80e4ce083ff82f1f292942cdcf0eeb8,"Apply patch from cmattoon to change '/' to '//'. Closes ticket #1230.
",numpy/core/numerictypes.py
af37d0f81c26325abb130e4e1f9bbbde50a13768,"Apply patch from Luca Citi to Speed up some reduce ufuncs. Closes ticket #1237.
",numpy/core/src/umath/loops.c.src
9af578fae9b87fd15415dc641180cd0e4976bbef,"Fix remaining references to numpy.core.defmatrix
",doc/source/reference/maskedarray.baseclass.rst,numpy/add_newdocs.py,numpy/ma/API_CHANGES.txt,numpy/matlib.py
49a78a3dd7e6cf4b98214b975eb08ac93da521e6,"BUG: fix c++-style comment.
",numpy/core/include/numpy/ndarrayobject.h
79eaf2c1e67bd33564e7a659412e8d82ef4c8ab2,"Remove hard tabs and trailing whitespace.
Code style cleanups.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/descriptor.c
6863d007f8c0e634654a5caf7d8ec8c875886196,"Fix typo in new _is_tuple_of_integers function.
",numpy/core/src/multiarray/descriptor.c
ab5776e91262767af584bede2ee945793de5387a,"Fix bug in array descriptor conversion when third argument to record array is a tuple of array scalars.
",numpy/core/_internal.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/descriptor.c
65d6067edccb62ac5f8a01f83ac604e5392b6f1a,"Apply Luca's fixes for ticket #1229.
",numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/item_selection.c
e36fed20cf5012929c95c256d17ea8ca2d2026f4,"Only enable WIN64 warning if built with mingw.
",numpy/core/src/multiarray/multiarraymodule.c
31c7597c8618fd4d07a62f8fcf315ae01b5c0b88,"BUG: fix atan2 and hypot when built with MS tools.

MS mathlib atan2 and hypot are broken, so we disable them and use our own.
",numpy/core/npy_config.h
d48a4fa46f2c87ff96925eae142d49807a2cc1bd,"wrap config header with npy_config.h

We need to ""unconfigure"" some things on some platforms - this will be done in
npy_config.h, which should always be included instead of config.h
",numpy/core/npy_config.h,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c,numpy/core/src/npymath/npy_math.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src,numpy/core/src/umath/umathmodule.c.src
7456ec4552a656bbd3a91028209eecfa7e899747,"sphinxext: bump numpydoc version, fix build bug
",doc/sphinxext/setup.py
c6bd244a25f37d6ff95860a883e564db8a497b51,"BUG: fix list/tuple handling in test_almost_equal.

We now forward tuple/list instances to test_array_almost_equal.
",numpy/testing/utils.py
d16426e1542b105344468353caed7448177a0e02,"ENH: add bypass mode to scons build.

On windows, most C99 functions are not available, so checking for them is
wasteful. We still don't want to add platform-specific checks, but we add a
mode so that we skip the checks if requested.
",numpy/core/SConscript
576582863a390fed3d48f5a1e5fb9e0b47cadf68,"BUG: fix f2py generated code for MSVC 9.

MSVC already define min/max macros in standard headers, which causes trouble
when f2py redefines them.
",numpy/f2py/cfuncs.py
13bcd67d4dc01ddc9788fc252d1d8752c30c2ed8,"Add debug option to scons command.
",numpy/distutils/command/scons.py
68179584d3277daaef57d079f82bb5976de9d5d1,"Fix escaping backslash when parsing .ini files.

We need to escape them in variable substitution and interpolation to make it
work on windows where \ is the path separator.
",numpy/distutils/npy_pkg_config.py
aabe134c75bcbe7ba51cd0a14ff31aca489175b3,"Do not escape path separator when generating npymath.ini

The escaping is handled in numscons SubstInFile builder for scons build, and is
not needed by distutils build.
",numpy/core/SConscript
5032b52732b2e8e6d60be09646d65bf0051a3161,"Fix svn revision parsing under win32.
",setup.py
599b0f1e83494c56d01ac24d7605bc3e8da0cd6e,"Rename matrx to matrixlib.

I forgot to commit the name change suggested by Stefan.  You need to
clean build/install directory when updating to this version.
",numpy/__init__.py,numpy/lib/index_tricks.py,numpy/linalg/linalg.py,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/{matrx,numpy/setup.py,numpy/setupscons.py
957cd7931740bce0ed9ffb12b47afde6c089dadf,"Add option to import user environment into numscons.
",numpy/distutils/command/scons.py
2eae9616c5d8b67b644b52be26a1abbbf658e347,"Move masked array test out of numpy.core.
",numpy/core/tests/test_numeric.py,numpy/ma/tests/test_core.py
364f7b87708a0f31b4bf09a510e0f325615b6b3f,"All non core regressions tests moved to their respective modules.
",numpy/core/__init__.py,numpy/core/shape_base.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_shape_base.py,numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/matrx/tests/test_regression.py,numpy/oldnumeric/tests/test_regression.py,numpy/testing/utils.py
064d50496ce946cb54e0901ac10967d9e0126b20,"Move finfo into core.
",numpy/core/__init__.py,numpy/{lib,numpy/{lib,numpy/{lib,numpy/{lib,numpy/lib/__init__.py,numpy/lib/polynomial.py,numpy/lib/type_check.py
1c321def2841860d97cd335a6a34fc8abed4a548,"Move ma/matrix regressions out of numpy.core tests.
",numpy/core/tests/test_regression.py,numpy/ma/tests/test_regression.py,numpy/matrx/tests/test_regression.py
5b6db2f6e37f0630bc696c3878f13687dde54e35,"Do not use eye in numpy.core tests.
",numpy/core/tests/test_multiarray.py
0e1ce506589d35e8523f2a28e7c0d38673a18794,"Move view tests using matrix from core into matrx module.
",numpy/core/tests/test_multiarray.py,numpy/matrx/tests/test_multiarray.py
f72c2dfd7d188f1ee9d795ba66c001aa7263c319,"Move linspace and logspace into core.
",numpy/core/__init__.py,numpy/core/function_base.py,numpy/core/tests/test_function_base.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py
a0a2b2bba65baaa1ab88fef3995911c14adaf2d4,"Import issubdtype from numpy.core directly so that testing.utils does not depend on numpy.lib.
",numpy/core/numerictypes.py,numpy/testing/utils.py
fe002b2916a5928463f7c46c5c4875114228bf7f,"Move matrix class into its own module.
",numpy/__init__.py,numpy/core/__init__.py,numpy/core/tests/test_numeric.py,numpy/lib/index_tricks.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_shape_base.py,numpy/linalg/linalg.py,numpy/matrx/__init__.py,numpy/{core,numpy/matrx/setup.py,numpy/matrx/setupscons.py,numpy/{core,numpy/matrx/tests/test_numeric.py,numpy/setup.py,numpy/setupscons.py
ec7f9dcddd216019bcf15d162926c4df6355860e,"ENH: Fix some more uninitialized vars.
",numpy/fft/fftpack_litemodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/numarray/_capi.c
30a0e8e344f8a53870df423338188df22f234605,"ENH: fix a few unused/missing initialized warnings.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src
4118f141f6797dc64df7ada25f76a83975a541f8,"Put 'internally public' datetime functions in _datetime header.

We use _datetime.h to avoid clashes with python datetime.h
",numpy/core/src/multiarray/_datetime.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/datetime.c
fc22e9d653d5cb703654181431db17252ecc825c,"BUG: fix separate compilation mode with distutils.

datetime.c was not included in setup.py for multiarray in the case of
separate compilation, hence missing symbols.
",numpy/core/setup.py
eba88392c05f985b9378e7cde643f804e353cf53,"BUG: fix #1194.
",numpy/distutils/command/build_src.py
28f1a2414a8d685db1820d08ece51ab4ac3782fd,"Remove useless f2py debug print.
",numpy/f2py/setupscons.py
c2606d2e797da0a13e2e49f80137dce2baf4e565,"Use hashlib instead of md5 if available in code generator.
",numpy/core/code_generators/genapi.py
531f1f9206b815c04474023c05bd192643b77297,"BUG: fix clib install directory for scons command.
",numpy/distutils/command/scons.py
5ccae0395b4e01704004b2061564fb2fb164d74b,"Start adding library options for scons option.
",numpy/distutils/command/scons.py
a7be8bf0cf5b241d4e6810460e37e9b4612e5cf4,"Re-indent scons command options.
",numpy/distutils/command/scons.py
2f6604a638ca0c96f426a2010a0dc8e6e6e2c93f,"Further whitespace/tab fixes.
",numpy/distutils/command/scons.py
fedf4572692c2065b7c719ed6f9196999b185424,"Move scons call command line building into its own private function.
",numpy/distutils/command/scons.py
335aa25d249645a2e065f0cb37c34b6bcc0e6cbf,"Fix tab/space issue in scons command.
",numpy/distutils/command/scons.py
5b15eb7bbe9d1b0b23fc3d9709ed2c311d069f9c,"Do not import pyrex in distutils unless there are some pyrex source files.
",numpy/distutils/command/build_src.py
dbd30d1c3e5ce7873049779211f8d6805377dd88,"Style cleanups.
1) Remove hard tabs.
2) Remove trailing white space.
3) Reformat comments
4) Move datetime code.

The datetime code probably needs some reorganization.
",numpy/core/src/multiarray/arraytypes.c.src
dc444e1a20eb134d91f4384ec5809794385fc62d,"Remove trailing comma from enum (for c89-ification).
",numpy/core/include/numpy/npy_common.h
ce9f5ac0775c204234e888bad0fec56e69b04172,"BUG: we were protecting c++ and fortran compiler path twice, which made scons interpret the path as target.
",numpy/distutils/command/scons.py
680190a475b66b947dc906f76700990acd054498,"Tell scons whether we are in bypass mode or not.
",numpy/distutils/command/scons.py
2d078a1432687fab8c0626ed22b518b688950313,"Do not pass compiler path options to scons if they were not set.
",numpy/distutils/command/scons.py
d00fe700a1a0c9a0948a268a0a2145d54b673c0b,"Require numscons 0.11 or above.
",numpy/distutils/command/scons.py
3ecba7e560f3ec458335c01fff509a8942e5391c,"Add a bypass option to scons command.

We sometimes want to bypass distutils compiler detection, and the bypass option
tells the scons command to do exactly that. The compiler options are simply
passed directly to scons, which will then try to to detect the compiler from
there.
",numpy/distutils/command/scons.py
a3c5de2585b44b8b697161dfad2859dd2ffbb536,"Handle None in protect path.
",numpy/distutils/command/scons.py
cc9799e0981534cbb40ac6075bcefd90bdefdb87,"Add user options for compilers in scons command.

When removing build_ext options, we removed the compiler options as well. We
add the compiler options back, and treat C, C++ and Fortran compilers as
separate.
",numpy/distutils/command/scons.py
36069a8b2ec362209f9d83508b24c610f601ba77,"Always set up scons_* compilers, and use those when building the scons command call.
",numpy/distutils/command/scons.py
24def43896bc3c7ae3baa1dbd969ea2704324322,"Do not reuse build_ext options - most do not make sense for scons command.
",numpy/distutils/command/scons.py
0dc662a910c8c012bb5ec1740527e3ec4c31bbf6,"Remove infunc imports.
",numpy/distutils/command/scons.py
bca568940c878b7739af43c3a96e59c6490970a1,"Refactor numscons check in scons command.
",numpy/distutils/command/scons.py
300efd0907c12423b124e02de9e4fc17af7a56b9,"Move compiler initialization into their own private functions.
",numpy/distutils/command/scons.py
3a3b5e09f0a1bf311d9e3ca18cca411694debc27,"Move import at the top of the file.
",numpy/distutils/command/scons.py
d4eb8733f75565c0cff0202a9d818ce4d92df985,"Optimize ma.masked_invalid (on a suggestion from E.Firing)
",numpy/ma/core.py
897823bd5d9bbdd9bb17d63dfc3604e067ac20c8,"BUG: fix separate compilation

move datetime-related fmin/fmax macros to loops.h from loops.c, as
only loops.h.src is seen during separate compilation.
",numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
5304db4b2d2c2540d9b70a5b4c925912a790bb2c,"Style change in ufunc loops decl.
",numpy/core/src/umath/loops.h.src
746b9fcaeb9039efd6471650c621381e0aaf9437,"Fix DATETIME and TIMEDELTA buggy loops declarations.
",numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src
94201ad0052cdac619f7bbcb8f3d88ac3796c971,"Rename loops.h.src.unused as we actually need it.
",numpy/core/src/umath/{loops.h.src.unused
78a867887f58e564622ebfb2ef6c753a22f14971,"Add test for ticket #1217.
",numpy/core/tests/test_regression.py
019b485b1fed88b1a4c7e99b5c4b94a7039e3543,"Fix for ticket #1217, crash in lexsort.
",numpy/core/src/multiarray/item_selection.c
79fe820fb2941a1d673cfd10129144486847dd7b,"Add support for MIPS.Thanks go to r0bertz.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
683a8d0b65c1d55f3793abb80a4af486e7232492,"BUG: fix the detection of architectures on OS X.
",numpy/distutils/fcompiler/gnu.py
2fcc13a9cd954c3528d7582a4ce414449b6a3099,"Fix separate compilation mode after datetime merge.
",numpy/core/SConscript,numpy/core/src/multiarray/datetime.c
fd935a02364d07b5c05a03dafd8d8ef5fe24b10b,"Add copysign declaration for ufunc loop.
",numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src.unused
ab58540bda05bf47b34e478a9fef4de9e1c1b79c,"Add datetime ufunc declarations.
",numpy/core/src/umath/loops.h,numpy/core/src/umath/loops.h.src.unused
bbe188eeb0b87d5ea08e2f142651d9cd1de652cd,"* Bugfix for ticket #1207
",numpy/ma/core.py,numpy/ma/tests/test_core.py
cb955806a508ec15ebb83fa358f63a9dc67f7a16,"Fix C99-style variable declaration.
",numpy/core/src/umath/ufunc_object.c
1df22350f35b957cff5d29ea1ae5299946a5295b,"Fix #1168: fix functionality broken in r7132, and make get_package_path more robust
",numpy/testing/nosetester.py
3253b06df613ffd152e655ec6c3477b724640dd7,"Do not try to include site.cfg if it does not exist.
",numpy/distutils/setupscons.py
4fd7a700493bb37ea4501491bd1ba24fe17a2d5c,"Fix code generators input files inclusion in scons build.
",numpy/core/setupscons.py
87654fc534b2d93eff37927c956cf19c11034baf,"Fix the recursive call so that it will terminate in DATETIME_setitem and add a few comments describing work to be done.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/getset.c
aba728e79bc77e39787e2a0cf9d9eae4dc2f8690,"Make true divide return doubles.
Make true divide return nan/infs instead of raise zero divide error.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umath/loops.c.src
444fcb1e2feaef724fd4c69d8e27193ac3eeb565,"Begin to add feature that allows loops to exclude certain combinations.
",numpy/distutils/conv_template.py
9e2b3f752c75484db6f5e3e0ce119f55b4cfa741,"Fix the file that generates loops.h to include DATETIME ufuncs.
",numpy/core/src/umath/loops.h.src.unused
895f27705626eaee6614489e0445f90407fe4757,"Need to include datetime.h for PyDateTime_IMPORT.
",numpy/core/src/multiarray/arraytypes.c.src
d8164fdcff7657b7dbb0ff9adac0d21584e10105,"Change '.' to 'P' in generate_umath.
",numpy/core/code_generators/generate_umath.py
618e2ff81b76b2d2f6a0cfa50e5dc8792d24fd96,"Merge of datetime branch r7050:7336 back to trunk.  Basic functionality is implemented, but coercion still needs to be done and ufuncs need to understand the data-type information (right now, it's a dumb addition).  Printing of datetime arrays needs to be improved as well
",doc/neps/datetime-proposal.rst,numpy/core/_internal.py,numpy/core/_mx_datetime_parser.py,numpy/core/arrayprint.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numerictypes.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/datetime.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/testcalcs.py,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_dtype.py,numpy/lib/tests/test_arrayterator.py
e1a4181febcecd4ba2064f41dcffb9a1820bfabf,"Small style cleanups.
",numpy/core/src/multiarray/number.c
2b01ee6b966b9ca298247e6717e3a5be16a92970,"Re-base the date-time branch back to the trunk.
",doc/HOWTO_BUILD_DOCS.txt,doc/HOWTO_DOCUMENT.txt,doc/Makefile,doc/README.txt,doc/TESTS.txt,doc/example.py,doc/neps/datetime-proposal3.rst,doc/numpy.scipy.org/Makefile,doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/index.rst,doc/numpy.scipy.org/source/old_array_packages.rst,doc/numpy.scipy.org/theme/scipy/layout.html,doc/numpy.scipy.org/theme/scipy/static/logo.gif,doc/numpy.scipy.org/theme/scipy/static/numpy_logo.png,doc/numpy.scipy.org/theme/scipy/static/scipy.css,doc/numpy.scipy.org/theme/scipy/theme.conf,doc/release/1.4.0-notes.rst,doc/source/_templates/autosummary/class.rst,doc/source/conf.py,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,doc/source/reference/{generalized_ufuncs.rst,doc/source/reference/c-api.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/distutils.rst,doc/source/reference/index.rst,doc/source/reference/routines.indexing.rst,doc/source/reference/routines.set.rst,doc/source/reference/routines.statistics.rst,doc/source/reference/routines.testing.rst,doc/source/reference/ufuncs.rst,doc/source/user/index.rst,doc/source/user/install.rst,doc/sphinxext/README.txt,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/plot_directive.py,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/arrayprint.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/memmap.py,numpy/core/mlib.ini.in,numpy/core/npymath.ini.in,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/setup_common.py,numpy/core/setupscons.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/global.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/{,numpy/core/src/{,numpy/core/src/npymath/npy_math_private.h,numpy/core/src/py3k_notes.txt,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_umath.py,numpy/distutils/__init__.py,numpy/distutils/command/__init__.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/command/scons.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py,numpy/distutils/numpy_distribution.py,numpy/distutils/tests/test_npy_pkg_config.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/doc/subclassing.py,numpy/f2py/crackfortran.py,numpy/fft/fftpack.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/io.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,setup.py
c2191bc97da8a0879cec8d3e9a7a93fe9e66fcd8,"Datetime branch compiles and all numpy tests pass.  Ready to be merged back to trunk.  More development still needed, but it can take place in the trunk.
",numpy/core/_internal.py,numpy/core/src/multiarray/descriptor.c,numpy/core/src/umath/ufunc_object.c,numpy/lib/tests/test_arrayterator.py
5bebcdfd6cda1d015f52e213bf94cfdc5b0b8b98,"Code compiles and some of it seems to work...
",numpy/core/arrayprint.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/numerictypes.py,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalartypes.c.src
663b056c495fa51947bbb7e918b35dd271cf42bc,"Add check for NULL.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c
fddd4b9c3b8f18ba7cf386f766b70ec3328b1c69,"Use subprocess instead of exec_command to detect universal archs of gfortran.
",numpy/distutils/fcompiler/gnu.py
7134947e9d1aeff12cd2a74aa8c7af2111db5d88,"Remove debug print in scons command.
",numpy/distutils/command/scons.py
2f7ce43c4c7e2453d0b21ee43cdae54dbbef60bd,"Code compiles at least -- no merge with trunk yet.
",numpy/core/code_generators/numpy_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/parse_datetime.c,numpy/core/src/multiarray/scalartypes.c.src
aff438e441b05a5f20287bb1b283f120be802ed9,"Trying to get to compile prior to merging changes from trunk.  Coercions still need to be written.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/parse_datetime.c
aa24bc54459a5d31e732d0013ac5ff33fc2c240a,"BUG: fix npy_pkg_config_path variable escaping on windows.

When dealing with path on windows, the backshlashes need to be escaped: quick
replace to avoid trouble when dealing with variables.
",numpy/distutils/npy_pkg_config.py
6af710fe71b1acb44e7255afe47ba283f3b9b209,"Add more py3k notes.
",numpy/core/src/py3k_notes.txt
eb602697b501d67613639a1e65f6a40cc4852087,"Last checkins.
",numpy/core/src/multiarray/arraytypes.c.src
e1b97821a34b02493d3487ffc3a2696ef449bd4d,"Check-in work for Wednesday.
",doc/neps/datetime-proposal.rst,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/parse_datetime.c,numpy/core/src/multiarray/testcalcs.py
c0ccc6a24981fe8a495bb3e7ba1a33fe0251892c,"Update mingw-w64 support for gfortran.

Gfortran does not append a leading underscore anymore, so the
-fno-leading-underscore is not necessary anymore.
",numpy/distutils/fcompiler/gnu.py
5e961fa9e0f873ed6e9c01b4dd3248ccce7cfa5a,"Fix mirr function and its test. Thanks go to Skipper and Josef.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
ad6d1ce9b1d53bc15023771e9db401206b4b2654,"Comment out failing test until it is decided where the problem lies.
",numpy/lib/tests/test_financial.py
4176f33526beb6f1efd0efd1cbdd89ab103c72b6,"Make some fixes in mirr implementation to avoid overflow in
summing booleans. Do some whitespace cleanup.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
183609e2de003e953b0c7f01fa35eeb46fc61ea0,"Modify remaining PyTypeObject initializations in core/src.
Change PY3K to NPY_PY3K to decrease chances of a name collision.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/py3k_notes.txt,numpy/core/src/umath/ufunc_object.c
a7cfefdb02ea7ed0cff5671e367d1c6e2d428e74,"Fix build that I busted. Copysign needs to stay on old list also.
",numpy/core/setup_common.py
ed997cb5f3816ef60e741d3bc877d1fdcc596d07,"Stopping for today.  Pick up again tomorrow.  This branch does not compile.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/parse_datetime.c
885b0dd12e9ff138e964a05c299e90372c4ecd39,"Intermediate commit.
",numpy/core/src/multiarray/arraytypes.c.src
0abf640f4a8f0f48fe2fcd1e43bbe7b4eabbc9cf,"fix a minor mistake in the previous commit
",numpy/core/src/multiarray/methods.c,numpy/doc/subclassing.py
ae6aa8d4d2527cc6810cc1e430269719f81e821b,"add comment about __array_prepare__ to 1.4 release notes
",doc/release/1.4.0-notes.rst,numpy/core/src/multiarray/methods.c,numpy/doc/subclassing.py
f2a723d47b3df1e4f436ccb2524ad3a33a08b8a9,"Intermediate check-in of results.
",numpy/core/_internal.py,numpy/core/_mx_datetime_parser.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/parse_datetime.c
17828c6ede1982ffab11e7277c80c7f21a907a75,"Improve test and add a test to Python.
",numpy/lib/tests/test_financial.py
5c5d5d235b0440e6db0c528a0c17c1737c4a1070,"Add patch in ticket #1138 which fixes mirr function to be the same as Excel and OO Calc.
",numpy/lib/financial.py
6f1ad4ceb7bc2576e4941cd6ecefc4051bce382e,"Python 2.6 include defines HAVE_COPYSIGN on fedora 11,so add it
to the list of possible conflicts. Maybe we should be prepending
a NPY_ to our defines?
",numpy/core/setup_common.py
7da80a7be11966369702d6076e2771686879ef37,"Add some notes for the py3k project. These should probably be
marked up and moved to docs at some point, but for the time
being they are just a convenient scratch pad.
",numpy/core/src/py3k_notes.txt
5c163c1982a6628364d9bffd0a4c1a4cde916194,"Add ifdefs to change python 2.x style type structure to 3.x style.
Remove bogus COUNT_ALLOCS initializations. These initializations
were incorrect on two counts: the comment says not to initialize
them and the variable locations have been incorrect since python
2.6 when another slot was added to the base structure. These mods
will be done to the rest of the type initializations in another
commit.

Note that the compare slot is reserved in py3k, only rich compares
are used, so this is a change that needs to be made everywhere and
functions that use compares, i.e., searchsorted and non-typespecific
sorts, need to be modified.
",numpy/core/src/umath/ufunc_object.c
5710171c76d932c8e95b75eac601ac8159e2e4a1,"White space cleanup.
Remove unused variables to get rid of warnings.
Remove C++ style comments.
Coding style cleanups.
",numpy/core/src/multiarray/multiarray_tests.c.src
9e053da77d773fb22ee83219ad5595af6c73c953,"add support for __array_prepare__
",doc/source/reference/arrays.classes.rst,doc/source/reference/ufuncs.rst,numpy/add_newdocs.py,numpy/core/src/multiarray/methods.c,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py,numpy/doc/subclassing.py,numpy/lib/shape_base.py,numpy/linalg/linalg.py
856a9363bf28da036c6102fc77ea7fcdba5e777a,"DOC: clean up numpy.scipy.org

- Change numpy.scipy.org title to 'Numpy' instead of 'numpy.scipy.org'
- Join old_array_packages in the toctree
",doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/index.rst
515736d717116e466fd26be8529253ea60885ee8,"minor cleanup
",doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/index.rst
b70e2aba6aa29f26bd1a75a9fc3f86c6d077ddb9,"DOC: numpy.scipy.org reST thanks to Kyle Mandli.
",doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/index.rst,doc/numpy.scipy.org/source/old_array_packages.rst,doc/numpy.scipy.org/theme/scipy/layout.html,doc/numpy.scipy.org/theme/scipy/static/numpy_logo.png,doc/numpy.scipy.org/theme/scipy/static/scipy.css
f26788cc6ed876ccb0cdbdc3b71742e0f964446a,"Add numpy.scipy.org sphinx project
",doc/numpy.scipy.org/Makefile,doc/numpy.scipy.org/source/conf.py,doc/numpy.scipy.org/source/index.rst,doc/numpy.scipy.org/theme/scipy/layout.html,doc/numpy.scipy.org/theme/scipy/static/logo.gif,doc/numpy.scipy.org/theme/scipy/static/scipy.css,doc/numpy.scipy.org/theme/scipy/theme.conf
4be3297310b904c71ebc27c8a374997ce49e242c,"Make identity function faster. Closes ticket #1193.
",numpy/core/numeric.py
da19f3edc5c8995afc821ddc949b386e781e0b6a,"Fixed compatibility issue of histogram with matplotlib 0.91.2
",numpy/lib/function_base.py
f97cb4cd9d14c538dbb581426aa30d9dd96b1d06,"Add ARM and SuperH architectures.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
33ede5110c2250cbd4ee9eb61da1d09f1412460a,"Revert ""ENH: add a simpled translator without out of bounds handling when the neighborhood is detected to be within the array.""

This reverts commit 6d02ccccf90acd9e508513082645da9adc366171.
",numpy/core/src/multiarray/iterators.c
16713b9b1536b6c6abe0d83a74c63b4652d5d292,"Update documentation.
",doc/source/reference/c-api.array.rst
b1b78bc65735cd44d3ef51470f01f7eef793d3e6,"ENH: add a simpled translator without out of bounds handling when the neighborhood is detected to be within the array.
",numpy/core/src/multiarray/iterators.c
1f9788da60bfee39e5b95f67d08a2b52cd842498,"BUG: Fix neighborhood iterators when the neighborhood was strictly within the array.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_multiarray.py
61a88ebe58f740704d6294f289c10ff104c6832a,"Remove debug/profiling stuff in neighborhood iterators tests.
",numpy/core/src/multiarray/multiarray_tests.c.src
d4001cfbfd953fd78e25df6ab32db845df3a90d8,"Add unit test showing regression in stacked neighborhood iterator.

If a first neigh iterator n1 is created to that the neighborhood is
strictly inside and smaller than the array, the second iterator on top
of it will wrongly use n1 boundaries outside the neighborhood, even if
still within the array.
",numpy/core/tests/test_multiarray.py
fa317f76579b109d180c5f2ada1fd7787719d9df,"Remove debug and obsolete junk.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarray_tests.c.src
bad523b4582f5b38f66d3fd4ba883d6fbbbe8be2,"Circular iterator fixed.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_multiarray.py
5d180c4550ef3b348e9ee947bbe2f69fbd1ac5d4,"Add unit tests for stacked neighborhood iterators.
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
7055fdb3c0c0b6b6f8bceaaa03b044ac00685f06,"Stacking neighborhood iterators works for mirror mode.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
3195a68e49f892dc334fb769aa79cbbbc5c0a0c6,"Fix constant and zero/one padding when stacking neighborhood iterator.

Stacking a neighborhood iterator on top of another one now works as expected.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/src/multiarray/iterators.c
d717a39412f6d8653d4ffff741c964e32c028870,"Implement simple coordinates translate function for basic iterator.
",numpy/core/src/multiarray/iterators.c
f13d666f5f00dca9d1c3b51922119208dcee110c,"Make bounds a member of the base struct PyArrayIterObject.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c
b80758ff9830ee7bebbbbe23c60a8dd31c8dabfb,"Forward declare PyArrayIterObject

To fix the neighborhood iterator, we need to be able to add a member to
PyArrayIterObject which is a function pointer (which will do the
padding-specific translation coordinates -> data pointer: poor man's
polymorphism). As the function pointer takes an iter object as its first
argument, we need to make a proper declaration of PyArrayIterObject,
instead of using an anonymous struct as previously defined. I am not
sure whether this may break the ABI or not, though.
",numpy/core/include/numpy/ndarrayobject.h
872966ffdfef1f7de9d7502d62e0f3418d2270e3,"Add test case which highlights current neigh iter misdesign w.r.t walking from bounds.
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
7c5713d3116362e9fe15dd0a448947c1a7126927,"Remove vim tag.
",numpy/core/src/multiarray/multiarray_tests.c.src
0a786652b3824a239503ddd4a5392263d73c3376,"* fixed np.ma.average on integersw/ mask (bug #1188)
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
d0bba527fa3ade5674c670b6df1d7ad0346603c1,"* fixed _from_methods to run on ndarrays (bug #1187)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
99835f47c42535b20bddb670f09bb99f011eae7f,"Do not finalize install_cmd if already finalized.
",numpy/distutils/command/build_src.py
e74c00e2774b258680c97cd44a00c71ca4abc278,"BUG: fix building of npy-pkg-config file so that one can reliably get the install prefix from the install command,
",numpy/distutils/command/build_src.py
b9b85f81702ebeaed6b39eff40d12fe2b05a2a27,"Fix typo in install_clib fix.
",numpy/distutils/command/install_clib.py
bc196b4df375b2e877165b1692cd702d672cb0fe,"BUG: fix install_clib failure on win32.

When the compiler is customized in build_clib, install_clib did not
reuse it, but created a new instance. Instead, we use the build_clib
compiler if already instanciated.
",numpy/distutils/command/install_clib.py
e559c897cec534c58ab7940e2623a1decfb4958a,"Move import at the top of module.
",numpy/distutils/command/install_clib.py
b0848b771b1a97d306da99e52fcc6d23c8e4aae9,"Hmm, somehow a reference to math.fabs slipped by and didn't show here. Try
again.
",numpy/testing/utils.py
d5ea689ecbd3560072cc398a1962b16851bf644e,"Try another fix for BSD problem. This one uses numpy functions, which is
probably not the best...
",numpy/testing/utils.py
f0e086dbcf46c345a1a6c82ccba61bdf42237502,"Test fix for BSD buildbot error.
",numpy/testing/utils.py
2537604cbcb61027706c358d6dd6afcd99a30686,"Fix small bug in assert_almost_equal.
The comparison of complex numbers is still not quite right because errors
can propagate between the real and imaginary parts. They can't be checked
separately in general. However, this fix gets rid of the test errors
currently showing.
",numpy/testing/utils.py
6951bcd1d14a391e2ac2c88ea1a65c9973ab5968,"Clarify logic for nan comparisons.
Some coding style cleanups in arraytypes.c.src.
Add documentation to release notes for 1.4.0.
Add documentation of sort order to the sort docstring.
",doc/release/1.4.0-notes.rst,numpy/core/fromnumeric.py,numpy/core/src/multiarray/arraytypes.c.src
6d91277b97e2dd0fbad849ae38b9ccc26aa17eed,"Change ndarray type comparison to reflect the sort order with nans.
Searchsorted should now work with arrays containing nans.
",numpy/core/src/multiarray/arraytypes.c.src,numpy/core/tests/test_multiarray.py
15f9f6911af9b3fd9a28e09d344d40bb721e60b9,"BUG: handle inf/nan correctly in assert_array_almost_equal.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
3feb77ee4e46962b6c9cfab2a37a0c1ef1ceda82,"BUG: fix nan/inf handling for complex dtypes.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
5b2699cf291a8f5f8fd90a9b910937cad0e8d043,"Instantiate exceptions using string argument.
",numpy/distutils/conv_template.py
a0945f69ef64797a74e71e0314a6c0aa6cb2ecff,"f2py: fix a bug evaluating parameters with kind function: kind(1.0), kind(1.0d) must be 4, 8, respectively.
",numpy/f2py/crackfortran.py
0d3aeb0dde468a15ad15a44017842115bc3313e4,"Handle complex special values and negative zero.

Complex with nan/inf are correctly handled in assert_equal, as well as negative
zero.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
60fd0b786909db327fe4f3e925047e2c2f58f2d2,"Handle nan and inf in assert_equal.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0259a4972a81295353407dfaf4ba5adcb34a42db,"Fix header for assert_array_almost_equal.
",numpy/testing/utils.py
e8b88c2d0529f2dac153e04537cf05d435a27a07,"BUG: handle nan/inf in assert_approx_equal.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
56caa44161152ffd4f354757c8d4d42007413f79,"BUG: assert_array_compare did not raise an exception when the nan indexes of both arguments did not match.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
f49d6d36b666eaff6a82614badf452df1844e33b,"Handle nan and inf in assert_almost_equal.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
a711484bf1bda459b67aad86c11556bdfc69e279,"Add a section in npymath doc about how to link against npymath.
",doc/source/reference/c-api.coremath.rst
8ccbd460dba7c909c025b1e09629786d132d89ca,"Add some notes to the 1.4 release document.
",doc/release/1.4.0-notes.rst
d13418af41bfad221d2ef2a1e58ef8b917a42253,"BUG: path sep escaping necessary on windows for numscons build.
",numpy/core/SConscript
25c9ca8ad2da7b062738f9013af79288b05d1b87,"BUG: fix our copysign implementation.
",numpy/core/src/npymath/npy_math.c.src
5019d2c835ff1c70f591b9c97c9a27d89d5c550d,"Add missing SET_HIGH_WORD and SET_LOW_WORD to do bitwise op on IEEE754 double - needed for our copysign replacement.
",numpy/core/src/npymath/npy_math_private.h
b5a150d9596f46d1e68fa563f1d9e89e72242a63,"Portability: replace typeof-based SWAP macro by type-specific macro, as typeof is a GCC-ism.
",numpy/core/src/_sortmodule.c.src
6a1efaff6d76fe06667b4bf65eb24729543a3c82,"Finish fixing merge hassles.
",numpy/core/src/_sortmodule.c.src
717c7acf14d04be79d7a1c098d83cac69481e0af,"Make nan types sort to the end.
Add test for the new nan sort order.
",numpy/core/src/_sortmodule.c.src,numpy/core/tests/test_multiarray.py
3ad508a61fe00b1b7dca1351806232b6d5716487,"Eliminate uses of lessequal in sort routines.
Replace more macros with inline functions.

Why:

Inline functions don't have side effects. The nan sensitive comparison functions
for complex are also easier to implement as functions than macros.

A longer term goal here is to have a single implementation for each sort type
rather than having separate implementations for scalars and strings, but reaching
that state will require more work.

Caveats:

Some compilers may generate slower code if they don't implement some form of
inlining so it is possible that some of these functions may again end up as
macros at some point.
",numpy/core/src/_sortmodule.c.src
09d7508a5f96d554c60a76145eac6b78c9885594,"Fix imports in get_pkg_info/get_info.
",numpy/distutils/misc_util.py
0fee08ca6ef8500a5aebdbdca91d868bc3d4f94f,"Split up get_info so that we get a function which returns the LibraryInfo directly - we can feed that to scons easily.
",numpy/distutils/misc_util.py
1ee6d193573a320c23e813617931bfc57c642582,"BUG: Fix missing return stmt in get_npy_pkg_dir.
",numpy/distutils/misc_util.py
81ceefc3806dbb0bf007ffc5a4f1908f243db9e6,"Fix npy_pkg_config unit test failures.
",numpy/distutils/tests/test_npy_pkg_config.py
3b3c1593db0addddeb84cf726670a2b8e2f854bf,"'Merge' docstring and reference guide for Distribution methods documentation.
",doc/source/reference/distutils.rst,numpy/distutils/misc_util.py
fa50cfbe9df0ec56c7eb8fb7eca0b8270bf35c2f,"Use automethod for the functions we added to numpy.distutils.
",doc/source/reference/distutils.rst,numpy/distutils/misc_util.py
a71977d8e6a2e7f543a131dbebd557471fce64c5,"Fix npy_pkg_config script.
",numpy/distutils/npy_pkg_config.py
9abcc033f3831b040db65bb842e5bae90e60314d,"Add documentation + example for npy-pkg-config files.
",doc/source/reference/distutils.rst
8f8927f9a8c7444974dc5605a296ab6efed59ce5,"Add a dirs argument to get_info to look for npy-pkg-config files in additional directories.
",numpy/distutils/misc_util.py
36456699517e7867b5e0b13f40622b319ad3f084,"Fix add_installed_library so that install_dir is actually relatively to the current package.
",numpy/core/setup.py,numpy/core/setupscons.py,numpy/distutils/misc_util.py
f56c11a7ba8e60fd5e4873be6469022eb5384da9,"Remove unused mlib_pkg_content function.
",numpy/core/setup.py
c0dac3c19df42c60f8905e6b84b36f512d483e08,"Add doc for add_installed_library and add_npy_pkg_config.
",doc/source/reference/distutils.rst,numpy/core/setup.py,numpy/distutils/misc_util.py
06e3a9bb748d686d787f2680d88ee33fa2cfecea,"Fix returned dict by get_info so that it works with add_extension.
",numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py
ab6878ee613fa348ee1ca59dcb77d44a221d06a3,"Fix get_config.
",numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py
50d010c72dc3649cecf247cc637458ba98a15f2a,"Fix scons build w.r.t pkg-config and installed C lib location.
",numpy/core/SConscript,numpy/distutils/command/scons.py
ae9596c78bc85a6d52c467aec499016c335ef602,"Update numscons build to support pkg-config-like files.
",numpy/core/SConscript,numpy/distutils/command/scons.py
ee8c167bdd5871618e9c5d83f8e39cebe0213055,"Add dummy cflags options for mlib template.
",numpy/core/mlib.ini.in
a7e9f83d6bec9d8e2919cc90d4cee4434312a544,"Add add_installed_pkg_config function, for automatic pkg-config-like generation/handling.
",numpy/core/npymath.ini.in,numpy/core/setup.py,numpy/distutils/command/build_src.py,numpy/distutils/misc_util.py,numpy/distutils/numpy_distribution.py
5b5f879bb6c585f469d4986cec5d528627d55415,"Refactor a bit the code to generate npymath.ini.
",numpy/core/mlib.ini.in,numpy/core/setup.py
d04e38647123c30e551dbbb5d947d0379bb4bec0,"Handle path sep as well in npymath.ini.
",numpy/core/npymath.ini.in,numpy/core/setup.py
e6000d6edbe6b4a53eda9dd065b9285bd9281a75,"Move subst_vars as we will need it at several places.
",numpy/core/setup.py
8786936d6797a506bde2d7c093b5b62ff920972d,"Require 0.10.2 version of numscons - needed for installed C libraries.
",numpy/distutils/command/scons.py
df57d7c9cd1e6d05913093648198bd8df3c08a04,"Raise a PkgNotFound exception in get_info if the package is not found.
",numpy/distutils/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/npy_pkg_config.py
681db2650f201bbfabf67f022b41021e749c8945,"Add a function get_info to replace get_npymath_info, in a more generic way.
",numpy/core/setup.py,numpy/distutils/misc_util.py
4b34188cb87b08549f2daca956482d45ad046e07,"When built in-place, make sure build_clib is built inplace too.

If numpy is built in-place and used by a third-party, we need to make
sure installable libraries are put in the source directory, to mimic an
install. Whenever build_ext is called with -i option, we call build_clib
with the -i option as well.
",numpy/distutils/command/build_ext.py
0407363fe009c004da0e2c2bbbaa421cb64e160d,"Fix typo in add_library.
",numpy/distutils/misc_util.py
5bedf54e48fe24c628ff33462249fe76828a713f,"Add an inplace option to build_clib - this is necessary for using installed C libraries in in-place build.
",numpy/distutils/command/build_clib.py
5c89ad2f2c40bd980f66eb0b525543c2c74931d8,"Refactor function to substitute a dict from an .in file.
",numpy/core/setup.py
14202898c93289f14f0e2c7094bb819a47c4fd8a,"Add parse_flags function + some unit tests.
",numpy/distutils/npy_pkg_config.py,numpy/distutils/tests/test_npy_pkg_config.py
67182cd9bf33504ddd87f5edb6dcf51a0b8fee8e,"Add two unit-tests for LibraryInfo.
",numpy/distutils/tests/test_npy_pkg_config.py
ce55f14c83259b6ce3ba0d91c0128324a330e2aa,"Fix npymath.ini generation, and handle in-place build correctly.
",numpy/core/setup.py
0c013ae9fb0a8bb5590d249483fdbd3093f5bf51,"Fix whitespaces issues.
",numpy/distutils/npy_pkg_config.py
aee739d494de996de40db6cb35c9411efbc4754f,"Handle NPY_PKG_CONFIG_PATH in our fake pkg-config emulator.
",numpy/distutils/npy_pkg_config.py
eda2db7fd3b6f6a7f6ca7cd58561995c84673699,"First attempt at generating .ini file with install-time info.
",numpy/{distutils/npymath.ini,numpy/core/setup.py,numpy/distutils/mlib.ini
35114ae7c33384b0acf7903469426a6955b23b7a,"Fix mlib.ini generation.
",numpy/core/setup.py
d6abb98fe9010624d93986cf29552062ffa449e4,"Install the mlib.ini file.
",numpy/core/setup.py
439484791a63087f20c7d945d54110791d97ca44,"Handle variable definition in pkg-config emulator.
",numpy/distutils/npy_pkg_config.py
404a1829148824e840097a102180c5a173b746d4,"Deal with multiple locations for one filename.
",numpy/distutils/npy_pkg_config.py
d0aa15161d4feba785c82535f8d8fceffc8763da,"Implement a trivial cache mechanism for LibraryInfo instances creation.
",numpy/distutils/npy_pkg_config.py
88bbeee64f541b2da242a835acbba09079e5c89c,"Better design for LibraryInfo, to handle variables redefinition and requirements.
",numpy/distutils/mlib.ini,numpy/distutils/npy_pkg_config.py,numpy/distutils/npymath.ini
9530c356e4dff9991fd4d0eefe2bc740e35e8d69,"we now implement cflags, libs, variables handling and basic depends - the code is a mess, though.
",numpy/distutils/mlib.ini,numpy/distutils/npy_pkg_config.py,numpy/distutils/npymath.ini
dc23f77c86ce98b9099f8aeb396e7a5fdb6ec810,"Start working on npy_pkg_config, to handle core libraries build issues through a pkg-config-like file.
",numpy/distutils/npy_pkg_config.py
3e3661d4650b7e76069ad4e91f5a4580056c498e,"Update comment on using install_clib as a subcommand.
",numpy/distutils/command/install.py
124c2aed20b5766b4e042f31bffc6be9266313f1,"Minver for numscons is now 0.10.1.
",numpy/distutils/command/scons.py
8f76e68c6e492cab74a60aa27426536dfb8b224c,"Refactor the code to get top dir relatively to scons build dir.
",numpy/distutils/command/scons.py
3131612bc4e067dc254dbff80d9b5afa80b91f4b,"Support for installable libraries in numscons.

Numscons has been modified such as clib are now copied (using the
Install builder) where numpy.distutils expect them, and a function has
been added to numpy.distutils so that we can add installable libraries
in setupscons.py scripts (which add the library to the NumpyDistribution
instance).
",numpy/core/setupscons.py,numpy/distutils/command/scons.py,numpy/distutils/misc_util.py
dd92ae0449704ce9e250d2251a93826fda7c74f1,"Refactor common code between add_library and add_installed_library.
",numpy/distutils/misc_util.py
f0ce83ff67908806b6b85240d8a383b2306ab2e8,"Remove dead code.
",numpy/distutils/misc_util.py
e813d191250d46a0fb8be57d4c46072e4dcb26b5,"Add get_npymath_info function to reuse npymath outside numpy.
",numpy/distutils/misc_util.py
bfbb9dd7c06d85e29983fc741679761c9b769137,"Installing a clib now works.

Installable libraries are built exactly like conventional clib (they are
added to the NumpyDistribution instance libraries member, and build_clib
is not aware of the libraries/installable libraries distinction).
Everything is done in the install_clib. The library cannot be used yet
by external code, though.
",numpy/core/setup.py,numpy/distutils/command/install_clib.py,numpy/distutils/misc_util.py,numpy/distutils/numpy_distribution.py
78de166d5bd2a41f90defd899abb9fb6c14c6c79,"Add a install_clib command.
",numpy/distutils/command/__init__.py,numpy/distutils/command/install.py,numpy/distutils/command/install_clib.py,numpy/distutils/core.py
27160564fa6d81889ec8ed53cf8f263cfbec476e,"Add a new function to add installed library - do nothing for now.
",numpy/core/setup.py,numpy/distutils/misc_util.py
0a34a25112328173eed3dafe20bdb0ff7371d2fa,"Strange things going on with git/svn interaction. Let's see if they go.
",numpy/core/src/_sortmodule.c.src
56ba569132e1f5da6d06a3a9f989c37f43e75cc4,"Change numeric sorts to use inline functions for comparisons.
",numpy/core/src/_sortmodule.c.src
b3d2fc29d15a40dbfc99cc7ccfd10cd2a3d13e3b,"Change comparison macros to inline functions.
",numpy/core/src/_sortmodule.c.src
423c81abc9b90167fd37555568486743d15a7083,"Use a != a for finding nan.
",numpy/core/src/_sortmodule.c.src
90008fe4cd36cb3d5ce8e8e1ab3c0c31d2c5b28f,"Test nan sorts.
",numpy/core/src/_sortmodule.c.src
c0111a88ab6606a2048555a1dc401ddc9013a488,"Code style cleanups.
",numpy/core/src/_sortmodule.c.src
1f50a2f2736475c3c028eb854df9a54d4b9edb5a,"Code style cleanups.
Use NPY_INLINE for functions we want inline.
Replace intp by npy_intp.
",numpy/core/src/_sortmodule.c.src
cf8817efc95775122b3e8712ffc7de63c8f11d36,"Fixing internal links
",numpy/doc/subclassing.py
f7ad19bc1f5dc1fafdce32d9befc4fe05eaec3d4,"After thinking, a more general understanding of slicing etc
",numpy/doc/subclassing.py
c3c126b0dcab4801751e8ce3dd5f578730287b57,"and more tiny doc typos
",numpy/doc/subclassing.py
402892136e416a7aabe33044b05c06b945b8235c,"Experimenting with __array_wrap__
",numpy/doc/subclassing.py
aeb8d581f1205b3f9a1d0267cf85d559b5300e9c,"Tiny doc rearrangement
",numpy/doc/subclassing.py
53cd4c5655d983a3ec44ffc77be3859966e76c00,"Further extension of doctests for inheritance
",numpy/doc/subclassing.py
782ad5967a84077b8632730b392f8450a44a1a36,"Small edits to subclassing doc to make classes more explicit
",numpy/doc/subclassing.py
377ade5f3a2d2b780743b8992d29b0e6ba037f53,"Moving more to doctests, more explanation of views, slices
",numpy/doc/subclassing.py
aee35b25ca906c24bf067815ab8f989e993590fb,"Moving some examples to doctest format; removed debugging cruft in example
",numpy/doc/subclassing.py
061580d7303cdba2365d674ce9fbeec7b3a6fa8d,"Some clearer explanation of __array_finalize__
",numpy/doc/subclassing.py
09636b1ffd3b3ad55c6b631e609c156563b20d8f,"* Fixed __eq__ and __ne__ on masked singleton
",numpy/ma/core.py,numpy/ma/tests/test_core.py
d8be0c2ce965d6e34b307cc4295b40fe3aa07859,"numpydoc: really fix docutils < 0.5
",doc/sphinxext/numpydoc.py
2951b794d0b6498c5d6b2fd8c0f188a447bd8d14,"numpydoc: fix issue with docutils < 0.5
",doc/sphinxext/numpydoc.py
32b71d5f6773d7f85f752bc252257ab32e62ca14,"BUG: discrepencies between 2d versions of nieghborhood iterators.

Make sure the 2D versions of the neighborhood iterator increments are
implemented for every boundary mode, and that the default one supports
every out of bound mode.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h
3ab762705a35ad7ba9a726a4a80abeb741e4f8a3,"Look for already declared configure checks macros in python 2.5.

Python 2.5 already declared HAVE_HYPOT and other similar math funcs, so
look for those declaration to avoid redeclaring those macros ourselves.
Should fix some build warnings.
",numpy/core/setup.py,numpy/core/setup_common.py
dbbf1bffae472d3e3c574a45546f892c6ef30b98,"BUG: forgot to add the multiarray_tests extension to distutils build.
",numpy/core/setup.py
a35153c83821f16e4e2a5c70e67aaf745f9accd5,"Mention the deprecated decorator in the release notes.
",doc/release/1.4.0-notes.rst
eb6df7ca32375fe98c7902f77b90d6a7d9869ea3,"Fix 2.5-isms for deprecated decorator.
",numpy/testing/decorators.py
56d6091935400947391bbb096ea8ab08bff67d4f,"BUG: fix python 2.4 build.

Move NUMPY_API tag just above neighborhood iterator ctor, as comments in
between cause parse errors on 2.4.
",numpy/core/src/multiarray/iterators.c
759e989edf36a77648c2fdb970ba469e37ebc53a,"Add versionadded 1.4.0 for deprecated decorator.
",numpy/testing/decorators.py
5380c9461a07c1d305999b773287465ebbbd7c99,"Update release notes.
",doc/release/1.4.0-notes.rst
be0d7ef86d98644baa7de53fb5a26dda9b6ec696,"Update doc for neighborhood iterator.
",doc/source/reference/c-api.array.rst
62b73d811900ef457d6e3eb55def0ab5f6592a47,"Simplify neighborhood iterator API.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarray_tests.c.src
956ddcff78a3273c45cb4afe6fa1a2bfb5e5fed9,"Fix whitespace issues.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h
bf58af82ac685fc62cdf8f51308806db85f25563,"Add cicular mode-specific public API to advance/reset pointers.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h
97da6e6fa99ec5696d966ede7be2da7bf4d96d80,"Implement circular mode for neighborhood array iterator.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/src/multiarray/iterators.c,numpy/core/tests/test_multiarray.py
38aa61ed8cf3958da53525e881f4e80f29045a22,"Fix multiarray_tests for multi-dimension inputs + add 2d tests for every implemented padding.
",numpy/core/src/multiarray/multiarray_tests.c.src,numpy/core/tests/test_multiarray.py
8cd314a86c3cf3061ae9e1d9cf841ae58f137338,"More tests for neighborhood iterator.

Mirror mode now works for object and basic types.
",numpy/core/SConscript,numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/{multiarray_tests.c,numpy/core/tests/test_multiarray.py
412a42e4e67025a0a1892915e41f2836623cd32e,"Fix wrong right bound for neighborhood iterator with constant padding.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h
edce81e67ebe9f867c4b69c30bc52ed0a1df96c9,"Start a multiarray_tests module to test neighborhood iterator.
",numpy/core/src/multiarray/multiarray_tests.c
3cb0c6daf0bbc1e1e301948ee8353447b29dac88,"Implement mirror padding mode for neighborhood iterator.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h
93e04299cbcba04d31a23cba21c349d350dc075b,"Fix deallocation of iter->constant for padding modes which set it to NULL.
",numpy/core/src/multiarray/iterators.c
3cccb41acc5046eb448a5af16fb9e7b7a2a98c9c,"Fix refcount for object arrays.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c
ed12fceb72dba383591dd9a3ac8469bff730b46b,"Start implementing padding modes for neighborhood iterator: 0, 1 and constant padding implemented.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c
23cee8fff08ab1d33aed18bdcec35324497ae85d,"Rename zero member to constant.
",numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c
8311cc98cec959ffb5ecf5c43d3a73587eb27289,"Add the deprecated decorator to the numpy reference.
",doc/source/reference/routines.testing.rst
5bda487a73b05826f7bc1aaa565075aa70a8c824,"Add a deprecated decorator to avoid cluttering test run output while checking for raised deprecation.
",numpy/core/tests/test_numeric.py,numpy/testing/decorators.py
6c8e325c7210cc03caf5c8f9f34e6ce0dd06dc79,"Add our own atan2 function, as a replacement for buggy implementations (like the MS C runtime).
",numpy/core/src/npymath/npy_math.c.src
2024e81b568be2836bec88ab23615cef3659b3d0,"BUG: npy_math_private was using some endian-related macros without including the necessary header + type fixes.
",numpy/core/src/npymath/npy_math_private.h
661ac79b5e3af1aba0e33bfccba1585cf6e6e9e5,"Add a few more sanity checks for atan2.
",numpy/core/tests/test_umath.py
a173c4740405d8d5e0c482ad0e065f85427018e7,"Add atan2 tests for special values.
",numpy/core/tests/test_umath.py
1319b2ca9c0a7491e5143f2608f444c2b1b7e346,"Fix to setdiff1d (and masked version) + tests (#1133, by N.C.)
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
520872500893f95f1676cdf6715c8d34b32a2449,"BUG: fix C99_FORMATS-related macros definition in both numscons/distutils builds.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py
3297529a67c57db3b7bb7c8d58f8d4829a23baf1,"BUG: fix logic OR vs. bitwise OR.
",numpy/core/src/npymath/npy_math.c.src
0ccbd222ae8e5144931e8ceeaaad77caaa205fac,"BUG: Fix numpyconfig subst dict for the case where isnan and co are not available.
",numpy/core/SConscript
c747e8026dfa067de93d244db8b10f20594bb25c,"Handle nan entries for hypot.
",numpy/core/src/npymath/npy_math.c.src
197d9411d78b405fa9fc9de90c29660af833185c,"Add tests for hypot function.
",numpy/core/tests/test_umath.py
c041bd91885fb28fcce600cb66a77d6ae0493680,"Only use npy_-prefixed functions in npy_math.
",numpy/core/src/npymath/npy_math.c.src
c378f4a0179b9c2a0d700e9239744ebc07a389cb,"Change how we decorate npy_math functions.

For platforms without the necessary math functions, we used to first
implement them by ourselves, and then decorate the math function with
npy_ prefix, whether the undecorated functions are from the
implementation or from ourselves.

This is not always practical, because we may want to use our own
implementation even if the platform has one implementation. Instead,
when we define our own implementation, we directly define the decorated
function, and only decorate functions when we use the platform
implementation.

Example: say the function hypot is available on the platform, but buggy.
If we undefine HAVE_HYPOT, in the former scheme, we would have first:

  static double hypot(double x, double y);

And then:

  double npy_hypot(double x, double y);

But this would clash with the platform hypot. By defining directly
hpy_hypot, and put our implementation there, we avoid this clash.
",numpy/core/src/npymath/npy_math.c.src
2917b5710dc9957b7aa84df074b29a1a0a86476a,"Add a few more math functions we forgot to test at configuration stage.
",numpy/core/setup_common.py
22ff6146e57a1375652700892b3877d28e4fd151,"Remove obsolete comments.
",numpy/core/src/npymath/npy_math.c.src
710154229c40e9c24a84645bbee07e894e725a9a,"Fix ws issues in npy_math sources.
",numpy/core/src/npymath/npy_math.c.src
9ac7f1f98de23bd8d66d61ca0e684c687d7c19c1,"Add version added for npy_copysign + fix doc typo.
",doc/source/reference/c-api.coremath.rst
e84fbd6faf361c7bfe346b6a9ffdffd1ad330114,"Add parisc and alpha to supported cpus. Patch from armin76, fixes ticket #1178.
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
f6554e41f697ac3cd9f7c7a3f35e4850ca3c5f29,"Add a couple of digits to the defined constants in npy_math.h. Because it makes
me feel a tad safer with quad precision.
",numpy/core/include/numpy/npy_math.h
db04d104ec45a1f7893f9d35a4c371eb21f517b1,"numpydoc: add np-* directives
",doc/sphinxext/README.txt,doc/sphinxext/numpydoc.py
a44e1438cc156d24bfdaa80f5007bc16f6e88418,"core : fixed MaskedArray.__array_finalize__ when the mask is full of False (bugfix #1166)
extras : introduced clump_masked and clump_unmasked
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py
4beb657e521ceeb7645dfb84f531c55b8032fa39,"Update the release notes for 1.4.0.
",doc/release/1.4.0-notes.rst
122f95b7aa4af124be2776f32614ef517eafdcf1,"Update new correlation support.

Rename PyArray_Acorrelate to PyArray_Correlate2 to follow the current NumPy
convention when adding new function and keeping the old one for backward
compatibility.

Add keyword to correlate to switch old/new behavior instead of adding
acorrelate, which is not discoverable.

Raise a DeprecationWarning when the old behavior is used - old behavior still
the default, though.
",doc/source/reference/c-api.array.rst,numpy/core/code_generators/numpy_api_order.txt,numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_numeric.py
296cb74355f21e227bb69fd209d4539bd6b6de9f,"Fix typecode for date-time.
",doc/neps/datetime-proposal3.rst
c80006f71a025c1428ea381c26a3f16e27ec14b0,"Fix #728 again.  This time don't use max on a partially-ordered set.
",numpy/core/numerictypes.py,numpy/core/tests/test_numerictypes.py
ec034e7fc2a02c7dd8892b08884d69aca0c99194,"Fixed #1168: more robust NoseTester package name detection (patch by Gaël Varoquaux)
",numpy/testing/nosetester.py
656cca10fa0ad2f504c17d9db25e156bc84ec554,"Fixed #1162: make matrix_power accept lists etc. as input
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
07af346db0370c2709e545fe283123d4d9b2bd97,"Address #1167: faster twodim_base.diag/eye implementation by Luca Citi + tests
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
c3a0fb9711a119ac303d18719cea702efeff408f,"numpydoc: fix some unicode issues
",doc/sphinxext/numpydoc.py
2589ff361c0300e13546409c3fe3aff176c80c2f,"Fix date-time arrayscalars to get copy of __frequency__ information.  Handle __frequency__ metadata separately from other kinds of metadata for faster internal handling.  Fix up pickle so that handling of raw datetime metadata is managed correctly.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/umath/loops.c.src
8ea0648357ae54483f9eed69b55b418b80acdb1f,"Fix argwhere for masked arrays.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
8ba97d80c6b0e2834b92e1d85bb63430917bcc7b,"Improvement to fill_diagonal suggested by Anand Patil.
",numpy/lib/index_tricks.py
ac0c117f877f28290e58c6df4b3f6f1dead26776,"Use npy_fabs instead of fabs in loops.c.src .
",numpy/core/src/umath/loops.c.src
c1c0533f20e349b5e638025ef173aa487b2422c7,"Enhancements to arraysetops (ticket #1133, by Neil Crighton)
",doc/source/reference/routines.set.rst,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/info.py,numpy/lib/tests/test_arraysetops.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
434bc70004d63ed44dd5d793d5eb65b840f39362,"MmmKay... Let's see if complex floor divide can be made a bit more robust against
some of the buildbots.
",numpy/core/src/umath/loops.c.src
85dbd6e23ff845645c668d2f121e56134f662932,"Make complex floor_divide more robust for underflow/overflow.
Add test of complex floor_divide.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
64ae1e828eb59a5b9a507181fdfc8f6b1978dfdf,"Remove debug print committed by mistake.
",numpy/core/SConscript
1ff9787f0ee04cdc23bfd66fcf55cd1350516ac1,"Fix setupscons.py for changed locations of generated header files.
",numpy/core/setupscons.py
392f28f11ff48e7da9fe05c3413dcf7ebc856d4b,"'Install' generated headers for in-place build support.
",numpy/core/SConscript
f67b0fbc9a65f344605b3aab8cc1d74bd920f8a3,"Fix installed location of generated headers.

Headers and .c files generated for the C API for multiarray and  ufunc
are now put in build_dir/numpy/core/include/numpy instead of
build_dir/numpy/core.
",numpy/core/SConscript
5e40a340552cd32705adf40f6bc5eb03a7d2b9ef,"Try another test fix for complex division. The current one works on my machine
but fails on all the buildbots.
",numpy/core/tests/test_umath.py
82772033cb9449f0efaa8fb2cb9f8af5a97073f8,"Fix in-place numscons build.

The generated numpyconfig.h header is 'installed' in the build directory
now, so that one can build C extensions against a numpy built in-place.
",numpy/core/SConscript
65a78ef1a76fd9cceb64ddfd57a8edb5e16bf2c6,"Replace another assert_equal in test_division_umath.
",numpy/core/tests/test_umath.py
48ba48254a8c90322408b15ac45d1f5ab8b5570c,"Use 1 instead of 1.0, hopefully compiler will convert to correct float type.
",numpy/core/src/umath/loops.c.src
c76418144a540f726097912b55fe5ef96b01a882,"Use type extension on fabs.
",numpy/core/src/umath/loops.c.src
b0b3ee4127e88c9ebd017c40160c7c23caa115be,"Fix test of complex division to use assert_almost_equal.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
87cebfdd28df0a2db5d5f4e16062d8ca0a92f27f,"Revert last change. The problem lies elsewhere.
Add test for complex division.
",numpy/core/src/umath/loops.c.src,numpy/core/tests/test_umath.py
b36a2c1327792d96f3c6add184c48007369bb625,"Oops, branches reversed in fix for ticket #1159. Do it right.
",numpy/core/src/umath/loops.c.src
b2c38b0c7d4f4740e5738233ed55cdfe5c38b512,"Make complex division more robust against over/under flow. Fixes ticket #1159.
",numpy/core/src/umath/loops.c.src
fc21cc0f5e6f392a64732e925ba7194a926b3e74,"Remove unnecessary global.c file.
",numpy/core/src/multiarray/global.c,numpy/core/src/multiarray/multiarraymodule.c
144d790100cdbb03ec791d639ee21436ea4c2dc6,"Fix versioning and inclusion to ref. guide in docs for #1132
",doc/source/reference/routines.indexing.rst,numpy/lib/index_tricks.py,numpy/lib/twodim_base.py
f826c7b7f2719a95731da14102d28cc7f3147c01,"Add example to savez.
",numpy/lib/io.py
a3a99e2f84e36ef876094494464e6bcecb7ee0ab,"Add tests for dictionary interface to NpzFile.
",numpy/lib/tests/test_io.py
b9b934cdd9e51c51b377d1682169928e62976376,"More complete dictionary interface to NpzFile [patch by David Warde-Farley]
",numpy/lib/io.py
ae6da8374a055b5dfe738c03c41ff8e001f51180,"Fix diag_indices_from and add test.
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
99df3daf134808115b458d90c4c6fa676a02e6f2,"Fix twodim tests.
",numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_twodim_base.py
133e5c29958ef7090a9ca80665c9436cdcebb7f9,"Add indexing functions by Fernando Perez.
",numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
9397ecd192974fa623492a677d7b2fb2d715c137,"Fix argwhere to work with lists, add tests.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
d597456abd4f7f5aa765667c800a07b1b64fa111,"Fix typo.
",doc/sphinxext/README.txt
b9d10c8c94cd0a27ad133896731848fba54551b0,"Fix typo.
",doc/TESTS.txt
b8bf9648c80013af543f28698312fd76366fe9d3,"Remove mentions of TestCase subclassing and simplify.
",doc/TESTS.txt
bc2a006e82b110892f675c95e3f0f696b61a60b7,"Wrap long lines.
",doc/TESTS.txt
d35eac6f1095727b430ca6416b76a9b43c715c1c,"Address #1146: update docstring standard

In addition, drop mentions of the index:: directive -- we are not using
it currently anywhere, and it does not work with Sphinx as-is.
",doc/HOWTO_DOCUMENT.txt,doc/example.py
251e1db72fe90fb36af9e4eb13a38905cc3f55cd,"Start release notes for 1.4.0.
",doc/release/1.4.0-notes.rst
dcdf0578655160c06d7fcfc4b0fccfb7630a2382,"Add doc for copysign in numpy doc.
",doc/source/reference/c-api.coremath.rst,doc/source/reference/ufuncs.rst
12a7c572cc29dbf1584333594bf549cca8787b55,"Add basic tests for copysign.
",numpy/core/tests/test_umath.py
a1f3eec2b949a152d587b506bc78093746fa3a63,"Add copysign ufunc.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/loops.h
8a36ae9ed4459e1a45a2656afeb862b5c96ce3f6,"Add check_type functionality to numpy.distutils.
",numpy/distutils/command/config.py
9f69bfcd158873090facfba9e60ebb6d5dbb98f1,"Add sqrt(2) and 1/sqrt(2) math constants in npymath.
",numpy/core/include/numpy/npy_math.h
41366bcbdfdfbb653cd8bdac3c59512ecfaf5316,"Fix missing variable def in gfortran tool.
",numpy/distutils/fcompiler/gnu.py
dfefe9591f959d78b886133ae46eb572e404064c,"Update gfortran support on win64

We don't link the gfortran runtime when built with MS compilers: there are some
incompatibilities between libgfortran and dependent libraries (mingwex, etc..)
and the MS C runtime. Instead, we will implement the needed function from
libgfortran and compile it with MS compiler, with the MS C runtime.
",numpy/distutils/fcompiler/gnu.py
e8dda82fe6b30865aa8059df4ba3abaae6568892,"Move npymath sources into subdir, since we will add quite a few files later for complex support.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{
5f8a94fc19a9e2026d54215765e01eed9bcd147b,"Add copysign function.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup_common.py,numpy/core/src/npy_math.c.src,numpy/core/src/npy_math_private.h
8e96f6afadbb5e985442d5821e6f79eb5f795a7b,"BUG: Fix NPY_* macros for endianness (#1154).

I managed to screw them up: they did not actually mimic the gblic
endian.h behavior, that is NPY_BIG_ENDIAN and NPY_LITTLE_ENDIAN should
always be defined, and endianness should be detected by comparison with
NPY_BYTE_ORDER. This needs to be fixed because the behavior of the NPY_
macros was different depending on whether endian.h was available or not.
Let's hope nobody depended on it...
",doc/source/reference/c-api.config.rst,numpy/core/code_generators/generate_numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_endian.h
dfd3b749cb4c423ea4c211044f34d36bc07218ba,"* Bugfix #1129. Thanks to Reggie.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
0a02520361fced5ca1239930a61bef04d06f3743,"Remove duplicate math constant in npy math sources.
",numpy/core/src/npy_math.c.src
58d7b2d07e363a6c82d04639c8022300aee9be96,"docs: more robust version number introspec & qthelp target
",doc/Makefile,doc/source/conf.py
7371ce16b05597e631cdaef4335160f654591635,"Fix ticket #1152. When fewer than count elements are read in fromfile,
return an array containing all that were read even if the resulting
array is empty. No warning message is printed to stderr in this case.

Test will follow, documentation also needs update.
",numpy/core/src/multiarray/ctors.c
e4c0967e830cc11f3279635bab78d556ec2d4f1e,"docs: fix class documentation
",doc/source/_templates/autosummary/class.rst
aa292318e92eee5f99fa5701e4a84ae7bd0bdc4c,"docs: fill in stub Methods/Attributes sections if they are omitted
",doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py
7a661682c1d8209fe17daba26ed0cddc2cb5edf3,"docs: remove forgotten debug print
",doc/sphinxext/docscrape_sphinx.py
692f3f65acd441995f893908d694b3891a67070c,"docs: generate Attributes and Methods sections in class documentation
",doc/source/_templates/autosummary/class.rst,doc/source/conf.py,doc/sphinxext/README.txt,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/plot_directive.py
cefd431502c6b9915611ca46cd8194b7007db0ef,"Update HOWTO_BUILD_DOCS.txt and remove mentions of epydoc.
",doc/HOWTO_BUILD_DOCS.txt,doc/README.txt
077eec4b4f428d1de17ef8373f29618cdf5551b8,"doctest: +SKIP may still be required.
",doc/HOWTO_DOCUMENT.txt
47b4791f4cef766f755d4eddb843b1d73fe3d1b0,"Updates to the documentation standard [patch by Ralf Gommers].
",doc/HOWTO_DOCUMENT.txt
447de9dd5a146b8c008f1f401eb53ce8bd67461f,"BUG: update version_match for recent version of ifort for IA-64 (#1145).
",numpy/distutils/fcompiler/intel.py
87fa5aecfd318157fed0cac274619b7d863381b7,"Merge from doc wiki
",doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/{generalized_ufuncs.rst,doc/source/reference/c-api.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/index.rst,doc/source/reference/routines.statistics.rst,doc/source/user/index.rst,doc/source/user/install.rst,numpy/add_newdocs.py,numpy/core/arrayprint.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/doc/constants.py,numpy/doc/creation.py,numpy/fft/fftpack.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py
cace0d7a0053a87e8d65c1a8db996965277cfd5c,"docs: document that neighbourhood iterator was added in 1.4.0
",doc/source/reference/c-api.array.rst
6cfb1c6c4ef9b5d44ada70d94f1573c8f964c3ac,"Fixed #1140: avoid div-by-zero in iter_coords_get for size=0 arrays
",numpy/core/src/multiarray/iterators.c,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_regression.py
ee57730721f7b101cb9477be50a3d1bb255ebf06,"Add neighborhood iterator.
",doc/source/reference/c-api.array.rst,doc/source/reference/c-api.types-and-structures.rst,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/include/numpy/_neighborhood_iterator_imp.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/multiarraymodule.c
99d20eed236bf9276755ec3df37d6a45668bdcc3,"Refactor init/dealloc code for iterator object.

We separate commonalities between iter object and neighborhood iter, to
avoid code duplication.
",numpy/core/src/multiarray/iterators.c
b9a22d7e42af2d34a563803962d1909c730a1ac9,"Continue building even if svn revision detection breaks.
",setup.py
af7165db93b6f0fd3b6242a871e6dd0069ec8e88,"Add metadata to date-time array scalars.
",numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ndarrayobject.h
aed9ab98d922aa8f5bd76a5bffd71ebfab908c02,"Fix typo in definition of Euler constant.
",numpy/core/include/numpy/npy_math.h
8621c77897f9335bc7656ac31c9a7c25ecf523db,"Add Euler constant to npy_math.
",doc/source/reference/c-api.coremath.rst,numpy/core/include/numpy/npy_math.h
3c3b11f2978a5a92e4f841ebb2ea7f7fc1f1bb16,"Add date-time parsing and printing
",doc/neps/datetime-proposal.rst,numpy/core/_internal.py,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c
f01cc9558b0744d9041263a5c0c92bce7c491c9d,"Fixed #1096: make logaddexp handle infs properly
",numpy/core/src/npy_math.c.src,numpy/core/tests/test_umath.py
bfdb030e6d400a6ff86c15b243a49aec8a3ed8bf,"docs: port documentation from CAPI.txt
",doc/source/reference/c-api.array.rst
728ae673097806a2f018e6f4121e5a260983e9d4,"Continue work on parser for datetime branch.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/multiarray/descriptor.c,numpy/core/src/umath/loops.c.src
90dbad6f5579ef85d58d36b455cef5c0e8730150,"Updates to date-time branch nep.
",doc/neps/datetime-proposal.rst
aa9f4b5081ef83b5f9112e1bf7ea9402fb002404,"Updated datetime proposal.
",doc/neps/datetime-proposal.rst
f2392bc1a8a0275576899fd720cb237c72ec50ba,"Working on date-time...
",doc/neps/datetime-proposal.rst,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/umath/funcs.inc.src,numpy/core/src/umath/loops.c.src
98a09c4658c2fe8e226b45dba26b7aa2602073da,"Put placeholder in for date-time conversion.
",numpy/core/src/multiarray/descriptor.c
a4d3aa8c0e45e46f736cfffc840d26133d8c22b8,"Add support for meta-data to pickling of dtypes.
",numpy/core/src/multiarray/descriptor.c
910d3db2dbe344f35384bebd36e3034757aa13e0,"commit 2e402e05f64912a3568a3e6351f1ffcf3fae601a
Author: Robert Kern <robert.kern@gmail.com>
Date:   Mon Jun 8 11:36:20 2009 -0500

    BUG: Remove division and remainder ufuncs.
    BUG: Fix ordering of datetime ufunc loops such that they come before object loops.
    ENH: Complete ufunc type tests.
    BUG: Do not allow any other type convert to or from a datetime type.

commit d9591ae4a20795b065f8bb191d601e21c9f9964a
Author: Robert Kern <robert.kern@gmail.com>
Date:   Mon Jun 8 11:34:00 2009 -0500

    BUG: Fix printing.

commit 57dfbaf6a8befef505193e7939bc280f726a623e
Author: Robert Kern <robert.kern@gmail.com>
Date:   Wed Jun 3 17:29:00 2009 -0500

    ENH: Expanded PyUFuncLoopObject->obj flag to be used to also express the case that the loop might need to use the Python API even if it doesn't deal with object arrays.
    ENH: Added a benchmark script to time the overhead of ufunc changes.

commit 744fc8501fd9aa9ec6fed6f599600d69f7b2654c
Author: Robert Kern <robert.kern@gmail.com>
Date:   Wed Jun 3 17:25:42 2009 -0500

    ENH: refactor the datetime ufunc tests for debuggability.

commit c6511fbd1bf9074c01c84e54fcce05f12f81dd67
Author: Robert Kern <robert.kern@gmail.com>
Date:   Mon Jun 1 12:37:39 2009 -0500

    BUG: Tweaks to the conversion rules.
    ENH: Tests.

commit 0ed1f15353ca5781c265c021eb71924f158880f6
Author: Robert Kern <robert.kern@gmail.com>
Date:   Fri May 22 18:29:31 2009 -0500

    BUG: Disallow casting between datetime64 and timedelta64.

commit 64f24bc71b009be36a51f6b8d18cc7bed2ea2057
Author: Robert Kern <robert.kern@gmail.com>
Date:   Fri May 22 18:28:50 2009 -0500

    BUG: Correct the order of some of the TypeDescriptions in order to pick up the correct (timedelta,timedelta) loops rather than having the latter timedelta be cast to another integer.
    BUG:Correct the outputs of the (timedelta,timedelta) remainder and fmod ufuncs. They outputs must be plain integers since that is also the dtype of the floor_divide ufunc.

commit 189da6a6e2f3a88de44a43c20130b94c7e09b2d3
Author: Robert Kern <robert.kern@gmail.com>
Date:   Thu May 21 19:02:54 2009 -0500

    ENH: naive stubs of the datetime ufuncs. Casting is still incorrect, though, so the output dtypes are sometimes unexpected and incorrect.

commit f2a8bfb58729cea62e507dae36e7444a7d7bc6dc
Author: Robert Kern <robert.kern@gmail.com>
Date:   Wed May 20 15:34:42 2009 -0500

    ENH: datetime64 and timedelta64 now have ufuncs attached to them. They are basically just copies of int64 at this point in time.

commit f48652a7c701780d9dec2bbfce474c72f0d1c5aa
Author: Robert Kern <robert.kern@gmail.com>
Date:   Tue May 19 19:06:48 2009 -0500

    REPO: ignore some files.

commit 42c0c498cb700cc095e860946561946335470f81
Author: Robert Kern <robert.kern@gmail.com>
Date:   Tue May 19 19:05:06 2009 -0500

    ENH: first light for datetime64 and timedelta64.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numerictypes.py,numpy/core/setup.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_dtype.py
988678cf6d0eb8459588e1067dd3a91468cbaa2d,"Fix installation of numarray headers on Windows.
",numpy/numarray/setup.py
8e1b5cfee127f506e4f8b491538d9834d2c43e64,"BUG#1134: Fix handling of depends arg when not given in add_library.
",numpy/core/setup.py,numpy/distutils/misc_util.py
38c8cd601eb65f3fb665095e1c03aa09538804b2,"Added setmember1d_nu to arraysetops.
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
dfefd500e0975b4bb7211789ee32237f29b60756,"Make sure to always call build_src before build_clib.
",numpy/distutils/command/build_clib.py
d924b3e48d93fe92ea7a308920a7544c6aa6d9ec,"Move comment for PyArray_New at the right location.
",numpy/core/src/multiarray/ctors.c
ca1a49c328b5882d750d7757310bba56467f3565,"Move copy_and_swap into common module.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h
7e5c0ee6dc474b0a83b8d8becde8787e6dfd7c15,"Move more basic functions out of ctors into common module.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/scalarapi.c
d3a42d682b9e1a494e83df39b357d3f99298ed24,"Move one more function from ctor to common.
",numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h
80557498544156ebc099f2a3abb326f2255a749b,"Replace string exception ""multiarray.error"" exposed by multiarray module
with PyExc_Exception. Replace string exception ""numpy.lib.error"" exposed
by numpy.lib with PyExc_Exception. This should allow old code catching the
string errors to catch the standard error types that are now raised.
",numpy/core/src/multiarray/multiarraymodule.c,numpy/lib/src/_compiled_base.c
e8ede105198fe0aac551b69bf7769571fc29e4c4,"Reindent and cleanup whitespace.
",numpy/numarray/_capi.c
eb214ee1b5c178eddee35d83191d767f0a59eaab,"Replace ValueError by TypeError in appropriate places.
",numpy/lib/src/_compiled_base.c
a6d3b8770ca9684ed342e7a4cf7d7af96a2bae1d,"Remove unused reference to MultiArrayError.
",numpy/core/src/multiarray/calculation.h,numpy/lib/src/_compiled_base.c
805a2adce9cd6fce44474b3bff8a2566cc2268a5,"Fix small reference count bug.
",numpy/core/src/multiarray/multiarraymodule.c
fb787328e95d6b692b884f743d068e893a8c74b5,"Remove string exceptions.
Remove macros containing gotos.
",numpy/lib/src/_compiled_base.c
f4e0c12f71a59fd9918c52fe1511442ea360c91e,"Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
0d50ca603a40b8a015e686f5f49619b01088b09d,"Fix errors in examples in docstrings
",numpy/fft/fftpack.py,numpy/random/mtrand/mtrand.pyx
42f4f816a23d430c6d3f471416ef7f7308159d7a,"Add PyArray_Acorrelate function

PyArray_Correlate function did not compute the usual definition for
correlation: it assumed correlate(a, b) == correlate(b, a), and did not
use conjugate for the 2nd argument. As some people may rely on the
current behavior, we add a PyArray_Acorrelate function and acorrelate
python function to implement the usual definition.

Squashed commit of the following:

commit 1e1e0ff38968934825ad64cddd36fcb21e378954
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 18:59:57 2009 +0900

    Refactor [A]Correlate, so that they share most of the implementation.

commit ffbd54ecf539df508363a725ec5f7529f71a9bb4
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 18:35:21 2009 +0900

    Handle conjugate in correlate.

commit df47fddd8e5142758504dece39b0716b8f46434f
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 17:42:38 2009 +0900

    Correlate and correlate tests better shared.

commit f48de4450b05260e9174cf224302a1c8a1f60331
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 17:39:15 2009 +0900

    Add acorrelate function at the python level.

commit a37cc7ff144b0e6b64f8fd0a8cae4c9e561f4a1c
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 17:21:20 2009 +0900

    Update test for correlate - we will test for inverted output for acorrelate.

commit 4140a30f1b6daf95ce2fa8fa7bd26f827b2fcfd1
Author: David Cournapeau <cournape@gmail.com>
Date:   Tue Jun 2 17:19:14 2009 +0900

    Add PyArray_Acorrelate function in the C API.

commit 082f9d4b0205a9a4f0112d8cfd3852b3907b6e09
Author: David Cournapeau <cournape@gmail.com>
Date:   Mon Jun 1 12:04:12 2009 +0900

    Add simple test for correlate.

commit 7179187953d7cb396a7557a418e6fbcaeddc4211
Author: David Cournapeau <cournape@gmail.com>
Date:   Mon Jun 1 11:57:46 2009 +0900

    Invert output array if we swapped input arrays.
",numpy/core/code_generators/numpy_api_order.txt,numpy/core/numeric.py,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/tests/test_numeric.py
e3d65f0e5ad0323894d5171ed2ec7b45e6280d18,"Initial style cleanup of _compiled_base.c
",numpy/lib/src/_compiled_base.c
4cbf4a606670addd2d02a608e30fc0a5222de280,"Fix ticket #1122, out of place declaration.
",numpy/core/src/multiarray/descriptor.c
44d92ec449e7397bdefa49eb901e4bb89eafaa70,"BUG #1100: fix svn version detection for localized environments.
",setup.py
83b35de76104b67b8d4f1f1db04166ac7cf814f1,"Fix typo.
",MANIFEST.in
3fbb8fc98ebd99f7d1c97e8d1a4c290ec2cdbabc,"Forgot to include SConscript files as well as SConstruct in manifest template.
",MANIFEST.in
68bedef931f7a689ac5558e3a3e01f58c2e0e850,"
lib._iotools : 
* add the flatten_base keyword to flatten_dtype

lib.io.genfromtxt
* Use flatten_dtype(...,flatten_base=True) to deal with fields w/ shape

lib.io.loadtxt
* fixed for the case when one of the fields is object

",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test_io.py
a2bf56aaf98ea150079ee5d05da21b18de68252a,"loadtxt: allow shaped dtypes.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
81a26d7fea2f4bf913426ec587ed211bf7c33fe5,"Test fromfile when file is empty.
",numpy/core/tests/test_multiarray.py
557ca1216764e3c708283cc27b1b19daf818df30,"Flatten descr_subscript function.
Clarify error messages in descr_subscript.
",numpy/core/src/multiarray/descriptor.c
49728cd9286b10cbba3dce776fd83aea3e469e4b,"Add test for ticket #1106.
",numpy/core/tests/test_regression.py
ec904b0ff5bda18f4092181f7261a7c6105affbc,"Fix ticket #1106.
",numpy/core/src/multiarray/descriptor.c
174ac9879574f5ae4cfe3ac0f3c89474a706934a,"Fix ticket #1115. I'll add some tests later.
",numpy/core/src/multiarray/ctors.c
24a445b4460b81995b089e92bcc7650c0af23868,"docs: hide plot output admonition title
",doc/source/_static/scipy.css
1b8679f1d35728ccb290419ed04fd1a5b2e72c28,"sphinxext: fix python2.4 compatibility
",doc/sphinxext/plot_directive.py
bc79e936cbec385ba5222e8e2a87c819e4188d11,"mtrand: regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
258398e9d95a2d266912abdfcc09c236736a6a87,"docs: CSS for plots
",doc/source/_static/scipy.css
b9a82a1c4a048d4a7d9adfbd55b7ca643add80b1,"docs: enable plot_directive
",doc/source/conf.py
b95b2b8c0575e7e43e8541f15b25160d62d0af18,"sphinxext/numpydoc: wrap Examples in plot:: if they contain matplotlib example code
",doc/source/conf.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/plot_directive.py,doc/sphinxext/tests/test_docscrape.py
e3377d609ae70ad2bbe312b983a41c8bcae8bd6b,"sphinxext: revise plot_directive
",doc/sphinxext/plot_directive.py
1cf7e661bced0b4ea3ea2e4fa1a4d08dc271e83c,"docstring: fix bug in blackman docstring
",numpy/lib/function_base.py
d3133f1ed2d3c2e56853d14a5b3e5e1f2cff11e2,"Docstring fixes: make some examples to work properly
",numpy/lib/function_base.py,numpy/random/mtrand/mtrand.pyx
260728f7a0010f717a246be1b199b93ea89c02fc,"Remove obsolete comment.
",numpy/core/src/multiarray/multiarraymodule.c
6d85eedf0f05ede8c3b9dca518c37cf5cb3f0bc9,"Move some declarations from arrayobject.h to the module which actually define them.
",numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/scalartypes.c.src
82de28d83da5ebe2f1ec00e9b10b7466686e129f,"Remove unnecessary includes.
",numpy/core/src/multiarray/common.c
87f11ed52e0c825b21cd3b2f9dc55f0f3cf0dc23,"Bug: fix #1111, forgot to consider PPC64 architecture in endian definition.
",numpy/core/include/numpy/npy_endian.h
aa6a99cae36a1340a4f8b45c405bbed259d64fab,"Change test conditions to avoid test for equality with floats.
",numpy/core/tests/test_umath.py
653653af44cb60a2d2840c4a1ce56fea6d5904b2,"Fix setupscons.py so that the version.py is correctly generated.
",setupscons.py
e090679430cb3be55c27d07dfac62f08c0f4ac78,"Comment spot where exception string is inserted in the dictionary.
",numpy/core/src/multiarray/multiarraymodule.c
2506c5cd73a86335f9203720cc08c4e24e92f9b3,"Fix ticket #1109.
Remove the only remaining use of a string exception from the multiarray module.
The string is still in the module dictionary so the  ABI doesn't change,
but none of the c code uses it. Any code that *expects* a string exception
will break, but I regard this as fixing a bug instead of an addition.
There were no other string exceptions used by the code in numpy/core/src.
",numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/multiarraymodule.c
673de279532eaf153ac97449b0c81a5c4b239ef3,"* getdata : prevent unnecessary copies (thx to Eric Firing)
* _Domained/MaskedUnary/BinaryOperations: optimization by preventing the use of np.where and the calculation of domain.
Here's the catch: we're basically cheating. We force np.seterr(divide='ignore',invalid='ignore') before computing the results, then mask the invalid values (if any) and reset the corresponding entries in .data to the input. Finally, we reset the error status. This playing around with the error status may (or may not) fail in multi-thread. It's still faaar faster than computing the domain (especially _DomainSafeDivide) when the inputs are large...
",numpy/ma/core.py,numpy/ma/tests/test_subclassing.py
fef030ee54c9b2bf4ad510766038fa288dce6014,"Fix error message when API incompatibily is detected.
",numpy/core/code_generators/generate_numpy_api.py
a15247171e5f06602fe6ff2c0dcbe27cc44be4aa,"Document the new PyArray_GetNDArrayCFeatureVersion.
",doc/source/reference/c-api.array.rst
93aa731a11abd6a6997f83d5e820b9b7a4025780,"Add the ABI/API version in numpyconfig header for scons build.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in
290e39d71fe9f3e7bc42efabc51716d938425110,"Check C-API version in scons build as well.
",numpy/core/SConscript,numpy/core/scons_support.py
ae84a9a58f0cb911b04713fac8247c463ebff21d,"Improve error messages when ABI or API mismatch is detected.
",numpy/core/code_generators/generate_numpy_api.py
217bea8c917e0a8aa986a96f559555ff32fcb919,"Make error message for ABI mismatch clearer at import time.
",numpy/core/code_generators/generate_numpy_api.py
6afdd2a396bc53cc09f5cc20a00962a37f9eee43,"Check that the runtime C API version is >= builtin one.
",numpy/core/code_generators/generate_numpy_api.py
005cd6f839501b2685d6a54f882364bf12dd13cc,"Add function to return builtin NPY_FEATURE_VERSION.
",numpy/core/code_generators/cversions.txt,numpy/core/code_generators/numpy_api_order.txt,numpy/core/setup_common.py,numpy/core/src/multiarray/multiarraymodule.c
866336de09843829232ab76a6047e892e9fa9a65,"Update C API version: we forgot to update them after adding generalized ufunc and PyArray_Endianness.
",numpy/core/setup_common.py
c3cef2607b05081b3a0f4de6a2ee254e5d31f448,"Automatically detects C API mismatches.
",numpy/core/code_generators/cversions.py,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py,numpy/core/setup_common.py
8845905c2517e39a58d0d9b6287e873116fda932,"Add patch from T. Heller so that numpy arrays can be labeled as returned from functions wrapped with ctypes.
",numpy/ctypeslib.py
727434278079ab9e6f6c50c505f7372379ee4814,"Fix some failing tests due to name-space issues.
",numpy/ma/tests/test_core.py
762282558125d066198f319e5eb8d4f7c3031c4e,"Fix bug with reduceat encountered on mis-behaved arrays which are copied when small enough to fit into standard buffer size.
",numpy/core/src/umath/ufunc_object.c,numpy/core/tests/test_umath.py
11e6b62e236b1fdc3ef9ccd18a86d6c9d3652bfb,"* harden_mask, soften_mask,  unshare_mask and  shrink_mask now return self
",numpy/ma/core.py,numpy/ma/tests/test_core.py
f96cbf43d09d55bbc2aa3ca7ccc2bec44677262b,"More hacks to circumvent python header namespace pollution.

IEEE C99 macros like isinf are checked for python 2.7 and above - do not
test for them if the corresponding configure macros are detected in
Python.h
",numpy/core/setup.py
8ec0720781e69af0fa998dcd71c030115716ab31,"Use env variable to set up separate compilation.
",numpy/core/SConscript,numpy/core/setup.py
4fb4921b8245ca02ae1a4234f671d0ac53bae5a2,"mingw64 workaround for signal handling not needed anymore - mingw-w64 supports it.
",numpy/core/include/numpy/mingw_amd64_fenv.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/distutils/mingw32ccompiler.py
dd63849d8c97e7dcf963c587d91711f0dfeeea40,"Fix separate compilation with distutils.
",numpy/core/setup.py
cef776f141a1e11dd8efe56b6861f7a694e8b0d4,"Fix missing declaration.
",numpy/core/src/multiarray/arraytypes.h
3fd9be724f084a5201f1e0c4d528cbd87a132743,"Fix declaration of Signal handlers on windows.
",numpy/core/src/multiarray/multiarraymodule.c
13cc728b8e7f12757398afee325e597469d4abcc,"Do not declare array variables in single file compilation mode - MS compilers don't like them.
",numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/getset.h,numpy/core/src/multiarray/methods.h
f97b16539903d9cdf18fedde80d8c70e629f7935,"Include arraytypes.c early for the no  separate compilation case.
",numpy/core/src/multiarray/multiarraymodule_onefile.c
09bc3179ef276175b673ad1d08656d11ee98cf69,"Fix compilation with MS compilers: they don't handle array declarations without s size specifier.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/src/multiarray/scalartypes.c.src
ddd0a6ac92572a6e6016f5fbc9fda7eaedc7b114,"Fix mispelled separate compilation macro.
",numpy/core/src/multiarray/buffer.h
fbe79707df396a5b0bb666ccd8658a80d78f6834,"Forgot to include buffer header in buffer sourcefile.
",numpy/core/src/multiarray/buffer.c
91d2fa9f22f7c2fb6592d63802fcade111c8bf09,"Move array_any_nonzero to buffer.c, where it is used, and mark it static.
",numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/number.h,numpy/core/src/multiarray/sequence.c
d2cab0b4e6c0cd7dedac41a5bb0a41c65a272143,"Fix double definitions in config headers.

The files were generated using the 'a' mode for opening, which does not
make much sense anymore. If the configuration is re-run, the config
headers should be generated from scratch.
",numpy/core/setup.py
08c5c5dfcc9bffc04c6c8eeea701f9ed6b0c8863,"Fix build on platforms requiring _signbit.c
",numpy/core/setup.py
d003bc4204d855168110959f2983a52b8b729b27,"Fix mathlib check.
",numpy/core/setup.py
5f74e6497df1d77ace9dc7b1a3b7867a41a2c0ab,"Remove mathlib broken test, just use a standard check_func on exp.
",numpy/core/setup.py
7f5efe309720501fbfa2cca886e47cb97e72f35b,"Fix typo in multiarray sources.
",numpy/core/setup.py
e4a8760204bdd8e0bf4bba49de44b05519555947,"Fix mac os X build with numscons.
",numpy/core/SConscript
e0760b4487a2f6fe517587d543b16601fec93b00,"Forgot to include ctors header in scalarapi.
",numpy/core/src/multiarray/scalarapi.c
a0419264c99ca335c3fd80978a2561ce9fdab4ef,"Put buffer protocol in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/buffer.c,numpy/core/src/multiarray/buffer.h,numpy/core/src/multiarray/multiarraymodule_onefile.c
ba7d1cb99e01d2341dd0bcd256ee4fc69edd4865,"Put PyArray_Resize in shape source file.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/shape.c
95d215f4c7d638bd339f44bb4ed72801b7fda74d,"move flags related function into flagsobject.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/flagsobject.c
1f5d4638bd9aabce03c5f275cdcb389ca46a50d1,"Move some more scalar-related functions from arrayobject to scalarapi.c
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/scalarapi.c
2c9a8fc7c1e85378324a73765a17cdd064f75ee0,"Tag PyArray_IntTupleFromIntp as undocumented.
",numpy/core/src/multiarray/conversion_utils.c
9ddcccee276913092f89143faca2f33de5262278,"Put misc conversion into conversion_utils module.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/multiarraymodule.c
6376efdaf4d3e0f82b2f91af08e5e4b7b31cc15b,"Put conversion utilities for PyArg_ParseTuple into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/conversion_utils.c,numpy/core/src/multiarray/conversion_utils.h,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule_onefile.c
46dafb69d4c365bcf21976dcd5aac101d2a629a5,"Put special functions for reference counting for arrays of objects in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/refcount.c,numpy/core/src/multiarray/refcount.h
ee4e85359fb29556a42568663b1a1b9b13538637,"Move PyArray_GetPriority out from arrayobject.c
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c
27794c162ca84d20e8a6d503d3ca7548098c5600,"Add comment for multiarraymodule_onefile.c
",numpy/core/src/multiarray/multiarraymodule_onefile.c
98fb552a4315a22c0b1fa52adc501993a3f31666,"Add `diff` to the namespace
",numpy/ma/core.py
38f414a4a098f4236a2358fdbfddb201b5e0c785,"Warn if site.cfg specifies invalid directories.
",numpy/distutils/system_info.py
c4bfd2ba788cb87339e363e0c0d8762bd2c6d7f7,"Revert back to one file compilation.
",numpy/core/SConscript,numpy/core/setup.py
6ad5e7cda74b5f22db5201c9b306bc641dca4264,"Do not harcode visibility macro, enable it for gcc 4.
",numpy/core/SConscript,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/scons_support.py,numpy/core/setup.py,numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
9d309955e758e6d699565e09a697535a5237431c,"Fix ucsnarrow conditional compilation.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/scalarapi.c
719164150c82915955cddd0309577bd156da099e,"Define separate compilation define in config.h as well, and use config.h early when needed.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src
19d51015ea71709bf94422cbecd409a8cd079998,"Handle platforms without Py_UNICODE_WIDE defined.
",numpy/core/setup.py,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/scalarapi.c
ec0b694d5816854331e5ec21afc55fcb13411e87,"Fix separate/batch compilation.
",numpy/core/SConscript,numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/calculation.h,numpy/core/src/multiarray/getset.h,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/methods.h,numpy/core/src/multiarray/multiarraymodule_onefile.c,numpy/core/src/multiarray/number.h,numpy/core/src/multiarray/sequence.h,numpy/core/src/multiarray/usertypes.h,numpy/core/src/umath/loops.c.src,numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umathmodule.c.src,numpy/core/src/umath/umathmodule_onefile.c
35e0062e0604dc3a7496507e82572954aa350e69,"Add recursive header inclusion guard for arrayscalar header.
",numpy/core/include/numpy/arrayscalars.h
f38e2e73b03b0459f1426175b7eb894e29ec172d,"Make sure every source file of umath module include config header.
",numpy/core/src/umath/ufunc_object.c,numpy/core/src/umath/umath_tests.c.src
5a62914a5c45c4c31366c3afa67159aa0e034903,"Make sure every source file for multiarray module include config.h
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/global.c,numpy/core/src/multiarray/hashdescr.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/numpyos.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/sequence.c,numpy/core/src/multiarray/shape.c,numpy/core/src/multiarray/ucsnarrow.c,numpy/core/src/multiarray/usertypes.c
081d0ce44412700387b951d0f7384e379e57ccc1,"Fix global variable declarations.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/multiarraymodule.c
58115d3fe912dc167976ddc4a8bfbfdbe9785b76,"Clean up a bit the setup.py for numpy.core.
",numpy/core/setup.py
2515eb971cc4760c6de8d6b3aa71fada1dc08dff,"More arraobject.h inclusions removed.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/flagsobject.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/scalartypes.c.src
ab0bacd56d84b44c8bd8c81700d87384093b9164,"ctors module now builds wo including arrayobject.h.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/sequence.c
69f5f379aef8db40c4c2b76307d3a09139daae2c,"Put code to register new user types in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/arraytypes.c.src,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/usertypes.c,numpy/core/src/multiarray/usertypes.h
1f56580f0a5d818c865a83f334a4df385e774634,"Move subscript iterator in mapping protocol.
",numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/iterators.h,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
8b64517ee73dfd41d8a661adb1258790e0025eec,"One less arrayobject.h inclusion.
",numpy/core/src/multiarray/shape.c
2ba23bd8f48b9000121e825f09002a9668954adc,"Move _array_fill_strides into ctors module.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/shape.c
d1666f143c963bbc0296235e21dbca8f883121d0,"More arraobject.h inclusions removed.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/common.c,numpy/core/src/multiarray/common.h,numpy/core/src/multiarray/convert.c,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/ctors.c,numpy/core/src/multiarray/ctors.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/item_selection.c,numpy/core/src/multiarray/iterators.c,numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/number.c,numpy/core/src/multiarray/scalartypes.c.src
7ac340dda6561d63faf407da24aca5d1af8dc1b7,"Put scalartypes declarations in separate header file.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/convert_datatype.c,numpy/core/src/multiarray/getset.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src,numpy/core/src/multiarray/scalartypes.h
509a74624f419a9ec00e244e5a2efbc5451b4ca2,"Move arraytypes-related functions declaration into separate file.
",numpy/core/src/multiarray/arrayobject.c,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/arraytypes.h,numpy/core/src/multiarray/descriptor.c,numpy/core/src/multiarray/descriptor.h,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/scalarapi.c
41d4199064fbfdd7a507ff492739b3c46d56f2c3,"Put calculation in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/calculation.c,numpy/core/src/multiarray/calculation.h,numpy/core/src/multiarray/methods.c,numpy/core/src/multiarray/multiarraymodule.c,numpy/core/src/multiarray/multiarraymodule.h,numpy/core/src/multiarray/number.h
5249c44042a3429b409b3f89dc21366aee49cc31,"Move NumericOps into number protocol.
",numpy/core/src/multiarray/arrayobject.h,numpy/core/src/multiarray/number.h
4fe769ebf1a4a71fb90ac7e37a747aadc07052ea,"Add API for datatype conversion.
",numpy/core/src/multiarray/convert_datatype.h
7275de30e7ed34b8037511dae147e4346815b4d7,"Put scalar API in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/multiarray/scalarapi.c,numpy/core/src/multiarray/scalartypes.c.src
283071ed21358a0072a4b7814db653d06a44638e,"Fix array_ass_item definition for python 2.4.
",numpy/core/src/multiarray/mapping.c,numpy/core/src/multiarray/mapping.h
a66b35824b62ab5226df13c02ae37913753c8f63,"Put umath source code into its own directory.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/{umath_funcs.inc.src,numpy/core/src/{umath_loops.c.src,numpy/core/src/{umath_loops.h,numpy/core/src/{umath_loops.h.src.unused,numpy/core/src/{umath_ufunc_object.c,numpy/core/src/{umath_ufunc_object.h,numpy/core/src/{,numpy/core/src/{
a77eaf94e297531b59c7c63d8528aac65054e0e8,"Put multiarray modul sources into separate directory.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{arrayconvert.c,numpy/core/src/{arrayconvert.h,numpy/core/src/{arrayconvert_datatype.c,numpy/core/src/{arrayconvert_datatype.h,numpy/core/src/{arrayctors.c,numpy/core/src/{arrayctors.h,numpy/core/src/{arraydescr.c,numpy/core/src/{arraydescr.h,numpy/core/src/{arrayflagsobject.c,numpy/core/src/{arraygetset.c,numpy/core/src/{arraygetset.h,numpy/core/src/multiarray/global.c,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{array_item_selection.c,numpy/core/src/{arrayiterators.c,numpy/core/src/{arrayiterators.h,numpy/core/src/{arraymapping.c,numpy/core/src/{arraymapping.h,numpy/core/src/{arraymethods.c,numpy/core/src/{arraymethods.h,numpy/core/src/{,numpy/core/src/{arraynumber.c,numpy/core/src/{arraynumber.h,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{,numpy/core/src/{arraysequence.c,numpy/core/src/{arraysequence.h,numpy/core/src/{arrayshape.c,numpy/core/src/{arrayshape.h,numpy/core/src/{,numpy/core/src/{
1f37ab2935d98654a57f139bb5ef8ee8fb0f9832,"Enable separate compilation for umath module.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/setup.py,numpy/core/src/{umath_loops.inc.src,numpy/core/src/umath_loops.h,numpy/core/src/umath_loops.h.src.unused,numpy/core/src/{umath_ufunc_object.inc,numpy/core/src/umath_ufunc_object.h,numpy/core/src/umathmodule.c.src
3d730002b1428cce568bcf6fcda0e0df76c5d960,"Put more type convertion code into array descriptor file.
",numpy/core/src/arrayconvert_datatype.c,numpy/core/src/arraydescr.c,numpy/core/src/arraydescr.h,numpy/core/src/multiarraymodule.c
14b9b242818b5e5ab58ec5b2c688410d60b9c918,"Put item selection code into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/array_item_selection.c,numpy/core/src/multiarraymodule.c
32a5fe9739bf34b1d6ff071dbb12968666831718,"Put shape manipulation code into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayconvert.c,numpy/core/src/arrayshape.c,numpy/core/src/arrayshape.h,numpy/core/src/multiarraymodule.c
96a1f08f4f92f8a3dc39979f440c41e0f4fa018a,"Put more code from multiarray into ctors.c
",numpy/core/src/arrayctors.c,numpy/core/src/multiarraymodule.c
0ef77c9c7e60371088f76621f8785f55cf5f25e9,"forgot to move comments attached to ctor code.
",numpy/core/src/arrayctors.c,numpy/core/src/arrayobject.c
695bf8bcd07f9bb5670a90c6e3f72c9c33a6bd27,"Put object type conversion into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayconvert.c,numpy/core/src/arrayconvert.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
bf210525044dde154644498940e754f67f2aca43,"Put casting functions into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayconvert_datatype.c,numpy/core/src/arrayconvert_datatype.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
f3e2b283aaec79f6ae8516c03fe91c11bcd0ecb0,"Put array construction functions into separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayctors.c,numpy/core/src/arrayctors.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
2c1ac5440c3ab4d673498124c0e7608c4b3c5c1c,"Put array methods in separate file.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/arraymethods.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
98389353b020db90e90e00da4bdf19e18f942cba,"Put sequence protocol in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/arraysequence.c,numpy/core/src/arraysequence.h
91be9a9ace3e532a40a93f0c00d71fa34adce009,"Put number protocol and array attributes get/set in separate files.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arraygetset.c,numpy/core/src/arraygetset.h,numpy/core/src/arraynumber.c,numpy/core/src/arraynumber.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
efd5b424216fb0ce6aa3c7529d8c3e1d5ae34116,"Put mapping protocol in separate file.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/arraymapping.c,numpy/core/src/arraymapping.h,numpy/core/src/arrayobject.c
fe1f93464b6115ad441bd328ca87f78f2852de49,"Forgot to tag PyArray_DescrHash with NPY_NO_EXPORT.
",numpy/core/src/hashdescr.c,numpy/core/src/hashdescr.h
a8f8a796b0596426c0a6ebd75642725020452374,"Fix numscons build for platforms without wide character unicode support.
",numpy/core/SConscript,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.c.src,numpy/core/src/scalartypes.c.src,numpy/core/src/ucsnarrow.c,numpy/core/src/ucsnarrow.h
44ff04765d36fe39859452aace91480f74292905,"Put array iterator code in separate source file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayiterators.c,numpy/core/src/arrayiterators.h,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h
64aa641a8a17097bfd7fbc686245eb5970ef21bd,"Put array descriptor in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arraydescr.c,numpy/core/src/arraydescr.h,numpy/core/src/arrayobject.c
4ef4b9f9e623af512745e8c3976d6cda05cda2f1,"Put PyArrayFlagsObject in separate file.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/arrayflagsobject.c,numpy/core/src/arrayobject.c
4c2a9af485cd64335f82dac9756a856da9adee16,"Compile numpyos.c separately.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/arraytypes.c.src,numpy/core/src/numpyos.c,numpy/core/src/numpyos.h,numpy/core/src/scalartypes.c.src
065b457b7e52a26bb3fca919b0fb0f12e1c944d3,"Enable separate compilation of existing files for multiarray module.
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arrayobject.h,numpy/core/src/{arraytypes.inc.src,numpy/core/src/hashdescr.c,numpy/core/src/hashdescr.h,numpy/core/src/multiarraymodule.c,numpy/core/src/{scalartypes.inc.src
7a4e556da4233235d61c67407b103d4a944026e1,"Tag any function/typedef/variable exported through the C-API with NPY_NO_EXPORT instead of static.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umath_loops.inc.src,numpy/core/src/umath_ufunc_object.inc
2d290567e93891fa604b724d1eadcabb527307c6,"Added a couple more char* -> const char* conversions
",doc/swig/numpy.i
ca56287dfee31865bee6932ac659c6e2479cb39a,"Make sure API/ABI version are formated with leading zeros.
",numpy/core/setup.py
2d24df5b14f078ce6a3e70762955976ac3ba796a,"Do not use txt file for C API/ABI versions anymore, and display a warning instead of exception when mismatch is detected.
",numpy/core/cversion.txt,numpy/core/setup.py,numpy/core/setup_common.py
24b284bc85570e113b0d95c428abcc44dbec104e,"Raise an exception when API mismatch are detected for the C-API.
",numpy/core/setup.py
9355fcd9f4b84b77b14cd4cebc8a70c325a5bf11,"Add code to record/read C API versions + their checksum.
",numpy/core/code_generators/cversions.py,numpy/core/code_generators/cversions.txt,numpy/core/code_generators/genapi.py
38a8c336bfea9cbe98a734db687afe2a48ae768b,"Add a function to compute a checksum of the exported functions in the C-API.
",numpy/core/code_generators/genapi.py
afd1f833dc84066ceb062cd306903376928e3471,"Set C-API version numbers from a txt file, into the numpyconfig header.
",numpy/core/cversion.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py
3af85933cfc992430350fc1daaa991720b70ed82,"Make testing.rundocs to raise error on failures; otherwise Nose hides them

Also drop Python < 2.4 compatibility.
",numpy/testing/utils.py
0d5e8c8e97e3075b1ccb2c257c998b63fad80903,"Fix formatting of complex coefficients in poly1d
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
1a613e1c460d2e7756724b7e5c638c95519ee498,"Fixed #1095: make polyint work well with object arrays
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
653d2b27fbe3771d7b669da0aec62a0cdb0654ac,"f2py: ignore concatenation of strings in initexpressions.
",numpy/f2py/crackfortran.py
8859b7ec2988f640e72da85db8aa56149e0a44f8,"Remove print statements which should not have been committed.
",numpy/distutils/command/build_ext.py
4418fa67db0f807405f8f326ddc50c7ac47f247c,"Move is_bootstrapping outside scons command, may be useful elsewhere.
",numpy/distutils/command/build_ext.py,numpy/distutils/command/scons.py,numpy/distutils/misc_util.py
b1873ad41a86e21ab51e7f08208241f0e2d1b397,"Add x86_64 arch flag if gfortran supports it.
",numpy/distutils/fcompiler/gnu.py
f8d813298658e1009d7cb7d28b116d5ed78f0d39,"Check SIZEOF_ declaration from python.h header, and do not define it if it is already defined there.
",numpy/core/setup.py
621f53b0234e638c59500d8b8e4f7be78998b099,"Make _can_target a function.
",numpy/distutils/fcompiler/gnu.py
0d18cd71f1be611a3a5c5cf0fe4ce2a7aa076188,"sphinxext: use real RST references for bibliographies, and add suitable links for Latex
",doc/source/conf.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py
e427f7a166b83e6523248eaddabd0742f9d329e9,"Don't use paver html target to avoid using a numpy which is different than the one installed in the bootstrapped venv.
",pavement.py
706640dceec3ba4e518b979a898b5e4ce0be5539,"Clean up paver.py.
",pavement.py
37abe7a2f64dbd5dffee0d5abd5784b15191d9a5,"Remove tabs and unnecessary whitespace.
",numpy/core/setup.py,numpy/core/tests/test_scalarmath.py,numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/misc_util.py
9c5ec967cf50b3c498980650bf6a132b1516171a,"Regenerate mtrand with cython-0.11 on David's urging.
",numpy/random/mtrand/mtrand.c
3d4610cd648fc518890e66b0b28856dd9f209c16,"Rebuild mtrand.c with cython and change the script to use cython.
This is needed because some VC++ compilers can't handle long strings.
",numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/mtrand.c
9d79dfef3a5d0c814cd65e946ad5b413e1165def,"docs: fix inverted test in makefile
",doc/Makefile
1d6ed796d0e7f32ba6af4a5e7d970fca79fc7168,"docs: don't use autosummary_generate for Sphinx < 0.7
",doc/source/conf.py
cdf0be318539e771b7ce535175ba7fd0032495be,"Deprecating sphinxext/autosummary in favor of the version in Sphinx >= 0.7
",doc/Makefile,doc/source/conf.py,doc/sphinxext/autosummary.py
48d27be1a9353ed49a8afc6ac855eb08dd993abe,"Small cleanup of memmap code.
",numpy/core/memmap.py
430647c0dbdde130f0747c1fa2b1939d33e8f9b6,"* fixed notmasked_edges when no data are masked
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
d673c50ccfe30f0b97de2d853e20fdc191a3fe30,"Fix memmap for python >= 2.6 by making offset multiple of
ALLOCATIONGRANULARITY.
",numpy/core/memmap.py
2fbfbcf3ec688539f7dd30e0a3afafa7929b213b,"Small style cleanup.
",numpy/core/memmap.py
ae58b00fee1839ba7e21ddfd7ebbf87f732caeb5,"_arraymethod : fallback when a method is called as MaskedArray.method
",numpy/ma/core.py,numpy/ma/tests/test_core.py
5e0e9559b9ec679b6902129bef46c84707abf865,"Fix ticket #1053. Basically the patch from Sturla Molden.
",numpy/core/memmap.py
5b466f329c536c2535ba867ff536062fcbaa5b60,"Make test_histogramdd_too_many_bins a bit clearer.
",numpy/lib/tests/test_regression.py
d1701c6e988329368d486675b0c190643b6f5ee0,"Make histogramdd documentation a bit clearer.
",numpy/lib/function_base.py
e02bf24487e84fb7bbb6bb2ffc25d5833f5ae30d,"Fix ticket #928
",numpy/lib/function_base.py,numpy/lib/tests/test_regression.py
85eb59a8b2625296310bb8628177792cc506a509,"Simplify regression test and make error message for oversized array more
informative.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
bc936c7253108e2e2d39860841821ec128922c8c,"Nuke obsolete register keyword in c sources.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ucsnarrow.c,numpy/core/src/umath_tests.c.src
942b09dec6f5859bc8f058b638fada06c1de3322,"Fix missing 'n' in test.
",numpy/core/tests/test_regression.py
1a5281d92824bef01f3c4af8a8f343f5148041dd,"Refactor PyArray_OverflowMultiplyList to make it simpler.
",numpy/core/src/multiarraymodule.c
1287312c87ec63d1c050d8786605260230e743dd,"Fix spelling.
",numpy/testing/utils.py
97ffd1eb580f2a1969133ce56e324d18ff1608a9,"Fix ticket #1080 and add regression test. Do some small cleanup in the process.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
2194af203612fd5790f9f9673e007ca411ed029a,"docs: tweak latex build to recognize U+00A0 as a non-breaking space
",doc/postprocess.py,doc/source/conf.py
3b1e1e3e6f3589d562d70b3cefff51f1666f6427,"Fix mathlib test.
",numpy/core/setup.py
42fa00eca53817fc744cc659f3bc921c079fa65d,"Replace try_run by try_link test for mathlib - does not test for IEEE denormal anymore, but nobody was able to give a rational for it anyway.
",numpy/core/setup.py
b924a621e952570c359892bc335d4ef34a5e6a14,"Fail early when toolchain is broken on target platform.
",numpy/core/setup.py
826add2f128029d6afb85e44de224f3d59837f6e,"Use environment instead of config files for superpack arc config: simpler and more reliable.
",pavement.py
9fed0f5ce301cdaea1b5b9eafdce42b7a2eeb2b1,"Depend on sphinx 0.6.1 now for building numpy doc.
",pavement.py
30bf5ec780ab7145dee1dc12e7e121178b763573,"sphinxext: autosummary: don't insert nested paragraphs in the table
",doc/sphinxext/autosummary.py,doc/sphinxext/setup.py
bdb5c3e5fa87cb0b67228a944861c1e34df1648a,"Improve README.txt.

Remove redundant installation instructions (already in INSTALL.txt).
",README.txt
7097f5ae56bb977f993f208122e1e06b5c6081a5,"Mention nose for requirements.
",INSTALL.txt
5623a7c22bcfd5c5b92685010cace41f234735ab,"Revert using setuptools svn revision, it is broken.
",setup.py
fe238812c1c2f00ea518372ba454ea2573829891,"HACK: Make sure we use python.org interpreter to build the mpkg in paver
",pavement.py
d215183d0d2cfc49973bc4bc73555c2b112e546e,"sphinxext: convert the Sphinx extensions into a `numpydoc` package that can be distributed separately
",doc/sphinxext/MANIFEST.in,doc/sphinxext/__init__.py,doc/sphinxext/autosummary.py,doc/sphinxext/only_directives.py,doc/sphinxext/plot_directive.py,doc/sphinxext/setup.py
9a63ebd48281c994c39c374b5cdc960acb82963c,"sphinxext: Sphinx 0.6 compatibility and deprecation warnings
",doc/postprocess.py,doc/sphinxext/autosummary.py,doc/sphinxext/only_directives.py,doc/sphinxext/plot_directive.py
745ebc091aa6e761f9180964ae2c60e1caa92f9a,"Remove missing import.
",setup.py
d8fc4ad412c468a92660a8bb6d8b6615ac4292ff,"Fix missing distutils log import .
",setup.py
a4c5e55aa74ca1ac28b0451d0e092991b8d6abca,"Fixed #1039: ignore sort order properly in find_duplicates test
",numpy/lib/tests/test_recfunctions.py
cdf6562c5552369e363d9811bf45f5ab15f0ff80,"Fixed #852: avoid filename clashes in savez, by using a secure temporary file name
",numpy/lib/io.py,numpy/lib/tests/test_io.py
3073f2c5afe8260bf62d5056fd22ef8686465663,"Remove leftover from when I copied the paver file from samplerate scikit.
",pavement.py
0b0dbdf45032ad170fbcb2068a95b34326a4a523,"Update paver script file doc + TODO.
",pavement.py
d7f1ae929c99c71dee6a7a950937608ddbe92fce,"Fix another docstring formatting
",numpy/testing/decorators.py
e89b62aaaacebe1ba23bcbb6f84bea20c0f12be2,"Fix docstring formatting (blocks doc build)
",numpy/testing/decorators.py
8a93617e2a4fdf1d46ec8f0c7cc10c3c07f3ca98,"Move routines.testing.rst to the correct place
",doc/source/{
8a455cbdae39233b18758d064f5959ae56e4922b,"Enable docstrings for fmin and fmax
",numpy/core/code_generators/generate_umath.py
ae002bbd014594ff41dd922641c69ac7559685a7,"docs: use short X.Y version, and retaining any .dev suffixes
",doc/source/conf.py
341e1e1a9180ca44f530b8878f66169263d38d47,"stub for generalized ufuncs documentation
",doc/source/reference/generalized_ufuncs.rst,doc/source/reference/index.rst
a6098d4af43dd6cce270581bbe4d012725cb75fb,"Simplify and fix the latex build in paver.
",pavement.py
ffaeb861538c7fa41077e51a70e6b52c7b6ee0a1,"Add a task to write notes and changelog once the installers are ready.
",pavement.py
c7927eb658b9616b42368e9496cb0304bdd2e4ae,"Copy tarballs and superpack into release dir.
",pavement.py
a7499c34e30559ad2ff8f1a103fea5348a99440e,"re-enable correct dep rules for superpack target.
",pavement.py
6e80c9e69681fb688cff602508b3271ff6b0a87d,"Abstract superpack installer name.
",pavement.py
a73581f20f21e969b45c72e56611d5a8865f478f,"Document global vars in paver.
",pavement.py
06a66656d7beff62d1e976b5fb876488951c445e,"Do not import numpy.distutils in pavement script - not needed.
",pavement.py
93dc1331b0190045f96138d5716c009a02d67ae5,"Do not detect universal flags on platform != darwin.
",numpy/distutils/fcompiler/gnu.py
0dc3ac827934f3cdc0f5f06ca1eff69684fd4830,"Fix tab issues in paver file.
",pavement.py
8774fa4996ea57d6b81b7fc30204a0ddd6dd7782,"Add the x86analysis.py script to check instructions set in win binaries.
",tools/win32build/misc/x86analysis.py
f29ca7fe5bc789bce868f26f53f1ef037c360a1c,"BUG: Fix goftran universal flags settings (#1067).
    
Arch flags were detected and set for both linkers and compiler. Since they both
used the compiler_f90 as the underlying command, arch flags were added twice to
the compiler command for universal detection, which rendered the verbose output
of gfortran useless.

",numpy/distutils/fcompiler/gnu.py
577d6d68299ead0fe34c1cfe36a0a91d7e888b54,"Regenerate mtrand.c
",numpy/random/mtrand/mtrand.c
7cc010896164ebca8f064989e9db8482ec507354,"Add darwine config.
",pavement.py
52fb78d4ed64acd6d0d64a10a7ac2c21ab5c18e0,"Use setuptools svn rev parsing, should be more reliable ?
",setup.py
313f272c1fd0ca1cef6f1347cb89d32cf760c1a1,"Superpack can now be built from wine, bye bye windows pain.
",pavement.py
644588a77e2d320375ec96a3c8f426317dad7c06,"Add tasks to build arch specifics wininst.
",pavement.py
5864bd2297f23d627d10298b0c296df0e6be7dd0,"... and re
",setup.py
b60cd1424b82a9db8fd8ee1652a055b1c53503ba,"Forgot to import subprocess.
",setup.py
5bb1aa51bac49c81fd7cd2c2d963d6de41683902,"Fix svn version detection.
",setup.py
6b942481c52f6d2e88774fe4c18c3aed64cd7ee5,"Add some doc to the paver script.
",pavement.py
b4be5ddb4467ee212359418ed2684ef7edf46ba8,"Fix eigenvalue tests, the eigenvalues needed sorting.
Fix test_nanmin_alnan_on_axis, use assert_array_equal.
",numpy/lib/tests/test_function_base.py,numpy/linalg/tests/test_linalg.py
bc70602d5fb6adcf3cfe19883aeac72ef015d3ae,"Add pdf task + full dmg build for paver script.
",pavement.py
310db3a84f5761ee93b244217bb6db15877ae69a,"Update paver script such as one can create the fancy numpy dmg in one command.
",pavement.py
83b74f286243ff6822e8c12eae67d3ae12805a76,"Add a bdist_mpkg task + fix setup import issues.
",pavement.py
46a5e2b4a5dd06339b8c23729c4218d04cb04959,"Pick up version from numpy instead of hardcoding them in conf.py/
",doc/source/conf.py
a70c4833629dcacddcdca118f45fc95e3dd4739d,"Fix spelling mistake in version module gen.
",setup.py
89d874eaa8a0c95fde53f705a9b17706f5567cf5,"Add simple .dmg build to paver.
",pavement.py
cc9a44681ab7bf55abdf10819bc52fefc8f8f71c,"Fix metadata incorrectly defined as tuples.
",setup.py
5e041cb9ef2547ce40a20cd7e6c20fce64391a4e,"Add svn parse for the full version.
",setup.py
914bb15da83d0217f8162fbc2c599ec3f7e36b77,"Mention that version.py file is now generated.
",setup.py
a2ac985620c7c681861cd856068f57d272d9d03f,"Generate the version.py file, to help keeping the version synchronized everywhere (doc, paver, etc...).
",numpy/version.py,setup.py
c253b72d38b0e1cc51a89c50398a0a1262c40043,"Use global for distutils metat-data, so that we can pull them from paver.
",setup.py
db3320c49ba7f7cd3f7966d34d7b229308ff88e3,"Add wine-based bdist_wininst installers.
",pavement.py
743ac260db51b1ba61b1dc2bed1cde85f85b11d6,"Bypass paver sdist.
",pavement.py
a293cacecf4d3e3819821d2ef737d825e5ba3d73,"Clean egg-info too in paver.
",pavement.py
57fc6f53283986d221651a434145ea3510f07040,"Add bootstrap task.
",pavement.py
958f4a4e7c6c66e7509c745f77e1826e3159df4f,"Add task to build html doc.
",pavement.py
874a4055ec84ea9886abc4252fe994c9cf5ac168,"Start a paver file to help for release purpose.
",pavement.py
94b57c787a4438d8b58e8b600b6295931983a5b5,"Fix ticket #1058. Thanks to Russel.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
da8312aed0218cb44a856dfeb73a06d224a29ff4,"Fix nanmin, -max etc. to handle axis argument correctly.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
7b751f66c7feb71646f0c2540aca2e5e67cd5db5,"Merge from the doc wiki
",doc/source/about.rst,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.array-manipulation.rst,doc/source/reference/routines.fft.rst,doc/source/reference/routines.rst,doc/source/reference/ufuncs.rst,doc/source/routines.testing.rst,doc/source/user/c-info.how-to-extend.rst,numpy/add_newdocs.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/doc/constants.py,numpy/doc/misc.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/fft/info.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
940a7d3b4e6398a742873347a2f3c605ceffe481,"sphinxext: autosummary: allow trailing explanations in autosummary items
",doc/sphinxext/autosummary_generate.py
b21d2455c755a552d0d9f6f31897e090aa06d9ca,"test_umath: increase test tolerance, for non-eps-accurate system functions
",numpy/core/tests/test_umath.py
c518f4d69244679d9c60322f82cbb3b9561411a9,"* fixed the 'Warnings' section of some docstrings.
",numpy/ma/core.py
c01b0504b338a38747a902546392a8383a53848e,"Put the win64 warning in multiarray init instead of _import_array to avoid multiple warnings.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/src/multiarraymodule.c
8c0e230c54e25a6fb6ef1af525f55d5fc75cbad1,"Emit a warning when numpy is imported on windows x64.
",numpy/core/code_generators/generate_numpy_api.py
be4bf3f892b371503aa3e0e5a2562e2552216dc2,"Re #1008: use appropriate precision constants in Horner series (possible cause for quad precision issues)
",numpy/core/src/umath_funcs.inc.src
a122b90e7b952dd4a1cbf1753aaf753d53f29487,"Re #1008: add terms to Horner series for long doubles. Fix issues in test.

The Horner series was previously too short to accommodate SPARC quad
precision. There were also some issues with tests on platforms with
bogus longdouble -- finfo would report invalid values for eps/tiny.
Try to detect this now, and to be sure, use only limited magnitude
range for test points (this is sufficient for testing that the series
expansion works).
",numpy/core/src/umath_funcs.inc.src,numpy/core/tests/test_umath.py
0be8be07d1c0ad89afa8a6d82e7de7c2e0d1c2c9,"Fix compilation issue: define _safe_ceil_to_intp before any use of it.
",numpy/core/src/multiarraymodule.c
aadc04276208f9424bb562dede7ca99648a54127,"Remove last unchecked ceil call in arange.
",numpy/core/src/multiarraymodule.c
da1c6ed8976b6bdfbe46f4f37330c83977dc3e6c,"Forgot to remove a ceil call in arange, redundant after _safe_ceil_to_intp.
",numpy/core/src/multiarraymodule.c
3a4d129dee0a910fedc32ee9cf9fe7c4e14c8ff6,"BUG: Check wether ceil would overflow an intp, and if it does, raise a ValueError in arange.
",numpy/core/src/multiarraymodule.c
0f2fcb24e1bb4042d2eecfdf661d0e4b50b862a1,"Fix regression test for #1062.
",numpy/core/tests/test_regression.py
6b4bdd1a6645899fe87fb144d9012ec488580651,"Add regression test for #1062.
",numpy/core/tests/test_regression.py
8640579ac3ba988ac41ba48b38a9a8565b4220ae,"BUG: Fix #1061.
",numpy/core/src/arrayobject.c
527eebd9ed4a9fd778bc7418bb968dfd00f3c270,"Add regression test for #1061.
",numpy/core/tests/test_regression.py
8364447b9b50854c0b12650423728a7d168374b6,"Mention the trunc ufunc as new in 1.3 and note this in its docstring.
",doc/release/1.3.0-notes.rst,numpy/core/code_generators/ufunc_docstrings.py
6d7e43e5fccae9914eaefee26781a6c4669afebf,"Ensure that documentation for dot, vdot, inner, alterdot, restoredot is the same, independent of whether these functions come from _dotblas or multiarray/numeric.py
",numpy/add_newdocs.py,numpy/core/blasdot/_dotblas.c,numpy/core/numeric.py
bab64b897064cfdf8cf86fcc62b44e21df1153ee,"docs: strip trailing whitespace from RST files
",doc/source/about.rst,doc/source/contents.rst,doc/source/license.rst,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.indexing.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/distutils.rst,doc/source/reference/internals.code-explanations.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.array-manipulation.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.math.rst,doc/source/reference/routines.statistics.rst,doc/source/user/basics.indexing.rst,doc/source/user/basics.types.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.python-as-glue.rst,doc/source/user/index.rst
b2634ff922176acd12ddd3725434d3dfaaf25422,"docs: remove invalid information
",numpy/core/code_generators/ufunc_docstrings.py,numpy/lib/ufunclike.py
0be90727d12bf6d4c80100c866253c576df0d8b2,"docs: document some of the API additions in Numpy 1.3.0
",doc/source/reference/c-api.config.rst,doc/source/reference/c-api.coremath.rst,numpy/core/code_generators/ufunc_docstrings.py
d854e19f4a1c6e5b2ae4007152bbd962fb851642,"Update version number for trunk to 1.4.0.
",numpy/version.py
5db0f94a52d046c059432b42b6ad79f1d5966785,"test_umath: forgot that generators and decorators don't play along in Nose; enable the test
",numpy/core/tests/test_umath.py
03c4e4d9aaa62b99501d27d0f496b131a1471499,"test_umath: skip loss-of-precision test if the MachAr data for long doubles is bogus
",numpy/core/tests/test_umath.py
a6b253a6fde1fb33350dc580529a55efaa825969,"Fix some rest issues in the releases notes.
",doc/release/1.3.0-notes.rst
b4c23388701365495b444792ef0d4061a99cd8aa,"Update release notes for 1.3.0
",doc/release/1.3.0-notes.rst
ad9cd295863cdc7a96f219574b15cd2f03189693,"sphinxext: autosummary: fix another signature formatting issue
",doc/sphinxext/autosummary.py
b43084ee608d1351deaa458506b7f5430568f770,"doc: update version info
",doc/source/conf.py
e9ef18bde5772aee31356064ae73ba59caeb249c,"sphinxext: autosummary: improve signature output & fix a bug in it
",doc/sphinxext/autosummary.py
06f432130137c06f4c3d754c37eb756f45619ad6,"sphinxext: autosummary: ignore trailing material on each line

This allows one to add helpful comments to autosummary lines,
if one wants to do so eg. in module docstrings.
",doc/sphinxext/autosummary.py
4d3cf3d11514342d8662012e6a7533ae8e81f53b,"Remove long double test for repr round-trip.
",numpy/core/tests/test_scalarmath.py
e672f36e8d0b93b651f20a1dcdd5ab187c8bf2be,"Fix exception message when the shape of a subarray is not a tuple.
",numpy/core/src/hashdescr.c
c931ce60930fcbe4903a8384499798bea8fdf29a,"Use Py_ssize_t for PyDict_Next.
",numpy/core/src/hashdescr.c
12038dbd9b47dbbe61fc8f513451b58d250a80c9,"Remove obsolete comments.
",numpy/core/src/hashdescr.c
6e9c1b7631bbd450e927f4a9e7a0ce9e64d41676,"Fix English.
",numpy/core/src/hashdescr.c
4f35a210e275600bd3f9c0a6df7be4fcb15c5101,"Add one nested compound dtype.
",numpy/core/tests/test_dtype.py
04bad09f118827255e09c7313a21d64fc4688ed1,"BUG: hashing dtype failed for subarray which shape was an integer instead of a tuple.
",numpy/core/src/hashdescr.c,numpy/core/tests/test_dtype.py
baa4d11ee7fa919fa50c3dd9a312f62333f85570,"Fix missing declaration for status code.
",numpy/core/src/hashdescr.c
396320288d1ca2fd68a89d876b3ca9d38cd9f166,"Use python exception system instead of ad-hoc error code.
",numpy/core/src/hashdescr.c
f9e7ba9c63807a6f36d887bea875ac6c85d9aa90,"Fix comment.
",numpy/core/src/hashdescr.c
a5ef4a38a483923f7192dbc9eac815578612471b,"Add some documentation and make function names consistent.
",numpy/core/src/hashdescr.c
c08ee20a7be987de5511b85dd4436106c8926544,"Implement subarray walking for dtype hashing.
",numpy/core/src/hashdescr.c
8d3c1df77f2ebd72e1b9ae065df2f3d635e5b86c,"Walking into fields to compute hash of compound types.
",numpy/core/src/hashdescr.c
617dc9d1769cbd5473439d1f85b6953446232fe1,"Start implementing 'real' hashing protocol: works for builtin.
",numpy/core/src/hashdescr.c
10ccccab9168921d2c8b568736aba5beb8547543,"Using separate compilation unit does not work for array API.
",numpy/core/setup.py,numpy/core/src/hashdescr.c,numpy/core/src/hashdescr.h,numpy/core/src/multiarraymodule.c
1bebeca0f2c59c36b78a07ea93ae723df03d58f9,"Start implementing hashing protocol for type descr

First step: create a new PyArray_DescrHash, which is just a stub to
PyObject_Hash, but is in a different file (to avoid recompiling the
whole numpy core everytime).
",numpy/core/setup.py,numpy/core/src/hashdescr.c,numpy/core/src/hashdescr.h,numpy/core/src/multiarraymodule.c
ebc31e8c510559c4bc862283de284247700088ea,"Add some unit tests for the hashing protocol of dtype (fail currently).
",numpy/core/tests/test_dtype.py
576a6781de434625460e0f8273ec837277474ee0,"Make logseries test deterministic.
",numpy/random/tests/test_random.py
a1e2f9b5ab6d240655b040c3d3ae0188f1132cb1,"Fix tickets #921 and #923. Add regression tests.
",numpy/random/mtrand/distributions.c,numpy/random/tests/test_random.py
016afc58740cf8a766595b68191b7eb9f7435776,"Give assert_ a default message of ''.
",numpy/testing/utils.py
5f9892390e1beb9263448086ad968a7205ef258a,"Add macros for ia64
",numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h
bcd21122ba5933e27536d9a953cc597e09babfba,"Test commit mailing list.
",TEST_COMMIT
e36d814f6985d6bdbe0df648f82bca710b311994,"Test whether SVN hook is working.
",TEST_COMMIT
74b16f6c0f463bf86f0b7748f4ae700b4c6ddb52,"Revert ""Fix wrong formatting: Py_ssize_t vs npy_intp.""

NPY_SSIZE_FORMAT is for parsing from PyArg_* functions, not for printf.
",numpy/core/src/arrayobject.c
ff7d5122a42bc1bb0aa45a44a0ac6baab049fed1,"Check for the inline keywork in numscons build.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in
2626ceabbc90c7e30aa4b86d91aa8d8a3bb0863e,"Add inline keyword check.
",numpy/core/scons_support.py
1d5343bcdb5c850a0f6ba7db5c0c1385291292e7,"Use setup_common for scons build.
",numpy/core/SConscript
6db55e723b609c6aa4f4cdb6f5a81db2b73286aa,"Put func name -> conf string convertion in setup_common.
",numpy/core/setup.py,numpy/core/setup_common.py
ce0dd445df43ad444c5adc072d6e1122f548be7f,"Put math funcs to test in separate file to share with numscons build.
",numpy/core/setup.py,numpy/core/setup_common.py
ebd770a34e4d2e9326eca18e5a45c14ab75c56f0,"Back out VS 2003 hack - it is too fragile.
",numpy/distutils/command/build_ext.py,numpy/distutils/command/build_src.py
016763c26f6f55d6a37ed508ab773b53e709a49f,"Fix wrong formatting: Py_ssize_t vs npy_intp.
",numpy/core/src/arrayobject.c
3042a38b466f2a79a165ecbe1b9c87124ae3e93a,"Skip graciously when ctypes is not available.
",numpy/tests/test_ctypeslib.py
6f60d2c76ece73e8f37f2ae1014cc26b485495d0,"Make the gfortran/vs2003 hack source file known to distutils.
",numpy/distutils/setup.py
950139d363b61b0c8b228b905740027985133f5b,"Remove python 2.3, add 2.6 for build scripts on windows.
",tools/win32build/build.py
8174ea6b2f9f425e62d84cf4b3e646151a4ca78d,"Remove ambiguous Euler constant naming for e.
",doc/source/reference/c-api.coremath.rst
6485a8ec55be592dfd630aff774f8d625e980f74,"numpy.ma doc update
",doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/routines.ma.rst,numpy/ma/core.py
a082b6c2ece92b3a2ed572d55becd3546f9c801d,"Ugly hack to workaround some bug in mingw to make VS 2003 work with gfortran.
",numpy/distutils/command/build_ext.py,numpy/distutils/command/build_src.py,numpy/distutils/mingw/gfortran_vs2003_hack.c
a2c67987055400e49c056f6301317a36dca5a244,"Add a function to get MSVC version.
",numpy/distutils/misc_util.py
727a1c5d0305a72b89fb2198c7dbe472a8af304c,"Remove colloquial expression.
",doc/source/reference/c-api.coremath.rst
a5575c8cc005e1964d76260f4daa49fd11f8c2a2,"Spelling.
",doc/source/reference/c-api.coremath.rst
45e92e78bb4e17a0f91dea736d3574914b8df1db,"Fix latex in core math doc.
",doc/source/reference/c-api.coremath.rst
7bf8aced1804a1520820822a4f4e7c9faba6e29e,"Document math constants.
",doc/source/reference/c-api.coremath.rst,doc/source/reference/c-api.rst
d71bd3549fef4ff4e4974c9334e140bc125e28cb,"Start documenting npy math.
",doc/source/reference/c-api.coremath.rst
df219565c5598516ed7b9179e94fcc354558e007,"Update configuration in the numpy reference.
",doc/source/reference/c-api.config.rst
1c9975bd5e74cf7618b483f107597400b9ea3fd7,"Put NPY_NAN and co at the correct location in the releases notes.
",doc/release/1.3.0-notes.rst
4326a5176293cdeb93485d27cbc4c6d8cc2e2dc4,"Document which configurations work for gfortran  + MS compiler.
",doc/release/1.3.0-notes.rst
9c3f0da3baf1ad67e54cf2e6b48f7c500bb8fafb,"Mention NPY_NAN and co in the release notes.
",doc/release/1.3.0-notes.rst
43399b799cb80922b1a57acae7e44318a600e178,"Remove pzero/pinf init functions, and use NPY_* macros instead.
",numpy/core/src/umathmodule.c.src
8f15bfc95cd5a7dfeffd4b95b34241619fdf2100,"Use NPY_NAN instead of computing a nan - also fix #920, since NPY_NAN is a positive nan.
",numpy/core/src/umathmodule.c.src
5d2998a0a9423a6f63644d9eae72b5ef94d882f2,"Add a regression test to check our nan is a positive nan.
",numpy/core/tests/test_umath.py
4e0a6723a6b5343f845dda13605b29adce37e327,"Do not use NAN (GNU specific extension) but our portable NPY_NAN instead.
",numpy/core/src/umath_loops.inc.src
c5b2f31aeafa32c705f87f5801a952e394063a3d,"Add the numpy icons to the repository.
",branding/icons/numpylogo.svg,branding/icons/numpylogoicon.svg
987d5e0032590c52339f5a1d1ae24c2eba5d2882,"Do not pull the whole ndarrayobject header in npy math, to avoid unused _import_array warning, and because we don't need it anyway.
",numpy/core/include/numpy/npy_math.h
07e396f04f0261e87752894dc20580424d0aa455,"Define NPY_INLINE as a (public) macro for portable inline, and use it in npy_math.h, to avoid spurious warnings about unused static functions.
",numpy/core/include/numpy/npy_math.h,numpy/core/setup.py
dc8294dbcc54c710afb2de06b654836edb890238,"Move bit-width types to npy_common, so that we can use it in pure C code (code which does not use the python API), npymath in particular, without pulling the whole ndarray headers.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h
f87fb9c9e98681907bd396a9835bb517cd8fe978,"Define inline to something we can use internally.
",numpy/core/setup.py
354e0ebb14530307b1f1c6b6ae38e3cfc05f364b,"Add check for (C) inline.
",numpy/distutils/command/autodist.py,numpy/distutils/command/config.py
523a237e73e03636dab96df9856babde479438e6,"Add note about sign(nan) to release doc.
",doc/release/1.3.0-notes.rst
21cbf24e0b66c5c7c2d5ee894254c89dda3390c6,"Change complex version of sign to return nan for nan input. Fix test to
reflect this new behavior.
",numpy/core/src/umath_loops.inc.src,numpy/core/tests/test_regression.py
58479591a176a4cf525ef17dd981f70e1195ba80,"fix remaining tests to reflect new behavior of sign(nan)
",numpy/lib/tests/test_ufunclike.py
670a4e77a729c31b02116724b053df009ed7274b,"Fix a test failure due to changes in the sign ufunc.
",numpy/lib/tests/test_ufunclike.py
a4816bc59712ca624e9308dd14a740f982a40d28,"Change behavior of sign ufunc so it returns nan for nan instead of zero. This
breaks two tests because the boolean value of nan is now True. I will open a
ticket for this but won't resolve it until it is discussed on the list.
",numpy/core/src/umath_loops.inc.src
1be8c3588e0bf28bdc26f3c12ec71d754ecc0625,"test_umath: remove unnecessary test from #1008 test set

Apparently, on VS2008, arctanh (either the real or complex one) has
some cancellation error near x=1. This is a separate issue from #1008,
and so shouldn't be tested by its tests.
",numpy/core/tests/test_umath.py
7382496a940194ee59fe18f510c82a1210d8668a,"Fix ticket #1048.
",numpy/core/src/umath_loops.inc.src,numpy/core/src/umath_ufunc_object.inc
d3a8a63f8fbf22ac5007d9f51837f1bbf4706dfa,"Set formatting references for nan/inf complexes depending on the python version, since python 2.6 have revamps its own formatting support.
",numpy/core/tests/test_print.py
bb41c56025238f058008ece39e06ece8dfed7454,"Fix wrongly inserted * character for the real part of complex number with nan/inf.
",numpy/core/src/scalartypes.inc.src
92e09e46cbd58a9d2cf961d188cc6c5798756b54,"Fix C99 declaration style.
",numpy/core/src/umath_ufunc_object.inc
82803fe3be6597c1962e3e99f29e08ca8bd64798,"Fix double comma syntax error.
",numpy/core/src/scalartypes.inc.src
6433987c284e239395d3582ea70d682310c9db0d,"Remove NumpyOS_init, obsoleted by our NPY_NAN and co macros.
",numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c
325893788a6acdc49158b12635fc9788b0fd56e2,"Fix wrong cast for zero macros.
",numpy/core/include/numpy/npy_math.h
7c1192a8befb50e5da5feee32a55faf6d006e782,"Add macros for positive and negative inf.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c
8921d5d97f769d0ae2adee65445aa0748b0e4de1,"Use functions instead of anonymous union that some compilers don't like.
",numpy/core/include/numpy/npy_math.h
5333436a2e256a5e89eb5fe867822c0b01cde5ae,"Add portable equivalent of NAN/INFINITY.
",numpy/core/include/numpy/npy_math.h
338d5c596b15815bf9003599a42d4accacf96862,"Revert adding '*' character for nan and inf before the imaginary tag for python >= 2.6.
",numpy/core/src/scalartypes.inc.src
97c8aa939aafb070ffd2ecc9b8df9e956b472d53,"numscons build for umath_tests.
",numpy/core/SConscript
44bd513e2870cea4bf555157cc0157d0ae8dfb17,"Fixing #1045: don't output * in between of inf/nan and j
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_print.py
a49c26283e808282c546efee13eec321a8472b4e,"Fix nan/inf handling when formatting complex numbers.
",numpy/core/src/scalartypes.inc.src
4a45e035be0eee605f2bc755bc79a1e222774017,"Fixed #950: fix bug in dotblas 0D input detection.

One of the branches in dotblas_matrixproduct tried to dereference the
arr->data of a 0D array. This should plug it.
",numpy/core/blasdot/_dotblas.c,numpy/core/tests/test_regression.py
d771e4ee20a5970f20142816471f21761c127388,"Fixed #836: ensure z**3 = z*z*z, z**2 == z*z and z**1 == z for complex pow+inf.

C99 standard is silent on how complex pow should behave with inf/nan values,
but gives leeway for handling special cases.
",numpy/core/src/umath_funcs.inc.src,numpy/core/tests/test_umath.py
9d6b9b91b1a93be49d46b0f4afe78c7fa3a28e3f,"Fixed #745: make assert_array_almost_equal work with object arrays
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
de6264438e148882e58f5925f9176966216b940f,"Apply patch from #953 to fix two doctests.
",numpy/matlib.py
b51762ef676ac8b0c2d6e0a4d75da988572c2383,"Fix docstring for amax/amin.
",numpy/core/fromnumeric.py
7d75121a4d11bd31ec322523da9283790ac30f75,"Fix and re-enable regression test #947.
",numpy/core/tests/test_regression.py
d9b8b7634b222b6bd464a3802e0f464a25c28d4b,"Fix #947.
",numpy/core/src/multiarraymodule.c
e62aa7ea3603ac5d7eb7b94da328aaed5868c8d0,"Use a failure label when _array_fromobject fails.
",numpy/core/src/multiarraymodule.c
1ace4444065fe39b01739b85189e7fc5cd9fecdd,"Add regression tesst for #947.
",numpy/core/tests/test_regression.py
46b375c98bf489699d1de5f4d8a6910e0e1c8ad5,"Applied Anand's patch fixing Ticket #986 regarding the domain of the Von Mises random variable generator. Regression test added.
",numpy/random/mtrand/distributions.c,numpy/random/tests/test_random.py
dd8299b40e9128b18abd7df1adb462f53bb2493a,"BUG: when a new type is required, and the fast clip function is updated, make sure the function pointer is not NULL - if it is, fall back to slow array.
",numpy/core/src/multiarraymodule.c
0588cb85b3c5037365432aab213d82b79a4bd25b,"Fix import issue.
",numpy/lib/tests/test_io.py
1d4365c44e5766ae0f39c970b2b3e9fb8c4a54ae,"Re-enable long double repr tests, as long double formatting has been fixed on windows.
",numpy/core/tests/test_scalarmath.py
4b6277c682e0ba293c008ecdbe77473fa9e1d259,"Sort index of find_duplicated before testing, because the exact order is undefined for identical entries.
",numpy/lib/tests/test_recfunctions.py
c2bb0f9a1d5e3d58b7bc35142167a0d76e0e590b,"Remove dead code.
",numpy/lib/tests/test_io.py
372e31e9986cb2d255a85c3df2e9b15edb8e35c1,"Re-enable generalized ufunc tests on win32, since the corresponding module now builds correctly.
",numpy/core/tests/test_ufunc.py
d4722fad0baee09e07f8f752d1be83146a6da4df,"Do not hardcode string for savetxt testing, as the exact representation depends on the platform.
",numpy/lib/tests/test_io.py
03c47e45987edf002f4094d3d39f4a1e3eff01f0,"BUG: Rewrite test_gzip_loadtxt to avoid NamedTemporaryFile which is  unusable with windows IO semantics + add another test for compressed string argument to loadtxt.
",numpy/lib/tests/test_io.py
2ef6634890ba294a72b67e7a314a1753faa1b985,"Close file handle in loadtxt if we opened the file ourselves.
",numpy/lib/io.py
969ef155b0f5bae5520597e1ba6c30c05018d0bd,"Make the type cast clearer + comment.
",numpy/core/src/scalarmathmodule.c.src
3b2ea6cc6a45171f5a8e188bd28766a8a28f0586,"More signed/unsigned comp fixes.
",numpy/core/src/umath_ufunc_object.inc,numpy/numarray/_capi.c
6a2a979fb3e79a30b4a5020490d855a8d3a44d22,"More unsigned comparison warning fixes.
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src
e16daf21cc5c64ffc190aa8826f7cb74d49e99be,"More signed/unsigned fixes.
",numpy/core/src/_sortmodule.c.src
54608a8ddca50ecbe7c69306e9603b37b678662a,"Fix signed/unsigned warnings by doing explicit cast (as done by the compiler implicitely anyway).
",numpy/core/blasdot/_dotblas.c
eefc1417d12af4a5b3bfa11b52ec67b9fff641ad,"Fix polyint to work correctly with float, complex, and int inputs.
Fix polydiv to work correctly with float, complex, and int inputs.
",numpy/lib/polynomial.py,numpy/lib/tests/test_regression.py
4a632534604d686ff9ac5a9629ce06f7c895cd1e,"Fix ticket #944.
",numpy/lib/polynomial.py,numpy/lib/tests/test_regression.py
3926a6c68334efd6334f998cfa03cf18a152a46f,"Add assert_ as a release safe version of assert for running tests.
",numpy/testing/utils.py
5a9fe508e8df1f5a9ed2e0fc33da1b2d72ef4590,"Add test for array priorities involving scalars.
",numpy/core/tests/test_umath.py
9673a837b92f6af7dd71968bce3387df0fc69bc9,"Fix type in test_wrap_with_iterable.
",numpy/core/tests/test_umath.py
a947249ce15c90d66252d4bee76fc8e282c870df,"Cleanup the _find_array_wrap code a bit.
",numpy/core/src/umath_ufunc_object.inc
cb9f5623f767ffe008722f888bdd971444904ba1,"Add test for wrap with iterable. Thanks to Darren Dale for the patch.
",numpy/core/tests/test_umath.py
677173f6356183abd726a0692768916826089b7f,"Apply patch in ticket #826 to fix problem with subtypes.
",numpy/core/src/scalarmathmodule.c.src
e1c91c74297b39a19e7d58aa0abaa32b23ddf446,"Apply patch from Darren Dale to fix __array_wrap__ problem.
",numpy/core/src/umath_ufunc_object.inc
919f279380b39ba41ad220fe82a430b6093857a5,"Apply patch from ticket #1040 fixing some 64 bit issues. Thanks to
jmiller.
",numpy/core/src/arrayobject.c
41be2e359b862c3388b5816be7649367b476f0dd,"Make printout of precision test fail more informative.
",numpy/core/tests/test_umath.py
090ce2ad88f775ad0bdc009061457c1ff8b40b74,"Merge reviewed docstrings from editor.
",numpy/core/arrayprint.py,numpy/core/code_generators/ufunc_docstrings.py,numpy/core/fromnumeric.py,numpy/lib/function_base.py
bb4c141e31484ecc2af21a26cf11d9293c3d7284,"doc: make the endorsement of PEP 3118 over the old array interface more strongly worder
",doc/source/reference/arrays.interface.rst
8103f47751bbc86e9c0f9f67746a29b7c4099bf8,"Test commit 2
",TEST_COMMIT
dcb6f4986f6d3cba2b9225111e0b580b66b25ff6,"Test commit
",TEST_COMMIT
06ffe4d37371ed799ce7e00be34eb992105afccc,"Use NPY_PI instead of C math lib one, which is not always available.
",numpy/core/src/umathmodule.c.src
ff0b512c08228f7183f68590fe0bc0278aa9c354,"Cleanup PyArray_GetEndianness.
",numpy/core/src/multiarraymodule.c
931a59258f256189dca707067e1719c023ef15da,"Coding style cleanups. Finishes numpyos.c.
",numpy/core/src/numpyos.c
61f7fa96c4f429baca226e88289cb35e7d3d7a55,"Add complex log2,exp2 to generated ufuncs.
Add complex log2,exp2 to tests.
Some whitespace cleanup.
",numpy/core/code_generators/generate_umath.py,numpy/core/tests/test_umath.py
1e0c943d14df90fb6d1b2144146c2925399c09df,"Fix use of "" ' "" character in npy_endian.h
Fix whitespace in npy_math.h
Add complex log2, exp2 to umath_funcs.inc.src
Use npy constants in umath_funcs.inc.src
",numpy/core/include/numpy/npy_endian.h,numpy/core/include/numpy/npy_math.h,numpy/core/src/umath_funcs.inc.src
612b50345389acbbfdcb30a23051e23e9860e4c8,"doc/Makefile: fix bug in PYTHONPATH specification
",doc/Makefile
5e04558774b500d2c38136544b59064472b64741,"doc/Makefile: make dist target to build current version of numpy
",doc/Makefile
31f7df3dd1cceea282488c89cd087ab4361ada75,"Fix CPU macros for MS compilers.
",numpy/core/include/numpy/npy_cpu.h
4e18ee3f0c30cced803ce851e5cc07a6fee059f5,"Fix x86 and amd64 arch setup with Sun compilers on opensolaris.
",numpy/core/include/numpy/npy_cpu.h
5a7d8ac71138b70febbd10bfaf0f92a0886eec80,"Fix endianess detection: multibyte int constant is not portable (fails with Sun compilers for example), use a 4 characters string instead.
",numpy/core/src/multiarraymodule.c
4b7c165bd0448c3ef891af124bc548a413d95c49,"Enable umath_test on all platforms.
",numpy/core/tests/test_ufunc.py
563c04581da66a5bcc22e2b452f2c24042e2d361,"Do not use cblas anymore when building umath_test.
",numpy/core/setup.py
18a0de7294592bb9ae0f5996acb1cbf470766cce,"Remove CBLAS-dependent code in umath tests - use plain C imp instead.
",numpy/core/src/umath_tests.c.src
44d7136df6b48527b91638aa9bd13247e5ae55c1,"Add NPY_PPC64 support.
",numpy/core/include/numpy/npy_cpu.h
358ef7d5d8169ba3419894174180d38466c1725a,"Merge branch 'runtime_endian'
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_cpu.h,numpy/core/include/numpy/npy_endian.h,numpy/core/src/multiarraymodule.c
944894a446d11463019005e2762fda47f4dc30b4,"Mention /arch option for binary installer.
",doc/release/1.3.0-notes.rst
04cc3cd0a97dcd26108063b5bbb8dce022db0859,"Update the releases notes for 1.3.0
",doc/release/1.3.0-notes.rst
9064d4b2a46fc8b725314e5fae191b8497fef5f6,"Add documentation for amin/amax.
",numpy/core/fromnumeric.py
173384a6fbe3a782f52ef30a8ffdc0a315a58880,"For kaiser, allow beta to be specified as an integer.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
442d00d1fcf19915b49c47a6917e707381e1ae5b,"Add description of new ufuncs.
Add some comments about nan handling in amax/amin.
",doc/release/1.3.0-notes.rst
428c89c27bf7f57071ccd8ae150b75ddbd8a474a,"Coding style cleanup. Remove trailing whitespace.
",numpy/core/src/arrayobject.c
ac6175fedfe335acb652f8ea5eaf000653041803,"Minor changes to DEV_README + fix to a 64-bit issue.
",DEV_README.txt,numpy/core/src/arrayobject.c
8fb48b7752e891226265da0d7108b69782b22213,"Re-enable generalized ufunc test module + related unit tests.
",numpy/core/setup.py,numpy/core/tests/test_ufunc.py
0e9f73d54ea2991a5421ce0938e068d5b1544d47,"Update URLs to Trac.
",doc/release/1.3.0-notes.rst,doc/source/about.rst,doc/sphinxext/numpydoc.py,doc/sphinxext/traitsdoc.py
66f36130a827212e1eb01906a16a015b2908a2a2,"cmath.asinh is still broken in Python 2.5.4: don't compare against it unless Python version >= 2.6
",numpy/core/tests/test_umath.py
d842f52d18f9ced1531f1827486b0536bb001529,"Revert r6528 (crashes on windows). I think the bug is only hidden for now, and there may be a leak somewhere in PyArray_PutMask function; should investigate for 1.3.0.
",numpy/core/src/multiarraymodule.c
f16931309bbc060a6c00d479f41c82163ebf50e5,"Add notes on Windows for AMD64.
",INSTALL.txt
db0301af7222c49ae5ed694a9af2f7aa853b4fef,"Update release notes for 1.3.0.
",doc/release/1.3.0-notes.rst
2f1c2a45b3931d44d949ada1962115f3b791f0ee,"Fix wrong typedef for UInt64.
",numpy/numarray/numpy/arraybase.h
18b91d84c587bf39181b246241e3c6e9fbafe8c1,"Mark unused fptr as unused to avoid spurious warnings flags.
",numpy/core/src/umath_loops.inc.src
d47f26c062479cba21286cfda7335cfe76409176,"Add missing npy_modf declaration.
",numpy/core/include/numpy/npy_math.h
7170d0a8b85ee38da227c2db26f470750b6e1509,"Python 3000 fixes for 2to3 [patch by James Watson].
",numpy/distutils/command/build_src.py,numpy/distutils/misc_util.py,numpy/f2py/crackfortran.py,numpy/lib/function_base.py,numpy/linalg/lapack_lite/make_lite.py
553a30079c37ebecf8a37b9ee1fbf219d1d09053,"Correctly handle gzip filenames in loadtxt.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
97cc30a923b5907b0b51be44d315d883d7533153,"Some missing spots when using npymath lib instead of raw math C libm in umath.
",numpy/core/src/umath_loops.inc.src
e949e3799f75e02375f0e25aa914daada8f4d6d4,"Fix wrong declaration for signbit imp.
",numpy/core/include/numpy/npy_math.h
6b594561eb56298c2081154a045e86a09bbc3ec2,"Mention nan handling in max and co for 1.3.0. in the releases notes.
",doc/release/1.3.0-notes.rst
e40a3f162584a5a80fcdbe392396063cd917fadb,"Do not use old noprefix header in dotblas (#945).
",numpy/core/blasdot/_dotblas.c
47caf646269a9feb966d5aab547f74dff501324d,"Allow c in dtype for charray (#917).
",numpy/core/defchararray.py,numpy/core/tests/test_defchararray.py
7dc0e14495592f7d2e80f71772b0964e891eafc9,"Make sure dest array is aligned for putmask.
",numpy/core/src/multiarraymodule.c
1e150f025f2e0d8f03bb31d42cfff648e6efb269,"Add in-place power raising for matrices (#787).
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
9505ef3f9bbdc13d6c4e76c66dbc273650f80297,"BUG: fix #786, bad exception for wrong order for linalg.norm.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py
1cf5461fb0867179846c5f89bc5e91aba57fb242,"Fix norm tests for single prec.
",numpy/linalg/tests/test_linalg.py
465afd2bd933a69e0bca229284199425acfee1dd,"Abstract away dtype for norm test.
",numpy/linalg/tests/test_linalg.py
e9d13fa6167846f89aeef0d3744166ca976a8a26,"rename check_empty method to test_, so that is is picked up by nose.
",numpy/linalg/tests/test_linalg.py
023546bfaac366615436f3daceb7d5ffc211c714,"TEST: add tests for norm from #763.
",numpy/linalg/tests/test_linalg.py
646b6dd17325365732df8dfd4d26f0151731202b,"Update numpy.i to fix const char* return warnings issues with later versions of g++ (from Matthieu Brucher).
",doc/swig/numpy.i
4644a299b408c6f1ef8c7c3112c39c9f359a0aaa,"Fixed #1008: loss of precision issues in arcsin, arcsinh, arctan, arctanh

The complex-valued arc* functions (that -> 0 for z -> 0) have loss of
precision issues for small arguments. This patch addresses this
by switching to a series expansion (in Horner form) in this regime.

Tests included.
",numpy/core/src/umath_funcs.inc.src,numpy/core/tests/test_umath.py
69d6473d35cb15a5832591bda424277df0a63bf3,"docs: move edit link to the sidebar, and show it for all pages
",doc/source/_templates/layout.html,doc/source/conf.py
9e9785907dd670f44d27ecfc98464c882dc216d8,"Test commit.
",TEST_COMMIT
17e2f03173f00ed7caa87fff0d1cbeb83b95f20c,"Remove unused iswin64 in multiarray unit test.
",numpy/core/tests/test_multiarray.py
9e6abf01df0ae54125678e3b02f29837285e56b7,"float format unit test now passes on win64.
",numpy/core/tests/test_multiarray.py
1726c90ce779c5fc00e7ee186a3cd2914d130074,"More string comp test know pass on win64.
",numpy/core/tests/test_multiarray.py
f7170f90459d41de45a8cb989f4f7d3b7733dda7,"All regression tests now pass on win64.
",numpy/core/tests/test_regression.py
ac0af24195b000f15ddd9a736bcef31213e88ff0,"Remove one more win64 known failure which now passes.
",numpy/core/tests/test_scalarmath.py
a4b3a00c58e34dae6f506fd8a752972f88fe6055,"Screwed up the commit - effectively remove all unicode known failures on win64.
",numpy/core/tests/test_unicode.py
acfc87336d76061b876b26560fcc034921f01279,"All unicode test now pass with mingw64.
",numpy/core/tests/test_unicode.py
9e06a435574463754a09e41f7635baa317477335,"Force double convertion for long double on windows x64 as well.
",numpy/core/setup.py
325f05387d99a0804ea69f07fc9879930275dad0,"Try to hide that I can't compute how many weeks there are in a month...
",doc/release/time_based_proposal.rst
883241ff2463f45bf7654433d6deb7833442f4f6,"Start working on bug tracker limitations, scenario and possible solutions.
",doc/neps/newbugtracker.rst
f77766f5aaaf3a958846bd20d1653900463382fd,"More esthetical changes in rest document.
",doc/release/time_based_proposal.rst
8413dbec73462501ff41334a3aa3bc97e7f33e6f,"Fix tables and syntax issues for rest document.
",doc/release/time_based_proposal.rst
85adad9c4fca1302e0617841753a840b7093bfd9,"Spelling in time-based release doc.
",doc/release/time_based_proposal.rst
eb8892e8d75dcdca50c821f92cce6d33905afd94,"Rename the time-based proposal such as it is recognized as REST by trac.
",doc/release/{time_based_proposal.txt
1924194a8caf276c51efd5538e4eacbdcac9cc62,"Add references for time based releases proposal.
",doc/release/time_based_proposal.txt
4edeb788ff218e59333f379c77b7c42bd61bdccf,"Start the proposal for time-based release.
",doc/release/time_based_proposal.txt
069fcb4a77b9896118944a10cad177571fc3d46c,"Update releases notes for 1.3.0.
",doc/release/1.3.0-notes.rst
10afe75ab8bb3522428ed3aee9264e45759a5816,"Do not unconditionally remove some function checks.
",numpy/core/setup.py
e122cedce5154ac7c4e9fb6cc8316d4574b7f071,"Use hints for sizeof checks, to speed things up.
",numpy/core/setup.py
22dd86ab5e2c52aff12472d5043dc5145d4a2aad,"Add an expected keyword for check_type_size check, to speed things up on common platforms.
",numpy/distutils/command/config.py
f76f109d10ab41bd605568d371ab2ddc87afb6e4,"Avoid checking twice the IEEE macros.
",numpy/core/setup.py
18091e72fc52608752f8abedc54ac202bf9a9fd2,"Make a deepcopy of cached output to avoid side-effects.
",numpy/core/setup.py
88fca37ecb8c54a102c81174d86dc6fefb4be94d,"Rename name_to_defsymb for consistency.
",numpy/core/setup.py
dca2d2de996a8cbf18fe439c7bb0d5e03d82710a,"Cache the sizeof computation to speed up configuration stage.
",numpy/core/setup.py
576d39d2470a7fb4bd817b1c25e61d8919b3239c,"Use config_cmd directly as an argument for check_types.
",numpy/core/setup.py
105a39a0d41684d554387bfd18866d32a4d1e424,"Remote obsolete test code for sizeof defines.
",numpy/core/setup.py
97201bf3cbef48e5705eefacec25294f93db5b58,"SIZEOF_LONGDOUBLE and SIZEOF_LONGLONG are public, since they are defined in noprefix.h. So don't define those in config.h.
",numpy/core/setup.py
500627db89e3cadc717704a4054fa8ae95962128,"BUG: fix sym2def. Some of our SIZEOF_ defines were not consistent with the ones actually used in the code (SIZEOF_LONG_DOUBLE vs SIZEOF_LONGDOUBLE).
",numpy/core/setup.py
455181d6f3208d4450e1161fa644f731b8815ce3,"BUG: forgot to add sizeof check for long long type when PY_LONG_LONG is defined.
",numpy/core/setup.py
6544f0dcfe7441fcfd9cbbc4bd9271cd602cfed3,"Do not use testcode anymore for numpyconfig.h generation.
",numpy/core/setup.py
649b26a6f79bbda0293e2a3827b211ea1c17e394,"Fill-up public defines in check_types.
",numpy/core/setup.py
d58becf8f9269fc6487648238383cd8cf477124c,"Find sizeof wo running on the target platform.
",numpy/distutils/command/config.py
344b20e5095f20fbd88e0f2097a730a47a1447cf,"Fix typo which caused PY_LONG_LONG sizeof to be defined with the wrong size.
",numpy/core/setup.py
d1573af98a34d1cb8da4aa63b9d2cab19e3c567d,"Merge coremath.
",numpy/core/SConscript,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h,numpy/core/include/numpy/npy_math.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py,numpy/core/src/_signbit.c,numpy/core/src/multiarraymodule.c,numpy/core/src/{umath_funcs_c99.inc.src,numpy/core/src/numpyos.c,numpy/core/src/umath_funcs.inc.src,numpy/core/src/umath_loops.inc.src,numpy/core/src/umathmodule.c.src,numpy/distutils/command/build_clib.py,numpy/distutils/command/config.py
0878b817981ebd66088184fa15589784aca96725,"Merged revisions 6479 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6479 | cdavid | 2009-02-26 17:46:34 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Fix docstring format for check_funcs_once.
........
",numpy/distutils/command/config.py
c316a60c3638aedb53d5571816d77dc2fa0a82d1,"Fix docstring format for check_funcs_once.
",numpy/distutils/command/config.py
3913d963eaf6bf79c5b55a7648118107ca92f479,"Merged revisions 6477 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6477 | cdavid | 2009-02-26 17:09:39 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Add script to build msvcrt90 on mingw-w64.
........
",tools/win32build/misc/msvcrt90/msvcrt.def.in,tools/win32build/misc/msvcrt90/yop.sh
a213a2221502383ba178a10d318f5e3444b712d3,"Add script to build msvcrt90 on mingw-w64.
",tools/win32build/misc/msvcrt90/msvcrt.def.in,tools/win32build/misc/msvcrt90/yop.sh
1bc5c715d0efd64cc287b08d4e1b2b59bcddc896,"Merged revisions 6463-6466,6469,6472-6475 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6463 | pierregm | 2009-02-24 02:33:11 +0900 (Tue, 24 Feb 2009) | 1 line
  
  * MaskedArray.__setstate__ : fixed for structured array
........
  r6464 | charris | 2009-02-24 04:02:43 +0900 (Tue, 24 Feb 2009) | 4 lines
  
  Coding style cleanups. Start on arraytypes.inc.src.
  I'm a bit hesitant to commit this as tests are lacking
  for the functionality, but I want the changes
  somewhere central.
........
  r6465 | matthew.brett@gmail.com | 2009-02-25 05:53:10 +0900 (Wed, 25 Feb 2009) | 1 line
  
  Added docstring for isbuiltin
........
  r6466 | oliphant | 2009-02-25 14:15:47 +0900 (Wed, 25 Feb 2009) | 1 line
  
  Fix void-scalar element access when data-type contains titles (meta-data).
........
  r6469 | oliphant | 2009-02-25 22:45:30 +0900 (Wed, 25 Feb 2009) | 1 line
  
  Add Error checking.
........
  r6472 | charris | 2009-02-26 01:51:29 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Fix coding style. Fix test_void_scalar_with_titles.
........
  r6473 | cdavid | 2009-02-26 03:27:19 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Trap another kind of exception for MSVC9 in compaq fcompiler.
........
  r6474 | cdavid | 2009-02-26 03:56:15 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Mark mingw-w64 crashing tests as known failures.
........
  r6475 | cdavid | 2009-02-26 04:04:59 +0900 (Thu, 26 Feb 2009) | 1 line
  
  Tag more mingw-w64 failures as such.
........
",numpy/add_newdocs.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_unicode.py,numpy/distutils/fcompiler/compaq.py,numpy/ma/core.py,numpy/ma/tests/test_core.py
965f1d517922baff64f43b222be8df1c3efaba29,"Tag more mingw-w64 failures as such.
",numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_unicode.py
d9319c7e1ba0c9811f889cced3d3e57647a9ab9b,"Mark mingw-w64 crashing tests as known failures.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
a4d4ad2d78daf744281c89a9b69932331377b508,"Trap another kind of exception for MSVC9 in compaq fcompiler.
",numpy/distutils/fcompiler/compaq.py
b76c3e8f269322f7720814af2593363f1afd83cf,"Fix coding style. Fix test_void_scalar_with_titles.
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_regression.py
583ce5a245c88055bd8e969f0d4ba0c22fbb69a6,"Add Error checking.
",numpy/core/src/scalartypes.inc.src
17d5e7028a5ef73326197082c3e7e3c82bfbe527,"Fix void-scalar element access when data-type contains titles (meta-data).
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_regression.py
0dcb70f1b524215dafcd8133626ab6cebdb26e44,"Added docstring for isbuiltin
",numpy/add_newdocs.py
f1737c782aad8b17410d42c0e41c827c24477341,"Coding style cleanups. Start on arraytypes.inc.src.
I'm a bit hesitant to commit this as tests are lacking
for the functionality, but I want the changes
somewhere central.
",numpy/core/src/arraytypes.inc.src
72f3eb6312b8a20d11956004dedc8e95ced4223d,"* MaskedArray.__setstate__ : fixed for structured array
",numpy/ma/core.py,numpy/ma/tests/test_core.py
910810b02325ec9ad0613a815343d662d72fb553,"Merged revisions 6461 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6461 | cdavid | 2009-02-24 01:32:46 +0900 (Tue, 24 Feb 2009) | 1 line
  
  Add fesetexceptflag func for mingw-w64 support.
........
",numpy/core/include/numpy/mingw_amd64_fenv.h
546e32c5d552442ca7a096dc345c194ff3d24839,"Add fesetexceptflag func for mingw-w64 support.
",numpy/core/include/numpy/mingw_amd64_fenv.h
caa8cfd81da01727027671ec978a53295c49c3b8,"Merged revisions 6453-6459 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6453 | cdavid | 2009-02-22 18:15:26 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Fix wrong merge for manifest version.
........
  r6454 | stefan | 2009-02-22 22:45:15 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Add GzipFile wrapper to support the ""whence"" keyword in GzipFile.seek.
........
  r6455 | stefan | 2009-02-22 22:47:14 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Whitespace cleanup.
........
  r6456 | stefan | 2009-02-22 22:48:21 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Add test for Gzip loader.
........
  r6457 | stefan | 2009-02-23 07:10:30 +0900 (Mon, 23 Feb 2009) | 1 line
  
  Allow subclasses of arrays in testing.
........
  r6458 | charris | 2009-02-23 07:36:18 +0900 (Mon, 23 Feb 2009) | 1 line
  
  Coding style cleanups. This finishes umath_ufunc_object.inc.
........
  r6459 | cdavid | 2009-02-24 01:14:55 +0900 (Tue, 24 Feb 2009) | 1 line
  
  Add custom code for FPU error handling on windows x64 with mingw compilers (mingw-w64).
........
",numpy/core/include/numpy/mingw_amd64_fenv.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/umath_ufunc_object.inc,numpy/distutils/mingw32ccompiler.py,numpy/lib/io.py,numpy/lib/tests/test_io.py,numpy/testing/utils.py
6496cb40bd86f605928dbfabdb14347cb599a89c,"Add custom code for FPU error handling on windows x64 with mingw compilers (mingw-w64).
",numpy/core/include/numpy/mingw_amd64_fenv.h,numpy/core/include/numpy/ufuncobject.h
dc779a81db086e54a997d9392e0f051c201259ce,"Coding style cleanups. This finishes umath_ufunc_object.inc.
",numpy/core/src/umath_ufunc_object.inc
925774d3227944e80a7a01699131124dd1abfb44,"Allow subclasses of arrays in testing.
",numpy/testing/utils.py
34f564a48d8530dc21fe59c13d35879fd6808bf7,"Add test for Gzip loader.
",numpy/lib/tests/test_io.py
ce06f48088eead408ff2e4fee07b9eb555106b4b,"Whitespace cleanup.
",numpy/lib/tests/test_io.py
f6fd858579cf661dfa99c44715eefee7f6d8b925,"Add GzipFile wrapper to support the ""whence"" keyword in GzipFile.seek.
",numpy/lib/io.py
cb7133004d86bec7686d625a6f898913ca5f4380,"Fix wrong merge for manifest version.
",numpy/distutils/mingw32ccompiler.py
87dea6495553f70e890534fa8b3663c9eab74ae0,"Merged revisions 6451 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6451 | cdavid | 2009-02-22 18:12:04 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Fix typo in MSVC runtime info for mingw.
........
",numpy/distutils/mingw32ccompiler.py
16f3279fa7aee9b4f3c8562e7f160f1259a50497,"Fix typo in MSVC runtime info for mingw.
",numpy/distutils/mingw32ccompiler.py
ecaa9d407226d7da8fde209d2fc68c638b0b3852,"Merged revisions 6444,6446-6447 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6444 | charris | 2009-02-22 08:54:31 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Coding style cleanups. Finishes multiarraymodule.c.
........
  r6446 | cdavid | 2009-02-22 12:53:41 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Remove hardcoded size of long double in config.h generation - should have been removed before merging.
........
  r6447 | cdavid | 2009-02-22 13:12:48 +0900 (Sun, 22 Feb 2009) | 3 lines
  
  Removed merge tracking for ""svnmerge"" for 
  http://svn.scipy.org/svn/numpy/branches/numpy-mingw-w64
........
",numpy/core/src/multiarraymodule.c
fa32caac1e165b8408885037ee68992e06eabcbe,"Remove hardcoded size of long double in config.h generation - should have been removed before merging.
",numpy/core/setup.py
919eef58a3fdf0c2d45ae717d5b793c6d3c11cbb,"Merged revisions 6398-6400,6410,6421-6424,6426-6428,6431,6433,6441-6442 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

................
  r6398 | charris | 2009-02-19 05:54:52 +0900 (Thu, 19 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6399 | charris | 2009-02-19 09:45:14 +0900 (Thu, 19 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6400 | charris | 2009-02-19 13:58:23 +0900 (Thu, 19 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6410 | cdavid | 2009-02-19 19:05:28 +0900 (Thu, 19 Feb 2009) | 1 line
  
  Tag known failure on win32.
................
  r6421 | stefan | 2009-02-20 04:28:08 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Fix tests using strptime to be Python 2.4 compatible.
................
  r6422 | charris | 2009-02-20 08:25:01 +0900 (Fri, 20 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6423 | charris | 2009-02-20 12:40:53 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6424 | cdavid | 2009-02-20 22:30:20 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Unhelpful message for compaq fortran compiler.
................
  r6426 | charris | 2009-02-21 07:28:05 +0900 (Sat, 21 Feb 2009) | 2 lines
  
  Change indentation of switch statements.
................
  r6427 | charris | 2009-02-21 13:21:50 +0900 (Sat, 21 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6428 | cdavid | 2009-02-21 13:35:57 +0900 (Sat, 21 Feb 2009) | 3 lines
  
  Removed merge tracking for ""svnmerge"" for 
  http://svn.scipy.org/svn/numpy/branches/fix_float_format
................
  r6431 | charris | 2009-02-21 13:41:17 +0900 (Sat, 21 Feb 2009) | 1 line
  
  Remove terminating "";"" from macro to fix ticket #918.
................
  r6433 | cdavid | 2009-02-21 14:38:29 +0900 (Sat, 21 Feb 2009) | 3 lines
  
  Removed merge tracking for ""svnmerge"" for 
  http://svn.scipy.org/svn/numpy/branches/visualstudio_manifest
................
  r6441 | cdavid | 2009-02-22 02:25:09 +0900 (Sun, 22 Feb 2009) | 105 lines
  
  Merged revisions 6153-6173,6176-6178,6184 via svnmerge from 
  http://svn.scipy.org/svn/numpy/branches/numpy-mingw-w64
  
  ........
    r6153 | cdavid | 2008-12-19 17:06:06 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add a function to find python dll on windows.
  ........
    r6154 | cdavid | 2008-12-19 17:28:49 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Fix typo when getting system32 location.
  ........
    r6155 | cdavid | 2008-12-19 17:37:19 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add a function to get a dump of private headers from dll.
  ........
    r6156 | cdavid | 2008-12-19 17:41:39 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add a function to generate a .def file from a dll.
  ........
    r6157 | cdavid | 2008-12-19 17:43:56 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Forgot to add the regex for the generate_def function.
  ........
    r6158 | cdavid | 2008-12-19 17:53:49 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Fix .def file generation.
  ........
    r6159 | cdavid | 2008-12-19 17:56:54 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add a warning if no symbols found in the dll (if stripped, for example).
  ........
    r6160 | cdavid | 2008-12-19 18:02:24 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Refactor build_import_library to take into account multi arch.
  ........
    r6161 | cdavid | 2008-12-19 18:10:03 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Do not generate manifest when built with msver 8.*, it does not look like it is needed, and we dont support it anyway ATM.
  ........
    r6162 | cdavid | 2008-12-19 18:18:08 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Show arch in the log when building import library.
  ........
    r6163 | cdavid | 2008-12-19 18:22:18 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Fix missing out filename.
  ........
    r6164 | cdavid | 2008-12-19 18:32:46 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Actually build the import library for mingw on amd64.
  ........
    r6165 | cdavid | 2008-12-19 18:46:30 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Do not generate ordinal, and use the basename of the dll instead of the full path in the def.file.
  ........
    r6166 | cdavid | 2008-12-19 18:48:01 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Trailing spaces.
  ........
    r6167 | cdavid | 2008-12-19 18:55:16 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add MS_WIN64 macro when built on amd64 + mingw.
  ........
    r6168 | cdavid | 2008-12-19 18:57:06 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Forgot to import get_build_architecture.
  ........
    r6169 | cdavid | 2008-12-19 18:57:52 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Use a tuple when defining the MS_WIN64 macro.
  ........
    r6170 | cdavid | 2008-12-19 19:05:03 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Fix macro def.
  ........
    r6171 | cdavid | 2008-12-19 19:21:54 +0900 (Fri, 19 Dec 2008) | 2 lines
    
    Do not use g++ for linking on amd64.
  ........
    r6172 | cdavid | 2008-12-19 19:25:18 +0900 (Fri, 19 Dec 2008) | 1 line
    
    do not regenerate the import library if already there.
  ........
    r6173 | cdavid | 2008-12-19 19:28:39 +0900 (Fri, 19 Dec 2008) | 1 line
    
    Add one full msvcrt version for 80 (for manifest generation).
  ........
    r6176 | cdavid | 2008-12-21 02:31:48 +0900 (Sun, 21 Dec 2008) | 1 line
    
    Remove optimization flags for now, to speed up builds.
  ........
    r6177 | cdavid | 2008-12-21 02:32:11 +0900 (Sun, 21 Dec 2008) | 1 line
    
    Add MS_WIN64 for every compile command.
  ........
    r6178 | cdavid | 2008-12-21 02:32:33 +0900 (Sun, 21 Dec 2008) | 1 line
    
    Remove handling of MS_WIN64 in commands: deal with it in mingw tool only.
  ........
    r6184 | cdavid | 2008-12-21 16:46:28 +0900 (Sun, 21 Dec 2008) | 1 line
    
    Hardcode size of long double, because it is broken with mingw.
  ........
................
  r6442 | cdavid | 2009-02-22 02:36:15 +0900 (Sun, 22 Feb 2009) | 1 line
  
  Re-enable real check for long double size.
................
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/mingw32ccompiler.py,numpy/lib/tests/test_io.py
5a02e0ec1a3dbdec450aef3ffa7f0b25730e6b32,"Coding style cleanups. Finishes multiarraymodule.c.
",numpy/core/src/multiarraymodule.c
e223c83c8b8a2edc44b29791bbd41c8236b2deca,"Re-enable real check for long double size.
",numpy/core/setup.py
b4d0366abcec1ea1c2a1946167d1b9873f372a51,"Merged revisions 6153-6173,6176-6178,6184 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/numpy-mingw-w64

........
  r6153 | cdavid | 2008-12-19 17:06:06 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add a function to find python dll on windows.
........
  r6154 | cdavid | 2008-12-19 17:28:49 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Fix typo when getting system32 location.
........
  r6155 | cdavid | 2008-12-19 17:37:19 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add a function to get a dump of private headers from dll.
........
  r6156 | cdavid | 2008-12-19 17:41:39 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add a function to generate a .def file from a dll.
........
  r6157 | cdavid | 2008-12-19 17:43:56 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Forgot to add the regex for the generate_def function.
........
  r6158 | cdavid | 2008-12-19 17:53:49 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Fix .def file generation.
........
  r6159 | cdavid | 2008-12-19 17:56:54 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add a warning if no symbols found in the dll (if stripped, for example).
........
  r6160 | cdavid | 2008-12-19 18:02:24 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Refactor build_import_library to take into account multi arch.
........
  r6161 | cdavid | 2008-12-19 18:10:03 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Do not generate manifest when built with msver 8.*, it does not look like it is needed, and we dont support it anyway ATM.
........
  r6162 | cdavid | 2008-12-19 18:18:08 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Show arch in the log when building import library.
........
  r6163 | cdavid | 2008-12-19 18:22:18 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Fix missing out filename.
........
  r6164 | cdavid | 2008-12-19 18:32:46 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Actually build the import library for mingw on amd64.
........
  r6165 | cdavid | 2008-12-19 18:46:30 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Do not generate ordinal, and use the basename of the dll instead of the full path in the def.file.
........
  r6166 | cdavid | 2008-12-19 18:48:01 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Trailing spaces.
........
  r6167 | cdavid | 2008-12-19 18:55:16 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add MS_WIN64 macro when built on amd64 + mingw.
........
  r6168 | cdavid | 2008-12-19 18:57:06 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Forgot to import get_build_architecture.
........
  r6169 | cdavid | 2008-12-19 18:57:52 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Use a tuple when defining the MS_WIN64 macro.
........
  r6170 | cdavid | 2008-12-19 19:05:03 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Fix macro def.
........
  r6171 | cdavid | 2008-12-19 19:21:54 +0900 (Fri, 19 Dec 2008) | 2 lines
  
  Do not use g++ for linking on amd64.
........
  r6172 | cdavid | 2008-12-19 19:25:18 +0900 (Fri, 19 Dec 2008) | 1 line
  
  do not regenerate the import library if already there.
........
  r6173 | cdavid | 2008-12-19 19:28:39 +0900 (Fri, 19 Dec 2008) | 1 line
  
  Add one full msvcrt version for 80 (for manifest generation).
........
  r6176 | cdavid | 2008-12-21 02:31:48 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Remove optimization flags for now, to speed up builds.
........
  r6177 | cdavid | 2008-12-21 02:32:11 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Add MS_WIN64 for every compile command.
........
  r6178 | cdavid | 2008-12-21 02:32:33 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Remove handling of MS_WIN64 in commands: deal with it in mingw tool only.
........
  r6184 | cdavid | 2008-12-21 16:46:28 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Hardcode size of long double, because it is broken with mingw.
........
",numpy/core/setup.py,numpy/distutils/command/build_ext.py,numpy/distutils/mingw32ccompiler.py
0ef0ac2fffd119c66d244c7a335a3735a091f948,"Move math constants out of umath into npymath.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/umath_funcs.inc.src
96f2a8da3a4526d11ddf913d37239cba78fbcfa2,"Fix numpyconfig generation in scons build.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in
9b99b4a04ba4ac492a8d684d8eaaeaa2f1a3a7b7,"Add npymath lib to scons script.
",numpy/core/SConscript
4a8f27e9fde5c427ec02f1e00c681afa8f6c1371,"Update isnan and co checks for npymath.
",numpy/core/SConscript,numpy/core/include/numpy/numpyconfig.h.in
16287f8545397ea651658b878040eab249e84b6d,"Remove terminating "";"" from macro to fix ticket #918.
",numpy/core/include/numpy/ndarrayobject.h
e69d6e7bbcd5dfd56393a738f6220f5d4a5c5e7f,"Coding style cleanups.
",numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src
271e46c8cf61f7d287fd4ddea954ab767a40101a,"Change indentation of switch statements.
",numpy/core/src/arrayobject.c
da364a18e447c334dfa2ca5083b08e1b6a7c0d10,"Merged revisions 6185-6187,6191-6221,6235-6238,6240-6241,6244,6250-6251,6253,6256,6258,6260-6261,6263,6265-6266,6268,6271,6283-6286,6291-6316,6320-6352,6354,6356,6358-6368,6370-6373,6398-6400,6410,6421-6424 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

................
  r6185 | cdavid | 2008-12-22 01:19:14 +0900 (Mon, 22 Dec 2008) | 1 line
  
  Add doc sources so that sdist tarball contains them.
................
  r6186 | pierregm | 2008-12-22 19:01:51 +0900 (Mon, 22 Dec 2008) | 4 lines
  
  testutils:
  assert_array_compare : make sure that the comparison is performed on ndarrays, and make sure we use the np version of the comparison function.
  core:
  * Try not to touch the data in unary/binary ufuncs, (including inplace)
................
  r6187 | pearu | 2008-12-22 19:05:00 +0900 (Mon, 22 Dec 2008) | 1 line
  
  Fix a bug.
................
  r6191 | cdavid | 2008-12-23 13:10:59 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Fix typos in the comments for manifest.
................
  r6192 | cdavid | 2008-12-23 13:11:12 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Use msvcrt values if available for manifest generation: only there starting from python 2.6.1.
................
  r6193 | pearu | 2008-12-23 18:02:15 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Fix issue 964: f2py python 2.6, 2.6.1 support.
................
  r6194 | pierregm | 2008-12-24 08:43:43 +0900 (Wed, 24 Dec 2008) | 12 lines
  
  testutils:
  * assert_equal : use assert_equal_array on records
  * assert_array_compare : prevent the common mask to be back-propagated to the initial input arrays.
  * assert_equal_array : use operator.__eq__ instead of ma.equal
  * assert_equal_less: use operator.__less__ instead of ma.less
  
  core:
  * Fixed _check_fill_value for nested flexible types
  * Add a ndtype option to _make_mask_descr
  * Fixed mask_or for nested flexible types
  * Fixed the printing of masked arrays w/ flexible types.
................
  r6195 | cdavid | 2008-12-26 21:16:45 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Update to handle numscons 0.10.0 and above.
................
  r6196 | cdavid | 2008-12-26 21:36:19 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Do not import msvcrt globally in mingw32compiler module, since the module is imported on all platforms.
................
  r6197 | cdavid | 2008-12-26 23:39:55 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Do not test for functions already tested by python configure script.
................
  r6198 | cdavid | 2008-12-27 14:56:58 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG: Add a runtime check about endianness, to detect bug 4728 in python on Mac OS X.
................
  r6199 | cdavid | 2008-12-27 19:06:25 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix some typo/syntax errors when converting dict access to a function in manifest generation.
................
  r6200 | cdavid | 2008-12-27 19:15:30 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#970): fix a python 2.6 bug in distutils which caused an unhelpful Error:None message when trying to build with no VS installed and without the -c mingw32 option.
................
  r6201 | cdavid | 2008-12-27 19:30:49 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Improve the error message when initializing compiler failed.
................
  r6202 | cdavid | 2008-12-27 19:32:05 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Try to initialize the msvc compiler before the general code to detect the error early.
................
  r6203 | cdavid | 2008-12-27 19:43:41 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#970): this commit should fix the actual bug, which albeeit linked to commir r6200, was caused in anoter code path.
................
  r6204 | cdavid | 2008-12-27 19:57:05 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix manifest generation.
................
  r6205 | cdavid | 2008-12-27 20:46:08 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#827): close temp file before reopning them on windows, and make sure they are not automatically deleted on close either (2.6and higher specific).
................
  r6206 | cdavid | 2008-12-27 21:18:47 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Do not define the union for runtime endianness detection if we don't check endianness.
................
  r6207 | cdavid | 2008-12-27 22:48:52 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Start working on formatting failure on 2.6: copy how python does complex formatting.
................
  r6208 | cdavid | 2008-12-27 23:44:11 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix formatting for purely imaginary complex numbers.
................
  r6209 | cdavid | 2008-12-27 23:53:15 +0900 (Sat, 27 Dec 2008) | 1 line
  
  More work on formatting float.
................
  r6210 | cdavid | 2008-12-27 23:59:41 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Finish formatting fixes for float scalar arrays.
................
  r6211 | cdavid | 2008-12-28 00:12:20 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Include umath_funcs_c99 in multiarray so that we can use isinf and co macros.
................
  r6212 | cdavid | 2008-12-28 01:15:04 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Include config.h before our C99 math compat layer.
................
  r6213 | cdavid | 2008-12-28 01:15:41 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Fix formatting.
................
  r6214 | cdavid | 2008-12-28 01:16:18 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not define FMTR and FMTI macros, as those are already defined on some platforms.
................
  r6215 | cdavid | 2008-12-28 01:16:52 +0900 (Sun, 28 Dec 2008) | 1 line
  
  More formatting fixes.
................
  r6216 | cdavid | 2008-12-28 01:17:27 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Remove undef of removed macro.
................
  r6217 | cdavid | 2008-12-28 01:33:40 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not use PyOS_ascii_formatd, as it does not handle long double correctly.
................
  r6218 | cdavid | 2008-12-28 02:19:40 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Try ugly hack to circumvent long double brokenness with mingw.
................
  r6219 | cdavid | 2008-12-28 02:25:50 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Use ugly hack for mingw long double pb with complex format function as well.
................
  r6220 | cdavid | 2008-12-28 12:18:20 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Revert formatting changes: ascii_formatd only works for double, so we can't use it as it is for our formatting needs.
................
  r6221 | cdavid | 2008-12-28 15:44:06 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not add doc sources through add_data_dir: it will put the docs alongside numpy, as a separate package, which is not what we want. Use the manifest instead, since that's the only way I know of to include something in sdist-generated tarballs.
................
  r6235 | cdavid | 2008-12-29 16:57:52 +0900 (Mon, 29 Dec 2008) | 13 lines
  
  Merged revisions 6233-6234 via svnmerge from 
  http://svn.scipy.org/svn/numpy/branches/fix_float_format
  
  ........
    r6233 | cdavid | 2008-12-29 12:49:09 +0900 (Mon, 29 Dec 2008) | 1 line
    
    Use parametric tests for format tests so that it is clearer which type is failing.
  ........
    r6234 | cdavid | 2008-12-29 12:49:27 +0900 (Mon, 29 Dec 2008) | 1 line
    
    Fix formatting tests: cfloat and cdouble as well as np.float and np.double are the same; make sure we test 4 bytes float.
  ........
................
  r6236 | cdavid | 2008-12-29 17:02:15 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add nan/inf tests for formatting.
................
  r6237 | cdavid | 2008-12-29 17:26:04 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add test for real float types locale independance.
................
  r6238 | cdavid | 2008-12-29 17:35:06 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Clearer error messages for formatting failures.
................
  r6240 | cdavid | 2008-12-30 12:48:11 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add tests for print of float types.
................
  r6241 | cdavid | 2008-12-30 12:56:54 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add print tests for complex types.
................
  r6244 | cdavid | 2008-12-30 13:20:48 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix test for print: forgot to make sure the value is a float before comparing it.
................
  r6250 | cdavid | 2008-12-30 14:02:28 +0900 (Tue, 30 Dec 2008) | 17 lines
  
  Merged revisions 6247-6249 via svnmerge from 
  http://svn.scipy.org/svn/numpy/branches/fix_float_format
  
  ........
    r6247 | cdavid | 2008-12-30 13:41:37 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Handle 1e10 specially, as it is the limit where exp notation is shorter than decimal for single precision, but not for double (python native one).
  ........
    r6248 | cdavid | 2008-12-30 13:47:38 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Refactor a bit redirected output print test.
  ........
    r6249 | cdavid | 2008-12-30 13:49:31 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Fix test for single precision print.
  ........
................
  r6251 | cdavid | 2008-12-30 14:12:50 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Use np.inf instead of float('inf'), as the later does not work on windows for python < 2.6.
................
  r6253 | cdavid | 2008-12-30 14:15:09 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo in test.
................
  r6256 | cdavid | 2008-12-30 14:34:22 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Special case float tests on windows: python 2.5 and below have >=3 digits in the exp.
................
  r6258 | cdavid | 2008-12-30 14:42:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Hardcode reference for inf/nan-involved values.
................
  r6260 | cdavid | 2008-12-30 14:50:18 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix more formatting tests on win32.
................
  r6261 | cdavid | 2008-12-30 14:52:16 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix some more redirected output print tests.
................
  r6263 | cdavid | 2008-12-30 15:01:31 +0900 (Tue, 30 Dec 2008) | 1 line
  
  More fixes for print tests.
................
  r6265 | cdavid | 2008-12-30 15:03:56 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
................
  r6266 | cdavid | 2008-12-30 15:08:06 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
................
  r6268 | cdavid | 2008-12-30 15:12:26 +0900 (Tue, 30 Dec 2008) | 1 line
  
  complex scalar arrays cannot be created from real/imag args: wrap init values in a complex.
................
  r6271 | cdavid | 2008-12-30 15:32:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Do not use dict for reference: hashing on scalar arrays does not work as I expected.
................
  r6283 | ptvirtan | 2008-12-31 10:14:47 +0900 (Wed, 31 Dec 2008) | 1 line
  
  Fix #951: make tests to clean temp files properly
................
  r6284 | jarrod.millman | 2009-01-01 08:25:03 +0900 (Thu, 01 Jan 2009) | 2 lines
  
  ran reindent
................
  r6285 | alan.mcintyre | 2009-01-01 08:46:34 +0900 (Thu, 01 Jan 2009) | 15 lines
  
  Remove the following deprecated items from numpy.testing:
  
  - ParametricTestCase 
  - The following arguments from numpy.testing.Tester.test(): level, 
  verbosity, 
    all, sys_argv, testcase_pattern
  - Path manipulation functions: set_package_path, set_local_path, 
  restore_path
  - NumpyTestCase, NumpyTest
  
  Also separated testing parameter setup from NoseTester.test into 
  NoseTester.prepare_test_args for use in a utility script for valgrind 
  testing (see NumPy ticket #784).
................
  r6286 | jarrod.millman | 2009-01-01 16:56:53 +0900 (Thu, 01 Jan 2009) | 2 lines
  
  add default include dir for Fedora/Red Hat (see SciPy ticket 817)
................
  r6291 | cdavid | 2009-01-04 19:57:39 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Do not import md5 on python >= 2.6; use hashlib instead.
................
  r6292 | cdavid | 2009-01-04 20:08:16 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Do not use popen* but subprocess.Popen instead.
................
  r6293 | cdavid | 2009-01-04 21:03:29 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Revert md5 change: hashlib.md5 is not a drop-in replacement for md5.
................
  r6294 | pierregm | 2009-01-05 05:16:00 +0900 (Mon, 05 Jan 2009) | 2 lines
  
  * adapted default_fill_value for flexible datatype
  * fixed max/minimum_fill_value for flexible datatype
................
  r6295 | stefan | 2009-01-06 06:51:18 +0900 (Tue, 06 Jan 2009) | 1 line
  
  Credit more developers.
................
  r6296 | pierregm | 2009-01-06 07:52:21 +0900 (Tue, 06 Jan 2009) | 1 line
  
  *moved the printing templates out of MaskedArray.__repr__
................
  r6297 | stefan | 2009-01-06 19:09:00 +0900 (Tue, 06 Jan 2009) | 1 line
  
  Use new-style classes with multiple-inheritance to address bug in IronPython.
................
  r6298 | pierregm | 2009-01-07 05:35:37 +0900 (Wed, 07 Jan 2009) | 1 line
  
  * Bugfix #961
................
  r6299 | pierregm | 2009-01-08 03:14:12 +0900 (Thu, 08 Jan 2009) | 1 line
  
  * Fixed iadd/isub/imul when the base array has no mask but the other array does
................
  r6300 | pierregm | 2009-01-08 07:34:51 +0900 (Thu, 08 Jan 2009) | 3 lines
  
  * Renamed `torecords` to `toflex`, keeping `torecords` as an alias
  * Introduced `fromflex`, to reconstruct a masked_array from the output of `toflex` (can?\226?\128?\153t `use fromrecords` as it would clash with `numpy.ma.mrecords.fromrecords`)
  * Fixed a bug in MaskedBinaryOperation (#979) (wrong array broadcasting)
................
  r6301 | cdavid | 2009-01-08 18:19:00 +0900 (Thu, 08 Jan 2009) | 1 line
  
  Avoid putting things into stderr when errors occurs in f2py wrappers; put all the info in the python error string instead.
................
  r6302 | cdavid | 2009-01-09 00:11:32 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Fix python 2.4 issue.
................
  r6303 | chanley | 2009-01-09 01:30:01 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Fix test_print.py function _test_locale_independance() since str(1.2) does not use the LC_NUMERIC locale to convert numbers.  Fix from Mark Sienkiewicz.
................
  r6304 | cdavid | 2009-01-09 04:22:21 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Revert buggy test fix for locale independecce.
................
  r6305 | pierregm | 2009-01-09 05:02:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  * Add __eq__ and __ne__ for support of flexible arrays.
  * Fixed .filled for nested structures
................
  r6306 | pierregm | 2009-01-09 06:51:04 +0900 (Fri, 09 Jan 2009) | 1 line
  
  * Remove a debugging print statement.
................
  r6307 | jarrod.millman | 2009-01-09 11:14:35 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  Updated license file
................
  r6308 | cdavid | 2009-01-09 14:26:58 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Tag formatting unit tests as known failures.
................
  r6309 | jarrod.millman | 2009-01-09 17:59:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  should be more reliable way to determine what bit platform
................
  r6310 | jarrod.millman | 2009-01-09 18:14:17 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  better default library paths for 64bit arch
................
  r6311 | jarrod.millman | 2009-01-09 18:57:15 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  simplification suggested by stefan
................
  r6312 | jarrod.millman | 2009-01-09 19:02:09 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  switch the order [lib,lib64] --> [lib64,lib] 
................
  r6313 | jarrod.millman | 2009-01-09 19:18:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  removed unneeded import
................
  r6314 | jarrod.millman | 2009-01-10 04:37:16 +0900 (Sat, 10 Jan 2009) | 2 lines
  
  can't use append an int to a string
................
  r6315 | pierregm | 2009-01-10 05:18:12 +0900 (Sat, 10 Jan 2009) | 2 lines
  
  * Added flatten_structured_arrays
  * Fixed _get_recordarray for nested structures
................
  r6316 | pierregm | 2009-01-10 10:53:05 +0900 (Sat, 10 Jan 2009) | 1 line
  
  * Add flatten_structured_array to the namespace
................
  r6320 | pierregm | 2009-01-14 06:01:58 +0900 (Wed, 14 Jan 2009) | 9 lines
  
  numpy.ma.core:
  * introduced baseclass, sharedmask and hardmask as readonly properties of MaskedArray
  * docstrings update
  
  numpy.ma.extras:
  * docstring updates
  
  docs/reference
  * introduced maskedarray, maskedarray.baseclass, maskedarray.generic
................
  r6321 | stefan | 2009-01-14 16:14:27 +0900 (Wed, 14 Jan 2009) | 2 lines
  
  Docstring: remove old floating point arithmetic, parallel
  execution and postponed import references.
................
  r6322 | stefan | 2009-01-14 16:55:16 +0900 (Wed, 14 Jan 2009) | 1 line
  
  Fix printing of limits.
................
  r6323 | stefan | 2009-01-14 16:56:10 +0900 (Wed, 14 Jan 2009) | 1 line
  
  Fix finfo to work on all instances, not just NumPy scalars.
................
  r6324 | pierregm | 2009-01-17 09:15:15 +0900 (Sat, 17 Jan 2009) | 1 line
  
  * fixed _arraymethod.__call__ for structured arrays
................
  r6325 | ptvirtan | 2009-01-18 06:24:13 +0900 (Sun, 18 Jan 2009) | 3 lines
  
  Make `trapz` accept 1-D `x` parameter for n-d `y`, even if axis != -1.
  
  Additional tests included.
................
  r6326 | pierregm | 2009-01-19 17:53:53 +0900 (Mon, 19 Jan 2009) | 3 lines
  
  * renamed FlatIter to MaskedIterator
  * added __getitem__ to MaskedIterator
................
  r6327 | pierregm | 2009-01-19 18:01:24 +0900 (Mon, 19 Jan 2009) | 2 lines
  
  * replace np.asarray by np.asanyarray in unique1d
................
  r6328 | pierregm | 2009-01-19 18:04:20 +0900 (Mon, 19 Jan 2009) | 2 lines
  
  * add intersect1d, intersect1d_nu, setdiff1d, setmember1d, setxor1d, unique1d, union1d
  * use np.atleast1d instead of ma.atleast1d
................
  r6329 | pierregm | 2009-01-20 06:22:52 +0900 (Tue, 20 Jan 2009) | 3 lines
  
  * lib     : introduced _iotools
  * lib.io : introduced genfromtxt, ndfromtxt, mafromtxt, recfromtxt, recfromcsv.
................
  r6330 | pierregm | 2009-01-22 14:37:36 +0900 (Thu, 22 Jan 2009) | 1 line
  
  * genfromtxt : if names is True, accept a line starting with a comment character as header.
................
  r6331 | pierregm | 2009-01-22 14:40:25 +0900 (Thu, 22 Jan 2009) | 1 line
  
  * added recfunctions, a collection of utilities to manipulate structured arrays.
................
  r6332 | pierregm | 2009-01-23 03:21:32 +0900 (Fri, 23 Jan 2009) | 2 lines
  
  * fixed a machine-dependent issue on default int ('<i4' on OS X, '<i8' on linux) ?
  * fixed an machine-dependent issue on argsort ?
................
  r6333 | cdavid | 2009-01-24 17:02:14 +0900 (Sat, 24 Jan 2009) | 1 line
  
  Fix compilation error on 2.4.
................
  r6334 | pierregm | 2009-01-27 06:04:26 +0900 (Tue, 27 Jan 2009) | 7 lines
  
  * _iotools.StringConverter :
      - add a _checked attribute to indicate whether the converter has been upgraded or not.
      - switched the default value for bool to False
  * io.genfromtxt:
      - fixed for the case where a whole column is masked: switch to bool or the common dtype (if needed)
................
  r6335 | pierregm | 2009-01-27 11:46:26 +0900 (Tue, 27 Jan 2009) | 1 line
  
  * prevent MaskedBinaryOperation and DomainedBinaryOperation to shrink the mask of the output when at least one of the inputs has a mask full of False
................
  r6336 | matthew.brett@gmail.com | 2009-01-30 09:26:44 +0900 (Fri, 30 Jan 2009) | 1 line
  
  New docstrings for byteorder and newbyteorder()
................
  r6337 | pierregm | 2009-02-02 14:20:17 +0900 (Mon, 02 Feb 2009) | 2 lines
  
  * Added a 'autoconvert' option to stack_arrays.
  * Fixed 'stack_arrays' to work with fields with titles.
................
  r6338 | pierregm | 2009-02-04 02:11:44 +0900 (Wed, 04 Feb 2009) | 1 line
  
  * Make sure that StringConverter.update sets the type to object if it can't define it.
................
  r6339 | pierregm | 2009-02-05 05:52:36 +0900 (Thu, 05 Feb 2009) | 2 lines
  
  * test__iotools : prevent test_upgrademapper if dateutil is not installed
  * MaskedArray.__rmul__ : switch to multiply(self, other)
................
  r6340 | pierregm | 2009-02-05 06:53:05 +0900 (Thu, 05 Feb 2009) | 1 line
  
  test_upgrademapper : got rid of the dateutil import
................
  r6341 | pierregm | 2009-02-05 13:31:51 +0900 (Thu, 05 Feb 2009) | 2 lines
  
  *  genfromtxt : Fixed when a dtype involving objects is explicitly given. Raise a NotImplementedError if the dtype is nested.
  * _iotools : make sure StringConverter gets properly initiated when a function returning a np.object is used as input parameter.
................
  r6342 | alan.mcintyre | 2009-02-06 05:11:40 +0900 (Fri, 06 Feb 2009) | 6 lines
  
  Issue #957:
  - Fix problems with test decorators when used on test generators.  
  - The skip/fail arguments for skipif and knownfailureif can now be 
    either a bool or a callable that returns a bool.
  - Added tests for the test decorators. 
................
  r6343 | ptvirtan | 2009-02-06 09:27:08 +0900 (Fri, 06 Feb 2009) | 1 line
  
  doc/numpydoc: work better together with Sphinx's  config option
................
  r6344 | ptvirtan | 2009-02-06 09:51:41 +0900 (Fri, 06 Feb 2009) | 1 line
  
  doc: Move maskedarray docs upward in TOC
................
  r6345 | oliphant | 2009-02-06 15:25:50 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Avoid re-creating the sequence when there is only one field in the regular expression.
................
  r6346 | oliphant | 2009-02-06 15:31:11 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Removed an unneccessary return statement in a unit test.
................
  r6347 | pearu | 2009-02-06 23:36:58 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Fix a bug: python system_info.py failed because _pkg_config_info defined section to be None.
................
  r6348 | pearu | 2009-02-06 23:38:57 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Fix another bug, see last commit.
................
  r6349 | pierregm | 2009-02-07 18:19:12 +0900 (Sat, 07 Feb 2009) | 2 lines
  
  MaskedArray.resize : systematically raise a TypeError exception, as a masked array never owns its data
  MaskedIterator : fixed to allow .flat on masked matrices
................
  r6350 | pierregm | 2009-02-08 03:51:31 +0900 (Sun, 08 Feb 2009) | 1 line
................
  r6351 | ptvirtan | 2009-02-10 05:18:08 +0900 (Tue, 10 Feb 2009) | 1 line
  
  Fix #955: fix errobj leak in scalarmath floating point error handling
................
  r6352 | pierregm | 2009-02-10 09:42:40 +0900 (Tue, 10 Feb 2009) | 1 line
  
  * prevent modifications to the mask to be back-propagated w/ __array_wrap__
................
  r6354 | cdavid | 2009-02-10 19:44:01 +0900 (Tue, 10 Feb 2009) | 1 line
  
  Fix hyphen (patch from debian package).
................
  r6356 | pierregm | 2009-02-11 10:51:28 +0900 (Wed, 11 Feb 2009) | 1 line
  
  * MaskedArray.__array_wrap__ : forces the domain (if any) to a ndarray (fill with True)
................
  r6358 | oliphant | 2009-02-12 13:22:03 +0900 (Thu, 12 Feb 2009) | 1 line
  
  Add multiple-field access by making a copy of the array and filling with the selected fields.
................
  r6359 | stefan | 2009-02-12 14:44:07 +0900 (Thu, 12 Feb 2009) | 2 lines
  
  Trust user's specification of MACOSX_DEPLOYMENT_TARGET [patch by Brian
  Granger].
................
  r6360 | cdavid | 2009-02-14 23:54:26 +0900 (Sat, 14 Feb 2009) | 1 line
  
  Merge fix_float_format branch into the trunk.
................
  r6361 | cdavid | 2009-02-15 00:02:39 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Fix typo in multiarray tests.
................
  r6362 | cdavid | 2009-02-15 00:03:22 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Remove leftover in TestIO.
................
  r6363 | cdavid | 2009-02-15 02:03:51 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Include C99 math compatbility layer in multiarray - isnan and co needed by numpyos.c
................
  r6364 | ptvirtan | 2009-02-15 07:09:26 +0900 (Sun, 15 Feb 2009) | 1 line
  
  More add_newdocs entries, and make add_newdoc capable of adding docs also to normal Python objects.
................
  r6365 | ptvirtan | 2009-02-15 07:10:24 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Move (un)packbits docstrings to add_newdocs.py. Fix typos.
................
  r6366 | ptvirtan | 2009-02-15 07:11:19 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Document constants in numpy.doc.constants
................
  r6367 | ptvirtan | 2009-02-15 07:38:32 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Move numpy.lib __doc__ back to info.py; was moved to __init__.py by mistake.
................
  r6368 | pierregm | 2009-02-15 07:42:29 +0900 (Sun, 15 Feb 2009) | 1 line
  
  * genfromtxt : fixed case when using explicit converters and explicit dtype.
................
  r6370 | ptvirtan | 2009-02-16 00:44:47 +0900 (Mon, 16 Feb 2009) | 1 line
  
  sphinxext: clean up plot directive, and merge some features from matplotlib
................
  r6371 | charris | 2009-02-18 06:19:10 +0900 (Wed, 18 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6372 | cdavid | 2009-02-18 14:06:57 +0900 (Wed, 18 Feb 2009) | 1 line
  
  Fix some const issues in NumPyOs_ascii_strtod.
................
  r6373 | charris | 2009-02-18 14:36:35 +0900 (Wed, 18 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6398 | charris | 2009-02-19 05:54:52 +0900 (Thu, 19 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6399 | charris | 2009-02-19 09:45:14 +0900 (Thu, 19 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6400 | charris | 2009-02-19 13:58:23 +0900 (Thu, 19 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6410 | cdavid | 2009-02-19 19:05:28 +0900 (Thu, 19 Feb 2009) | 1 line
  
  Tag known failure on win32.
................
  r6421 | stefan | 2009-02-20 04:28:08 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Fix tests using strptime to be Python 2.4 compatible.
................
  r6422 | charris | 2009-02-20 08:25:01 +0900 (Fri, 20 Feb 2009) | 2 lines
  
  Coding style cleanups.
................
  r6423 | charris | 2009-02-20 12:40:53 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Coding style cleanups.
................
  r6424 | cdavid | 2009-02-20 22:30:20 +0900 (Fri, 20 Feb 2009) | 1 line
  
  Unhelpful message for compaq fortran compiler.
................
",LICENSE.txt,MANIFEST.in,THANKS.txt,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/maskedarray.rst,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/plot_directive.py,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/_internal.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/command/config.py,numpy/distutils/command/scons.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/lib2def.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/doc/constants.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/lib/__init__.py,numpy/lib/_iotools.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/io.py,numpy/lib/recfunctions.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/numarray/util.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/rng.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/parametric.py,numpy/testing/tests/test_decorators.py
a271ac2e41aacab2903864cf371c4ba94cf4ec3f,"Unhelpful message for compaq fortran compiler.
",numpy/distutils/fcompiler/compaq.py
f3c36fa117628c51a4a38c4912633bd3d7bd8028,"Coding style cleanups.
",numpy/core/src/arrayobject.c
4d6063d387e81c98cbf0cd57d2238fd61269e24c,"Coding style cleanups.
",numpy/core/src/scalartypes.inc.src
42ba370e4971b75b11fcd5c173738d8aede1bbcf,"Fix tests using strptime to be Python 2.4 compatible.
",numpy/lib/tests/test_io.py
7a0a97536780dd80b60dad06e061720392273ad9,"Use npymath for isnan and co.
",numpy/core/src/umath_loops.inc.src
1f57355991aaf26c137a71d9fe4251e3fd544751,"Fix npy_signbit when signbit is not available: I forgot to declare the implementation functions... stupidest thing ever.
",numpy/core/include/numpy/npy_math.h
97b881949bcebca55ec3f69f4744d7461a28fe33,"Fix umath generator to use npymath funcs instead of straight libc ones.
",numpy/core/code_generators/generate_umath.py
3140817a933cb25432c28e3666173da8a0a3c12e,"Move non standard, real math function from umath_funcs into npymath.
",numpy/core/src/npy_math.c.src,numpy/core/src/umath_funcs.inc.src
b841d109bcd8d81b1c2f8814b65b61d9e152544e,"Add a few more non standard functions to npy math.
",numpy/core/include/numpy/npy_math.h
0cafc5a233a24d741fa3b4248cc50ef102d117bf,"Add more basic math funcs in npymath lib.
",numpy/core/include/numpy/npy_math.h
65696d289193e3aef0403f56b96a60650e27fdb8,"fix syntax issues for signbit internal replacement.
",numpy/core/src/_signbit.c,numpy/core/src/npy_math.c.src
502f89eb9925f2ae23bc292a1ea072bcebd7123f,"Add python library path for python types - needed with MS compilers.
",numpy/core/setup.py
ab606d34173c80606bb152068979809af42fd56f,"Support library_dirs in check_type.
",numpy/distutils/command/config.py
e0c77133a9165afa6370e4203d01028b5b96eb4b,"Merge r6410.
",numpy/distutils/command/config.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py
000030d48295a8c44001cfd7350dd959d7e3338d,"Tag known failure on win32.
",numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py
242d42bc8eafa8fdec2c551d365c5e83ec5692d3,"Do not silently fail to get sizeof basic types.
",numpy/core/setup.py
b74d11b985be572de8e4ae27a94039e945afe280,"Add our own check_header, since distutils one is broken.
",numpy/distutils/command/config.py
c860323692707c4374437944bf3c1659ad1a3ab9,"npymath convertion in umath_funcs done.
",numpy/core/src/umath_funcs.inc.src
383ec08e5c8f76b869009309d985b66829967404,"Add atan2 in npymath.
",numpy/core/include/numpy/npy_math.h
77d5fd402d017d75112014c508e7321a41985a21,"Add sqrt and fabs in npymath.
",numpy/core/include/numpy/npy_math.h
4422c796cc47f1afe10807ea3753bf0a239698f4,"Start using npymath functions in umath; all test pass on this one on Linux.
",numpy/core/src/umath_funcs.inc.src
0d187c2bf67bbe63308f9ce95dc0d9899ae59d6c,"Add a couple of basic functions to npymath.
",numpy/core/include/numpy/npy_math.h
a3e58a2b6119c5ffc8ab6a46b49815788eb17360,"Decorate all the math functions, make internal replacements static.
",numpy/core/src/npy_math.c.src
23da5462143325d5a8a627c1b7cdceb5007f0ca1,"Revert back changes using npymath in umath, too much breakage.
",numpy/core/src/umath_funcs.inc.src
707639f491eddb2d7db8a29a5233a890c7a4df72,"Coding style cleanups.
",numpy/core/src/arrayobject.c
959124124073fee31ca596e5620cbee00759cca3,"Coding style cleanups.
",numpy/core/src/arrayobject.c
367602fa225ff0e4ef3088bc8e097fbe1c0544be,"Coding style cleanups.
",numpy/core/src/arrayobject.c
92342d0c736e32ed609d1335df02674ab244b689,"Use npymath instead of C math lib for umath_funcs (break numpy ATM).
",numpy/core/setup.py,numpy/core/src/umath_funcs.inc.src
62085b99e053f921fcac21d243691bf007ec3ae5,"Fix nan/inf/co macro when not available on the target platform in npy_math.
",numpy/core/include/numpy/npy_math.h,numpy/core/src/_signbit.c,numpy/core/src/npy_math.c.src
6d74ee757c2d49962a51600bfbf38fdfc1b00007,"Remove umath_funcs_c99.inc.src.
",numpy/core/setup.py,numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c,numpy/core/src/umath_funcs_c99.inc.src,numpy/core/src/umathmodule.c.src
64fdf5eac219235987c03fd4089c5bd57aad63bb,"Move npy_math header to numpy/core include path.
",numpy/core/{src,numpy/core/src/npy_math.c.src
8e511531a5521c8fe02b3b88f21156336d4257f3,"Typo.
",numpy/core/setup.py
67683ac66f5dac485a65c29446c912856a79b838,"Build npymath lib.
",numpy/core/setup.py
907ac7f6037f801b66ec5451a3dac5a8ee03f8f0,"Start working on core math library itself.
",numpy/core/src/npy_math.c.src,numpy/core/src/npy_math.h
0045d5711b7c2d6f5351f1d464ecfde729973413,"Check for isinf and co declarations for numpyconfig.h as well, this it will be needed for npy_math.
",numpy/core/setup.py
a788f2957b2d6d67232f02bc8bab66e5a06bbe71,"Put npy type base types declaration into separate header, to be usable by C libraries without pulling the whole ndarray stuff.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_common.h
aa2d15c3f19401523f2794aa526ebe199a78bbab,"Add numpy_include_dirs to C libraries as well.
",numpy/distutils/command/build_clib.py
e88a1b2baafc4a0df4d01197aef3dfbf815f1d2c,"Put win32 checks in separate function.
",numpy/core/setup.py
a05f3fb9fccee50ad3c21d40715d5545afd5c5be,"Remove dead codepath (we require python 2.4).
",numpy/core/setup.py
4f22b8e666e1a4083ee9053c7d3516891b2e6c96,"Remove obsolete defines.
",numpy/core/setup.py
9f2c6d59bb43435b46c1192582e40e5f092c32b7,"Remove unused code.
",numpy/core/setup.py
5443d9f34a0bc28e683bdbc81461f7a853737d5b,"Remote unused code.
",numpy/core/setup.py
23c84e5d50cb0bf720e5c01d4956708f9094f0c7,"Put mathlib checks in separate function.
",numpy/core/setup.py
eb21e48cd2ca6d6a442cc88a4ee235fa0d4947eb,"Avoid using dir to avoid shadowing dir builtin.
",numpy/core/setup.py
448387aed9a51ae8b2c821acfa732c6f685a95dc,"Put all sizeofs checks ending up in config.h in a separate function.
",numpy/core/setup.py
86e15d047e5cdfe16044f3d0e519862b7615a6d5,"Add sizeofs defines to moredefs so that they end up in config.h.
",numpy/core/setup.py
a95cfbd30bc6727524fb898bd58016d075a96455,"Be explicit about sizeof checks instead of using one big .C file.
",numpy/core/setup.py
93351fd44d4c5a8fb341875687b29deab07c29ed,"Add check_type_sizeof function.
",numpy/distutils/command/config.py
4b5a3ed97bda2d0799f5d4d7219de533ca9019b4,"Forgot to raise an exception if Python.h cannot be found.
",numpy/core/setup.py
d52af7662c0a2c03d7708b3dafccd3b4de389d1d,"Check Python.h through compilation instead of looking for it on the FS + do not add python include, since it is already included by distutils.
",numpy/core/setup.py
e6900b012a3636871ae320fa055eb5849d406e3c,"Coding style cleanups.
",numpy/core/src/arrayobject.c
734fb0ff3707660bf096355322e28310e1221af2,"Fix some const issues in NumPyOs_ascii_strtod.
",numpy/core/src/numpyos.c
3e8db35cf7b35edb761a1d3cc1c4e0a989463c61,"Coding style cleanups.
",numpy/core/src/arraymethods.c
61ac5cf5a969e932d508a074e1fb8e9461f3a660,"sphinxext: clean up plot directive, and merge some features from matplotlib
",doc/sphinxext/plot_directive.py
fb4035fa27d02fcb8c9fce9141fe8bfd3c1859ec,"Merged revisions 6191-6221,6235-6238,6240-6241,6244,6250-6251,6253,6256,6258,6260-6261,6263,6265-6266,6268,6271,6283-6286,6291-6316,6320-6352,6354,6356,6358-6368 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

................
  r6191 | cdavid | 2008-12-23 13:10:59 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Fix typos in the comments for manifest.
................
  r6192 | cdavid | 2008-12-23 13:11:12 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Use msvcrt values if available for manifest generation: only there starting from python 2.6.1.
................
  r6193 | pearu | 2008-12-23 18:02:15 +0900 (Tue, 23 Dec 2008) | 1 line
  
  Fix issue 964: f2py python 2.6, 2.6.1 support.
................
  r6194 | pierregm | 2008-12-24 08:43:43 +0900 (Wed, 24 Dec 2008) | 12 lines
  
  testutils:
  * assert_equal : use assert_equal_array on records
  * assert_array_compare : prevent the common mask to be back-propagated to the initial input arrays.
  * assert_equal_array : use operator.__eq__ instead of ma.equal
  * assert_equal_less: use operator.__less__ instead of ma.less
  
  core:
  * Fixed _check_fill_value for nested flexible types
  * Add a ndtype option to _make_mask_descr
  * Fixed mask_or for nested flexible types
  * Fixed the printing of masked arrays w/ flexible types.
................
  r6195 | cdavid | 2008-12-26 21:16:45 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Update to handle numscons 0.10.0 and above.
................
  r6196 | cdavid | 2008-12-26 21:36:19 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Do not import msvcrt globally in mingw32compiler module, since the module is imported on all platforms.
................
  r6197 | cdavid | 2008-12-26 23:39:55 +0900 (Fri, 26 Dec 2008) | 1 line
  
  Do not test for functions already tested by python configure script.
................
  r6198 | cdavid | 2008-12-27 14:56:58 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG: Add a runtime check about endianness, to detect bug 4728 in python on Mac OS X.
................
  r6199 | cdavid | 2008-12-27 19:06:25 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix some typo/syntax errors when converting dict access to a function in manifest generation.
................
  r6200 | cdavid | 2008-12-27 19:15:30 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#970): fix a python 2.6 bug in distutils which caused an unhelpful Error:None message when trying to build with no VS installed and without the -c mingw32 option.
................
  r6201 | cdavid | 2008-12-27 19:30:49 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Improve the error message when initializing compiler failed.
................
  r6202 | cdavid | 2008-12-27 19:32:05 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Try to initialize the msvc compiler before the general code to detect the error early.
................
  r6203 | cdavid | 2008-12-27 19:43:41 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#970): this commit should fix the actual bug, which albeeit linked to commir r6200, was caused in anoter code path.
................
  r6204 | cdavid | 2008-12-27 19:57:05 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix manifest generation.
................
  r6205 | cdavid | 2008-12-27 20:46:08 +0900 (Sat, 27 Dec 2008) | 1 line
  
  BUG (#827): close temp file before reopning them on windows, and make sure they are not automatically deleted on close either (2.6and higher specific).
................
  r6206 | cdavid | 2008-12-27 21:18:47 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Do not define the union for runtime endianness detection if we don't check endianness.
................
  r6207 | cdavid | 2008-12-27 22:48:52 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Start working on formatting failure on 2.6: copy how python does complex formatting.
................
  r6208 | cdavid | 2008-12-27 23:44:11 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Fix formatting for purely imaginary complex numbers.
................
  r6209 | cdavid | 2008-12-27 23:53:15 +0900 (Sat, 27 Dec 2008) | 1 line
  
  More work on formatting float.
................
  r6210 | cdavid | 2008-12-27 23:59:41 +0900 (Sat, 27 Dec 2008) | 1 line
  
  Finish formatting fixes for float scalar arrays.
................
  r6211 | cdavid | 2008-12-28 00:12:20 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Include umath_funcs_c99 in multiarray so that we can use isinf and co macros.
................
  r6212 | cdavid | 2008-12-28 01:15:04 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Include config.h before our C99 math compat layer.
................
  r6213 | cdavid | 2008-12-28 01:15:41 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Fix formatting.
................
  r6214 | cdavid | 2008-12-28 01:16:18 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not define FMTR and FMTI macros, as those are already defined on some platforms.
................
  r6215 | cdavid | 2008-12-28 01:16:52 +0900 (Sun, 28 Dec 2008) | 1 line
  
  More formatting fixes.
................
  r6216 | cdavid | 2008-12-28 01:17:27 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Remove undef of removed macro.
................
  r6217 | cdavid | 2008-12-28 01:33:40 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not use PyOS_ascii_formatd, as it does not handle long double correctly.
................
  r6218 | cdavid | 2008-12-28 02:19:40 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Try ugly hack to circumvent long double brokenness with mingw.
................
  r6219 | cdavid | 2008-12-28 02:25:50 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Use ugly hack for mingw long double pb with complex format function as well.
................
  r6220 | cdavid | 2008-12-28 12:18:20 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Revert formatting changes: ascii_formatd only works for double, so we can't use it as it is for our formatting needs.
................
  r6221 | cdavid | 2008-12-28 15:44:06 +0900 (Sun, 28 Dec 2008) | 1 line
  
  Do not add doc sources through add_data_dir: it will put the docs alongside numpy, as a separate package, which is not what we want. Use the manifest instead, since that's the only way I know of to include something in sdist-generated tarballs.
................
  r6235 | cdavid | 2008-12-29 16:57:52 +0900 (Mon, 29 Dec 2008) | 13 lines
  
  Merged revisions 6233-6234 via svnmerge from 
  http://svn.scipy.org/svn/numpy/branches/fix_float_format
  
  ........
    r6233 | cdavid | 2008-12-29 12:49:09 +0900 (Mon, 29 Dec 2008) | 1 line
    
    Use parametric tests for format tests so that it is clearer which type is failing.
  ........
    r6234 | cdavid | 2008-12-29 12:49:27 +0900 (Mon, 29 Dec 2008) | 1 line
    
    Fix formatting tests: cfloat and cdouble as well as np.float and np.double are the same; make sure we test 4 bytes float.
  ........
................
  r6236 | cdavid | 2008-12-29 17:02:15 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add nan/inf tests for formatting.
................
  r6237 | cdavid | 2008-12-29 17:26:04 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add test for real float types locale independance.
................
  r6238 | cdavid | 2008-12-29 17:35:06 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Clearer error messages for formatting failures.
................
  r6240 | cdavid | 2008-12-30 12:48:11 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add tests for print of float types.
................
  r6241 | cdavid | 2008-12-30 12:56:54 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add print tests for complex types.
................
  r6244 | cdavid | 2008-12-30 13:20:48 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix test for print: forgot to make sure the value is a float before comparing it.
................
  r6250 | cdavid | 2008-12-30 14:02:28 +0900 (Tue, 30 Dec 2008) | 17 lines
  
  Merged revisions 6247-6249 via svnmerge from 
  http://svn.scipy.org/svn/numpy/branches/fix_float_format
  
  ........
    r6247 | cdavid | 2008-12-30 13:41:37 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Handle 1e10 specially, as it is the limit where exp notation is shorter than decimal for single precision, but not for double (python native one).
  ........
    r6248 | cdavid | 2008-12-30 13:47:38 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Refactor a bit redirected output print test.
  ........
    r6249 | cdavid | 2008-12-30 13:49:31 +0900 (Tue, 30 Dec 2008) | 1 line
    
    Fix test for single precision print.
  ........
................
  r6251 | cdavid | 2008-12-30 14:12:50 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Use np.inf instead of float('inf'), as the later does not work on windows for python < 2.6.
................
  r6253 | cdavid | 2008-12-30 14:15:09 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo in test.
................
  r6256 | cdavid | 2008-12-30 14:34:22 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Special case float tests on windows: python 2.5 and below have >=3 digits in the exp.
................
  r6258 | cdavid | 2008-12-30 14:42:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Hardcode reference for inf/nan-involved values.
................
  r6260 | cdavid | 2008-12-30 14:50:18 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix more formatting tests on win32.
................
  r6261 | cdavid | 2008-12-30 14:52:16 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix some more redirected output print tests.
................
  r6263 | cdavid | 2008-12-30 15:01:31 +0900 (Tue, 30 Dec 2008) | 1 line
  
  More fixes for print tests.
................
  r6265 | cdavid | 2008-12-30 15:03:56 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
................
  r6266 | cdavid | 2008-12-30 15:08:06 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
................
  r6268 | cdavid | 2008-12-30 15:12:26 +0900 (Tue, 30 Dec 2008) | 1 line
  
  complex scalar arrays cannot be created from real/imag args: wrap init values in a complex.
................
  r6271 | cdavid | 2008-12-30 15:32:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Do not use dict for reference: hashing on scalar arrays does not work as I expected.
................
  r6283 | ptvirtan | 2008-12-31 10:14:47 +0900 (Wed, 31 Dec 2008) | 1 line
  
  Fix #951: make tests to clean temp files properly
................
  r6284 | jarrod.millman | 2009-01-01 08:25:03 +0900 (Thu, 01 Jan 2009) | 2 lines
  
  ran reindent
................
  r6285 | alan.mcintyre | 2009-01-01 08:46:34 +0900 (Thu, 01 Jan 2009) | 15 lines
  
  Remove the following deprecated items from numpy.testing:
  
  - ParametricTestCase 
  - The following arguments from numpy.testing.Tester.test(): level, 
  verbosity, 
    all, sys_argv, testcase_pattern
  - Path manipulation functions: set_package_path, set_local_path, 
  restore_path
  - NumpyTestCase, NumpyTest
  
  Also separated testing parameter setup from NoseTester.test into 
  NoseTester.prepare_test_args for use in a utility script for valgrind 
  testing (see NumPy ticket #784).
................
  r6286 | jarrod.millman | 2009-01-01 16:56:53 +0900 (Thu, 01 Jan 2009) | 2 lines
  
  add default include dir for Fedora/Red Hat (see SciPy ticket 817)
................
  r6291 | cdavid | 2009-01-04 19:57:39 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Do not import md5 on python >= 2.6; use hashlib instead.
................
  r6292 | cdavid | 2009-01-04 20:08:16 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Do not use popen* but subprocess.Popen instead.
................
  r6293 | cdavid | 2009-01-04 21:03:29 +0900 (Sun, 04 Jan 2009) | 1 line
  
  Revert md5 change: hashlib.md5 is not a drop-in replacement for md5.
................
  r6294 | pierregm | 2009-01-05 05:16:00 +0900 (Mon, 05 Jan 2009) | 2 lines
  
  * adapted default_fill_value for flexible datatype
  * fixed max/minimum_fill_value for flexible datatype
................
  r6295 | stefan | 2009-01-06 06:51:18 +0900 (Tue, 06 Jan 2009) | 1 line
  
  Credit more developers.
................
  r6296 | pierregm | 2009-01-06 07:52:21 +0900 (Tue, 06 Jan 2009) | 1 line
  
  *moved the printing templates out of MaskedArray.__repr__
................
  r6297 | stefan | 2009-01-06 19:09:00 +0900 (Tue, 06 Jan 2009) | 1 line
  
  Use new-style classes with multiple-inheritance to address bug in IronPython.
................
  r6298 | pierregm | 2009-01-07 05:35:37 +0900 (Wed, 07 Jan 2009) | 1 line
  
  * Bugfix #961
................
  r6299 | pierregm | 2009-01-08 03:14:12 +0900 (Thu, 08 Jan 2009) | 1 line
  
  * Fixed iadd/isub/imul when the base array has no mask but the other array does
................
  r6300 | pierregm | 2009-01-08 07:34:51 +0900 (Thu, 08 Jan 2009) | 3 lines
  
  * Renamed `torecords` to `toflex`, keeping `torecords` as an alias
  * Introduced `fromflex`, to reconstruct a masked_array from the output of `toflex` (can’t `use fromrecords` as it would clash with `numpy.ma.mrecords.fromrecords`)
  * Fixed a bug in MaskedBinaryOperation (#979) (wrong array broadcasting)
................
  r6301 | cdavid | 2009-01-08 18:19:00 +0900 (Thu, 08 Jan 2009) | 1 line
  
  Avoid putting things into stderr when errors occurs in f2py wrappers; put all the info in the python error string instead.
................
  r6302 | cdavid | 2009-01-09 00:11:32 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Fix python 2.4 issue.
................
  r6303 | chanley | 2009-01-09 01:30:01 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Fix test_print.py function _test_locale_independance() since str(1.2) does not use the LC_NUMERIC locale to convert numbers.  Fix from Mark Sienkiewicz.
................
  r6304 | cdavid | 2009-01-09 04:22:21 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Revert buggy test fix for locale independecce.
................
  r6305 | pierregm | 2009-01-09 05:02:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  * Add __eq__ and __ne__ for support of flexible arrays.
  * Fixed .filled for nested structures
................
  r6306 | pierregm | 2009-01-09 06:51:04 +0900 (Fri, 09 Jan 2009) | 1 line
  
  * Remove a debugging print statement.
................
  r6307 | jarrod.millman | 2009-01-09 11:14:35 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  Updated license file
................
  r6308 | cdavid | 2009-01-09 14:26:58 +0900 (Fri, 09 Jan 2009) | 1 line
  
  Tag formatting unit tests as known failures.
................
  r6309 | jarrod.millman | 2009-01-09 17:59:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  should be more reliable way to determine what bit platform
................
  r6310 | jarrod.millman | 2009-01-09 18:14:17 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  better default library paths for 64bit arch
................
  r6311 | jarrod.millman | 2009-01-09 18:57:15 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  simplification suggested by stefan
................
  r6312 | jarrod.millman | 2009-01-09 19:02:09 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  switch the order [lib,lib64] --> [lib64,lib] 
................
  r6313 | jarrod.millman | 2009-01-09 19:18:29 +0900 (Fri, 09 Jan 2009) | 2 lines
  
  removed unneeded import
................
  r6314 | jarrod.millman | 2009-01-10 04:37:16 +0900 (Sat, 10 Jan 2009) | 2 lines
  
  can't use append an int to a string
................
  r6315 | pierregm | 2009-01-10 05:18:12 +0900 (Sat, 10 Jan 2009) | 2 lines
  
  * Added flatten_structured_arrays
  * Fixed _get_recordarray for nested structures
................
  r6316 | pierregm | 2009-01-10 10:53:05 +0900 (Sat, 10 Jan 2009) | 1 line
  
  * Add flatten_structured_array to the namespace
................
  r6320 | pierregm | 2009-01-14 06:01:58 +0900 (Wed, 14 Jan 2009) | 9 lines
  
  numpy.ma.core:
  * introduced baseclass, sharedmask and hardmask as readonly properties of MaskedArray
  * docstrings update
  
  numpy.ma.extras:
  * docstring updates
  
  docs/reference
  * introduced maskedarray, maskedarray.baseclass, maskedarray.generic
................
  r6321 | stefan | 2009-01-14 16:14:27 +0900 (Wed, 14 Jan 2009) | 2 lines
  
  Docstring: remove old floating point arithmetic, parallel
  execution and postponed import references.
................
  r6322 | stefan | 2009-01-14 16:55:16 +0900 (Wed, 14 Jan 2009) | 1 line
  
  Fix printing of limits.
................
  r6323 | stefan | 2009-01-14 16:56:10 +0900 (Wed, 14 Jan 2009) | 1 line
  
  Fix finfo to work on all instances, not just NumPy scalars.
................
  r6324 | pierregm | 2009-01-17 09:15:15 +0900 (Sat, 17 Jan 2009) | 1 line
  
  * fixed _arraymethod.__call__ for structured arrays
................
  r6325 | ptvirtan | 2009-01-18 06:24:13 +0900 (Sun, 18 Jan 2009) | 3 lines
  
  Make `trapz` accept 1-D `x` parameter for n-d `y`, even if axis != -1.
  
  Additional tests included.
................
  r6326 | pierregm | 2009-01-19 17:53:53 +0900 (Mon, 19 Jan 2009) | 3 lines
  
  * renamed FlatIter to MaskedIterator
  * added __getitem__ to MaskedIterator
................
  r6327 | pierregm | 2009-01-19 18:01:24 +0900 (Mon, 19 Jan 2009) | 2 lines
  
  * replace np.asarray by np.asanyarray in unique1d
................
  r6328 | pierregm | 2009-01-19 18:04:20 +0900 (Mon, 19 Jan 2009) | 2 lines
  
  * add intersect1d, intersect1d_nu, setdiff1d, setmember1d, setxor1d, unique1d, union1d
  * use np.atleast1d instead of ma.atleast1d
................
  r6329 | pierregm | 2009-01-20 06:22:52 +0900 (Tue, 20 Jan 2009) | 3 lines
  
  * lib     : introduced _iotools
  * lib.io : introduced genfromtxt, ndfromtxt, mafromtxt, recfromtxt, recfromcsv.
................
  r6330 | pierregm | 2009-01-22 14:37:36 +0900 (Thu, 22 Jan 2009) | 1 line
  
  * genfromtxt : if names is True, accept a line starting with a comment character as header.
................
  r6331 | pierregm | 2009-01-22 14:40:25 +0900 (Thu, 22 Jan 2009) | 1 line
  
  * added recfunctions, a collection of utilities to manipulate structured arrays.
................
  r6332 | pierregm | 2009-01-23 03:21:32 +0900 (Fri, 23 Jan 2009) | 2 lines
  
  * fixed a machine-dependent issue on default int ('<i4' on OS X, '<i8' on linux) ?
  * fixed an machine-dependent issue on argsort ?
................
  r6333 | cdavid | 2009-01-24 17:02:14 +0900 (Sat, 24 Jan 2009) | 1 line
  
  Fix compilation error on 2.4.
................
  r6334 | pierregm | 2009-01-27 06:04:26 +0900 (Tue, 27 Jan 2009) | 7 lines
  
  * _iotools.StringConverter :
      - add a _checked attribute to indicate whether the converter has been upgraded or not.
      - switched the default value for bool to False
  * io.genfromtxt:
      - fixed for the case where a whole column is masked: switch to bool or the common dtype (if needed)
................
  r6335 | pierregm | 2009-01-27 11:46:26 +0900 (Tue, 27 Jan 2009) | 1 line
  
  * prevent MaskedBinaryOperation and DomainedBinaryOperation to shrink the mask of the output when at least one of the inputs has a mask full of False
................
  r6336 | matthew.brett@gmail.com | 2009-01-30 09:26:44 +0900 (Fri, 30 Jan 2009) | 1 line
  
  New docstrings for byteorder and newbyteorder()
................
  r6337 | pierregm | 2009-02-02 14:20:17 +0900 (Mon, 02 Feb 2009) | 2 lines
  
  * Added a 'autoconvert' option to stack_arrays.
  * Fixed 'stack_arrays' to work with fields with titles.
................
  r6338 | pierregm | 2009-02-04 02:11:44 +0900 (Wed, 04 Feb 2009) | 1 line
  
  * Make sure that StringConverter.update sets the type to object if it can't define it.
................
  r6339 | pierregm | 2009-02-05 05:52:36 +0900 (Thu, 05 Feb 2009) | 2 lines
  
  * test__iotools : prevent test_upgrademapper if dateutil is not installed
  * MaskedArray.__rmul__ : switch to multiply(self, other)
................
  r6340 | pierregm | 2009-02-05 06:53:05 +0900 (Thu, 05 Feb 2009) | 1 line
  
  test_upgrademapper : got rid of the dateutil import
................
  r6341 | pierregm | 2009-02-05 13:31:51 +0900 (Thu, 05 Feb 2009) | 2 lines
  
  *  genfromtxt : Fixed when a dtype involving objects is explicitly given. Raise a NotImplementedError if the dtype is nested.
  * _iotools : make sure StringConverter gets properly initiated when a function returning a np.object is used as input parameter.
................
  r6342 | alan.mcintyre | 2009-02-06 05:11:40 +0900 (Fri, 06 Feb 2009) | 6 lines
  
  Issue #957:
  - Fix problems with test decorators when used on test generators.  
  - The skip/fail arguments for skipif and knownfailureif can now be 
    either a bool or a callable that returns a bool.
  - Added tests for the test decorators. 
................
  r6343 | ptvirtan | 2009-02-06 09:27:08 +0900 (Fri, 06 Feb 2009) | 1 line
  
  doc/numpydoc: work better together with Sphinx's  config option
................
  r6344 | ptvirtan | 2009-02-06 09:51:41 +0900 (Fri, 06 Feb 2009) | 1 line
  
  doc: Move maskedarray docs upward in TOC
................
  r6345 | oliphant | 2009-02-06 15:25:50 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Avoid re-creating the sequence when there is only one field in the regular expression.
................
  r6346 | oliphant | 2009-02-06 15:31:11 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Removed an unneccessary return statement in a unit test.
................
  r6347 | pearu | 2009-02-06 23:36:58 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Fix a bug: python system_info.py failed because _pkg_config_info defined section to be None.
................
  r6348 | pearu | 2009-02-06 23:38:57 +0900 (Fri, 06 Feb 2009) | 1 line
  
  Fix another bug, see last commit.
................
  r6349 | pierregm | 2009-02-07 18:19:12 +0900 (Sat, 07 Feb 2009) | 2 lines
  
  MaskedArray.resize : systematically raise a TypeError exception, as a masked array never owns its data
  MaskedIterator : fixed to allow .flat on masked matrices
................
  r6350 | pierregm | 2009-02-08 03:51:31 +0900 (Sun, 08 Feb 2009) | 1 line
................
  r6351 | ptvirtan | 2009-02-10 05:18:08 +0900 (Tue, 10 Feb 2009) | 1 line
  
  Fix #955: fix errobj leak in scalarmath floating point error handling
................
  r6352 | pierregm | 2009-02-10 09:42:40 +0900 (Tue, 10 Feb 2009) | 1 line
  
  * prevent modifications to the mask to be back-propagated w/ __array_wrap__
................
  r6354 | cdavid | 2009-02-10 19:44:01 +0900 (Tue, 10 Feb 2009) | 1 line
  
  Fix hyphen (patch from debian package).
................
  r6356 | pierregm | 2009-02-11 10:51:28 +0900 (Wed, 11 Feb 2009) | 1 line
  
  * MaskedArray.__array_wrap__ : forces the domain (if any) to a ndarray (fill with True)
................
  r6358 | oliphant | 2009-02-12 13:22:03 +0900 (Thu, 12 Feb 2009) | 1 line
  
  Add multiple-field access by making a copy of the array and filling with the selected fields.
................
  r6359 | stefan | 2009-02-12 14:44:07 +0900 (Thu, 12 Feb 2009) | 2 lines
  
  Trust user's specification of MACOSX_DEPLOYMENT_TARGET [patch by Brian
  Granger].
................
  r6360 | cdavid | 2009-02-14 23:54:26 +0900 (Sat, 14 Feb 2009) | 1 line
  
  Merge fix_float_format branch into the trunk.
................
  r6361 | cdavid | 2009-02-15 00:02:39 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Fix typo in multiarray tests.
................
  r6362 | cdavid | 2009-02-15 00:03:22 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Remove leftover in TestIO.
................
  r6363 | cdavid | 2009-02-15 02:03:51 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Include C99 math compatbility layer in multiarray - isnan and co needed by numpyos.c
................
  r6364 | ptvirtan | 2009-02-15 07:09:26 +0900 (Sun, 15 Feb 2009) | 1 line
  
  More add_newdocs entries, and make add_newdoc capable of adding docs also to normal Python objects.
................
  r6365 | ptvirtan | 2009-02-15 07:10:24 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Move (un)packbits docstrings to add_newdocs.py. Fix typos.
................
  r6366 | ptvirtan | 2009-02-15 07:11:19 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Document constants in numpy.doc.constants
................
  r6367 | ptvirtan | 2009-02-15 07:38:32 +0900 (Sun, 15 Feb 2009) | 1 line
  
  Move numpy.lib __doc__ back to info.py; was moved to __init__.py by mistake.
................
  r6368 | pierregm | 2009-02-15 07:42:29 +0900 (Sun, 15 Feb 2009) | 1 line
  
  * genfromtxt : fixed case when using explicit converters and explicit dtype.
................
",LICENSE.txt,MANIFEST.in,THANKS.txt,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/maskedarray.rst,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,numpy/add_newdocs.py,numpy/core/SConscript,numpy/core/_internal.py,numpy/core/code_generators/generate_numpy_api.py,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_print.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_unicode.py,numpy/ctypeslib.py,numpy/distutils/command/config.py,numpy/distutils/command/scons.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/lib2def.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/doc/constants.py,numpy/f2py/cfuncs.py,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/lib/__init__.py,numpy/lib/_iotools.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/io.py,numpy/lib/recfunctions.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_recfunctions.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/numarray/util.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/rng.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/parametric.py,numpy/testing/tests/test_decorators.py,setup.py
b4b2d63b15f694ff9fc469f366af5b9a2e3653fc,"* genfromtxt : fixed case when using explicit converters and explicit dtype.
",numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
c1877cb6d2f56a817fcbc046820abcc338302d3f,"Move numpy.lib __doc__ back to info.py; was moved to __init__.py by mistake.
",numpy/lib/__init__.py,numpy/lib/info.py
e8eb240050b0bc309458438a5e3fb7861f702a34,"Document constants in numpy.doc.constants
",numpy/doc/constants.py
11943ab29867441fc0b8662f77eb788afc5f4f46,"Move (un)packbits docstrings to add_newdocs.py. Fix typos.
",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c
9902bd1969a738ddec9e01d019d98142dda59f3f,"More add_newdocs entries, and make add_newdoc capable of adding docs also to normal Python objects.
",numpy/add_newdocs.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/src/_compiled_base.c
33d79edf8e06fd69b26a9331d612caadb7b55672,"Include C99 math compatbility layer in multiarray - isnan and co needed by numpyos.c
",numpy/core/src/multiarraymodule.c
6429fa32eff754c1dab74195593c96429ba2faf9,"Remove leftover in TestIO.
",numpy/core/tests/test_multiarray.py
5bc4aefda5bfd7dde9599e2f75ce58696d9bc2c1,"Fix typo in multiarray tests.
",numpy/core/tests/test_multiarray.py
54f7334e05b9519acddfb5308420d41bb8e5323b,"Merge fix_float_format branch into the trunk.
",numpy/core/SConscript,numpy/core/setup.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/numpyos.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_print.py
cebdbb3cffd595a3529f6480f61798a9f8499b9c,"Trust user's specification of MACOSX_DEPLOYMENT_TARGET [patch by Brian
Granger].
",numpy/distutils/fcompiler/gnu.py
0672fd89b34b298928ca186af8ebee41d927da8f,"Add multiple-field access by making a copy of the array and filling with the selected fields.
",numpy/core/_internal.py,numpy/core/src/arrayobject.c,numpy/core/tests/test_numerictypes.py
27562549af2d04f89328fcceb99ad8aa956bc978,"* MaskedArray.__array_wrap__ : forces the domain (if any) to a ndarray (fill with True)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
932368ec1f9ef56b61cf3e7eef1550df32ad57c3,"Fix hyphen (patch from debian package).
",numpy/f2py/f2py.1
b3e5fdf55bb9a16f8fe78e11b2a9c5f9dd72f5c1,"* prevent modifications to the mask to be back-propagated w/ __array_wrap__
",numpy/ma/core.py,numpy/ma/tests/test_core.py
114c5c609e55f0863a30b1edff7b1c7bf783263f,"Fix #955: fix errobj leak in scalarmath floating point error handling
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_regression.py
dab616fe622b7669278be1a139169bf323718241,"
",numpy/ma/tests/test_core.py
c180e36cf4438947de5ba38c90ec30e9538f2f10,"MaskedArray.resize : systematically raise a TypeError exception, as a masked array never owns its data
MaskedIterator : fixed to allow .flat on masked matrices
",numpy/ma/core.py,numpy/ma/tests/test_core.py
b9086fdf39941343fde65551b8667e635e05f14f,"Fix another bug, see last commit.
",numpy/distutils/system_info.py
219327a2c060304137aacc7bd0a335c35b700a8d,"Fix a bug: python system_info.py failed because _pkg_config_info defined section to be None.
",numpy/distutils/system_info.py
675c81d574553a0eb0ddbbbdf2933be08c982a7a,"Removed an unneccessary return statement in a unit test.
",numpy/lib/tests/test_io.py
0b0c3a1b68c76b14c5b8d7291df730f8fe618843,"Avoid re-creating the sequence when there is only one field in the regular expression.
",numpy/lib/io.py
71320b2952f2bb3c221d24fbb5560cc439269ff6,"doc: Move maskedarray docs upward in TOC
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.rst,doc/source/reference/maskedarray.rst
d46fa57c68b1f6ff4e9f2da6bf9c1e60045c89cf,"doc/numpydoc: work better together with Sphinx's  config option
",doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py
aeb090d5f7081a166357fa850950da89feb25e97,"Issue #957:
- Fix problems with test decorators when used on test generators.  
- The skip/fail arguments for skipif and knownfailureif can now be 
  either a bool or a callable that returns a bool.
- Added tests for the test decorators. 
",numpy/testing/decorators.py,numpy/testing/tests/test_decorators.py
911e94dd0a64adae9fb2057fb0210e512a9b7d4a,"*  genfromtxt : Fixed when a dtype involving objects is explicitly given. Raise a NotImplementedError if the dtype is nested.
* _iotools : make sure StringConverter gets properly initiated when a function returning a np.object is used as input parameter.
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
12750f7b0f6a5aa2cb318848de8e09076eb30fa2,"test_upgrademapper : got rid of the dateutil import
",numpy/lib/tests/test__iotools.py
37beec6667774346ded4f2b76a77cd5a3fbda7c3,"* test__iotools : prevent test_upgrademapper if dateutil is not installed
* MaskedArray.__rmul__ : switch to multiply(self, other)
",numpy/lib/tests/test__iotools.py,numpy/ma/core.py
8ab9363953bd9e77bf1bf84c931b426422b90558,"* Make sure that StringConverter.update sets the type to object if it can't define it.
",numpy/lib/_iotools.py,numpy/lib/tests/test_io.py
f278427bb52fdfdc524d1da4032777ca5290e49e,"* Added a 'autoconvert' option to stack_arrays.
* Fixed 'stack_arrays' to work with fields with titles.
",numpy/lib/recfunctions.py,numpy/lib/tests/test_recfunctions.py
d3e84d6b104ee2d95e46ffd65d461f5351755a46,"New docstrings for byteorder and newbyteorder()
",numpy/add_newdocs.py
f885786515b1e3cf5f293ca508c08a9f782f5076,"* prevent MaskedBinaryOperation and DomainedBinaryOperation to shrink the mask of the output when at least one of the inputs has a mask full of False
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2e346ec1e1000c11f484708e2997b7b95808a00d,"* _iotools.StringConverter :
    - add a _checked attribute to indicate whether the converter has been upgraded or not.
    - switched the default value for bool to False
* io.genfromtxt:
    - fixed for the case where a whole column is masked: switch to bool or the common dtype (if needed)

",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test_io.py
9ac9630d805fd4ec235e009782f019fa8d8e8fa9,"Fix compilation error on 2.4.
",numpy/core/src/scalartypes.inc.src
27ba720d93728b35484034999693621a26f49137,"* fixed a machine-dependent issue on default int ('<i4' on OS X, '<i8' on linux) ?
* fixed an machine-dependent issue on argsort ?
",numpy/lib/tests/test_recfunctions.py
ed422209adca76f37e5bfe4d57c7bf383dfb59d0,"* added recfunctions, a collection of utilities to manipulate structured arrays.
",numpy/lib/recfunctions.py,numpy/lib/tests/test_recfunctions.py
7adaad411b9896f7dd8100cb75e80a313c082d2c,"* genfromtxt : if names is True, accept a line starting with a comment character as header.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
8bd6c70d47e16fd81c8e3aefd4b2ec6dd90f38d6,"* lib     : introduced _iotools
* lib.io : introduced genfromtxt, ndfromtxt, mafromtxt, recfromtxt, recfromcsv.
",numpy/lib/_iotools.py,numpy/lib/io.py,numpy/lib/tests/test__iotools.py,numpy/lib/tests/test_io.py
065626fa64df3eb51f6cb5eafcb466818ebb621d,"* add intersect1d, intersect1d_nu, setdiff1d, setmember1d, setxor1d, unique1d, union1d
* use np.atleast1d instead of ma.atleast1d
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
0061e1821d58636d92f7f2917fc94351f34daa98,"* replace np.asarray by np.asanyarray in unique1d
",numpy/lib/arraysetops.py
767ea8504509a32f092be069df1ea07c2452f85a,"* renamed FlatIter to MaskedIterator
* added __getitem__ to MaskedIterator
",numpy/ma/core.py
9efaa09baca5ce2d64447bdcc91556227ab717c2,"Make `trapz` accept 1-D `x` parameter for n-d `y`, even if axis != -1.

Additional tests included.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
4b9c0f2208305046275c74ec1c9d6fda8af1f5bb,"* fixed _arraymethod.__call__ for structured arrays
",numpy/ma/core.py
9837e0234859a4dc0fcbfe1acd8902faeb5a6558,"Fix finfo to work on all instances, not just NumPy scalars.
",numpy/lib/getlimits.py,numpy/lib/tests/test_getlimits.py
1775a591a73fe76162ea871f07349648620ac5b5,"Fix printing of limits.
",numpy/lib/getlimits.py
2d1f2e075b51effc392019f0dce6d5e777adf4e4,"Docstring: remove old floating point arithmetic, parallel
execution and postponed import references.
",numpy/lib/info.py
6b633fa3c8f08dd7b1658ee5ed8e560e2f3a9f5f,"numpy.ma.core:
* introduced baseclass, sharedmask and hardmask as readonly properties of MaskedArray
* docstrings update

numpy.ma.extras:
* docstring updates

docs/reference
* introduced maskedarray, maskedarray.baseclass, maskedarray.generic
",doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/maskedarray.baseclass.rst,doc/source/reference/maskedarray.generic.rst,doc/source/reference/maskedarray.rst,numpy/ma/core.py,numpy/ma/extras.py
ca6baf94ce5a1396e8f063b0d9d440b725f3be70,"Initialize a variable properly
",numpy/core/src/numpyos.c
2dd3ad531b59ee15ef54aeb10b261956d7407d94,"Recognize POSIX nan/inf representations in NumPyOS_strtod.

Collect some NaN and Inf constants to a single place.
",numpy/core/setup.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/{npy_format.c,numpy/core/src/scalartypes.inc.src
8f9ab09976f4f10801eff1e0cb5a8bbe6ba8f8ae,"More tests for fromstring, fromfile, tostring, tofile.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_print.py
71194089c90f9c65cab1b15671491aa5a8c2e43c,"* Add flatten_structured_array to the namespace
",numpy/ma/core.py,numpy/ma/tests/test_core.py
7dfb0e620c2545c7860c05a66abc1b2429f8e415,"* Added flatten_structured_arrays
* Fixed _get_recordarray for nested structures
",numpy/ma/core.py,numpy/ma/tests/test_core.py
fbf902ca2bf3f119b4d7b77833e4a3bc70c5101e,"can't use append an int to a string
",numpy/distutils/system_info.py
aef4882cdd0245cd2bb5d1787d697e7a37cd7b3a,"removed unneeded import
",numpy/distutils/system_info.py
84ef29554f0fa4f2a6ddf32dd44c6c918f375892,"switch the order [lib,lib64] --> [lib64,lib] 
",numpy/distutils/system_info.py
ac3523b6a201060fa9efe41909ae6562b1546d00,"simplification suggested by stefan
",numpy/distutils/system_info.py
ff368ca20137f1e8dddb572af64af9330254611c,"better default library paths for 64bit arch
",numpy/distutils/system_info.py
422c1cbd0cb7141ebbb8acdde654d7b9901a257b,"should be more reliable way to determine what bit platform
",numpy/distutils/system_info.py
49008baf9c9f707ed06f3308c0b981bb5e3a48c1,"Tag formatting unit tests as known failures.
",numpy/core/tests/test_print.py
efe5b581bc9b0ebeca3b5ef6511d6d8339ab5dc0,"Updated license file
",LICENSE.txt
b374b05bf6f25ff8aa1f738c83a2427d2ff822b0,"* Remove a debugging print statement.
",numpy/ma/core.py
a5da87c6254f183dc068d912dde9fd00341d926f,"* Add __eq__ and __ne__ for support of flexible arrays.
* Fixed .filled for nested structures
",numpy/ma/core.py,numpy/ma/tests/test_core.py
99f428eeb52ce65e79defff4306aebc601ee1c42,"Revert buggy test fix for locale independecce.
",numpy/core/tests/test_print.py
a5ca79d91f5ded5bee86407605e3f2004af3e6a6,"Fix test_print.py function _test_locale_independance() since str(1.2) does not use the LC_NUMERIC locale to convert numbers.  Fix from Mark Sienkiewicz.
",numpy/core/tests/test_print.py
c261e48a38e89bcc97489a41f0bc3c7fbcd93385,"Fix python 2.4 issue.
",numpy/core/tests/test_print.py
aa423d9b2a50e6c20b11f308013b0afcf0b9c6b4,"Avoid putting things into stderr when errors occurs in f2py wrappers; put all the info in the python error string instead.
",numpy/f2py/cfuncs.py
d94861c391c3411407da7244881f78e006ac3fb9,"* Renamed `torecords` to `toflex`, keeping `torecords` as an alias
* Introduced `fromflex`, to reconstruct a masked_array from the output of `toflex` (can’t `use fromrecords` as it would clash with `numpy.ma.mrecords.fromrecords`)
* Fixed a bug in MaskedBinaryOperation (#979) (wrong array broadcasting)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
949fe033fac5c6b555fd9b2b8212005cc5bfe1fd,"* Fixed iadd/isub/imul when the base array has no mask but the other array does
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c5137ea1a63bd721dd47bb2a5d588d161d0e9b76,"* Bugfix #961
",numpy/ma/core.py
4ec7a628f9e35a1dfcc5ab2a3c89f15006f6353d,"Use new-style classes with multiple-inheritance to address bug in IronPython.
",numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_unicode.py,numpy/lib/tests/test_io.py,numpy/linalg/tests/test_linalg.py
70c84a8cd4401a3e80648af5eea4aa1485a986d5,"*moved the printing templates out of MaskedArray.__repr__
",numpy/ma/core.py
c6073c1d59ade54017a1f6c9fad9fc53ede06afe,"Credit more developers.
",THANKS.txt
0d76f639e0bac272f0feeeb681453af7539e7d1b,"* adapted default_fill_value for flexible datatype
* fixed max/minimum_fill_value for flexible datatype
",numpy/ma/core.py,numpy/ma/tests/test_core.py
6458485c880802fb1cc831cac2d22db5b0004438,"Revert md5 change: hashlib.md5 is not a drop-in replacement for md5.
",numpy/core/code_generators/genapi.py
f5afa7836d56640f25ff3fbd2c59b8dcf016e26f,"Do not use popen* but subprocess.Popen instead.
",numpy/distutils/lib2def.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py
1bd6b58098c4fce234889d2709e13fff2e5ce40e,"Do not import md5 on python >= 2.6; use hashlib instead.
",numpy/core/code_generators/genapi.py
9fb2c30a12ae191051ee3f3e71d74dda9cdfae81,"Do not use strncpy but strcpy: we know the string sizes, and strncpy sucks anyway.
",numpy/core/src/npy_format.c
cd308e4be7873cd0d8f07bea9f79545092dac0f3,"Remove some tabs.
",numpy/core/src/npy_format.c
f838125f961a5a3346bef9cb843aaf6188dbcb2a,"add default include dir for Fedora/Red Hat (see SciPy ticket 817)
",numpy/distutils/system_info.py
99d8b6a45bae8cd40a230a76c022aad277337c09,"Remove the following deprecated items from numpy.testing:

- ParametricTestCase 
- The following arguments from numpy.testing.Tester.test(): level, 
verbosity, 
  all, sys_argv, testcase_pattern
- Path manipulation functions: set_package_path, set_local_path, 
restore_path
- NumpyTestCase, NumpyTest

Also separated testing parameter setup from NoseTester.test into 
NoseTester.prepare_test_args for use in a utility script for valgrind 
testing (see NumPy ticket #784).

",numpy/ctypeslib.py,numpy/testing/__init__.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/parametric.py
8c448a31743b9ea5bc18e06dfa42c078206ca529,"ran reindent
",numpy/core/setup.py,numpy/core/tests/test_multiarray.py,numpy/distutils/command/config.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py,numpy/f2py/f2py2e.py,numpy/lib/function_base.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_subclassing.py,numpy/numarray/util.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/rng.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py
1bb5bb5529d78ba95e76c802544f8b6efa84ec33,"Fix #951: make tests to clean temp files properly
",numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py
d1bb819d07c17fbb5cd91f9fe7b2a31c19d295ee,"Rewrite NumPyOS_ascii_strtod to not assume that the 'foreign' decimal point is ','
",numpy/core/src/npy_format.c
64025218bdc6af6d4d8e6ac20faf499784cfde4c,"Reindent and pep-7ize npy_format.c
",numpy/core/src/npy_format.c
0ae0cb54e0d940b4f7173101c67903dd29a1cb65,"Speed up NumPyOS_ascii_strtod
",numpy/core/src/npy_format.c
8b4e9ab86738e87f94be10a5f98072c250ec5ffa,"Implement NumPyOS_ascii_strtod to work around a bug in PyOS_ascii_strtod. Use it to make fromstring properly locale-independent.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/npy_format.c
87d1c9c3c310874e1502c8691bc953fce539c166,"Implement NumPyOS_ascii_ftof, and use it instead of fscanf to make fromfile locale-independent
",numpy/core/src/arraytypes.inc.src,numpy/core/src/npy_format.c
9b2917caa039eb353e889162e2c5ef23679c2429,"Improve fromfile/fromstring test coverage, and add tests to check locale-independency
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_print.py
a5c139c0de3fa8069a6b8205e25adea0f2f33b2d,"Fix conditional for min number of digits in exponent for float formatting.
",numpy/core/src/npy_format.c
a90b4b27d5cdfeb558bdf51c1dc988204d730f72,"Use reference for inf/nan.
",numpy/core/tests/test_print.py
e487e29f09768db71e92a50d40348a680ff221f2,"Fix single precision complex/real redirected print tests.
",numpy/core/tests/test_print.py
a41f1aefef662be0645c61da5bf7849d0c68194c,"Fix complex reference.
",numpy/core/tests/test_print.py
d7b5be19940936c10ed1ed45879d6aef56cb55a6,"Merged revisions 6271 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6271 | cdavid | 2008-12-30 15:32:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Do not use dict for reference: hashing on scalar arrays does not work as I expected.
........
",numpy/core/tests/test_print.py
e69b591fe458d0efda7fdaef4194358dfd6a0872,"Do not use dict for reference: hashing on scalar arrays does not work as I expected.
",numpy/core/tests/test_print.py
cebec2247bd9c1d459e1722f8da9e42009851660,"Merged revisions 6268 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6268 | cdavid | 2008-12-30 15:12:26 +0900 (Tue, 30 Dec 2008) | 1 line
  
  complex scalar arrays cannot be created from real/imag args: wrap init values in a complex.
........
",numpy/core/tests/test_print.py
778d33648daeda86be016c1c6a490a2fb5387b1d,"Merged revisions 6266 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6266 | cdavid | 2008-12-30 15:08:06 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
........
",numpy/core/tests/test_print.py
0fb51ad9a424075ef441159c9d92779d692f4032,"complex scalar arrays cannot be created from real/imag args: wrap init values in a complex.
",numpy/core/tests/test_print.py
e0114e352ce3637ed1a6702c96da6a8441000a3a,"Merged revisions 6265 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6265 | cdavid | 2008-12-30 15:03:56 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo.
........
",numpy/core/tests/test_print.py
858e4e923d08524f7339e53a713978f038cc0b2f,"Fix typo.
",numpy/core/tests/test_print.py
45b829bd7f13a859f3b3b13b4e4feba4fa2dd624,"Fix typo.
",numpy/core/tests/test_print.py
27b0df0424f062c9d944fede7977640fb5a2fced,"Merged revisions 6263 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6263 | cdavid | 2008-12-30 15:01:31 +0900 (Tue, 30 Dec 2008) | 1 line
  
  More fixes for print tests.
........
",numpy/core/tests/test_print.py
ddf0d0dee18eab8c8e30f9809c38fa641b9afaa8,"More fixes for print tests.
",numpy/core/tests/test_print.py
29326721164c082afbec863d91e0f17a68d4f97d,"Merged revisions 6260-6261 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6260 | cdavid | 2008-12-30 14:50:18 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix more formatting tests on win32.
........
  r6261 | cdavid | 2008-12-30 14:52:16 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix some more redirected output print tests.
........
",numpy/core/tests/test_print.py
459125ba40852b2e4fa897500abbafad6390f692,"Fix some more redirected output print tests.
",numpy/core/tests/test_print.py
733feabcdba9aae2dbc1d71ec17c9b7483e68a1f,"Fix more formatting tests on win32.
",numpy/core/tests/test_print.py
ab58d5e0e7e02989127dfd562a1220138ff25223,"Merged revisions 6258 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6258 | cdavid | 2008-12-30 14:42:03 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Hardcode reference for inf/nan-involved values.
........
",numpy/core/tests/test_print.py
c1c497b67561d7dc6dbfb70d5fc7c1c5f2494a9f,"Hardcode reference for inf/nan-involved values.
",numpy/core/tests/test_print.py
5e3b3d2b6c7fc861d1443a95d2c2de52d5aca31a,"Merged revisions 6256 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6256 | cdavid | 2008-12-30 14:34:22 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Special case float tests on windows: python 2.5 and below have >=3 digits in the exp.
........
",numpy/core/tests/test_print.py
02b0f1951332140dedf8c2cceedc6af3ae74059f,"Special case float tests on windows: python 2.5 and below have >=3 digits in the exp.
",numpy/core/tests/test_print.py
044d8a30cf0e628f1bf0b7560bd90689ea11d0ee,"Force at least 3 digits for the exponent on windows and python < 2.6.
",numpy/core/src/npy_format.c
04cc210a41ada5ef3165cc3915ca5107e4c37e99,"Merged revisions 6253 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6253 | cdavid | 2008-12-30 14:15:09 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix typo in test.
........
",numpy/core/tests/test_print.py
90ebbb8e4e37c2d6562735a5192d3116de2621ac,"Fix typo in test.
",numpy/core/tests/test_print.py
35e9bb436c7fcc73111384f079ac1b5d5b2ef3aa,"Merged revisions 6251 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6251 | cdavid | 2008-12-30 14:12:50 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Use np.inf instead of float('inf'), as the later does not work on windows for python < 2.6.
........
",numpy/core/tests/test_print.py
a4a94b1be5a8d195b0651ad1411b5c1a61cf54eb,"Use np.inf instead of float('inf'), as the later does not work on windows for python < 2.6.
",numpy/core/tests/test_print.py
60f262168aa7da060c5b172e5f75a411f3bb7d8b,"Merged revisions 6247-6249 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/fix_float_format

........
  r6247 | cdavid | 2008-12-30 13:41:37 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Handle 1e10 specially, as it is the limit where exp notation is shorter than decimal for single precision, but not for double (python native one).
........
  r6248 | cdavid | 2008-12-30 13:47:38 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Refactor a bit redirected output print test.
........
  r6249 | cdavid | 2008-12-30 13:49:31 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix test for single precision print.
........
",numpy/core/tests/test_print.py
31b6cdf83b48b7f6d7ee86f341bf7ed47b6d4a29,"Fix test for single precision print.
",numpy/core/tests/test_print.py
3e0e21c68d2df22ff73e98205b144266764a9412,"Refactor a bit redirected output print test.
",numpy/core/tests/test_print.py
090bb80eb6f4ca3fa4c644ab0a3b1a874017ebae,"Handle 1e10 specially, as it is the limit where exp notation is shorter than decimal for single precision, but not for double (python native one).
",numpy/core/tests/test_print.py
d8e1882b8d65ba4e2286f847723441f97eb311ea,"Enable the tp_print function for float and complex types.
",numpy/core/src/scalartypes.inc.src
4556166f8b5bf0b0c06ef8574268af42e8800d2f,"Merged revisions 6244 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6244 | cdavid | 2008-12-30 13:20:48 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Fix test for print: forgot to make sure the value is a float before comparing it.
........
",numpy/core/tests/test_print.py
9c604cf503061e7bfd8ae6ca81edb30559a2777c,"Fix test for print: forgot to make sure the value is a float before comparing it.
",numpy/core/tests/test_print.py
b85b457d472c24efcd5d57c03a74ac1ac06a705d,"Merged revisions 6240-6241 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6240 | cdavid | 2008-12-30 12:48:11 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add tests for print of float types.
........
  r6241 | cdavid | 2008-12-30 12:56:54 +0900 (Tue, 30 Dec 2008) | 1 line
  
  Add print tests for complex types.
........
",numpy/core/tests/test_print.py
f6f9ac09ac060d7430abf51510eb84cc4c57c08b,"Start working on tp_print implementation for scalar types: add the C functions.
",numpy/core/src/scalartypes.inc.src
ffbeb6e9b3eeb6eadac1407c908ffb510e20a98d,"Add print tests for complex types.
",numpy/core/tests/test_print.py
f66bcae0bf4fd13e499bf77fccf43eeb98bbdc47,"Add tests for print of float types.
",numpy/core/tests/test_print.py
2fcb366d49db8ffbe248f30e9d25775653d24407,"Merged revisions 6236-6238 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6236 | cdavid | 2008-12-29 17:02:15 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add nan/inf tests for formatting.
........
  r6237 | cdavid | 2008-12-29 17:26:04 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Add test for real float types locale independance.
........
  r6238 | cdavid | 2008-12-29 17:35:06 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Clearer error messages for formatting failures.
........
",numpy/core/tests/test_print.py
6ffe6c549b39ee986e635861a112c8e1cea66109,"Clearer error messages for formatting failures.
",numpy/core/tests/test_print.py
b90bfef72d85e68d9df5dfc8145de52c5dff5488,"Add test for real float types locale independance.
",numpy/core/tests/test_print.py
6ef22b445ef4b7840450ecf663800811f229fb47,"Add nan/inf tests for formatting.
",numpy/core/tests/test_print.py
360b8a10d036dfe56f8985a7c56ab94ddca18e34,"Merged revisions 6233-6234 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/fix_float_format

........
  r6233 | cdavid | 2008-12-29 12:49:09 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Use parametric tests for format tests so that it is clearer which type is failing.
........
  r6234 | cdavid | 2008-12-29 12:49:27 +0900 (Mon, 29 Dec 2008) | 1 line
  
  Fix formatting tests: cfloat and cdouble as well as np.float and np.double are the same; make sure we test 4 bytes float.
........
",numpy/core/tests/test_print.py
73a375a3adb140c270444e886b3df842e0b28a86,"Fix formatting tests: cfloat and cdouble as well as np.float and np.double are the same; make sure we test 4 bytes float.
",numpy/core/tests/test_print.py
6136fc2bd2d9d191df7a9e6afd3aa9e4f110d61e,"Use parametric tests for format tests so that it is clearer which type is failing.
",numpy/core/tests/test_print.py
c99ef11d6006d1dfbef5ed343c8f2dfa1dd98449,"Remove unused macros.
",numpy/core/src/scalartypes.inc.src
cfc5619880bcc235c9034580f674f14cc526e8c7,"    Use double format string for long double if necessary in scalar types repr/str.
",numpy/core/src/scalartypes.inc.src
9d18572af4b87e80993b6e9f11407f00d97b8c52,"    Modify NumPyOS_ascii_format* macro so that a cast to a different type than input value can be forced if necessary.
",numpy/core/src/npy_format.c
af03484647c47d37378ffa7b213bd438f79b0e21,"    Define FORCE_NO_LONG_DOUBLE_FORMATTING on win32.
",numpy/core/SConscript,numpy/core/setup.py
c2c210a6599c50c958564d4bd4eeb6b67dfe551b,"    Fix usage of NumPyOS_ascii_format* in scalar array repr/str methods.
",numpy/core/src/scalartypes.inc.src
cad683e6b702a2013ddbce1f164787819d6800e1,"Improve NumPyOS_ascii_format: handle nan and inf.
",numpy/core/src/npy_format.c
0ef7e9670ece97598d83c3954ab95bb1a8a9fc79,"Forgot to add npy_format.c.
",numpy/core/src/npy_format.c
7692d7815cb3499b78c419c5bcd1ad4b7486150e,"Use custom formatting functions.
",numpy/core/setup.py,numpy/core/src/scalartypes.inc.src
ef8690c161d3314358d22443cb5ffe3fa7f7f5af,"Do not add doc sources through add_data_dir: it will put the docs alongside numpy, as a separate package, which is not what we want. Use the manifest instead, since that's the only way I know of to include something in sdist-generated tarballs.
",MANIFEST.in,setup.py
69bf86201ff2d85d9a84470ceb87797ec516f4df,"Revert formatting changes: ascii_formatd only works for double, so we can't use it as it is for our formatting needs.
",numpy/core/setup.py,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
8a7a6c99efe9a92c062c2410e16d5b8ece6654cd,"Use ugly hack for mingw long double pb with complex format function as well.
",numpy/core/src/scalartypes.inc.src
3b31043320f52c41dc11bc3fa228df6841f79644,"Try ugly hack to circumvent long double brokenness with mingw.
",numpy/core/src/scalartypes.inc.src
bdbebc12aded3ab80c1812c04fab3fe96824fac1,"Do not use PyOS_ascii_formatd, as it does not handle long double correctly.
",numpy/core/src/scalartypes.inc.src
b9d034d5b69fa1f2e814759f78ac91a51c55b0ff,"Remove undef of removed macro.
",numpy/core/src/scalartypes.inc.src
0473e28861e0608e218c958227b659330f4f5d2c,"More formatting fixes.
",numpy/core/src/scalartypes.inc.src
4707fd2da807434166e0d76410d46daef30131eb,"Do not define FMTR and FMTI macros, as those are already defined on some platforms.
",numpy/core/src/scalartypes.inc.src
b74dbac7828ad07bbc712147d76a7c6c9a054fec,"Fix formatting.
",numpy/core/src/scalartypes.inc.src
fae7d72e6f51785ce527ea96b405cd6bfb799876,"Include config.h before our C99 math compat layer.
",numpy/core/src/multiarraymodule.c
c8a510b2e41102e145b799eac92460d0d724248b,"Include umath_funcs_c99 in multiarray so that we can use isinf and co macros.
",numpy/core/setup.py,numpy/core/src/multiarraymodule.c
4d1189a221ae1e2160f6d9148590b20fef87d8f1,"Finish formatting fixes for float scalar arrays.
",numpy/core/src/scalartypes.inc.src
5fd2b19e58165813991bc2b32806a9582cb4fbf3,"More work on formatting float.
",numpy/core/src/scalartypes.inc.src
efe79fb286d8cb0d33b9ab136ffd9503aebf3d48,"Fix formatting for purely imaginary complex numbers.
",numpy/core/src/scalartypes.inc.src
050246e89714f62728b922edaa42c2f76be06c5b,"Start working on formatting failure on 2.6: copy how python does complex formatting.
",numpy/core/src/scalartypes.inc.src
cc611300c88027af56286e29b75e84ab452fcf0b,"Do not define the union for runtime endianness detection if we don't check endianness.
",numpy/core/code_generators/generate_numpy_api.py
9c869d6547d8e637b005473bc26e2cf305a4bb6b,"BUG (#827): close temp file before reopning them on windows, and make sure they are not automatically deleted on close either (2.6and higher specific).
",numpy/lib/tests/test_io.py
4e99df67658a4e43f68e2fa5773267583ac586ea,"Fix manifest generation.
",numpy/distutils/mingw32ccompiler.py
4251fe7fede00e20eb4f4e1e80194113aee3766f,"BUG (#970): this commit should fix the actual bug, which albeeit linked to commir r6200, was caused in anoter code path.
",numpy/distutils/fcompiler/compaq.py
cdc45ed90d1eecc9a025448a0dce2644b75de66f,"Try to initialize the msvc compiler before the general code to detect the error early.
",numpy/distutils/command/config.py
7b811f816d7f95d4207117ff4a72e206b732270c,"Improve the error message when initializing compiler failed.
",numpy/distutils/command/config.py
6bbab81d5d11dd1eb38f40c8a3dfc699885701d3,"BUG (#970): fix a python 2.6 bug in distutils which caused an unhelpful Error:None message when trying to build with no VS installed and without the -c mingw32 option.
",numpy/distutils/command/config.py
6cadd13e1ae92123187e5f59d84bbeb2bcbd4776,"Fix some typo/syntax errors when converting dict access to a function in manifest generation.
",numpy/distutils/mingw32ccompiler.py
7d1612d1721bfb04289df1684125b223b236b805,"BUG: Add a runtime check about endianness, to detect bug 4728 in python on Mac OS X.
",numpy/core/code_generators/generate_numpy_api.py
ae88804358febeeedc0fdeb7d88a5a26473f7fca,"Do not test for functions already tested by python configure script.
",numpy/core/setup.py
a97ea4a100990a09b301aac755f6e4d19340642e,"Do not import msvcrt globally in mingw32compiler module, since the module is imported on all platforms.
",numpy/distutils/mingw32ccompiler.py
3f82799ae312c903bb6136684214533b5e4673af,"Update to handle numscons 0.10.0 and above.
",numpy/distutils/command/scons.py
8e77ab879c8cb1f25f0245c74bc9bba402c40b51,"testutils:
* assert_equal : use assert_equal_array on records
* assert_array_compare : prevent the common mask to be back-propagated to the initial input arrays.
* assert_equal_array : use operator.__eq__ instead of ma.equal
* assert_equal_less: use operator.__less__ instead of ma.less

core:
* Fixed _check_fill_value for nested flexible types
* Add a ndtype option to _make_mask_descr
* Fixed mask_or for nested flexible types
* Fixed the printing of masked arrays w/ flexible types.
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py
ed916ff07cf2f1fbb6056cdc01fe3ae82a027ed5,"Fix issue 964: f2py python 2.6, 2.6.1 support.
",numpy/f2py/rules.py
31c520d78424bb35e2b7863ae0c727c20091b19a,"Use msvcrt values if available for manifest generation: only there starting from python 2.6.1.
",numpy/distutils/mingw32ccompiler.py
b5bb3605066e06dd522ed0d32bfde9292d104110,"Fix typos in the comments for manifest.
",numpy/distutils/mingw32ccompiler.py
0eb6e823220b30c303be2fc5a50ab8b271074292,"Fix cpuarch.h macros.
",numpy/core/include/numpy/cpuarch.h,numpy/core/include/numpy/npy_endian.h
83c5d6d1ade58f7c3c95c6b90078d6c32ffbd85b,"Do not use WORDS_BIGENDIAN anymore in numpy, use NPY_BIG_ENDIAN instead.
",numpy/core/src/_signbit.c
d10d5631368f97af5babd503371a862eaecce8d6,"Merged revisions 6108,6110,6112-6127,6129-6134,6136-6138,6140-6149,6174-6175,6179-6182,6185-6187 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6108 | pierregm | 2008-11-26 11:13:57 +0900 (Wed, 26 Nov 2008) | 3 lines
  
  * added ma.diag
  * added copy, cumprod, cumsum, harden_mask, prod, round, soften_mask, squeeze to the namespace
  * TEMPORARILY fixed a pb of compatibility with python 2.6 (involvingin(np.nan))
........
  r6110 | pierregm | 2008-11-27 13:29:43 +0900 (Thu, 27 Nov 2008) | 5 lines
  
  * Added get_object_signature to fix missing signatures
  * Fixed .getdoc from _arraymethod, _frommethod, _convert2ma, _fromnxfunction
  * Fixed the docstrings of .trace, .mean, .argsort, .sort
  * Suppressed duplicated conjugate, ptp, round, expand_dims, apply_along_axis, compress_rowcols, mask_rowcols, vander, polyfit
........
  r6112 | pierregm | 2008-11-27 15:56:12 +0900 (Thu, 27 Nov 2008) | 1 line
  
  Doc update
........
  r6113 | jarrod.millman | 2008-11-27 19:58:51 +0900 (Thu, 27 Nov 2008) | 2 lines
  
  add release notes for 1.3
........
  r6114 | ptvirtan | 2008-11-28 05:26:04 +0900 (Fri, 28 Nov 2008) | 1 line
  
  doc: include release notes to Sphinx build
........
  r6115 | charris | 2008-11-28 12:52:16 +0900 (Fri, 28 Nov 2008) | 2 lines
  
  Make numpy version of atanh more robust.
  Numpy log1p still needs a major overhaul.
........
  r6116 | charris | 2008-11-28 14:34:33 +0900 (Fri, 28 Nov 2008) | 5 lines
  
  Add preliminary docstrings for:
  log2, exp2, logaddexp, logaddexp2, rad2deg, deg2rad.
  
  The complete docstring for fmin and fmax are on the web but
  haven't yet been merged.
........
  r6117 | cdavid | 2008-11-29 01:47:34 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Fix typo in core scons script.
........
  r6118 | cdavid | 2008-11-29 01:50:08 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Anoter typo on core scons script.
........
  r6119 | stefan | 2008-11-29 21:07:07 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Add memory map support to `load` [patch by Gael Varoquaux].  Closes #954.
........
  r6120 | stefan | 2008-11-29 21:07:54 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Add test for load's mmap_mode.
........
  r6121 | stefan | 2008-11-29 21:08:29 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Opening a memmap requires a filename.  Raise an error otherwise.
........
  r6122 | stefan | 2008-11-29 21:09:07 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Reformat spacing in io tests.
........
  r6123 | stefan | 2008-11-29 23:53:44 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Identify file object using 'readline', rather than 'seek'.
........
  r6124 | stefan | 2008-11-29 23:54:29 +0900 (Sat, 29 Nov 2008) | 1 line
  
  Add bz2 support to loadtxt [patch by Ryan May].
........
  r6125 | ptvirtan | 2008-11-30 23:44:38 +0900 (Sun, 30 Nov 2008) | 1 line
  
  Move Sphinx extensions under Numpy's SVN trunk
........
  r6126 | ptvirtan | 2008-12-01 00:08:38 +0900 (Mon, 01 Dec 2008) | 1 line
  
  Rename core/.../docstrings.py to ufunc_docstrings.py
........
  r6127 | pierregm | 2008-12-01 18:45:51 +0900 (Mon, 01 Dec 2008) | 1 line
  
  Fixed make_mask_descr for nested dtypes
........
  r6129 | pierregm | 2008-12-02 02:56:58 +0900 (Tue, 02 Dec 2008) | 2 lines
  
  * added flatten_mask to collapse masks w/ (nested) flexible types.
  * fixed __getitem__ on arrays w/ nested dtype
........
  r6130 | pierregm | 2008-12-02 11:40:22 +0900 (Tue, 02 Dec 2008) | 3 lines
  
  * Fixed MaskedArray for nested dtype w/ input mask
  * Fixed masked_all for nested dtype
  * Fixed masked_all_like for nested dtype
........
  r6131 | pierregm | 2008-12-02 17:50:11 +0900 (Tue, 02 Dec 2008) | 1 line
  
  * Fixed make_mask_descr for dtype w/ composite names, like [(('A','B'), float)]
........
  r6132 | pierregm | 2008-12-03 03:42:12 +0900 (Wed, 03 Dec 2008) | 1 line
  
  * Cleaned up make_mask_descr 
........
  r6133 | ptvirtan | 2008-12-04 06:52:36 +0900 (Thu, 04 Dec 2008) | 1 line
  
  Refactor plot:: directive somewhat
........
  r6134 | ptvirtan | 2008-12-04 07:15:51 +0900 (Thu, 04 Dec 2008) | 1 line
  
  sphinxext: fix a small bug in plot directive
........
  r6136 | cdavid | 2008-12-04 12:21:51 +0900 (Thu, 04 Dec 2008) | 1 line
  
  Add /arch option to superpack installer to override detected arch.
........
  r6137 | ptvirtan | 2008-12-05 08:06:29 +0900 (Fri, 05 Dec 2008) | 1 line
  
  sphinxext: support autosummary:: directives in automodule docstrings
........
  r6138 | pierregm | 2008-12-06 05:40:44 +0900 (Sat, 06 Dec 2008) | 2 lines
  
  * Added MaskError
  * If a bool or int ndarray is given as the explicit output of var/min/max, an exception is raised if the function should have output np.nan
........
  r6140 | ptvirtan | 2008-12-14 01:18:04 +0900 (Sun, 14 Dec 2008) | 1 line
  
  Get lstsq and eigvals from numpy.linalg, not from numpy.dual. Addresses Scipy ticket #800
........
  r6141 | ptvirtan | 2008-12-14 06:02:05 +0900 (Sun, 14 Dec 2008) | 12 lines
  
  docs: fix minor issues, support htmlhelp.
  
  - Don't use :members: in automodule; it generates too much
    and not very useful output
  
  - Fix edit links and summarize.py
  
  - Add better htmlhelp build target
  
  - Add upload target
  
  - Fix permissions on make dist
........
  r6142 | jarrod.millman | 2008-12-14 19:32:51 +0900 (Sun, 14 Dec 2008) | 2 lines
  
  wordsmithing
........
  r6143 | jarrod.millman | 2008-12-16 20:21:52 +0900 (Tue, 16 Dec 2008) | 2 lines
  
  added missing THANKS for Alan's testing work this summer
........
  r6144 | cdavid | 2008-12-17 03:04:24 +0900 (Wed, 17 Dec 2008) | 1 line
  
  BUG: Do not harcode fortran runtime when copying it on windows. Should fix #969.
........
  r6145 | cdavid | 2008-12-17 03:26:13 +0900 (Wed, 17 Dec 2008) | 1 line
  
  Add a function to get configured target for gfortran.
........
  r6146 | cdavid | 2008-12-17 03:32:41 +0900 (Wed, 17 Dec 2008) | 1 line
  
  Fix get_target.
........
  r6147 | cdavid | 2008-12-17 03:41:32 +0900 (Wed, 17 Dec 2008) | 1 line
  
  Add target specific lib dir for gfortran on windows when msvc is the C compiler.
........
  r6148 | cdavid | 2008-12-17 03:48:37 +0900 (Wed, 17 Dec 2008) | 1 line
  
  Fix overriding of library_dirs.
........
  r6149 | cdavid | 2008-12-17 03:53:25 +0900 (Wed, 17 Dec 2008) | 1 line
  
  Add mingw32 and mingwex libraries as runtime libraries for extensions which use fortran and are built with gfortran+MS compiler.
........
  r6174 | ptvirtan | 2008-12-20 02:58:57 +0900 (Sat, 20 Dec 2008) | 1 line
  
  docs: put CHM files in a zip
........
  r6175 | ptvirtan | 2008-12-20 22:40:30 +0900 (Sat, 20 Dec 2008) | 1 line
  
  test_umath: don't check against cmath on branch cuts, since the behavior of our functions varies across platforms on them
........
  r6179 | cdavid | 2008-12-21 15:02:29 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not declare missing functions to avoid mismatch with potentially conflicting, undetected ones
........
  r6180 | cdavid | 2008-12-21 15:02:44 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Update comments in umath.
........
  r6181 | cdavid | 2008-12-21 15:03:05 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not set function to macro in umath anymore.
........
  r6182 | cdavid | 2008-12-21 15:03:19 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not define math func as static: better to have a link error when we have a config problem than having two functions with the same name.
........
  r6185 | cdavid | 2008-12-22 01:19:14 +0900 (Mon, 22 Dec 2008) | 1 line
  
  Add doc sources so that sdist tarball contains them.
........
  r6186 | pierregm | 2008-12-22 19:01:51 +0900 (Mon, 22 Dec 2008) | 4 lines
  
  testutils:
  assert_array_compare : make sure that the comparison is performed on ndarrays, and make sure we use the np version of the comparison function.
  core:
  * Try not to touch the data in unary/binary ufuncs, (including inplace)
........
  r6187 | pearu | 2008-12-22 19:05:00 +0900 (Mon, 22 Dec 2008) | 1 line
  
  Fix a bug.
........
",THANKS.txt,doc/Makefile,doc/release/1.3.0-notes.rst,doc/source/_templates/indexcontent.html,doc/source/conf.py,doc/source/contents.rst,doc/source/reference/routines.emath.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,doc/source/reference/ufuncs.rst,doc/source/release.rst,doc/sphinxext/LICENSE.txt,doc/sphinxext/__init__.py,doc/sphinxext/autosummary.py,doc/sphinxext/autosummary_generate.py,doc/sphinxext/comment_eater.py,doc/sphinxext/compiler_unparse.py,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/only_directives.py,doc/sphinxext/phantom_import.py,doc/sphinxext/plot_directive.py,doc/sphinxext/tests/test_docscrape.py,doc/sphinxext/traitsdoc.py,doc/summarize.py,numpy/core/SConscript,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/{docstrings.py,numpy/core/src/umath_funcs_c99.inc.src,numpy/core/tests/test_umath.py,numpy/distutils/fcompiler/gnu.py,numpy/f2py/crackfortran.py,numpy/lib/format.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/tests/test_io.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/testutils.py,setup.py,tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
fbe2af255824ad463da6936ab86738429008aee9,"Fix a bug.
",numpy/f2py/crackfortran.py
934b27413ae9bd02fe40bafcf040a6f3fe0edff8,"testutils:
assert_array_compare : make sure that the comparison is performed on ndarrays, and make sure we use the np version of the comparison function.
core:
* Try not to touch the data in unary/binary ufuncs, (including inplace)
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/testutils.py
13ad7269de41edb67b786bbeb7605c1702003e84,"Add doc sources so that sdist tarball contains them.
",setup.py
745cfe4c60a59c01a8c2fd6ef68a8ca87f2180f5,"Hardcode size of long double, because it is broken with mingw.
",numpy/core/setup.py
44c808f02c55d6a18eaf2cc9ed2e3956e2ac5611,"Merged revisions 6174-6175,6179-6182 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6174 | ptvirtan | 2008-12-20 02:58:57 +0900 (Sat, 20 Dec 2008) | 1 line
  
  docs: put CHM files in a zip
........
  r6175 | ptvirtan | 2008-12-20 22:40:30 +0900 (Sat, 20 Dec 2008) | 1 line
  
  test_umath: don't check against cmath on branch cuts, since the behavior of our functions varies across platforms on them
........
  r6179 | cdavid | 2008-12-21 15:02:29 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not declare missing functions to avoid mismatch with potentially conflicting, undetected ones
........
  r6180 | cdavid | 2008-12-21 15:02:44 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Update comments in umath.
........
  r6181 | cdavid | 2008-12-21 15:03:05 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not set function to macro in umath anymore.
........
  r6182 | cdavid | 2008-12-21 15:03:19 +0900 (Sun, 21 Dec 2008) | 1 line
  
  Do not define math func as static: better to have a link error when we have a config problem than having two functions with the same name.
........
",doc/Makefile,numpy/core/src/umath_funcs_c99.inc.src,numpy/core/tests/test_umath.py
a80dfe7c7abd95ba351b909b1de9212bd22438ca,"Do not define math func as static: better to have a link error when we have a config problem than having two functions with the same name.
",numpy/core/src/umath_funcs_c99.inc.src
ccc608de983d3419c8922c365e37a08515013d04,"Do not set function to macro in umath anymore.
",numpy/core/src/umath_funcs_c99.inc.src
90f25defe0787086543df96da7a8d80bb8461b5d,"Update comments in umath.
",numpy/core/src/umath_funcs_c99.inc.src
9cabc65d39f61ee3141ef0e2d113f5a36ac23da0,"Do not declare missing functions to avoid mismatch with potentially conflicting, undetected ones
",numpy/core/src/umath_funcs_c99.inc.src
f531cfb60fd0e4dec69354bfd61109defa99ea5e,"Remove handling of MS_WIN64 in commands: deal with it in mingw tool only.
",numpy/distutils/command/build_ext.py,numpy/distutils/mingw32ccompiler.py
e09cd4df81906bbeb58f9fbe410cbf308324dc55,"Add MS_WIN64 for every compile command.
",numpy/distutils/mingw32ccompiler.py
55446eef45da7a66ee300e68cd99411467efdb9c,"Remove optimization flags for now, to speed up builds.
",numpy/distutils/mingw32ccompiler.py
6c37bfc3c8518caee9ffe37be0ce403952be3cf1,"test_umath: don't check against cmath on branch cuts, since the behavior of our functions varies across platforms on them
",numpy/core/tests/test_umath.py
5d46beb9a3a63dbd499fe1f4640bf9da66ddcd1c,"docs: put CHM files in a zip
",doc/Makefile
da4b745623f7f5fdc7cab23f01b7d7d1f22ccb50,"Add one full msvcrt version for 80 (for manifest generation).
",numpy/distutils/mingw32ccompiler.py
4e07a5b8e5065829fe74ed20da1196c7b4d4f590,"do not regenerate the import library if already there.
",numpy/distutils/mingw32ccompiler.py
33b2968b0eebf6c421553d57d426684db1a7dc7c,"Do not use g++ for linking on amd64.
",numpy/distutils/mingw32ccompiler.py
45d2c14ee19a23866ef44d4befe9058593c4e15d,"Fix macro def.
",numpy/distutils/command/build_ext.py
a7bf18812f143bc6926c1c21fcda25ef4ea1d26e,"Use a tuple when defining the MS_WIN64 macro.
",numpy/distutils/command/build_ext.py
233e28b73eb02b7db5fbc573ac2a058f98b8e416,"Forgot to import get_build_architecture.
",numpy/distutils/command/build_ext.py
14a63a81f6dfed3390dfef8f3cb0a173524f24f0,"Add MS_WIN64 macro when built on amd64 + mingw.
",numpy/distutils/command/build_ext.py
94e3d100720ba4fd150d9fb1993838377eb8c243,"Trailing spaces.
",numpy/distutils/mingw32ccompiler.py
6c348211147ae411e00e7bfc452c105dd15c6a51,"Do not generate ordinal, and use the basename of the dll instead of the full path in the def.file.
",numpy/distutils/mingw32ccompiler.py
aa1424960fe5779fe8a11499a7112315b7216ac8,"Actually build the import library for mingw on amd64.
",numpy/distutils/mingw32ccompiler.py
34028c1445f5b9124ac52e4fb5434240658d3df3,"Fix missing out filename.
",numpy/distutils/mingw32ccompiler.py
6ce9a33b042965a8c536f46b3494a6cae699ccfa,"Show arch in the log when building import library.
",numpy/distutils/mingw32ccompiler.py
5cd369aa74ac3affc00041480ab068fb57a00da6,"Do not generate manifest when built with msver 8.*, it does not look like it is needed, and we dont support it anyway ATM.
",numpy/distutils/mingw32ccompiler.py
479f75f1cf94aeb7ae90b7f55f3beff6871cacf1,"Refactor build_import_library to take into account multi arch.
",numpy/distutils/mingw32ccompiler.py
88e01e594e2b045f9ef6e8a45aee110bdc1563db,"Add a warning if no symbols found in the dll (if stripped, for example).
",numpy/distutils/mingw32ccompiler.py
8b32c5b46ecac3a07c6ea34561fd4d968bcab01f,"Fix .def file generation.
",numpy/distutils/mingw32ccompiler.py
a00507d6bce4010244ac9124453cf2ce9c9b4fe1,"Forgot to add the regex for the generate_def function.
",numpy/distutils/mingw32ccompiler.py
e9d5604aebc5e04a299bbb93dd9d6865a383974f,"Add a function to generate a .def file from a dll.
",numpy/distutils/mingw32ccompiler.py
f7ad1d4d90b20a597c92a4685a5b3a4e4b331956,"Add a function to get a dump of private headers from dll.
",numpy/distutils/mingw32ccompiler.py
df2acae5a4bcbc4c76ebbeefcfb07f59c9ee2914,"Fix typo when getting system32 location.
",numpy/distutils/mingw32ccompiler.py
28e95dbda19f6d438a883c280fe21c9e40fa7f46,"Add a function to find python dll on windows.
",numpy/distutils/mingw32ccompiler.py
0746f06c55c49b1efeecd09eaa6a4aa0ed1e146c,"Add mingw32 and mingwex libraries as runtime libraries for extensions which use fortran and are built with gfortran+MS compiler.
",numpy/distutils/fcompiler/gnu.py
eb1f98d5137ab32de9e1c4201dd0a3d0aadf9b6e,"Fix overriding of library_dirs.
",numpy/distutils/fcompiler/gnu.py
543a1635fcf6d12eae596d5f406fad63263201e7,"Add target specific lib dir for gfortran on windows when msvc is the C compiler.
",numpy/distutils/fcompiler/gnu.py
0c502d1fbbe52bebe164963dccb41b9cd18ae038,"Fix get_target.
",numpy/distutils/fcompiler/gnu.py
65af92bcd4a6f2fb82e99c27770a28dda69488fc,"Add a function to get configured target for gfortran.
",numpy/distutils/fcompiler/gnu.py
4f1e6358b6d544b81c78805113b4f87d59f3482c,"BUG: Do not harcode fortran runtime when copying it on windows. Should fix #969.
",numpy/distutils/fcompiler/gnu.py
9fe7e3d13631bbcf986403e94bc493535b382988,"added missing THANKS for Alan's testing work this summer
",THANKS.txt
88b515168cb31d8d517cbed0cc5de5b5abf1327a,"wordsmithing
",THANKS.txt
34eee7e6e21f0983dafa045a55dd208fc973a430,"docs: fix minor issues, support htmlhelp.

- Don't use :members: in automodule; it generates too much
  and not very useful output

- Fix edit links and summarize.py

- Add better htmlhelp build target

- Add upload target

- Fix permissions on make dist
",doc/Makefile,doc/source/conf.py,doc/source/reference/routines.emath.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,doc/sphinxext/numpydoc.py,doc/summarize.py
f947ff3bf90038bc0b37bc9b6a95138a0cf5e47a,"Get lstsq and eigvals from numpy.linalg, not from numpy.dual. Addresses Scipy ticket #800
",numpy/lib/polynomial.py,numpy/ma/extras.py
57c9ad3baa68a11aa8cfd272e4ccbb9002526cf1,"* Added MaskError
* If a bool or int ndarray is given as the explicit output of var/min/max, an exception is raised if the function should have output np.nan
",numpy/ma/core.py,numpy/ma/tests/test_core.py
5c62843546fe4e386ecc1de4c8fab50ff8d07df1,"sphinxext: support autosummary:: directives in automodule docstrings
",doc/sphinxext/autosummary_generate.py
d455fa9e4ab1671de0f159712eff8ded556e78a5,"Add /arch option to superpack installer to override detected arch.
",tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
f91aedb05477b881587ce6f465f3172c85d0c55d,"sphinxext: fix a small bug in plot directive
",doc/sphinxext/plot_directive.py
65b8487fb6767387664d93d6604e32d1b6870ece,"Refactor plot:: directive somewhat
",doc/sphinxext/plot_directive.py
906576137c9b883a5638e4d71f91fbf4d33aca5e,"* Cleaned up make_mask_descr 
",numpy/ma/core.py
ac338653590e858f7a9f96a84a6de9a6cdc6b323,"* Fixed make_mask_descr for dtype w/ composite names, like [(('A','B'), float)]
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2dd04cee57d2d4a29bf4c0c8e4024494d3e499f1,"* Fixed MaskedArray for nested dtype w/ input mask
* Fixed masked_all for nested dtype
* Fixed masked_all_like for nested dtype
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
77f95a1398ddad2d031aaf8e4db344ffc93d1d73,"* added flatten_mask to collapse masks w/ (nested) flexible types.
* fixed __getitem__ on arrays w/ nested dtype
",numpy/ma/core.py,numpy/ma/tests/test_core.py
7933d532fea5a0e75e6e415e6ab9d6bc7c585089,"Fixed make_mask_descr for nested dtypes
",numpy/ma/core.py,numpy/ma/tests/test_core.py
0a5268f521e4d29f755f91c83100b574966d3aef,"Rename core/.../docstrings.py to ufunc_docstrings.py
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/{docstrings.py
8c542b5be4ad43fc8d4a85bda9d49343f872d105,"Move Sphinx extensions under Numpy's SVN trunk
",doc/Makefile,doc/source/conf.py,doc/sphinxext/LICENSE.txt,doc/sphinxext/__init__.py,doc/sphinxext/autosummary.py,doc/sphinxext/autosummary_generate.py,doc/sphinxext/comment_eater.py,doc/sphinxext/compiler_unparse.py,doc/sphinxext/docscrape.py,doc/sphinxext/docscrape_sphinx.py,doc/sphinxext/numpydoc.py,doc/sphinxext/only_directives.py,doc/sphinxext/phantom_import.py,doc/sphinxext/plot_directive.py,doc/sphinxext/tests/test_docscrape.py,doc/sphinxext/traitsdoc.py
00f70117aed4a20bfa8770560e1759f769ada527,"Add bz2 support to loadtxt [patch by Ryan May].
",numpy/lib/io.py
b1343ae09fbfde2ba7e5ceaf734d73168de45fd2,"Identify file object using 'readline', rather than 'seek'.
",numpy/lib/io.py
91e5c320710f5ed1dfdfcc07eaad0cc5eccd8652,"Reformat spacing in io tests.
",numpy/lib/tests/test_io.py
05fa6e737f1ed9a0b0b34a9c90a3c386b600e121,"Opening a memmap requires a filename.  Raise an error otherwise.
",numpy/lib/format.py
3cc4c43bfd2226f76f35054a99e8f2d2a3ac466a,"Add test for load's mmap_mode.
",numpy/lib/tests/test_io.py
17206034a2abc6b1961f41fa1e4fa65a0ae93ca1,"Add memory map support to `load` [patch by Gael Varoquaux].  Closes #954.
",numpy/lib/io.py
9940ab08630129047a5a460466d880369a6f571d,"Anoter typo on core scons script.
",numpy/core/SConscript
ecc18920a7c14460a2af902927f9cd37e93d9f87,"Fix typo in core scons script.
",numpy/core/SConscript
a7c643cdbad8550e610e9d81486e3e553e48f849,"Add preliminary docstrings for:
log2, exp2, logaddexp, logaddexp2, rad2deg, deg2rad.

The complete docstring for fmin and fmax are on the web but
haven't yet been merged.
",doc/source/reference/ufuncs.rst,numpy/core/code_generators/docstrings.py,numpy/core/code_generators/generate_umath.py
1361760832b5a667ad1d523b65c092bde81162a1,"Make numpy version of atanh more robust.
Numpy log1p still needs a major overhaul.
",numpy/core/src/umath_funcs_c99.inc.src
a7eddbab55ff1bda1015674b78be74a8344b5972,"doc: include release notes to Sphinx build
",doc/source/_templates/indexcontent.html,doc/source/contents.rst,doc/source/release.rst
52a781dd1131e4ec922eff224cffeade4475e4f7,"add release notes for 1.3
",doc/release/1.3.0-notes.rst
ce7cd10f480494656a704a7d0db5a8f6e3d8f6fb,"Doc update
",doc/source/reference/routines.ma.rst,numpy/ma/core.py
0629f41ff2501dc1e2235b40dd1da63162a1487b,"* Added get_object_signature to fix missing signatures
* Fixed .getdoc from _arraymethod, _frommethod, _convert2ma, _fromnxfunction
* Fixed the docstrings of .trace, .mean, .argsort, .sort
* Suppressed duplicated conjugate, ptp, round, expand_dims, apply_along_axis, compress_rowcols, mask_rowcols, vander, polyfit
",numpy/ma/core.py,numpy/ma/extras.py
8209ab64e9449dd1ab416d2485e5e9a0f99ace99,"* added ma.diag
* added copy, cumprod, cumsum, harden_mask, prod, round, soften_mask, squeeze to the namespace
* TEMPORARILY fixed a pb of compatibility with python 2.6 (involvingin(np.nan))
",numpy/ma/core.py,numpy/ma/tests/test_core.py
0715c87750409afd8785367c59c524d55ba13431,"Use npy_endian.h to detect endianness of CPU.

We avoid using WORDS_ENDIAN (as set by python headers themselves)
because its value is set at python build time, and hence does not work
for situations like fat  builds on Mac OS X: if the fat binary is built
on PPC, WORDS_ENDIAN is defined to 1 in python headers, even on Intel.
Instead, we use npy_endian.h, which is not set at numpy build time, but
set everytime npy_endian.h is included (using cpu-specific macro).
",numpy/core/include/numpy/ndarrayobject.h
0469cb5ca56892a1678361ff0856d174f09a7a93,"Add a (public) header to set cpu endianness when numpy headers are included instead of setting them at build time.
",numpy/core/include/numpy/npy_endian.h
09baaa6d25f93562deb1ad72e5ff5606b8938995,"Document the possible values for NPY_TARGET_CPU macro.
",numpy/core/include/numpy/cpuarch.h
af9e54158cdfe9d779da709f423bbc2e331bf1da,"Add a (public) header to detect common CPU archs.
",numpy/core/include/numpy/cpuarch.h
d1cc65d824e701e47a48a35f26655ca6706307d8,"* added ddof to np.matrix.var (bug fix #861)
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
ea7901786622f8c395ca76848e7b613fd80cfd67,"Fix missing generic loop declarations.
",numpy/core/code_generators/genapi.py
03582a3dbd1b4643b7b70cf277eada66dcb0800e,"Moved numpy-docs under doc/ in the main Numpy trunk.
",doc/Makefile,doc/README.txt,doc/postprocess.py,doc/source/_static/scipy.css,doc/source/_templates/indexcontent.html,doc/source/_templates/indexsidebar.html,doc/source/_templates/layout.html,doc/source/about.rst,doc/source/bugs.rst,doc/source/conf.py,doc/source/contents.rst,doc/source/glossary.rst,doc/source/license.rst,doc/source/reference/arrays.classes.rst,doc/source/reference/arrays.dtypes.rst,doc/source/reference/arrays.indexing.rst,doc/source/reference/arrays.interface.rst,doc/source/reference/arrays.ndarray.rst,doc/source/reference/arrays.rst,doc/source/reference/arrays.scalars.rst,doc/source/reference/c-api.array.rst,doc/source/reference/c-api.config.rst,doc/source/reference/c-api.dtype.rst,doc/source/reference/c-api.rst,doc/source/reference/c-api.types-and-structures.rst,doc/source/reference/c-api.ufunc.rst,doc/source/reference/distutils.rst,doc/source/reference/figures/dtype-hierarchy.dia,doc/source/reference/figures/dtype-hierarchy.pdf,doc/source/reference/figures/dtype-hierarchy.png,doc/source/reference/figures/threefundamental.fig,doc/source/reference/figures/threefundamental.pdf,doc/source/reference/figures/threefundamental.png,doc/source/reference/index.rst,doc/source/reference/internals.code-explanations.rst,doc/source/reference/internals.rst,doc/source/reference/routines.array-creation.rst,doc/source/reference/routines.array-manipulation.rst,doc/source/reference/routines.bitwise.rst,doc/source/reference/routines.ctypeslib.rst,doc/source/reference/routines.dtype.rst,doc/source/reference/routines.dual.rst,doc/source/reference/routines.emath.rst,doc/source/reference/routines.err.rst,doc/source/reference/routines.fft.rst,doc/source/reference/routines.financial.rst,doc/source/reference/routines.functional.rst,doc/source/reference/routines.help.rst,doc/source/reference/routines.indexing.rst,doc/source/reference/routines.io.rst,doc/source/reference/routines.linalg.rst,doc/source/reference/routines.logic.rst,doc/source/reference/routines.ma.rst,doc/source/reference/routines.math.rst,doc/source/reference/routines.matlib.rst,doc/source/reference/routines.numarray.rst,doc/source/reference/routines.oldnumeric.rst,doc/source/reference/routines.other.rst,doc/source/reference/routines.poly.rst,doc/source/reference/routines.random.rst,doc/source/reference/routines.rst,doc/source/reference/routines.set.rst,doc/source/reference/routines.sort.rst,doc/source/reference/routines.statistics.rst,doc/source/reference/routines.window.rst,doc/source/reference/ufuncs.rst,doc/source/scipyshiny_small.png,doc/source/user/basics.broadcasting.rst,doc/source/user/basics.creation.rst,doc/source/user/basics.indexing.rst,doc/source/user/basics.rec.rst,doc/source/user/basics.rst,doc/source/user/basics.subclassing.rst,doc/source/user/basics.types.rst,doc/source/user/c-info.beyond-basics.rst,doc/source/user/c-info.how-to-extend.rst,doc/source/user/c-info.python-as-glue.rst,doc/source/user/c-info.rst,doc/source/user/howtofind.rst,doc/source/user/index.rst,doc/source/user/misc.rst,doc/source/user/performance.rst,doc/summarize.py
84054e34dd58ceebc981d349d997e4dd7cd7c80c,"Moved numpy-docs under doc/ in the main Numpy trunk.
",trunk/Makefile,trunk/README.txt,trunk/postprocess.py,trunk/source/_static/scipy.css,trunk/source/_templates/indexcontent.html,trunk/source/_templates/indexsidebar.html,trunk/source/_templates/layout.html,trunk/source/about.rst,trunk/source/bugs.rst,trunk/source/conf.py,trunk/source/contents.rst,trunk/source/glossary.rst,trunk/source/license.rst,trunk/source/reference/arrays.classes.rst,trunk/source/reference/arrays.dtypes.rst,trunk/source/reference/arrays.indexing.rst,trunk/source/reference/arrays.interface.rst,trunk/source/reference/arrays.ndarray.rst,trunk/source/reference/arrays.rst,trunk/source/reference/arrays.scalars.rst,trunk/source/reference/c-api.array.rst,trunk/source/reference/c-api.config.rst,trunk/source/reference/c-api.dtype.rst,trunk/source/reference/c-api.rst,trunk/source/reference/c-api.types-and-structures.rst,trunk/source/reference/c-api.ufunc.rst,trunk/source/reference/distutils.rst,trunk/source/reference/figures/dtype-hierarchy.dia,trunk/source/reference/figures/dtype-hierarchy.pdf,trunk/source/reference/figures/dtype-hierarchy.png,trunk/source/reference/figures/threefundamental.fig,trunk/source/reference/figures/threefundamental.pdf,trunk/source/reference/figures/threefundamental.png,trunk/source/reference/index.rst,trunk/source/reference/internals.code-explanations.rst,trunk/source/reference/internals.rst,trunk/source/reference/routines.array-creation.rst,trunk/source/reference/routines.array-manipulation.rst,trunk/source/reference/routines.bitwise.rst,trunk/source/reference/routines.ctypeslib.rst,trunk/source/reference/routines.dtype.rst,trunk/source/reference/routines.dual.rst,trunk/source/reference/routines.emath.rst,trunk/source/reference/routines.err.rst,trunk/source/reference/routines.fft.rst,trunk/source/reference/routines.financial.rst,trunk/source/reference/routines.functional.rst,trunk/source/reference/routines.help.rst,trunk/source/reference/routines.indexing.rst,trunk/source/reference/routines.io.rst,trunk/source/reference/routines.linalg.rst,trunk/source/reference/routines.logic.rst,trunk/source/reference/routines.ma.rst,trunk/source/reference/routines.math.rst,trunk/source/reference/routines.matlib.rst,trunk/source/reference/routines.numarray.rst,trunk/source/reference/routines.oldnumeric.rst,trunk/source/reference/routines.other.rst,trunk/source/reference/routines.poly.rst,trunk/source/reference/routines.random.rst,trunk/source/reference/routines.rst,trunk/source/reference/routines.set.rst,trunk/source/reference/routines.sort.rst,trunk/source/reference/routines.statistics.rst,trunk/source/reference/routines.window.rst,trunk/source/reference/ufuncs.rst,trunk/source/scipyshiny_small.png,trunk/source/user/basics.broadcasting.rst,trunk/source/user/basics.creation.rst,trunk/source/user/basics.indexing.rst,trunk/source/user/basics.rec.rst,trunk/source/user/basics.rst,trunk/source/user/basics.subclassing.rst,trunk/source/user/basics.types.rst,trunk/source/user/c-info.beyond-basics.rst,trunk/source/user/c-info.how-to-extend.rst,trunk/source/user/c-info.python-as-glue.rst,trunk/source/user/c-info.rst,trunk/source/user/howtofind.rst,trunk/source/user/index.rst,trunk/source/user/misc.rst,trunk/source/user/performance.rst,trunk/summarize.py
638bacdd9212dd2258a886e0124cca56bf2b905d,"Added mod to the ufuncs
",numpy/ma/core.py,numpy/ma/tests/test_core.py
0cb27e398522fdbfed7ed974538ad6d24347c10a,"Comment out redundant variable declaration for time being.
",numpy/core/src/umathmodule.c.src
bc42c6b084f9b596d7a35a417b3a3bb6f2ef55e0,"Add some cautionary comments.
",numpy/core/src/umathmodule.c.src
a0d20a59b6cbabd60ec351d019c3bcd48df98398,"Change order of includes to see if it matters on SPARC Etch buildbot.
",numpy/core/src/umathmodule.c.src
9ac837ab78701e0fdaf62df60a702e25b66c6d0e,"Merge branch 'ufunc'
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/umath_funcs.inc.src,numpy/core/src/umath_loops.inc.src,numpy/core/src/umathmodule.c.src
83a5d4487375733b46a0dc2267b17cef44e976dc,"Merge branch 'ufunc'

Conflicts:

	numpy/core/code_generators/genapi.py
",numpy/core/SConscript,numpy/core/code_generators/genapi.py,numpy/core/setup.py,numpy/core/src/{math_c99.inc.src,numpy/core/src/{ufuncobject.c,numpy/core/src/umathmodule.c.src
702538f9e45e63e7813034d552a1c8ea4d517513,"Rewrote allclose to allow comparison with a scalar
",numpy/ma/core.py,numpy/ma/tests/test_core.py
3a1ffccbafc70bd5d45568fb4dd17de2accf92a4,"* Prevent the shape of a 1d-singleton to be lost when interacting with masked (bug fix #948)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
e39cb02e227e168f8b3b55c455820c47e2d6c4c1,"Fix ambiguous assert.
",numpy/lib/tests/test_io.py
5fb169855c44f725e46668957c7a5177d43d02ab,"Import np_ in ma tests since the import is not available in numpy.ma anymore.
",numpy/ma/tests/test_core.py
77807c098a3e3cc977589fa70c3a0c9d859d3df8,"make_mask : Added a dtype keyword to support flexible-dtype
mask_or : Added support to flexible-dtype.
",numpy/ma/core.py
0e3904026f9e2428a38631fd2168c3ed77a59ebc,"Forgot to finish the configure context in numscons build of random.
",numpy/random/SConscript
0a96db9fb6ec83daafa77e700e7c7ef572a5ab48,"Handle ftime mingw problem with numscons.
",numpy/random/SConscript
0c6632340058b23866dbc95e58867608f884897f,"Forgot to add time headers when mingw workaround is not used on windows.
",numpy/random/mtrand/randomkit.c
2a569c4d98c9d1b34c7737edc4e040282d146589,"Do not use mingw workaround for msvc runtime 7.1.
",numpy/random/setup.py
7b954c549ca49ef8ece88730cfca8bf7786a3851,"Merged revisions 6041-6077 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/visualstudio_manifest

................
  r6042 | cdavid | 2008-11-16 18:04:37 +0900 (Sun, 16 Nov 2008) | 3 lines
  
  Initialized merge tracking via ""svnmerge"" with revisions ""1-6041"" from 
  http://svn.scipy.org/svn/numpy/trunk
................
  r6045 | cdavid | 2008-11-16 20:44:02 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Add a function to get the content of the xml version of manifest to deal with VS.
................
  r6046 | cdavid | 2008-11-16 20:44:18 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Add comment on how to get exact MSVCR version.
................
  r6047 | cdavid | 2008-11-16 20:44:33 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Add manifest_rc to generate the .rc file which will be used to embed the manifest file.
................
  r6048 | cdavid | 2008-11-16 20:44:54 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Use directly the manifest name for generating the rc file + add docstring.
................
  r6049 | cdavid | 2008-11-16 20:45:09 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Forgot to change argument of manifest_rc.
................
  r6051 | cdavid | 2008-11-16 22:02:09 +0900 (Sun, 16 Nov 2008) | 17 lines
  
  Merged revisions 6042-6050 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r6043 | jarrod.millman | 2008-11-16 18:14:01 +0900 (Sun, 16 Nov 2008) | 2 lines
    
    removing some quotes
  ........
    r6044 | jarrod.millman | 2008-11-16 18:15:59 +0900 (Sun, 16 Nov 2008) | 2 lines
    
    adding back a few quotes
  ........
    r6050 | cdavid | 2008-11-16 21:30:17 +0900 (Sun, 16 Nov 2008) | 1 line
    
    Add deprecation warning for get_output and try_run: we should not use it anymore.
  ........
................
  r6052 | cdavid | 2008-11-16 22:04:59 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Trailing spaces.
................
  r6056 | cdavid | 2008-11-17 21:03:57 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Detect whether config link needs embedding the manifest for the MSVC runtime.
................
  r6057 | cdavid | 2008-11-17 21:04:27 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Refactor msvc runtime checking, put it into mingw32compiler
................
  r6058 | cdavid | 2008-11-17 21:05:01 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Fix string formatting.
................
  r6059 | cdavid | 2008-11-17 21:05:29 +0900 (Mon, 17 Nov 2008) | 1 line
  
  fix imports.
................
  r6060 | cdavid | 2008-11-17 21:05:56 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Generate the xml manifest file.
................
  r6061 | cdavid | 2008-11-17 21:06:26 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Separate function to get the configtest name.
................
  r6062 | cdavid | 2008-11-17 21:06:58 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Generate the rc file for manifest embedding.
................
  r6063 | cdavid | 2008-11-17 21:07:36 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Fix configtest and manifest_name.
................
  r6064 | cdavid | 2008-11-17 21:08:08 +0900 (Mon, 17 Nov 2008) | 1 line
  
  temp_files is a list of filenames, not files.
................
  r6065 | cdavid | 2008-11-17 21:08:38 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Disable .rc generation for manifest: having the xml file in the same dir as the _configtest.exe is enough for now.
................
  r6066 | cdavid | 2008-11-17 21:09:08 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Refactor manifest generation and put it back into mingw32ccompiler module.
................
  r6067 | cdavid | 2008-11-17 21:32:46 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Fix spelling.
................
  r6071 | cdavid | 2008-11-17 21:49:26 +0900 (Mon, 17 Nov 2008) | 30 lines
  
  Merged revisions 6051-6070 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r6053 | charris | 2008-11-17 12:27:28 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Test moving generic loops to umathmodule.
  ........
    r6054 | charris | 2008-11-17 12:27:46 +0900 (Mon, 17 Nov 2008) | 2 lines
    
    Add umathmodule.c.src to files scanned for ufunc api.
    This is preparation for splitting the umathmodule.c.src file.
  ........
    r6055 | pierregm | 2008-11-17 16:00:42 +0900 (Mon, 17 Nov 2008) | 1 line
    
    simplify MAError
  ........
    r6068 | cdavid | 2008-11-17 21:35:43 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Simplify ftime workaround for python 2.6 under mingw: we only need to make _ftime an alias to _ftime64 when needed.
  ........
    r6069 | cdavid | 2008-11-17 21:36:17 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Use a wrapper around _ftime to work around a mingw bug in msvc runtimes import libraries.
  ........
    r6070 | cdavid | 2008-11-17 21:41:13 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Set __MSVCRT_VERSION__ to make _ftime64 visible from time.h header when we need to workaround mingw bug.
  ........
................
  r6077 | cdavid | 2008-11-17 22:58:23 +0900 (Mon, 17 Nov 2008) | 25 lines
  
  Merged revisions 6071-6076 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r6072 | cdavid | 2008-11-17 22:52:47 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Fix the inaccurate comment regarding _ftime issues with mingw.
  ........
    r6073 | cdavid | 2008-11-17 22:53:05 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Do not generate a config.h for randomkit: it does not work as it is, and adding per-subpackage include path is a PITA with distutils.
  ........
    r6074 | cdavid | 2008-11-17 22:53:25 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Conditionally setup mingw workaround on __GNUC__ since we can't detect if we are built with mingw in distutils setup.py.
  ........
    r6075 | cdavid | 2008-11-17 22:53:42 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Forgot to update needs_mingw_ftime_workaround function.
  ........
    r6076 | cdavid | 2008-11-17 22:53:58 +0900 (Mon, 17 Nov 2008) | 1 line
    
    Include time.h and sys/timeb.h just after defining our custom __MSVCRT_VERSION__ to avoid possible duplicate.
  ........
................
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
5a722a6ef88bc75d2907f01674e1370a31b92cd2,"Merged revisions 6071-6076 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6072 | cdavid | 2008-11-17 22:52:47 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Fix the inaccurate comment regarding _ftime issues with mingw.
........
  r6073 | cdavid | 2008-11-17 22:53:05 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Do not generate a config.h for randomkit: it does not work as it is, and adding per-subpackage include path is a PITA with distutils.
........
  r6074 | cdavid | 2008-11-17 22:53:25 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Conditionally setup mingw workaround on __GNUC__ since we can't detect if we are built with mingw in distutils setup.py.
........
  r6075 | cdavid | 2008-11-17 22:53:42 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Forgot to update needs_mingw_ftime_workaround function.
........
  r6076 | cdavid | 2008-11-17 22:53:58 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Include time.h and sys/timeb.h just after defining our custom __MSVCRT_VERSION__ to avoid possible duplicate.
........
",numpy/random/mtrand/randomkit.c,numpy/random/setup.py
c964b6ad6475445e0f78a91a05e6de2d81305168,"Include time.h and sys/timeb.h just after defining our custom __MSVCRT_VERSION__ to avoid possible duplicate.
",numpy/random/mtrand/randomkit.c
ea229684976538ea353908047ea2ca705c59aea1,"Forgot to update needs_mingw_ftime_workaround function.
",numpy/random/setup.py
eb52b1d8ff31a3eb48319b20de272acc26f88bdd,"Conditionally setup mingw workaround on __GNUC__ since we can't detect if we are built with mingw in distutils setup.py.
",numpy/random/mtrand/randomkit.c
13b3ffbd8a844168d95af92271291dc9a3888153,"Do not generate a config.h for randomkit: it does not work as it is, and adding per-subpackage include path is a PITA with distutils.
",numpy/random/mtrand/randomkit.c,numpy/random/setup.py
24db8a1d532d8eb9ed2ebbd5cf5e393be7a9a11c,"Fix the inaccurate comment regarding _ftime issues with mingw.
",numpy/random/mtrand/randomkit.c
85887fb88a96821340c11d0a976bb95221f0174c,"Merged revisions 6051-6070 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6053 | charris | 2008-11-17 12:27:28 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Test moving generic loops to umathmodule.
........
  r6054 | charris | 2008-11-17 12:27:46 +0900 (Mon, 17 Nov 2008) | 2 lines
  
  Add umathmodule.c.src to files scanned for ufunc api.
  This is preparation for splitting the umathmodule.c.src file.
........
  r6055 | pierregm | 2008-11-17 16:00:42 +0900 (Mon, 17 Nov 2008) | 1 line
  
  simplify MAError
........
  r6068 | cdavid | 2008-11-17 21:35:43 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Simplify ftime workaround for python 2.6 under mingw: we only need to make _ftime an alias to _ftime64 when needed.
........
  r6069 | cdavid | 2008-11-17 21:36:17 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Use a wrapper around _ftime to work around a mingw bug in msvc runtimes import libraries.
........
  r6070 | cdavid | 2008-11-17 21:41:13 +0900 (Mon, 17 Nov 2008) | 1 line
  
  Set __MSVCRT_VERSION__ to make _ftime64 visible from time.h header when we need to workaround mingw bug.
........
",numpy/core/code_generators/genapi.py,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/ma/core.py,numpy/random/mtrand/randomkit.c,numpy/random/setup.py
3c4c7fa9a9a4980ec2569ee003909a8c3b30840b,"Set __MSVCRT_VERSION__ to make _ftime64 visible from time.h header when we need to workaround mingw bug.
",numpy/random/mtrand/randomkit.c
9feb5b07aae1c8ac434577abf9bf5c9038b70931,"Use a wrapper around _ftime to work around a mingw bug in msvc runtimes import libraries.
",numpy/random/mtrand/randomkit.c
40730e237a81678a7a645f9b69d45dce97a8a10f,"Simplify ftime workaround for python 2.6 under mingw: we only need to make _ftime an alias to _ftime64 when needed.
",numpy/random/setup.py
968fa253e9d497db0001c6ee84198893cbce5c46,"Fix spelling.
",numpy/distutils/mingw32ccompiler.py
fd802862ca053f0d6ce57816214e54c966911b0a,"Refactor manifest generation and put it back into mingw32ccompiler module.
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
3d745a673576835739c3ff0e402791c77b998e3a,"Disable .rc generation for manifest: having the xml file in the same dir as the _configtest.exe is enough for now.
",numpy/distutils/command/config.py
0999c7cf8553b7427775f63841c5f6e016db8008,"temp_files is a list of filenames, not files.
",numpy/distutils/command/config.py
67ba879a2e62e381c5f285beecdc4bcc69b6daff,"Fix configtest and manifest_name.
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
3a6c367a0f1cadd8d7d898e04bca148b64d85116,"Generate the rc file for manifest embedding.
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
e81458d964f20b188b944da833551a8332614ff0,"Separate function to get the configtest name.
",numpy/distutils/mingw32ccompiler.py
cfa01f68bfd00d11bad21d41611c733f2fde8933,"Generate the xml manifest file.
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
5504fd1da8db7a7f236544f8a8391f7b39a4812a,"fix imports.
",numpy/distutils/command/config.py
bcd69c968f6955c431f81031532c25be93a426c0,"Fix string formatting.
",numpy/distutils/mingw32ccompiler.py
4ebd39d35a1ff5b045e02453548c621c016e6704,"Refactor msvc runtime checking, put it into mingw32compiler
",numpy/distutils/command/config.py,numpy/distutils/mingw32ccompiler.py
1d3d4cd14e397269c08b8dc794e0835ca551efa9,"Detect whether config link needs embedding the manifest for the MSVC runtime.
",numpy/distutils/command/config.py
6a9b5456d05c72102c2e136cbc14a95b81ff7ba9,"simplify MAError
",numpy/ma/core.py
55204c0208f8bf452598a5114d5100866e4d8304,"Add umathmodule.c.src to files scanned for ufunc api.
This is preparation for splitting the umathmodule.c.src file.
",numpy/core/code_generators/genapi.py
bf9eb68b1df8a45e5b631369bfb04fd846ef8ae0,"Test moving generic loops to umathmodule.
",numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
6cf5c1f26d241dc0008b875b0c5fbea9a453bd39,"Trailing spaces.
",numpy/distutils/mingw32ccompiler.py
2401df249825a1a4c07e162d078091cf5edcab40,"Merged revisions 6042-6050 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r6043 | jarrod.millman | 2008-11-16 18:14:01 +0900 (Sun, 16 Nov 2008) | 2 lines
  
  removing some quotes
........
  r6044 | jarrod.millman | 2008-11-16 18:15:59 +0900 (Sun, 16 Nov 2008) | 2 lines
  
  adding back a few quotes
........
  r6050 | cdavid | 2008-11-16 21:30:17 +0900 (Sun, 16 Nov 2008) | 1 line
  
  Add deprecation warning for get_output and try_run: we should not use it anymore.
........
",doc/neps/generalized-ufuncs.rst,numpy/distutils/command/config.py
573adec670c1bb94d3134b927195caa139b9e35a,"Add deprecation warning for get_output and try_run: we should not use it anymore.
",numpy/distutils/command/config.py
f9e17289abd34cc65efd25c99931eed6072e7cbe,"Forgot to change argument of manifest_rc.
",numpy/distutils/mingw32ccompiler.py
c74c27396eff683e66c02bb0ade0745378d02f1d,"Use directly the manifest name for generating the rc file + add docstring.
",numpy/distutils/mingw32ccompiler.py
f0465252ddecd0625c3de2034a7540e2465baeba,"Add manifest_rc to generate the .rc file which will be used to embed the manifest file.
",numpy/distutils/mingw32ccompiler.py
ff611feb90d7bd130aa94634ba6e370f9227bf47,"Add comment on how to get exact MSVCR version.
",numpy/distutils/mingw32ccompiler.py
10a973034d360f559809c97f120f42b7f450a20e,"Add a function to get the content of the xml version of manifest to deal with VS.
",numpy/distutils/mingw32ccompiler.py
0a570c7e3c5cea1d63dd58550468694afa9099d4,"adding back a few quotes
",doc/neps/generalized-ufuncs.rst
2201bb33c6d46cad1817e8746ecc5a6285891a1d,"removing some quotes
",doc/neps/generalized-ufuncs.rst
d0d9ce4349ef95a85fdc81d2d58ef7967b2c1f41,"fixed table
",doc/neps/generalized-ufuncs.rst
4fe3f981acc8fc5d98b80db142654190a807a066,"moved generalized ufunc proposal from the wiki
",doc/neps/generalized-ufuncs.rst
5ccf1e670679a7d55a9e94cc0a921fc5b700c4db,"Add missing return.
Remove pointless define.
Small name cleanup.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
6132a511c2523d278536228015fbc9a592f5503e,"Add error checking to Object loops.
Fix reference leak in Sign Object loop.
Define a binary version of PyNumber_Power so that the generic
object loop doesn't have to check for that function.
Clean up generic object loops.
",numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
357672c78191754310fa670da735f10e961c9bd3,"Another typo.
",numpy/random/setup.py
b871795b907f5abafaf6f24e1cdd9707d727bfa1,"Fix hex conversion for msvcrt (we do not need to convert VS verion, but MSVCRT version).
",numpy/random/setup.py
a10c989023f64c28bd18932581baa7982c8cd79d,"Typo.
",numpy/random/setup.py
74aee18107d2a43125299103647f9990bc6874a2,"Typo.
",numpy/random/setup.py
1640efdadc8d4686adca70efe6a39b2e48b0293b,"Add a macro to know whether we need the mingw workaround for _ftime + add a define for the MSVCR version.
",numpy/random/setup.py
a27c31aad71fd2e7f23f0a3bded0c243d0ead7ad,"Postpone time.h include because we will need to customize it on windows.
",numpy/random/mtrand/randomkit.c
974b3909cebd8c3347090cc3783700448bf9c0b9,"Generate config header for random kit (empty for now).
",numpy/random/mtrand/randomkit.c,numpy/random/setup.py
0ba62e66aef44d52f228c351366c4c021fd7a0fb,"Add code to detect msvc used to build python.
",numpy/random/setup.py
fd9a6496911b449882788c3e7d99d15efec6d6d3,"Merge branch 'ufunc'
",numpy/core/src/math_c99.inc.src,numpy/core/src/ufuncobject.c
cdffc01b366512e01034a8de312fe4287f3efd07,"Remove trailing whitespace.
",numpy/core/src/ufuncobject.c
dcb98e00b4aed0190e3f541bd5dd934451ad07b0,"Use loop macros in generic loops. This is a bit fragile at the
moment because the macros a defined in the umathmodule.c.src
file. This will be fixed...
",numpy/core/src/ufuncobject.c
3f438922a1cf780f6461645ca96907f98c8c15e8,"Correct spelling errors.
",numpy/core/tests/test_ufunc.py
1684edfa39233a05fcf1ab0ec8b0e4dcda3d113d,"Add some documentation to math_c99.
",numpy/core/src/math_c99.inc.src
57f2e369f37405f187b2c94305f416785da068ac,"removed the `new` argument in the histogram docstring example
",numpy/lib/function_base.py
08ad9d1c06865c86684f52fc4c6cf1bf527f1181,"Follow up on changes to histogram: new=False now raises a DeprecationWarning, new=True warns users that `new` will disappear in 1.4.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
3f265ff72fad3ada8e7e67a28227fb84e4c0e6d8,"Temporarily remove umath_test from build, it isn't linking on windows.
The problem is the blas_gemm problem seen elsewhere and I want to get
windows compiling first. It's almost there.
",numpy/core/setup.py
69409b3c86d126a64dfe0f499873252863c6b071,"Another stab at MSVC voodoo.
",numpy/core/src/math_c99.inc.src
eb5472e573e03460eab2707829d377a8d483b73d,"Another test for microsoft buildbot.
",numpy/core/src/math_c99.inc.src
230f6a78e6b5dff43e186bb774c268fe51cb5afb,"Another test: make functions defined in math_c99 static.
",numpy/core/src/math_c99.inc.src
8a1d2b9ded9bc7b4b9bfc5ccc879912aeddc3ddf,"Fix misplaced end statement.
",numpy/core/src/math_c99.inc.src
304405f893f3847c3ac9b3b6294a9d86e4f9a7a4,"Some spelling corrections.
Some experiments for MSVC.
",numpy/core/src/math_c99.inc.src,numpy/distutils/command/config.py
ea8a8f45b602777fd1372802f7a583c5b4a81216,"Fix missing semicolons on some function declarations.
",numpy/core/src/math_c99.inc.src
ed9c0d657d251ec050c9dc1299e8d53ad623c0ff,"Add C99 prototypes.
Attempt to cure problems of SPARC Debian Etch.
",numpy/core/src/math_c99.inc.src
b566ef37f7f4819eea542482cfdcc8e84c0203b3,"MaskedRecords : reintroduced _fieldmask as a property (for backcompatibility).
",numpy/ma/mrecords.py
7fd6e705f542cd156525e09719894820b0664249,"Debug commit seemed to work.
Add back all logaddexp, logaddexp2 tests.
Remove special log1p tests.
The existing log1p tests need some additions... 

",numpy/core/tests/test_umath.py
d373ae458785470c37d1d8671353623da09ece1c,"Debugging log1p problem.
Add log1p to the search list for f,l types.
Add back tests of log1pf, log1pl to see if they work.
",numpy/core/setup.py,numpy/core/tests/test_umath.py
7c9de6322ac2235224ee05424861dc6bd6e37a14,"Comment out all tests for data types that seem broken on some machines.
",numpy/core/tests/test_umath.py
5c44c02f5876ce8bf9c1ed35db2f979ad1a968eb,"Comment out some tests that use functions broken on some machines.
",numpy/core/tests/test_umath.py
39da315548f45ad0f731da6ba3443c4cf7cb8610,"Comment out tests that hang on some machines.
Add tests that might hang in more informative places.
",numpy/core/tests/test_umath.py
de29689c2c20a0142eece9ef996ef0f263593549,"Comment out tests that hang on some builtbots.
I think this is due to buggy versions of log1p,
so add a log1p evaluation with small number in test_log1p.
This might also be a problem with exp, so test that next
it this works.
",numpy/core/tests/test_umath.py
18d40322160086d675a9e8cff4f02eab5b9339ba,"Make logaddexp just a bit more severe.
",numpy/core/tests/test_umath.py
dd9378cdbc498ad7fb421b938da7aea163903418,"Make logaddexp range test less severe.
",numpy/core/tests/test_umath.py
f26f67dcb9f65dcd359a9d9c2c3d1390d315fde6,"Test to see what problem with logaddexp is on some machines.
",numpy/core/tests/test_umath.py
26a08a18212b5fa82aff3231067f01a189b8be2b,"Comment out generalized ufunc test until linkage problem is resolved.
",numpy/core/tests/test_ufunc.py
6d929c9b7ff8a404330acc04004b181200d9f62b,"Add logaddexp2.
Add tests for log, exp, logaddexp2.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
ccf08579d7ce4cd508bebb80b396b7c26ddabe1a,"typo
",numpy/core/tests/test_umath.py
13f253448bad23e1aa2fe5322899fc281ac06f12,"Add tests for log2, exp2, and logaddexp.
",numpy/core/tests/test_umath.py
cf049eec6cfc26c883dfbd00d60f85ed0f6e855b,"Fix exp2, log2 fallback functions.
",numpy/core/src/math_c99.inc.src
3d3ac93dac507fd0b5dd72aae06235e61e4d12fb,"Add log2 and exp2.
Fix scimath to use log2.
Complex versions of these functions need to be added.
MPL also defines log2 with slightly different properties.
For instance, it returns an integer value for log2(2).
",numpy/core/code_generators/generate_umath.py,numpy/core/setup.py,numpy/core/src/math_c99.inc.src,numpy/lib/scimath.py
32ccf77ab97a08440a6b74af6b674ffff8f1a91b,"Move new generalized ufunc function to end of api list.
",numpy/core/code_generators/ufunc_api_order.txt
d969d70d29559cd6c9996008441e4c1196d688ce,"Add tests for generalized ufuncs.
",numpy/core/setup.py,numpy/core/src/umath_tests.c.src,numpy/core/tests/test_ufunc.py
d1ea134907d87f4ab4889785c00f85495c6a4532,"Generalised ufuncs patch by Wenjie Fu and Hans-Andreas Engel (see ticket
",numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/ufuncobject.c
04d0ab737c541996b8311119ae840c9fd6d57e59,"numpy-docs: group functions by type instead of alphabetical order
",trunk/source/reference/ufuncs.rst
d4e239d48817cd17adac4dfc1bec3a80545229a5,"Trailing spaces.
",numpy/linalg/tests/test_build.py
5e62187c76d89a55c076438c4879e9a9e5a525c3,"Add mention of g77 vs gfortran in INSTALL notes.
",INSTALL.txt
c098984f9423332b20d755d44d5880a1bf288238,"Fix fortrab ABI mismatch test.
",numpy/linalg/tests/test_build.py
9742e30558a9a79cbfe875d2ad7e61b38b0f930d,"Detect gfrotran/g77 mismatch.
",numpy/linalg/tests/test_build.py
319ff38951b9ffc1f8fe366bcbc087cd7ffcd96a,"Start working on test to detect fortran compiler mismatch.
",numpy/linalg/tests/test_build.py
419cd5b72fd061fb5207e5c609d1ca33bda39ca9,"Disable looking for 3gf libraries; it causes more problem than it solves.
",INSTALL.txt,numpy/distutils/system_info.py
5c08ef9e97bfa623344ead870ec8acd44e4c9d04,"Mention which packages to install for atlas on Ubuntu (Pre intrepid and intrepid).
",INSTALL.txt
db67966deec2965c5ba1aea865ed1690be901bed,"Fix typo (g3f->3gf).
",numpy/distutils/system_info.py
7369d1a44d9c5f4b08d5ec8e227ef5f7a3116366,"Deal with g3f extension used by Debian/Ubuntu for gfortrab ABI transition.
",numpy/distutils/system_info.py
5b968f46761875623962c33f407ee15e4578b3a4,"Alphabetise some lists.  Add logaddexp, deg2rad, rad2deg and trunc ufuncs.
",trunk/source/reference/ufuncs.rst
870405873ca980e549518211e8cb1fe23bda6954,"Merge branch 'ufunc'
",numpy/core/code_generators/generate_umath.py
d9315999522822b8d03be4869d5eb0a190dd2bf7,"Remove remove logsumexp and replace with logaddexp.
",numpy/core/code_generators/generate_umath.py
b410bef656883661f027996d258a6bf77ec6a09d,"Rename logsumexp to logaddexp.
Add ufuncs deg2rad and rad2deg.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
4f5f865e9fd5fab31d85987d93ed9e34bf83655b,"Remove cpu/arch specific optimization flags for GNU fortran compilers: they are too fragile, and are more likely not that useful anyway.
",numpy/distutils/fcompiler/gnu.py
81c23fb31aa97e0b66df3ae1889c93c1d524fa98,"Fix reversal between radians and degrees.
",numpy/core/src/umathmodule.c.src
4f94b70d7848d5fef8cc8d95b3cf6407f786bafb,"Merge branch 'ufunc'

Conflicts:

	numpy/core/src/umathmodule.c.src
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
fcd872c96eb64d36a36f9ae77f79e302c99e20b2,"Add logsumexp ufunc and some small cleanups.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/math_c99.inc.src,numpy/core/src/umathmodule.c.src
0727f28178bda93816673c80c5f8e39d4cfc8311,"Finish replacing op by op1 so it compiles.
",numpy/core/src/umathmodule.c.src
214f75d18c329d35730e361046cc946381af924a,"More umath cleanups.
",numpy/core/src/umathmodule.c.src
c87fd4ac57244ef6a02ac465ff49320900b5e515,"Put measure in numpy.testing namespace.
",numpy/testing/utils.py
5e711eaf4e12209b295064eba7b6743294521c42,"Regenerate mtrand.c due to docstring changes
",numpy/random/mtrand/mtrand.c
18594cd9653a865fddfa4cd81f82ab54430be1c9,"Import documentation from doc wiki (part 2, work-in-progress docstrings, but they are still an improvement)
",numpy/__init__.py,numpy/add_newdocs.py,numpy/core/arrayprint.py,numpy/core/code_generators/docstrings.py,numpy/core/defchararray.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/doc/basics.py,numpy/doc/creation.py,numpy/doc/glossary.py,numpy/doc/misc.py,numpy/doc/subclassing.py,numpy/fft/fftpack.py,numpy/fft/helper.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/__init__.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/matlib.py,numpy/random/mtrand/mtrand.pyx
7a70f54f515bb8c586c3967d62731a49217eef95,"Import documentation from doc wiki (part 1)
",numpy/core/code_generators/docstrings.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/lib/twodim_base.py,numpy/random/mtrand/mtrand.pyx
6cb291a913c1e4f0d5fc18b88e58fb5bbbf50bf2,"Import initial version of Numpy documentation
",trunk/Makefile,trunk/README.txt,trunk/postprocess.py,trunk/source/_static/scipy.css,trunk/source/_templates/indexcontent.html,trunk/source/_templates/indexsidebar.html,trunk/source/_templates/layout.html,trunk/source/about.rst,trunk/source/bugs.rst,trunk/source/conf.py,trunk/source/contents.rst,trunk/source/glossary.rst,trunk/source/license.rst,trunk/source/reference/arrays.classes.rst,trunk/source/reference/arrays.dtypes.rst,trunk/source/reference/arrays.indexing.rst,trunk/source/reference/arrays.interface.rst,trunk/source/reference/arrays.ndarray.rst,trunk/source/reference/arrays.rst,trunk/source/reference/arrays.scalars.rst,trunk/source/reference/c-api.array.rst,trunk/source/reference/c-api.config.rst,trunk/source/reference/c-api.dtype.rst,trunk/source/reference/c-api.rst,trunk/source/reference/c-api.types-and-structures.rst,trunk/source/reference/c-api.ufunc.rst,trunk/source/reference/distutils.rst,trunk/source/reference/figures/dtype-hierarchy.dia,trunk/source/reference/figures/dtype-hierarchy.pdf,trunk/source/reference/figures/dtype-hierarchy.png,trunk/source/reference/figures/threefundamental.fig,trunk/source/reference/figures/threefundamental.pdf,trunk/source/reference/figures/threefundamental.png,trunk/source/reference/index.rst,trunk/source/reference/internals.code-explanations.rst,trunk/source/reference/internals.rst,trunk/source/reference/routines.array-creation.rst,trunk/source/reference/routines.array-manipulation.rst,trunk/source/reference/routines.bitwise.rst,trunk/source/reference/routines.ctypeslib.rst,trunk/source/reference/routines.dtype.rst,trunk/source/reference/routines.dual.rst,trunk/source/reference/routines.emath.rst,trunk/source/reference/routines.err.rst,trunk/source/reference/routines.fft.rst,trunk/source/reference/routines.financial.rst,trunk/source/reference/routines.functional.rst,trunk/source/reference/routines.help.rst,trunk/source/reference/routines.indexing.rst,trunk/source/reference/routines.io.rst,trunk/source/reference/routines.linalg.rst,trunk/source/reference/routines.logic.rst,trunk/source/reference/routines.ma.rst,trunk/source/reference/routines.math.rst,trunk/source/reference/routines.matlib.rst,trunk/source/reference/routines.numarray.rst,trunk/source/reference/routines.oldnumeric.rst,trunk/source/reference/routines.other.rst,trunk/source/reference/routines.poly.rst,trunk/source/reference/routines.random.rst,trunk/source/reference/routines.rst,trunk/source/reference/routines.set.rst,trunk/source/reference/routines.sort.rst,trunk/source/reference/routines.statistics.rst,trunk/source/reference/routines.window.rst,trunk/source/reference/ufuncs.rst,trunk/source/scipyshiny_small.png,trunk/source/user/basics.broadcasting.rst,trunk/source/user/basics.creation.rst,trunk/source/user/basics.indexing.rst,trunk/source/user/basics.rec.rst,trunk/source/user/basics.rst,trunk/source/user/basics.subclassing.rst,trunk/source/user/basics.types.rst,trunk/source/user/c-info.beyond-basics.rst,trunk/source/user/c-info.how-to-extend.rst,trunk/source/user/c-info.python-as-glue.rst,trunk/source/user/c-info.rst,trunk/source/user/howtofind.rst,trunk/source/user/index.rst,trunk/source/user/misc.rst,trunk/source/user/performance.rst,trunk/summarize.py
e866e0d811a052ca973dd91666499aae38fa0971,"Merge up to current trunk.
",numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
78733509e3a1f61c454fb23bae857e6a56a225de,"Change way maximum and minimum deal with nans.
Add ufuncs fmax and fmin.

In the following, a complex number is considered a nan if the real or imaginary
part is nan. This means that there are many different complex numbers that are
nans and this effects the nan values returned by the maximum, minimum, fmax, and
fmin ufuncs.

The maximum and minimum ufuncs are the same as before unless nans are involved.
In the case of nans, if both values being compared are nans, then the first is
returned, otherwise the nan value is returned. This has the effect of
propagating nans.

The fmax and fmin ufuncs return the same values as maximum and minimum if
neither value being compared is nan.  In the case of nans, if both values being
compared are nans, then the first is returned, otherwise the non-nan value is
returned. This has the effect that nans are ignored unless both values are nan.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
f6b25c63bbc191f3362966da20711157a12a0a1b,"Put back fmin, fmax lost in merge.
",numpy/core/src/umathmodule.c.src
1d559cfb6d6583beb60069841da1fafcd825423c,"Merge up to r5951 of trunk.
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/WTF_MathExtras.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/utils.h,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/math_c99.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/fft/fftpack_litemodule.c,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py,numpy/numarray/_capi.c,numpy/testing/utils.py
8d08b753f79d798525d59ef5ccd4ea17b0f337df,"Revert merge.
",numpy/core/code_generators/ufunc_api_order.txt,numpy/core/setup.py,numpy/core/src/umath_tests.c.src,numpy/core/tests/test_ufunc.py
3ee5691bdc110ce0606306f94c7d1648d8ae042f,"Merge generalised ufuncs branch.
",numpy/core/code_generators/ufunc_api_order.txt,numpy/core/setup.py,numpy/core/src/umath_tests.c.src,numpy/core/tests/test_ufunc.py
696b880e3e19e9728d1bf6a0e42a945427bf8d01,"__getattribute__ : make sure than a np.void is returned when retrieving the unmasked attribute of a single record.
",numpy/ma/mrecords.py
56bb8eb8e604e0bd2ebf8ce8e02e3909963b28f0,"* make sure we call self.failUnless instead of assert
",numpy/ma/tests/test_mrecords.py
a4f1e507669fcce584f54a859bc48780a170bce3,"core             : * fixed make_mask_descr to recognize subdtypes 
                 : * fixed some corner cases of view
mrecords         : * fixed view
                 : * got rid of _fieldmask for _mask
		         : * WARNING: setting ._mask no longer calls __setmask__ : BE CAREFUL.
                 : * prevent setting ._mask directly, as it screws up things: use .mask instead
test_subclassing : * clean up 
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py
15d9bd5f01f896cec23bf90fcf8db5a9a385202b,"More unused vars tagged (lapack_lite).
",numpy/linalg/lapack_litemodule.c
ac3cbcc7ee49d44e71c31f6b671de9cd9a6dd22a,"More unused vars tagged (fftpack).
",numpy/fft/fftpack_litemodule.c
83d41197e775c0f6c8d7bad8a7d7f572193694ee,"More unused vars tagged.
",numpy/numarray/_capi.c
130cefccda918eecc1d1f24cb275e7ba9e8da435,"Tag unused variables in numpy.lib C code.
",numpy/lib/src/_compiled_base.c
e70350cd1ae484d6446aa25091e69c70375aba9c,"More unused warning handled.
",numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umathmodule.c.src
a62ee5a3683a995d49a1b93d205fe936cc6de6d1,"Fix missing initializers warnings.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
0f3fbf1eab50c35199908a0532de82c0b4917024,"Use NPY_UNUSED in numpy.core sources.
",numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
dd7abccf331365e58b867a5601db089a1c51444a,"    Add utils.h, with macro to tag a variable as unused.
",numpy/core/include/numpy/utils.h
517ce68137a1eec30cba5a51b14503d2fcbe9772,"Remove test include.
",numpy/core/src/math_c99.inc.src
6b7992ba39adb2ef009cc2cce29f6ea362f5c6b4,"Add WTF_MathExtras.h to math_c99.inc.src for testing.
",numpy/core/src/math_c99.inc.src
17c1f6bedea46332fad742ba74152d370adc5e7f,"Move location of some includes for clarity.
Name ufunc setup section.
",numpy/core/src/umathmodule.c.src
890f197ae4baf93c5511ff9b630db8e6e049c4b7,"Merge up to r5926.
",numpy/core/SConscript,numpy/core/code_generators/numpy_api_order.txt,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/arrayobject.c,numpy/core/src/math_c99.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py,numpy/distutils/command/config.py
3209563900fd0f81f85f394e584019589366ad50,"Make it go.
",numpy/core/src/umathmodule.c.src
551a30171d30ce75e276c988dcb7dc499f60cbbc,"Fix function prototypes decl in check_func to avoid warning with -Wstrict-prototypes.
",numpy/distutils/command/config.py
03287a66b449cc8fa8b1957fbb85f575c0e4a821,"Merged revisions 5737-5912 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/clean_math_config

................
  r5738 | cdavid | 2008-09-01 21:18:52 +0900 (Mon, 01 Sep 2008) | 3 lines
  
  Initialized merge tracking via ""svnmerge"" with revisions ""1-5737"" from 
  http://svn.scipy.org/svn/numpy/trunk
................
  r5756 | cdavid | 2008-09-04 22:49:42 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Add a math_c99 compatibility module.
................
  r5757 | cdavid | 2008-09-04 22:58:47 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Add float and long double functions (C99).
................
  r5758 | cdavid | 2008-09-04 23:35:51 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Use code generator for c99_math.c
................
  r5759 | cdavid | 2008-09-04 23:37:29 +0900 (Thu, 04 Sep 2008) | 1 line
  
  move C99 math stuff to a .src file.
................
  r5760 | cdavid | 2008-09-04 23:40:00 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Add expm1 function in c99 compat module.
................
  r5761 | cdavid | 2008-09-04 23:45:33 +0900 (Thu, 04 Sep 2008) | 4 lines
  
  Use C99 math compatibility module.
  
  Completely broken for now, needs to update the configuration stage.
................
  r5762 | cdavid | 2008-09-04 23:55:01 +0900 (Thu, 04 Sep 2008) | 66 lines
  
  Merged revisions 5738-5761 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5739 | cdavid | 2008-09-01 21:50:46 +0900 (Mon, 01 Sep 2008) | 1 line
    
    Disable memmap test which crashes nose tests on cygwin.
  ........
    r5740 | cdavid | 2008-09-01 22:07:30 +0900 (Mon, 01 Sep 2008) | 2 lines
    
    Fix unused variable warning in object_arrtype_new.
  ........
    r5741 | cdavid | 2008-09-02 15:59:43 +0900 (Tue, 02 Sep 2008) | 5 lines
    
    Fix regression test #771 on 64 bits architecture.
    
    The test assumed an item was 4 bytes. Use itemsize instead of harcoding 4 bytes
    per item.
  ........
    r5742 | jarrod.millman | 2008-09-03 05:13:17 +0900 (Wed, 03 Sep 2008) | 2 lines
    
    pulling out testing docs from distutils docs
  ........
    r5743 | jarrod.millman | 2008-09-03 05:32:38 +0900 (Wed, 03 Sep 2008) | 2 lines
    
    reindenting prior to release
  ........
    r5745 | jarrod.millman | 2008-09-03 08:52:37 +0900 (Wed, 03 Sep 2008) | 2 lines
    
    trunk is open for 1.3 development
  ........
    r5748 | alan.mcintyre | 2008-09-03 14:10:39 +0900 (Wed, 03 Sep 2008) | 3 lines
    
    Fix __init__.py boilerplate example in DISTUTILS.txt, and moved content from 
    SciPy wiki entry on testing guidelines to TESTS.txt.
  ........
    r5749 | alan.mcintyre | 2008-09-03 15:11:28 +0900 (Wed, 03 Sep 2008) | 3 lines
    
    Updated TESTS.txt to actually be ReST.
    Capitalization nitpickery in DISTUTILS.txt: 'Scipy' -> 'SciPy'
  ........
    r5750 | alan.mcintyre | 2008-09-03 16:49:59 +0900 (Wed, 03 Sep 2008) | 2 lines
    
    Added section discussing using subclassing to create similar tests.
  ........
    r5751 | pierregm | 2008-09-04 01:48:52 +0900 (Thu, 04 Sep 2008) | 1 line
    
    docstring update
  ........
    r5752 | cdavid | 2008-09-04 01:54:37 +0900 (Thu, 04 Sep 2008) | 1 line
    
    Start a nep for warn-free numpy build.
  ........
    r5753 | cdavid | 2008-09-04 22:31:24 +0900 (Thu, 04 Sep 2008) | 1 line
    
    Update the warnfix nep.
  ........
    r5754 | cdavid | 2008-09-04 22:36:53 +0900 (Thu, 04 Sep 2008) | 1 line
    
    Start a nep for cleaning the math configuration.
  ........
    r5755 | cdavid | 2008-09-04 22:49:01 +0900 (Thu, 04 Sep 2008) | 1 line
    
    Update clean math config nep.
  ........
................
  r5763 | cdavid | 2008-09-05 00:12:45 +0900 (Fri, 05 Sep 2008) | 1 line
  
  put the setup code to check for match cap in a separate function.
................
  r5764 | cdavid | 2008-09-05 00:31:57 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Check for non-mandatory, basic, double functions.
................
  r5765 | cdavid | 2008-09-05 00:32:29 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Do not build math_c99.c, only set it as a dependency.
................
  r5766 | cdavid | 2008-09-05 00:39:38 +0900 (Fri, 05 Sep 2008) | 5 lines
  
  Manually generate math_c99.c
  
  I did not find a way to generate math_c99.c from math_c99.src with distutils,
  so let's include the generated file for now.
................
  r5767 | cdavid | 2008-09-05 01:29:09 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Keep the cruft for compatibility for now.
................
  r5773 | cdavid | 2008-09-05 12:12:37 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Check for all float/long double C99 math funcs explicitely.
................
  r5774 | cdavid | 2008-09-05 12:15:25 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Use calling version of check func.
................
  r5775 | cdavid | 2008-09-05 12:19:04 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Use the way formely used by setup to set backward-compatible defines.
................
  r5776 | cdavid | 2008-09-05 14:37:06 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Tell vim to recognize umathmodule.c.src as a C file.
................
  r5777 | cdavid | 2008-09-05 14:44:39 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Add fmod and modf as mandatory functions.
................
  r5778 | cdavid | 2008-09-05 14:49:32 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Add frexp and ldexp as the functions to lookf for C99 versions.
................
  r5779 | cdavid | 2008-09-05 15:11:26 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Add a check_funcs_once function to speed up func checks.
................
  r5780 | cdavid | 2008-09-05 15:21:18 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Use check_funcs_once to speed-up configuration on sane platforms.
................
  r5781 | cdavid | 2008-09-05 15:25:57 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Speed up the math configuration using check_funcs_once.
................
  r5782 | cdavid | 2008-09-05 15:34:55 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Fix indentation.
................
  r5783 | cdavid | 2008-09-05 15:47:10 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Remove HAVE_FLOAT_FUNCS, and use function-specific HAVE_ instead.
................
  r5784 | cdavid | 2008-09-05 15:47:40 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Remove HAVE_INVERSE_* for inverse hyperbolic funcs: not needed anymore.
................
  r5785 | cdavid | 2008-09-05 15:49:48 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Check for isnan and isinf.
................
  r5786 | cdavid | 2008-09-05 15:59:44 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Do not check for the same functions twice.
................
  r5787 | cdavid | 2008-09-05 16:00:12 +0900 (Fri, 05 Sep 2008) | 1 line
  
  ldexp is a mandatory function.
................
  r5812 | cdavid | 2008-09-13 16:04:41 +0900 (Sat, 13 Sep 2008) | 105 lines
  
  Merged revisions 5762-5811 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5768 | ptvirtan | 2008-09-05 03:04:35 +0900 (Fri, 05 Sep 2008) | 1 line
    
    Ufunc docstrings: show the 'out' arguments in a more standard way
  ........
    r5769 | alan.mcintyre | 2008-09-05 03:23:48 +0900 (Fri, 05 Sep 2008) | 4 lines
    
    Replaced numpy.testing.decorators.skipknownfailure with knownfailureif, 
    which allows flagging tests as known failures rather than skips.
    Updated test_umath to use knownfailureif.
  ........
    r5770 | alan.mcintyre | 2008-09-05 06:13:29 +0900 (Fri, 05 Sep 2008) | 2 lines
    
    Renamed classes to conform to PEP 8.
  ........
    r5771 | alan.mcintyre | 2008-09-05 07:06:01 +0900 (Fri, 05 Sep 2008) | 2 lines
    
    Fix link to example.py.
  ........
    r5772 | alan.mcintyre | 2008-09-05 10:20:09 +0900 (Fri, 05 Sep 2008) | 2 lines
    
    Remove debugging code.
  ........
    r5788 | dhuard | 2008-09-05 22:58:00 +0900 (Fri, 05 Sep 2008) | 1 line
    
    Applied patch from R. May fixing ticket #905 (loadtxt). Fixed other bug occurring when both usecols and converters are provided. Added related regression tests.
  ........
    r5789 | oliphant | 2008-09-05 23:06:02 +0900 (Fri, 05 Sep 2008) | 1 line
    
    Add final date-time proposal.
  ........
    r5791 | pierregm | 2008-09-06 08:38:44 +0900 (Sat, 06 Sep 2008) | 1 line
    
    * fixed deepcopy of masked arrays (bug #906)
  ........
    r5793 | cdavid | 2008-09-07 16:16:28 +0900 (Sun, 07 Sep 2008) | 8 lines
    
    scons command: fix one more issue related to build dir.
    
    The distutils installation directory relative to the scons build directory was
    not always computed right. The relative position on the fs does not depend on
    the source directory (in out-of-place builds), but on the package *name*
    translated to a directly only.
  ........
    r5796 | pearu | 2008-09-09 19:55:30 +0900 (Tue, 09 Sep 2008) | 1 line
    
    Fix typo.
  ........
    r5797 | stefan | 2008-09-09 22:38:34 +0900 (Tue, 09 Sep 2008) | 2 lines
    
    FIX: Loadtxt raises on empty input (closes #908).
  ........
    r5799 | alan.mcintyre | 2008-09-10 02:48:47 +0900 (Wed, 10 Sep 2008) | 2 lines
    
    Removed unused imports.
  ........
    r5800 | pierregm | 2008-09-10 03:25:15 +0900 (Wed, 10 Sep 2008) | 1 line
    
    * make sure that minimum & maximum actually return a MaskedArray
  ........
    r5803 | pierregm | 2008-09-12 04:54:31 +0900 (Fri, 12 Sep 2008) | 1 line
    
    * fixed view for MaskedArrays w/ flexible dtype
  ........
    r5804 | jarrod.millman | 2008-09-13 04:20:26 +0900 (Sat, 13 Sep 2008) | 2 lines
    
    FIX: broken links
  ........
    r5805 | jarrod.millman | 2008-09-13 04:23:20 +0900 (Sat, 13 Sep 2008) | 2 lines
    
    FIX: broken links
  ........
    r5806 | alan.mcintyre | 2008-09-13 11:53:53 +0900 (Sat, 13 Sep 2008) | 2 lines
    
    Fix failing doctests.
  ........
    r5807 | alan.mcintyre | 2008-09-13 11:56:33 +0900 (Sat, 13 Sep 2008) | 2 lines
    
    Remove unused imports.
  ........
    r5808 | alan.mcintyre | 2008-09-13 12:40:57 +0900 (Sat, 13 Sep 2008) | 7 lines
    
    Removed unused/duplicate imports.
    Removed repeated members of __all__.
    Fixed reference to undefined ""out"" in functions.py:take function.
    Fixed references to undefined ""N"" in functions.py.
    Rewrapped lines to conform to PEP8.
    Fixed references to undefined FPE_* constants (from numpy) in util.py.
  ........
    r5809 | cdavid | 2008-09-13 15:03:30 +0900 (Sat, 13 Sep 2008) | 6 lines
    
    Fix cygwin compilation
    
    Recent version of binutils (2.18.50) do not accept 4 bytes operand for some
    opcodes like fnstsw (which always expected a 2 bytes operand). Replace the type
    of the argument from unsigned 2 bytes to unsigned 4 bytes unsigned integer.
  ........
    r5810 | cdavid | 2008-09-13 15:27:46 +0900 (Sat, 13 Sep 2008) | 1 line
    
    Tag ctypes load library tests as known failures on cygwin.
  ........
................
  r5813 | cdavid | 2008-09-13 16:16:32 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Detect declaration of isnan and co only.
................
  r5814 | cdavid | 2008-09-13 16:25:51 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Clean IEEE handling: define them as macro.
................
  r5815 | cdavid | 2008-09-13 16:27:25 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Update generated math_c99 compat module.
................
  r5816 | cdavid | 2008-09-13 16:28:08 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Remove trailing spaces.
................
  r5817 | cdavid | 2008-09-13 16:30:07 +0900 (Sat, 13 Sep 2008) | 1 line
  
  remove unused _isnan.c
................
  r5818 | cdavid | 2008-09-13 16:48:29 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Fix typo in setup.py
................
  r5819 | cdavid | 2008-09-13 17:08:16 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Do not depend on _isnan.c.
................
  r5820 | cdavid | 2008-09-13 17:09:02 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Rename signbit replacement to signbit_d to avoid clash between macro and function.
................
  r5836 | cdavid | 2008-09-20 17:22:25 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Include Python.h before math.h for declaration tests in mathlib.
................
  r5837 | cdavid | 2008-09-20 17:47:19 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Remove the generated math_c99.c file from svn; generate it automatically from setup.py.
................
  r5838 | cdavid | 2008-09-20 18:48:01 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Test for MSVC, because we will need to special case for this F***** compiler once again.
................
  r5839 | cdavid | 2008-09-20 19:05:52 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Assume mandatory funcs available with MSVC.
................
  r5840 | cdavid | 2008-09-20 19:18:59 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Fix typo in CPP define.
................
  r5841 | cdavid | 2008-09-20 19:49:01 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Undef macro when using replacement functions in math_c99 module.
................
  r5842 | cdavid | 2008-09-20 19:51:35 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Forgot to define M_PI if not available.
................
  r5843 | cdavid | 2008-09-20 19:53:27 +0900 (Sat, 20 Sep 2008) | 1 line
  
  Forgot to define float/long double version of log1p if not available on the platform.
................
  r5844 | cdavid | 2008-09-20 20:39:20 +0900 (Sat, 20 Sep 2008) | 78 lines
  
  Merged revisions 5812-5843 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5821 | alan.mcintyre | 2008-09-14 03:04:57 +0900 (Sun, 14 Sep 2008) | 3 lines
    
    Removed unused imports.
    Standardize NumPy import as ""import numpy as np"".
  ........
    r5822 | alan.mcintyre | 2008-09-14 03:10:48 +0900 (Sun, 14 Sep 2008) | 6 lines
    
    Rewrapped __all__ definition to conform to PEP8.
    Standardize NumPy import as ""import numpy as np"".
    Removed unused imports.
    Fixed undefined reference to ndarray (should be np.ndarray).
    Fixed undefined references to exp (should be math.exp).
  ........
    r5823 | alan.mcintyre | 2008-09-14 03:15:38 +0900 (Sun, 14 Sep 2008) | 3 lines
    
    Removed unused imports.
    Fixed undefined reference to ""getpackage"" (from nose.util).
  ........
    r5824 | pierregm | 2008-09-14 06:17:09 +0900 (Sun, 14 Sep 2008) | 1 line
    
    MaskedArray.__new__ : make sure that we inherit the _hardmask from data (if any) instead of reverting to default.
  ........
    r5826 | alan.mcintyre | 2008-09-18 12:29:56 +0900 (Thu, 18 Sep 2008) | 4 lines
    
    Added documentation for doctests and using the skipif and knownfailureif decorators.
    Fixed indentation on the last sample snippet in the ""__init__.py and setup.py"" 
    section.
  ........
    r5827 | alan.mcintyre | 2008-09-18 12:33:15 +0900 (Thu, 18 Sep 2008) | 3 lines
    
    Rewrapped __all__ to conform with PEP8.
    Removed unused imports.
  ........
    r5828 | alan.mcintyre | 2008-09-18 12:33:58 +0900 (Thu, 18 Sep 2008) | 2 lines
    
    Removed unused imports.
  ........
    r5829 | alan.mcintyre | 2008-09-18 12:45:53 +0900 (Thu, 18 Sep 2008) | 3 lines
    
    Removed unused/redundant imports.
    PEP8 conformance (only one import per line).
  ........
    r5830 | alan.mcintyre | 2008-09-18 12:57:47 +0900 (Thu, 18 Sep 2008) | 2 lines
    
    Removed redundant import.
  ........
    r5831 | pierregm | 2008-09-19 02:51:55 +0900 (Fri, 19 Sep 2008) | 1 line
    
    median : fixed a bug in _median1D (there shouldn't have been an axis)
  ........
    r5832 | jarrod.millman | 2008-09-19 03:53:53 +0900 (Fri, 19 Sep 2008) | 2 lines
    
    ReSTified an URL
  ........
    r5833 | rkern | 2008-09-19 06:48:57 +0900 (Fri, 19 Sep 2008) | 1 line
    
    BUG: Override setuptools' install.run() method to correctly allow 'python setup.py install' to work.
  ........
    r5834 | pierregm | 2008-09-19 12:33:40 +0900 (Fri, 19 Sep 2008) | 1 line
    
    * fixing view to recognize dtype and type parameters, for consistency with regular ndarrays.
  ........
    r5835 | pierregm | 2008-09-20 04:43:05 +0900 (Sat, 20 Sep 2008) | 8 lines
    
    core:
    * add dtype to the repr of masked arrays w/ flexible type
    * prevent __getitem__ to return masked on flexible-type masked array
    * make sure __str__ returns something sensible for flexible dtype w/ masked fields
    * simplify the count method
    
    mrecords:
    * fixed a pb with fromrecords when the number of fields cannot be determined from the first element.
  ........
................
  r5845 | cdavid | 2008-09-21 00:58:44 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Remove redundant definition of isnan and co in ufuncobject.h
................
  r5846 | cdavid | 2008-09-21 01:00:09 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Use a single macro for isnan replacement.
................
  r5847 | cdavid | 2008-09-21 01:01:22 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Use a single macro for isinf replacement.
................
  r5848 | cdavid | 2008-09-21 01:10:53 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Move isfinite macro with isinf and isnan.
................
  r5849 | cdavid | 2008-09-21 01:11:51 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Fix isfinite.
................
  r5850 | cdavid | 2008-09-21 01:12:59 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Autoconf suggestion is totally bogus: isinf(nan) is false, not true.
................
  r5851 | cdavid | 2008-09-21 01:13:48 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Define isfinite first, and define isinf in function of isfinite/isnan.
................
  r5852 | cdavid | 2008-09-21 01:26:30 +0900 (Sun, 21 Sep 2008) | 6 lines
  
  Fix for isfinite on VS 2003.
  
  VS 2003 seems to think it is ok to simplify x-x to 0 for float, but this is
  wrong for NaN and Inf. To  alleviate, we force the operation to occur with (x)
  + (-x).
................
  r5853 | cdavid | 2008-09-21 01:56:08 +0900 (Sun, 21 Sep 2008) | 1 line
  
  More intrinsics.
................
  r5855 | cdavid | 2008-09-21 20:39:08 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Handle msvc intrisincs in check_func.
................
  r5856 | cdavid | 2008-09-21 20:39:27 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Handle msvc intrisincs in check_funcs_once.
................
  r5857 | cdavid | 2008-09-21 20:50:32 +0900 (Sun, 21 Sep 2008) | 1 line
  
  define -> pragma, stupid mistake.
................
  r5858 | cdavid | 2008-09-21 20:54:48 +0900 (Sun, 21 Sep 2008) | 1 line
  
  Do not use MSVC workaround anymore, since we now can test for function even when they are intrinsincs.
................
  r5861 | cdavid | 2008-09-23 12:48:01 +0900 (Tue, 23 Sep 2008) | 9 lines
  
  Merged revisions 5844-5860 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5860 | stefan | 2008-09-23 05:28:00 +0900 (Tue, 23 Sep 2008) | 2 lines
    
    Ignore unused converters in `loadtxt`.
  ........
................
  r5874 | charris | 2008-09-29 08:35:15 +0900 (Mon, 29 Sep 2008) | 4 lines
  
  Enhance code_generator to allow continuation lines.
  Small clarification in arraytypes.inc.src.
  Practice merging ;)
................
  r5882 | cdavid | 2008-09-30 13:40:13 +0900 (Tue, 30 Sep 2008) | 27 lines
  
  Merged revisions 5861-5881 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5862 | ptvirtan | 2008-09-24 20:50:38 +0900 (Wed, 24 Sep 2008) | 1 line
    
    Fix python2.5 dependency in lookfor
  ........
    r5869 | pierregm | 2008-09-29 02:27:37 +0900 (Mon, 29 Sep 2008) | 3 lines
    
    core:
    * added __rmul and __radd__
    * fixed concatenate for flexible-dtype
  ........
    r5878 | ptvirtan | 2008-09-30 02:23:43 +0900 (Tue, 30 Sep 2008) | 1 line
    
    Umath tests: remove signed zero check on branch cut for log* as it fails on some platforms.
  ........
    r5879 | pierregm | 2008-09-30 05:24:29 +0900 (Tue, 30 Sep 2008) | 1 line
    
    use if ...: raise AssertionError instead of assert
  ........
    r5880 | pierregm | 2008-09-30 05:24:56 +0900 (Tue, 30 Sep 2008) | 1 line
    
    replaced assert with self.failUnless
  ........
................
  r5898 | cdavid | 2008-10-03 16:21:00 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Start updating numscons configuration for new math config.
................
  r5899 | cdavid | 2008-10-03 16:21:15 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Add an help function to check a list of functions in scons build.
................
  r5900 | cdavid | 2008-10-03 16:21:31 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Fix typo in check_funcs.
................
  r5901 | cdavid | 2008-10-03 16:21:46 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Check for some optional, C99 double math functions.
................
  r5902 | cdavid | 2008-10-03 16:22:02 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Check for float/long double C99 functions.
................
  r5903 | cdavid | 2008-10-03 16:22:18 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Add check for C99 macros related IEEE-754.
................
  r5904 | cdavid | 2008-10-03 16:22:34 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Remove old configuration checks, supersded by new math config.
................
  r5905 | cdavid | 2008-10-03 16:22:57 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Generate math_c99.inc in numscons build.
................
  r5912 | cdavid | 2008-10-05 16:00:33 +0900 (Sun, 05 Oct 2008) | 39 lines
  
  Merged revisions 5882-5911 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r5886 | charris | 2008-10-02 03:05:29 +0900 (Thu, 02 Oct 2008) | 4 lines
    
    Make some error messages more informative.
    Improve error handling.
    Make continuation lines work.
  ........
    r5887 | charris | 2008-10-02 03:06:04 +0900 (Thu, 02 Oct 2008) | 2 lines
    
    Small cleanup to clarify repeated string.
  ........
    r5888 | charris | 2008-10-02 03:08:41 +0900 (Thu, 02 Oct 2008) | 6 lines
    
    Cleanup ufunc loops.
    At this point loops are separated into variable kinds, so there is a fair amount
    of duplication. I will probably merge loops that look the same in a later
    commit. There are no changes to current behavior of loops, this will also be
    changed in later work to deal with nans and such.
  ........
    r5889 | oliphant | 2008-10-03 05:27:17 +0900 (Fri, 03 Oct 2008) | 1 line
    
    Fix problem with subclasses of object arrays.
  ........
    r5896 | cdavid | 2008-10-03 15:50:32 +0900 (Fri, 03 Oct 2008) | 1 line
    
    Update the minimum version for numscons: had to change to cope with Chuck changes to conv_template.py.
  ........
    r5897 | cdavid | 2008-10-03 15:51:03 +0900 (Fri, 03 Oct 2008) | 1 line
    
    Update doall script: take the python version to build binaries from the command line instead of global variable.
  ........
    r5906 | oliphant | 2008-10-04 00:55:52 +0900 (Sat, 04 Oct 2008) | 1 line
    
    Fix ticket #925
  ........
................
",numpy/core/SConscript,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/math_c99.inc.src,numpy/core/src/umathmodule.c.src,numpy/distutils/command/config.py
50d1e8edc57b51a42cd82c9ef74a8e799ed36801,"Merged revisions 5882-5911 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5886 | charris | 2008-10-02 03:05:29 +0900 (Thu, 02 Oct 2008) | 4 lines
  
  Make some error messages more informative.
  Improve error handling.
  Make continuation lines work.
........
  r5887 | charris | 2008-10-02 03:06:04 +0900 (Thu, 02 Oct 2008) | 2 lines
  
  Small cleanup to clarify repeated string.
........
  r5888 | charris | 2008-10-02 03:08:41 +0900 (Thu, 02 Oct 2008) | 6 lines
  
  Cleanup ufunc loops.
  At this point loops are separated into variable kinds, so there is a fair amount
  of duplication. I will probably merge loops that look the same in a later
  commit. There are no changes to current behavior of loops, this will also be
  changed in later work to deal with nans and such.
........
  r5889 | oliphant | 2008-10-03 05:27:17 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Fix problem with subclasses of object arrays.
........
  r5896 | cdavid | 2008-10-03 15:50:32 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Update the minimum version for numscons: had to change to cope with Chuck changes to conv_template.py.
........
  r5897 | cdavid | 2008-10-03 15:51:03 +0900 (Fri, 03 Oct 2008) | 1 line
  
  Update doall script: take the python version to build binaries from the command line instead of global variable.
........
  r5906 | oliphant | 2008-10-04 00:55:52 +0900 (Sat, 04 Oct 2008) | 1 line
  
  Fix ticket #925
........
",numpy/core/code_generators/numpy_api_order.txt,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py,numpy/distutils/command/scons.py,tools/win32build/doall.py
2ee2f82a2bb494b31f053a86d0a9dc07ed737b87,"More constant type cleanups.
USE CLE,CGE for complex compare macros instead of LE & GE.
",numpy/core/src/umathmodule.c.src
bdb51a609ab370705ba781abe673be8f1c71f8b9,"Cleanup some floating constant types.
Make cast from double explicit for integer kind reciprocal.
Small style cleanup.
",numpy/core/src/umathmodule.c.src
10ed170a5d4e82024c2b4deff7d4c3549e3e4ff4,"Fix invalid use of identity fmax,fmin.
",numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/ufuncobject.h
176328e827919d0a7c84fe6b026f4422bd605874,"Try include fix in WTF_MathExtras.h file
",numpy/core/include/numpy/WTF_MathExtras.h
98f4cd292ae1478174270ef2f3dc70b2b3108d75,"Update to trunk.
Add WTF_MathExtras.h from Apple to see if it fixes some windows problems.
",numpy/core/include/numpy/WTF_MathExtras.h,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py,numpy/distutils/command/scons.py,tools/win32build/doall.py
a0e082a087e9667e3805d3be859958a292e8f336,"Fix ticket #925
",numpy/core/code_generators/numpy_api_order.txt,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
0273ac8609ab82eaa4240c437083bfeb5b707e29,"Generate math_c99.inc in numscons build.
",numpy/core/SConscript
8b2ae8de018b6692a1b23f9ec9fe47948c06d5f2,"Remove old configuration checks, supersded by new math config.
",numpy/core/SConscript
7bfd6f18f18be91f0cd9122c13afea89b8e2fcdd,"Add check for C99 macros related IEEE-754.
",numpy/core/SConscript
26dc21128a94b1d1d49d081c8079f4c71d52f618,"Check for float/long double C99 functions.
",numpy/core/SConscript
f1cd9b0ae47b6f3a880e6d7d34c37ff8437f683d,"Check for some optional, C99 double math functions.
",numpy/core/SConscript
27f4075d264ef01d17f328e643d48782f673c53c,"Fix typo in check_funcs.
",numpy/core/SConscript
48a01ee3a7b9a80a65db254113397fd0a6a7d8aa,"Add an help function to check a list of functions in scons build.
",numpy/core/SConscript
384e892dc5b44258af0906c48513ec7634a4eb8a,"Start updating numscons configuration for new math config.
",numpy/core/SConscript
b65b21c397381351965bf3f590054d2bccdd03d2,"Update doall script: take the python version to build binaries from the command line instead of global variable.
",tools/win32build/doall.py
df327a92b1589a66085c7201348eac055a39c08b,"Update the minimum version for numscons: had to change to cope with Chuck changes to conv_template.py.
",numpy/distutils/command/scons.py
5055ae60c20668cec21d2a0152b10d91044751f0,"Make the complex nans returned from fmax/fmin/maximum/minimum have both real and
imaginary parts set to nan.
",numpy/core/src/umathmodule.c.src
658bada2ea5660a1548ccfcb5d4b5b30cd436ea2,"Add fmax, fmin functions for floats and complex. These conform to the ieee
standard for these functions. For numpy they are extended to complex numbers,
where a complex is considered a nan if either the real or complex part is. In
this case nan + nan*1j is returned if both arguments are nans.

Modify maximum and minimum so that if either input is nan, then nan is returned.
Likewise for the complex version.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
7469d1afe2ee8c1c295bba131694f3731b9d092a,"Add assert_ to testing module. Use as assert_(condition, message).
This function does not disappear when python runs with the -OO option.
",numpy/testing/utils.py
823cda93ca2f19f96d01b7ea7fd8c951491302be,"Add PyUFunc_Nan.
",numpy/core/include/numpy/ufuncobject.h
6d5283a811f5f727bc7486e596d8048f5315a6d2,"Fix problem with subclasses of object arrays.
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
dd96fbda20855997eb6d234a345d45c462c4e74b,"Cleanup ufunc loops.
At this point loops are separated into variable kinds, so there is a fair amount
of duplication. I will probably merge loops that look the same in a later
commit. There are no changes to current behavior of loops, this will also be
changed in later work to deal with nans and such.
",numpy/core/src/umathmodule.c.src
0e61aff5d0f966ed314d02ec173a74f89dac1950,"Small cleanup to clarify repeated string.
",numpy/core/src/arraytypes.inc.src
f9a3ee912d3eef47286f3c6914947381a81d55be,"Make some error messages more informative.
Improve error handling.
Make continuation lines work.
",numpy/distutils/conv_template.py
1b55c85010caa1d5ed147688fbb9997acd7fc175,"Change conv_template.py to work with continuation lines.
Clarify repeated substitution in arraytypes.inc.src.
Cleanup ufunc loops.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/umathmodule.c.src,numpy/distutils/conv_template.py
9ae2bfa7bca6dcf9cec7de47b997e4c7999aba1b,"Merged revisions 5861-5881 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5862 | ptvirtan | 2008-09-24 20:50:38 +0900 (Wed, 24 Sep 2008) | 1 line
  
  Fix python2.5 dependency in lookfor
........
  r5869 | pierregm | 2008-09-29 02:27:37 +0900 (Mon, 29 Sep 2008) | 3 lines
  
  core:
  * added __rmul and __radd__
  * fixed concatenate for flexible-dtype
........
  r5878 | ptvirtan | 2008-09-30 02:23:43 +0900 (Tue, 30 Sep 2008) | 1 line
  
  Umath tests: remove signed zero check on branch cut for log* as it fails on some platforms.
........
  r5879 | pierregm | 2008-09-30 05:24:29 +0900 (Tue, 30 Sep 2008) | 1 line
  
  use if ...: raise AssertionError instead of assert
........
  r5880 | pierregm | 2008-09-30 05:24:56 +0900 (Tue, 30 Sep 2008) | 1 line
  
  replaced assert with self.failUnless
........
",numpy/core/tests/test_umath.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py
5916fc4ab60b69148b3c4e33cd218da71d64d8ce,"replaced assert with self.failUnless
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_subclassing.py
05921b06c3ef486ff173645b915cd93e5f8cddd6,"use if ...: raise AssertionError instead of assert
",numpy/ma/testutils.py
fb79230fee2d490f2e7cc2e58b03145da21fffde,"Umath tests: remove signed zero check on branch cut for log* as it fails on some platforms.
",numpy/core/tests/test_umath.py
c43202e0bf9571ed4b7d9152fedd5497e270a813,"Enhance code_generator to allow continuation lines.
Small clarification in arraytypes.inc.src.
Practice merging ;)
",numpy/core/src/arraytypes.inc.src,numpy/distutils/conv_template.py
855ede0f17fb4d12448b0d1ec60b8431f7100447,"core:
* added __rmul and __radd__
* fixed concatenate for flexible-dtype
",numpy/ma/core.py,numpy/ma/tests/test_core.py
55f467b6e64949eef5c614501df34a5e9af70b38,"Fix python2.5 dependency in lookfor
",numpy/lib/utils.py
96b1aa6b1f0ede5413693b21755eeb0ff57b102e,"Merged revisions 5844-5860 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5860 | stefan | 2008-09-23 05:28:00 +0900 (Tue, 23 Sep 2008) | 2 lines
  
  Ignore unused converters in `loadtxt`.
........
",numpy/lib/io.py,numpy/lib/tests/test_io.py
f1855ef6c44ff037b606cbc0673a536ece31a945,"Ignore unused converters in `loadtxt`.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
9536dc2b153b9204349c05dcd83da3cd72bc22af,"Do not use MSVC workaround anymore, since we now can test for function even when they are intrinsincs.
",numpy/core/setup.py
6584cd2db2a6dd5e249e3a97ca448c945fe71e2d,"define -> pragma, stupid mistake.
",numpy/distutils/command/config.py
65cb6763a12d0a0697f2f2008188a706e3c7c12a,"Handle msvc intrisincs in check_funcs_once.
",numpy/distutils/command/config.py
1a555279787f77ecd8b26b30ad7edb36d73d5374,"Handle msvc intrisincs in check_func.
",numpy/distutils/command/config.py
bb8440cc9d9c25d671020dbe5a8e64a69488133c,"More intrinsics.
",numpy/core/setup.py
c372fc1bad92634ae05224263fa56c86fae9b380,"Fix for isfinite on VS 2003.

VS 2003 seems to think it is ok to simplify x-x to 0 for float, but this is
wrong for NaN and Inf. To  alleviate, we force the operation to occur with (x)
+ (-x).
",numpy/core/src/math_c99.inc.src
bc45f6bf99ae12105f19bc7ca00469ffb9bd60f3,"Define isfinite first, and define isinf in function of isfinite/isnan.
",numpy/core/src/math_c99.inc.src
50a276b416cb7948afa50fbd85f19dff60710d9f,"Autoconf suggestion is totally bogus: isinf(nan) is false, not true.
",numpy/core/src/math_c99.inc.src
b0747c03facbf61925a314f1b040824f62f9ecf3,"Fix isfinite.
",numpy/core/src/math_c99.inc.src
30c8fc7a642e97b87839b04d704940447833a728,"Move isfinite macro with isinf and isnan.
",numpy/core/src/math_c99.inc.src
54479656c42bf4077e962f1a44f52dd1a5a0fcc7,"Use a single macro for isinf replacement.
",numpy/core/src/math_c99.inc.src
3595d103fb214d1a210eaf39151099961a3eb05c,"Use a single macro for isnan replacement.
",numpy/core/src/math_c99.inc.src
ef37f84a2c643e01ab0d4131f8017b892510c074,"Remove redundant definition of isnan and co in ufuncobject.h
",numpy/core/include/numpy/ufuncobject.h
99c765d3be1b7ce73e2a7def0f99af6ae7d6a522,"Merged revisions 5812-5843 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5821 | alan.mcintyre | 2008-09-14 03:04:57 +0900 (Sun, 14 Sep 2008) | 3 lines
  
  Removed unused imports.
  Standardize NumPy import as ""import numpy as np"".
........
  r5822 | alan.mcintyre | 2008-09-14 03:10:48 +0900 (Sun, 14 Sep 2008) | 6 lines
  
  Rewrapped __all__ definition to conform to PEP8.
  Standardize NumPy import as ""import numpy as np"".
  Removed unused imports.
  Fixed undefined reference to ndarray (should be np.ndarray).
  Fixed undefined references to exp (should be math.exp).
........
  r5823 | alan.mcintyre | 2008-09-14 03:15:38 +0900 (Sun, 14 Sep 2008) | 3 lines
  
  Removed unused imports.
  Fixed undefined reference to ""getpackage"" (from nose.util).
........
  r5824 | pierregm | 2008-09-14 06:17:09 +0900 (Sun, 14 Sep 2008) | 1 line
  
  MaskedArray.__new__ : make sure that we inherit the _hardmask from data (if any) instead of reverting to default.
........
  r5826 | alan.mcintyre | 2008-09-18 12:29:56 +0900 (Thu, 18 Sep 2008) | 4 lines
  
  Added documentation for doctests and using the skipif and knownfailureif decorators.
  Fixed indentation on the last sample snippet in the ""__init__.py and setup.py"" 
  section.
........
  r5827 | alan.mcintyre | 2008-09-18 12:33:15 +0900 (Thu, 18 Sep 2008) | 3 lines
  
  Rewrapped __all__ to conform with PEP8.
  Removed unused imports.
........
  r5828 | alan.mcintyre | 2008-09-18 12:33:58 +0900 (Thu, 18 Sep 2008) | 2 lines
  
  Removed unused imports.
........
  r5829 | alan.mcintyre | 2008-09-18 12:45:53 +0900 (Thu, 18 Sep 2008) | 3 lines
  
  Removed unused/redundant imports.
  PEP8 conformance (only one import per line).
........
  r5830 | alan.mcintyre | 2008-09-18 12:57:47 +0900 (Thu, 18 Sep 2008) | 2 lines
  
  Removed redundant import.
........
  r5831 | pierregm | 2008-09-19 02:51:55 +0900 (Fri, 19 Sep 2008) | 1 line
  
  median : fixed a bug in _median1D (there shouldn't have been an axis)
........
  r5832 | jarrod.millman | 2008-09-19 03:53:53 +0900 (Fri, 19 Sep 2008) | 2 lines
  
  ReSTified an URL
........
  r5833 | rkern | 2008-09-19 06:48:57 +0900 (Fri, 19 Sep 2008) | 1 line
  
  BUG: Override setuptools' install.run() method to correctly allow 'python setup.py install' to work.
........
  r5834 | pierregm | 2008-09-19 12:33:40 +0900 (Fri, 19 Sep 2008) | 1 line
  
  * fixing view to recognize dtype and type parameters, for consistency with regular ndarrays.
........
  r5835 | pierregm | 2008-09-20 04:43:05 +0900 (Sat, 20 Sep 2008) | 8 lines
  
  core:
  * add dtype to the repr of masked arrays w/ flexible type
  * prevent __getitem__ to return masked on flexible-type masked array
  * make sure __str__ returns something sensible for flexible dtype w/ masked fields
  * simplify the count method
  
  mrecords:
  * fixed a pb with fromrecords when the number of fields cannot be determined from the first element.
........
",doc/TESTS.txt,numpy/_import_tools.py,numpy/core/records.py,numpy/distutils/command/install.py,numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/doc/collectinput.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/use_rules.py,numpy/lib/index_tricks.py,numpy/lib/twodim_base.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/rng.py,numpy/testing/noseclasses.py
7e79e3909956beac477060543f569adc3e53661c,"Forgot to define float/long double version of log1p if not available on the platform.
",numpy/core/src/math_c99.inc.src
0645f2b31a18eb22774b5e71f96a755e5d2d9304,"Forgot to define M_PI if not available.
",numpy/core/src/umathmodule.c.src
ba58ed7c29eb5d21c89093b92e148b9b4bb70304,"Undef macro when using replacement functions in math_c99 module.
",numpy/core/src/math_c99.inc.src
52648a4a8064a29fb483cd54995bcbfdc173a6db,"Fix typo in CPP define.
",numpy/core/setup.py
db56d90e49b90e76e402611a103c3254614e93f1,"Assume mandatory funcs available with MSVC.
",numpy/core/setup.py
b2e8222f96c007382db54b9b09c45c4df4b704af,"Test for MSVC, because we will need to special case for this F***** compiler once again.
",numpy/core/setup.py
f633298f32e499b46ce948080d4cb50ce006a903,"Remove the generated math_c99.c file from svn; generate it automatically from setup.py.
",numpy/core/setup.py,numpy/core/src/math_c99.c,numpy/core/src/{math_c99.c.src,numpy/core/src/umathmodule.c.src
7fd5922f5d2a74b4353cdb2092501cdd9c30f337,"Include Python.h before math.h for declaration tests in mathlib.
",numpy/core/setup.py
3060e39a4dc5ffc4852d7f7b2adc8f8d79bde0df,"core:
* add dtype to the repr of masked arrays w/ flexible type
* prevent __getitem__ to return masked on flexible-type masked array
* make sure __str__ returns something sensible for flexible dtype w/ masked fields
* simplify the count method

mrecords:
* fixed a pb with fromrecords when the number of fields cannot be determined from the first element.
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
a632ae1608b1c86020d30c492d9f9d1599dbd420,"* fixing view to recognize dtype and type parameters, for consistency with regular ndarrays.
",numpy/core/records.py
4abde4ab7cd688e38dc2b935eac07594a06db286,"BUG: Override setuptools' install.run() method to correctly allow 'python setup.py install' to work.
",numpy/distutils/command/install.py
cfc88c90c9536dac8c739be22c87769c6e2bda4a,"ReSTified an URL
",doc/TESTS.txt
0c4ca0c46de9b2c2d598a07cbee20a68a6cebb47,"median : fixed a bug in _median1D (there shouldn't have been an axis)
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
79690f02ab0e227e162b40f7dc346a68df81515f,"Removed redundant import.
",numpy/_import_tools.py
95104b851ace0df9853451b0c3d146a0ce186ced,"Removed unused/redundant imports.
PEP8 conformance (only one import per line).
",numpy/f2py/auxfuncs.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/doc/collectinput.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/use_rules.py
3c6341f1c5f932018875fa461ae51310cb419e14,"Removed unused imports.
",numpy/lib/index_tricks.py,numpy/lib/twodim_base.py,numpy/lib/utils.py
5db4b8807b0293ba5627189be66e14e7a8e07749,"Rewrapped __all__ to conform with PEP8.
Removed unused imports.
",numpy/linalg/linalg.py
ccae47f074c44972b82f679ef68a848fdf308b72,"Added documentation for doctests and using the skipif and knownfailureif decorators.
Fixed indentation on the last sample snippet in the ""__init__.py and setup.py"" 
section.
",doc/TESTS.txt
0e400c861d8bb3f329cd9c432102af2b5827b693,"MaskedArray.__new__ : make sure that we inherit the _hardmask from data (if any) instead of reverting to default.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2a5163af2041e9f94ec33d0ca8f88d4c4b32f406,"Removed unused imports.
Fixed undefined reference to ""getpackage"" (from nose.util).
",numpy/testing/noseclasses.py
83eba775c46704a969826eb1990be80e35c65255,"Rewrapped __all__ definition to conform to PEP8.
Standardize NumPy import as ""import numpy as np"".
Removed unused imports.
Fixed undefined reference to ndarray (should be np.ndarray).
Fixed undefined references to exp (should be math.exp).
",numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/rng.py
e8b5097f886ca58ff5713886f8378d2b233c418b,"Removed unused imports.
Standardize NumPy import as ""import numpy as np"".
",numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py
d799888432862f2fe5f0d8189b67b3daa30d617c,"Rename signbit replacement to signbit_d to avoid clash between macro and function.
",numpy/core/src/_signbit.c,numpy/core/src/math_c99.c,numpy/core/src/math_c99.c.src
ed31041228b8f3d9cfd4fff8ecf3fa6d40597cc1,"Do not depend on _isnan.c.
",numpy/core/setup.py
e40e9bbf985a37747dc8f42184230b3c2a2dc22a,"Fix typo in setup.py
",numpy/core/setup.py
a6f566fb277ec19ec9edba0d731c726059dfd464,"remove unused _isnan.c
",numpy/core/src/_isnan.c
82e7f1cfc29687b4f3c7d445dc7e54e4199c1f61,"Remove trailing spaces.
",numpy/core/src/math_c99.c.src
8d6282e89dd6d6336ed495e3f5f8767b5fe43021,"Update generated math_c99 compat module.
",numpy/core/src/math_c99.c
db517388fd6e0fc4434195ec71138c53e59f71c3,"Clean IEEE handling: define them as macro.
",numpy/core/src/math_c99.c.src,numpy/core/src/umathmodule.c.src
cd71bfdc2dadd8eda76c17fd788c817ce381c4dc,"Detect declaration of isnan and co only.
",numpy/core/setup.py
0282bcdf737998fcde04e2101f9e44dcf8450888,"Merged revisions 5762-5811 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5768 | ptvirtan | 2008-09-05 03:04:35 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Ufunc docstrings: show the 'out' arguments in a more standard way
........
  r5769 | alan.mcintyre | 2008-09-05 03:23:48 +0900 (Fri, 05 Sep 2008) | 4 lines
  
  Replaced numpy.testing.decorators.skipknownfailure with knownfailureif, 
  which allows flagging tests as known failures rather than skips.
  Updated test_umath to use knownfailureif.
........
  r5770 | alan.mcintyre | 2008-09-05 06:13:29 +0900 (Fri, 05 Sep 2008) | 2 lines
  
  Renamed classes to conform to PEP 8.
........
  r5771 | alan.mcintyre | 2008-09-05 07:06:01 +0900 (Fri, 05 Sep 2008) | 2 lines
  
  Fix link to example.py.
........
  r5772 | alan.mcintyre | 2008-09-05 10:20:09 +0900 (Fri, 05 Sep 2008) | 2 lines
  
  Remove debugging code.
........
  r5788 | dhuard | 2008-09-05 22:58:00 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Applied patch from R. May fixing ticket #905 (loadtxt). Fixed other bug occurring when both usecols and converters are provided. Added related regression tests.
........
  r5789 | oliphant | 2008-09-05 23:06:02 +0900 (Fri, 05 Sep 2008) | 1 line
  
  Add final date-time proposal.
........
  r5791 | pierregm | 2008-09-06 08:38:44 +0900 (Sat, 06 Sep 2008) | 1 line
  
  * fixed deepcopy of masked arrays (bug #906)
........
  r5793 | cdavid | 2008-09-07 16:16:28 +0900 (Sun, 07 Sep 2008) | 8 lines
  
  scons command: fix one more issue related to build dir.
  
  The distutils installation directory relative to the scons build directory was
  not always computed right. The relative position on the fs does not depend on
  the source directory (in out-of-place builds), but on the package *name*
  translated to a directly only.
........
  r5796 | pearu | 2008-09-09 19:55:30 +0900 (Tue, 09 Sep 2008) | 1 line
  
  Fix typo.
........
  r5797 | stefan | 2008-09-09 22:38:34 +0900 (Tue, 09 Sep 2008) | 2 lines
  
  FIX: Loadtxt raises on empty input (closes #908).
........
  r5799 | alan.mcintyre | 2008-09-10 02:48:47 +0900 (Wed, 10 Sep 2008) | 2 lines
  
  Removed unused imports.
........
  r5800 | pierregm | 2008-09-10 03:25:15 +0900 (Wed, 10 Sep 2008) | 1 line
  
  * make sure that minimum & maximum actually return a MaskedArray
........
  r5803 | pierregm | 2008-09-12 04:54:31 +0900 (Fri, 12 Sep 2008) | 1 line
  
  * fixed view for MaskedArrays w/ flexible dtype
........
  r5804 | jarrod.millman | 2008-09-13 04:20:26 +0900 (Sat, 13 Sep 2008) | 2 lines
  
  FIX: broken links
........
  r5805 | jarrod.millman | 2008-09-13 04:23:20 +0900 (Sat, 13 Sep 2008) | 2 lines
  
  FIX: broken links
........
  r5806 | alan.mcintyre | 2008-09-13 11:53:53 +0900 (Sat, 13 Sep 2008) | 2 lines
  
  Fix failing doctests.
........
  r5807 | alan.mcintyre | 2008-09-13 11:56:33 +0900 (Sat, 13 Sep 2008) | 2 lines
  
  Remove unused imports.
........
  r5808 | alan.mcintyre | 2008-09-13 12:40:57 +0900 (Sat, 13 Sep 2008) | 7 lines
  
  Removed unused/duplicate imports.
  Removed repeated members of __all__.
  Fixed reference to undefined ""out"" in functions.py:take function.
  Fixed references to undefined ""N"" in functions.py.
  Rewrapped lines to conform to PEP8.
  Fixed references to undefined FPE_* constants (from numpy) in util.py.
........
  r5809 | cdavid | 2008-09-13 15:03:30 +0900 (Sat, 13 Sep 2008) | 6 lines
  
  Fix cygwin compilation
  
  Recent version of binutils (2.18.50) do not accept 4 bytes operand for some
  opcodes like fnstsw (which always expected a 2 bytes operand). Replace the type
  of the argument from unsigned 2 bytes to unsigned 4 bytes unsigned integer.
........
  r5810 | cdavid | 2008-09-13 15:27:46 +0900 (Sat, 13 Sep 2008) | 1 line
  
  Tag ctypes load library tests as known failures on cygwin.
........
",doc/HOWTO_BUILD_DOCS.txt,doc/HOWTO_DOCUMENT.txt,doc/neps/datetime-proposal3.rst,doc/neps/datetime.rst,numpy/core/fromnumeric.py,numpy/core/include/numpy/fenv/fenv.h,numpy/core/numeric.py,numpy/core/src/ufuncobject.c,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/distutils/command/scons.py,numpy/distutils/tests/test_misc_util.py,numpy/f2py/crackfortran.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/arraysetops.py,numpy/lib/io.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/numarray/alter_code2.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/util.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py
ec1f7831680db674dfe3f8c89ab2159b0d8ed4c1,"Tag ctypes load library tests as known failures on cygwin.
",numpy/tests/test_ctypeslib.py
39a7b4a1ca3de1289f6d2fe09ac3c2527dcaa1c1,"Fix cygwin compilation

Recent version of binutils (2.18.50) do not accept 4 bytes operand for some
opcodes like fnstsw (which always expected a 2 bytes operand). Replace the type
of the argument from unsigned 2 bytes to unsigned 4 bytes unsigned integer.
",numpy/core/include/numpy/fenv/fenv.h
e091c840e101eb620307747e0e4cd1b939d8abe6,"Removed unused/duplicate imports.
Removed repeated members of __all__.
Fixed reference to undefined ""out"" in functions.py:take function.
Fixed references to undefined ""N"" in functions.py.
Rewrapped lines to conform to PEP8.
Fixed references to undefined FPE_* constants (from numpy) in util.py.
",numpy/numarray/alter_code2.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/util.py
b1e2466272fa0c2ee08701c3d86a03088218b69e,"Remove unused imports.
",numpy/distutils/tests/test_misc_util.py
b570fbbc488b4b9480fdf0f5df9fe7369af65d7c,"Fix failing doctests.
",numpy/core/fromnumeric.py,numpy/core/numeric.py
212163e69adf725336ed73cea86fe7dc5f74ec27,"FIX: broken links
",doc/HOWTO_BUILD_DOCS.txt
5659fa7493c7c644139c81e95b552dcf7b487aca,"FIX: broken links
",doc/HOWTO_DOCUMENT.txt
91391ca79005517318884cb0fb6433e2acda8e6b,"* fixed view for MaskedArrays w/ flexible dtype
",numpy/ma/core.py,numpy/ma/tests/test_core.py
d14ca836da11243abb042ab12b1e887f4bfa2d37,"* make sure that minimum & maximum actually return a MaskedArray
",numpy/ma/core.py,numpy/ma/tests/test_core.py
9351f2e02f643a9fadb35d8bb9eacf804b905d51,"Removed unused imports.
",numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/arraysetops.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_function_base.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/testing/utils.py
27d5aff700a2841cc0a30a4f774dcc67363fa287,"FIX: Loadtxt raises on empty input (closes #908).
",numpy/lib/io.py,numpy/lib/tests/test_io.py
b01bf6ffea880fc28daaa6877e2d4653aeab3d7f,"Fix typo.
",numpy/f2py/crackfortran.py
f0e69ab361b29daae801aa514c78d2097412691a,"scons command: fix one more issue related to build dir.

The distutils installation directory relative to the scons build directory was
not always computed right. The relative position on the fs does not depend on
the source directory (in out-of-place builds), but on the package *name*
translated to a directly only.

",numpy/distutils/command/scons.py
c265a81af4e6b954b05e0233aae81a42ffcefc71,"* fixed deepcopy of masked arrays (bug #906)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
454911c28464c0b464cc243566ca8f305bf347bd,"Add final date-time proposal.
",doc/neps/datetime-proposal3.rst,doc/neps/datetime.rst
ce75d262b5b67c03d972e14d7c7f1d24ffea5e68,"Applied patch from R. May fixing ticket #905 (loadtxt). Fixed other bug occurring when both usecols and converters are provided. Added related regression tests.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
cf9b2c9480861a716dad46bb447f40fc09c87117,"ldexp is a mandatory function.
",numpy/core/setup.py
72a6d03b50cb35175548f70d684ae81b951af090,"Do not check for the same functions twice.
",numpy/core/setup.py
ba7a73a906ea75510a7ecf8f4fb64477fc613cbe,"Check for isnan and isinf.
",numpy/core/setup.py
61f689b8b647fc392ab4e4ec8450444fdc94a8c7,"Remove HAVE_INVERSE_* for inverse hyperbolic funcs: not needed anymore.
",numpy/core/setup.py
5597bfb0bace0e850576ec96e20b731025174990,"Remove HAVE_FLOAT_FUNCS, and use function-specific HAVE_ instead.
",numpy/core/src/umathmodule.c.src
5b25ac3de6ea0e12a04eb9382111db0132f1b4dc,"Fix indentation.
",numpy/core/setup.py
9b0c566e727f59f57010fd89d2fb12c98c77a1d3,"Speed up the math configuration using check_funcs_once.
",numpy/core/setup.py
8b6a9ea34c0315e7826466bc714672e70437ae87,"Use check_funcs_once to speed-up configuration on sane platforms.
",numpy/core/setup.py
12becb0c6742ab716e9ed812d1a7effca7a8fe2c,"Add a check_funcs_once function to speed up func checks.
",numpy/distutils/command/config.py
e7ed47c36a1161555a2d3a36fbcfc3e89b9acda0,"Add frexp and ldexp as the functions to lookf for C99 versions.
",numpy/core/setup.py
6da52cd0fe2b2110cd6d7274d29a9bbb58f44551,"Add fmod and modf as mandatory functions.
",numpy/core/setup.py
846f39dddec14a4fbefea5beb36d23d067af7d09,"Tell vim to recognize umathmodule.c.src as a C file.
",numpy/core/src/umathmodule.c.src
dccc81b6a39ec90717f3eb8ae52d1a36742ecfbb,"Use the way formely used by setup to set backward-compatible defines.
",numpy/core/setup.py
adbea45ad9feec3cc5cf963b859b3a66540a6a3f,"Use calling version of check func.
",numpy/core/setup.py
e364db1e8c8ba9cf9acb741592f0ca701abee04b,"Check for all float/long double C99 math funcs explicitely.
",numpy/core/setup.py
bcaa1793226b8dab929d8ccc786c23854f5886e0,"Remove debugging code.
",numpy/testing/noseclasses.py
e818c37e4319fd2f8e798859593b21e2c65a6e1d,"Fix link to example.py.
",doc/HOWTO_DOCUMENT.txt
4e343cc1a96dbfe67642e1d6afc4e5d47ae49874,"Renamed classes to conform to PEP 8.
",numpy/testing/noseclasses.py,numpy/testing/nosetester.py
ba9a02dcb2c3ca635076a75cc9eb0f406e00ceed,"Replaced numpy.testing.decorators.skipknownfailure with knownfailureif, 
which allows flagging tests as known failures rather than skips.
Updated test_umath to use knownfailureif.
",numpy/core/tests/test_umath.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py
1a8809acef23b2480ec9b5eecbd4e4b57d7f14b7,"Ufunc docstrings: show the 'out' arguments in a more standard way
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
2fefcefa18e3eddae19b15a3603cea80ad381b09,"Keep the cruft for compatibility for now.
",numpy/core/setup.py
c64375aec38c0d58ae8aaf8591d497c857cb8867,"Manually generate math_c99.c

I did not find a way to generate math_c99.c from math_c99.src with distutils,
so let's include the generated file for now.
",numpy/core/setup.py,numpy/core/src/math_c99.c
ecde1e137e0a33e96d7b1d4de22f7b9e38def21a,"Do not build math_c99.c, only set it as a dependency.
",numpy/core/setup.py
5de391813da6a4f4f1cf096bad1235a32cb87841,"Check for non-mandatory, basic, double functions.
",numpy/core/setup.py
a6cb50d4916916234ff0e6a4fce046c17a7cb727,"put the setup code to check for match cap in a separate function.
",numpy/core/setup.py
7f5cf316337fc199b86d463f054ba97e1dd3ffed,"Merged revisions 5738-5761 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r5739 | cdavid | 2008-09-01 21:50:46 +0900 (Mon, 01 Sep 2008) | 1 line
  
  Disable memmap test which crashes nose tests on cygwin.
........
  r5740 | cdavid | 2008-09-01 22:07:30 +0900 (Mon, 01 Sep 2008) | 2 lines
  
  Fix unused variable warning in object_arrtype_new.
........
  r5741 | cdavid | 2008-09-02 15:59:43 +0900 (Tue, 02 Sep 2008) | 5 lines
  
  Fix regression test #771 on 64 bits architecture.
  
  The test assumed an item was 4 bytes. Use itemsize instead of harcoding 4 bytes
  per item.
........
  r5742 | jarrod.millman | 2008-09-03 05:13:17 +0900 (Wed, 03 Sep 2008) | 2 lines
  
  pulling out testing docs from distutils docs
........
  r5743 | jarrod.millman | 2008-09-03 05:32:38 +0900 (Wed, 03 Sep 2008) | 2 lines
  
  reindenting prior to release
........
  r5745 | jarrod.millman | 2008-09-03 08:52:37 +0900 (Wed, 03 Sep 2008) | 2 lines
  
  trunk is open for 1.3 development
........
  r5748 | alan.mcintyre | 2008-09-03 14:10:39 +0900 (Wed, 03 Sep 2008) | 3 lines
  
  Fix __init__.py boilerplate example in DISTUTILS.txt, and moved content from 
  SciPy wiki entry on testing guidelines to TESTS.txt.
........
  r5749 | alan.mcintyre | 2008-09-03 15:11:28 +0900 (Wed, 03 Sep 2008) | 3 lines
  
  Updated TESTS.txt to actually be ReST.
  Capitalization nitpickery in DISTUTILS.txt: 'Scipy' -> 'SciPy'
........
  r5750 | alan.mcintyre | 2008-09-03 16:49:59 +0900 (Wed, 03 Sep 2008) | 2 lines
  
  Added section discussing using subclassing to create similar tests.
........
  r5751 | pierregm | 2008-09-04 01:48:52 +0900 (Thu, 04 Sep 2008) | 1 line
  
  docstring update
........
  r5752 | cdavid | 2008-09-04 01:54:37 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Start a nep for warn-free numpy build.
........
  r5753 | cdavid | 2008-09-04 22:31:24 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Update the warnfix nep.
........
  r5754 | cdavid | 2008-09-04 22:36:53 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Start a nep for cleaning the math configuration.
........
  r5755 | cdavid | 2008-09-04 22:49:01 +0900 (Thu, 04 Sep 2008) | 1 line
  
  Update clean math config nep.
........
",doc/DISTUTILS.txt,doc/TESTS.txt,doc/neps/math_config_clean.txt,doc/neps/warnfix.txt,doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,numpy/core/code_generators/generate_umath.py,numpy/core/memmap.py,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_regression.py,numpy/distutils/command/scons.py,numpy/doc/subclassing.py,numpy/lib/_datasource.py,numpy/lib/scimath.py,numpy/lib/tests/test_format.py,numpy/lib/ufunclike.py,numpy/ma/core.py,numpy/testing/nosetester.py,numpy/testing/parametric.py,numpy/version.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/win32build/build.py,tools/win32build/prepare_bootstrap.py
200aab305742b9f2009616afc10e8d66a78a00a9,"Use C99 math compatibility module.

Completely broken for now, needs to update the configuration stage.
",numpy/core/setup.py,numpy/core/src/math_c99.c.src,numpy/core/src/umathmodule.c.src
9776d953e65456a9864ca5ef2832dc8279be4abd,"Add expm1 function in c99 compat module.
",numpy/core/src/math_c99.c.src
3f8685125d866da5313ccd15036f1d3a21934c9c,"move C99 math stuff to a .src file.
",numpy/core/src/{math_c99.c
ffefc0fe652a61c81a68ad497f1dbed875d207e1,"Use code generator for c99_math.c
",numpy/core/src/math_c99.c
243f04bf64c98bd08c4657315c68fec29fa39d95,"Add float and long double functions (C99).
",numpy/core/src/math_c99.c
be84c8d1e4fb8426d23b288838e58826cf086b55,"Add a math_c99 compatibility module.
",numpy/core/src/math_c99.c
cdef62a2f45cc10502b833ba04272851396e14ad,"Update clean math config nep.
",doc/neps/math_config_clean.txt
599e23e819525bd454c9c56bf0336a16ddaa11c0,"Start a nep for cleaning the math configuration.
",doc/neps/math_config_clean.txt
81510b5d8e5710af603eff0517b69f431c0e21e4,"Update the warnfix nep.
",doc/neps/warnfix.txt
c4abfa722490ac88aa9d59316e038cbafe68a8c0,"Start a nep for warn-free numpy build.
",doc/neps/warnfix.txt
72f051291b60d0845db238c1b424472e7846a73e,"docstring update
",numpy/ma/core.py
88adfe5465fa53404b10a537ca12412751a40b31,"Added section discussing using subclassing to create similar tests.
",doc/TESTS.txt
d9872fe38bed99c1ead4b4459c9a588c123a8b28,"Updated TESTS.txt to actually be ReST.
Capitalization nitpickery in DISTUTILS.txt: 'Scipy' -> 'SciPy'
",doc/DISTUTILS.txt,doc/TESTS.txt
15025ccbfeffc4f22edc7548c56020ff1760d512,"Fix __init__.py boilerplate example in DISTUTILS.txt, and moved content from 
SciPy wiki entry on testing guidelines to TESTS.txt.
",doc/DISTUTILS.txt,doc/TESTS.txt
fb6fcca418f4d802a813129f2a5ece3dea2fd3ce,"trunk is open for 1.3 development
",numpy/version.py
d29107a248130bbb68ecac58d6720d716529141c,"reindenting prior to release
",doc/numpybook/comparison/ctypes/filter.py,doc/numpybook/comparison/ctypes/interface.py,doc/numpybook/comparison/pyrex/setup.py,doc/numpybook/comparison/timing.py,doc/numpybook/comparison/weave/filter.py,doc/numpybook/comparison/weave/inline.py,doc/numpybook/runcode.py,numpy/core/code_generators/generate_umath.py,numpy/core/memmap.py,numpy/distutils/command/scons.py,numpy/doc/subclassing.py,numpy/lib/_datasource.py,numpy/lib/scimath.py,numpy/lib/tests/test_format.py,numpy/lib/ufunclike.py,numpy/ma/core.py,numpy/testing/nosetester.py,numpy/testing/parametric.py,tools/osxbuild/build.py,tools/osxbuild/install_and_test.py,tools/win32build/build.py,tools/win32build/prepare_bootstrap.py
a4a7966cf7191c28a7054127fd3717d6c760d556,"pulling out testing docs from distutils docs
",doc/DISTUTILS.txt,doc/TESTS.txt
87d85a0dbd8ec019a233ed921cd7cd2d9e6234c4,"Fix regression test #771 on 64 bits architecture.

The test assumed an item was 4 bytes. Use itemsize instead of harcoding 4 bytes
per item.
",numpy/core/tests/test_regression.py
2312fcb6cdf6eea3c94b6354555bacecb6d413c3,"Fix unused variable warning in object_arrtype_new.
",numpy/core/src/scalartypes.inc.src
8864e082c10858f535710aa0f08b1887c0fa3c46,"Disable memmap test which crashes nose tests on cygwin.
",numpy/lib/tests/test_format.py
eb91adf1193e471ae784c015e6a46329d02d3b45,"Add a configuration test like AC_CHECK_FUNCS_ONCE.
",numpy/distutils/command/config.py
eae7e11f672e1c1d3bd66959005db1ff2c4a2c2c,"moving and adding neps
",doc/neps/datetime.rst,doc/{,doc/{
a33cf5171aa0325e9b036eae8ada70f78a6c3912,"out of date
",doc/README.txt
f4f6f98ca3737995d0b49d455dc0a40a87f8c683,"removing auto-generated epydocs
",doc/html/api-objects.txt,doc/html/crarr.png,doc/html/epydoc.css,doc/html/epydoc.js,doc/html/example-module.html,doc/html/example-pysrc.html,doc/html/frames.html,doc/html/help.html,doc/html/identifier-index.html,doc/html/index.html,doc/html/module-tree.html,doc/html/redirect.html,doc/html/toc-everything.html,doc/html/toc-example-module.html,doc/html/toc.html
d0db38aea3d8e4f15808a87a1051cf2f8bf30601,"Add test for ticket #882 fix.
",numpy/core/tests/test_regression.py
adc0cc2463de413a03e4b038771ea9eef3c09125,"Fix 0-length sequence error in #882.
",numpy/core/src/multiarraymodule.c
ec588c7896b70bf07a1b2ee00977ef4bc177729e,"Fix regression test for #771.
",numpy/core/tests/test_regression.py
d08c157b7fd42c3842ae5ca176f12967d406e3ad,"Fix reshaping 0-sized arrays.

The nocopy logic does not handle 0-sized arrays correctly, so just copy. It is
a not really useful corner case, so doing a copy should not matter much.
",numpy/core/src/multiarraymodule.c
43a2c85455d47a977762d07ea02e1acc55de8ea9,"Add a regression test to show #771 failure.
",numpy/core/tests/test_regression.py
6194dc01c1aae4e3fcb7426c2a873daf850ad199,"Make testing functions work when python is called with the -OO flag.
",numpy/testing/utils.py
78daaef65ba66f067ff3e65ef57970937eb5ba02,"Small cleanup.
",numpy/testing/tests/test_utils.py
e4656b563cd33e50983635c5dcc79a7d4e5aedc5,"Change convolve to raise ValueError on runtime error instead of relying on
assert. The latter fails when run with python -OO.
",numpy/core/numeric.py,numpy/core/tests/test_regression.py
c84e0c0279747c6023207876838106aef2dbbc6d,"Import documentation topic modules when numpy.doc is imported, so that they are easier to use. Add instructions how to view each topic.
",numpy/doc/__init__.py
da4bbe9a303e53a6e508d6b3ba65636f0781cf32,"Add missing '|' for byteorder.
",numpy/core/src/multiarraymodule.c
eda3f09142f08498f479f6353c5c063ecef4aac0,"Apply modified version of Andrew Dalke's patch in #874 to create a quicker-loading numpy.
",numpy/_import_tools.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/lib/_datasource.py,numpy/lib/format.py
6aa2c46129ca2e18aa5e720a9a45f8830f1bfb58,"Point to example
",numpy/doc/subclassing.py
4f7b154e57713884b240fd916b536c08033d0be3,"Document on subclassing
",numpy/doc/subclassing.py
dfab4520b63b75d7e310a33405716518e2a0b8f8,"Simplify (commented out) trunc.
",numpy/core/src/umathmodule.c.src
88c8abb00f49bdabd3b336f0bf0a8efaf6887acd,"Revert r5698, r5699, and r5702 until build problems are fixed.
Fix ticket #878 differently.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src,numpy/lib/ufunclike.py
d4a1e796a44cbfaf087e8ce8feee61ca42447aee,"Bail out of _docmethod earlier if method has no docstring.
",numpy/testing/nosetester.py
d495708ee0be06f1be32c0c578c882bc48d4f5a2,"Make _docmethod work correctly when run with -OO
",numpy/testing/nosetester.py
edc1465f70cf97c06c374b77747d8485fbc8ca24,"* fixing botched previous commit
",numpy/ma/core.py
62e4b61ba175992d1e46dfb2fd991b3704411102,"Updated doc + -OO compatibility
",numpy/ma/core.py,numpy/ma/extras.py
755cc217ee64cf22118493bf02474024c23d45cb,"Small style cleanup. Need work for ticket #893.
",numpy/ma/extras.py
2c7654ad26fb9e374ce062461d3986c31d609a49,"BUG: fix part of ticket #893
",numpy/ma/core.py
21a1087691af6c1745f4b4bc56b4072b5a68bccd,"Added benchmarks directory to lib/setup.py so that numpy.lib benchmarks are 
available in an installed NumPy.
Display system configuration information when benchmarks are run.
",numpy/lib/setup.py,numpy/testing/nosetester.py
971f9fa1216bde41f4b4a3cb40eb1024c7a06433,"Add NPY_FEATURE_VERSION which can be used to mark minor API version
increments.
",numpy/core/include/numpy/ndarrayobject.h
96bcaf6272b1045bd766025163837d3083503f1f,"Use trunc as fix implementation.
",numpy/lib/ufunclike.py
1ea236076f6d03896a3fb72d706264648e51d959,"Fix fix tests.
",numpy/lib/tests/test_ufunclike.py
b2d4064b4dc4373d8a94d7b1b87eab3f75f430f3,"Add trunc test.
",numpy/core/tests/test_ufunc.py
4406a13523c045e6af5f066b2d07981316acef70,"Add a trunc function in umath module.
",numpy/core/code_generators/docstrings.py,numpy/core/code_generators/generate_umath.py,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src
5b38878bd94d755d72441cf1849a433b6971dd6c,"Add pure C trunc function implementations for platform which do not have it.
",numpy/core/src/umathmodule.c.src
654da295908331c585e1e0845929e2146dcc1e9d,"Detect whether trunc is available or not.
",numpy/core/SConscript,numpy/core/setup.py
672fb17e079058aa1e16a0489aee83dd08adb36a,"core    : make sure that masked_equal works with a list as input
mrecords: make sure that the keys of self._optinfo are recognized as valid attributes.
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
eb70884c2653a463ff00e331c8b90618f97b0eb0,"Added deprecation warning for numpy.testing.ParametricTestCase
",numpy/testing/parametric.py
6f33684d500a6be10c47ca201cfe404a863f4abe,"BUG: Logarithmic series needs to exclude p==0 and p==1. When the conversion of the result to C longs gives a negative number (i.e. out of bounds), reject the sample and try again until we do get something in bounds.
",numpy/random/mtrand/distributions.c,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
124149c8426556707a8fde26490a30f402f3e5b2,"Updated memmap sync to memmap flush
",doc/numpybook/numpybook.lyx
95ab3b5901656dc98711a58231969052165e9017,"Note on mmap size on python 2.5 from numpy book
",numpy/core/memmap.py
59034c84a6e9efb605328e37b232f91e3c8c0618,"Fix docstring indentation
",numpy/core/code_generators/docstrings.py
7d8826633219e26bf1f8e2ba07f014c52a1ceb83,"Fix the test and fix the arrtype_new code for scalars a little bit.
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_regression.py
3dcec2dd2de5f41ca913aff8e0c6d9dd56caa952,"Fix debug mode with fortran compiler: the tuple for debug was too big, with an extra None (#539)
",numpy/distutils/fcompiler/__init__.py
a51e8e3a8c11f786706ce64bd46b5e31b99a6ea8,"BUG: Fix to ticket #816: calling object_() Segfaults.
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_regression.py
b4d3f491d7dfefe00f18b7d31434d3156c49028c,"Update credits.
",THANKS.txt
0ce80282ee16edb70d9d738a1eee435a405d798a,"Cleaned up logic and annotation of __del__ method, with test
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
4dbfac0dad8d629b83ce64f2d1aa8cbaee88649c,"Remove doc/reference from setup.
",numpy/setup.py
46facee53a506cd26c00ad12d482a682b0176404,"Move book to docs directory.
",doc/DISTUTILS.txt,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,numpy/doc/reference/__init__.py
d14243ca1fa3373babfd5b699e12dff177f60dba,"Remove directories left over from move.
"
5c86844c34674e3d580ac2cd12ef171e18130b13,"Move documentation outside of source tree.  Remove `doc` import from __init__.
",{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,{numpy/doc,numpy/__init__.py,numpy/doc/__init__.py,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference,numpy/doc/{reference
376d483d31c4c5427510cf3a8c69fc795aef63aa,"Trial fix to ticket #698
",numpy/core/memmap.py,numpy/core/src/scalarmathmodule.c.src
1f58f4d87387b934933f6132ad96f9166808b715,"BUG: reinitialize_command(**kwds) is a setuptools override of the distutils API. Set the attribute directly, instead.
",numpy/distutils/command/build_ext.py
fddd71692cf8cd6db44b10c5d6140dbb32c49093,"BUG: Allow floating point argument n to negative binomial distribution.
",numpy/random/mtrand/distributions.c,numpy/random/mtrand/distributions.h,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
ef5df7a9e4385e7467f24f5f684287f9f0525c5b,"Add missing file.
",numpy/core/src/umath_tests.c.src
5e32ad607e852ee2358352734c63fa6d7995a186,"Remove unused variable.
",numpy/core/numerictypes.py
560b8732b231e34ad0abdf7a0675f690b953433f,"reverting C-API change from r5626
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
26efcc65cd55ab975c91edc5c1466735c99b4807,"Add tests [patch by Wenjie Fu and Hans-Andreas Engel].
",numpy/core/setup.py,numpy/core/tests/test_ufunc.py
a172a7779c099a2c93a7ffe960c7fa07f6cd5c0d,"Add Guide to NumPy to numpy svn.
",numpy/doc/numpybook/Figures/contiguous.eps,numpy/doc/numpybook/Figures/contiguous.fig,numpy/doc/numpybook/Figures/contiguous.pdf,numpy/doc/numpybook/Figures/fig1.eps,numpy/doc/numpybook/Figures/fig1bw.eps,numpy/doc/numpybook/Figures/fig2.eps,numpy/doc/numpybook/Figures/fig2bw.eps,numpy/doc/numpybook/Figures/hierarchy.dia,numpy/doc/numpybook/Figures/hierarchy.eps,numpy/doc/numpybook/Figures/hierarchy.fig,numpy/doc/numpybook/Figures/hierarchy.pdf,numpy/doc/numpybook/Figures/hierarchy.png,numpy/doc/numpybook/Figures/threefundamental.eps,numpy/doc/numpybook/Figures/threefundamental.fig,numpy/doc/numpybook/Figures/threefundamental.png,numpy/doc/numpybook/capi.lyx,numpy/doc/numpybook/comparison/ctypes/code.c,numpy/doc/numpybook/comparison/ctypes/filter.py,numpy/doc/numpybook/comparison/ctypes/interface.py,numpy/doc/numpybook/comparison/ctypes/newfile.dat,numpy/doc/numpybook/comparison/ctypes/timeme,numpy/doc/numpybook/comparison/f2py/add.f,numpy/doc/numpybook/comparison/f2py/add.pyf,numpy/doc/numpybook/comparison/f2py/filter.f,numpy/doc/numpybook/comparison/f2py/filter.pyf,numpy/doc/numpybook/comparison/f2py/filtermodule.c,numpy/doc/numpybook/comparison/f2py/timeme,numpy/doc/numpybook/comparison/pyrex/add.c,numpy/doc/numpybook/comparison/pyrex/add.pyx,numpy/doc/numpybook/comparison/pyrex/c_numpy.pxd,numpy/doc/numpybook/comparison/pyrex/filter.c,numpy/doc/numpybook/comparison/pyrex/filter.pyx,numpy/doc/numpybook/comparison/pyrex/setup.py,numpy/doc/numpybook/comparison/pyrex/timeme,numpy/doc/numpybook/comparison/timing.py,numpy/doc/numpybook/comparison/weave/filter.py,numpy/doc/numpybook/comparison/weave/inline.py,numpy/doc/numpybook/comparison/weave/timeme,numpy/doc/numpybook/graphics/note.eps,numpy/doc/numpybook/graphics/note.fig,numpy/doc/numpybook/graphics/note.png,numpy/doc/numpybook/graphics/tip.eps,numpy/doc/numpybook/graphics/tip.fig,numpy/doc/numpybook/graphics/tip.png,numpy/doc/numpybook/graphics/tip.xfig.fig,numpy/doc/numpybook/graphics/warning.eps,numpy/doc/numpybook/graphics/warning.fig,numpy/doc/numpybook/graphics/warning.png,numpy/doc/numpybook/mybook.layout,numpy/doc/numpybook/numpybook.lyx,numpy/doc/numpybook/runcode.py
8e5324355bcdaddf18febe8bb8fc6085d7ea17e2,"Update `random` docstring.
",numpy/random/info.py
06ea402528b0cdd228a16ce77d2aafff44ede61e,"Run scons command in build_ext instead of build.

setuptools develop run build_ext inplace, not build, so develop command in
setuptools would not call the scons command. Now, the develop mode should work
with numscons.

",numpy/distutils/command/build.py,numpy/distutils/command/build_ext.py
4fd1035c1080134b4be9e26ea7dd7f5eaf3c1c4b,"Add a setupsconsegg.py file to build with scons and setuptools.
",setupsconsegg.py
c2329b05666c60955c42b431ea1ed9562a00c6bc,"Update fenv.h for cygwin: all asm calls should be tagged as volatile.
",numpy/core/include/numpy/fenv/fenv.h
14dd0de454d1a40ed70495c4ed3ead1962c8cd37,"Add a note on scimath.sqrt for the definition of square root as the principal square root.
",numpy/lib/scimath.py
3ee040052bd55f4ce46bc25b1dca5cd96e7cee9a,"Add note telling users to add new functions to the end of the list.
",numpy/core/code_generators/ufunc_api_order.txt
dc94e7c059fd68b5febe2899a54f5c654d912c6d,"Move PyUFunc_FromFuncAndDataAndSignature to bottom of ufunc_api_order.txt
[for Hans-Andreas Engel].
",numpy/core/code_generators/ufunc_api_order.txt
902dc40abae7d870ae595f1b0f264edd32dd39aa,"Move generalised ufunc functionality to the gen_ufuncs branch.
",THANKS.txt,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/ufuncobject.c
65839d74bd0e9402763adb7976cbe86d7beeb0fb,"Re-factor code to remove dependency of numpy.core on numpy.lib by moving issubclass_, issubsctype, and issubdtype to numpy.core.numerictypes
",numpy/core/defmatrix.py,numpy/core/numerictypes.py,numpy/lib/utils.py
73d91a6b903497a7ad38aab97f48e51f21a1e5df,"Split generated docstring literals for compilers which cannot handle long strings.z
",numpy/core/code_generators/generate_umath.py
1ab7e8f60f39c70ed0caf13b3945a6c65d213276,"Fix warnings in ufunc code [patch by Wenjie Fu].
",numpy/core/src/ufuncobject.c
988642ed68f15590ddbb330819cf20f2adc1e878,"Whitespace cleanup.  Move definition of variable to beginning of function.
",numpy/core/src/ufuncobject.c
a463980b084520f550985e2df91a408e6ace959d,"Give credit for the generalised ufunc infrastructure.
",THANKS.txt
b09124ecc8899293b672883cf18ceb6b9fa770a7,"Move declaration to appease some compilers [patch by Hans-Andreas Engel].
",numpy/core/src/ufuncobject.c
33194908102fcc8268d54fb4834cb24260d31754,"Do not setup any compiler in scons command if noscons scripts are used.
",numpy/distutils/command/scons.py
035e18d3ec90c567219ed4675dae77ddc761a0db,"Bump NPY_VERSION for ufunc patch.
",numpy/core/include/numpy/ndarrayobject.h
99e91276897b8194df8765f2a393874f3677016e,"Framework for generalised ufuncs [patch by Wenjie Fu and Hans-Andreas Engel].
",numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/ufuncobject.c
c30bb0a07c2b17f36fdaabe906859dd51f9cb0f6,"Add install_and_test script for osxbuild.  Update README.
",tools/osxbuild/README.txt,tools/osxbuild/install_and_test.py
dcb2e6c797532d8b122a6f010aefd861fbccb2e1,"Remove C99 test cases; they are not guaranteed to succeed on all plaftorms, so it's better to reintroduce them only after the inf/nan handling has been addressed.
",numpy/core/tests/test_umath.py
46aaaa592657a32f4dd220693301062dbff665df,"Do not special-case for mingw32: compiler detection takes care of that now.
",numpy/distutils/command/scons.py
11a69c23a29916f0d0721108e34d758e72d56b41,"Fix typo in build script for win32.
",tools/win32build/build.py
8b54222dbd5890df1480d769a51f1f8541f9a06f,"Unique1d will now return unique as well as reverse indices.  Fix order of
returns [patch by Robert Cimrman].
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
086afd5bfd7b8617e721a6467ce29b6acc41c44c,"Disable memmap test on windows because it crashes the testsuite. This has to be fixed before a rc of numpy 1.2.0, though (see#827).
",numpy/lib/tests/test_format.py
83d7c02cad2ac076937ca868f901808c7fa1243d,"Add Roberto de Almeida's Arrayterator.
",THANKS.txt,numpy/lib/__init__.py,numpy/lib/arrayterator.py,numpy/lib/tests/test_arrayterator.py
c05d81d020f93edfc4fe1295c40b69174f62be4f,"BUG: F distributions need the appropriate scale factor.
",numpy/random/mtrand/distributions.c
31b18be11e48894738aa58620ac2d2307c8b4932,"* masked_where : force a consistency check on the shapes of the inputs
",numpy/ma/core.py,numpy/ma/tests/test_core.py
96a6fcc6218e2487662706ad646194c8c22b8cc6,"Correctly handle Fortran-contiguous arrays in SWIG wrappers.
",numpy/doc/swig/numpy.i,numpy/doc/swig/test/Fortran.cxx,numpy/doc/swig/test/Fortran.h,numpy/doc/swig/test/Fortran.i,numpy/doc/swig/test/Makefile,numpy/doc/swig/test/setup.py,numpy/doc/swig/test/testArray.py,numpy/doc/swig/test/testFortran.py,numpy/doc/swig/test/testMatrix.py,numpy/doc/swig/test/testTensor.py,numpy/doc/swig/test/testVector.py
04a0ee16539077c6693f4fb36e388a3aa77e9ac2,"More consistent nan-operations.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
73498929287e76f82fa398b29b55e14e5ea015b0,"Tweak error msg when python.h not compilable with scons.
",numpy/core/SConscript
363d209305e7382c4ae36f71110b00c6fd66d8bc,"Depends on numscons >= 0.9.1.
",numpy/distutils/command/scons.py
7bb36be47c5a2e1b1d51a556eec99bf741c2ff75,"Fix ticket #674.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
75c15c8c697eba656e333612821d44cdd46134fe,"*Full recompile needed*:  changed the name of hasobject structure member to flags in the PyArray_Descr structure and increased it's size to int
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
fd932a4a0aa9e3c26f3fa968b06b9332dfc229b8,"Give better error message when testing python.h fails.
",numpy/core/SConscript
4db04374b605c4b7a11ff90afc48d169bcefacb9,"Improve error message when scons command fails.
",numpy/distutils/command/scons.py
3f45817cb3e1b222670793673cf3a5b85ded3190,"breaking API for median
",numpy/lib/function_base.py
70ed0f238156680efba9b4028810f3aed486357b,"ran reindent
",numpy/__init__.py,numpy/core/code_generators/docstrings.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/scons_support.py,numpy/core/setup.py,numpy/core/setupscons.py,numpy/core/tests/test_defchararray.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/distutils/command/scons.py,numpy/distutils/misc_util.py,numpy/lib/__init__.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_ufunclike.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/testutils.py,numpy/setupscons.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/noseclasses.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/parametric.py,numpy/testing/utils.py
0da812e06828be6749b1840b48c4f100dc3dfd68,"Remove piece-by-piece docstring assembly; the full texts were inserted in the docstrings in r5610
",numpy/lib/financial.py
0e475a956ea1a62ac6ffdcfc55e00852b00c253f,"Fix bad string escaping in mtrand.pyx docstrings (+ regenerate mtrand.c)
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
0bdef198361c01a820c69f34580b2da3e3eebbfb,"* core : minor doc formatting
* test_extras: switched to assert_almost_equal in TestCov and TestCorrcoef
",numpy/ma/core.py,numpy/ma/tests/test_extras.py
469c4d3d5417f5693ad8e326d7069cdec7c92663,"core
* use self.__name__ for private method instances
extras
* fixed corrcoef
* introduced diagflat
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/tests/test_extras.py
ded1bf725d022e9e2ac5df3d6785a14e702f6fec,"Fix ticket #877 along with other bugs not yet reported for data-types with titles.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
db148964e45b01604e6df0a8e0f3c35f2fc951c6,"* MaskedArray.__new__: prevents self._optinfo to be overwritten (it's defined w/ the call to .view)
",numpy/ma/core.py
64423fdb18e8edec4d9a3bf24a305d4a3dbaa336,"Always define __STDC_FORMAT_MACROS for C++ support of PRIdPTR.
",numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py
127d6ed3644fa236cefe1fbf5bffa38ed1993211,"* added cov and corrcoef to ma.extras for compatibility
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
7f3e634a2fcca7bd436d5ba0a1e7ed9ffccd8ea9,"added comment in histogram warning.
",numpy/lib/function_base.py
df9e25e2845f8a280b8808a33b1429ac6a4841f5,"Follow-up on changes to histogram semantics.
`new` is now set to None by default, which triggers the new behaviour and prints a warning.
",numpy/core/tests/test_regression.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
6647bf7eaeb915e2d09db8b5c7584ee286962d3b,"Merge from documentation editor.
",numpy/__init__.py,numpy/add_newdocs.py,numpy/core/arrayprint.py,numpy/core/code_generators/docstrings.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py,numpy/ctypeslib.py,numpy/doc/reference/basics.py,numpy/doc/reference/broadcasting.py,numpy/doc/reference/creation.py,numpy/doc/reference/glossary.py,numpy/doc/reference/indexing.py,numpy/doc/reference/internals.py,numpy/doc/reference/structured_arrays.py,numpy/doc/reference/ufuncs.py,numpy/doc/reference/zen.py,numpy/dual.py,numpy/fft/__init__.py,numpy/fft/fftpack.py,numpy/lib/_datasource.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/format.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/machar.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/stride_tricks.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/linalg.py,numpy/ma/__init__.py,numpy/ma/extras.py,numpy/random/__init__.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
f8f44a0595da3ae8be9458ead1366bcc72cd3390,"Fix NPY_INTP_FMT when C99 format available (typo + forgot to include inttypes.h),
",numpy/core/include/numpy/ndarrayobject.h
1da04e18896748c262d864ce83ca226c06e891b2,"Use C99 print formatting if available for NPY_INTP.
",numpy/core/SConscript,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setup.py
af071cfdea7eddf29ae08fba2bd5775fb594d8df,"* extras: fixed the definition of median
",numpy/ma/extras.py
84dbd03a91eac58006fc5d4bd9d10f23c6a78ca0,"core
MaskedArray.__new__: prevents data.mask to change shape and force a copy of _data.mask
",numpy/ma/core.py,numpy/ma/tests/test_core.py
ce5fc0af6285ca4ed1478c42c48fd1f6a7909f83,"Add test for #844 (inner product pb with atlas).
",numpy/core/tests/test_blasdot.py
c3de90a4f53d23513f4295646610fe204b2cfc47,"core:
* renamed _basedict to _optinfo
* prevented the back propagation of _optinfo in _update_from : the __dict__ is copied only if the underlying object is not a MaskedArray
* fixed getmaskarray for flexible dtype
* fixed __setitem__ when filling fields (the mask might still be nomask)
* _arraymethod now stores the name of the method in both self._name and self.__name__
",numpy/ma/core.py,numpy/ma/tests/test_core.py
9156bdce373ed8f7d6e9813f5261bc6b2f473309,"Fix method list sentinel in sortmodule.
",numpy/core/src/_sortmodule.c.src
7aa43a63d046f406f34d87865d2f3f7eb7b7cecf,"Fix buggy sentinel for blasdot docstring.
",numpy/core/blasdot/_dotblas.c
be0d287b2b23b89e5bf121558fc5ee4ea97710c2,"Fix generated file location for inclusion in sdist target when building with scons.
",numpy/core/setupscons.py
f20624ae964aa6862b901de2b40d31e9b51cc4d5,"Add function to get per package build directory when building with scons in
distutils.
",numpy/distutils/command/scons.py
18fb7c2628b0ee88128048ec9c71b55d3be1c6ad,"Revert revision, 5596 commited by error.
",numpy/core/include/numpy/ndarrayobject.h
4a0807f9e770fcc139601f6646ef71af90dc90d1,"Use inttypes format if available for NPY_INTP.
",numpy/core/include/numpy/ndarrayobject.h
62dbc75d31c0fddc2da71f8a1f769ea8b5fac9a1,"Handle MSI builds + python 2.3 for win32 build script.
",tools/win32build/build.py
331cf00283cada1637511bde73d6ce640e9dbc46,"BUG: reverting mistaken checking.
",numpy/core/tests/test_umath.py
4957e5ed4ef51beb8687e64c4f9c5315602d86aa,"BUG: Fix email addresses.
",numpy/core/tests/test_umath.py,setup.py
12cfaa0bf758a78d854e917f357ac2913d4e73c6,"Handle python version in prepare_bootstrap script.
",tools/win32build/doall.py
1006c2275077597ef9c510ccf8e0bee44ed93d71,"Add doc to osxbuild script.
",tools/osxbuild/build.py
3a873053bea771ae172d333ccac35b6ae0247d9c,"Defer tempfile import to improve startup time.
",numpy/lib/_datasource.py
2db8628fbbe4f4d40c54a56d01a9f6ceb873861b,"Cosmetic changes.
",numpy/setupscons.py
3f025b5400c0855472a772487de8930bac9b5eef,"Handle inplace generation of __config__.
",numpy/setupscons.py
23e03f2d320c1303a8fb199bc1f090a5b372f929,"Pass current package name and scons command instance to post hook.
",numpy/distutils/command/scons.py
343347adc5343b6a817520cb29036ba174a4db96,"Change API for pre/post hooks: they should be able to take arbitrary arguments.
",numpy/core/setupscons.py,numpy/distutils/misc_util.py
76a7161aa8bc7755059b250313778602aa473b6f,"Remove add_configres function which did nothing...
",numpy/core/setupscons.py,numpy/distutils/misc_util.py,numpy/linalg/setupscons.py
89bd486fe36015751b000ff27ec92ee6cdead116,"Make it possible to execute post/pre hooks in scons command even when no scons script is used.
",numpy/distutils/command/scons.py,numpy/distutils/misc_util.py
33e34091563f318ef373a2e48a05432f38081cef,"Handle inplace build option for numscons.
",numpy/distutils/command/scons.py
04ad372958ca795488f91f1e47f64b223dc78961,"Remove test.sh script which is a leftover from scons branch.
",test.sh
0d04757c1e9255e920395106d9c176af45ff0b4d,"Fix string type comparisons.
",numpy/lib/io.py
a80dbfe6e36a1c4cc455c3ce9b6e563588c7524c,"Delay import from inspect to reduce startup time.
",numpy/testing/utils.py
b78d3be51653f6241214f6354303bd261af1b426,"Delay import of shlex to reduce startup time.
",numpy/testing/numpytest.py
4b2252ca5153410475cf5a7a5ea4b4c07d428d41,"Delay import of difflib to reduce startup time.
",numpy/testing/utils.py
b4efbf823b373faabf115449c6dfe4eebd5bd367,"Removed unused import of glob.
",numpy/testing/numpytest.py
10ce27cef47b67163137ebeb8a5ca5e99bde39f0,"More explicit message wrt log level.
",numpy/distutils/command/scons.py
39c75c3abae67ad94d670b2056eef700a02fe5f8,"Add log-level option to scons command.
",numpy/distutils/command/scons.py
e303070d8c2fc24612e08c71b007896d94658d28,"Do not use numscons rsplit (python >= 2.4 required for numpy >= 1.2.)
",numpy/core/scons_support.py
f8b801d15d60540bfde19e0d22ec85a624699611,"Require 0.9.0 for numscons.
",numpy/distutils/command/scons.py
4cd620b72fe709ae7092a698a1b22cb9c12de04c,"BUG: missing import.
",numpy/ma/extras.py
9d932d5e212003e1e0e6e30be2b6358c9c0e0759,"Handle VS 2008 in msvc_runtime_library.
",numpy/core/SConscript,numpy/distutils/misc_util.py
98a17e83445d98261dea93752834358b668adc06,"* core : prevent ._basedict to be incorrectly propagated
",numpy/ma/core.py,numpy/ma/tests/test_core.py
e3f63ef77b066b3f2636a78a10450dac4f4d478d,"Set build scripts to unix ff.
",tools/win32build/README.txt,tools/win32build/build.py,tools/win32build/doall.py
20efcc4c8ec4a0789805b2467ad5a108b37c9468,"Remove unused nsis scripts.
",tools/win32build/nsis_scripts/numpy-superinstaller-2.4.nsi,tools/win32build/nsis_scripts/numpy-superinstaller-2.5.nsi
0a02410ed568b04505acaec9602e9dafd8b2b57b,"prepare_bootstrap script now handles pyver correctly, and can be set from command line.
",tools/win32build/prepare_bootstrap.py
d42999f35c6dcafcc213bf408e09fa4a6fc12925,"Update readme for win32build tools.
",tools/win32build/README.txt
6dde6a14904e2d4b82d53b80869eff13e070706d,"Fix path issue in nsis script.
",tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
d23e5e4cde838c1aa46b0e085955cdb959e6755a,"Add top script to generate binaries from scratch.
",tools/win32build/doall.py
1b4980a842976a037141ff94c2a3accff875a0c9,"Bootstrap script now works from scratch.
",tools/win32build/prepare_bootstrap.py
5e47de270b8b7598b277d918d24500f49f8cb18c,"Set LZMA solid compressor.
",tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in
f1ff5f93a3b5a78ef87543c5b900c0e4f23b229e,"Build all ARCHS if arch arg not given to build script.
",tools/win32build/build.py
619ae0cf87612cfdcb17eec00a44798c23b2fe49,"Add code-generator files in MANIFEST because distutils does not pick them up.
",MANIFEST.in
ae80bef6aaf80d54f8f2d37f3327fbb6009b1ba3,"Fixing MANIFEST.in on win32.
",MANIFEST.in
8a946f60dfb7b3936c3aea98dfcfcdf3c986a702,"Uncomment bootstrap tasks.
",tools/win32build/prepare_bootstrap.py
c90b955c14395408069b5e382b307c18bb98c249,"Add nsis template, and bootstrap script, to bootstrap win32 binary build.
",tools/win32build/nsis_scripts/numpy-superinstaller.nsi.in,tools/win32build/prepare_bootstrap.py
bd8c4ce81340901cd7322f84cd1911581ce910dd,"Use OptionParser for win32 build script.
",tools/win32build/build.py
e1bc01faf6ffba5dab7587a97f967ca1bdee9fb2,"Add cpu_caps nsis plugin sources (to detect SSE in nsis scripts).
",tools/win32build/cpucaps/SConstruct,tools/win32build/cpucaps/cpucaps_main.c,tools/win32build/cpucaps/cpucaps_main.h
1fddb21cdd90e458c84d26d93e01ca12b2e5e4b7,"Add script for building osx installer.
",tools/osxbuild/README.txt,tools/osxbuild/build.py,tools/osxbuild/docs/README.txt
db05edada3b9ffa8202e6c8ab12e173bf103c403,"Regenerated mtrand.c after standardizing NumPy import in mtrand.pyx.
",numpy/random/mtrand/mtrand.c
8936ecc8c46b92f4dbc749e294eb5ab88ab0d857,"Standardize NumPy import as ""import numpy as np"".
",numpy/oldnumeric/random_array.py,numpy/random/mtrand/mtrand.pyx
e6f61c9445303c4ffa30e32b8efe68047ca2ef61,"Added tests to improve coverage.
Converted tests from doctests to unit tests.
",numpy/lib/tests/test_financial.py
d4092257b490db4e24a8efcc03a721ab3bc7e07b,"Start working on a INSTALL.txt document for building/installing numpy.
",INSTALL.txt
7ad402274d209c3d13b02843d66548ff726acd53,"Add some more info for installing numpy.
",README.txt
252e1289d6fdb13ac02b88953881e694500e87ee,"Standardized NumPy import as ""import numpy as np"".
Moved unique1d benchmarking code to new benchmarks directory.
",numpy/lib/arraysetops.py,numpy/lib/benchmarks/bench_arraysetops.py
1ab04d3ed8d4597922055396a9ba17f00bfc86ad,"Fix doctest command continuation line.
",numpy/lib/io.py
0175369fb56e29d891a0d8f9517f9149ed4e602f,"Removed unused private function _castCopyAndTranspose.
",numpy/linalg/linalg.py
681aa536342db1332a5af9b632495ddc883ecba9,"Standardize NumPy import as ""import numpy as np"".
",numpy/ma/tests/test_subclassing.py,numpy/testing/tests/test_utils.py
6dd88dc3b6c94d54585f639c533c00bf0928e13a,"* force the domain to the shape of the other element in DomainedBinaryOperation (bugfix 857)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
e9ae63eda3f9ac5076ba2d216c96e6e137270009,"Skip one more possibly failing C99 test
",numpy/core/tests/test_umath.py
856861c4e59c945aac844dd172fa9612623e858b,"Added tests to improve coverage of numpy.lib.
",numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py
b5e26c40f2766890b600bd8b68eb01b4ec9f902b,"Clean up loadtxt. Fix Python 2.3 compatibility.
",numpy/lib/io.py
a2dcde587eb07398d0a30189a898c614ea1ba1aa,"Apply Stefan's patch for Ryan's loadtext fix.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
e41b0e3b2222095c2eb75952602fc8b779798cbc,"Committed patch from Ryan May. It fixes error in loadtxt occurring when usecols is not None and dtypes are given.
I added the test suggested by Ryan.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
75779e8651774e1f86fd6656d851d22411e2224b,"core:
* suppressed the debugging info...
",numpy/ma/core.py
923ef804b6ab66033f90b2cba0b410032798a418,"core:
* Make sure that the .reshape method accepts a new shape as a list (and not as a tuple only)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
70e9b4906838c7e8a44d4e58c57517df68671555,"core:
* fixed the reshape function/method to accept an 'order' optional parameter
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py
b8ecdad75b831eec62fb02e76d80a45f7ec9aa58,"Removed unused private function _asarray1d.
",numpy/lib/function_base.py
8e86b69357c931b9dc0544d0210f7b2a0720ef11,"Added numpy.testing.verbose, to allow tests to vary output accordingly.
Added numpy.testing.print_assert_equal, to allow removing the multiple 
identical implementations of this function in SciPy tests.
Display version info for NumPy, Python, and nose (and SciPy when running SciPy 
tests), in a manner similar to the original test framework.
",numpy/testing/nosetester.py,numpy/testing/utils.py
77effddb80562fa5e2de16ac4fb5470477bda652,"Added tests to improve coverage of numpy.core.
Removed unused methods from Vec class in test_numeric.py.
Renamed test in test_regression so it would be seen by nose.
Removed commented test_vector_elements test in test_defmatrix.py (same 
tems are now tested in test_matrix_element).
",numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py
bd2f3c0ddad61d78eda6257dbf1cbeb608aa1c82,"Fix broken regression test.
",numpy/core/tests/test_regression.py
2ba50c217e3cae6b5470a28601a27ba1cbb0ab84,"Make regression test work for reverted NaN fix.
",numpy/core/tests/test_regression.py
d045a20c3232ffc0550d3f62a46bcd05f7b9761b,"Revert r5470.
",numpy/core/src/umathmodule.c.src
2de0cbb31f82437601eca2df23f53525e5fb204d,"Fix _SIGN macros for MSVC compilers. Test.
",numpy/core/src/umathmodule.c.src
20a3dc5b74166d985b75471f0ea55d49575445dd,"Fix ticket #794.
",numpy/core/src/umathmodule.c.src,numpy/core/tests/test_regression.py
5808ab5ef5cc0d16c74dc14d7eefa22386f16e81,"Add a pydoc import in lookfor; missed in the import refactoring.
",numpy/lib/utils.py
3db00b171882d289158041d630dd4b0aaf314a2d,"Fix errors in C99 tests. Skip tests failing on some platforms.
",numpy/core/tests/test_umath.py
7a155531d0631f19b2eb6df494f0d57e2630bbd2,"Undo test of SPARC alignment.
",numpy/ma/tests/test_mrecords.py
1c82d097e226f638c2464dae7730cbab596171b3,"Testing SPARC alignment.
",numpy/ma/tests/test_mrecords.py
da3677060f54b6ac39db93728b4e9948adeeae6c,"BUG: Allow longs as well as ints to satisfy Win64.
",numpy/lib/format.py
ecf30dc2d1e500c5654ca8624aad15de84c01b6c,"Fix some errors in C99 tests. Skip tests failing on Sparc64
",numpy/core/tests/test_umath.py
ca75c7e00e9d58ed3642d4140be15349d53c9e76,"Add tests for complex functions: test against Python's cmath, check the branch cuts and C99 compliance at inf, nan special points.
",numpy/core/tests/test_umath.py
a7c080edd594f8e84b9edd555c2f2d981a8b3c31,"Fix arccosh branch cut. Remove one unnecessary operation from nc_asinh.
",numpy/core/src/umathmodule.c.src
d5300c2b68cbdb4dabe73b50a0f650b80d8d8d23,"Comment out extension option since it is not used at present.
",numpy/testing/noseclasses.py
df1fc32a47bf8450936cb436e1840132921ee90b,"Instead of importing nose plugins, use the existing list of classes that 
nose.plugins.builtins imports.
If --with-doctest is included in extra_argv, remove it and use the NumPy doctester 
instead.
",numpy/testing/nosetester.py
d7611a5c92dbb2be1c5edab7c3c7a8c2e9e6fa57,"Fix other reference count leak pointed out in #848 due to missing DECREF for typecode.
",numpy/core/src/scalartypes.inc.src
c003f55e3068e99b174a3407aab0499662cdbfb2,"Generate headers in the right place for inplace builds.
",numpy/core/setup.py,numpy/distutils/misc_util.py,numpy/random/setup.py
f3bef65f681d7a845a699071a0b11f3e5d68fea5,"Comment cleanup.
Fixed __import__ calls for Python 2.4 (__import__ doesn't take keyword args in 2.4).
",numpy/testing/noseclasses.py,numpy/testing/nosetester.py
3e4f726759a8fef08887c8152c051e04995f3a42,"Use a subclass of the nose doctest plugin instead of monkeypatching the builtin plugin.
Removed decorators for NoseTester methods.
",numpy/testing/noseclasses.py,numpy/testing/nosetester.py
f1104f880af4443df3a412ffdbbd151d03c1e932,"* added .torecords(), to convert a masked array to a flexible array with fields '_data' and '_mask'
",numpy/ma/core.py,numpy/ma/tests/test_core.py
ab911fc322d50ce9928b211954857cc56e7a1595,"* fixed a pb with printing flexible ndarrays with subdtypes
",numpy/ma/core.py
7a47bfa5a562f9bcd2baecba451bcd334bfe30ed,"Add numpy.doc.jargon entry.
",numpy/doc/reference/jargon.py
4bc3f39680039a89832eba8bcffc5a2b30176da5,"FOR BUILDBOT: More unsavory workarounds for Sparc64. Change back when we've fixed the actual bug.
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
16146b44c79631d7ab82652690b0b476d5c57bdb,"FOR BUILDBOT: Change the test to make sure the double is aligned to a reasonable boundary. It does no harm to the test, but it shouldn't be necessary. However, I need the buildbots to test it out on the Sparc64 platform for me.
",numpy/ma/tests/test_core.py
e2df0c7f93eab474669d8f690f9de7abecb6fa0e,"testutils
* improved check on object/record arrays

core 
* fixed filled for flexible types
* fixed the definition of the mask for flexible types

mrecords:
* fixed a bug w/ titles/formats in __new__ and __array_finalize__
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py
0a9ae133c4b626d3606309a4e3f7c1552bfcf707,"Remove blank line.
",numpy/core/blasdot/_dotblas.c
f90a9240436e179acc6b4428cc4cff17a06fd6ac,"Fix ticket #849. Thanks to Michael Abbott.
The added check for NULL descr isn't really needed here because the typenums
used don't allow such returns. But knowing that requires knowledge of
PyArray_DescrFromType internals and not checking makes the code fragile.
",numpy/core/blasdot/_dotblas.c
75a3b814dc8dc1df038b3afb9b9bf1b19a7d43da,"Coding style cleanups.
",numpy/core/blasdot/_dotblas.c
b788f2518a9b7ed30f8886a31d6a759ba9bba303,"Fix ticket #837. Avoid infinite loop in fromfile/fromstring by ensuring that *_skip_separator always consumes at least one character or fails.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
f48abc5a5b88e22dbbad44b1cb130543231ffa13,"Fix ticket #850. Thanks to Michael Abbott for the patch.
",numpy/core/src/arrayobject.c
a98f7c8be521ea58a3c9c44729bcd162f01a7f0f,"Coding style cleanup. Replace hard tabs with spaces.
",numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
120252edb36a6dba5f824d73a2ed2624d1cde874,"Deprecate PyArray_As2D.
",numpy/core/src/multiarraymodule.c
e10e7d9ab98f2ad3e8ffc6f63583feb8fbef882a,"Added the measure function to utils.py in support of SciPy tests.
",numpy/testing/utils.py
dc850ae31bf4937eace3f6b62a615a78bac2d73d,"Added isfunction and decorate_methods in support of SciPy switching to 
use numpy.testing.
",numpy/testing/utils.py
9ad992f74222d99ed2f66c5e3e9a2a90cdc31cd2,"Add place-holder for doc.glossary.
",numpy/doc/reference/glossary.py
b6b63456ea8c61351c9bf1415c797d95c87e46f3,"Reset doctest.master on each test run to avoid messages about ""'__main__' in both 
testers"" when test() is run multiple times.
",numpy/testing/nosetester.py
8c69b7caef4d73725e53933934efc2bba12d7491,"Make deprecation messages more informative.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
775b05acfc2da1cea3ad1997d81b86c6f2686c5d,"Make use of assert_raises from numpy.testing, and added run_module_suite to support 
running test module stand-alone.
",numpy/lib/tests/test_stride_tricks.py
e227d01fdd75f2b8d10cefe057ca7847063f769d,"Added tests for eigenvalue/vector functions for Hermitian matrices..
",numpy/linalg/tests/test_linalg.py
39e305137d5d3df233d87b3fb903fcdc81750d65,"Move DEPRECATE macro to ndarrayobject.h.
Deprecate PyArray_As1D.
Remove deprecated functions from fftpack_listmodule.c.
There may need to be further fixes on 64 bit platforms, we will see.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/fft/fftpack_litemodule.c
c62bdcbb4bfbed32bc3df144ece9cce1dc11e775,"Indentation and coding style cleanups.
",numpy/fft/fftpack_litemodule.c
13b05eea92552d0d65f49033af5267b84049b2ee,"Replaced utils.raises implementation with the nose function.
Added utils.assert_raises (uses the function from nose).
Wrapped text for test() deprecation warning.
",numpy/testing/nosetester.py,numpy/testing/utils.py
382db3569b1cccee5b4e813919dced51d8352a97,"Added tests to improve coverage.
Renamed TestPiecewise methods so that they will be picked up by nose.
",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_type_check.py
da2a99485f401a0b09b6fe47ec1f23190d0259bf,"Fix doctests to run properly under new execution context.
",numpy/lib/index_tricks.py
5f1b347d807b713292a5771b5bf086265848faf0,"Add tests to improve coverage.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py
207e37a2eb9f2004c390c7b41cbdea4cc79afe59,"Fix Deprecation warnings for python versions < 2.5.x
",numpy/core/src/arrayobject.c
303069205c70a1b9d9fddbeec25d839244588d32,"Deprecate PyArray_FromDims and PyArray_FromDimsAndDataAndDescr.
There will be warnings issued in np.test() until fftpack is fixed.
",numpy/core/src/arrayobject.c
1dc6cce5b9cbd236777acc73fd9c73615b1d0ba2,"Replace snprintf with PyOS_snprintf.
There remain four occurrences of sprintf that should be replaced.
",numpy/core/src/arrayobject.c,numpy/core/src/ufuncobject.c
000bdedae2c5173360309fda4c4b9e6bd6f97eeb,"Bit of whitespace removal.
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_print.py
6748d60d650d0b2383c62ae076aec799c0f8fda3,"Add basic tests of number str() formatting.
",numpy/core/tests/test_print.py
072d2e0f561612082097a1a7b880aa9ef01fed74,"Make printing of complex numbers match Python.
",numpy/core/src/scalartypes.inc.src
d7717dde37f20925b1ee4f1494c0c4ccea385d59,"Make buffers local for reentrancy.
",numpy/core/src/scalartypes.inc.src
b81c073daf1f5d45441b30b6a792a8348f6a572f,"Small cleanups.
",numpy/core/src/scalartypes.inc.src
6f7d69ae4718de29b37f54abcfed44015ae57d97,"Coding style cleanups.
Check return of PyArray_DescrNew for NULL (possible memory error).
",numpy/core/src/arraytypes.inc.src
62575555261f4e097c314a2d4a3d1d6d312ef155,"Coding style cleanups.
",numpy/core/src/ufuncobject.c
72172da20bc6997f237788bcc6bc4f98730634e0,"Coding style cleanups
",numpy/core/src/multiarraymodule.c
2e578e7218e45692d435890c4b0f52da4ef3f2cf,"Coding style cleanups.
",numpy/core/src/arrayobject.c
f2abd6377ba69688713b7c6aef58005b31242f5a,"Sort numpy.doc names.
",numpy/doc/reference/__init__.py
9a27253a10f8c1f9775b688eb65e41d227fa84e4,"Add stubs for reference documentation.
",numpy/doc/reference/basics.py,numpy/doc/reference/creation.py,numpy/doc/reference/howtofind.py,numpy/doc/reference/internals.py,numpy/doc/reference/io.py,numpy/doc/reference/methods_vs_functions.py,numpy/doc/reference/misc.py,numpy/doc/reference/performance.py,numpy/doc/reference/structured_arrays.py,numpy/doc/reference/ufuncs.py,numpy/doc/reference/zen.py
33ffa7b85e97fd289785e4bd6345e69fb87bdd16,"Comment out failing portions of  __mul__ and __rmul__ until they are fixed in 
chararray.
",numpy/core/tests/test_defchararray.py
86409f0de0c65f8e44602ad8dcbae9a8044b0513,"Improve chararray __mul__/__rmul__ test so it should fail on 64-bit machines.
",numpy/core/tests/test_defchararray.py
dcf96aa6436ccd4fdd6acff24cc3216d064ff5be,"Added test module for chararray.
",numpy/core/tests/test_defchararray.py
7895d91a8328e9b3f8bfb7bba1fb7f8302adde51,"Make doctests pass under new execution context.
",numpy/lib/index_tricks.py,numpy/lib/scimath.py
a38f52777b28f91f73022b49a7d7000592dfd092,"Removed matrix._get_truendim (unused).
",numpy/core/defmatrix.py
3f1e1be7404a3016f664d4aef3545b099b2068c0,"Test coverage improvements.
",numpy/core/tests/test_defmatrix.py
8b00f36488948c9ec7199e3c201ef02bf3b5002d,"Updated doctest for NoseTester to reflect actual usage, and added 
__file__ = '__main__' to doctest context to allow the updated test to 
run correctly.
Added setupscons.py and setup.py to the list of files to ignore when 
looking for doctests.
Cleaned up docstrings for readability.

",numpy/testing/nosetester.py
59e1ee936c730b19a4c4016172658695fb197ada,"Use TestCase instead of NumpyTestCase.
",numpy/lib/tests/test_function_base.py
88b409fca114c709615b9df443bfbf58527000b4,"Fix example docstring.
",numpy/doc/EXAMPLE_DOCSTRING.txt
c114dd8293e5ab72b57f3810df476b6528966d4f,"Add numpy.doc topical documentation framework.
",numpy/__init__.py,numpy/doc/__init__.py,numpy/doc/reference/__init__.py,numpy/doc/reference/broadcasting.py,numpy/doc/reference/indexing.py,numpy/setup.py
89bdcf9a990f5aa44b9830ae366f3c02f7b5bd7a,"Fix distutils issue on AIX with aix compilers.
",numpy/distutils/ccompiler.py
0dffd02f017944c9ccfbdbe667a21fe27473a387,"Simplify a bit more scons scripts.
",numpy/fft/SConscript,numpy/lib/SConscript,numpy/linalg/SConscript,numpy/numarray/SConscript,numpy/random/SConscript
06e999f3a8b458684b4cd9677417f799caf02585,"Bump min version for numscons to 0.8.2.
",numpy/distutils/command/scons.py
15e2c1af93e75907a33b7361fa55ab2473ff50e9,"Use NumpyPythonExtension instead of DistutilsPythonExtension where possible.
",numpy/fft/SConscript,numpy/lib/SConscript,numpy/linalg/SConscript,numpy/numarray/SConscript,numpy/random/SConscript
cced5101daf6624b40999637bbb0996f11e3a691,"BUG: Make sure the Zipf results are within the allowable range.
",numpy/random/mtrand/distributions.c
b724d59dd85b40481542bb4aa08f527ffa542b05,"Fix refleake discussed in #848.  Only applied part of the patch.
",numpy/core/src/scalartypes.inc.src
ebf8dce3a385f9da5b1e769cb1c41f8f928dfedf,"Fix ref-count leak in Ticket #843
",numpy/core/src/multiarraymodule.c
048bc867ad2ba31dbd784eb6432a492a65686510,"Piecewise should not expose raw memory.  Closes #798.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
757b1fbfd996c969eb4e76d6949a6ae242ddb3ae,"Example of real docstring.
",numpy/doc/EXAMPLE_DOCSTRING.txt
e5da29acd88bb5e873d8b807363625f0be4279bb,"Renamed check_recarray_from_repr to test_recarray_from_repr so it can be 
picked up by nose.
",numpy/core/tests/test_records.py
a4847b1de5fc8398c2589e04aee1b63ba0592ff4,"Return actual bools instead of 0 or 1.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
01320e0149a08299461ab730bf0bdce6c9ba3483,"Prepend bootstrapping include path to avoid problem with debian numpy.
",numpy/core/SConscript
297a4b8cd70077eb905575dcd4d369a762514ecf,"Remove f2py.lib from setupscons.py
",numpy/f2py/setupscons.py
73cc84b6319763a0661fe90100807757e5e88430,"Remove uses of set_package_path, set_local_path, restore_path, and 
associated sys.path manipulations.
",numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py
dcb2ea64c660f6f554a4afbbfa0d5dfbbb518e01,"Removed convdtype.py as discussed on numpy-discussion list (code was intended for 
the Numeric to numpy transition, but was never used).
",numpy/lib/convdtype.py
36e02207c1a82fe669531dd24ec799eca2989c80,"Use the implicit ""import numpy as np"" made available to all doctests instead 
of explicit imports or dependency on the local scope where the doctest is 
defined..
",numpy/add_newdocs.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/io.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/linalg/linalg.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/testing/decorators.py
f07e385b69ee59ef6abe05f164138dc6a7279291,"BUG: C-style /**/ comments only.
",numpy/core/src/umathmodule.c.src
2f18f9d6834c1eeaf7a234f2810c8c1ba37c7abf,"Correct the oldnumeric typecodes, update the tests to work on 32-bit machines, make sure these tests are installed with numpy so they can be run with numpy.test().
",numpy/oldnumeric/precision.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py
5873cfd7d0d8f280a3682ed80540cab2c1af65e4,"Fix setup script. Exclude test that requires building from the main test suite.
",numpy/f2py/setup.py,numpy/testing/nosetester.py
484c100392601f4942ceecbedf32e6df0201d473,"Removing G3 f2py code. Development has moved to https://launchpad.net/f2py/
",numpy/f2py/f2py2e.py,numpy/f2py/lib/__init__.py,numpy/f2py/lib/api.py,numpy/f2py/lib/doc.txt,numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_support.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/extgen/setup_py.py,numpy/f2py/lib/extgen/utils.py,numpy/f2py/lib/main.py,numpy/f2py/lib/nary.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/__init__.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/doc.txt,numpy/f2py/lib/parser/parsefortran.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/readfortran.py,numpy/f2py/lib/parser/sourceinfo.py,numpy/f2py/lib/parser/splitline.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/parser/utils.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/setup.py,numpy/f2py/lib/src/F_FUNC.cpp,numpy/f2py/lib/src/pyobj_to_string_len.c,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/f2py/lib/wrapper_base.py,numpy/f2py/setup.py,numpy/f2py/setupscons.py
0c817a5d51c2c16db9df5c015ff846002d991d74,"BUG: Correctly stub out urllib2.urlopen() for tests given the refactoring of the local imports.
",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py
c8f88c0411203a0d1a09aadef920c563ef54c12a,"Clean up test output such that a completely-passing test suite has no extraneous output.
",numpy/core/tests/test_regression.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/doc/DISTUTILS.txt,numpy/f2py/lib/__init__.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/tests/test_function_base.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/oldnumeric/tests/test_oldnumeric.py
638f015c904d32e0f89604d088731a3ad2daccfd,"BUG: need to create exceptions correctly.
",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py
f912322ee454fee1d15da01c5fd951ab2fcb5f99,"ENH: Add broadcast_arrays() function to expose broadcasting to pure Python functions that cannot be made to be ufuncs.
",numpy/lib/__init__.py,numpy/lib/stride_tricks.py,numpy/lib/tests/test_stride_tricks.py
a74f0dfbcdfaf0ed5929fed7a27dc8738709828f,"Added note to numpy developers about the policy on using finfo in numpy's codebase.
",numpy/lib/getlimits.py
102cdc22b12df8a44be644d39a277229e5324028,"Reduce numpy's import times by delaying a few time consuming imports to the point of actual use and global instantiations of finfo. Thanks to David Cournapeau for tracking down and fixing the import part of the problem.
",numpy/lib/_datasource.py,numpy/lib/getlimits.py,numpy/lib/polynomial.py,numpy/lib/tests/test__datasource.py,numpy/lib/utils.py,numpy/ma/core.py,numpy/ma/extras.py
590babe4646a3435f8a709d6230d05c10f085be1,"Remove uses of set_package_path, set_local_path, restore_path.
Clean up and (somewhat) standardize test module imports.
Removed unneeded reload calls.
",numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py
94bc330296e01d8fc0cb14aba1354ddb6d8587cc,"Use the implicit ""import numpy as np"" made available to all doctests instead of an explicit 
import.
Remove "">>>"" from bartlett plotting example since it currently requires matplotlib.
",numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/utils.py
24af452d6573d66faedff2b4b98993a8c0664e97,"Fixed line continuation in doctest for setastest.
Remove unnecessary ""import re"".
Limit doctest execution environment to ""import numpy as np"".
Save and restore print options after each doctest (to clean up after some doctests that change 
them).
Enable ellipsis for all doctests.
Remove parameter to NumpyDocTestCase constructor that was specific to nose 0.11.
Monkeypatch wantFile of doctest plugin to skip Python files related to the build process 
(scons_support.py and generate_numpy_api.py).
",numpy/testing/decorators.py,numpy/testing/nosetester.py
7bd1865f373f5297a2dc01eb6eedb6e69ad2c062,"Remove uses of set_package_path, set_local_path, restore_path.
Clean up and (somewhat) standardize test module imports.
In test_scalararray.py and test_defmatrix.py, update tests that are commented out so that 
they will be picked up in case they are ever uncommented.
",numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py
0e2b76324de5d2423550db9ec5ff45bb2b01cc5f,"Deprecate set_package_path, set_local_path, and restore_path.
",numpy/testing/numpytest.py
a1be9e66bbbbb28a42cd51b8f2f0301dc25e1080,"Update doctests to assume only an ""import numpy as np"" has been executed prior to the 
example code.
Updated numeric.py doctests to skip with-statements, and updated expected outputs to 
match current NumPy behavior.
",numpy/core/fromnumeric.py,numpy/core/numeric.py
6a4e465bce127b61948301c9de835e7de99b4c29,"Corrected a goof in .reshape()
",numpy/ma/core.py,numpy/ma/tests/test_extras.py
016b1f61c0a5c2e49ece0b6b1d31daf42bc2d1a7,"Update doctests to use the implicit ""import numpy as np"" made available to all doctests.
Update doctests to use fully qualified names.
Fixed typo in numerictypes.py: english_lower doctest has an example using english_upper

",numpy/core/fromnumeric.py,numpy/core/numerictypes.py,numpy/core/records.py
aa26afb8fbb6901bed42e895e410728b0dd1f6bc,"Update doctests to use the implicit ""import numpy as np"" made available 
to all doctests.
",numpy/core/arrayprint.py,numpy/core/defmatrix.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py
bc01c96daf61de61046c5ac7d17a80ab35ccd0ef,"prevent .reshape to update the whole __dict__ of the result, use ._update_from instead
",numpy/ma/core.py,numpy/ma/testutils.py
f843a88032ebe1f4847dfb97996413fac56b227d,"Customize behavior of nose doctests:
- Adding ""#random"" to an expected output line will skip the comparison with actual 
  output (but the command is still executed).
- All doctests have the numpy module available in their execution context as ""np"".
- Whitespace normalization is enabled for all doctests executed via nose.

Doctests added to check that the above behaviors are available.

Nose version check/message cleanup.

Fix typo in doctest for NoseTester (was still referencing scipy.testing).

Rewrapped comments/docstrings to 80 columns.

",numpy/testing/nosetester.py
b6bbec80f381af3e6bee64cbbcfbdf92ad71c4ec,"Use join instead of += to build string.
",numpy/lib/format.py
92ce54ed154e972e649800fcfceda52458c18664,"Add test for ticket #390.
",numpy/core/tests/test_records.py
ff52d4cebbc04639123e1ace44c26413ca050e49,"Fix ticket #390.
",numpy/core/records.py
22774bf15e51a8cf0f1dbdca23a6ffd932d6a9dc,"Shorten long lines.
",numpy/lib/format.py
a3adda51dbe286af79ef6c2fe3380858a32429d2,"Fix ticket #828 by explicitly sorting keys instead of relying on pprint.
Thanks to Neil Muller for the analysis and patch.
",numpy/lib/format.py
84089298c0b55977cbf0c1ad79ec1f57b87b67a1,"Add regression test for #825.
",numpy/core/tests/test_regression.py
3fa280a35af612d4f1cca29b1b98eb91972db3ed,"Test #825 fix.
",numpy/core/src/arraytypes.inc.src
662c7974208d3db4055d9438ca36f99f2672d1c2,"MaskedArray.__new__ : compare data to cls and not to MaskedArray, in case __new__ is called from a subclass
MaskedArray: add the iscontiguous method.
",numpy/ma/core.py
ec5f5ea44f22ba360b5acae320b377d4be3edd15,"Basic reindentation.
",numpy/core/src/scalartypes.inc.src
8ae34d065f1d334212d80b8cf4affd9066a631d6,"Code style cleanups.
Whitespace.
Fix typo rrlshift.
",numpy/core/src/ufuncobject.c
ec51473cf920ae6007bf69337eff7e7139c466c6,"Fixed imports for doctests.
Removed "">>>"" from sample code in defmatrix.py:bmat that was intended only as an 
example, not as a doctest.
",numpy/core/defmatrix.py,numpy/core/fromnumeric.py
008bb901bc7e73f63d26f5a8cde34401603ae820,"Fixed imports in doctests.
",numpy/core/arrayprint.py,numpy/core/numerictypes.py
b7ff8ebbe0942b85b173bf4ec70fee6c1decbe37,"Added ""import numpy as N"", and adjusted whitespace to allow doctests to run correctly.
",numpy/core/records.py
ddaa7684c0af122954a2dbf887dd1650fda38a9f,"Small code cleanup.
Added commented out alternate TypeError return in ufunc_generic_call.
",numpy/core/src/ufuncobject.c
a28c5caee384633c54e15d92ef8f14afb52233d1,"Small cleanup.
",numpy/core/tests/test_ufunc.py
9bd3e060acd4f775b1c02195a7aa6ffdadb62783,"Restored parametric.py
",numpy/testing/parametric.py
af7f89ea35ae9dbf38682d3215a20cc13ab0890c,"Restore old test framework classes.
Added numpy.testing.run_module_suite to simplify ""if __name__ == '__main__'"" boilerplate code in test 
modules.
Removed numpy/testing/pkgtester.py since it just consisted of an import statement after porting SciPy r4424.
Allow numpy.*.test() to accept the old keyword arguments (but issue a deprecation warning when old arguments 
are seen).
numpy.*.test() returns a test result object as before.
Fixed typo in distutils doc.

",numpy/__init__.py,numpy/core/__init__.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/distutils/__init__.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_misc_util.py,numpy/doc/DISTUTILS.txt,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/fft/__init__.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_machar.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/linalg/__init__.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/numarray/__init__.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/random/__init__.py,numpy/random/tests/test_random.py,numpy/testing/__init__.py,numpy/testing/nosetester.py,numpy/testing/numpytest.py,numpy/testing/pkgtester.py,numpy/testing/tests/test_utils.py,numpy/tests/test_ctypeslib.py
03fbbffca884c70d56e08d5551b001dd6b9565c6,"Temporary workaround for a numscons bug.
",numpy/core/SConscript
d2d7e7f47eec9ab9575b231f2a3805b788b778ae,"Put import_array() back into the .pyx file.

M. Brett noticed that if it's only in the .pxd file, it does NOT get
included in the auto-generated C code, and will thus not be called at
module initialization time.

",numpy/doc/cython/c_numpy.pxd,numpy/doc/cython/numpyx.pyx
e4b8851b2dbe54ccc0ee8080cc05449b3771676a,"Move the import_array() call directly into c_numpy.pxd.

This makes the user-visible API for Cython usage simpler and closer to
the Python one.
",numpy/doc/cython/c_numpy.pxd,numpy/doc/cython/numpyx.pyx
d2a19ae95c831d093cc5097e4643d2f9e813fe22,"* put maximum/minimum_fill_value back in __all__
",numpy/ma/core.py,numpy/ma/mrecords.py
a5f0cf12e71fc65b7f4dab84df05ff7c4b7b2a3d,"Use a colon instead of a semi-colon to separate index levels.
",numpy/doc/HOWTO_DOCUMENT.txt
ab3df7fc073fe57d493fbb07929365dd232a7643,"Updated Cython code to use .pxd files with cimport instead of .pxi/include.

Using cimport/pxd is the currently recommended approach by the Cython
team.
",numpy/doc/cython/Makefile,numpy/doc/cython/{numpy.pxi,numpy/doc/cython/{Python.pxi,numpy/doc/cython/numpyx.pyx
19da971bf18e3528f9c42d4c26715cb158f9b97b,"PyPI metadata fixes.
",setup.py
1a4abaed317c55eed5fa7bebbed50239106b35c7,"Add `Methods` section to documentation standard.
",numpy/doc/HOWTO_DOCUMENT.txt
273f995c453c55a6b2a71b1dab75f2961072c02f,"Add `ma` to __all__.
",numpy/__init__.py
00827d75565a543ad4e1ca5c2d418eb9fafdf7fb,"fixed dictionary update for compatibility with Python 2.3
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
660dacef79bf3e78502309f791b3195b14fa63df,"Fix piecewise to handle 0-d inputs.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
3a917b8d20bae0bec932019ffa3fa82ae6eabf5a,"Update documentation standard.
",numpy/doc/HOWTO_DOCUMENT.txt
2bdd23ef6ddabcf24ef68f08fe7a737e4b52f355,"Update README.txt to indicate nose version dependency, and port SciPy r4424 to NumPy 
(prevent import of nose until actual execution of tests).  Restored 
""raises"" function to numpy/testing/utils.py until it can be replaced with the function of 
the same name from nose.tools after the lazy import.
",README.txt,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/nosetester.py,numpy/testing/pkgtester.py,numpy/testing/utils.py
70974af863b99d49d9a1cf947afc019976e6b8b4,"When using PackageLoader, do not add subpackage names to __all__.
",numpy/_import_tools.py
c331857d8663ecf54bbe88c834755da749e8ab52,"Switched to use nose to run tests.  Added test and bench functions to all modules.
",README.txt,numpy/__init__.py,numpy/core/__init__.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_memmap.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/distutils/__init__.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_misc_util.py,numpy/doc/DISTUTILS.txt,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/fft/__init__.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_financial.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_machar.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_regression.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/linalg/__init__.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/__init__.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_old_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/numarray/__init__.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/random/__init__.py,numpy/random/tests/test_random.py,numpy/testing/__init__.py,numpy/testing/decorators.py,numpy/testing/info.py,numpy/testing/nosetester.py,numpy/testing/nulltester.py,numpy/testing/numpytest.py,numpy/testing/parametric.py,numpy/testing/pkgtester.py,numpy/testing/tests/test_utils.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py
22ba7886a84dc6a16ca75871f7cd2f10ef8de1f9,"test
",THANKS.txt
550eaf156d71292b7d14de41ea64da4ce5ec6080,"t
",THANKS.txt
5bb7b22cf9e9cbc55a0894b7d5a47b43460d9c69,"core.MaskedArray.__new__
* Force a mask to be created from a list of masked arrays when mask=nomask and keep_mask=True
",numpy/ma/core.py,numpy/ma/tests/test_core.py
8f851719233d1e1dd47b7dc1595d5fb4e53eb33e,"Fix dotblas compilation on mac os X: scons scanner is not smart enough to interpret #include CPP_MACRO.
",numpy/core/SConscript
09791d29b5e3cc5a53b536e935f7b6b7105d7b48,"Do not fail scons command when cxx compiler is not available.
",numpy/distutils/command/scons.py
d46b16200f21823a1d35deaa7bde283126f67616,"Make sure we are using numscons 0.8.0 or above.
",numpy/distutils/command/scons.py
3f04110ecb03a627cc4e69497c63e683e585b591,"adapt numpy.random to new scons build_dir architecture.
",numpy/random/SConscript,numpy/random/SConstruct
8c53a440625db9ddd54a09e2811e16a8f1fbd02d,"adapt numpy.linalg to new scons build_dir architecture.
",numpy/linalg/SConscript,numpy/linalg/SConstruct
7148b1c73f3a28c97a1eec386587f1f99038d834,"Adapt numpy.fft to new build dir conventions.
",numpy/fft/SConscript,numpy/fft/SConstruct
fd5f2dc162067d7dc8e66d7cafc8be151fb9a0c7,"Adapt numpy.numarray to new build dir convention.
",numpy/numarray/SConscript,numpy/numarray/SConstruct
be47c6fe315821136d4953de01bacb67a07c5f0a,"Adapat numpy.lib scons build to new build_dir conventions.
",numpy/lib/SConscript
d039ec97e0fbfee068e90ae800681aac0c959f27,"Set numpy include path relatively to top setup callee when bootstrapping.
",numpy/distutils/command/scons.py
a7eb6e985662108fcf6cd27b0808e26d65a33e4f,"Adapt numpy.lib to new scons build_dir behavior.
",numpy/lib/SConscript,numpy/lib/SConstruct
9ed41fefbe4721c362fd46fb078a80730705a06d,"When src_dir is not null, takes it into account to retrieve distutils libdir.
",numpy/distutils/command/scons.py
95a9befc62b54d33a918c1dbc8b130ae8dcba433,"Adapt numpyconfig.h location in setup.py file.
",numpy/core/setupscons.py
607c8ff5e0cf2200eb044e72325425afb5fbd16b,"Adapt SConscript to new architecture for build dir.
",numpy/core/SConscript
067cbfac7cabbb6ab2d562b5ae54b3037169884e,"Add boilerplate SConstruct to set variant dir transparantly.
",numpy/core/SConstruct
2835b2f3e4d00a288c8abef8aa63f9d383c10c5a,"variant_dir: Rename SConscript for numpy.core.
",numpy/core/{SConstruct
1e11e53b9222ffe2fd288317702b99da427e5b86,"Remove distutils_dirs_emitter hacks: no need anymore since we use variant_dir.
",numpy/core/scons_support.py
e0b47b1e27dc8e6d1005598f517e1ab568d4805e,"scons command: set distutils libdir relatively to build directory.
",numpy/distutils/command/scons.py
327a4d2a4a78c538db5797b05379a3a7c52b2d23,"How to use variables in math markup.
",numpy/doc/HOWTO_DOCUMENT.txt
c0bdc3a648a0106d6fd706661c1a50235b4b924c,"CHANGES:
core:
* When creating a masked array with named fields, the mask has now a flexible type [(n,bool) for n in fields], which allows individual fields to be masked.
* When a masked array has named fields, setting the mask to a sequence of booleans will set the mask of all the fields of the corresponding record.
* A new property, recordmask, returns either the mask (when no named fields) or a boolean array where values are True if all the fields of one record are masked, False otherwise.
* A new private attribute, _isfield, has been introduced to keep track whether an array is a field of a record-like masked array or not, and make sure that the mask is properly propagated.
* Setting an existing mask to nomask will only fill the mask with False, not transform it to nomask

mrecords:
* _fieldmask is now only a synonym for _mask, kept for convenience
* revamped __getattribute__ to the example of numpy.core.records.recarray.__getattribute__
* __setslice__ and filled are now inhertied from MaskedArray

tests
* The tests in test_core have been reorganized to improve clarity and avoid duplication.
* test_extras now uses the convention ""import numpy as np""

",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py
3cd9e033d2086d62cc2d34b818a4ef70d4653a83,"* make_mask_none now accepts a fields argument to construct record-like masks easily
* revamped where

",numpy/ma/core.py
cf89a25cebb537448707ab389f32f07dd52cf911,"Move umath docstrings to a separate file. Make the automatic ufunc signature compatible with the documentation standard.
",numpy/core/code_generators/docstrings.py,numpy/core/code_generators/generate_umath.py,numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
8fac05d6e37b6d57a08092a32c8a81768a430441,"MSVC compiler does not have compiler_cxx member.
",numpy/distutils/command/scons.py
b7ba98c3459de3e79144fda1d7bd7e03402363fd,"* revamped the functions min/max so that the methods are called
* revamped the methods sum/prod/var/std/min/max/round to accept an explicit out argument
* Force var to return masked when a masked scalar was returned
",numpy/ma/core.py,numpy/ma/tests/test_core.py
b8c5c9c07ad436a2c1216bbedb0f8221d3119f6b,"Fix missing return value, closes ticket #813.
",numpy/core/src/arrayobject.c
942d2dce9638f13b964bdfb9c1d56c25f7455619,"Merged revisions 5204-5257 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/cdavid

........
  r5205 | cdavid | 2008-05-20 17:14:30 +0900 (Tue, 20 May 2008) | 3 lines
  
  Initialized merge tracking via ""svnmerge"" with revisions ""1-5204"" from 
  http://svn.scipy.org/svn/numpy/trunk
........
  r5206 | cdavid | 2008-05-20 17:17:27 +0900 (Tue, 20 May 2008) | 7 lines
  
  
  Current handling of bootstrapping is flawed: I should handle it at the
  distutils level, not at the scons level. This is the first step to detect
  bootstrapping at distutils level, and pass its state to scons through command
  line.
........
  r5207 | cdavid | 2008-05-20 17:35:01 +0900 (Tue, 20 May 2008) | 1 line
  
  Fix typo when passing bootstrapping option to scons.
........
  r5208 | cdavid | 2008-05-20 17:41:11 +0900 (Tue, 20 May 2008) | 5 lines
  
  
  Do not mess with __NUMPY_SETUP__ in scons scripts anymore: this is handled in
  numscons.
........
  r5209 | cdavid | 2008-05-20 17:43:46 +0900 (Tue, 20 May 2008) | 1 line
  
  Forgot one file in lapack_lite when no LAPACK is available.
........
  r5210 | cdavid | 2008-05-20 18:24:38 +0900 (Tue, 20 May 2008) | 1 line
  
  Handle fortran compiler on open-solaris
........
",numpy/distutils/command/scons.py,numpy/fft/SConstruct,numpy/lib/SConstruct,numpy/linalg/SConstruct,numpy/numarray/SConstruct,numpy/random/SConstruct
abd2bda91f1503c96d4caa2fb69f8e5c492bdc9f,"Testcases for ticket #791
",numpy/core/tests/test_regression.py
7996e061c7cf0a28eb383a8905f012b6cfbe0f8b,"* revamped choose to accept the out and mode keywords
* revamped argmin/argmax to accept the out keyword
* revamped all/any to accept the out keyword
",numpy/ma/core.py,numpy/ma/tests/test_core.py
8c6fc0248b84e7cf708131ecb4c99160d53f7525,"Fix more in ticket #791.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
222043bf4008d08cb084e984fd413c29ea797291,"added verbose argument to assert_array_equal in assert_equal. Fixes ticket #810.
",numpy/testing/utils.py
ce51b9149fe688e82bba606b49b7b7a7f0c7f3f3,"simplified MaskedArray.__setitem__ to fix setting object-ndarray elements
",numpy/ma/core.py,numpy/ma/tests/test_core.py
b8cc583ebfd7f7be86004dd75bc23f06357d36bb,"use tempfile.mkstemp for the creation of temporary files
",numpy/ma/tests/test_mrecords.py
29175fcf0edde29e01f8465037f2556680f8f5d8,"core
* masked_values now accept a shrink argument
* fixed the divide_tolerance to numpy.finfo(float).tiny (bug #807)
* in MaskedArray.__idiv__, use np.where instead of np.putmask to mask the denominator
",numpy/ma/core.py,numpy/ma/tests/test_core.py
4bf8efd1f026eb40bd55099bbb57725b51b31520,"Update examples section.
",numpy/doc/HOWTO_DOCUMENT.txt
b547bbfd9fa94b825bf982ff16977e757b71856b,"core:
* use the ""import numpy as np"" convention
* use np.function instead of (from)numeric.function
* CHANGE : when using named fields, the fill_value is now a void-ndarray (and no longer a tuple)
* _check_fill_value now checks that an existing fill_value is compatible with a new dtype (bug #806)
* fix_invalid now accepts the mask keyword
* MaskedArray.__new__ doesn't run _check_fill_value when the fill_value is None
* add the astype method, to support the conversion of fill_value when needed.
* arange/empty/empty_like/ones/zeros are now available through _convert2ma

test_core:
* modified test_filled_value to reflect that fill_value is a void-ndrecord when using named fields
* added test_check_fill_value/test_check_fill_value_with_records

testutils: 
* use the ""import numpy as np"" convention
* assert_equal_records now uses getitem instead of getattr
* assert_array_compare now calls numpy.testing.utils.assert_array_compare on filled data
* the assert_xxx functions now accept the verbose keyword

mrecords:
* MaskedRecords inherit get_fill_value and set_fill_value from MaskedArray
* In filled, force the filling value to be a void-ndarray
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/testutils.py
6cdeb7165ac38e5fb5944bccefa7e451d629202f,"Update documentation standard.
",numpy/doc/HOWTO_BUILD_DOCS.txt,numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py
e66e9caf714487097037b25a2a347b6aee91d4df,"Spell out namespace convention in Examples and See Also sections in docstrings
",numpy/doc/HOWTO_DOCUMENT.txt
be21c42114147f87061a220ee130384f20b654c2,"Use memmove when memory areas can overlap.
",numpy/core/src/ufuncobject.c
7e297641b0d16af657b333851a542f4d15cbd681,"mrecords : Make sure a field shares its mask with the whole array
mrecords : IMPORTANT : the mask of a field is no longer set to nomask when it's full of False, which simplifies masking specific fields.
extras   : Reorganized personal comments
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_mrecords.py
47883f921adb249e8c58b03e375a8dc347cbbedd,"core    : __new__: keep the fill_value of the initializing object by default
mrecords: force _guessvartypes to return numpy.dtypes instead of  types
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
24caeed5a1dfc1a90cbfc27d0ac9c154cee0af58,"Fix regression in dtype='c' array creation.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
207754f3e7e0d1e014a60a0b10b3c3c75dabed14,"Add cpuid + nsis scripts to build win32 installer.
",tools/win32build/README.txt,tools/win32build/cpuid/SConstruct,tools/win32build/cpuid/cpuid.c,tools/win32build/cpuid/cpuid.h,tools/win32build/cpuid/test.c,tools/win32build/nsis_scripts/numpy-superinstaller-2.4.nsi,tools/win32build/nsis_scripts/numpy-superinstaller-2.5.nsi
dd490ff79df72b962675d00c36b949ab5b9ab6a9,"Handle library with extension in their name for ctypes.load_library.
",numpy/ctypeslib.py,numpy/tests/test_ctypeslib.py
a73ef5ec3a8db5612779abe21c442bb89275ed6c,"Save preliminary work on testing ufuncs.
",numpy/core/tests/test_ufunc.py
4acc46e218883af4f32fd4d714abb0e8876bc146,"Delete generate_array_api.py
",numpy/core/code_generators/generate_array_api.py
7deec36fadb821155148f061ec0a9c0fc89ee556,"Rename generate_array_api to generate_numpy_api.
",numpy/core/code_generators/generate_numpy_api.py,numpy/core/scons_support.py,numpy/core/setup.py
24726567344dbd821d2a1a1b4f36bf1e89b0585a,"Start work on testing ufuncs.
",numpy/core/tests/test_ufunc.py
ca33dd351fc6bb82516a02264f55f8d25c9d4acd,"Define copy_string to memcpy. Closes ticket #666.
",numpy/core/src/_sortmodule.c.src
b27ec44e84ef5022a6f1b2b41861a988e00485a6,"Remove now unused files. They have been merged into numpy_api_order.txt.
",numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/multiarray_api_order.txt
9953e3424711f04aced3818b3da3a3fc8ff9d9ed,"Merge OBJECT_API and MULTIARRAY_API as NUMPY_API.
",numpy/core/SConstruct,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/numpy_api_order.txt,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
17951f6bd81dd22ae56843a95e1edc06d1592a16,"trunk open for 1.2 development series
",numpy/version.py
ed222704c323f2a7038790842ec32c1ba8b26a4d,"Add PyArray_CompareString to multiarray_api instead of
array_api so as not to disturb the current order of the API.
",numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/src/arrayobject.c
39b8259692f4eafd56621a563bac5095ecfc2e7a,"Add PyArray_CompareString to the API.
",numpy/core/code_generators/array_api_order.txt,numpy/core/src/arrayobject.c
e7e2cad2579e367bc37178b494c21d6db2543382,"test_set_fields: filter out the warning
",numpy/ma/tests/test_mrecords.py
35c2f9f10aff581c2294312ed2a9586610f901d0,"Add one-more test case using getmap to supplement the setmap test.
",numpy/core/tests/test_regression.py
9525f467ce805c1aba6d590733f3bc224f9dc84e,"fixed whitespace w/ reindent
",numpy/__init__.py,numpy/core/scons_support.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_regression.py,numpy/distutils/command/scons.py,numpy/distutils/conv_template.py,numpy/doc/example.py,numpy/lib/tests/test_function_base.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py
0e968fdb7c04d1397ba5a28e0c7a2a6261fe916e,"Fix bug reported on SciPy mailing list which arose when the results of a broadcast were too large to fit in memory and the simple MultiplyList function is not doing overflow detection.  Create a new funtion that does Overflow detection but apply it sparingly. morarge broadcast results could caus 
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
ae31c236681a2f2c652bd63c4e568f35085248c5,"Fix ticket #789 again.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
1181f98d28b38385f3ca6a75af97649f7f01934a,"Remove trailing space.
",numpy/core/src/multiarraymodule.c
d8c092816ab6b611692d992cbfaf882a10424793,"Fix #789 by Alan Mcintyre.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
ceb9ec29824966383c20364697a330577bd159d5,"Make test(all=True) the default.
",numpy/testing/numpytest.py
a49dcfc6e7425065e6a06a115b85ff287937e5dc,"Fix comments in tests.
",numpy/core/tests/test_regression.py
7be946bfab3e6fe3cc9852fd962f5c398dff38aa,"Fix the logic testing for potential problems with array subclasses.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
43cfd258ebff5f4ad5f9a8ebff86e24cd0f96900,"Fix ordering assumption in regression test.
",numpy/linalg/tests/test_regression.py
f5df20ee8a938f8504ed23cd5dc8913e01219f5d,"Fix one small error in test(all=1).
",numpy/ma/tests/test_old_ma.py
6cdb11fe2178de6946ef011a86917c1525f912bd,"Try again to fix the endianness tests.
",numpy/core/tests/test_multiarray.py
2a72de6eb18a61f7711683c5bd243923f7ffe364,"Fix unit test capturing under Python 2.6.
",numpy/testing/numpytest.py
bc3cfee0148369b1a58cc8b2490c0be5cc1feb18,"Handle fortran compiler on open-solaris
",numpy/distutils/command/scons.py
612823699dc191ec140d9e930a656db3c482e47e,"Forgot one file in lapack_lite when no LAPACK is available.
",numpy/linalg/SConstruct
a29ca1abcb84691a9d32b9608346b9a54a3509b6,"
Do not mess with __NUMPY_SETUP__ in scons scripts anymore: this is handled in
numscons.

",numpy/fft/SConstruct,numpy/lib/SConstruct,numpy/linalg/SConstruct,numpy/numarray/SConstruct,numpy/random/SConstruct
87fddf4db1ea174df3428685baeb30586a30541b,"Fix typo when passing bootstrapping option to scons.
",numpy/distutils/command/scons.py
04b163d4a1c352562f1bb5988d5e267ea7bb08bd,"
Current handling of bootstrapping is flawed: I should handle it at the
distutils level, not at the scons level. This is the first step to detect
bootstrapping at distutils level, and pass its state to scons through command
line.

",numpy/distutils/command/scons.py
aa4bc9eb83d61f4c6bf62cf09c986ec11d8106df,"Update build script.
",tools/win32build/build.py
b6590c54965a85cea6e9bb194637e198c4cad136,"
- win32 build script is now functional. Still does not handle svn version,
  though
- Fix indentation on the win32 build script.

",tools/win32build/build.py
b7cb2d53f6a907140f6deeb8176cd46f031d66de,"Add a tools directory, to hold various things related to build, etc... Add a python script to build win32 binaries.
",tools/win32build/build.py
e94a1294a6e22e1dddccbf68fe19b29e7fe84dab,"Use pyrexc to compile mtrand.pyx for 1.1.
",numpy/random/mtrand/mtrand.c
ebecbb1f048e77eea50a99f13e069e4cc81bdd88,"f2py: Allow expressions that contain max/min calls, be used as dimension specifications. Defined macros min/max that are needed when --lower is used. Typical usage case: real a(min(1,n)).
",numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py
399147b0b20e32bbb0af62db9bc1fe1100770063,"Fix math markup in docstrings.
",numpy/lib/function_base.py,numpy/linalg/linalg.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
7ee9981d88525a9b09df86643c15306e1e5f5e58,"Use endian-specific dtypes in tests which construct cross-type views.
",numpy/core/tests/test_multiarray.py
4856e097f52311da379779fd3a99c5a00a1d26b6,"Fix accidentally replaced (r5190, r5193) alltrue code. Diff shows that fromnumeric.py has only docstrings changes from r5189 now.
",numpy/core/fromnumeric.py
89f1a4e66ffaefe0ce7fe969df55821d7b853ba9,"Fix math in Bartlett docstring.
",numpy/lib/function_base.py
689f1439c95b5f4fb2a147b9ff6df81fd45c8cfa,"Remove duplicate `alltrue`.
",numpy/core/fromnumeric.py
51adbb47d6e7a444743d89179c7ab4c22a738f4f,"Indexing tag was correct.  Revert.
",numpy/doc/HOWTO_DOCUMENT.txt
b4e7ec337dadcea8e3fe69bd2364d44877761707,"Fix typo in indexing tag.
",numpy/doc/HOWTO_DOCUMENT.txt
40505ed9548af6a49f052abad9cd8ed36ba102dd,"Merge documentation changes from wiki.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/lib/arraysetops.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py
10d7e0872f6ede40f55b47f415a93046523cc904,"Put one example for mkl 10.0 in site.cfg.example.
",site.cfg.example
146479b91b195a9726cbd66ffbd018ebb822d773,"Add --package-list to scons command, to speed-up no-op when working on scipy.
",numpy/distutils/command/scons.py
fa66a9b0215ffd63236cea23e104fc1e440b662f,"Minor update to example docstring.
",numpy/doc/example.py
4ee16c3cc1cd996ba37122d04eb56a8061e8b966,"Update documentation format and example.
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py
cd650e681d0fdaa1f80d0b6551bc44b5f2ac6b1e,"mrecords : fixed fromarrays when importing only one record
extras   : fixed a bug in the naming convention
",numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_mrecords.py
4116872c4e907dc80aa5d8b901695e5bbe109acb,"Update example.  Fix reference.
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py
a715ab094ba5258da03c92a77b4549d1f55d1c35,"Update documentation standard.
",numpy/doc/HOWTO_BUILD_DOCS.txt,numpy/doc/HOWTO_DOCUMENT.txt
46768e679bbb8f2beabdafff51696d76e7caa920,"Fix ReST markup in docstrings.
",numpy/lib/function_base.py
f83cffb4d354e1d0b9fed801f36be967bae8b1fe,"get_build_architecture is not available in python 2.4 and older, so use numpy.distutils one. This should fix undiscovered/not reported bug of building numpy with python 2.4 on windows systems.
",numpy/core/setup.py
a6f214891d56b599a25d1ebe0127ecaea7f121af,"f2py: disallow matching module procedure-s as module-s.
",numpy/f2py/crackfortran.py
a0cdbc671e93cad0196d8bbe4f1070c3e484cb45,"Merge `choose` docstring fix from wiki.
",numpy/add_newdocs.py
d5519c47944bf553e63f85bbeed28436cc6cd10a,"Add test for #788 [patch by Eric Firing].
",numpy/core/setup.py,numpy/core/tests/data/astype_copy.pkl,numpy/core/tests/{testdata.fits,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py
f968b1845073819cf812991436c5968d5a47df1d,"Changed an idiom of appending strings to a buffer. Fixes numpy ticket 792.
",numpy/f2py/src/fortranobject.c
04fb428606f1af32f2de28c1c2afe2dadf9e7747,"Fix the unit tests and eliminate the dimensionality reduction assumption for non base-class arrays.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_defmatrix.py
9bd719a3ecf017e8fd64211597d9a0559502bc2b,"Don't assemble numpy module docstring from several parts; removes duplication
",numpy/__init__.py
48729bf741c6471c500016d12a1d80be494c7906,"Minor reST cleanup in docstrings.
",numpy/add_newdocs.py
e3b120ab28fce1210bb5aea54591077999e1140c,"Merge docstrings from wiki.
",numpy/linalg/linalg.py
d7c77aae2d0766c9af901b3b98a23b0fedd70dc5,"extras  : dropped the m prefix in mediff1d, mvander, mpolyfit
mrecords: fixed __setitem__ to update the mask if needed.
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py
8f60b4886081dbb6ba5ce0e6fc854473fd716151,"Restore change to docstring overwritten by wiki merge.
",numpy/lib/io.py
b12d0784116d7740a4ce3be18925d0cf7e7db5df,"Merge docstrings from wiki.
",numpy/__init__.py,numpy/core/defmatrix.py,numpy/lib/io.py
7407ae44ee73f1da902fdc87c496bfc8141a3132,"test
",TEST_COMMIT
45de460b0d7b298449c2dd1d54ed756fb508402d,"the trunk is still cooking 1.1
",numpy/version.py
e8f2d12a1cc5d658648dd9c6ef4f4be6e622790a,"extras: introduced mvander and mpolyfit
",numpy/ma/extras.py,numpy/ma/tests/test_extras.py
b316f21e0bd886c751db19ed8a1ff65b7adaa34b,"Back-out matrix changes from trunk.  This breaks some test which need to be fixed differently.
",numpy/core/defmatrix.py
e3d0fec968a54a144de203a25d52e059b7447065,"Fix ticket #791.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py,numpy/lib/io.py
b6ef006ba71899914ddb2867eba0a95d081c937d,"Fix reST markup.
",numpy/ma/API_CHANGES.txt
45c812ddb75c5efc6bbcb4b099792f2763db11fe,"power               : fixed a bug when a scalar is the first argument
MaskedArray.__pow__ : call power
MaskedArray.__ipow__: works in place. Note that the _data part gets ""fixed"" (NaNs/Infs set to fill_value)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c2b77e022e8393f057b5b54dc595f35b01a26809,"core : power : use the quick-and-dirty approach: compute everything and mask afterwards
	 : MaskedArray._update_from(obj) : ensure that _baseclass is a ndarray if obj wasn't one already
	 : introduced clip in the namespace, just for convenience
",numpy/ma/core.py,numpy/ma/tests/test_core.py
d6cbaddf167d3c99d4a0aca91fab241e2ae67f90,"Use EquivTypes instead of equality testing for data-type comparison.
",numpy/core/src/arraymethods.c
5345ed1fef98af2ee1253633134f6df47f3a7e04,"Break long line.
Reformat a bit.
Remove trailing whitespace.
",numpy/add_newdocs.py
04bf67f85a353b845ac23bafb87dff5f8c65c827,"Add the out= argument to the clip() function to bring it in line with the .clip() method.
",numpy/core/fromnumeric.py,numpy/core/tests/test_numeric.py
f9e14d93a20a39476cd682e9b46639a4aa5605db,"core : power : mask all negative values when the exponent (b) doesn't satisfy b==b.astype(int)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
c12a094d3d83249cfe742816596ea2b96c347829,"core : power : mask all negative values when the exponent (b) doesn't satisfy (abs(b-int(b))<np.finfo(float).precision)
",numpy/ma/core.py,numpy/ma/tests/test_core.py
8636d9e45565fe75b51efd88ba69d0a3698ab54f,"Moved docstrings to add_newdoc.py; added docstring for the class as a whole which describes __call__. 
",numpy/add_newdocs.py,numpy/core/src/ufuncobject.c
e440221980dedc7f0ecaf4f4f77febe1968975ef,"Docstrings for ufunc methods add, reduce, outer, and the arcane reduceat.
",numpy/core/src/ufuncobject.c
890c8cdef31619faf17ec59e105d8cd47c10fd85,"Test for ticket #551 part of r5140
",numpy/core/tests/test_regression.py
be0d6b02bcb575da26716eb82afa2801a04f4e84,"Additional tests of matrix indexing.
",numpy/core/tests/test_defmatrix.py
20cf50672d6a6ca3e6a7742b9ade62a36c659bb0,"Add some tests for scalar indexing, tolist(), and fancy indexing.
",numpy/core/tests/test_defmatrix.py
bd089c209df73d91fb83e44c8c5c5ad9bda64ca1,"Remove un-needed attribute lookup in 1.2
",numpy/core/defmatrix.py
c32a389417cd22a7fca720f2b1505acbe8560b3d," * Make matrices return 1-dimensional array on item selection for 1.2\n * Remove (now un-needed) tolist method from matrices\n * For ticket #551, copy data if start of memory is not aligned on itemsize location in optimized blas wrapper.
",numpy/core/blasdot/_dotblas.c,numpy/core/defmatrix.py,numpy/core/src/arrayobject.c
7c99e67bb87381a4622cde5e2d244a5f64882485,"core : prevent power to mask negative values when it should not
",numpy/ma/core.py,numpy/ma/tests/test_core.py
a561c0dda3c5c578a12f750af462d9c9b95a61d6,"trunk open for 1.2 development
",numpy/version.py
91c6c401451df57a41e7715c591faedf79ecb581,"core : force .compressed() to return a type(_baseclass) object (usually a ndarray)
	 : fixed a bug in .compressed() when the _baseclass is a matrix
",numpy/ma/core.py,numpy/ma/tests/test_core.py
974b5f54ab552c27ff39e9ae9c63bdfd38c17fbb,"
",numpy/ma/core.py
3682f76224aef4218e65b4aefd9bb428160de6f4,"core : clean up update_from
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_subclassing.py
96b7ac6a2232d81ebdac5c10468423eaef5e7948,"Replace tabs with spaces.
",numpy/doc/swig/numpy.i
0f714da6b0085149b3c16382fc1a7160f02959ab,"Remove trailing whitespace.
",numpy/doc/swig/pyfragments.swg
54a6ea5f084f362394e4cb8feacb9defda59d3bc,"Remove trailing whitespace.
",numpy/doc/swig/numpy.i
1e17c6afc5b0b838bf2dd2b7aa0630cc7ebc2765,"Fix grammar.
",numpy/doc/swig/numpy.i
59bdc5fa4f2ae7425b13d9d33f6776c3d422014f,"Remove dtype_or_type key word in favor of simpler interface.
",numpy/core/src/arraymethods.c
3d336c3ee1143428172d1140925f31e7b9c8fc67,"Suppress test output.
",numpy/lib/tests/test_machar.py
3056ee6f48e54b93e074ab62d8a6fca148b2508d,"Support for Python types in x.view.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c,numpy/core/tests/test_multiarray.py
c402895302b40a13d200dab577d1b2bc108c4879,"Small cleanup and whitespace removal.
",numpy/core/src/scalartypes.inc.src
e285208a309b44ccc88e28c60140474acb7cc83b,"For x.view, change dtype into keyword argument.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c,numpy/core/tests/test_multiarray.py
21a7341b383356ba99c10eda9654a4470e1247a0,"core      : fixed a bug w/ array((0,0))/0.
testutils : introduced assert_almost_equal/assert_approx_equal: 
			use assert_almost_equal(a,b,decimal) to compare a and b up to decimal places
			use assert_approx_equal(a,b,decimal) to compare a and b up to b*10.**-decimal
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/testutils.py
233af718df4cf92bad9b93993e11faba5b6fff26,"Check for error and fix spacing.
",numpy/core/src/multiarraymodule.c
59e7bda0f6d189428b7268e0150709bacde8544b,"Disable underflow warning reporting when testing for arch + test (#759).
",numpy/lib/machar.py,numpy/lib/tests/test_machar.py
240d9a2236213e5439a89bf51cfaf0257bf85729,"Keep singular values and eigenvalues as 1D arrays until the matrix indexing
controversy is settled. This will also keep code that uses diag(ev), from
breaking.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
e4d0d765d1ca1784645d836a865e85e4219b0103,"Fix python_xerbla for compilers that do not have inline strlen defined.
",numpy/linalg/python_xerbla.c
cdc4c0abf4ed941ccfd46f785bfe44ca4aeedad5,"Add comments to savetxt.
",numpy/lib/io.py
e311e8d2d6e5f45184022ecba2f975c81caaca37,"Support for multi formatting elements in savetxt [patch by David Huard].
Closes #663.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
e844ca27a66e34bede3e90b5591d28aa0ae1a0e2,"Code style cleanups.
",numpy/core/src/arrayobject.c
56ec2be60ea1cfba72f79c96ee4151cec7be3d06,"Rename and reformat pythonxerbla.
",numpy/linalg/python_xerbla.c,numpy/linalg/pythonxerbla.c,numpy/linalg/setup.py
28b0f986959cb92abc1e53029c100fb16b555e58,"Site.cfg can still have DEFAULT section (closes #751).
",site.cfg.example
06c0d0e97c7781cc81be38c1d3124890822b303f,"Fix test of lstsqr to work with matrix tests.
Fix lstsq
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
8d915a55c5ecbca15ebaf13584b0c255d22768a1,"Add tests for matrix return types.
Fix cond computations for matrices.
lstsq is currently broken for matrices, will fix shortly.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
82909417beb52eea0568fa04f54188ada227d66e,"Make functions in linalg.py accept nestes lists.
Use wrap to keep matrix environment intact.
Base patch from nmb.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a5b626c2915f3af4897a5a5bd5e29f815810b5c8,"Enclose macros with ifs in do {} while (0).
Lets try this again with clean files.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ufuncobject.h
95235b9fe4587844f72aa7091733f6203875bde0,"Code style cleanups and fix for ticket #743.
Lets try this without corrupted merge files.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
2634ce0819396e55c8ba0e3014c1c22cb722ddac,"Docstring fixes to fromnumeric, to better mirror ndarray docstrings.
",numpy/core/fromnumeric.py
58d85b4b65c2af0187c8049bf41e8834b8a36ffb,"Fix two typos in ndarray docstrings.
",numpy/add_newdocs.py
b660174661898c50139a0712322c997a6f7b118c,"Revert to 5092.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ufuncobject.h
5924d3269887bc27bc5f1ddc5f16e27d12be70b8,"Rewrite most ndarray docstrings: RST-reformat old and add new ones.

Most of the docstrings are adapted from those of the functions in
core.fromnumeric. I edited the ndarray method docstrings to closely match
the function docstrings.

I didn't yet fix the discrepancy in ndarray.reshape and fromnumeric.reshape
docstrings re ValueError raising.
",numpy/add_newdocs.py
f4554bde29debde2d0b814d59c34c19d302580a9,"revert to 5092
",numpy/core/src/multiarraymodule.c
ced3ea354cb10a9c3878b64836e01cf49bce63fb,"Add semicolons to end of macros. This helps editors and such get the
formatting right. Do some small code cleanup.
",numpy/core/src/multiarraymodule.c
97f7b55e469c0e3792b602f5d00ab15ad16f00dc,"Sprinkle some do {} while (0) magic around macros with if statements. They
should lose the semi-colons too, but I don't want to risk breaking out of tree
code.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ufuncobject.h
76d1305986ddcc07aad6bb38550fb06b1ca70be0,"Docstrings: correct description of `dtype` in prod, cumsum, cumprod (was OK in sum, product)
",numpy/core/fromnumeric.py
ba40bc530f9c6c0864cdf61a127d29644ca86cc2,"Docstrings in fromnumeric: very small fixes.
",numpy/core/fromnumeric.py
a7c3802ecc5261e28ec109ebbe836592730d53a4,"Docstring improvements for all, any, alltrue, sometrue, clip, compress + smaller stylistic changes to others.
",numpy/core/fromnumeric.py
319ff6a1df85ae9a7ef9a611ca31f90ab2ed5854,"Code style cleanups.
",numpy/core/src/arrayobject.c
1c89c150f154da809e82c038127d7db8d597225b,"histogram: an error is raised for varying bin widths only if normed=True.
",numpy/lib/function_base.py
b64dbce29b86a1ab206029ae397091e067645ad9,"Added an ignore warning in the test to avoid buildbot messages.
",numpy/lib/tests/test_function_base.py
bb61ebca77749343bea38bcc7e8eaaee667a4f02,"Fix to histogram with respect to block updating.a
",numpy/lib/function_base.py
c4119518e1c77d4699bdedc0f558797828dba1c3,"Modified histogram according to the discussion on the numpy ML.
This transitions from the old behavior to the new behavior using the new keyword.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
bf6e7a7edb1c5173f1a3eb343fbd9e7b25445073,"Revert x[0][0] hack.
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
954e1411c794fa570657f2614912468fe1eabe27,"Add test for numeric type array creation from string values.
",numpy/core/tests/test_multiarray.py
9742ba43e617be68b9b68de5d886b03662b7db55,"Code style cleanups.
",numpy/core/src/scalartypes.inc.src
bbb83c0fe889e5b6c4eecda45b94617102d574f2,"Some cleanups
",numpy/core/src/arrayobject.c
8806030c6f06a39b830d029897fc539eea0d5a2b,"Fix ticket #736.
Try to cast strings numeric types when numbers needed.
",numpy/core/src/arrayobject.c
d78d0521093c70f66c1efbed9f1733782aa200f1,"Coding style cleanups.
",numpy/core/src/arrayobject.c
ceb47025332c1d2500ee0cb8f857ce0ded4a6e80,"removed tests/test_mstat and tests/test_morestats (now available in scipy)
",numpy/ma/tests/test_morestats.py,numpy/ma/tests/test_mstats.py
aefed7ecb1c5f19a1e5dbf426919288ba5fba369,"suppressed mstats and morestats: the modules are now part of scipy.stats
",numpy/ma/morestats.py,numpy/ma/mstats.py
e722d7d95323227b91419c0c92b3c188d205110c,"Fix conv_template to correctly handle nested loops with surrounding code.
Add some template debugging aids.
",numpy/distutils/conv_template.py
8e4c9e125cbe2c12380dffb7fa13d3432b9f7e35,"Add some section headings to the file.
",numpy/core/src/umathmodule.c.src
3e1ebbe5c6f41f27349481f3d9e5735ecd8fe5a4,"Add true nesting of loops to the template processing. The previous attempt
wasn't very useful. Loops can now be nested within each other using
/**begin repeat1 and /**end repeat1**/ and cousins, starting with the current
tags for the outermost loops.
",numpy/distutils/conv_template.py
5d954e2d60155787b9ac1841e5cc02380496bd99,"In C, you shouldn't have trailing commas on the last item in an enum.
",numpy/core/include/numpy/ndarrayobject.h
7b2239fbdfc7c5fdefdfd6eb59dc0ed500aa2291,"Hack to let x[0][0] return a scalar for matrices.
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
1da799e3541679475c63026dbe82f9840d33188b,"__float__ : raises a TypeError exception for arrays longer than 1
__int__   : raises a TypeError exception for arrays longer than 1
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
1e3d6e6af36dad10ff4e59d425babc8f6568c9d7,"Add regression test for changeset #5065.
",numpy/core/tests/test_regression.py
1bb122619c2f10818f8d66c591e79fe6b4a9b3a2,"Fix double line in MANIFEST.in.
",MANIFEST.in
3063ef66633bb5c029b30791a2ca2cb09a692c91,"Add some files in MANIFEST.in which cannot be picked up by distutils.
",MANIFEST.in
5e879e5438cbd1338b89fd6224844289ed80bad4,"Does not replace g++ by c++ compiler name.
",numpy/distutils/command/scons.py
99f7707f80dafab4709fd4e833766a24a40ecfc7,"Add nested loops to the template processor.
The syntax is to separate the nested loops with lines containing strings
like

#repeat = 1#
#repeat = 2#
...

The number doesn't really matter, but it helps document the depth.

Example:

The file containing

/**begin repeat
 * # a = 1,2,3#
 * # b = 1,2,3#
 * # repeat = 1#
 * # c = 1,2#
 * # d = 1,2#
 */
@a@@b@@c@@d@
/**end repeat**/

produces


#line 1 ""template.c.src""

/*
 *****************************************************************************
 **       This file was autogenerated from a template  DO NOT EDIT!!!!      **
 **       Changes should be made to the original source (.src) file         **
 *****************************************************************************
 */

#line 8
1111

#line 8
1122

#line 8
2211

#line 8
2222

#line 8
3311

#line 8
3322


",numpy/distutils/conv_template.py
54b45e71fdf03556c39a27e53751d3199d21d64c,"Make None be NaN for float types.
",numpy/core/src/arraytypes.inc.src
0a6d8a6b0c44fcf58f126d060840d8a0baf7e240,"generate_umath.py: move chartoname higher for documentation purposes
(i.e., make it easier to answer the question, ""what's ? or M mean?"")
",numpy/core/code_generators/generate_umath.py
487612c85b7d23c81798e1cf71d39ac223204fd4,"Uncomment tests for PyUfunc_O_O_method and PyUFunc_OO_O_method.
",numpy/core/tests/test_ufunc.py
772b0dab26370a36c3774049ad50315fc953c07a,"Fix incorrect output types for some ufuncs.
This fixes ticket #747.
",numpy/core/code_generators/generate_umath.py
44b36da4d046838869605f742655c293eb2d204e,"Scons build: put builders creation into scons_support, and add action strings for silent modes.
",numpy/core/SConstruct,numpy/core/scons_support.py
a37458b57cda4d1eb242c740699d9bd76a03643b,"Do not show the whole scons command for silent modes.
",numpy/distutils/command/scons.py
9e68e5d18e4cb63a26a655a433d700bf61e0548f,"Do not specify target names for generated code, because it is not needed.
",numpy/core/SConstruct
b053e86e4df4ab367604f26907e058c0b0527c30,"Expand tab in core scons script.
",numpy/core/SConstruct
563656f8dfb6c290146b27d6e5ea422b6104b245,"Generic loop cleanup. Cut and pasted from template generated file.
",numpy/core/src/ufuncobject.c
462f65aab4800237ad5c2da675010856da4e945c,"mrecords: clean-up
core: MaskedArray.__setitem__ : when hardmask is False, force the data to be updated before the mask.
core: MaskedArray.round_ : fixed to keep the dates on TimeSeries
core: round : simplified
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
8c663313de36e860bbfea0909de181d330bfdfc7,"ran reindent in preparation for the 1.1 release
",numpy/__init__.py,numpy/add_newdocs.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/memmap.py,numpy/core/numerictypes.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/distutils/cpuinfo.py,numpy/doc/newdtype_example/example.py,numpy/doc/newdtype_example/setup.py,numpy/lib/financial.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/tests/test__datasource.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_io.py,numpy/lib/tests/test_regression.py,numpy/lib/twodim_base.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_regression.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/morestats.py,numpy/ma/mrecords.py,numpy/ma/mstats.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mrecords.py,numpy/ma/testutils.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/ma.py,numpy/testing/utils.py
cb7de97f089b67eaacf37ddbebcfb91c292c0ef4,"Reverting r4481, see #723
",numpy/distutils/ccompiler.py
7592038573ef5396d401d623fe8012c09733e8ea,"Make the object loops tests less susceptiple to reference counting errors.
The tests are still counting errors, and I may change these back when they
are fixed.
",numpy/core/tests/test_ufunc.py
09a1d563ab75704005420ffc727910ed6a6b4fdb,"More clean up the generic object loops.
There is a reference counting error in the code that calls these loops.
",numpy/core/src/ufuncobject.c
8081338dbaa20fd2f5a073969ab658d9f398e196,"Cleanup code style in generic ufunc loops.
",numpy/core/src/ufuncobject.c
a4923caef62ee235f9c7e3f5df752b21262407ee,"Add tests for generic ufunct loops preparatory to some code cleanup.
Two tests currently fail and are commented out.

PyUFunc_O_O_method -- fails
PyUFunc_OO_O_method -- fails
",numpy/core/tests/test_ufunc.py
b4be3779d4f5d71863affebc3cd601520cc5c907,"Fixing #738: Even more careful drive letter handling. And make the tests actually pass on Windows.
",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py
3888ac43981790e5bedf4b4c040e7373f724652f,"Fixing #738: remember to sanitize away also Windows drive letters
",numpy/lib/_datasource.py
5fc5deb1d60e83c9d15fb2f8d623dbef52751e3b,"Fix bug #738 and add corresponding tests.

lib._datasource.DataSource.abspath now sanitizes path names more carefully,
making sure that all file paths reside in destdir, also on Windows.  (Where
both '/' and os.sep function as path separators, as far as os.path.join is
concerned.)

",numpy/lib/_datasource.py,numpy/lib/tests/test__datasource.py
db8970d31304fe06bdef3abed9e95d8f67d2729f,"Fix bug in parsing initexpr in 'INTEGER, PARAMETER :: ny = nx + 2'
",numpy/f2py/crackfortran.py
376a36e792d160b1db7267c4a49edb39ef53c1bf,"Cleanup white space, fix a spelling, align some comments.
",numpy/core/src/arrayobject.c
2d69b480bae8f9045a6c9876e55f6d1a3216b05f,"Fast implementation of take [patch by Eric Firing].
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
44e4ead674e12013b4e34b5a99f545fab64116e3,"Add comments to numerictypes.py about what the 'kind' field of dtypes can be
(Also see the DtypesKind page on the numpy wiki)
",numpy/core/numerictypes.py
e653089a814b89dc73c08123ded75af4d3b37d17,"Correct dependency on missing code.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0d6981095ca7855eafa2118cf4a39baff16475c1,"De-obfuscate some test code.
",numpy/core/tests/test_multiarray.py
ddde39b22effbcd4799dc2dd4a229dcac0964205,"Don't require gzip or bz2 until the actual functionality is requested.
",numpy/lib/_datasource.py,numpy/lib/io.py,numpy/lib/tests/test__datasource.py
6e78d7dde1bc3f6247afde492bae4ae830e95d65,"Use the default terminal colour to print out INFO messages in distutils. 
This prevents visibility problems on backgrounds other than black.
",numpy/distutils/log.py,numpy/distutils/misc_util.py
49a26ff5e3bec2d20699eb46a1f8fdb819db998e,"Include ""sudo"" as part of system-wide installation instructions.
",README.txt
13f9b4a8fb920c90d9f57de074794ea0c5782f10,"Added and fixed some tests for loadtxt and savetxt. Cleaned up the docstring of savetxt, added some info on formatting.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
3b6397f2e992c5f061e0b954681443f989f7a7d7,"bumping version to 1.1.0 to signify the minor API breakage and numerous new features
",numpy/version.py
8efa5d9150fd954459f7400694e228b7f3a67af8,"Test for r5034.
",numpy/core/tests/test_regression.py
1a39332163582f3a5914160cf51f85b2aba3bb6d,"Fix up swap choice for FillWithScalar.
",numpy/core/src/arrayobject.c
4e8e2b5f0d2196cf37b4c4472b01090c617470d6,"Remove R files?
",numpy/ma/.RData,numpy/ma/.Rhistory
8bf74cc2b5c64ba5ade27650bcaa56c29eba0065,"core:
fix_invalid : use isfinite & skip setting a mask is there's no invalid data
_update_from: force the default hardmask to False (instead of relying on class default)

extras:
cleanup

mrecords:
modified to meet new standards (import numpy as np)
__array_finalize__ : skip the call to _update_from and directly update __dict__
__setmask__        : allow an update from a valid fieldmask
mask               : as recognizable property
",numpy/ma/.RData,numpy/ma/.Rhistory,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mrecords.py,numpy/ma/tests/test_mrecords.py
221f6d7b1a3d831bf189d2ef8a9209780fcd4945,"Add one more level for silent modes in scons command.
",numpy/distutils/command/scons.py
1a18d623be2341f596025ad4e1544c36484ac700,"Make integers smaller than Long convert strings when possible.
There is still a problem with the dimensions of the resulting array,
but that problem is in the array creation code.
",numpy/core/src/arraytypes.inc.src
45be95fdef82f2bc8de2eb99ed3c9f704306badc,"Simplify code in MyPyFloat_AsDouble and MyPyLong_As*.
Add MyPyLong_AsLong.
Use code generator for repeated code.
",numpy/core/src/arraytypes.inc.src
f7e4d33ce5bdc0b7538d23819d5ab0788b4f556a,"adding abreviation for pyplot
",numpy/doc/example.py
823aed7b2324feb1d8e4bd52504e8bc86309126a,"Reindent. Needs style cleanup too.
Small cleanup of MyPyFloat_AsDouble.
",numpy/core/src/arraytypes.inc.src
65dd4ae929241c813e7a9b700ead46d68b20821f,"Fix fromregex, add documentation and tests [patch by Pauli Virtanen].
",numpy/lib/io.py,numpy/lib/tests/test_io.py
1ea80052ca6a9af37c82221a275944753fbfe2be,"Compare against native-endian types, not endian-specific types.
",numpy/lib/tests/test_io.py
a0726b5501d00aa4719d8172e75bc199fe62baf1,"Add lookfor function from ticket #734
",numpy/lib/utils.py
3811cb8173bfd05396b231696ccbab210a43129c,"Add one more test from ticket #728
",numpy/lib/tests/test_index_tricks.py
445f8e4b23fc75d76d4b6f1738aba54bab536a30,"Remove debugging. Python 2.6 still raises ValueError for bitwise operations
involving floats, as it should. Numpy doesn't.
",numpy/core/tests/test_regression.py
7e1350d016684adbb13bd13ca8a62d0a716e71d0,"Fixed #728 scalar coercion problem with mixed types and r_
",numpy/core/numerictypes.py,numpy/core/tests/test_numerictypes.py,numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
cb7f01c247002a6921d9a247d60bacf2db3cd39b,"More debugging.
",numpy/core/tests/test_regression.py
71e14f58518590b6a7bb580331ff9cf412527db2,"More debugging.
",numpy/core/tests/test_regression.py
82e196a4e3c4c74b7d0915caa4d55e3c0556e11a,"More object casting debugging.
",numpy/core/tests/test_regression.py
d798d8e83dce825c1846f6c1f337151f97d9273b,"Debugging test for check_object_casting.
",numpy/core/tests/test_regression.py
7174467a3d116577b16305037d472723f0e259bd,"Remove test of repr precision for longdouble. This varies between compilers and
at some point may vary between architectures when quadprecision gets loose in
the wild.
",numpy/core/tests/test_regression.py
78395908c36a1ba7a5e8b41df83ecf05a4944112,"Add test for precision of longdouble repr. Need to add tests for all printing
precisions.
",numpy/core/tests/test_regression.py
eddda265c644fb3b529e655e1cb4607149d020fc,"Fix missing format code so longdoubles print with proper precision.
",numpy/core/src/scalartypes.inc.src
afa44063ca0ff29e39de5d7c2b6424838f6a0cec,"Add functions for str instead of defining them to the same as repr. Reduce repr
precision of longdouble to 20 and set str precision of longdouble to the same as
double. This is a first cut at looking through the formatting used to print
numbers. 

The precisions are now

#define FLOATPREC_REPR 8
#define FLOATPREC_STR 6
#define DOUBLEPREC_REPR 17
#define DOUBLEPREC_STR 12
#if SIZEOF_LONGDOUBLE == SIZEOF_DOUBLE
#define LONGDOUBLEPREC_REPR DOUBLEPREC_REPR
#define LONGDOUBLEPREC_STR DOUBLEPREC_STR
#else /* More than probably needed on Intel FP */
#define LONGDOUBLEPREC_REPR 20
#define LONGDOUBLEPREC_STR 12
#endif

This line, and those below, will be ignored--

M    numpy/core/src/scalartypes.inc.src
",numpy/core/src/scalartypes.inc.src
032390044e1d990da1b571b9a8f150464e479d67,"Fix a long-standing typo preventing the build of scipy.stats.mvn. Sorry Stefan, no unittest; the original code is not amenable to unittests without a large refactoring.
",numpy/f2py/crackfortran.py
34e3f4966dcbd14094e00b11f6379f5c13a7c6c1,"Fix issue 715.
",numpy/distutils/interactive.py
be25d94bfc6f72535700432e87a52e4a15f0f8f5,"Add check for printing complex dtypes, closes #693.
",numpy/core/tests/test_regression.py
5e37d1c1082b4e2f1783b7b9cf28c28ed5e5a696,"Fix bound in error message. Patch from Andrew Straw, fixes ticket 732.
",numpy/core/src/arrayobject.c
74ed7dd2248c5dc48b08901c20f616416f1b922c,"Add the cached Gaussian to the state tuple. Preserve backwards compatibility with the old state tuple.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
9b56ad4cb0ab15aaad0d6699393387ec7ff79caf,"Fix #581.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
7e0f986f1db836026348adadec555f32522008f5,"Fix vander docstring.
",numpy/lib/twodim_base.py
5704671300f3376b2ba709f50a812ed682a11503,"Add test for string to float conversions of various types.
",numpy/core/tests/test_regression.py
1e566330006641057b35a8a8c3a601f6832f32d0,"Apply patch supplied by philbinj to fix ticket 630.
",numpy/core/src/arraytypes.inc.src
7051296775c4b41a79e66bc6c8527926d2e3c90c,"Fix import error.
",numpy/linalg/setup.py
9af440d8d7d2dc7b6ecf254ee1150f03d090cb6a,"Disable  pythonxerbla.c patch for win32 (the MSVC linker failes on multiple defined symbols) when using optimized lapack.
",numpy/linalg/setup.py
72bc6f7a7f92a3138ed0749a56fad47de9517485,"Fixing compile error from MSVC. Try 3.
",numpy/linalg/pythonxerbla.c
ef7d8ef5af67c2c1671d655e2ab796271f664aec,"Fixing compile error from MSVC. Try 2.
",numpy/linalg/pythonxerbla.c
338ae1945ab337d49c816660f0afb4398d721caf,"Fixing compile error from MSVC.
",numpy/linalg/pythonxerbla.c,numpy/linalg/setup.py
67963933a1be0bb789842780640c52e8b3d6ae28,"Cleanup.
",numpy/linalg/pythonxerbla.c
6a94903ebb5697192c228c91b4a5f9c5507f2cff,"Apply modified patch from ticket 673. The patch is effective when using unoptimized lapack shipped with numpy [tested] or if optimized lapack library does not have xerbla_ defined [not tested]
",numpy/linalg/blas_lite.c,numpy/linalg/pythonxerbla.c,numpy/linalg/setup.py
e50fa8e71482160e31d99a3561a433d06217f4c7,"Fix issue 587
",numpy/f2py/auxfuncs.py,numpy/f2py/rules.py
bda689eb9b31e7b8b9c852d2a4c9ea261fa4810e,"Regression test for ticket #714.
",numpy/core/tests/test_regression.py
5e31a42c49f8fee87388cd33baf891d3f0010157,"Add up to date (and slightly cleaned up) support for Cython after porting
the existing Pyrex one, put in deprecation markers in the old Pyrex dir.  

The pyrex dir can be removed in a subsequent commit.

",numpy/doc/cython/MANIFEST,numpy/doc/cython/Makefile,numpy/doc/cython/Python.pxi,numpy/doc/cython/README.txt,numpy/doc/cython/numpy.pxi,numpy/doc/cython/numpyx.pyx,numpy/doc/cython/run_test.py,numpy/doc/cython/setup.py,numpy/doc/pyrex/README.txt,numpy/doc/pyrex/numpyx.pyx,numpy/doc/pyrex/setup.py
0b0a389d1dfb6d76e053988d87f6434c81dd5ba5,"Added test for handling missing data using loadtxt.
",numpy/lib/tests/test_io.py
737f9a1a916ec6a341657faed5c849176ed8828f,"Formatted the docstring. Added comment regarding the handling of missing values. Addresses ticket #717.
",numpy/lib/io.py
e4c01f2a5657a42a9dd59bcf7eb6e94a81d16c72,"Improve empty_like and zeros_like to respect sub-type.
",numpy/core/numeric.py
b21be67447392e59eace316f8708c4e17fa70a35,"Fix doc-tests for financial.py so they don't rely on floating-point exactness.  Start filling in final function.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
e4e3018081ad2ab92850ca246ec25dda754c0184,"Added function for computing condition number, with tests and docs; closes #622.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
2ba8132b518e08c6b25e54df0a025cf9aa006f06,"Fix test for assert* with nan values + string formatting issue when handling nan.
",numpy/testing/tests/test_utils.py,numpy/testing/utils.py
0035f9187945a7d787bcadad38cfb84ca196bc18,"Improve comments.
",numpy/lib/financial.py
7d51a22a398230cf095eee397aea1a8ffd73c10a,"Add docs and examples for financial functions.
",numpy/__init__.py,numpy/lib/__init__.py,numpy/lib/financial.py,numpy/lib/tests/test_financial.py,numpy/ma/API_CHANGES.txt,numpy/ma/README.txt
04fdbe54df00293b259458e31fa8d66a6c42c188,"Handle nan in assert_array* funcs correctly. All numpy tests pass
",numpy/testing/utils.py
bfc33fd7cfef5f74d73f6df0282660e26d761942,"Add basic tests for assert_array_almost_equal.
",numpy/testing/tests/test_utils.py
7e107ac18375868d8a430329c9d1237b4aaa684e,"assert* funcs: Add generic test for rank 3 arrays.
",numpy/testing/tests/test_utils.py
ca295deafe01d224fd1f03dc60b2af182c3c6fe1,"assert* funcs test: add generic test for rank1 arrays for all dtype.
",numpy/testing/tests/test_utils.py
dff402067c11e6bc82ce5cd8c344024f51095551,"Test assert* funcs for arrays with Nan and rec arrays.
",numpy/testing/tests/test_utils.py
dd33570b5975588b10dbfb910c2fac8bb796807a,"Some more tests for assert_* functions.
",numpy/testing/tests/test_utils.py
640018fac45026b3fd70846c62297bfedac5afa3,"Add the tests in setup file for testing package.
",numpy/testing/setup.py
e18fb0b5eecbd5bd54c1e19a7673ecfb71bb19cf,"Start testing test functions.
",numpy/testing/tests/test_utils.py
8ec87751bf69a3ab3e15c72825a70c08f884b5bb,"Revert comparison function; nan handling broken.
",numpy/testing/utils.py
9842632311a9e38a34c740617f308e7926fd9b71,"Fix broken detection of nan in comparison function.
",numpy/testing/utils.py
51f83997e34aedc774a505dc7e3d9980dd1362f2,"Handling nan values for assert_ functions.
",numpy/testing/utils.py
a5574c3dfef52b36e50dc060c46fbb491f2b2aa2,"Fix maskedarray's std and var of complex arrays, with test. Add test for ddof.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
99cbf12fd2b9c2c91b1e64bcc1cef19fcf120f6f,"core: 
compressed    : make sure that the result is always an array.
count         : make sure that a regular ndarray is returned.
added the get_fill_value function

extras:
added the expand_dims function
deleted varu/stdu (redundant with the ddof=1 parameter)
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/mstats.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mstats.py,numpy/ma/tests/test_old_ma.py
d1e8d753b84c355c9a57e062d0b9c3a6c23c617e,"Documented  and tested new behaviour of std and var on complex numbers. Added ddof argument and its documentation to the std and var methods of matrix. Documented ddof for std and var methods of ma. Note that stdu and varu in ma still have the old, peculiar, behaviour for complex values.
",numpy/add_newdocs.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/tests/test_numeric.py,numpy/ma/core.py
5b82c49ff6b1d5fdb47835fe886a25bf5a324962,"Test that matrix_power behaves correctly for boolean matrices.
",numpy/linalg/tests/test_linalg.py
2058775cdf40c5ae5c4ac2c3f44a37fee7c6bc99,"Remove redundant check because PyObject_TypeCheck already includes an exact check.
",numpy/core/include/numpy/ndarrayobject.h
f339b6c31419e77f576e8b2364e186db546135e7,"Factor out matrix_multiply from defmatrix.  Based on a patch by
Anne Archibald.
",numpy/core/defmatrix.py,numpy/linalg/info.py,numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
c24510c81f54547dbc48f1c60b01d0109a967af1,"Add tests for ddof parameter in var/std [patch by Anne Archibald].
",numpy/core/tests/test_numeric.py,numpy/ma/tests/test_core.py
3c26a66973355f28bc6ab159803fe68a72e7c95f,"Add tests for changeset 4822 [patch by Anne Archibald].
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
481c25db0deba1a0405f1b8ea4df2172eae48ed5,"Test effect of newaxis indexing on array scalar.
",numpy/core/tests/test_scalarmath.py
af8556593f4a4ce5e79926463a2c00bd9bd298b7,"Use newly available emitter in numscons to handle distutils build dir issues instead of setting them manually in scons script.
",numpy/core/SConstruct
1983fc092b94c73f32f702fc14b7506979275964,"Replace Copy by Clone call in scons script (Copy is deprecated).
",numpy/core/SConstruct
f2e6d8e233d380133d8e3504272b3ed0554bfaa4,"Modified io._getconv to allow loading values stored as float as integers arrays. Added test to check the behavior as suggested in the comment from b. southey in 
ticket #623
",numpy/lib/io.py,numpy/lib/tests/test_io.py
343841340122a5c5bd2071584e81ad8e027e6389,"Add modified internal rate of return calculation which is more conservative and takes into account re-investing profits and expense of financing losses.
",numpy/lib/financial.py,numpy/lib/tests/test_financial.py
effc09b20ea3146d3dcfc6884b4321ddf1638cb5,"Add fromregex function (needs more testing) and some simple spreadsheet-like financial calculations.
",numpy/lib/financial.py,numpy/lib/io.py,numpy/lib/tests/test_financial.py
d396f126cc9ac2f215c1363a8f8650d6c4e6c161,"Fix typo.
",numpy/oldnumeric/ma.py
4f8d0c88ffb66e7ea064a4b1ef77112fbbedae0f,"Fix typo reported in #637.
",numpy/core/src/scalarmathmodule.c.src
1b8a670793e06d3450bacc499fad5f074a95c8e7,"added 1D tests for loadtxt and savetxt. Fixed a bug
",numpy/lib/io.py,numpy/lib/tests/test_io.py
8784a1abd5c74dbd134a04a4bcd0f050fe650ed6,"Fixed a bug with loadtxt and savetxt failing on record arrays. This addresses ticket #623. 
Added simple tests for loadtxt and savetxt.
",numpy/lib/io.py,numpy/lib/tests/test_io.py
5fc40c054140b8f43eb2838f892367ca05bcf302,"Fix mean docstring.
",numpy/core/fromnumeric.py
07628857fab36890bd2755ed52785f3493d64bb8,"Fix-up a few errors in oldnumeric.
",numpy/oldnumeric/ma.py
f4fd214af0c24c2a7f49c5c05f1430d803c54b01,"fix-up imports in oldnumeric/ma.py
",numpy/oldnumeric/ma.py
87af946ca8245c3f974725eb1ef2e76f0850aca2,"Add old ma.py interface to oldnumeric compatibility layer so that it stays the same.
",numpy/oldnumeric/ma.py
b9f87253a6b5a2354d1b406e81c6d918035421b2,"Longdouble printing of nan's causes problems on some machines.
",numpy/core/tests/test_scalarmath.py
5827ec12fb37380b8fd61f92922ce54c0d9c1cb1,"added common_fill_value and set_fill_value in __all__
",numpy/ma/core.py
a0cac20e505b759030058a1aebca3b2a5ebcc158,"Add test for fix to #713.
",numpy/core/tests/test_regression.py
b8f582defd3c10e5e38018970bb52ab693951dfa,"Fix some Py_INCREF's to Py_XINCREF to avoid segfault when NULL is stored.
",numpy/core/src/arrayobject.c,numpy/core/src/ufuncobject.c
b30372185f472b29d4b2ac3f703359b9376a8b60,"(forgot to get rid of my personal tests... sorry about that)
",numpy/ma/core.py
3474b706e27054927ddafb39e88a0b0691c89227,"new methods   : round
new functions : frombuffer, fromfunction, identity, indices, trace
to fix        : fromfile/tofile raise a NotImplementedError. For now.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
738f70ab57a85eae61b0da2045b9d16bd84667e5,"Change var and std for complex valued arrays to compute z*conj(z) to match signal processing convention.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarraymodule.c
02ea9dd3d3a8f019dd15b103f5da4a870dc98158,"Fix ticket #676: flattening in Fortran order for ndim > 2
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_scalarmath.py
620653b708d24c457256dc9c10996172cc4811d9,"Add better test for inexact numbers.
",numpy/core/tests/test_scalarmath.py
084582bde0d5a6ce4bcd66459121e3cdecff78b7,"Added patch from ticket #610 to allow floats in interp.
",numpy/lib/function_base.py
53cf422a4647cbd97ef7118a22bf963295fd0ad0,"Fix typo from last checkin.
",numpy/oldnumeric/compat.py
a9a3a8cc1b7d4104f8b999f98b5507094d017d3a,"Improve support for old pickles.
",numpy/oldnumeric/compat.py,numpy/oldnumeric/misc.py
4d1418a40e88b5c31588d2e7020a4a999667e08c,"Add regression test for PyArray_FromIter issue mentioned on list.
",numpy/core/tests/test_regression.py
48632507c491cb5e5307e53dd71956d717fe8419,"NotImplementedError is the exception, not NotImplemented
",numpy/oldnumeric/misc.py
e2488d6b15e06cfbf603c72a99cf03006d2a89d6,"Do not fail test when ctypes is not available; print a message about skipping the test instead.
",numpy/tests/test_ctypeslib.py
48256603928421062e8d3f6b1c9ccb4a9d623277,"Fix ReST syntax in HOWTO_DOCUMENT.
",numpy/doc/HOWTO_DOCUMENT.txt
59cf27d758b0b2d929e281c3f6ac6316b6c53479,"Add numeric doctests (patch by Gael).
",numpy/core/numeric.py
1a159d133f47e10ccad61b0317f9acc72cca93e1,"Remove broken ma test.
",numpy/ma/tests/test_old_ma.py
c3363544baaee4c88c29320bae5f72786d890475,"mimic gcc driver detection for nocona cpu detection.
",numpy/distutils/cpuinfo.py
c0c85e05ee4f4e3ee4ad38084f7443b58451a90a,"Revert accidentally commited changes to TestLoadLibrary unittest for ctypes.
",numpy/tests/test_ctypeslib.py
8eed71c4f3f7ce0d394db3741facb2f15ed2459e,"Fix has_sse3 and add has_ssse3 function for cpuinfo on linux.
",numpy/distutils/cpuinfo.py,numpy/tests/test_ctypeslib.py
5cb370e9234582f62231384c26a426301dad3331,"core    : fixed sort when axis is None
mstats  : fixed mmedian, renamed to median and moved to numpy.ma.extras for compatibility
extras  : introduced median from mstats
mrecords: * fixed __array_finalize__ to keep the mask of a masked array when viewing it as a mrecarray
          * simplified _getdata
",numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/morestats.py,numpy/ma/mrecords.py,numpy/ma/mstats.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_mstats.py
a70012ade70ba9912061ad2bac3e2a8196c72823,"Fix order of arguments to test.
",numpy/core/tests/test_scalarmath.py
004082f81f89021deb931f8da1b4db1aaed87806,"Fix comparison to 0 in scalarmath test.
",numpy/core/tests/test_scalarmath.py
50252371ea6dea7b73ca4cf4740ba11618263a25,"Add test for ticket #632.
",numpy/core/tests/test_regression.py
28051478f847c7d62a219484e6d2114adc7bf102,"Add test for #629.
",numpy/core/tests/test_scalarmath.py
f49d66a0694c67881db9ba730bc67ef72eb502d6,"Fix typo.
",numpy/core/tests/test_regression.py
23779dd17d69df173fb7e289231ed5354f30b4ad,"Move test for #562 to the right place.
",numpy/core/tests/test_regression.py
50a40534484d4797eab36e22561e0637f519d2bb,"Add regression test for ticket #702.
",numpy/core/tests/test_regression.py
64d31855e5168513d343a4478a4805ac3fe9927a,"Add regression test for #555.
",numpy/core/tests/test_regression.py
568bbbfb57eeafa9af7f596f15720b37e374f0f2,"Add test for #583.  Fix invalid test for #99.
",numpy/core/tests/test_regression.py
fd1cbdfd4f32834e813391e546dbc31fb51287d9,"Include patch from jsbronder to fix ticket #644 related to nocona cpu detection.
",numpy/distutils/cpuinfo.py
b2bbe268dd106b5c8252cc0d9ebf31b26dc19c5b,"Re-generated the pyrex mtrand code after fixing seed setting bug: ticket #555
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
a3e609899fa2a70ac63561b58238254367161e1a,"Attempt to fix ticket #555
",numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
7081815127bdc70c02da977103d6794a35e164b8,"Handle typo (sse3 vs ssse3) in the cpu arch flags as found in /proc/cpuinfo for some linux kernels (at least 2.6.23).
",numpy/distutils/cpuinfo.py
466fa4bf1321facfd80c08e93c512c479658ab25,"Add VisualCompaq compiler to the list of fortran compilers if platform is cygwin.
",numpy/distutils/fcompiler/compaq.py
6e6c5c4fdb6548ef6eae953ce453a1a89c290fc1,"Fix ticket #583 : error when using str as data-type for fromiter.
",numpy/core/src/multiarraymodule.c
5696770c67bf565a6fbfbbd238b8a3339b6ca6c6,"Change iteration loop number to a defined value and increment it.  Should fix ticket #706.
",numpy/linalg/dlapack_lite.c
f8fb34d270d33f268bc89ecc8f64322dc6d0a928,"Comment out NotImplemented error when using setup tools.
",numpy/distutils/core.py
dd868d86c0080a2f73341fdd8da960c2af6318d9,"Fix ticket #702 (as well as other speed ups).
",numpy/core/src/arrayobject.c
3ee085282a5d5601ce310d56e3e4688a6872fc40,"Fix reference count problems due to indiscriminate use of DescrConverter in PyArg_ParseTuple.  Tests need to be run to make sure this works.
",numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
e949b18d828d799619fabd27476e05edf35d0d02,"Fix ticket #670.
",numpy/core/src/ufuncobject.c
be077dafb8ed2b9dc30f925868612cf7d7f56a2b,"More complete fix to #647 so that fast copy is not attempted on portions of record arrays.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
9b9fcfc21898b8b27d28cde951da580ed706c082,"Add regression test in Ticket #711 which is the fix by pv
",numpy/core/tests/test_regression.py
e26b067d39b66461018632c32fcd6e31df57ae9a,"Fix ticket #711 by more carefully guarding object array reference counting.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
4a562edd4f1753238e3e8bc32a7a0028ff16ceb7,"Fix reference count pattern for object arrays so that a decref is followed by an incref on the *same* array.  This should fix reference count issues on object arrays.
",numpy/core/src/arrayobject.c
a5f7aaf6ff0cdd90d8792fb176b7f67cb75207e0,"Revert r4897, which fixed one memory error in exchange for another.
",numpy/core/src/multiarraymodule.c
971218b462b888ea045ab78edae7d36f35dcbaf9,"Add regression for #627.
",numpy/linalg/tests/test_regression.py
ea1b8365a1f77e4c23f8289144a554517cac02c8,"Add regression test for #662.
",numpy/linalg/tests/test_regression.py
51a6dc75ae5f6e428493bba7e49150a3d6705aa6,"Add regression test for ticket #652.
",numpy/linalg/tests/test_regression.py
948e08633e9407f5a3ef459a10b48eec30712f39,"Add regression test for #628.
",numpy/lib/tests/test_regression.py
c9e6f3025b235055336cb5a05c170128e0ec9a91,"Fix typo (bug #704).
",numpy/distutils/command/build_clib.py
344a859f2398e5f63ecfdd7eb1a4614c3477725e,"Fix memory leak in _copy_from0d.  Investigated by Matthieu, patched by pv.  Closes #633.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
bb41c670c9cd289a9d5967a6d239319542565f16,"added docstring to diagflat.
",numpy/lib/twodim_base.py
51a622241b5bdfa3ec88fa0dc41ac1a7558a51e2,"Fix memory leaks as reported in #562.  Patch by Matthieu Brucher.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
029167629eaecf7ab33e02b4fc2f39a0914bc5af,"Remove check for OverflowError in intp test.
",numpy/core/tests/test_regression.py
4f9812e079bf6331f99b6ba2b18836ad7b707636,"Fix typo.
",numpy/core/tests/test_regression.py
cde8f10cce8762758792a1181287eea55fb14b61,"Fix another occurrence of intp in the regression tests.
",numpy/core/tests/test_regression.py
f92decf923d2b62facb7eb968f624184a21eb1e3,"Fix test for intp conversion on win32 running 64-bit hardware.  Intp is a numpy
type, and does not allow two parameters in the constructor, unlike the Python
integer type.
",numpy/core/tests/test_regression.py
004d77e503d8c0cabb5d87b03a4ce0bd8bd4cad0,"In site.cfg, change DEFAULT section to ALL to accommodate building on Python 2.6.
",numpy/distutils/environment.py,numpy/distutils/system_info.py,site.cfg.example
98072488e6893f1ef8fdc32d994f08602542b5b3,"And add bincount to error message.
",numpy/lib/src/_compiled_base.c
8ae9e39197f0c158a0b3bb0b2de09c4bafd26e4e,"More typo fixing.
",numpy/lib/src/_compiled_base.c
fd291caf228d29e94ceed869efd6dbd9f9e27f2f,"Fix histogram references in arr_bincount.
",numpy/lib/src/_compiled_base.c
4482e5fdbcbde307ac5a7bd3a3d014101129f4fd,"Clean up of average function. weights now should have the same shape as a, or be 1D with length equal to the shape of a along axis. A number of tests are added.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
38ad50efa0e871e8f0e17babe015242a19b13d58,"reverted to a proper version of __getitem__
",numpy/ma/core.py
c70befd85326cd6be09877011b14278d081caec0,"- fixed masked_where (bug #703)
- simplified 'masked_invalid' and added it to __all__
- added the 'out' optional parameter to .mean
",numpy/ma/core.py,numpy/ma/tests/test_core.py
ac13c0370dcce1d6b2f02068392ff578d43a7a8b,"Get actual and desired in right order in tests.
",numpy/core/tests/test_umath.py
6d98ace597c46a6cc615a1da61b7f91be93f0d2e,"Ctypes loads .so/.pyd if library is not found.
",numpy/ctypeslib.py
4b76f6253521f5dd7b6cc1be890f2e4cb08f3ac6,"Fix multiarray from/to-file test under Windows.
",numpy/core/tests/test_multiarray.py
faad13f023d20dc5c2c15d47c3b42c3181f0f563,"Use a more accurate expression for arccosh of complex numbers. The
implementations of the other special functions should be examined to see if
similar improvements can be made.
",numpy/core/src/umathmodule.c.src
e99ac6619fc99a94c5fdad9e8a4134191ede2f8a,"Fix arccosh for complex. The previous implementation could take the sqrt of a
number on the branch cut of sqrt, leading to roundoff problems. This seems to
have come about because the formula was derived using the non principal branch
of the sqrt, i.e., it used 1=(-1)*(-1).
",numpy/core/src/umathmodule.c.src
49a78cce45871f6df1c27bad474f02ff0c2f9d54,"Add tests for consistency of complex ufuncs of different precisions.
Rename some tests so they actually run. We've been missing errors.
Arccosh currently fails. IMHO, we use the wrong branch of the complex function
and I won't change anything until we decide on the proper usage.
",numpy/core/tests/test_umath.py
d76f7cf48d6a2e0780d28fa0f8d94a321f52cf82,"ticket 641
Fix unary ufuncs for clongdouble.
Still needs test functions.
Needs verification that it fixes the segfault.
",numpy/core/src/ufuncobject.c
07ed95fe7749820558abbf08b51f74bb3f014984,"Change ValueError to TypeError in average
",numpy/lib/function_base.py
345b13d6c8e023fb4c449cf5df2b140de2ce48ec,"Fix average to preserve matrices.
Fix average documentation.
",numpy/lib/function_base.py
9318f7ac788958fed43d7a15c852c2e93d310382,"In ctypes.load_library, also attempt to load .so files on failure.
Build processes sometimes produce libraries with incorrect suffixes on
non-linux platforms.
",numpy/ctypeslib.py,numpy/tests/test_ctypeslib.py
94766ae3c56a23ef8de7f2c7c2853029078d09f1,"Add pkg name at the beginning of logging scons call.
",numpy/distutils/command/scons.py
d40e56512bde10b0cb1a698257bbc3f42de02106,"Rewrite average and document it.
Remove inappropriate test of average.
This should close ticket 700, but someone else should check the documentation to
see if the new function does what it is supposed to, whatever the heck that was.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
857b6bafc3d92425dd5fb394035d1dbb6b44a073,"Clean up polyfit documentation.
Add documentation for polyval.
",numpy/lib/polynomial.py
ebab42eef240821aa88db21ed0df3974cb350e22,"Fix polyfit for 2D case and add test for same. Fixes ticket 697.
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
dee3e75798731a79d4d4298bfe81d9a8dc07975f,"Break lines.
",numpy/doc/HOWTO_DOCUMENT.txt
96bf0c7c4a5b31d0161cf899f1f7f35626bf0dc8,"Added a test for average. It uncovers a bug related to the shape of the weights.
",numpy/lib/tests/test_function_base.py
6b3b8d4e5d32fd59bcd930e606ea89009df359b8,"Added test for 4D histogramdd case. Ticket 690.
",numpy/lib/tests/test_function_base.py
f50f4b46987fd3a176e432c1a25bcc184afc24ef,"Put a more meaningful message when importing numpy from its source tree.
",numpy/__init__.py
fd6d555f8e4cf04871c1c1ed71ad53e2b6009164,"Fix oldnumeric compatibility with ma
",numpy/oldnumeric/ma.py
e3fbd7984862c82e5065360145bc26c5cb603b79,"Add regression test for r4798 (ticket #658).
",numpy/core/tests/test_regression.py
9be99bbb05c6ebadfffe573fa58d9e7bb4b793b5,"Add test for r4797.
",numpy/core/tests/test_regression.py
d1eeb416dc067c0dda65a2904c8942ee2a20b381,"BUG: Python 2.3 compatibility. We cannot use generator expressions in numpy.
",numpy/ma/extras.py
c33da3d52c80d2b545ed0a86383b3c8f37d299a9,"Fix pseudo-inverse description.  Closes #631.
",numpy/linalg/info.py
5db434d7e1bb1ed11a505c5e7ce8ee7392704211,"Add regression test for ticket #608.
",numpy/core/tests/test_regression.py
36674244c5ee307d821c982d497397bac93f260b,"Clear sign-bit when calculating absolute value.
",numpy/core/src/umathmodule.c.src
b071bae9b7f22feb6b9bf348cf9e8585db505ad0,"Rename check to be closer to actual test.
",numpy/core/tests/test_regression.py
d80ffe53bdefad3f89f73ded94738216caab0630,"Fix MyPyLong_AsUnsignedLong. I think this will fix the problem with uint64
conversions on 64 bit OS, but it needs to be tested.
",numpy/core/src/arraytypes.inc.src
e8944864b92f90f74ea93ba70673bfea02c7ddfb,"Try to access file only once to make Windows tests pass.
",numpy/core/tests/test_memmap.py
8e10198441800b04b0ae620e1af126254dac5eaa,"Use mktemp as a last resort to fix the memmap tests that break under
Windows.
",numpy/core/tests/test_memmap.py
c851443f9b2d40becd4533227c48feb650d37917,"Allow file-like object to be used to create a memmap.
Fix NamedTemporaryFile problem for Windows platforms.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
a804623fdc8c809616dc5c1d5852fa85ed58eb98,"Fixed setting of distutils.[plat]ccompiler.[plat]ccompiler leading to attribute error
",numpy/distutils/ccompiler.py
5a6dce26d43cfe96c978a88101bb0c70bca04775,"Refactor __del__ so views of memmaps do not close the python mmap.
",numpy/core/memmap.py
62e994938e1549b28117684efcff58d6c6adbc77,"Add ddof parameter to std and var computations.
",numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c,numpy/ma/core.py
0ef3f8b15dd80e95f1d85298bab7954d61419ac4,"Apply David's patch to fix ticket 653.
",numpy/distutils/cpuinfo.py
2439416c25cdb8bee7caadea53f375cfe0d22b87,"Simplify MyPyLong_AsUnsignedLongLong and make it compatible with old C
compilers. This function will still fail for numbers less than -2**63, which is
not quite correct. The problem is with the conversion functions provided by
Python. The alternative is to write our own or call the Python modulus
function to convert to the valid C ranges. The other conversion functions
have the same problem.

",numpy/core/src/arraytypes.inc.src
a783bfde54692d7c192c5e90c8d9def5af47d552,"Fix ticket 597.
The conversion of negative numbers to uint64 returned the wrong values.
",numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_regression.py
4b3dd3d8e020cac32779caeebd6848989bfeed53,"Remove debug pring statement in numpy.core SConstruct.
",numpy/core/SConstruct
0dba08765136714222080c9572a8e98e82a77f5a,"Finish simple example for new data-type and add test.
",numpy/doc/newdtype_example/example.py,numpy/doc/newdtype_example/floatint.c
91ee5fea809df423e1b60a17ec8109d036a27289,"Add _default_copyswapn for extended data-types.  Fix recent format error.
",numpy/core/src/arrayobject.c
52c2183be0f41507cd93822adf55ba2f46860a92,"Simple example of an extended data-type.
",numpy/doc/newdtype_example/floatint.c,numpy/doc/newdtype_example/floatint/__init__.py,numpy/doc/newdtype_example/setup.py
0264b784451b45ffbf9a394cc3b83a257c8aefd9,"Add test for dtype field renaming.
",numpy/core/tests/test_multiarray.py
43cddec31f70e212a5a4b8f748895711bc18c0dc,"Deprecate close method on memmap arrays.
",numpy/core/memmap.py
0ccc03e7eb857e0ac69fdccaf7dc9f47640bbd0d,"Re-raise the MemoryError for 0-bytes read even if it is not the right thing... Change in 1.1
",numpy/core/src/multiarraymodule.c
4cbe8fd662bbb024f464e151f75dcb171e294b17,"Fix realloc problem by making sure it is never called with 0.
",numpy/core/src/multiarraymodule.c
16add820c00996877bd38bc1213d4985c95e8b9e,"Fix the way memory maps are created to avoid masked_array and memory mapped.
",numpy/core/memmap.py
59a397549b94461a822016347c9636bfb85730b6,"Improve the way ufuncs look up 1d loops for registered data-types.
",numpy/core/src/ufuncobject.c
5fcca15804e9b32cd20af37fc124c12ec65ac0e5,"Allow names to be changed for data type objects without creating an entirely new data-type.
",numpy/core/src/arrayobject.c
2459acb46ddbb268114779e1428dba687ab5650d,"Add test for scalar indexing.
",numpy/core/tests/test_scalarmath.py
0863e654ae4ef065ee390a41d19849929d3a9c5c,"Add basic usage docstring for dtype.
",numpy/add_newdocs.py
6a63cc36835029f6613d64721a610b6c910e8b85,"Fix #643. This doesn't resolve *all* of the issues of working within a Turkish locale, but this will work around the bug that the OLPC project found.
",numpy/core/code_generators/generate_umath.py,numpy/core/numerictypes.py
709bd50ed880bf1bab05b783afe5538a79b5eaed,"Alter NumPy docstring to remove ad and give a litte more info.
",numpy/__init__.py
75b86e12526899cda4e901db9fb951e57d118b6e,"Try to speed up fftfreq a bit.
",numpy/fft/helper.py
3cbfb32167361a681ab1d7cad8305b528ee92c81,"Omit loadtxt and savetxt from __all__
",numpy/core/numeric.py
bcbba6f0917ad004b1468294128e3269c38f21c3,"loadtxt and savetxt moved to lib/io.py
",numpy/core/numeric.py
f01d8e5fb16bfbfc22603ec9456ea3d088f75a4d,"Correct condition.
",numpy/lib/io.py
761566177170684147e4407ef75479d83dd9d189,"Typo.
",numpy/lib/io.py
466ee4bed63168e0ca76e411da6f44f9d68d8eb6,"Add PEP-style document describing the NPY format.
",numpy/doc/npy-format.txt
4bff07720759c611331b43fb988e576e0b68cebb,"One dtype representation issue got fixed. Documented the remaining one.
",numpy/lib/format.py
a5615d4917a25331e008959c55cb5de16b7d164c,"Handle the no-comment case correctly.
",numpy/lib/io.py
984bd6ce8c464f921d273898a2546506778986a7,"Fix printing of complicated dtypes.
",numpy/core/_internal.py
2cb12ec9fb42b617a43561d16471fb4368cf2e86,"Documentation update for the NPY format.
",numpy/lib/format.py
bccc9d0c806afba2e03674f970e7b56d296de43a,"Don't use FAST moves on aligned flexible data-types to avoid bus errors on SPARC archiecture.
",numpy/core/src/arrayobject.c
fb61bf2421093cc034c7d0985c77648188a8b209,"Make sure that mp is an array before testing for 0-d ness.
",numpy/core/src/arrayobject.c
fa547b80f7035da85f66f9cbabc4ff75969d23cd,"Allow numpy scalars to be indexed in limited ways, but not be iterable.  Fix consistency bug with [...] indexing and remove useless check and allow 0-d boolean arrays to work as masks for scalars.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
5089f5d7714fc8cebaaaf302f4c78cdba739e032,"Return to condition where overwrite_output for median raises error for non-ndarray input
",numpy/lib/function_base.py
0abaf57d5c305044148d7688ce248ad050963a7f,"Add Anne Archibald's fix to average to remove eval.
",numpy/lib/function_base.py
1cc67dd9c8a9c65e511b6a363915688378ba7938,"Fix bug reported by Debian package maintainer.
",numpy/lib/function_base.py
6cd2d6d0776b40f9753c5017bd49f01846d5a325,"Small sync-to-flush doc update.
",numpy/core/memmap.py
3a9c9221c44f226cb4b29922454e4608d82f9c3d,"Deprecate 'sync' in favour of 'flush'.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
16eddde4d400e82f00f59379228813885828b116,"Remove type-checking which failed with MaskedArrays.  Add documentation and tests.
",numpy/core/memmap.py,numpy/core/tests/test_memmap.py
3937248fc8dd0ccfb3fde2a626a622ecb2d1ccb4,"Use x.any() instead of any(x)
",numpy/lib/function_base.py
5fb36c0762b0a4c8621959ae77b05f3671f9ad79,"Restructure and add to documentation.
",numpy/core/fromnumeric.py
9555d91ebfed2f886c932953bba6ae207dc69eae,"cumprod docstring, median input array coercion
",numpy/core/fromnumeric.py,numpy/lib/function_base.py
31748384403cc3f58d9607f8ffaa60216a2e7e5d,"Remove 'Blah, blah' from docstrings.
",numpy/core/fromnumeric.py
e6f97dc2f943d4196716376e5d73de7ebb4c9b21,"updated API_CHANGES.txt
mstats : updated docstrings
morestats : updated docstrings
core : fixed __setitem__ for records
",numpy/ma/API_CHANGES.txt,numpy/ma/core.py,numpy/ma/morestats.py,numpy/ma/mstats.py,numpy/ma/tests/test_core.py
5cc1b4eda40d6310096757518f9abd6ca298d1cd,"For 4D samples, histogramdd returned badly shaped histograms once in a while. This should be fixed now.
",numpy/lib/function_base.py
b46333fb1152537cde127db62cf5246d960df530,"Add type specific mergesort for strings and unicode.
Use adaptive string_copy function suggested by Francesc.
Make the sorting code more consistent across types.
",numpy/core/src/_sortmodule.c.src,numpy/core/tests/test_multiarray.py
4e1fbfdcbfa5add735451ef36d62a7cec2850d45,"numpy.ma : docs + API_CHANGES.txt updates
",numpy/ma/API_CHANGES.txt,numpy/ma/extras.py,numpy/ma/morestats.py,numpy/ma/mstats.py
c1408e317dbfa40dc42090017916f50b05866009,"Fixed median axis=None raveling in case of copy
",numpy/lib/function_base.py
0bbfbbc584ed57270488e4f83492126d8c6e15a4,"Add type specific heapsort for strings and unicode.
",numpy/core/src/_sortmodule.c.src,numpy/core/tests/test_multiarray.py
e7c535848319bad6783e3ded5bbf0c14658e560e,"Add type specific heapsort to argsort kind options for strings and unicode. 
",numpy/core/src/_sortmodule.c.src,numpy/core/tests/test_multiarray.py
4ded091d27c9744c2bf09a6882b890f85e574e05,"Add regression tests for tickets #657 and #658.
",numpy/core/tests/test_regression.py
e64f298393c329b0c9a0214a9ec0ff086d87e945,"scons build: fail as soon as possible if Python.h is not found. This is particularly useful on windows if the platform sdk is not available
",numpy/core/SConstruct
7711db0ee3d28fe2f28670d69529f39053cbf09f,"Fix ticket #658 which is a segfault on a corner case for copy detection.
",numpy/core/src/multiarraymodule.c
e8c4f9742339035c431f4047efd11030fd19f8ee,"Fix swap error for indexing flat attribute.  The data-type of the returned object keeps the byte-swap information so there is no need to swap.
",THANKS.txt,numpy/core/src/arrayobject.c
908adda88a402d122fa3c8025c38305904a29fff,"Add type specific quicksort for strings and unicode in sort and argsort methods.
",numpy/core/src/_sortmodule.c.src
441f59e376fa3a80e3e1a2f356f01f3b9f690a3c,"Fix some indentation.
",numpy/core/src/multiarraymodule.c
90543a643b80acd8fcb3a1288a7defef6c541352,"Fix missing mean for median calculation, missing dtype from defmatrix mean signature
",numpy/core/defmatrix.py,numpy/lib/function_base.py
2b608e1965ec4effbcf0e69fc1108339acf7f9c9,"Fix, uncomment import in median doctest
",numpy/lib/function_base.py
e072ab05f8ffdef547c8555c44b2355a73fdf8d4,"New implementation of median allowing axis, out keywords
",numpy/lib/function_base.py
82f37ae01a3b1f0b884cdb44d44bf262c608f3c3,"Add datasource test file that didn't make it in the move from scipy.io to numpy.lib.
",numpy/lib/tests/test__datasource.py
829fc89298588620d6ad5f6443e7ba264cb5cb13,"Make sure that multivariate_normal() uses the standard_normal() method rather than the function so as to use the same consistent state.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
1f671190deabffdbbedf5263faa29bf8c578eaa2,"Add tests of the sort and argsort methods preparatory to merging new
type specific versions for strings and unicode.
",numpy/core/tests/test_multiarray.py
ba07a502ccc27ad152e53ef86cc1429f296439c0,"Fix type. Sorry about that.
",numpy/distutils/fcompiler/hpux.py
56d156240e0d7d65c443c01fff931aaa27b3cca4,"hpux fortran compiler support: patch from an user feedback.
",numpy/distutils/fcompiler/hpux.py
541c0e56db9d8da3c99e2ab84098f94a39683e98,"initial port from Moin Moin site
",numpy/ma/README.txt
9109ba999cc228c43e0e69657c6254ba0a809223,"Fix whitespace and compiler warning. _compiled_base.c is full of ugly code and
is in terrific need of reformating.
",numpy/lib/src/_compiled_base.c
2bd3c4c8d52560717a8acc2b30da14d269fb2e37,"Add tests for sorting strings containing zeros.
",numpy/core/tests/test_regression.py
382e6729df96fd97cdbcc350c98c5a8f98ba8630,"Fix STRING_compare function to work correctly with strings containing zeros.
",numpy/core/src/arraytypes.inc.src
ec93d800236017db668e1b01db0ae7988782cdb1,"Add inline string compare functions for strings and UCS4. The indirect merge
sort now works correctly for strings. The new functions use the const keyword,
which may be a problem with very old C compilers.
",numpy/core/src/_sortmodule.c.src
43901a8e104f861b6c763d3cb0f5e1192a829616,"Add PyArray_CompareString function, but don't add it to the OBJECT_API yet. A
function not used warning will be issued during compile, but it is harmless.
",numpy/core/src/arrayobject.c
16aff17e96d88f474ea41a3570e22bde803d9dec,"Add ma for scons build
",numpy/ma/setupscons.py,numpy/setupscons.py
c9687d1511d2670bfe7b7927372457d1a1b77a1e,"Do not install config.h, since it not needed anymore for numpy API
",numpy/core/setup.py
ce2316fae5e0c706917d2755e4f5f441ba77b465,"Merge maskedarray branch.
",THANKS.txt,numpy/__init__.py,numpy/core/__init__.py,numpy/core/ma.py,numpy/core/tests/test_regression.py,numpy/ma/API_CHANGES.txt,numpy/ma/LICENSE,numpy/ma/__init__.py,numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/morestats.py,numpy/ma/mrecords.py,numpy/ma/mstats.py,numpy/ma/setup.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_extras.py,numpy/ma/tests/test_morestats.py,numpy/ma/tests/test_mrecords.py,numpy/ma/tests/test_mstats.py,numpy/{core/tests/test_ma.py,numpy/ma/tests/test_subclassing.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py,numpy/ma/version.py,numpy/setup.py
fbc211df7a2ebd27efe45cf4f943e21f5ad9b104,"Merge maskedarray branch up to r4776.
",benchmarks/simpleindex.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/SConstruct,numpy/core/code_generators/__init__.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/defmatrix.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/numeric.py,numpy/core/records.py,numpy/core/scons_support.py,numpy/core/setup.py,numpy/core/setupscons.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_regression.py,numpy/distutils/command/build.py,numpy/distutils/command/config.py,numpy/distutils/command/scons.py,numpy/distutils/core.py,numpy/distutils/misc_util.py,numpy/distutils/numpy_distribution.py,numpy/distutils/setupscons.py,numpy/doc/example.py,numpy/f2py/crackfortran.py,numpy/f2py/setupscons.py,numpy/fft/SConstruct,numpy/fft/setupscons.py,numpy/lib/SConstruct,numpy/lib/arraysetops.py,numpy/lib/format.py,numpy/lib/io.py,numpy/lib/scimath.py,numpy/lib/setupscons.py,numpy/lib/tests/test_format.py,numpy/lib/utils.py,numpy/linalg/SConstruct,numpy/linalg/linalg.py,numpy/linalg/setupscons.py,numpy/numarray/SConstruct,numpy/numarray/setupscons.py,numpy/oldnumeric/setupscons.py,numpy/random/SConstruct,numpy/random/setupscons.py,numpy/setupscons.py,numpy/testing/setupscons.py,setupscons.py,test.sh
d42ab1598a44cb00bffcc907605013eca012dbf9,"Add numpyconfig.h to the install
",numpy/core/setup.py
c66da19ab8bd6ad7f035b77026bbd703eab199d4,"ran reindent
",benchmarks/simpleindex.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/defmatrix.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/scons_support.py,numpy/core/setup.py,numpy/core/setupscons.py,numpy/distutils/command/scons.py,numpy/distutils/misc_util.py,numpy/doc/example.py,numpy/fft/setupscons.py,numpy/lib/arraysetops.py,numpy/lib/format.py,numpy/lib/io.py,numpy/lib/scimath.py,numpy/lib/setupscons.py,numpy/lib/tests/test_format.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/linalg/setupscons.py,numpy/random/setupscons.py
0b7800b455b3aaf50cb83a224f283e72f1dea951,"merging David Cournapeau's build_with_scons branch, which adds scons support to numpy.distutils and modifies the configuration of numpy/core
",numpy/core/SConstruct,numpy/core/code_generators/__init__.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/scons_support.py,numpy/core/setup.py,numpy/core/setupscons.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src,numpy/distutils/command/build.py,numpy/distutils/command/config.py,numpy/distutils/command/scons.py,numpy/distutils/core.py,numpy/distutils/misc_util.py,numpy/distutils/numpy_distribution.py,numpy/distutils/setupscons.py,numpy/f2py/setupscons.py,numpy/fft/SConstruct,numpy/fft/setupscons.py,numpy/lib/SConstruct,numpy/lib/setupscons.py,numpy/linalg/SConstruct,numpy/linalg/setupscons.py,numpy/numarray/SConstruct,numpy/numarray/setupscons.py,numpy/oldnumeric/setupscons.py,numpy/random/SConstruct,numpy/random/setupscons.py,numpy/setupscons.py,numpy/testing/setupscons.py,setupscons.py,test.sh
fb3f711f1a1eafb2895a84a80f88814d7fb9a465,"Merge revisions 4721:4771 from the trunk
",numpy/add_newdocs.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py,numpy/ctypeslib.py,numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html,numpy/f2py/crackfortran.py,numpy/f2py/src/fortranobject.c,numpy/lib/function_base.py
a2df3f7818deaf51d08b8bd9095e05d1011b46a5,"comments cleaning and docstring updates.
",numpy/ma/core.py,numpy/ma/extras.py
1845fe92109f611d441765d39fb0ac05fa5948b2,"Remove .data comparisons in tests.  Fix whitespace.
",numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
5bcb91deb60436a5505087c710920f502f9c7267,"Ignore DeprecationWarning during testing.
",numpy/ma/tests/test_core.py
9ed65915e66c124bd02f722c6b213293804f7264,"Remove print statement from test.
",numpy/ma/tests/test_core.py
82b730f9e32b9bde54f3f321846e8e24fffbad4c,"maskedarray.core:
tolist : make sure that a masked record is output as a tuple of None

maskedarray.mrecords:
* introduced mrecarray as the equivalent of recarray w/ fieldmask
* simplified fromarrays/fromrecords
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_mrecords.py
964727a2c475a7e48e262efc52b51345f51f2522,"Add regression test for searchsorted on variable-length arrays.
",numpy/core/tests/test_regression.py
0604754b76eedf00f26b17f1c90471c3f190fa97,"Remove unused variable in last change.
",numpy/core/src/multiarraymodule.c
3378ea7e43893dc387423667055875da159bcdef,"Fix type-coercion for search sorted so that it works with variable-length arrays.
",numpy/core/src/multiarraymodule.c
25b3334d1b1cb43370c6684ba1db5c8bfb8802fe,"Fix intent(callback) when used inside Fortran source.
",numpy/f2py/crackfortran.py
3af7329837b021e6e148ed3f6a948b33adb7826a,"maskedarray.core:
* fixed __getitem__ on records when fill_value is not set
* fixed _extrema_operation.reduce to accept non arrays as arguments (ticket #645)
",numpy/ma/core.py
5af6ff3a240fa44e28a1630414ec69a0780aaa20,"Add regression test for fromstring.
",numpy/core/tests/test_regression.py
74eec4e13435688e72ef6a50f3263ab6edf83d55,"Fix fromstring to match fromfile behavior when parsing integers (base-10 only).  Ticket #650
",numpy/add_newdocs.py,numpy/core/src/arraytypes.inc.src
b65ebf5cd4f5c295cc5557d3cdae7b69118d5697,"Merge maskedarray branch to r4758.
",numpy/ctypeslib.py,numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html,numpy/f2py/src/fortranobject.c,numpy/lib/function_base.py
c87c1624534294fd7e2e6d550c33c9095f0c8377,"maskedarray.core:
* fixed compress (third time the charm?)
* fixed a pb w/ get_fill_value when fill_value is None: now recognized records.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2f3f1a8ef977fd04fc40d12ffd05903eb88c8635,"Import numpy.distutils before distutils, to let numpy.distutils do its monkey patching correctly
",setupscons.py
7e33f2e3ade221f34809b809c34f1d0dc9ca6181,"Catch wrong array sizes when the length of an array is 1.
",numpy/f2py/src/fortranobject.c
ea5fb6f2eecde212e8ebb2524a2f1d0653f6dfdb,"Detect if numscons is not available ASAP in top setupscons.py
",setupscons.py
b11c4f8d2ef1f450eee6944ff972654bb1b5d421,"Return as soon as possible of no sconscripts is detected in scons command, to
avoid importing numscons when not needed
",numpy/distutils/command/scons.py
230b4b692503347747d898cd082f69f52de14555,"Make distutils command build run scons command
",numpy/distutils/command/build.py
a1394fa0cd060ffc2b880e724273afd32c592d5f,"Add Thomas Heller's ctypes_array code to ctypeslib providing the functions as_ctypes and as_array to convert back and forth between numpy arrays and ctypes objects.
",numpy/ctypeslib.py
52937c99d94dd6c1d434eedaae83a4281ba4476e,"
",numpy/ma/core.py
fdc936471ff3de7cf0953a5c513239d2a0e9735c,"core: fixed compress to ensure that a.compress(cond)==a[cond] in most cases
",numpy/ma/core.py,numpy/ma/tests/test_core.py
90f8ba7e2f4383537af035b614ba922f6195ce9c,"ma.core : add the compress method/function
",numpy/ma/core.py,numpy/ma/tests/test_core.py
e71a28f3c36b3a2be86d9d6ed472b4d27e63bf8c,"Add 'compress'.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
1447cc9d29e98ea7debf88a8442f6a7fa0835103,"Update documentation format.
",numpy/ma/core.py
7bce5e9ecaeec970396713d0418f8a083a46a19a,"
Use eval instead of dynamic import in scons_generate_config_py, so that we do
not generate spurious *.pyc files.

",numpy/distutils/misc_util.py
c9c4c25267c9b31a2dc4e0cdad420da509de2bda,"Handle NO_SIGNAL for platforms which do not define it
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in
d40d6ef07c51fb695bc70d22ef9c82de8234765c,"Import add_newdocs earlier, so maskedarray can extend the added
documentation.
",numpy/__init__.py
c1efbb1579c8facf9bf6f68dc33aebe7b4be02cb,"Fix bug in ticket #592 for non-array sequence bin arguments.
",numpy/lib/function_base.py
797fd12fcc7eaeaaa397667af2da6444f4f8c64d,"Merge patch fixing mask dimensions on concatenation.
",numpy/ma/core.py,numpy/ma/mrecords.py,numpy/ma/tests/test_core.py
d1c740cf51aacd08c10f18582b66a4856f131f55,"Set __docformat__ such that epydoc knows it's looking at reST instead of epytext.
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html
7e4b1515b93fb557298bf65566504e5b6f6b9268,"add more explanation for new standard
",numpy/doc/HOWTO_DOCUMENT.txt
1cdc236cbb3b780c34a653465468ef3cf017d6b0,"typo
",numpy/doc/HOWTO_DOCUMENT.txt
70d815d4a5f4c5b3aab03983375903123213478a,"explanation of current situation
",numpy/doc/HOWTO_DOCUMENT.txt
251b760aff9f71838958d740ca1ab30f9a67048b,"Fixes for config and numpyconfig header generation:
 - Replace CheckFunc by CheckDeclaration + CheckFunc for math functions, to
   stay compatible with numpy.distutils.
",numpy/core/SConstruct
606e65471814b648202a3a9bc43f124cfa797e8a,"Remove unneeded comment in numpyconfig.h template
",numpy/core/include/numpy/numpyconfig.h.in
add1361772b7fb58825353c799ae6f1f32a4be57,"Fixes for config and numpyconfig header generation:
 - Replace #ifdef CHAR_BIT by a scons declaration check.
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in
d3e6c0cd3c50e9309215c09579030e11c7f77f7b,"Fixes for config and numpyconfig header generation:
 - Replace #ifdef PY_LONG_LONG logic in numpyconfig.h by a declaration check in
   scons, and uses the result directly in the generated header.
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in
41ca4b191c3d0cbcd48f3f3cd5456c2982339a3a,"Fixes for config and numpyconfig header generation:
 - Replace NPY_NOSMP by NPY_NO_SMP in numpyconfig.h, and remove the NPY_NO_SMP
   define in config.h, because it is not needed.
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in
7a18c98fcb9466893febf93f0555b18e69d4f8bf,"Fixes for config and numpyconfig header generation:
 - signal stuff test result was wrongly put in NPY_NOSMP variable in
   numpyconfig.h header: replaced by correct NPY_NO_SIGNAL
 - Replace NPY_NO_SIGNAL by a private __NPY_PRIVATE_NO_SIGNAL in config.h, to
   avoid clash between config.h and numpyconfig.h
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in
6068062d38539263adf4b32f010123e5cc3a5697,"Fix concatenator usage (patch by Pierre).
Change N to np in regression test.
",numpy/core/tests/test_regression.py,numpy/ma/extras.py
942aec181a1a206359e0d0afb41d830510ebf39f,"Merge maskedarray branch up to r4729.
",benchmarks/benchmark.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/defmatrix.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/distutils/command/build_src.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/interactive.py,numpy/distutils/log.py,numpy/doc/DISTUTILS.txt,numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html,numpy/doc/swig/test/testArray.py,numpy/doc/swig/test/testFarray.py,numpy/doc/swig/test/testMatrix.py,numpy/doc/swig/test/testTensor.py,numpy/doc/swig/test/testVector.py,numpy/f2py/f90mod_rules.py,numpy/f2py/lib/parser/block_statements.py,numpy/fft/tests/test_fftpack.py,numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/arraysetops.py,numpy/lib/format.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/io.py,numpy/lib/scimath.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_format.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_polynomial.py,numpy/lib/utils.py,numpy/linalg/info.py,numpy/linalg/linalg.py,numpy/matlib.py,numpy/numarray/functions.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/typeconv.py,numpy/random/tests/test_random.py,numpy/testing/numpytest.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,setup.py
74d86a81a6c95f2f7843d7f872524c34d8b8224d,"Merge changes in cleanconfig_rtm
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py,numpy/core/src/multiarraymodule.c
9918dd1d19ca7b306ff338a3fdc174c0c9702f25,"Add simple test script to build/test numpy
",test.sh
bced46f0daf57fc0c559f231035b2e11cc238295,"Typo in numpy.core SConstruct
",numpy/core/SConstruct
39097a8b2e944efa86fc1143c5b8ab4043e4cc4a,"Merge revisions 4706:4720 from the trunk
",numpy/core/numeric.py
db45fc7e09d1b440cb7c273f8370ca0465c4959f,"Fix concatenation.  Closes ticket #642.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
2bf5fa1363944408857e368341c4299b121f928c,"Fix inplace test.
",numpy/ma/tests/test_core.py
80f6f5062022104f3a57de05cb119df23c2b5de4,"Apply patch by Pierre.  Move tests from __main__ to the tests directory.

fix_invalid - change the default to copy=True

_MaskedUnaryOperation - make sure the result gets updated from the
input (for subclasses)

_MaskedBinaryOperation - make sure the result gets updated from the
inputs (for subclasses)

_DomainedBinaryOperation - make sure the result gets updated from the
inputs (for subclasses)

MaskedArray.__new__ - added the ndmin keyword
MaskedArray.__getitem__ - works with fields, using the global mask

MaskedArray.__setitem__ - works with fields. The global mask is NOT
updated

MaskedArray.ids - fixed when nomask

MaskedArray.min/.max - force masked to be returned when the whole
array is masked

array - added the ndmin keyword
",numpy/ma/core.py,numpy/ma/tests/test_core.py
98b55586503b209ba9b38bb174e6f707930f0360,"typo
",numpy/core/numeric.py
775bac006ca28cb30bf7c733283c3453aa42a414,"Trivial cleaning of numpy.core SConstruct
",numpy/core/SConstruct
75ba2835b0a692556c468770785e0e9f66c75feb,"Fix typo in numpy.core SConstruct
",numpy/core/SConstruct
73ab47ef17f5783f3b6aa2517a25ee19f2d9a420,"Trivial cleanings in numpy.core SConstruct
",numpy/core/SConstruct,numpy/core/scons_support.py
dc318e7d4adbadd978b042033581a12ebaba4afb,"More cleaning of numpy.core SConstruct
",numpy/core/SConstruct
1e9b52e66f97d221b2f9b84de4d585befbcd6492,"Simplify math funcs check in SConstruct
",numpy/core/SConstruct
9c8ebbf0a26e19494df15deb95e5684685266952,"Remove deprecated builder for config.h
",numpy/core/SConstruct,numpy/core/scons_support.py
e8e32687533260b7b93fbef864212fac2d5a51f3,"Now we use automatically generated config header instead of old kludge taken
from setup.py.

",numpy/core/SConstruct,numpy/core/scons_support.py
4904ae7f18b760a1ac0738ab252c1e3be8220cb4,"Add groupe of math functions availability in generated config header
",numpy/core/SConstruct
7812e46b1a87f54cc783bb71f15da24c5d9fbb2b,"More work on automatic generation of config.h (not ready yet)
",numpy/core/SConstruct
d3e3bbe3279d45984819fece0fdfa12f5d73aa06,"Add PyOS_ascii_strtod test for automatic config header generation
",numpy/core/SConstruct
415d4e8fd8e01c02a1c57e566a9beb130fa80abd,"Refactor the check for m library + functions in numpy.core SConstruct
",numpy/core/SConstruct,numpy/core/scons_support.py
389ccca99b4b04a00dabdda5793cc8bc6f2f572f,"Merged revisions 4677-4704 from http://svn.scipy.org/svn/numpy/trunk

",numpy/core/src/scalartypes.inc.src
733eeb7bc46095cb380d4d67eb2ff84f5c0b765a,"Fix scalar __array_interface__ by making sure to retain a reference the 0-d array created in the returned dictionary.
",numpy/core/src/scalartypes.inc.src
b96a71d9267888f989efab50962eda1c19ad61ff,"Change write_info imports, put in top numscons namespace
",numpy/core/SConstruct,numpy/linalg/SConstruct
f161fe8096795933b1bb0ecd53a0dae2f26f1721,"numpy.linalg now builds with scons
",numpy/linalg/SConstruct,numpy/linalg/setupscons.py
fe79167897082d0b680b05118425dbe62e4bf3f9,"numpy.lib now builds with scons
",numpy/lib/SConstruct,numpy/lib/setupscons.py
f7f3de7be2448d57111bd9c47d46253f6a0e5d3d,"numarray now builds with scons
",numpy/numarray/SConstruct,numpy/numarray/setupscons.py
2bcb222f37f7c4912ee6e5f99c75e25beceb7de7,"Add setupscons.py for pure python packages
",numpy/distutils/setupscons.py,numpy/f2py/setupscons.py,numpy/oldnumeric/setupscons.py,numpy/testing/setupscons.py
38bd49de8052aa6347bc6b8f1d09e98e38e122a0,"numpy.random now builds with scons
",numpy/random/SConstruct,numpy/random/setupscons.py
022f76e7e3d66af6dbbd058f70095956407486b5,"numpy.fft builds with scons
",numpy/fft/SConstruct,numpy/fft/setupscons.py
d3a2b3467bbf3c001713978bb2c3f7e2808399a8,"Re-enable write_info, since the related bug in numscons has been fixed
",numpy/core/SConstruct
91cb723fe408b76745a04ed6fb12cef0b0fc63f0,"Fix missing import from numscons
",numpy/distutils/misc_util.py
33076131341a39f2403c09d3f8da14b499b7502d,"More work on building numpy.core with scons (still does not work)
",numpy/core/SConstruct,numpy/core/include/numpy/numpyconfig.h.in,numpy/core/setupscons.py
6e91f21b549988d52e029442f1d4a1c22d75a42a,"Import get_configres* functions from numscons
",numpy/distutils/misc_util.py
c37beb2d7c474e24e468c9aefeaf2938971af5da,"Add function add_configres for numpy.distutils.Configuration
",numpy/distutils/misc_util.py
6123f389746f0ff187aa4e05fa0c2c5d3e12dc58,"Adding scons scripts + support for numpy.core (do not work yet)
",numpy/core/SConstruct,numpy/core/scons_support.py,numpy/core/setupscons.py
d57e886e51cccb06807c4e6fdaee280326b91f3c,"Make code_generators a package to import its functions
",numpy/core/code_generators/__init__.py
e68d581be46ca4bf36c7a3103b18fa46585d2fde,"Modify ufunc api generator to be compatible with scons builder
",numpy/core/code_generators/generate_ufunc_api.py
f1b0e0c887f9d584638edde22c82879b94e96bd0,"Modify array api generator to be compatible with scons builder
",numpy/core/code_generators/generate_array_api.py
caca466400feb312ce937c58d1f8ea69f1872135,"
Define various scons related functions to call numscons instead of being
defined directly in numpy, for bootstrapping issues.

",numpy/distutils/command/scons.py
e1eac742d946641e86cc9cde1602034cfa3d77cc,"
Add root setupscons.py files, to start working on building numpy with numscons.

",numpy/setupscons.py,setupscons.py
73269feb65bcdf01d8ed639935b4ef68ad669066,"
Add scons_make_config function to numpy distutils Configuration.

",numpy/distutils/misc_util.py
077fb8e888208d492248167082863f257198949f,"
Use separate numscons package instead of internal local copy

",numpy/distutils/command/scons.py
470e98b187506cf8073ba948510c420a47afc069,"
Add facilities to generate config file for future sconsified modules.

",numpy/distutils/misc_util.py
e5c30c117783154c90d91a50a1872daa3b207aaa,"
add an option to change setup filenames to numpy.distutils.Configuration

",numpy/distutils/misc_util.py
8a93d38f5743fb5005b88e803a19c24a13e325b3,"
Add the infrastructure to add SConstruct files in
numpy.distutils.Configuration.

",numpy/distutils/misc_util.py
f9dbe2870e4d7ed425bbeb59a831b0626bdcf29e,"
Add scons command to numpy distutils.

",numpy/distutils/command/scons.py,numpy/distutils/core.py
dfc2efb779561ace735ec52b0c1f31638b0f4669,"
Use a custom NumpyDistribution instead of distutils Distribution, to handle
scons scripts.

",numpy/distutils/core.py,numpy/distutils/numpy_distribution.py
9cb2d68f550e6277187117cab1f7fb9b08f3146c,"Merged revisions 4612-4617,4628-4631,4638 via svnmerge from 
http://svn.scipy.org/svn/numpy/branches/cleanconfig_rtm

................
  r4612 | cdavid | 2007-12-18 17:58:13 +0900 (Tue, 18 Dec 2007) | 3 lines
  
  Initialized merge tracking via ""svnmerge"" with revisions ""1-4611"" from 
  http://svn.scipy.org/svn/numpy/trunk
................
  r4613 | cdavid | 2007-12-18 18:26:38 +0900 (Tue, 18 Dec 2007) | 1 line
  
  Clean ndarrayobject.h headers: do not use SIZEOF_*, but NPY_SIZEOF...
................
  r4614 | cdavid | 2007-12-18 18:33:11 +0900 (Tue, 18 Dec 2007) | 1 line
  
  Refactor the NPY_ALLOW_THREAD logic outside config.h generation, and put it inside numpy headers
................
  r4615 | cdavid | 2007-12-18 18:46:34 +0900 (Tue, 18 Dec 2007) | 1 line
  
  separate config.h (private header) and numpyconfig.h (public header)
................
  r4616 | cdavid | 2007-12-18 18:57:21 +0900 (Tue, 18 Dec 2007) | 2 lines
  
  Add CHAR_BITS as a public symbol in numpyconfig header
................
  r4617 | cdavid | 2007-12-18 19:05:38 +0900 (Tue, 18 Dec 2007) | 1 line
  
  Fix escaping problem when generating numpyconfig.h on win32
................
  r4628 | cdavid | 2007-12-22 12:20:08 +0900 (Sat, 22 Dec 2007) | 1 line
  
  Add code to test for a declaration in header
................
  r4629 | cdavid | 2007-12-22 14:52:38 +0900 (Sat, 22 Dec 2007) | 1 line
  
  Add a check_decl function to check for declaration
................
  r4630 | cdavid | 2007-12-22 15:28:11 +0900 (Sat, 22 Dec 2007) | 1 line
  
  Remove distutils test for C declaration from numpy.core, since it is put in distutils now
................
  r4631 | cdavid | 2007-12-22 15:58:15 +0900 (Sat, 22 Dec 2007) | 18 lines
  
  Merged revisions 4612-4630 via svnmerge from 
  http://svn.scipy.org/svn/numpy/trunk
  
  ........
    r4620 | cdavid | 2007-12-18 19:41:22 +0900 (Tue, 18 Dec 2007) | 3 lines
    
    Initialized merge tracking via ""svnmerge"" with revisions ""1-4619"" from 
    http://svn.scipy.org/svn/numpy/branches/distutils_scons_command
  ........
    r4624 | rc | 2007-12-20 19:30:45 +0900 (Thu, 20 Dec 2007) | 2 lines
    
    fixed setmember1d for string arrays
  ........
    r4626 | stefan | 2007-12-21 18:00:24 +0900 (Fri, 21 Dec 2007) | 2 lines
    
    Add test for setdiff1d on character arrays.
  ........
................
  r4638 | cdavid | 2007-12-22 18:21:25 +0900 (Sat, 22 Dec 2007) | 1 line
  
  Get MATHLIB from numpyconfig.h, not from config.h anymore
................
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/setup.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/umathmodule.c.src,numpy/distutils/command/config.py,numpy/distutils/misc_util.py
055499c61699cdf5f1ea81924dacdf5e39945992,"Fix regression in r4659; matlib.py should use from numpy import *
",numpy/matlib.py
721e160f982453c5de951af09465c7be5c7805d0,"Removed dependency on nose.tools.  Ripped nose.tools.raise and placed it in numpy.testing
",numpy/lib/tests/test_format.py,numpy/testing/utils.py
1b629358028111f9b08433d0bf906bbd0cdc0f02,"Fix test_file under Windows.
",numpy/core/tests/test_multiarray.py
676d5b548cfda3b4c1723df73d4e3b27720fa33c,"Workaround for TemporaryFile problem under Windows.
",numpy/core/tests/test_multiarray.py
bcd679767d28c482e2e4bebf987d27b3200c6702,"Add description of get/seterrobj.
",numpy/add_newdocs.py
79d187afc7b9085993f016bf35fc296f447b9660,"Fix deprecate_with_doc and deprecate for builtin functions.
",numpy/lib/io.py,numpy/lib/utils.py
5896cb8c7aba4477bd9d09fb94a129ee2e8ad11a,"Add a Raises section to the docstring suggestions.
",numpy/doc/HOWTO_DOCUMENT.txt
fdeac7465818652d5fb31e7e0e27f9debd0f54b8,"Merge the lib_for_io branch back into the trunk.
",numpy/lib/__init__.py,numpy/lib/_datasource.py,numpy/lib/format.py,numpy/lib/io.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_format.py,numpy/lib/utils.py
50b26d2464f607566bf66986832636816eaa6d05,"Merge changes to the trunk to this branch.
",arraysetops.py,getlimits.py,index_tricks.py,scimath.py,tests/test_arraysetops.py,tests/test_getlimits.py,tests/test_polynomial.py
89d0310a07059f4b75aaaf6764326c97afdd1014,"Fix-up the .npz implementation.
",io.py
083ca64099268bc5967d25a15f9a4d26d750eb69,"Modify the setup routine to indicate that it is being run via a system
global.  This allows the main __init__ to detect the setup and avoid
attempting to load things that aren't built yet.

This is hackish, but the previously used method would fail if there was an
existing system-wide numpy already installed, for example (which users might
have no control over).  There were frequent reports of problems with the
previous method:

- http://projects.scipy.org/pipermail/scipy-user/2007-November/014511.html
- Tickets #561 and #565

",numpy/__init__.py,setup.py
b4a25a4ae23890d04b993698a7e82f769ee748a5,"Add docstrings with examples for all functions, according to current standard.

If you have nose installed, the examples can be used as doctests with:

nosetests --with-doctest numpy.lib.scimath


",numpy/lib/scimath.py
2fec52f23d5ee3f449eaeab606e29565dcf051c9,"Change remaining N's to np.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
19a290227019eaaa0f35c30176c1fd032925d685,"Added .npz file loading and saveing.
",io.py
72297ed57ac666c6ef50d5c88ef486a94f7fc080,"more janitorial work
",numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/doc/swig/test/testFarray.py,numpy/doc/swig/test/testMatrix.py,numpy/doc/swig/test/testTensor.py,numpy/doc/swig/test/testVector.py,numpy/lib/getlimits.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_polynomial.py,numpy/matlib.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/typeconv.py,numpy/random/tests/test_random.py,numpy/tests/test_ctypeslib.py
423b1953b1742a2b71cc766ff08a919707f19e1c,"braino
",numpy/f2py/f90mod_rules.py
a7b507287043bc88170d0b523bca8e9abadd6d46,"typo
",numpy/numarray/functions.py
3b7ce3ad41b8416c529edc58c5bff2bc70be29b0,"more docstring improvements from Pauli Virtanen
",numpy/linalg/linalg.py
b35941f6fc2e9b2282de21b167891007605241b6,"typo
",numpy/numarray/functions.py
e7191fc96a676b5ea444f23501a3db61c2be602e,"janitorial work
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py,numpy/doc/swig/test/testArray.py,numpy/f2py/f90mod_rules.py,numpy/fft/tests/test_fftpack.py,numpy/numarray/functions.py
e31192fd7799a6456459d0e6142ddef8d46b8d08,"docstring improvements from Pauli Virtanen
",numpy/linalg/info.py,numpy/linalg/linalg.py
4d2dd4b763a33fb48129190377a759bf394db386,"Add disambiguation code to load
",io.py
15437fc1140e83d0c6dde31af9b38813cc514c2e,"Improve docstrings
",numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/defmatrix.py,numpy/core/numeric.py,numpy/core/records.py
49c8cd240ef48754f25b02be591d438509579647,"Improve some docstrings
",io.py,src/_compiled_base.c
efbe398a9e374ea4e00391cf3c8b9fc365f5e9eb,"Improve the documentation style for human-readability in plain-text
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html
f499d58f88982c853e6125c13a9cb469f563d410,"typo
",numpy/doc/HOWTO_DOCUMENT.txt
cd5a68a03efec392d3276dc2f1cfc07871c35803,"Improve packbits and unpackbits so that striding works correctly.
",src/_compiled_base.c
3fa9b3eadc97a08dd566cccbd3795b57296659c0,"Improve packbits and unpackbits so that striding works correctly.
",numpy/core/src/multiarraymodule.c
72ef1ec10f70c6870e3c6e1fe621e11ddd306c6a,"Fix packbits and unpackbits for new io in numpy.
",io.py,src/_compiled_base.c
80db3b32f2d5532bdd8bc8f66ce2103bd4e64ea1,"Fix packbits and unpackbits for new io in numpy.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/src/arrayobject.c,numpy/doc/HOWTO_DOCUMENT.txt
87f61abda82e21fc77facd3931e0182dd564c3a0,"Replace numpy.distutils.exec_command.splitcmdline with shlex.split instead.
It has the same problems as our old numpy.distutils.ccompiler.split_quoted.
splitcmdline still exists, but uses shlex.split, and issues a DeprecationWarning

This has the positive side effect of not having numpy.distutils pulled in
when numpy is imported -- there was a use of splitcmdline in numpy.testing.
",numpy/distutils/command/build_src.py,numpy/distutils/exec_command.py,numpy/distutils/interactive.py,numpy/doc/DISTUTILS.txt,numpy/testing/numpytest.py
2a726d25c8404aa21bb9ab5a6f9af82b3ccf4a47,"Convert some internal classes in index_tricks.py to CamelCase
",numpy/lib/index_tricks.py
cba82ad3bc1a726402e4193aec8a49a85f9999f0,"Add an 'if 0''d block of code to numpy.distutils.log to ignore some log messages. Especially useful to turn on if you're developing by using eggs.
",numpy/distutils/log.py
cf2217e66326edd76d1ba4615842c0b42bb40a62,"testing/numpytest.py: only handle IgnoreException when we have a test
result that we can actually work with (for instance, not nose's ResultProxy
objects)
",numpy/testing/numpytest.py
b785d554419381568785481800054adc90a8022b,"Don't add test to numpy.__all__: it's not something that needs to be exported
",numpy/__init__.py
9964880dbb4cf382142e5a4c176142ea81fc0356,"Get MATHLIB from numpyconfig.h, not from config.h anymore
",numpy/distutils/misc_util.py
b1729a124f68652ff57beff8f71ab71efbec2f10,"Merged revisions 4612-4630 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk

........
  r4620 | cdavid | 2007-12-18 19:41:22 +0900 (Tue, 18 Dec 2007) | 3 lines
  
  Initialized merge tracking via ""svnmerge"" with revisions ""1-4619"" from 
  http://svn.scipy.org/svn/numpy/branches/distutils_scons_command
........
  r4624 | rc | 2007-12-20 19:30:45 +0900 (Thu, 20 Dec 2007) | 2 lines
  
  fixed setmember1d for string arrays
........
  r4626 | stefan | 2007-12-21 18:00:24 +0900 (Fri, 21 Dec 2007) | 2 lines
  
  Add test for setdiff1d on character arrays.
........
",numpy/lib/arraysetops.py,numpy/lib/tests/test_arraysetops.py
5df69a90f90f2298f5631bb5000eedd8e0b03f07,"Remove distutils test for C declaration from numpy.core, since it is put in distutils now
",numpy/core/setup.py
622b1425544db5a4de2f2b678adcbdd0105ba8a9,"Add a check_decl function to check for declaration
",numpy/distutils/command/config.py
2d914ba6055da226a039dd846b19363532a26254,"Add code to test for a declaration in header
",numpy/core/setup.py
da78ac76a370d0e05e32019882b1ce001cf87bb5,"Document API changes.
",numpy/ma/API_CHANGES.txt
c7b8c2842dff3f62f1dba62cd4a3431377a68bd7,"Add test for setdiff1d on character arrays.
",numpy/lib/tests/test_arraysetops.py
11c95e35e85166b808ea24d321f86a7bc4a0dcab,"Fix unit tests.  Prevent nomask from being copied.
",numpy/ma/core.py,numpy/ma/tests/test_core.py,numpy/ma/tests/test_old_ma.py
6509e216aff93a821829cbc6a6d91bb00a4f3a23,"fixed setmember1d for string arrays
",numpy/lib/arraysetops.py
0c728126f30c79512fdf0dff7c928c387291ce5a,"* Warn potential users about format instability.
* Implement mmap capability.
",format.py,tests/test_format.py
c9fe4c3bf9eb239d13173a55b530c1349e22835d,"Apply Pierre's patch.
",numpy/ma/core.py,numpy/ma/tests/test_core.py
b8964ed9b2ee180111d9b72052a0e19cb536a89f,"Fix escaping problem when generating numpyconfig.h on win32
",numpy/core/setup.py
359978d8be718aac42bc0369e67fbe8a0a26eac3,"Add CHAR_BITS as a public symbol in numpyconfig header
",numpy/core/setup.py
4035e4212a47f962fe026cbd01cc715774f4a3d6,"separate config.h (private header) and numpyconfig.h (public header)
",numpy/core/setup.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/umathmodule.c.src
23fcc892595743a9fd0ecc59d568579404a5663a,"Refactor the NPY_ALLOW_THREAD logic outside config.h generation, and put it inside numpy headers
",numpy/core/setup.py
37fdc200e6080e59abcc79e3231e02b1980cde84,"Clean ndarrayobject.h headers: do not use SIZEOF_*, but NPY_SIZEOF...
",numpy/core/include/numpy/ndarrayobject.h
7ce53484bbe4c54f3fb3f24687846e6c54ad88d5,"Add PYSETERROR from scipy.io.numpyiomodule.c to resolve undefined symbol.
",src/_compiled_base.c
3d01d9f6774a5739cdba2501c4552e1c2ce369ec,"Fixes to packbits.  Not done yet.
",src/_compiled_base.c
6ede27f974dc49705dfca697a9e9542537f14a2d,"Add regression test for binary_repr.
",numpy/core/tests/test_regression.py
84566c56443ad2b336bff648e3c1f9a512988a2b,"API has changed for put and putmask; remove two outdated tests.
",numpy/ma/core.py,numpy/ma/tests/test_old_ma.py
9f25dd88311ecbbf6e861a3c9c1c265dde1d52d1,"Code establishing a simple format for .npy files.
",format.py,tests/test_format.py,utils.py
b7808b30e3266ac5027c21110ed1c04218f7ff62,"formatting
",numpy/doc/HOWTO_DOCUMENT.txt
a03a45cae7b085f9354c6f0ea634d1dd0654fbcc,"Remove tests that are not set-up to deal with float32 repr.
",numpy/core/tests/test_scalarmath.py
2c37d253258c3d9831835a843e2d8ea7837f276e,"Add comment to add Fortran ordering argument to ToFile.  Fix repr for floating point scalars.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_scalarmath.py
cf73c9df97192d2215a05436bffdfca9259daf9e,"* Remove unimplemented functions from __all__.
* Remove warning about moving DataSource since that's what we're doing here.
",_datasource.py,io.py
4bd4ec942d1e4734b6b00a6c7f609c8a12202489,"Clean up imports.
",io.py
25c161b20770bd9c00c106f21019d2593953dbfd,"Changes to io layer of NumPy
",io.py,src/_compiled_base.c,utils.py
0ed3e123454164b5e86699216e27e513653eeda8,"Also link with Python.
",numpy/distutils/fcompiler/intel.py
bd16a4fdf861f02b51a27df2b9bb0494fd24bb0f,"Interfaces have attributes.
",numpy/f2py/lib/parser/block_statements.py
e5789a3b032fccd3a1245f1ecbc311a22c41da06,"Make array_getcharbuf be the same as array_getreadbuf.
",numpy/core/src/arrayobject.c
22fbdc5c744674550be074550862645ddf423b31,"Added docstrings to deprecate funcs
",utils.py
5455500c4fc2ccc9b2a46511f5ec128d04b5de69,"added new import standards to how to doc
",numpy/doc/HOWTO_DOCUMENT.txt
94e351cbda3fb151af4ae18d6ebfc9b409e27022,"Add deprecate with doc.
",utils.py
1c913bc6a7334e69bacf2bf1021ee6d03340a9fd,"updating to us import numpy as np convention
",benchmarks/benchmark.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py
b539432af52d63c08435148f987bec05f412f113,"Flesh out some infrastructure for what is going to be there in io.py
",io.py
0ce4792257d812a05ce222d0e5b5eb1aa54d19fd,"Start changes for numpy.lib to support deprecations in scipy.io
",__init__.py,_datasource.py,io.py,utils.py
e76b5fa6896c09257181675bbf4cf47789d32927,"Create a branch for io work in NumPy
",COMPATIBILITY,DEV_README.txt,LICENSE.txt,MANIFEST.in,README.txt,TEST_COMMIT,THANKS.txt,numpy/lib/__init__.py,numpy/lib/arraysetops.py,benchmarks/benchmark.py,benchmarks/casting.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py,numpy/lib/convdtype.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/machar.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/blasdot/_dotblas.c,numpy/core/blasdot/cblas.h,numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/oldnumeric.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/info.py,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_ufunc.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/core/tests/testdata.fits,numpy/ctypeslib.py,numpy/distutils/__init__.py,numpy/distutils/__version__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/command/install.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/environment.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/interactive.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/__init__.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/src/fib1.f,numpy/distutils/tests/f2py_ext/src/fib2.pyf,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/__init__.py,numpy/distutils/tests/f2py_f90_ext/include/body.f90,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/src/foo_free.f90,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/__init__.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/primes.pyx,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/__init__.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/src/example.c,numpy/distutils/tests/swig_ext/src/example.i,numpy/distutils/tests/swig_ext/src/zoo.cc,numpy/distutils/tests/swig_ext/src/zoo.h,numpy/distutils/tests/swig_ext/src/zoo.i,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_misc_util.py,numpy/distutils/unixccompiler.py,numpy/doc/CAPI.txt,numpy/doc/DISTUTILS.txt,numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/README.txt,numpy/doc/example.py,numpy/doc/html/api-objects.txt,numpy/doc/html/crarr.png,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/frames.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/index.html,numpy/doc/html/module-tree.html,numpy/doc/html/redirect.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html,numpy/doc/pep_buffer.txt,numpy/doc/pyrex/MANIFEST,numpy/doc/pyrex/Makefile,numpy/doc/pyrex/c_numpy.pxd,numpy/doc/pyrex/c_python.pxd,numpy/doc/pyrex/notes,numpy/doc/pyrex/numpyx.c,numpy/doc/pyrex/numpyx.pyx,numpy/doc/pyrex/run_test.py,numpy/doc/pyrex/setup.py,numpy/doc/records.txt,numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/doc/Makefile,numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt,numpy/doc/swig/doc/testing.html,numpy/doc/swig/doc/testing.pdf,numpy/doc/swig/doc/testing.txt,numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg,numpy/doc/swig/test/Array.i,numpy/doc/swig/test/Array1.cxx,numpy/doc/swig/test/Array1.h,numpy/doc/swig/test/Array2.cxx,numpy/doc/swig/test/Array2.h,numpy/doc/swig/test/Farray.cxx,numpy/doc/swig/test/Farray.h,numpy/doc/swig/test/Farray.i,numpy/doc/swig/test/Makefile,numpy/doc/swig/test/Matrix.cxx,numpy/doc/swig/test/Matrix.h,numpy/doc/swig/test/Matrix.i,numpy/doc/swig/test/Tensor.cxx,numpy/doc/swig/test/Tensor.h,numpy/doc/swig/test/Tensor.i,numpy/doc/swig/test/Vector.cxx,numpy/doc/swig/test/Vector.h,numpy/doc/swig/test/Vector.i,numpy/doc/swig/test/setup.py,numpy/doc/swig/test/testArray.py,numpy/doc/swig/test/testFarray.py,numpy/doc/swig/test/testMatrix.py,numpy/doc/swig/test/testTensor.py,numpy/doc/swig/test/testVector.py,numpy/doc/ufuncs.txt,numpy/dual.py,numpy/f2py/BUGS.txt,numpy/f2py/Makefile,numpy/f2py/NEWS.txt,numpy/f2py/README.txt,numpy/f2py/TODO.txt,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/Makefile,numpy/f2py/doc/Release-1.x.txt,numpy/f2py/doc/Release-2.x.txt,numpy/f2py/doc/Release-3.x.txt,numpy/f2py/doc/Release-4.x.txt,numpy/f2py/doc/apps.tex,numpy/f2py/doc/bugs.tex,numpy/f2py/doc/collectinput.py,numpy/f2py/doc/commands.tex,numpy/f2py/doc/ex1/arr.f,numpy/f2py/doc/ex1/bar.f,numpy/f2py/doc/ex1/foo.f,numpy/f2py/doc/ex1/foobar-smart.f90,numpy/f2py/doc/ex1/foobar.f90,numpy/f2py/doc/ex1/foobarmodule.tex,numpy/f2py/doc/ex1/runme,numpy/f2py/doc/f2py2e.tex,numpy/f2py/doc/f2python9-final/README.txt,numpy/f2py/doc/f2python9-final/aerostructure.jpg,numpy/f2py/doc/f2python9-final/flow.jpg,numpy/f2py/doc/f2python9-final/mk_html.sh,numpy/f2py/doc/f2python9-final/mk_pdf.sh,numpy/f2py/doc/f2python9-final/mk_ps.sh,numpy/f2py/doc/f2python9-final/src/examples/exp1.f,numpy/f2py/doc/f2python9-final/src/examples/exp1mess.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1session.txt,numpy/f2py/doc/f2python9-final/src/examples/foo.pyf,numpy/f2py/doc/f2python9-final/src/examples/foom.pyf,numpy/f2py/doc/f2python9-final/structure.jpg,numpy/f2py/doc/fortranobject.tex,numpy/f2py/doc/index.html,numpy/f2py/doc/intro.tex,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/f2py/doc/multiarray/bar.c,numpy/f2py/doc/multiarray/foo.f,numpy/f2py/doc/multiarray/fortran_array_from_pyobj.txt,numpy/f2py/doc/multiarray/fun.pyf,numpy/f2py/doc/multiarray/run.pyf,numpy/f2py/doc/multiarray/transpose.txt,numpy/f2py/doc/multiarrays.txt,numpy/f2py/doc/notes.tex,numpy/f2py/doc/oldnews.html,numpy/f2py/doc/options.tex,numpy/f2py/doc/python9.tex,numpy/f2py/doc/signaturefile.tex,numpy/f2py/doc/using_F_compiler.txt,numpy/f2py/doc/win32_notes.txt,numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/HISTORY.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt,numpy/f2py/docs/TESTING.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/docs/default.css,numpy/f2py/docs/docutils.conf,numpy/f2py/docs/hello.f,numpy/f2py/docs/pyforttest.pyf,numpy/f2py/docs/pytest.py,numpy/f2py/docs/simple.f,numpy/f2py/docs/simple_session.dat,numpy/f2py/docs/usersguide/allocarr.f90,numpy/f2py/docs/usersguide/allocarr_session.dat,numpy/f2py/docs/usersguide/array.f,numpy/f2py/docs/usersguide/array_session.dat,numpy/f2py/docs/usersguide/calculate.f,numpy/f2py/docs/usersguide/calculate_session.dat,numpy/f2py/docs/usersguide/callback.f,numpy/f2py/docs/usersguide/callback2.pyf,numpy/f2py/docs/usersguide/callback_session.dat,numpy/f2py/docs/usersguide/common.f,numpy/f2py/docs/usersguide/common_session.dat,numpy/f2py/docs/usersguide/compile_session.dat,numpy/f2py/docs/usersguide/default.css,numpy/f2py/docs/usersguide/docutils.conf,numpy/f2py/docs/usersguide/extcallback.f,numpy/f2py/docs/usersguide/extcallback_session.dat,numpy/f2py/docs/usersguide/fib1.f,numpy/f2py/docs/usersguide/fib1.pyf,numpy/f2py/docs/usersguide/fib2.pyf,numpy/f2py/docs/usersguide/fib3.f,numpy/f2py/docs/usersguide/ftype.f,numpy/f2py/docs/usersguide/ftype_session.dat,numpy/f2py/docs/usersguide/index.txt,numpy/f2py/docs/usersguide/moddata.f90,numpy/f2py/docs/usersguide/moddata_session.dat,numpy/f2py/docs/usersguide/run_main_session.dat,numpy/f2py/docs/usersguide/scalar.f,numpy/f2py/docs/usersguide/scalar_session.dat,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/docs/usersguide/spam.pyf,numpy/f2py/docs/usersguide/spam_session.dat,numpy/f2py/docs/usersguide/string.f,numpy/f2py/docs/usersguide/string_session.dat,numpy/f2py/docs/usersguide/var.pyf,numpy/f2py/docs/usersguide/var_session.dat,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/lib/__init__.py,numpy/f2py/lib/api.py,numpy/f2py/lib/doc.txt,numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_support.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/extgen/setup_py.py,numpy/f2py/lib/extgen/utils.py,numpy/f2py/lib/main.py,numpy/f2py/lib/nary.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/__init__.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/doc.txt,numpy/f2py/lib/parser/parsefortran.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/readfortran.py,numpy/f2py/lib/parser/sourceinfo.py,numpy/f2py/lib/parser/splitline.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/parser/utils.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/setup.py,numpy/f2py/lib/src/F_FUNC.cpp,numpy/f2py/lib/src/pyobj_to_string_len.c,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/f2py/lib/wrapper_base.py,numpy/f2py/rules.py,numpy/f2py/setup.cfg,numpy/f2py/setup.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h,numpy/f2py/src/test/Makefile,numpy/f2py/src/test/bar.f,numpy/f2py/src/test/foo.f,numpy/f2py/src/test/foo90.f90,numpy/f2py/src/test/foomodule.c,numpy/f2py/src/test/wrap.f,numpy/f2py/tests/array_from_pyobj/__init__.py,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/c/return_real.py,numpy/f2py/tests/f77/callback.py,numpy/f2py/tests/f77/return_character.py,numpy/f2py/tests/f77/return_complex.py,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_logical.py,numpy/f2py/tests/f77/return_real.py,numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_logical.py,numpy/f2py/tests/f90/return_real.py,numpy/f2py/tests/mixed/foo.f,numpy/f2py/tests/mixed/foo_fixed.f90,numpy/f2py/tests/mixed/foo_free.f90,numpy/f2py/tests/mixed/run.py,numpy/f2py/tests/run_all.py,numpy/f2py/use_rules.py,numpy/fft/__init__.py,numpy/fft/fftpack.c,numpy/fft/fftpack.h,numpy/fft/fftpack.py,numpy/fft/fftpack_litemodule.c,numpy/fft/helper.py,numpy/fft/info.py,numpy/fft/setup.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/setup.py,numpy/linalg/__init__.py,numpy/linalg/blas_lite.c,numpy/linalg/dlamch.c,numpy/linalg/dlapack_lite.c,numpy/linalg/f2c.h,numpy/linalg/f2c_lite.c,numpy/linalg/info.py,numpy/linalg/lapack_lite/README,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/lapack_lite/wrapped_routines,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/linalg/tests/test_linalg.py,numpy/linalg/zlapack_lite.c,numpy/matlib.py,numpy/numarray/__init__.py,numpy/numarray/_capi.c,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/compat.py,numpy/numarray/convolve.py,numpy/numarray/fft.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/nd_image.py,numpy/numarray/numerictypes.py,numpy/numarray/numpy/arraybase.h,numpy/numarray/numpy/cfunc.h,numpy/numarray/numpy/ieeespecial.h,numpy/numarray/numpy/libnumarray.h,numpy/numarray/numpy/numcomplex.h,numpy/numarray/numpy/nummacro.h,numpy/numarray/random_array.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/ufuncs.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/rng_stats.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/Python.pxi,numpy/random/mtrand/distributions.c,numpy/random/mtrand/distributions.h,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/initarray.c,numpy/random/mtrand/initarray.h,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi,numpy/random/mtrand/randomkit.c,numpy/random/mtrand/randomkit.h,numpy/random/setup.py,numpy/random/tests/test_random.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/info.py,numpy/testing/numpytest.py,numpy/testing/parametric.py,numpy/testing/setup.py,numpy/testing/utils.py,numpy/tests/test_ctypeslib.py,numpy/version.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,setup.py,setupegg.py,numpy/lib/shape_base.py,site.cfg.example,{numpy/lib/src,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,{numpy/lib/tests,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/user_array.py,numpy/lib/utils.py
f278a3e4a14aa6ef1a57c462345f12db7454656a,"Reformat extras docstrings.
",numpy/ma/extras.py
3d250d05cdba6590a0f38b6b7ddc256dfbce3907,"Reformat docstrings for 80 columns.
",numpy/ma/core.py,numpy/ma/tests/test_old_ma.py
be2d0cacfcf64c25a1dd76e9817ad0cf024d0576,"Pull in old tests.
",numpy/ma/tests/test_core.py,numpy/{core/tests/test_ma.py
fc1506199914b4fcdd2dfb930d9ddc0ee2ee9569,"Ignore warning raised during testing.
",numpy/ma/tests/test_core.py
02ee35a7e1c722a1cdac8f3a60fe9ef7aa079a37,"Assign default values to max_val and min_val to prevent compiler warnings.
",numpy/core/src/arraytypes.inc.src
4fc786ed80c5b26c8457f8f65bdf58ad67c64b8e,"Fix benchmarks.  Remove remaining imports of maskedarray.
",numpy/ma/bench.py,numpy/ma/core.py,numpy/ma/extras.py,numpy/ma/morestats.py,numpy/ma/mrecords.py,numpy/ma/mstats.py,numpy/ma/testutils.py,numpy/ma/timer_comparison.py
703e8d6323b19cbfeb96772c1e35f1cd68629336,"Move ma to numpy root.  Fix unit tests.  Remove references to numpy.core.ma.
",THANKS.txt,numpy/__init__.py,numpy/core/__init__.py,numpy/core/tests/test_regression.py,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/setup.py
61f9f6d0fb169cadefe35ea2bdd783848aa771f5,"Merge Pierre's implementation of MaskedArray.
",numpy/core/ma.py,numpy/core/ma/LICENSE,numpy/core/ma/__init__.py,numpy/core/ma/bench.py,numpy/core/ma/core.py,numpy/core/ma/extras.py,numpy/core/ma/morestats.py,numpy/core/ma/mrecords.py,numpy/core/ma/mstats.py,numpy/core/ma/setup.py,numpy/core/ma/tests/test_core.py,numpy/core/ma/tests/test_extras.py,numpy/core/ma/tests/test_morestats.py,numpy/core/ma/tests/test_mrecords.py,numpy/core/ma/tests/test_mstats.py,numpy/core/ma/tests/test_subclassing.py,numpy/core/ma/testutils.py,numpy/core/ma/timer_comparison.py,numpy/core/ma/version.py
8e82b0429ed0fbd5049d48446da29a1fa55d5907,"Add degrees() and radians() ufuncs
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
d3c469c90bfe792ca0cfe283bcbf0e8fd24dab96,"Fix building on freebsd [patch by Joe Peterson].
",numpy/core/include/numpy/ufuncobject.h,numpy/numarray/_capi.c
dd955bdb391b4dfe8922ce5a563173399df963a9,"Fixed binary_repr to make sure that evaluation at 0 returns a string of length width.
",numpy/core/numeric.py
8e6f0852f2bd3c920edd67cc33316d84dda71376,"Make sure the develop command can handle generated script files.
",numpy/distutils/command/build_scripts.py,numpy/distutils/command/develop.py
ec1b78909b4526c3b90ad42182a2d692c4ef8bb1,"Make the 'develop' command from setuptools run build_src --inplace in addition to build_ext --inplace. This allows SWIG wrappers to be correctly generated.
",numpy/distutils/command/develop.py,numpy/distutils/command/egg_info.py,numpy/distutils/core.py
170d7858835334a336acf4002232fee85b35245f,"Re-work slow clip to use minimum followed by maximum.
",numpy/core/src/multiarraymodule.c
9405a8703f6df655c17cdefc02f9977f92d3b2d8,"Allow clip method to have either min or max passed in.
",numpy/core/src/arraymethods.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
0a5bcc81689975874e358e3a7e8f401b8858b77f,"Use a correct upper bound for the inversion search in binomial distributions.
",numpy/random/mtrand/distributions.c
89fa0fd46c1f422af824484e19ac62fe0492842f,"Fix typo.
",numpy/f2py/crackfortran.py
687f1ae622da0c6c415c190d2b178bd3a3dfe7e2,"Add test_ufunc.
",numpy/core/tests/test_ufunc.py
67bc27b8ebb6031c9379632f40493d0dd5f0f08c,"Typo.
",numpy/distutils/fcompiler/intel.py
941a93af7f8ea0ac5f1bda1c2b3c46865d8e8360,"Use the correct link parameters for shared libraries with Intel Fortran on OS X.
",numpy/distutils/fcompiler/intel.py
8610fb8f3aadad9677d55b2959c3e03d419ccef1,"Another string method conversion typo.
",numpy/f2py/rules.py
ffd9adc11730b5957adcee9c0f2ae6f30b0f9ae6,"The PIC flag changed in the 10 version of the Intel Fortran compiler.
",numpy/distutils/fcompiler/intel.py
ec6e9424d0c194323faeb43a2197daf73ecf1415,"Increase test code coverage.  Add documentation.
",numpy/add_newdocs.py,numpy/core/tests/test_multiarray.py,numpy/fft/tests/test_fftpack.py
0f4730e74c87e50c6ccc5b072ea733d9a3fe96f4,"BUG: fix incorrect ordering of the 'good' and 'bad' objects in the hypergeometric distribution.
",numpy/random/mtrand/distributions.c
37689e0dd3f0e76f0c043784c961d2918dd175b5,"More mime-type fixes in repository 
"
3882585cffcb6bda66eeb47935f4d28c64c8a056,"Fix typo in mime-type svn prop for swig html doc
"
c377fe8b3bdb406dc097d524a2cd25cddc4643c8,"Set mime-type in repository for generated doc for swig
"
65293fce1c575ac74bd18a96ac43187e3fd8c439,"Corrected casting logic for numpy array scalars
",numpy/doc/swig/pyfragments.swg
69645b8ecf83a23180eb0bb7b065a0a127d78da9,"Argout typemap documentation made more clear.
",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt
ab3cfaec85bdab5043d599788279afd805717bcb,"Changed setting of fortran-order array's flag; corrected documentaion
",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt,numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg
b0e8c7866f241033177e03856318b1f2d11646bb,"* Added support for FORTRAN-ordered arrays to numpy.i.

* Added new tests that test some of the FORTRAN-ordered typemaps.

* Updated the documentation to include the new FORTRAN-ordering
  support.

",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt,numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg,numpy/doc/swig/test/Farray.cxx,numpy/doc/swig/test/Farray.h,numpy/doc/swig/test/Farray.i,numpy/doc/swig/test/Makefile,numpy/doc/swig/test/setup.py,numpy/doc/swig/test/testFarray.py
49a0503e47c9bb06d0bf7430b2958f7c23976234,"* Added a new typemap suite, ARGOUTVIEW, which takes a view of a data
  buffer and converts it to an output numpy array (1D, 2D and 3D, with
  before- and after- dimension specifications.)

* Added new tests for the ARGOUTVIEW typemaps in the test directory
  (Array1 and Array2 classes, both included in the Array python
  extension module, tested in testArray.py).

* Updated the documentation to reflect the latest changes.

",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt,numpy/doc/swig/doc/testing.pdf,numpy/doc/swig/numpy.i,numpy/doc/swig/test/Array.i,numpy/doc/swig/test/Array1.cxx,numpy/doc/swig/test/Array1.h,numpy/doc/swig/test/Array2.cxx,numpy/doc/swig/test/Array2.h,numpy/doc/swig/test/Makefile,numpy/doc/swig/test/setup.py,numpy/doc/swig/test/testArray.py
cbc162f466eac71102e807aa90742471187bebcb,"Adding an example for MKL in site.cfg.example (for recent versions)
",site.cfg.example
6c00b1141fdfa7d168a9b82e6ab493c77f7c1621,"use 'in' keyword to test dictionary membership
",numpy/_import_tools.py,numpy/core/tests/test_defmatrix.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_src.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/from_template.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/parsefortran.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/utils.py,numpy/f2py/rules.py,numpy/f2py/use_rules.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/testing/numpytest.py,numpy/testing/utils.py
3fe715c0d0deb78ace46c3dbaf3165e8c4283e3c,"replaced apply() with direct function call
",numpy/lib/utils.py
5eabfa765d5aa1d33fd2e8704dfb4bfbdb25761b,"using identity testing for None
",numpy/fft/fftpack.py
6daa0bbd1cea9c8134e6d67464843e44f35b30df,"Added min and max macros to Backward Compatibility fragments
",numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg
eaae1d014525b81b8ab14fe0acfc2051cf0c8efc,"Added new fragment dependency to unsigned long fragment
",numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg
01c13fcc947aada0ffc14d67eda1695e330cb21e,"Added %fragment 'NumPy_Fragments' for convenience
",numpy/doc/swig/numpy.i
9f40bb05d2f061f07a9988658ce3a4726f923706,"Changed #define to %#define so that they delay implementation
",numpy/doc/swig/numpy.i
aaaf84c22b3b85b9ec67a8f201f61616dedb9f93,"Fixed some typos in the comments
",numpy/doc/swig/pyfragments.swg
0fa45d7deda989711c4af686d7e9c63a89cc8cbb,"Changed numpy.i so that helper macros and helper functions are now
implemented as swig %fragments.  This allows me to implement the
backward compatibility macros without duplicating them.

",numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg
a9f446da7d3613743a2f191446519eeef2d8f8d7,"Fix randint for negative interval.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/tests/test_random.py
8b60ca4182b76904e49fa80ab568d5f77cbe6d54,"Update SWIG typemaps to be C89 compliant (patch by Matthieu Brucher).
Fix filenames in setup.py.  Fix tests in Makefile.
",numpy/doc/swig/numpy.i,numpy/doc/swig/test/Makefile,numpy/doc/swig/test/setup.py
f1f6ff2845ec82f5ad03eceaa8311146ec5555b6,"Updated documentation to include pyfragments.swg explanation
",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt
b8b489fca17f52fe4be7f87d92838e26fbde568b,"Added pyfragments.swg, which expands integer type-checking to accept numpy array scalars
",numpy/doc/swig/numpy.i,numpy/doc/swig/pyfragments.swg
415f217e03dde45e12928967bf020ec8719eb7eb,"removed split_quoted as per #619
",numpy/distutils/ccompiler.py
d9976a976eac6480aa4380a0605245f529921722,"Edited module docstring.
",numpy/lib/arraysetops.py
4ed186d89894e4156ea5875c142984d0f013327d,"Added Eric Jones to the list of acknowledgements
",numpy/doc/swig/doc/numpy_swig.html,numpy/doc/swig/doc/numpy_swig.pdf,numpy/doc/swig/doc/numpy_swig.txt,numpy/doc/swig/doc/testing.pdf
5bb7ee688c5ac1aa5427e6e5b312d63b065f76d9,"ran reindent.py to cleanup whitespaces
",benchmarks/simpleindex.py,numpy/numarray/numerictypes.py
6dbe4f3638977f9d260288aa480596c4a3138543,"Fix indexing with array scalar. Closes #603.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
7254dd7da0ce26f83b667dcff1fb3b545fb47899,"Fix indexing with booleans (patch by Achim Gaedke). Closes #614.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
4ae613d0b53ef17aced122ce8a89274c1ee1ac8e,"Fix arange output byteorder.  Closes ticket #616.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
a81039b7ec0834840468937a00317d85a3515eb8,"Fix get_mathlib when path argument is None
",numpy/distutils/misc_util.py
4f13010eb2263687d6aaf69df7f73c1c4a030339,"Fix up empty if statement probem.
",numpy/core/src/scalartypes.inc.src
529384d3ce1d5f769304f88766054374a24eabdf,"Back out change made in r4380 which causes scipy.fftpack not to build correctly.
",numpy/distutils/command/build_ext.py
064d8fecb1494004d81230b681dce8f7e208cf6f,"Fix for #609: numpy/linalg/lapack_litemodule.c:lapack_lite_zgeqrf int vs. long
",numpy/linalg/lapack_litemodule.c
0cb0309da5775daf4400cb0cc6e5d49cb617a40e,"test commit
",TEST_COMMIT
a974a4bc41acbb0ba559c4ae3ab64f3c2b6bbcde,"This is the development code for the 1.0.5 release
",numpy/version.py
47baaba716e4d58e81befd9afe057c8a0a20293a,"remove old reference to deleted file (r4384)
",setup.py
eccd9dbbfd65e7fe02c97a0b0ab489e3992d701a,"Remove old file scipy_compatibility
",scipy_compatibility
2d596da7383cc30092e5812a103eb50b0fb9b16c,"numpy.distutils.command.build_ext: append build C libraries as dependencies of
the extension, to force recompiling if they change. (It should really only force relinking, but adding that is tougher.)
",numpy/distutils/command/build_ext.py
d89f34a70da10562c5d41be5e42d6856e7fca8df,"Refactor Pyrex source building into a separate method in build_src.py
",numpy/distutils/command/build_src.py
18d3af5ea658b0f1846e5307fe60263312d52bdd,"Expand linspace docstring.
",numpy/lib/function_base.py
4cd7a18e808e818833a838e5338d614ee5b8bab6,"another typo
",numpy/f2py/rules.py
8d91e0a60036d37a1875418ac0a8dfe09cbb1047,"typo
",numpy/f2py/capi_maps.py
7171e1cad5d48627ed95544be9fd7ac288f3d52b,"cleaning up after reindent.py
",numpy/numarray/numerictypes.py
0b77f0e5f0e46b2ef7c570ebda046c34bbcc0f26,"ran reindent.py to clean up whitespace
",numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/tests/test_numeric.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/core.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/doc/example.py,numpy/f2py/cb_rules.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_support.py,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/extgen/setup_py.py,numpy/f2py/lib/extgen/utils.py,numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/tests/test_module_module.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/utils.py,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/matlib.py,numpy/numarray/image.py,numpy/numarray/matrix.py,numpy/numarray/numerictypes.py,numpy/oldnumeric/arrayfns.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/random_array.py,numpy/testing/numpytest.py,setup.py
aa3c27cce3d0625f719b812c9e6b0aa73114c612,"typo
",numpy/matlib.py
06b316521a47470e0cce864e142c9372d14637dc,"using faster string methods rather than deprecated string module
",numpy/core/code_generators/generate_umath.py,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/doc/collectinput.py,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/tests/mixed/run.py,numpy/f2py/use_rules.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/precision.py
3cb37bbdb4bdf773b7bc0098b8d0cf940288a883,"Using the in operator to find substrings.  It is shorter and easier to understand.
",numpy/distutils/ccompiler.py,numpy/distutils/core.py,numpy/f2py/crackfortran.py,numpy/f2py/f2py2e.py,numpy/linalg/lapack_lite/make_lite.py
dea664f86f0f24f0f999945e20f9b2042d6b159c,"fixed typo
",numpy/oldnumeric/random_array.py
f6f20d9d0a088a7c1b7484dae47b9ad5d1a99ca6,"added reference to another style guide checking script
",numpy/doc/HOWTO_DOCUMENT.txt
86a257e385afd6914411215d1ff3feb9805b0ac2,"Fix memory leak in seterr exposed during str(a).  Fixes #602
",numpy/core/src/ufuncobject.c
1f0d060bdf6a5cd18d6f301c22cff0f0d482eed4,"Fix ticket #599
",numpy/core/fromnumeric.py
623c64fa473cdea90ef332a1a0b2fe759e3de215,"Fix label problem on wide builds.
",numpy/core/src/scalartypes.inc.src
0dbf6c323e2bf49fd8a6c31b805807c92a983650,"Add test for #600 fix.
",numpy/core/tests/test_regression.py
9034d6b1edb6179dd6c54c3ebd8056e723dd7c2e,"Finish fixing ticket #600
",numpy/core/src/scalartypes.inc.src
02eca61455c70e9656e52428469a270fded5303c,"Fix pickling of numpy.unicode_ objects on narrow builds of Python.
",numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c
440a5f9ad84f91460d6ee18aa7fdccac03c72625,"Avoid extra copy if otype is object on output.
",numpy/lib/function_base.py
e052f245f10a3f13e33f1e6fc2d15f22c03b377f,"Fix so that vectorize passes sub-classes through.
",numpy/lib/function_base.py
21b4beeb2aa5692333c4f822ee0471ff3eb63f27,"raise error if histogram is called with a decending range to bin into (see #586)
",numpy/lib/function_base.py
e41b3a4fe166cead069a0c22c818032c22383154,"removing decorators (see #580)
",numpy/f2py/lib/extgen/base.py
b1ff17a473ca58a18452ad1c0e7fd05ea239f016,"Allow subclasses through vectorize.
",numpy/lib/function_base.py
8f7a0f517adc8bd49bbfbf024ae0992269801785,"Fix vectorize to work with strings. Fix where 64-bit looks for X11 libraries. Fix comment.
",numpy/core/include/numpy/ndarrayobject.h,numpy/distutils/system_info.py,numpy/lib/function_base.py
bee10707e0d6537981458f4d75eb9a198a7728bc,"Fix ticket #592: segfault with bitwise_or inplace
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_regression.py
8095de4f7da6f50b129f76a9e261abe8ebc37b9a,"Fix Ticket #588: problem with negative striding and fast blas implementation of dot
",numpy/core/blasdot/_dotblas.c,numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_regression.py,numpy/lib/function_base.py
382beab52f444e3ce7c2a823077a4a1a0384a584,"Some documentation cleanup of disutils.
",numpy/doc/DISTUTILS.txt
ac3329bcdb6189985d8012f1bcbd5211dee0b30b,"Add Docutils dependency for Epydoc.
",numpy/doc/HOWTO_DOCUMENT.txt
fb53cd4ddc81baa377156b332a854a3d760f710d,"distutils/fcompiler/gnu.py: add -march=k8 when cpu.is_AMD64()
",numpy/distutils/fcompiler/gnu.py
f38bc34bcc817403efb932355f10f8028b10d97b,"Update distutils/cpuinfo.py
 * convert class names to CamelCase
 * Add PentiumM to LinuxCPUInfo and Win32CPUInfo. Also add it to SSE2 detection.
 * remove is_Athlon64() and is_Operton() from Win32CPUInfo, and add
   is_AMD64(). We can't reliably distinguish between the two (or from
   other 64-bit Athlons). Also add is_AMD64() to LinuxCPUInfo.
 * Factor out common command output checking, and remove (most) of the
   bare try/excepts used in the __init__ methods (exception is
   Win32CPUInfo; don't know what exceptions could be thrown). Use
   warnings.warn instead of printing exceptions to stderr
",numpy/distutils/cpuinfo.py
610438f1fb2436cec44b9ddd451daa67d846cdd0,"Rename test classes to CapWords.
",numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_regression.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_fcompiler_gnu.py,numpy/distutils/tests/test_misc_util.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/tests/test_derived_scalar.py,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/tests/test_scalar_function_in.py,numpy/f2py/lib/tests/test_scalar_in_out.py,numpy/fft/tests/test_fftpack.py,numpy/fft/tests/test_helper.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/random/tests/test_random.py,numpy/tests/test_ctypeslib.py
b4bb63c29c8bb81bcc2d2070f1bd3b81253acd85,"Remove use of the string module in distutils/cpuinfo.py
",numpy/distutils/cpuinfo.py
9e50c5846a42e865d9405f28261dd17695d38db5,"apply gen_lib_options overwrite only when a compiler module is imported
",numpy/distutils/ccompiler.py
fadbb424b539379889d2e8328cba62887caf69e2,"more rest corrections
",numpy/doc/HOWTO_DOCUMENT.txt
6bb10cb567acea1e8848cbbf73fb5ca62a9768fd,"trying to get the rest right
",numpy/doc/HOWTO_DOCUMENT.txt
432bad5df432ec6e6b9acaadc94959ae379eef52,"typo
",numpy/doc/HOWTO_DOCUMENT.txt
2aa8f463184dab8ea787cea65b511c9a0fc89f54,"more on documentation
",numpy/doc/HOWTO_DOCUMENT.txt
c7108cb9ab07fc410cc8b2f849cbac1d04f3382c,"allow TestCase classes to be prefixed with either 'test' or 'Test'
",numpy/testing/numpytest.py
cc3e7f3907f6c0621e5ff8866a078e4049fd2be8,"ma: output of .sum() should be scalar (patch by reggie,
closes ticket #557).
",numpy/core/ma.py
325cd587fd8fb15c6b9e69621fa1ae0a54ab8fe5,"Fix tri when dtype is bool (closes ticket #574).
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
38cb2ac1c22916d6426055b11e9e870d3f5f7f10,"Add msvccompiler to those injected with gen_lib_options
",numpy/distutils/ccompiler.py
0d9ad16b305a3f2e2e662a8dc93775d1e7b7ca22,"Inject our numpy.distutils.ccompiler.gen_lib_options into the various
distutils.*compiler modules (esp. msvccompiler)
",numpy/distutils/ccompiler.py
703a49e1958aaceb7e4585e98a694e151204143e,"Back out pearu's r4101 that added a warning about importing distutils before numpy.distutils. This warning triggered when setuptools was imported first.
",numpy/distutils/__init__.py
1468285de173abbc74ad9137ef054f74aa605ec4,"ReST fixes.
",numpy/doc/CAPI.txt,numpy/doc/pep_buffer.txt,numpy/doc/records.txt,numpy/doc/ufuncs.txt
0f3ebdbe4c41c1a5e5895ad04dcfa21894872733,"ReST markup fixes.
",numpy/doc/pep_buffer.txt
518e9b26effe2961108771762b7b252e393048e0,"Update formatting.  Mention how to handle blank lines in doctests.
Minor rephrasing.
",numpy/doc/HOWTO_DOCUMENT.txt
07039cc992da0fc117674e34b45c96c6cf0a38a4,"point to a link that actually works
",numpy/doc/HOWTO_DOCUMENT.txt
067d642e8531c1825ab9a694e57d6da4ee2ad1ec,"correcting epydoc output
",numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/module-tree.html
7a1c0075cfcb48df0c0d9a7e04f4d8d6c7dfda01,"another typo
",numpy/doc/HOWTO_DOCUMENT.txt
fe3c7881dc2bf1f2f6cb3e3d82daa3dcddd0f661,"typo
",numpy/doc/HOWTO_DOCUMENT.txt
6d231a93982ac7f5541ee77bf8aa9fadfe6617a3,"one more try
",numpy/doc/html/api-objects.txt,numpy/doc/html/crarr.png,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/frames.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/index.html,numpy/doc/html/module-tree.html,numpy/doc/html/redirect.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html
35c715529973c7f2ab5d207ad813da2c16f45ccf,"backing out the last thing i did
",numpy/doc/html/api-objects.txt,numpy/doc/html/crarr.png,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/frames.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/index.html,numpy/doc/html/module-tree.html,numpy/doc/html/redirect.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html
1794d8a4c4fe696170921e6d020e69553c92a20a,"get the example working
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py,numpy/doc/html/api-objects.txt,numpy/doc/html/crarr.png,numpy/doc/html/epydoc.css,numpy/doc/html/epydoc.js,numpy/doc/html/example-module.html,numpy/doc/html/example-pysrc.html,numpy/doc/html/frames.html,numpy/doc/html/help.html,numpy/doc/html/identifier-index.html,numpy/doc/html/index.html,numpy/doc/html/module-tree.html,numpy/doc/html/redirect.html,numpy/doc/html/toc-everything.html,numpy/doc/html/toc-example-module.html,numpy/doc/html/toc.html
7afbac20de2dab458578b7575d10509664a7b237,"fixing link error: fixed. Removing debug messages and added a warning message on the situation that triggered this issue: numpy.distutils must always be imported before distutils.
",numpy/distutils/__init__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_ext.py
aba52aeead780e3dfa8e83009a53c195ebd5b2f5,"fixing link error: wrong gen_lib_options is being used, may be it is a import problem.
",numpy/distutils/misc_util.py
0ac6c30452bb193b447434985a1d0e23dc1f05d7,"more doc work
",numpy/doc/example.py
1b388dd8ecdec77365a3128e5cf061cd91d27a2c,"fixing link error: added debug message, 3.
",numpy/distutils/command/build_ext.py
0ae9b49fe8c81525d717f140bc135857d3185349,"more documentation
",numpy/doc/HOWTO_DOCUMENT.txt
7b4908451de86e0259dc3cc3865d39877509931f,"typo
",numpy/doc/HOWTO_DOCUMENT.txt
dfc86251b3fab48d417d13e4ef6b009b05e83d67,"more doc work
",numpy/doc/HOWTO_DOCUMENT.txt
c5a845f12829895fe4c3e8f47cd34d5bd40ff14a,"fixing link error: added debug message, 2.
",numpy/distutils/ccompiler.py
baa815693a1888b0d933d342fe17bcfba106001f,"fixing link error: added debug message
",numpy/distutils/ccompiler.py
02a822342f565f8401463a446afae3054f2820e7,"fix missing string import
",numpy/distutils/misc_util.py
412700d0f0247def512447a0c40e23a1fd73d59b,"docs
",numpy/doc/HOWTO_DOCUMENT.txt
f71aa54a98d53da26833233df36fde2b3fee5969,"docs
",numpy/doc/HOWTO_DOCUMENT.txt
424bdd93788a47a3beda6954c5d12294383a223b,"cont. documentation
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py
76ab788ef20cfae3417b3d9a8513d6df13acd839,"more documentation
",numpy/doc/HOWTO_DOCUMENT.txt,numpy/doc/example.py
0b12d90b3eee39910bd1d3354a441ddb86583bb5,"documentation
",numpy/doc/HOWTO_DOCUMENT.txt
5e444eebaded57b607616ba0ef8f970bd2040f71,"more documentation
",numpy/doc/HOWTO_DOCUMENT.txt
dcac742933da32b812e630b6096d9eeb0439160c,"more documentation
",numpy/doc/HOWTO_DOCUMENT.txt
88e1fada90e401da46b8119a6bb5c75004573859,"more documentation work
",numpy/doc/HOWTO_DOCUMENT.txt
47dc804cb85dd821670567cec2dbcfca027cbc9d,"updating file extension to .txt
",numpy/doc/{HOWTO_DOCUMENT.py
007331a6b2027c1a20190134d32dec51356f1d4a,"documentation
",numpy/doc/HOWTO_DOCUMENT.py,numpy/doc/example.py
42dc14cf0ea6a84c5e8ddc86a5e941b3e6213ed9,"backport the usage of get_build_architecture to pyhton <=2.4
",numpy/distutils/misc_util.py
5f83bc06514b922cc6a56f4c33337f4ba8c6cdda,"A little refactoring of memmap
",numpy/core/memmap.py
6f149aaca13e603763a9c4a7347d605daaf4829d,"Raise an error if you try to close a memory-map that you don't own.
",numpy/core/memmap.py
1091b67a91c4e87a2304bd203b30800088f0e86e,"Fix memmap passing on it's mmap attribute to views but not closing the file unless it owns the memmap
",numpy/core/memmap.py
a64b5f0ee524a52cdb65fa8ae3dce1a18b58b589,"Add a fix for ticket #582 by adding a framework for clearing the floating point exception registers for extension modules compiled with different compilers.
",numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/ufuncobject.h
393718f36954c375fba8d9b52b35ee0b0b85173c,"Apply patch to fix ticket #557 (pinv causing error with empty arrays)
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
a4652fbe11726a92b83964e03aab65430305d9b7,"Just a check to make sure I can log in
",DEV_README.txt
88c8fe627d56b641c2260153cda474249f2a3054,"Fix places where RENEW is called so that if reallocation fails, cleanup is done gracefully.
",numpy/core/src/multiarraymodule.c
907294e4f4a8265418a3bd54912163f66a945c21,"Fix missing import.
",numpy/core/tests/test_regression.py
06832ebaef17f0724288cbdc84c88778d3a8e597,"Fix ticket #546: invalid argmax for non-native arrays.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
08488627b64df0275ba000cd8f24484639263a63,"Update documentation for `where`.
",numpy/add_newdocs.py
8ba0325c21e5c9ef4a3b70722cf77bc64abfbade,"Add test -- dimensions for rot90.
",numpy/lib/tests/test_twodim_base.py
64111f4b45f6cfa39ba35e37f0428142840ca44f,"Remove trailing whitespace.  Add a reminder about unit tests.
",DEV_README.txt
c189d6d29970587814e65b6f29ef5dbbe7db9564,"Add regression test for ticket #572.
",numpy/core/tests/test_regression.py
2ce8e59aca0b5db97c170894f728095d58433aca,"Get rid of print statement.
",numpy/distutils/cpuinfo.py
1f501ab820a4dbf0bd9fe040dd447884af1947b0,"Fix problem with msvc_on_amd64 not working prior to Python 2.5
",numpy/distutils/misc_util.py
eb83f90c7e80186b7308685900f39ff564f9c5c6,"Fix so that rot90 only works on first two axes.
",numpy/lib/twodim_base.py
b1cc248d1353d9a7266bacff9f5488e0b902852d,"Fix ticket #572:  memory leak in _insert for 0-d input.
",numpy/lib/src/_compiled_base.c
45cc025cbe09ecbb904fa01b02a30fd70f1a0fdb,"test
",DEV_README.txt
01fd4aaef9db332ead6ba7f6ee45495c4deeb0d4,"Make HOWTO_DOCUMENT a python file. This may fix attempts to post the output of
epydoc.
",numpy/doc/{HOWTO_DOCUMENT.txt
0aa8dd79fb378ef1885195371335386f92fdadc9,"More documentation.
",numpy/core/fromnumeric.py
1cc500ad7511ff8b72f64ee3b2c1170339804bca,"Put type in {}.
",numpy/doc/HOWTO_DOCUMENT.txt
149c1b4c043ae600bfded28e573310f968e287b9,"More documentation.
",numpy/core/fromnumeric.py
27d4f73e33ada55df938022a841fb9023a46cc1d,"Reorganized swig directory with subdirectories for documentation and testing
",numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/doc/Makefile,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/doc/testing.pdf,numpy/doc/swig/{,numpy/doc/swig/test/Makefile,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/{,numpy/doc/swig/testing.pdf
34946e3172bbabc610cbc53132ea8e45a18d70d1,"Changed freearg typemaps to use brackets to avoid 'ambiguous else' warning under C
",numpy/doc/swig/numpy.i
8497bf45e1ce1d9e9310ea80a288438a446d41c2,"Fixed C++ code to be C-compliant
",numpy/doc/swig/numpy.i
844e856b73448b4dceb35b35ac95eae2adc517c9,"Updated date on documentation
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
da505fbe8cfbb9ea66db08595f047432e6be3d33,"Added proper exception handling to dot example
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
f6f798504bcedd091562d0d468ca37290aff9ce5,"Do more documentation formating.
Rename some variables for consistency.

",numpy/core/fromnumeric.py
1fa7397150f71565a3cc2735cf005e09d15aa458,"Add support for universal GCC Fortran compilers on OS X (#571)
",numpy/distutils/fcompiler/gnu.py
208d3c27fe1605644002b270f68177c82a324d01,"Fix Von Mises random number generation algorithm to match that of Python and R.
",numpy/core/numerictypes.py,numpy/random/mtrand/distributions.c
774441cf12c0eeccf523ef88b781fdbe30f9ad5d,"Add longcomplex and singlecomplex to the type namespace.
",numpy/core/numerictypes.py
c492f3ef2ff6055712d26b73c7f29398d5ac79f7,"Added assert_string_equal function to numpy.testing.
",numpy/testing/utils.py
1e2610a2d517987c3d93ae7a0d0931edaf8a3827,"Make test() to return TestResult instance.
",numpy/testing/numpytest.py
5ebd53c59a59ec730feccff0341ea47d1959a6e6,"Added testcase pattern feature to testing interface to run only those tests that match given pattern.
",numpy/testing/numpytest.py
399cf659ef44f903e7666486a28e715a3a54f814,"Blank lines removed due to popular demand.
",numpy/doc/HOWTO_DOCUMENT.txt
10a6b61250f55dae30aabe9fc1463781bdcee64d,"Remove another generator.
",numpy/core/tests/test_multiarray.py
ea0c782d7faabf0bbf928475c57f462cbffa07c5,"Add blank lines between list items. This may be controversial because the result
is less compact, but I think it reads better on a terminal. Add bit about
putting alternative values for keyword arguments in curly brackets, default
first.
",numpy/doc/HOWTO_DOCUMENT.txt
4eb3857581478c4e634743afeb9b58fd46fb9edb,"Temporary workaround for problem with 'multivariate' when specifying zero
probabilities.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/setup.py,numpy/random/tests/test_random.py
97c4dd0f2e53398eeb41c326cc147518f0d2d288,"Replace generator expressions for compatibility with Python 2.3.
",numpy/core/tests/test_multiarray.py,numpy/testing/parametric.py
2b25d303c52af7bde9f0ae856335883380063114,"Some cleanups and rearrangement of comments.
",numpy/doc/HOWTO_DOCUMENT.txt
216a123de9b391000132c7f130c2e8f60bc67375,"Revise HOWTO_DOCUMENT.txt to make it work.
",numpy/doc/HOWTO_DOCUMENT.txt
98a307e6d9b1e7c489b3a2097847ecbdc1987753,"Remove hack to fix putmask and apply Eric's patch instead.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
4a81031790ec854f76e8147d51e5c5a17c61745b,"Fix putmask for byte-swapped arrays.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
64a264a0856b38b0acb7f505408a1b2bba9396bf,"Temporarily remove failing test which exposes endian problems with putmask
(old and new).
",numpy/core/tests/test_multiarray.py
f362b39ddc85a0529196de99b79dbcdce58c77e4,"Fix whitespace to conform to Python 3000 convention.
",numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/ucsnarrow.c,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/distutils/tests/swig_ext/src/example.c,numpy/f2py/lib/src/pyobj_to_string_len.c,numpy/f2py/src/fortranobject.c,numpy/f2py/src/test/foomodule.c,numpy/lib/src/_compiled_base.c
cffb9714779adc0156c36bb55d0a1e8a29589408,"Fix parametric test names under Python 2.4.
",numpy/testing/parametric.py
c8b44bcca6c5be9d6df67d775fd0250c83e73455,"Add record array test for putmask.
",numpy/core/tests/test_multiarray.py
a46f16e2ec8ca594adc8a0c0203852e23c041901,"Fast putmask implementation (patch by Eric Firing).
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
859439e5ebcdab8f5a5ced4dd42be537e4b037e5,"Fix record assignment (based on a patch by Sameer DCosta).
",numpy/core/records.py,numpy/core/tests/test_records.py
47221fe49a26140a57c6af6569afbaf055db15c8,"Fix parametric testing for Python 2.4.
",numpy/testing/parametric.py
ba77c98e0cb21515c0117669e5c0ea13a035dc0c,"Fix parametric tests for Python 2.4.
",numpy/testing/parametric.py
30c6bcab17dc43b9683ff79bca99f1b37b0f70e1,"Fix allclose and add tests (based on a patch by Matthew Brett).
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
03064002eff18e65516e3f8885d886c45e65045b,"Add parametric unit tests (contributed by Fernando Perez).
",numpy/testing/__init__.py,numpy/testing/parametric.py
42fd3467cb4d3bbf7b79b1577f23dfed05746470,"exec_command.py: remove a version check for > Python 2.1
",numpy/distutils/exec_command.py
c4e38d2904e8337019ad4f735d92feabf1f789a1,"in ccompiler.CCompiler_customize_cmd, allow a list of command attributes to
ignore when customising. This will be used to simplify some of the compiler
customisation in command/
",numpy/distutils/ccompiler.py
83f13bc82583855d024788b4d27707bdf2cb315b,"- remove .a static libs and recreate, instead of updating (ar on OS X can't
  handle updating universal .a)
- in unixccompiler, use ccompiler.replace_method instead of new.instance_method
",numpy/distutils/unixccompiler.py
4400da25e2b796727076add0799fddda4f475700,"- fix specification of noopt, etc. in the config_fc command
- check that Fortran compiler aliases aren't duplicated
- don't use the superclass alias in the VAST fcompiler class
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/vast.py
fc3d818af88b59c52e0ccdf23aecdb093add97fb,"Improved formatting for rms docstring
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
14dd6a9c6ac5a393bfcda7c6a77e615ce70b5873,"Improved formatting of typemap signature lists
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/testing.pdf
9fc1daf9ac0fe6f7f8c1ab593b3d75c85e438e75,"extgen: removing old files
",numpy/f2py/lib/extgen/c_code.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/converters.py,numpy/f2py/lib/extgen/extension_module.py,numpy/f2py/lib/extgen/predefined_components.py,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
a6148b252cc8922255832bd2bed1de7d364b47d4,"extgen: restored numpy support, fixed bugs.
",numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_support.py,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/extgen/setup_py.py
d4375f2985a3e5f3e503960b925b4f0e3a307171,"extgen: rewrite, clean up, update docs, simple example from Python reference manual.
",numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_support.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/py_support.py,numpy/f2py/lib/extgen/setup_py.py,numpy/f2py/lib/extgen/utils.py
907a90f4c28fe811d878abe66ae375a757c9ece3,"Fix an incorrect usage of log.set_verbosity(INFO) causing log always to be at DEBUG level, INFO is for set_threshold.
",numpy/distutils/exec_command.py,numpy/distutils/log.py
5da18aa76edac59ce485ff9bc03620b76118ddeb,"Optionally use setuptools for commands that setuptools customizes.
",numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/sdist.py
ad48c03011ce4395cf8e8c7d38f54bc418830774,"extgen: added initial values to C declarations.
",numpy/f2py/lib/extgen/c_type.py
7edfd74f18956b46ea51fffd720369e652f40d50,"extgen: impl support to all scalar C types and strings that Python supports.
",numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
ff21b480d893420b7d5a0adc464d6621b5484fc4,"Make sure we import numpy's configuration. Closes ticket #565.
",numpy/__init__.py
45176eddd776226c970b37632205541a1cd37a2c,"extgen: added argument dependecies support, reviewed reference counting of input and output arguments.
",numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
9bee05389a14f3bbf8f59a10b2398c8a4a7232ca,"Added numpy array and scalar support to PyCTypePython.
",numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/doc.txt
5d4824522b29ac83d08d208723cba56ece1d6ea5,"Fix string conversion of polynomial when leading coefficients are
zero. Closes ticket #564.
",numpy/lib/polynomial.py,numpy/lib/tests/test_polynomial.py
7a605b4d18a7d5283c5c3eb31b9258150e5755c5,"extgen: Impl argument support to all Python types.
",numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
c7f8d0d531e263969c80f861df1b3e41bff6683b,"ExtGen: impl PObject* and C int support, minor improvements.
",numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_code.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/converters.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/extension_module.py,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
4196b728240d9225c38a6d630b5c117194c7577e,"Impl CType classes and rewrote docs.
",numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_code.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/extension_module.py,numpy/f2py/lib/extgen/predefined_components.py,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
2ff91f96ae8ed6c53c5822696e5527f12b9e1e2c,"Add extgen subpackage.
",numpy/f2py/lib/setup.py
0cd859ef7a7155f09f6a9a2c72e21e8fd43aed9d,"ExtGen: doc update.
",numpy/f2py/lib/extgen/doc.txt
0a24806b21134798a0bb3a9382c7cb11d35bc46c,"Impl basic argument support and documentation generation.
",numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/extension_module.py,numpy/f2py/lib/extgen/pyc_argument.py,numpy/f2py/lib/extgen/pyc_function.py
8092698a31f3cc41f5502f736db2c5863988893d,"* Allow an Intel Fortran 10.0 for 64-bit version string that I've seen in the wild.
* Use -fPIC instead of -KPIC for said wild compiler.
",numpy/distutils/fcompiler/intel.py
5bd291e93a4885d4d176f2675c68a4baae8a0c80,"In documentation, removed one of the reasons for not providing (out) typemaps, which turns out not to be true.
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
66650bdd599110d55425467d5a99aba0a5c6026d,"Initial commit of extgen - Python Extension module Generator package.
",numpy/f2py/lib/extgen/__init__.py,numpy/f2py/lib/extgen/base.py,numpy/f2py/lib/extgen/c_code.py,numpy/f2py/lib/extgen/c_type.py,numpy/f2py/lib/extgen/doc.txt,numpy/f2py/lib/extgen/extension_module.py,numpy/f2py/lib/extgen/predefined_components.py,numpy/f2py/lib/extgen/pyc_function.py
73001f4b36d4745bec81d3526800aacad5614b3d,"Ignore blank lines when determining Fortran free format.
",numpy/f2py/crackfortran.py
b6406a5cf255bc49891d893d155af6d106b015a8,"Fix asfarray to return an array instead of a matrix.
",numpy/lib/tests/test_type_check.py,numpy/lib/type_check.py
cde89143c3818f245d2f8ca7b5ba4af4592e337b,"Trying to fix unknown symbol __imp_tanhf linking error, using nc_tanhf.
",numpy/core/src/umathmodule.c.src
1fc87e847b42f3f887e85972d16b576575033ad1,"Trying to fix unknown symbol __imp_tanhf linking error.
",numpy/core/src/umathmodule.c.src
5283f9b7975eecb6bc8c0ec1fea62b49988f3ec1,"Initializing funcname_data inside InitOperators to fix compilation errors on Win32 AMD64 using SDK.
",numpy/core/code_generators/generate_umath.py
5f96d3eabf87cdddb3e38f2096d013ec17f9c2a9,"Fix more compiler warnings.
",numpy/core/src/ufuncobject.c
3aac6034b06074a6ae8e0666fb087a467d9166cf,"Fixed typos.
",numpy/core/src/umathmodule.c.src
73f4ef1d53b0d548eb11dbd9dd8ae5cac445b7a0,"Trying to fix compiler wrarnings, 5. Defined ldexpf when DISTUTILS_USE_SDK.
",numpy/core/src/umathmodule.c.src
8ddf292d22eb7333fe42023d84e821ef61f468ac,"Trying to fix compiler wrarnings, 5. Defined frexpf when DISTUTILS_USE_SDK.
",numpy/core/src/umathmodule.c.src
ab035bb4943f1004688c591282599b9c96556098,"Trying to fix compiler wrarnings, 4.
",numpy/core/src/umathmodule.c.src
a797a6358be742646f1ebf95607e395df6fb7259,"Trying to fix compiler wrarnings, 3.
",numpy/core/src/umathmodule.c.src
a8839aaf8fd85af0a8b926029876cf23b63e90ef,"Trying to fix compiler wrarnings, 2.
",numpy/core/src/umathmodule.c.src
0e41f9a4603e45e6d8d18b92ad6c6bd928cba8ad,"Trying to fix compiler wrarnings: conversion from 'double' to 'float'
",numpy/core/src/umathmodule.c.src
ce21271d29fcf0c521bc224576d699618244fc10,"Trying to fix mingw32 build.
",numpy/core/src/umathmodule.c.src
52f2eca5ce5a7c252f1e5676d007afd0f1e66794,"Fix rint error and castings.
",numpy/core/src/umathmodule.c.src
e4ac22accebd035364cc8361c1b5a68f227b3a0b,"Using DLL_IMPORT only when DISTUTILS_USE_SDK.
",numpy/core/src/umathmodule.c.src
8e3f5597ca1ff9e5c1df3f5a315898d3a788d02d,"Defining fabsf, hypotf, rintf when DISTUTILS_USE_SDK.
",numpy/core/src/umathmodule.c.src
c34c29482907bd75e1b17899dbe1f97d48aef93c,"Trying to use DL_IMPORT for logf, sqrtf.
",numpy/core/setup.py,numpy/core/src/umathmodule.c.src
f7dfa5fe069799315f04973622238a2aee26cb63,"Trying to fix inconsisted dll linkage warning, 8: Dont understand why my changes have no effect, giving up for now.
",numpy/core/src/umathmodule.c.src
704e0d08c96570d3bd9bc53fe7684477d58a2048,"Fix typo.
",numpy/core/setup.py
b4093dd826ac9bbf73843e212560b5a4a00f777f,"Trying to fix inconsisted dll linkage warning, 7.
",numpy/core/setup.py
821e6e9198509c1843ab83f93418c92903973b62,"Trying to fix inconsisted dll linkage warning, 6.
",numpy/core/setup.py,numpy/core/src/umathmodule.c.src
1c6f114c5ff5ea05daffbc15b46def81b05f2c96,"Trying to fix inconsisted dll linkage warning, 5.
",numpy/core/setup.py
f4a2af4926508dda4205b123d0a3a0e497c703da,"Trying to fix inconsisted dll linkage warning, 4.
",numpy/core/setup.py,numpy/core/src/umathmodule.c.src
fab6ff3c4e9fcff08eb0e85823f8ae70e49deecb,"Trying to fix inconsisted dll linkage warning, 3.
",numpy/core/src/umathmodule.c.src
a187b6e0d48aa9f0d9db7472008b165b17371ebf,"Trying to fix inconsisted dll linkage warning, 2.
",numpy/core/src/umathmodule.c.src
7c194a1f31918ec63480aa553447e38d4fdce2f3,"remove debug messages.
",numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
8e6960bd1cb22e1c41cd0e811fbccad3bcac0b24,"Trying to fix inconsisted dll linkage warning, clean up.
",numpy/core/src/umathmodule.c.src
ec11afa20fc24cc765488cca5540d72fcc1ff8f7,"msvc_on_amd64 must be applied *after* importing ccompiler module, apply quote_args also to include_dirs.
",numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
70899ea7e456ab7db505a8b7cbabf2da207b5b39,"Added debug messages to see if quote_args are applied properly.
",numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
458af7568be86ad48caa92cec67fc6ea7d93db04,"Fix type error on setting os.environ item.
",numpy/distutils/misc_util.py
d03073f29f8722df15acf88d9dd860dd69c92bef,"Try to fix build on AMD64 with MSVC compiler.
",numpy/distutils/misc_util.py
e4cf3417be16ac14aeff908fc344a632fc1b4399,"Doc update 2.
",numpy/f2py/lib/doc.txt
2994141453421f306bcd891d559b31b554f220db,"Convert large integer scalars to long instead of to int [patch by
Xavier].  Closes ticket #549.
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py
e4ccde2aa3ee6b6edb5b22ad5c0dcda430dac8e1,"Doc update.
",numpy/f2py/lib/doc.txt
0b607334bef559e3c822974e4145f3fd0865e687,"Added doc file for the g3 f2py library package.
",numpy/f2py/lib/doc.txt
a39ebbcee92b6e5572d3159bf50126213e6bf887,"Trying to fix Windows XP x86_64 MSVC build.
",numpy/distutils/fcompiler/compaq.py
6eab65749990402a42b603423f0d23945e908f3a,"Using own quote_args, trying to fix build failures with MSVC compiler.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/misc_util.py
468e6532a29e6302986a75cfe19eca7670c5a460,"More fixes for building scipy with Mingw32 compilers.
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/system_info.py
1f4f410baef0547e26dc68d1ea3c60d140602a15,"Give a hint when getting ""Too many open files"" failure.
",numpy/distutils/ccompiler.py
1222a4a979ff0d960be0e172c2947f9cce58d5fa,"Don't use _nt_quote_args as exec_command should
handle spaces in program path. This fixes building
numpy/scipy on Windows using mingw32 g77 with full
path=C:\Program Files\MinGW\g77.exe.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/gnu.py
c3c9401759b9d7e9282b7745ea1ee600c1169cfd,"Add regression test for eye.
",numpy/lib/tests/test_twodim_base.py
fb8c49f5f853f8e8898e0c4a2c9c71571ce6e9e2,"Make sure we always return a value from eye(). It wasn't returning a value when dtype==bool.
",numpy/lib/twodim_base.py
19713cf2a650d9ffa910ebeb5f15e8b24e7125ae,"
",numpy/distutils/exec_command.py,numpy/distutils/fcompiler/compaq.py
eb12ad4a3656aafe1260e0a981bd5c0dc136de0c,"Fix polygon division. Closes ticket #553.
",numpy/core/tests/test_regression.py,numpy/lib/polynomial.py
393473fbace1bb64ef73ab3ebd11a78db832dca1,"Fix polynomial comparison. Closes ticket #554.
",numpy/core/tests/test_regression.py,numpy/lib/polynomial.py
134e4bbaa54ff7938160b8e912a06af8f63bd513,"Fix randint. Closes ticket #552.
",numpy/core/tests/test_regression.py,numpy/oldnumeric/random_array.py
db593109a5f30089e888f91ac2476a6c5e968879,"Fixed LAPACK_SRC build for lapack-3.1.1.
",numpy/distutils/system_info.py
f20f87bbfde7a5feabeb428d8db309b2f5dcc67d,"Added a new option to NumpyTest.run command line: -s somestring will replace sys.argv\[1:\] with splitcmdline(somestring)
",numpy/testing/numpytest.py
c41545e98af71cf97741713665e365bd4f0aef12,"update fortran parser docs, 2
",numpy/f2py/lib/parser/doc.txt
830b6218f0934b580693e5b5848e1772693c5a66,"update fortran parser docs.
",numpy/f2py/lib/parser/doc.txt
02212b6f16999e13d957621f594d2f8cfbfa03f6,"updated fortran parser docs to rest
",numpy/f2py/lib/parser/doc.txt
13fca8d4094abc78288069c78ffded8a15b69758,"Regression test for ticket #396.
",numpy/core/tests/test_regression.py
a3e3548177a96b53e380b1c2070c0efb3c16da14,"Fix documentation for 'where'.
",numpy/add_newdocs.py
855587eec81895f0f1cf1be6b847c0e0af0fcce7,"Clean up fromnumeric docstrings.  Closes ticket #543.
",numpy/core/fromnumeric.py
18bc84c2799e7a476c4ed6620e7a36bc055fe6af,"Tile empty arrays.
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
e02d2e27677b932b90510b1b00d63d58b39e7ac4,"Remove un-necessary DECREF
",numpy/core/src/ufuncobject.c
3bbfa8af671843476dacf27f5f42006d9fd462fa,"Add support for aliases for Fortran compilers.
 - 'g77' for gnu, 'gfortran' for gnu95, 'ifort' for intel
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/intel.py
2b7dcc22d4385e15ccb651c06fa62eece0bb45e0,"Working in  _sortmodule.c.src

Reindent code to conform to later python style guidelines.
Add macros for string and unicode comparisons.

Todo:
    Fix swap macro to not use magic variable.
    Add tests for sorts.
    Add full compliment of sorting types for string and unicode.
    Separate out insertion sort?
",numpy/core/src/_sortmodule.c.src
7ea8b73492aa8e9f7be88ce8e53fa309e3da1f84,"Import Pyrex.Compiler.Main explicitly since in 0.9.5.1, it does not appear to be imported with a plain 'import Pyrex.Compiler'
",numpy/distutils/command/build_src.py
59e6af2925dc485b6cefba37d10207ea8f670535,"Add the `inexact` dtype to the tree of types in the numerictypes.py docstring.
Also add some ASCII lines to make the tree clearer.
",numpy/core/numerictypes.py
00f72c962db4a4cb152bdd548dedac916ed582cd,"Fix new typo added to arrayprint.py in r3877
",numpy/core/arrayprint.py
c7dd6e4bfa5a6d8647b5c424a2c5cec9e23c73b9,"NaN and Inf in arrays print always as NaN or Inf (not platform-dependent)
 - strings used for NaN and Inf can be set with `set_printoptions`
 - `get_printoptions` returns a dict instead of a tuple now
 - an array of complex longfloats prints negative imaginary components
   correctly (no more 1--2j).
 - minor cleanups to use Python 2.3 idioms
",numpy/core/arrayprint.py
57042ccc48c75b9c8c94cd350fc8d289ff79436a,"Replace <= by < in the insertion sort part of argsort(kind='mergesort')
for strings. Fixes ticket #540.
",numpy/add_newdocs.py,numpy/core/src/_sortmodule.c.src,numpy/core/tests/test_regression.py
4c49c1891382a2320ab8c3dcfce0e80487906cff,"Small fix for numpy.info(), which was unconditionally broken
",numpy/numarray/functions.py
af6c835e84611aad64627c8b53d2d5b229fa5528,"Print install location, numpy version, and python verstion in numpy.test()
",numpy/__init__.py
bc86e4a60050c629a57ef87f2dee48af6006b230,"Fixed format string warning
",numpy/doc/swig/numpy.i
827bc405c59d98251055ea93e0a6392925d713a6,"Fix build breakage.
",numpy/distutils/fcompiler/__init__.py
635a9fbf1cc87531888eaf50d09bb559e4ad2dfa,"Better version handling in fcompiler
 * Remove FCompiler.get_version_cmd, FCompiler.get_flags_version,
   FCompiler.get_linker_so_cmd, and FCompiler.get_linker_exe_cmd;
   subclasses should do this in FCompiler.update_executables()
 * FCompiler attributes .compiler_f77, .version_cmd, etc., are now
   properties that read from the .executables dictionary.
 * Update intel.py and absoft.py for above
 * Add extra asserts for defensive programming. Most of our problems
   here seem to come from bad values being generated, and the error not
   being caught until later.
     * must call FCompiler.customize() before FCompiler.get_version();
       command/build_ext.py and command/config.py updated
     * verify that commands make sense earlier -- must be None or
       lists of strings

Also,
 * add IA-32 as another pattern to search for in 32-bit Intel
   compiler version.
 * minor formatting
 * add debugging helpers to environment.py:EnvironmentConfig class
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py,numpy/distutils/environment.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/intel.py
46f195b0637b929643906c8ba7b1392849abe9ac,"Minor refactoring of build_clib (break up build_library a bit)
",numpy/distutils/command/build_clib.py
448d3605ef33677fe360ee33cb237da1d5b24947,"add fdebug as distutils key in [config_fc] for compiler flags to use when
compiling Fortran in debug mode.
",numpy/distutils/fcompiler/__init__.py
2dd0839fb8908d23a033e91f4836f0311fb946b4,"Fix f2py --fcompiler=.. option.
",numpy/f2py/f2py2e.py
9c81f9cc0517031add7f31eddb489743e9324233,"Fix typo.
",numpy/distutils/fcompiler/__init__.py
cb082e0ec4da42ac1f2022754d98c0a03a38d020,"use get_flags_version to set version cmd flags.
",numpy/distutils/fcompiler/__init__.py
14d5854b76e423cbaf0622b206d7b3b69e513a83,"Typo fix: expose memusage for nt OS.
",numpy/testing/utils.py
047ec0c8def100cb6b407fd400fbea15a9c38f09,"Restore back to original .transpose behavior in memmap.py with explanation of the problem.
",numpy/core/memmap.py
5f6e314f3fb9a6709f3007774cbd65b292df92f2,"Fix so that _mmap gets carried through .transpose
",numpy/core/memmap.py
33a80a6b3655c1d278298a1c5e911867bf8531fb,"Fix so that _mmap gets carried through .transpose
",numpy/core/memmap.py
5ed8accbc947ad285c774905e369a5fbaef52344,"f2py_testing: remove jiffies, memusage definitions. Use numpy.testing.util versions instead
",numpy/f2py/f2py_testing.py
7b76ca7d12f86640b8ab12d5378997d483b0692f,"Fix ticket 535.
",setup.py
75ac806348fc29908b04046170ef7747a815339e,"Updated intel compiler arch flags -- intel compiler users should recheck these options.
",numpy/distutils/fcompiler/intel.py
bbfdf129791e044e663c41e75bccc3b860b82c45,"Fix #534, introduced by r3856. The return when exe_cache had something in it
meant that FCompiler.find_executables would be executed *once*, regardless
of how many subclasses called it.
",numpy/distutils/fcompiler/__init__.py
6f509f626355208b3cb97e692daf52c3734769cd,"add __neg__ and __pos__ methods to poly1d
",numpy/lib/polynomial.py
e11e876cb485269eb18baa0a58cf3009584a354a,"Reduced find_executables messages.
",numpy/distutils/fcompiler/__init__.py
47dfa7030fa2166b1010ad7d635533a2786a03b8,"Fixed detecting fortran compilers under windows.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/__init__.py
d91fcb0515ae875dfbafd5a94d4845725b3f681e,"Fix: _dotblas will not ork with fortran compiled blas.
",numpy/core/setup.py
84e68dd73f68f6bfd48ffa7007f65434bd9cb538,"Undo changeset 3839: interactive support is being used (this convinient on windows where one can click on setup.py and build the numpy or whatever package in 2 keystrokes).
",numpy/distutils/core.py,numpy/distutils/interactive.py
9949bc651f2213f2ac3567365a57a61f67a77772,"Add __iter__ method to poly1d so that list() on a poly1d doesn't go into an infinite loop
",numpy/lib/polynomial.py
94900c38a015d2464c1a3d23c19606bc953ec702,"Fix 64-bit zgeqrf on trunk.
",numpy/linalg/lapack_litemodule.c
47478cba842b48c43846d7f343261154b7f16b66,"Fix issues with undetected Fortran compilers.
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py
b8066ba719a066aef7f8e72f170149e0e2f782eb,"Resolved issues in changeset 3846.
",numpy/distutils/misc_util.py
28b4885a6354f840d0ed7fe4afcfcbdeedeb3347,"Undo change in 3845.
",numpy/distutils/misc_util.py
00a35871d1af7aee6c329b6341e79d592e234272,"Fix some problems with data-files not being added in top-level and extra version information added to the name of development distributions.
",numpy/distutils/misc_util.py,setup.py
aaba782713ef34736f15d016e9b080c2cc46bf47,"do an appropiate behaviour in the distutils commands when new_fcompiler returns None
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py
1228e04dab49b8709662df3c2466c5f0bad9532a,"new_fcompiler returns None when it can't match the platform. Hopefully clears up Windows compiling problem.
",numpy/distutils/fcompiler/__init__.py
2f0c2a5ca770c9cdb262098476c678ef22bd3ad9,"Make changeset 3830 in the right place.
",numpy/core/include/numpy/ndarrayobject.h
a1f45e3004716f4b79f25e011a5956bd3ff5d67a,"Add a convert procedure to the flag-getting logic in fcompiler and environment.
Otherwise, flags (for instance) from environment variables or setup.cfg are
are strings, where lists are expected.
",numpy/distutils/environment.py,numpy/distutils/fcompiler/__init__.py
5f88e3d40e2c2efc530607691f822e5f73315861,"Remove interactive support. No one uses it.
",numpy/distutils/core.py,numpy/distutils/interactive.py
9474991300d3e59a1d7249d155e85c7d9f162fe9,"fix my mistake in fcompiler/absoft.py and fcompiler/intel.py
",numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/intel.py
60eed2d138f5fd08fc8fa016debbac097371a47d,"Better temporary file handling by using one temporary directory for
numpy.distutils, and removing that at exit. Replaces using tempfile.mktemp.
",numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/misc_util.py
bfb1633766b1e6b1c72de094aa565c6e6ec0db80,"Use log.debug instead of print in setup.py's
",numpy/f2py/setup.py
95bfa16f952c05a9c6e45f0f93c3af4678b7d27e,"numpy/setup.py shouldn't be run as a script
",numpy/setup.py
0f7dfd7f75d339098c1bb024dfb7181c7a31411a,"Use log.info instead of print in setup.py's
",numpy/core/setup.py,numpy/distutils/command/build_src.py
092c73202225bcfe595b555e890e3e29d862c437,"When checking for the _WIN32 preprocessor symbol, don't #error on failure
",numpy/random/setup.py
a27258edf4103aa0d3d1bce13c1acb987cbe7dca,"Clean up select docstring.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
944c32ad4a0618c834dcb06e50e90267df1d6835,"Select should not modify output arguments. Add test for basic select functionality.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
840bd64e600ac458b17fd058a181b860e87d56bd,"distutils: clean up imports (found by running pyflakes)
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config_compiler.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/intelccompiler.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/unixccompiler.py
888d6eddcb686d7b4b502b34be35be9acec84f6b,"Fix at least one bug in fcompiler introduced by me
",numpy/distutils/fcompiler/__init__.py
4b9536cc6028da5d22e261d8c669af0c7cec14d5,"Add a few more log.debug's in fcompiler
",numpy/distutils/fcompiler/__init__.py
56e555c305f7d58f0885cac44cd4a7949f5b954d,"Add a numpy.distutils.log.good function, which when WARN messages would be
logged, logs a ""nice"" anti-warn version. Use this for finding executables
to report when we do actually find one.
",numpy/distutils/exec_command.py,numpy/distutils/log.py,numpy/distutils/misc_util.py
f7b399a6f9a299d82dc9490bf81683b0d1693427,"merge from distutils-revamp branch (step 3)
- minor command/build_src cleanup
",numpy/distutils/command/build_src.py
5267b3e16654ef326f525fdb9a1287a88396c616,"merge from distutils-revamp branch (step 2)
- fcompiler changes. All flags, executables, etc., should be overridable
  by the user with config_fc (either command line or setup.cfg) or by
  environment variables
",numpy/distutils/environment.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/interactive.py
d11dbc78c0df5055a6ed57285775cc18dbe1721a,"merge from distutils-revamp branch (step 1)
- minor cleanups
- find_executable returns None when no file found (instead of having to
  check with os.path.isfile)
",numpy/distutils/ccompiler.py,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/exec_command.py,numpy/distutils/from_template.py,numpy/distutils/intelccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py
9ddd860b31ea1d4517eb3fff6ab4c280ebb14dec,"fix ticket 526
",numpy/distutils/fcompiler/__init__.py
fe2f8b811f8f87475f51396eca9a848d2746ab2b,"Fix the formatting of docstrings for all functions in fromnumeric.py so they
don't wrap when using help() from an 80-character terminal.
",numpy/core/fromnumeric.py
d7cee5d2ff7cd16fe4c7ab7f8dae7218b783d7c9,"Change scipy -> numpy in who() docstring
",numpy/lib/utils.py
de20de7f096fd4b5be726c29b9bb43bb0a092934,"Improve docstring formatting for NumpyTest
",numpy/testing/numpytest.py
633def1ab34f1ae885deb388904aff075f37438c,"Fix docstring formatting for PackageLoader class
",numpy/_import_tools.py
57ccbf2ceac4a401afc9dae735f3a1739e5a0edb,"Fix docstring typo for vstack()
",numpy/lib/shape_base.py
01900f628194622750d17cc6f65a484c8c2f2f93,"Update version number on trunk.
",numpy/version.py
50dff22bb5d9eb113531267f8c64081792309b03,"Fix tab/space.
",numpy/lib/getlimits.py
d4c96cad19a58d376009f9c23aa8122dcc6d472e,"Fix up getlimits to work with Python2.3
",numpy/lib/getlimits.py
8d3338b61dfe2ac2e0604ed3a1c53231e9f3d5d3,"Fix some compiler warnings.
",numpy/core/src/multiarraymodule.c
b429ae58defaaccfc7aecf7b07d193a60da38d38,"Properly decrement references for _internal.py imports
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
8f0db8c41c17af95900c0cdfe71aa6916b5094c3,"Expose numpy.iinfo and re-implement so it supports big-endian as well.
",numpy/lib/getlimits.py
519e621cce49d0f6bf3f76ffbe84537ec81b532a,"Fix so that _internal.py gets imported when it is needed.  Perhaps this will fix the problem with multiple-interpreters not working correctly.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
5b87029e229fa3dcf0e81231899c36bd52a7616c,"Add an dummy import statement so that freeze programs pick up _internal.p
",numpy/core/__init__.py
16d829c75d16e5f29daf133d4223bc1d0bc9b2f2,"Remove import multiarray from top of _internal.py
",numpy/core/_internal.py,numpy/core/src/multiarraymodule.c
b6664e259e1f0394e784545ae0f30407ba88d7fb,"Add regression test for ticket #501 [patch by Andrew Straw].
",numpy/core/tests/test_regression.py
9fa5c5a1d36ff690db92fa4b55fc10172f50a1ad,"Re-think the byte-swapping unicode tests.  They were correct to begin with.  Try to fix the new bug on narrow builds.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_unicode.py
984df2b3aba4e4131d9b58de6e4d880e497ac0bb,"Remove tests for inequality on unicode scalars --- not sure why they were there in the first place. Fix bug in masked_array.
",numpy/core/ma.py,numpy/core/src/arraymethods.c,numpy/core/tests/test_unicode.py
74057dee709fe3e48d24f5afabd3ffb5ffc72888,"Fix ticket #501 which caused some array printing problems
",numpy/core/arrayprint.py
0a1fa4dc3210882133be19e7d93fd50169673de1,"Added most of patch from #422.
",numpy/core/ma.py
4cfa7705d3a05b75d5c7031ad958d1adf818fe7e,"Add a few more checks to make sure that numpy unicode scalars report correctly on narrow builds.  Fix a long-standing seg-fault that arose when calling u.imag on an object with numpy.unicode_ type.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
4de81d32d97a2efb1023ca0c19e36990f1ba64a4,"Fix scalar inf comparison in allclose.
",numpy/core/numeric.py
1a1f2eac015b2370f8d67989bd17ee29c9d5f89e,"Fix array interface url.
",numpy/core/include/numpy/ndarrayobject.h
887f06b7dd0785be3a0eefcc65dda5d818f7002f,"Be robust when the shared distribution object exists does not have data_files set. This can happen when easy_install automatically builds dependencies.
",numpy/distutils/misc_util.py
3484afac1ecbc0621a8c7baf16c987214630c9be,"Use a more robust method for finding the directory of the setup.py file calling Configuration(). easy_install spoofs __name__, thus confusing the old method.
",numpy/distutils/misc_util.py
6ac33ee4e12b78b164a05046f7e029681f0e09a3,"[distutils-revamp] Merged revisions 3769-3794 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

........
  r3775 | pearu | 2007-05-18 10:32:33 -0400 (Fri, 18 May 2007) | 1 line
  
  build_src: introduced --swig and other related options (as in std distutils build_ext command), use --f2py-opts instead of --f2pyflags, improved error messages.
........
  r3776 | pearu | 2007-05-18 12:41:44 -0400 (Fri, 18 May 2007) | 1 line
  
  Extension modules and libraries are built with suitable compilers/linkers. Improved failure handling.
........
  r3779 | pearu | 2007-05-18 13:33:15 -0400 (Fri, 18 May 2007) | 1 line
  
  Fixed warnings on language changes.
........
  r3780 | pearu | 2007-05-18 16:17:48 -0400 (Fri, 18 May 2007) | 1 line
  
  unify config_fc, build_clib, build_ext commands --fcompiler options so that --fcompiler can be specified only once in a command line
........
  r3781 | pearu | 2007-05-18 16:41:10 -0400 (Fri, 18 May 2007) | 1 line
  
  added config to --fcompiler option unification method. introduced config_cc for unifying --compiler options.
........
  r3782 | pearu | 2007-05-18 16:49:09 -0400 (Fri, 18 May 2007) | 1 line
  
  Added --help-fcompiler option to build_ext command.
........
  r3783 | pearu | 2007-05-18 17:00:17 -0400 (Fri, 18 May 2007) | 1 line
  
  show less messages in --help-fcompiler
........
  r3784 | pearu | 2007-05-18 17:25:23 -0400 (Fri, 18 May 2007) | 1 line
  
  Added --fcompiler,--help-fcompiler options to build command parallel to --compiler,--help-compiler options.
........
  r3785 | pearu | 2007-05-18 17:33:07 -0400 (Fri, 18 May 2007) | 1 line
  
  Add descriptions to config_fc and config_cc commands.
........
  r3786 | pearu | 2007-05-19 05:54:00 -0400 (Sat, 19 May 2007) | 1 line
  
  Fix for win32 platform.
........
  r3787 | pearu | 2007-05-19 06:23:16 -0400 (Sat, 19 May 2007) | 1 line
  
  Fix fcompiler/compiler unification warning.
........
  r3788 | pearu | 2007-05-19 11:20:48 -0400 (Sat, 19 May 2007) | 1 line
  
  Fix atlas version detection when using MSVC compiler
........
  r3789 | pearu | 2007-05-19 11:21:41 -0400 (Sat, 19 May 2007) | 1 line
  
  Fix typo.
........
  r3790 | pearu | 2007-05-19 11:24:20 -0400 (Sat, 19 May 2007) | 1 line
  
  More typo fixes.
........
  r3791 | pearu | 2007-05-19 13:01:39 -0400 (Sat, 19 May 2007) | 1 line
  
  win32: fix install when build has been carried out earlier.
........
  r3792 | pearu | 2007-05-19 15:44:42 -0400 (Sat, 19 May 2007) | 1 line
  
  Clean up and completed (hopefully) MSVC support.
........
  r3794 | cookedm | 2007-05-21 09:01:20 -0400 (Mon, 21 May 2007) | 1 line
  
  minor cleanups in numpy.distutils (style mostly)
........
",ccompiler.py,command/build.py,command/build_clib.py,command/build_ext.py,command/build_src.py,command/config.py,command/config_compiler.py,core.py,fcompiler/__init__.py,misc_util.py,system_info.py
aac06894d155d15aa855f904735ddeeb95335cc4,"minor cleanups in numpy.distutils (style mostly)
",numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py
b93a94b5e15d229e253353289c571c7a3142a642,"[distutils-rework] fix getting ar flags
",fcompiler/__init__.py
02df1be4949d7583a662bca6c0fe61d7afc334a7,"Clean up and completed (hopefully) MSVC support.
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config.py
0168bce06a2d0266a2d337a2f587ec1327d19fb4,"win32: fix install when build has been carried out earlier.
",numpy/distutils/command/config.py
2f70b977daff3fba00cbe1c02ec063ff10b45b96,"More typo fixes.
",numpy/distutils/command/config.py
ba1beffdaf55be34e8152e5faef0ba81ef35e57f,"Fix typo.
",numpy/distutils/command/config.py
6ad1f673224d9698164499f7d93010c8ba2e18df,"Fix atlas version detection when using MSVC compiler
",numpy/distutils/command/config.py,numpy/distutils/system_info.py
5c2ffbb0da2669cc15c383d378d8ff5f63fda27f,"Fix fcompiler/compiler unification warning.
",numpy/distutils/command/config_compiler.py
637069d6fb2a70fa86cc27f06e6857440b7a91d2,"Fix for win32 platform.
",numpy/distutils/command/build_ext.py
8f503fb985852ae7f9ad627e55bcac17c2a1272a,"Add descriptions to config_fc and config_cc commands.
",numpy/distutils/command/config_compiler.py
2fe22c45401c72e6727f0e0e40bab635bb5ca1dd,"Added --fcompiler,--help-fcompiler options to build command parallel to --compiler,--help-compiler options.
",numpy/distutils/command/build.py,numpy/distutils/command/config_compiler.py,numpy/distutils/fcompiler/__init__.py
24b8ecc423d48a06af98be34e97ebda4fee397bc,"show less messages in --help-fcompiler
",numpy/distutils/command/config_compiler.py
5321be556ad632e38b099b53273b30d965dd66b9,"Added --help-fcompiler option to build_ext command.
",numpy/distutils/command/build_ext.py
63c63253542c4ebd029d371ffee31fd22e0e36a4,"added config to --fcompiler option unification method. introduced config_cc for unifying --compiler options.
",numpy/distutils/command/build.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/core.py
6f82e1e9c704daaf398015ecc20892d89e56b259,"unify config_fc, build_clib, build_ext commands --fcompiler options so that --fcompiler can be specified only once in a command line
",numpy/distutils/command/build.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/config_compiler.py
571f16714fe9c2c744c6563d495dd0aaa47a843b,"Fixed warnings on language changes.
",numpy/distutils/command/build_ext.py,numpy/distutils/misc_util.py
a95189e65cb5aceb3c6a6a70203ba4ae9f694cfb,"Minor for Python 2.3 support.
",numpy/f2py/lib/main.py
0683bce893de37d134fe94cb6a19bc90c3ab26e7,"g3 f2py: impl. compiling Fortran codes online (function numpy.f2py.lib.compile), clean up testing.
",numpy/f2py/lib/main.py,numpy/f2py/lib/nary.py,numpy/f2py/lib/test_module_module.py,numpy/f2py/lib/test_module_scalar.py,numpy/f2py/lib/{,numpy/f2py/lib/tests/test_module_module.py,numpy/f2py/lib/tests/test_module_scalar.py,numpy/f2py/lib/{,numpy/f2py/lib/{
b3caec68294618d217bdb26872b3c9d235c6ade6,"Extension modules and libraries are built with suitable compilers/linkers. Improved failure handling.
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py
5fcecff23893db08dd325501cdfa61cccd55688d,"build_src: introduced --swig and other related options (as in std distutils build_ext command), use --f2py-opts instead of --f2pyflags, improved error messages.
",numpy/distutils/command/build_src.py
698fe101f0a2de21ba6fc24206e750aac9098d94,"fix typo: iteratable -> iterator
",numpy/core/src/multiarraymodule.c
4eb3bf56a0d3de3fb67fe6d3fcbd55e798ea4fca,"Fix ticekt #511 and start to handle allclose problems.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c
50894958e9a8f515ed85c27127cd91a784eb8308,"Fix some bugs with isposinf and isneginf as well as with how allclose dealt with infinities.  See ticket #519
",numpy/core/numeric.py,numpy/lib/ufunclike.py
5b4e40b73703617f8d24c6b4162f6777eaa176a1,"Propagate changes made to umathmodule.c to fix the problem with division and remainder not being consistent for negative numbers.
",numpy/core/src/scalarmathmodule.c.src
fadee7a84dbbee56f364bf7140e3752a28d1617b,"Perhaps fix the problem with multiarray_module_loaded.
",numpy/core/src/multiarraymodule.c
4c657edb70dd3a3f810faf1a9b0b5f7049a046cd,"Merged revisions 3732-3768 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

........
  r3740 | cookedm | 2007-05-10 13:26:20 -0400 (Thu, 10 May 2007) | 2 lines
  
  Use a try/finally instead of try/except Exception for cleanup in numpy/distutils/core.py
........
  r3745 | pearu | 2007-05-11 08:50:42 -0400 (Fri, 11 May 2007) | 1 line
  
  Clean up setup() calls.
........
  r3746 | pearu | 2007-05-11 08:58:31 -0400 (Fri, 11 May 2007) | 1 line
  
  Using meaningful NotFoundError exception for blas_opt and lapack_opt resources.
........
  r3747 | pearu | 2007-05-11 09:37:31 -0400 (Fri, 11 May 2007) | 1 line
  
  Raise exception when pyrex is required.
........
  r3759 | cookedm | 2007-05-14 05:25:11 -0400 (Mon, 14 May 2007) | 2 lines
  
  With gfortran, compile modern Xeon's with EM64T with -march=nocona (#515)
........
  r3763 | pearu | 2007-05-14 08:17:49 -0400 (Mon, 14 May 2007) | 1 line
  
  Workaround Python distutils bug sf 1718574.
........
  r3764 | cookedm | 2007-05-14 20:35:49 -0400 (Mon, 14 May 2007) | 2 lines
  
  #520: don't add arch-specific flags when linking with Intel Fortran
........
",command/build_clib.py,command/build_src.py,fcompiler/gnu.py,fcompiler/intel.py,misc_util.py,setup.py,system_info.py,tests/f2py_ext/setup.py,tests/f2py_f90_ext/setup.py,tests/gen_ext/setup.py,tests/pyrex_ext/setup.py,tests/setup.py,tests/swig_ext/setup.py
07b1228e1e45d8f4d4e6c74520cc6106515638ba,"Fixed a place where unicode itemsize was being counted twice.  This led to array([u'abc'],'U') returning the wrong itemsize.
",numpy/core/src/arrayobject.c
f79ec5f6b1aa74bac292bf9938ddd334bdbc85ab,"Fix problem with records with object elements and add pretty-printing to record objects.  Remove the global _multiarray_module_loaded.
",numpy/core/records.py,numpy/core/src/multiarraymodule.c
3f08181da74e0cfee070065cd56aee04e8927abf,"Add stacklevel=2 to DeprecationWarning for ScipyTestCase
",numpy/testing/numpytest.py
a10da324f8a5d4d7e68fdfcb6a63c420f3c4b99d,"#513: fix up include of fenv.c in numarray for cygwin
",numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/numarray/_capi.c,numpy/numarray/setup.py
f999341eedfcf47da72f352734a294cfa48607c4,"#520: don't add arch-specific flags when linking with Intel Fortran
",numpy/distutils/fcompiler/intel.py
8b8f6903eb696d35eb2ce62e1266291ef26423d7,"Workaround Python distutils bug sf 1718574.
",numpy/distutils/command/build_clib.py
6a0074dcc1ad9e71085f10520e926eccc74052e8,"Fix f2py command line doc.
",numpy/f2py/f2py2e.py,numpy/f2py/lib/parser/doc.txt
72f78a7db68606ff9515f87e3321ac490580bd06,"Fix doc rest formatting - 2.
",numpy/f2py/lib/parser/doc.txt
0176d3361df57e16270ce6ee480d3843c02d1c6a,"Fix doc rest formatting.
",numpy/f2py/lib/parser/doc.txt
1135754f3a745b8d25b958cbb57f401370131640,"With gfortran, compile modern Xeon's with EM64T with -march=nocona (#515)
",numpy/distutils/fcompiler/gnu.py
7833a6d0146b03afbb2bf48cb96a0172ba899555,"Restructure documentation of sort, argsort, searchsorted, var, mean,
std, and diagonal.
",numpy/core/fromnumeric.py
358475343019d2f08d0db5c79b1a59f2f7311a60,"Add patch from dhuard to histogramdd. Fixes ticket #509.

Restructure restructured comments; avoid consolidated lists, they are too ugly
to contemplate and move around where they aren't wanted. They can be fixed later
if epydoc fixes things up.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
6ec42819ccd70a406f6be8c6f45ae41fd4851f5f,"Fix ticket #506 by applying the patch from cdavid.
",numpy/fft/fftpack_litemodule.c
008ff0e9efab76d609315dba765f193760a8a8e7,"Add iinfo based on a patch by Albert Strasheim (ticket #250).
",numpy/lib/getlimits.py,numpy/lib/tests/test_getlimits.py
a34f98bdf24c7ae4b152ec9b472cb6442e6c00b7,"Add regression tests for tickets 469, 503, 514 and 516.
",numpy/core/tests/test_regression.py
a5a774b29d7ae661aca84f943e4752ee576b4152,"Add documentation for eigvals, eigvalsh, eig, and eigh.
",numpy/linalg/linalg.py
bae04d1cd9af556303091bc34d20a6d72e5d7aae,"Add documentation for diagonal.
Reformat documentation of sort, argsort, lexsort, and searchsorted.
",numpy/add_newdocs.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py
a7219199b9d566860b3653f60e87adc7006bb531,"Add/edit documentation for mean, std, var.
",numpy/add_newdocs.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py
9fbf719d898ba9f3503afb454018a174706de760,"Special check for common error in arange.
",numpy/core/src/multiarraymodule.c
56aa233a535263f309be2086f451a648d462d518,"Fix nan functions to allow sub-class.
",numpy/lib/function_base.py
d8d0b7aa7766029abacf6658d76d3a9666b5c9e5,"Raise exception when pyrex is required.
",numpy/distutils/command/build_src.py
2e72fd9a23f41d36a0288e1e70bf816dbda408ee,"Using meaningful NotFoundError exception for blas_opt and lapack_opt resources.
",numpy/distutils/system_info.py
cc7d893022611e0033fa2bea1c790eb39ba5769a,"Clean up setup() calls.
",numpy/core/setup.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/setup.py,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/fft/setup.py,numpy/lib/setup.py,numpy/linalg/setup.py,numpy/numarray/setup.py,numpy/oldnumeric/setup.py,numpy/random/setup.py,numpy/testing/setup.py
3757ca12afa8b89e92e16b6814eb1888611b4db0,"Improved error message for missing Python.h.
",numpy/core/setup.py
6d8010c4654cbc7e9a04495a4401548fa47e332c,"Fix ticket #514 (and probably others) due to inappropriate fixing of largest string type on common type conversion.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
ae13dc354df5e58fb1417ba80fc9c85242224caf,"Remove wasteful check.  Fix problem with PyArray_Transpose for large arrays.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
4474ba35cd167483589e398539007088dd64b9c5,"Improvement of separator handling for fromstring and fromfile.
 * fromstring and fromfile should behave identically on text.
 * added more test cases for fromstring
 * the dtype gets passed to the C code doing the type-specific string
   conversions. We don't use it, but someone making their own dtype could.
 * separator handling for fromfile is moved out of the type-specific conversion.
   I've left the argument in for backwards compatibility; when the API version
   is next bumped up, it can be removed.
 * separator handling in fromfile is now safe (no fscanf(fp, sep) anymore)
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
9dacbb9dfb3373865193def48ce880a547de0100,"Use a try/finally instead of try/except Exception for cleanup in numpy/distutils/core.py
",numpy/distutils/core.py
2ae73db643380cbf639841adc22418906da40085,"Better warning when using ScipyTest
",numpy/testing/numpytest.py
35a03aedd8fa989165d2ed7c3117fc136945a9c9,"Add docstrings to numpy/core/code_generators/genapi.py
",numpy/core/code_generators/genapi.py
de17a87fcd3dab5385344d09f7197450faae3e58,"Change recarray attribute getting to return a view using the class instead of pure recarray when fields are present.
",numpy/core/records.py
140887c5ba2871b9dc3425f1d1b737df85f97fea,"assert_approx_equal used significant digit more than requested.
",numpy/testing/utils.py
5b270e2f541c763012e0acd4fa5e23933029b9db,"Fix compatibility layer definition of std
",numpy/oldnumeric/mlab.py
7a837ba50fdddfe4508e61cb35bbac9b35886cc8,"adding toc to distutils docs
",numpy/doc/DISTUTILS.txt
9795a2c6225cb56e1e34d53b722f2e2b050b4fdc,"[distutils-revamp branch] Merged revisions 3485-3731 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

........
  r3501 | stefan | 2007-01-08 16:56:54 -0500 (Mon, 08 Jan 2007) | 2 lines
  
  Whitespace cleanup.
........
  r3520 | timl | 2007-01-25 23:16:37 -0500 (Thu, 25 Jan 2007) | 1 line
  
  remove some remaining references to scipy. fixes #428
........
  r3521 | rkern | 2007-01-26 19:35:17 -0500 (Fri, 26 Jan 2007) | 1 line
  
  Generalize the setting of MACOSX_DEPLOYMENT_TARGET.
........
  r3523 | rkern | 2007-01-30 14:18:06 -0500 (Tue, 30 Jan 2007) | 1 line
  
  Revert semi-intelligent handling of MACOSX_DEPLOYMENT_TARGET to work around broken MacPorts Python.
........
  r3538 | edschofield | 2007-02-04 19:24:42 -0500 (Sun, 04 Feb 2007) | 2 lines
  
  Fixed detection of Core2 CPUs (scipy ticket #349)
........
  r3549 | stefan | 2007-02-18 16:02:46 -0500 (Sun, 18 Feb 2007) | 2 lines
  
  Fix docstrings for loading with DocFileSuite.
........
  r3563 | pearu | 2007-02-28 08:12:06 -0500 (Wed, 28 Feb 2007) | 1 line
  
  Added support for xml Fortran V10 compiler (needs testing).
........
  r3564 | pearu | 2007-02-28 13:32:18 -0500 (Wed, 28 Feb 2007) | 1 line
  
  Fixing xlf compiler for AIX with 9.x and 10.x version support (needs testing and checking that xlf 8.x compilers are still detected)
........
  r3568 | pearu | 2007-03-02 11:49:00 -0500 (Fri, 02 Mar 2007) | 1 line
  
  Applying info from Hans-Joachim Ehlers to improve xlf compiler support (on AIX using lslpp to determine compiler version).
........
  r3569 | timl | 2007-03-04 05:47:08 -0500 (Sun, 04 Mar 2007) | 1 line
  
  add a delete flag to make_svn_version_py to allow the __svn_version.py to not be deleted
........
  r3598 | rkern | 2007-03-25 19:12:00 -0400 (Sun, 25 Mar 2007) | 1 line
  
  Make the gfortran version matching regex accept gfortran 4.3 on OS X
........
  r3615 | cookedm | 2007-03-29 17:37:58 -0400 (Thu, 29 Mar 2007) | 1 line
  
  cpuinfo: Nocona is a PentiumIV, not 686. Fixes #438
........
  r3636 | cookedm | 2007-04-01 16:32:07 -0400 (Sun, 01 Apr 2007) | 2 lines
  
  Make numpy.get_include() and numpy.get_numarray_include() not pull in numpy.distutils.
........
  r3658 | cookedm | 2007-04-04 08:56:47 -0400 (Wed, 04 Apr 2007) | 2 lines
  
  Fix for making Fortran extensions on AIX.
........
  r3660 | rkern | 2007-04-04 13:25:29 -0400 (Wed, 04 Apr 2007) | 1 line
  
  Fix #491
........
  r3664 | cookedm | 2007-04-04 14:10:30 -0400 (Wed, 04 Apr 2007) | 2 lines
  
  Really fix linking with Fortran on AIX
........
  r3715 | rkern | 2007-04-15 00:38:59 -0400 (Sun, 15 Apr 2007) | 1 line
  
  Fix command dependencies for build_ext. This should fix a number of problems where the full 'build_src build_clib build_ext' chain of commands needed to be specified.
........
  r3716 | rkern | 2007-04-15 00:46:07 -0400 (Sun, 15 Apr 2007) | 1 line
  
  Add another place to check for configuration, namely ~/.numpy-site.cfg, to help automatic installation where one can't edit the source checkout. I've added the alternate name to make it hidden because that's just considerate.
........
  r3723 | cookedm | 2007-04-22 16:57:58 -0400 (Sun, 22 Apr 2007) | 9 lines
  
  Better version handling for gnu and intel Fortran compilers
  
  - gnu compilers check if the version is >= 4, in which case it's gfortran
  - add a test file for gnu compiler check
  - simplify version matching on intel compilers to be more flexible
  - add FCompiler.find_executables so that subclasses can find executables
    at .customize() time, instead of when the class is created.
........
  r3724 | cookedm | 2007-04-22 17:12:57 -0400 (Sun, 22 Apr 2007) | 14 lines
  
  Some distutils work:
  
  - Add better support for C++ in numpy.distutils. Instead of munging the
    C compiler command, build_clib and build_ext call the new
    Compiler.cxx_compiler() method to get a version of the compiler suitable for
    C++ (this also takes care of the special needs of AIX).
  - If config_fc is specified in the Extension definition, merge that info
    instead of replacing it (otherwise, the name of the Fortran compiler is
    overwritten). This is done at the key level (ex., compiler options are
    replaced instead of appended).
  - clean up compiler.py a bit
  - clean up linking in build_ext
........
  r3726 | oliphant | 2007-04-24 15:15:33 -0400 (Tue, 24 Apr 2007) | 1 line
  
  Add patch to system_info for building with MKL on Win32 #504
........
  r3731 | rkern | 2007-04-30 12:29:51 -0400 (Mon, 30 Apr 2007) | 1 line
  
  Fix typo.
........
",ccompiler.py,command/build_clib.py,command/build_ext.py,command/build_src.py,command/config_compiler.py,cpuinfo.py,fcompiler/__init__.py,fcompiler/gnu.py,fcompiler/ibm.py,fcompiler/intel.py,interactive.py,misc_util.py,system_info.py,tests/test_fcompiler_gnu.py
9bcf5d809bfe0f23fdf6b26765b338b188f1befb,"Fix typo.
",numpy/distutils/system_info.py
5eefd7aa5faaa9efb58ae92158d6364616b58f2b,"Add regression test.  Fix order of arguments in test_multiarray.
",numpy/core/tests/test_multiarray.py,numpy/core/tests/test_regression.py
4e442decf1b344458fe7ba68b58f1c3de8ca7590,"Fix silly initialization of input variable.
",numpy/core/src/multiarraymodule.c
26a9e8134689af1b37b815f969283b42942ec194,"Add test case for integer division
",numpy/core/tests/test_umath.py
bfa4be39da7b3ece0f3c2f9990d5bb46c1756b50,"Restore invariant of (x == (x/y)*y + (x%y)) by making integer division with mixed-sign operands match Python.
",numpy/core/src/umathmodule.c.src
feb86b4d0dc37dee914bd7ca37324727058c2d0b,"Add patch to system_info for building with MKL on Win32 #504
",numpy/distutils/system_info.py
6a3e80e50be8e325dd01e63f3874b29764fe37d4,"NumpyTest.test() takes an extra argument, all, which, if true, makes
it act like NumpyTest.testall(). This comes from some refactoring to remove
duplicate code in .test and .testall().
",numpy/__init__.py,numpy/testing/numpytest.py
03b278bc04b508e8c48bc2df80113d23b2a039c4,"Some distutils work:

- Add better support for C++ in numpy.distutils. Instead of munging the
  C compiler command, build_clib and build_ext call the new
  Compiler.cxx_compiler() method to get a version of the compiler suitable for
  C++ (this also takes care of the special needs of AIX).
- If config_fc is specified in the Extension definition, merge that info
  instead of replacing it (otherwise, the name of the Fortran compiler is
  overwritten). This is done at the key level (ex., compiler options are
  replaced instead of appended).
- clean up compiler.py a bit
- clean up linking in build_ext

",numpy/distutils/ccompiler.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py
06cc6933dfdae2f9273c3040b2677e2206221647,"Better version handling for gnu and intel Fortran compilers

- gnu compilers check if the version is >= 4, in which case it's gfortran
- add a test file for gnu compiler check
- simplify version matching on intel compilers to be more flexible
- add FCompiler.find_executables so that subclasses can find executables
  at .customize() time, instead of when the class is created.

",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/tests/test_fcompiler_gnu.py
fcb7fd261eb0e73fb8abba78e692aca0ba00ce82,"Add loadtxt and savetxt adapted from matplotlib.
",COMPATIBILITY,numpy/core/numeric.py
41861b55aa74fb5aab11e2d101f997d8d36389e7,"Fix byte-swapping error on conversion to Object array from big-endian array (byte-swapping was happening twice in that case).  This fixes #503.
",numpy/core/src/arrayobject.c
e52ea92ca1859203ce3ffd569f777e532cbdc260,"Fix pointer size for F90 allocatable arrays on 64-bit platform. Closes ticket #147.
",numpy/f2py/f90mod_rules.py
d8f883ac69cffbc0f9e010de754bd1522b249f0b,"f2py: support for assumed shape arrays of fortran callback functions (will not work with python callback functions, for instance).
",numpy/f2py/capi_maps.py
461565d36e93f59583e9425ffb277023b34ed7a9,"Sort module names when running tests
",numpy/testing/numpytest.py
f13e90581906086b97f2df480f513a2f3f779354,"Add another place to check for configuration, namely ~/.numpy-site.cfg, to help automatic installation where one can't edit the source checkout. I've added the alternate name to make it hidden because that's just considerate.
",numpy/distutils/system_info.py,site.cfg.example
e7172c9ba8240ef8c66d872143079f2165620a48,"Fix command dependencies for build_ext. This should fix a number of problems where the full 'build_src build_clib build_ext' chain of commands needed to be specified.
",numpy/distutils/command/build_ext.py
07602526373e88d933df6f57c5fb95a1f58317f5,"Updated date, example function documentation and python links
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
ee95f34a29e4e39804f0cedd6a2fadfda9143a57,"Reformatted numpy.i routines descriptions
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
cfb606b1a0849895c12e2ecf99deca3d04a2a2f3,"Fixed typo in documentation
",numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
e574efa3a59cc6875daca0482116a87cacf581af,"A few more changes to pep_buffer.txt
",numpy/doc/pep_buffer.txt
3325b1bd9b525206519da3f53d85a6d1499bfc7f,"remove unneeded semi-colon, add missing import, whitespace cleanups
",numpy/core/records.py
a1ccad720727bd9c51f011007951b5f1dff51ee4,"Add check for fix to allowing types to create arrays.
",numpy/core/tests/test_scalarmath.py
f78cdaf146aeb94f1d178972704d13005ea9c8f5,"Fix scalar creation function so it can take sequences.
",numpy/core/src/scalartypes.inc.src
7cc1a819fe25368d1cc9a2ff56af950d6e300948,"Fixes to pep_buffer.txt
",numpy/doc/pep_buffer.txt
1ae9e6b4ba2c0a64b096b1e89f5010162562d2d6,"Add example to buffer interface.
",numpy/doc/pep_buffer.txt
ff81cac78f2df30b5ac7242b0d431f3f3acef882,"Cleanup whitespace.
",numpy/core/blasdot/_dotblas.c,numpy/core/blasdot/cblas.h
d594e08d048df6c1452b9fb0172071bdec82f306,"Provided more sophisticated typecheck typemap for IN_ARRAYs
",numpy/doc/swig/numpy.i
9e0cfafb432664acf08e6573876622e9c546df8a,"long lost author was... eric.
",numpy/doc/swig/numpy.i
1453e759c5c5f2c37309ee0c3b867ff6da2fcaf0,"added simple test for weighted average
",numpy/lib/tests/test_function_base.py
98ab993945def2a5ad44e3f8d5d65c57c449ba28,"fixed a typecode Float->float issue in average.

This is not pretty code it seems overly complicated, and it has an ""eval""
statement in it where it builds a string and evaluates it.  I can't imagine
this is the best approach to this -- but I also am not going to spend the
time to examine it right now.
",numpy/lib/function_base.py
e50171fa5073425a1537c081eefd200b0cf1e4d2,"Changed remaining ->nd struct accesses to use array_numdims() macro
",numpy/doc/swig/numpy.i
f2101eee48837abece457eb8deec39efd578c5b9,"Added 'array_data()' macros and used it in the typemaps; added new macro to the documentation
",numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
d62e119b2873f021936bdd24f9d2559314a525a1,"test commit
",TEST_COMMIT
5e64e4820a3c34733f0f8c15038feb7ead37d0fd,"More fixes to buffer.
",numpy/doc/pep_buffer.txt
e48d39681a09dc98b19239204083ec9ead8de52b,"Cleaned-up
",numpy/doc/pep_buffer.txt
c5fda580b1eb288eb4e6bc2110360689b9e11250,"Buffer PEP has a number.
",numpy/doc/pep_buffer.txt
0bbd9452f75cea3575beac36cb70d7881985b35d,"Added %typecheck directive for IN_ARRAY typemaps
",numpy/doc/swig/numpy.i
5f9a7be6141c39406ab23aae49885bb189e0e138,"Parenthesize some defined expressions just to be clean.
",numpy/core/include/numpy/ndarrayobject.h
77aad402349fc8f55c9ebe5762ae43a25a854a4d,"Standardized PyArrayObject naming
",numpy/doc/swig/numpy.i
a083ce52b673c6dcadd800d64bb098d89f1e8e12,"Make sorting benchmarks all sort integers
",benchmarks/sorting.py
ada65fd59c08e0a052c0ad217c11cae0e2bd7edd,"Added testing documentation
",numpy/doc/swig/Makefile,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/testing.html,numpy/doc/swig/testing.pdf,numpy/doc/swig/testing.txt
eb366f6ab30f1755fd22f2b8229930393a3bd372,"Change defined(linux) to defined(__GLIBC__)
",numpy/core/include/numpy/ufuncobject.h,numpy/numarray/_capi.c
9d14fc91d8d12395719a257917c363cf91400962,"Added 'bad list' tests to IN_ARRAY typemap tests
",numpy/doc/swig/testMatrix.py,numpy/doc/swig/testTensor.py,numpy/doc/swig/testVector.py
4b9f5d9cbf52406eaebf28e7df4fd04e1024e708,"Added more testing of 3D typemaps, specifically error checking
",numpy/doc/swig/testTensor.py
3322fd159715d2f3c0568cf954ea234bad8c1275,"Added more testing of 2D typemaps, specifically error checkings
",numpy/doc/swig/testMatrix.py
836762a5d9836a2aff328966ae2e015872f36d32,"Added more testing of 1D typemaps, specifically error checking; found and fixed bug where INPLACE_ARRAY1 typemaps didn't check number of dimensions
",numpy/doc/swig/numpy.i,numpy/doc/swig/testVector.py
1ea3f17a8dd077b82b5a1dbf59a8ebdedc40b4f0,"Fix maximum_sctype for integer data-types.
",numpy/core/numerictypes.py
c6992ef6631a74e204d124dd3e4c9fddc2be01a4,"Removed test1D.py, test2D.py and test3D.py in favor of testVector.py, testMatrix.py and testTensor.py because these new tests use inheritance to duplicate same tests for different data types
",numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/test1D.py,numpy/doc/swig/test2D.py,numpy/doc/swig/test3D.py,numpy/doc/swig/testMatrix.py,numpy/doc/swig/testTensor.py,numpy/doc/swig/testVector.py
85171803c141f9be21ce91e18957605d819641e0,"Add note about running tests to the README.txt
",README.txt
9e17a29335f0ce11c80bbedab53df3fe293d67f7,"Include fenv.h the second time for CYGWIN.  Change a few defines.
",numpy/numarray/_capi.c
cca1f4916cfb74f913bd8b291d752c9e1567d1a7,"Updated documentation for 3D typemaps
",numpy/doc/swig/README,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
7fc01ddf963b3ba2baaa2a29cd25ec139d6f7319,"Added 3D tests to Makefile
",numpy/doc/swig/Makefile
c070fab445d41ef9ca8ccb7a47619a908aa0dc07,"Added tests for 3D typemaps
",numpy/doc/swig/Makefile,numpy/doc/swig/Tensor.cxx,numpy/doc/swig/Tensor.h,numpy/doc/swig/Tensor.i,numpy/doc/swig/setup.py,numpy/doc/swig/test3D.py
13b70a28a42c8eab3eefd18bbfcc2636a094924b,"Updated documentation in README file
",numpy/doc/swig/README
081af11038f18803c051c765b6967ea255cc3b67,"Split Series header/code/interface tests into Vector and Matrix components
",numpy/doc/swig/Makefile,numpy/doc/swig/{series.cxx,numpy/doc/swig/Matrix.h,numpy/doc/swig/Matrix.i,numpy/doc/swig/Vector.cxx,numpy/doc/swig/Vector.h,numpy/doc/swig/{Series.i,numpy/doc/swig/series.h,numpy/doc/swig/setup.py,numpy/doc/swig/test1D.py,numpy/doc/swig/test2D.py
07c0893279de1e0b59d3381de36b52efce0dd719,"Really fix linking with Fortran on AIX
",numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/ibm.py
2207b5a9967a1396843d24a1f3f9e95ca127d83e,"Completed update of README file
",numpy/doc/swig/README
876a44bd20f7b759745b4ea64c8dfacc69ba2ee6,"Updated the README file and added testing to the Makefile
",numpy/doc/swig/Makefile,numpy/doc/swig/README
a9aab74549feb141c06fdc1e48832a5d32bb5cb8,"Added first cut at (untested) 3D typemaps; split testSeries.py into test1D.py and test2D.py
",numpy/doc/swig/numpy.i,numpy/doc/swig/{testSeries.py,numpy/doc/swig/test2D.py
ad22a1731910dae6f4822139b743b2e70f600251,"Fix #491
",numpy/distutils/misc_util.py,numpy/f2py/__version__.py,numpy/version.py
498186f2f1c11a2ae6f7f070af963bc4e4571b9f,"Updated documentation to include a Summary, as well as a sample of the code generated by swig
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
d31dac0cf53677d62db2f4bbfae4e2ddfaa29ba7,"Fix for making Fortran extensions on AIX.
",numpy/distutils/fcompiler/ibm.py
145babe82965c5534c18b8e9bf04c0ace25d2255,"Avoid some compiler complaints about non-constants in initialization.
",numpy/core/src/ufuncobject.c
03d6cb12fa1137055d33197d1953752d2dbcdc10,"Add integer format codes to sctypeNA.  Fixes ticket #399
",numpy/core/numerictypes.py
5b0355a82995048e0386ddede3f6f18fffff3186,"Re-order struct module changes.
",numpy/doc/pep_buffer.txt
ecfdc747f6cdfae56eb1710679b503b73c992fab,"Place PEP on trunk.
",numpy/doc/pep_buffer.txt
bcd1eaf195dde7cccfbfb2cf147013663ff10862,"Updated documentation to reflect changes to internal macros and routines, the new error-checking in the INPLACE typemaps, and an updated Acknowledgement section
",numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
6e372ad3497469e52df4297e8e2386a5e35f6156,"Modified INPLACE typemaps to check for native byte order, and for 2D case, require that the python argument be 2D as well
",numpy/doc/swig/numpy.i
9821ee7d64ff4bc5ded66fb89dfe02311f29602f,"Update version of this trunk.
",numpy/version.py
468629d3178e9631aac454879785acfd400c0028,"Add a few more functions to arrayfns compatibility file and fix typo.
",numpy/core/tests/test_multiarray.py,numpy/oldnumeric/arrayfns.py
934e907180645e3dc618ff5c75a4982656310673,"Add the arrayfns compatibility library -- not finished.
",numpy/oldnumeric/arrayfns.py
1cd5403e91c066910c85d1e326cffa701c7e5101,"Add interp to numpy.lib adapted from arrayfns.  Add an unfinished arrayfns compatibility module to old_numeric.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c,numpy/lib/function_base.py,numpy/lib/src/_compiled_base.c
a1f65e154f15f1c5b35c2befaeb74f3952b2c3e2,"Add patch in Ticket #189 for histogramdd.  Fixes bug reported by Ben Granett
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
471ee74d8a32267d438f20074c077efb3b057ee7,"Fix #484: random state not portable between 32-bit and 64-bit architectures
The random state now uses a uint32 array on both architectures.
It should also handle old pickles.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
f03bfaeca406ff6b8ba90ba2043a64a8fdc45a67,"Fixes #488. In rk_interval, use rk_random if the interval size is less than 2**32.
For 64-bit machines, this means results will agree with 32-bit machines,
and will be faster for these interval sizes (one less rk_random evaluation).
",numpy/random/mtrand/randomkit.c
f11fdaee8baeb00fc2a7156cda67c8b0d1eb54ae,"binary_repr handles negative numbers now, and takes an optional width argument.
base_repr raise ValueError if the number is negative or base > 36
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
5c8f992c6ff487f0b5c97cb80ad0706473d05074,"Applying patch from ticket 437.
",numpy/f2py/cb_rules.py
45b5a6a8f416bf04a710aa74353397ffb3bda1ff,"Do not use floating-point numbers to copy data as it will not work when high-order bits are set that do not fit in the floating-point representation.
",numpy/core/src/arrayobject.c
83d602fdaec3faea5b5a1383064e9504b686389e,"Fix ticket #463 wherein hex and oct did not work for values that could not be converted to an integer.
",numpy/core/src/scalarmathmodule.c.src
396b1abcd7b14add4b1b8d9dc841119adcc3ad22,"Fix compiler warning on AMD64
",numpy/core/src/arrayobject.c
fc796af91ae586ab446ac94bb3070f5034eb8032,"Make numpy.get_include() and numpy.get_numarray_include() not pull in numpy.distutils.
",numpy/distutils/misc_util.py,numpy/lib/utils.py
2d1cb578494e28ae9e3ac3143a14d778194ed5d8,"Regression test for ticket #483.
",numpy/core/tests/test_regression.py
120c38552fa36fd4c9ae37878b75a0c5f01d747c,"Apply patch to fix ticket #483 regarding junk at the end of an expression (which probably was introduced after recent changes to string comparisons) and handling of NULLs inside strings.
",numpy/core/src/arraytypes.inc.src
b1581395f43e19729c640cfbb8f5b328a1bb5ef1,"Fix segfault in ticket #487
",numpy/core/src/arraytypes.inc.src
7518548620ce2438a86af5ac3da3be1c3c4fde4d,"Fix ticket #482 caused by using the wrong index variable in PyArray_BroadCastToShape.  The strides was being filled in by bogus strides data.
",numpy/core/src/arrayobject.c
da06774dbf24c693bd722a9f0d30f8dcc53403a4,"Make sure dot product is not too large for dimensions array in PyArray_MatrixProduct.  Fixes ticket #418
",numpy/core/src/multiarraymodule.c
a1bdbab7d33f043269988a68257c3445963bb440,"Added documentation to series.h and series.cxx
",numpy/doc/swig/series.cxx,numpy/doc/swig/series.h
020c1ddab8f82c2692efceec9c11877cd5863c96,"Added (DATA_TYPE* ARGOUT_ARRAY1, DIM_TYPE DIM1) and (DIM_TYPE DIM1, DATA_TYPE* ARGOUT_ARRAY1) typemaps, and tests, and documentation
",numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/testSeries.py
fd85bb29c7f18dbae1fbfe439b692fce7d4e7618,"Added tests for ARGOUT_ARRAY1 and ARGOUT_ARRAY2 typemaps
",numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/testSeries.py
cf82afda47fa40cff108942f92ff8ce5865592b2,"Speed up indicies significantly (about 10x).
",numpy/core/numeric.py
f80ab5e1c4c5b51a7d02a22e6b8cb6f86daa3563,"Add new MACRO.  Fix ticket #454 by changing pkgload to a function instead of an object.
",numpy/__init__.py,numpy/_import_tools.py,numpy/core/include/numpy/ndarrayobject.h
dad871430574802f8d32cd515d19df77d0a006af,"Finish adding and checking remaining tests for clip (and choose).   All tests now pass for new clip method.
",THANKS.txt,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_numeric.py
701a913f81961f290bf75278647bda7052075c1e,"Split tests. Make them run quietly.
",numpy/core/tests/test_numeric.py
e784b53e64e22bb4a1a65853505b74d774716cc2,"Add tests for clipping.  Also some good tests on choose and convert_tocommontype.  Fix some mixed-type problems.  Fix problems with clipping. More to be done to close ticket #425
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py
72dea1afaeea8deab2fccb599fba2c7f1f811af3,"Add comments to PyArray_Clip.  Fix unsigned problem.  Fix reference counting problem with the output array to fix certain memory errors.
",numpy/core/src/multiarraymodule.c
1b8049926366325a03edbb44cd2cb9fa44ceab7c,"Change 0-d record arrays so that field selection returns a 0-d array and not a scalar.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c
9c6f421934530cda2e33487bae3295519335597c,"Allow Boolean mask indexing for 0-d arrays.
",numpy/core/ma.py,numpy/core/src/arrayobject.c,numpy/core/tests/test_ma.py
ef392181a8ed3e9f2646745b19aedbc3d1145c95,"Add test for record array clipping.
",numpy/core/tests/test_multiarray.py
0b26cf1b2b4d82fc88708733b453aa4699e4145f,"Check clip for byteorder.
",numpy/core/tests/test_multiarray.py
7ba189197a05ad3b6645abf7864a675f31326c9d,"Add basic tests for clip.
",numpy/core/tests/test_multiarray.py
228bbb7950aac767321c15b33156fb7addc651f0,"Make a fastclip function (adapted from ticket #425 and fix conjugate method to use ufunc when complex matrix
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
19cc4b93b3dd495fd355d77225d3f97e23f85ffb,"cpuinfo: Nocona is a PentiumIV, not 686. Fixes #438
",numpy/distutils/cpuinfo.py
6f4ca87ea5ea246c37e4cae5c679829b5ee66f11,"Updated examples in the documentation
",numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
f89443c39616bd4ad13cb9152c28acc15c6500be,"Fix ticket #485 by improving how a dtype variable reports its length.
",numpy/core/src/arrayobject.c
cc21968aa91cef9a7517092c07684192c73a830b,"Fix mgrid inconsistency ticket #467
",numpy/lib/index_tricks.py
2b3080362d7afdd49c3ad5f2e1e89d572fd2a357,"More Buffer protocol fixes.
",numpy/doc/pep_buffer.txt
ae074d63205f7f5a777e01c05a537bc45d943a42,"More pep_buffer changes.
",numpy/doc/pep_buffer.txt
e459e77339eabd4337f288d134249b8ba667bce3,"Modified buffer PEP.
",numpy/doc/pep_buffer.txt
393a18642f7f154b68627ce581d0318307ab75e6,"Modified buffer PEP.
",numpy/doc/pep_buffer.txt
1794a616f7ad7d273dc9328461fe33ae8b64d75a,"Updates to Buffer PEP
",numpy/doc/pep_buffer.txt
cd4d0410b145112f9e824ae7c2db46b7b0443460,"Revised buffer.
",numpy/doc/pep_buffer.txt
1da3aae53bd0db021362f1aea9b0c634e57a3cb7,"Fix ticket #476: string comparisons with leading NULL
",numpy/core/src/arrayobject.c
2ff5b35b2ce3fd485cedf8d9345b25065b8bc94d,"Fix ticket #459
",numpy/lib/function_base.py
bb10e4031198e6578b5b6a1cfe314fd3b9972037,"Added patch in ticket #458 for compilation on Cygwin.
",numpy/numarray/_capi.c
12b18aee2e16dd9d5d7fe60e37d538633e98caf8,"Fix scalar coercion rules so that mixed scalar array coercion with arrays of different types uses normal rules when the kind of the scalar is larger than the kind of the array.
",numpy/core/src/ufuncobject.c
37372d644275c03fd7b172ec211425bdd6f55cd2,"Fix some errors with recent scalar coercion changes.
",numpy/core/src/multiarraymodule.c
336d765e2cd78009505d67832de988e8078e02a6,"Fix scalar coercion rules between different basic kinds.
",numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
14a5747967255b2fef4cf89ded1b3271ca3710ec,"Fix errors involving matrix*sparse
",numpy/core/defmatrix.py
3b8ce0276bcae0c99790cab2c3fed417288d21cb,"Make the gfortran version matching regex accept gfortran 4.3 on OS X
",numpy/distutils/fcompiler/gnu.py
78f4e519a5bf7ee4bb4a23ea8b658272a365f45c,"Added typemaps for signatures (TYPE INPLACE_ARRAY1[ANY]) and (TYPE INPLACE_ARRAY2[ANY][ANY])
",numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/testSeries.py
e3a18285c362ebe8bdab2bcdefa8b94557f7b93b,"Fix matrix-scalar multiplication. Add test for case Matrix*1d-vector
",numpy/core/defmatrix.py,numpy/core/tests/test_regression.py
7a2733cb463e519ce6773df6243ed77506483c7e,"Fix matrix multiply to return error when has is a 1-D vector. Fixes ticket #473
",numpy/core/defmatrix.py
352587d23b30aa7645b0d1b24052a8f1e4099050,"Added typemaps for signatures (TYPE IN_ARRAY1[ANY]) and (TYPE IN_ARRAY2[ANY][ANY])
",numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/testSeries.py
2a07a54f51fe1defd8758c1ceab73009d274b3cd,"Added typecheck typemaps to INPLACE_ARRAY typemap suites
",numpy/doc/swig/numpy.i
32a2519c0b028ada876a3fe33ca598c18e65d05c,"Added '#ifdef SWIGPYTHON' protection
",numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt
25526d1a26f4b7ac245ecedd16c82cfd7d67f741,"Replace tabs with spaces.
",numpy/core/memmap.py,numpy/lib/tests/test_function_base.py
f48806e7ae54c5de0ac622e388c983a015b670bf,"Replace tabs with spaces (see ticket #470).
",numpy/lib/function_base.py,numpy/lib/polynomial.py
a07c823b0bd91b282b38f8d8609bae808078aaa3,"Buffer interface changes -- add array-of-array possibility, allow optional buf and len variables, and add 2 C-API calls.
",numpy/doc/pep_buffer.txt
23797434e860543be2d5f133e722244488b82e13,"ReSTify pep_buffer.txt
(hope that's ok, Travis)
",numpy/doc/pep_buffer.txt
fcfc55ea6975dcf3221f6b0ffcae5a8a4587b609,"More fixes to mtrand from recent speed ups.
",numpy/random/mtrand/Python.pxi,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
8175ff79e0a94f0806dd174ebb09aec8652764ab,"More fixes related to #471
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
70166396583cf15b75c9f0cf2a7690c3e1538eb2,"Fix ticket #471
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
827ac8a6016e8d36bac7baf83d86f9de7f61b9b3,"Update buffer interface PEP.
",numpy/doc/pep_buffer.txt
be322143639a9cd7e47b0fcea9bfd6bbd7ec5f18,"Removed stubs for CHAR and OBJECT; added macro variable for dimension type; updated documentation
",numpy/doc/swig/README,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h
02f660ff2e4e85382043dcce961f6b96ff49b9c2,"Make random number generators faster for scalar parameters.
",numpy/random/mtrand/Python.pxi,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
7af974d6b24945f2e4f31c42781a89cc168d6dfa,"Remove invalid part of r_ docstring.
",numpy/lib/index_tricks.py
acbc1b673082d52d7552bd5b6b2b2973d0e0ab5b,"Fix missing addition bug.
",numpy/core/src/arrayobject.c
adca10ab9ff6edf57fbef48ce73eb4e91ca39a8a,"Updated README file
",numpy/doc/swig/README
511059c3dc0d3a9ee630dcf7199c17798761a35a,"Fixed typo in Makefile
",numpy/doc/swig/Makefile
f06a5c3a2ddcee7250cf19e483159a366d478dfa,"Added LaTeX/PDF documentation
",numpy/doc/swig/Makefile,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.pdf
d99202e88c515805fdc4afc48fa618e7d81a056a,"testSeries.py now prints numpy version; documentation updated
",numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/testSeries.py
df7716092b4522632b0717c7f1c00c6f7c5385da,"Added typemap signatures where the dimensions come before the data pointer
",numpy/doc/swig/README,numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/testSeries.py
6a23ed31cebdd16dde0500c4f532ed844c585585,"In numpy.i:

  * I consolidated several macros

      TYPEMAP_IN1
      TYPEMAP_IN2
      TYPEMAP_INPLACE1
      TYPEMAP_INPLACE2
      TYPEMAP_ARGOUT1
      TYPEMAP_ARGOUT2

    into a single macros, %numpy_typemaps().  This makes expanding the
    typemaps for a given data type much easier.

  * The %numpy_typemaps() macro is now expanded for::

      signed char
      unsigned char
      short
      unsigned short
      int
      unsigned int
      long
      unsigned long
      long long
      unsigned long long
      float
      double
      PyObject
      char

  * I changed the ARGOUT typemaps to check for multiple output
    arguments, and form a tuple if necessary.

  * Updated the code to work with released numpy versions 0.9.6,
    0.9.8, 1.0 and 1.0.1.

  * Upgraded the dimension arrays to use type npy_intp.

I also added documentation: numpy_swig.txt is a numpy.i users guide in
restructured text format; numpy_swig.html is the same content in
HTML.  The Makefile can produce this with 'make html', assuming
docutils is installed.

The series.h and series.cxx files have been refactored to use macros
to generate repetitive code for different types.  All the supported
types have tests for all of the non-ARGOUT typemaps.  ARGOUT typemap
tests still need to be written.
",numpy/doc/swig/HelperFunctions.txt,numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/numpy_swig.html,numpy/doc/swig/numpy_swig.txt,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/setup.py,numpy/doc/swig/testSeries.py
19ab75e0741b1c4bda24f753779b8862bca6aaeb,"Add test for ticket #449.
",numpy/core/tests/test_regression.py
27c69f681532cf88a2c8fc7f65be4d7c0b9394df,"Fix problem 64-bit linalg.qr problem.
",numpy/linalg/lapack_litemodule.c
323904265eacf9c637e3fe75f86b4bad6ca4b31a,"scratch that last one. my bad
",numpy/testing/numpytest.py
85eeb4732ea7e49c01db4f7981ee07c8fc1c90c3,"fix bug with test_suite being called incorrectly
",numpy/testing/numpytest.py
d8ccf22397b951c77f260c9806fe6a1b7bc9c6cb,"add a delete flag to make_svn_version_py to allow the __svn_version.py to not be deleted
",numpy/distutils/misc_util.py
8fa176818c0077d160f4529ecb307fa87dfde727,"Applying info from Hans-Joachim Ehlers to improve xlf compiler support (on AIX using lslpp to determine compiler version).
",numpy/distutils/fcompiler/ibm.py
2288ef64c313e4de8c95b171fd235f0da9e159ec,"Fix string comparison so it is not fooled by NULLs in the string.
",numpy/core/src/arrayobject.c
9f71c0fca2da061bb371b7f5a8a23ac40d6b28fb,"Regression test for changeset 3557.
",numpy/core/tests/test_regression.py
6481ff29ec06bce69814dc91dc310442029f0370,"Fix searchsorted docstring. Closes #457.
",numpy/core/fromnumeric.py
a3aacd3cba852ba63fbfd9381bc41a078d1716db,"Fixing xlf compiler for AIX with 9.x and 10.x version support (needs testing and checking that xlf 8.x compilers are still detected)
",numpy/distutils/fcompiler/ibm.py
a353043bc0e74d0ee934a88180b94b98093f60bb,"Added support for xml Fortran V10 compiler (needs testing).
",numpy/distutils/fcompiler/ibm.py
702042fa640b269fb6c33463f69035e75789bec8,"Fix buffer PEP.
",numpy/doc/pep_buffer.txt
c71975b69585cfb7c9e1085a76ef415bcb1d5b46,"buffer pep changes.
",numpy/doc/pep_buffer.txt
430183c50823f98af70c6c809d01578ff20f3a67,"Changes to pep.
",numpy/doc/pep_buffer.txt
f26b78ba6c9a7de9c989c3abc87f457f3b183c30,"Changes to pep.
",numpy/doc/pep_buffer.txt
514e1f74f8aec7da732a181a071afc060ef1669e,"Fix numarray.fromstring
",numpy/numarray/functions.py
9edb7d795f01500de8b7f5006ffa406018edaf99,"Fix getitem on a string to just truncate trailing NULLs rather than stop at interior NULLs
",numpy/core/src/arraytypes.inc.src
645a6bf784187e7a78701c0aad01a4ef03899d9a,"Fix copyswap when a field is a sub-array
",numpy/core/src/arraytypes.inc.src
df839ebe19cc3f4a81d6148c84954fe057ce2f0a,"Update to buffer interface PEP
",numpy/doc/pep_buffer.txt
e3241d3e23e5b94713854fd2a75ee3d287bf94ee,"
",numpy/doc/pep_buffer.txt
447f28312ac843265621f61ff2b2c4333dc5466f,"Add buffer interface pep to doc
",DEV_README.txt,numpy/doc/pep_buffer.txt
866d6203c4088d906c29c9cb459d8271156cdece,"Undo the change.  It breaks the desired behavior.
",numpy/core/src/multiarraymodule.c
ef89617a84cbf8ba6740528fdce1917d5b998dda,"Fix mixed-kind scalar operations to use the standard in each kind.
",numpy/core/src/multiarraymodule.c
9bcf9ef90b0893a157e5d69478b9a9566b966249,"Fix doctests.
",numpy/core/arrayprint.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/utils.py
b860a39925a5e0a49d54fa363ccdf6113dfef12d,"Fix docstrings for loading with DocFileSuite.
",numpy/core/numerictypes.py,numpy/distutils/ccompiler.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py
ff2ceaa981dd5ef632ae965fcbaf81577dc625d1,"Fix numpy.core.records doctests.
",numpy/core/records.py
5cb3d759d601455e7e94b59d1baaf167782f3544,"Refactor benchmarks.
",benchmarks/benchmark.py,benchmarks/casting.py,benchmarks/creating.py,benchmarks/sorting.py
70c899f5940d2d2f99acbbc9906064e2028e25f9,"Prepare for doctest-runner.
",numpy/testing/numpytest.py
96660d8f37a78c4b1aad4b305783426f09cd5479,"Fix error in implementation of itemset for >= 2-d arrays.
",numpy/core/src/arraymethods.c
de63203a32c9ce24cb1cd090a232c47833476dfd,"Do not attempt to convolve empty arrays.
",numpy/core/numeric.py,numpy/core/tests/test_regression.py
e7a51c37517f0fc62624c7e8e40d63ba416d096d,"Fix polymul bug.
",numpy/core/tests/test_regression.py,numpy/lib/polynomial.py
a3237e0acf426698b4c08e0d107095ab11cb13a8,"Remove DECREF in userdef portion of ufuncobject.c because it is a borrowed reference.
",numpy/core/src/ufuncobject.c
aeaf38df7015f4650eed5aa3128f8e1716a68c61,"Fix possible segfault.
",numpy/core/src/multiarraymodule.c
a9a155c0aa11b0f843732a571f345dc1da4ff96e,"Fix nan_to_num on complex arrays. Fixes ticket #443
",numpy/lib/type_check.py
7dc29301e382f0c656ac2b3553ebfb26c6767b7e,"Flesh out the docstring for histogram() to address the concerns of #445.
",numpy/lib/function_base.py
a9300ad57fd49428c133194ed7e34a05fe62fa0a,"Fixed detection of Core2 CPUs (scipy ticket #349)
",numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/gnu.py
9432b439d0e27e4a6525a161777b29f40e750ae7,"Update docstrings.
",numpy/core/arrayprint.py
a6546ce524268a00ae50eef94aefccda576cff56,"Comment on __docformat__ in documentation standard.  Fix reference to
math, :lm:eqn -> :lm:`eqn`.
",numpy/doc/HOWTO_DOCUMENT.txt
05941837b183b3cb97e009c91e00e8a5ebd14ec1,"Import NewAxis for numarray compatibility.
",numpy/numarray/__init__.py
7a5ce8aa0ad0c5a1f601e021ed3ff319e91995f6,"Fix docstring and rename to byte_bounds.
",numpy/lib/utils.py
a36ce17c317f8f56f44242714e33b16b37e051ea,"Fix a comment string.
",numpy/lib/utils.py
e122f0798a686a41616908e071531790e84e5414,"Add memory_bounds and may_share_memory functions to numpy.
",numpy/lib/utils.py
59ae3b518b22d16e55995b3fee27b632bbecb3ad,"Added dirichlet random number generator to NumPy
",THANKS.txt,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
4a56cabed8811301838d2bbc67482bbc8ae56135,"Allow matrices to pass through more functions.
",numpy/lib/type_check.py,numpy/lib/ufunclike.py
c1bcd900a33726ff05cab668bf03207a4e0614ca,"Add new-line to end of file.
",numpy/doc/HOWTO_DOCUMENT.txt
57d211f6fb8f9ef9f0afdffca4472bbad9556113,"Add a HOWTO_DOCUMENT.txt for documentation standardization
",numpy/doc/HOWTO_DOCUMENT.txt
53d4e2faaa9b5268b327954425dc7759918619d9,"Add a close method to memmap arrays.
",numpy/core/memmap.py
e7b63c65f0ccb78c60dc11b756ca01953806b70f,"Correct c_numpy.pxd
",numpy/doc/pyrex/c_numpy.pxd,numpy/doc/pyrex/numpyx.c
7763133ec4c3d51d37b5205a1740e574f20963ae,"Use get_include instead of get_numpy_include.
",numpy/doc/pyrex/setup.py
2ba9faa99b7f80a26fa6378f6797fca85f325e95,"Fix ticket #439 --- poly1d objects can now be pickled because an AttributeError is raised instead of the old KeyError when __getstate__ is accessed.
",numpy/lib/polynomial.py
8fcedfd0a2a99ac8270d417662ff0d98a266bcc8,"Revert semi-intelligent handling of MACOSX_DEPLOYMENT_TARGET to work around broken MacPorts Python.
",numpy/distutils/fcompiler/gnu.py
4bb28f27cf58e220423e407f0addebb527caf79d,"Correct mtrand for Pyrex 0.9.5
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
56a6330e2a69392a7e230f4b0417f9cc623b8dde,"Generalize the setting of MACOSX_DEPLOYMENT_TARGET.
",numpy/distutils/fcompiler/gnu.py
37953a567622b540ea5970ad8a29ed16ae6a5969,"remove some remaining references to scipy. fixes #428
",numpy/distutils/cpuinfo.py,numpy/distutils/system_info.py,numpy/testing/numpytest.py,numpy/testing/setup.py
d7c5a1ec074074f94f929c0c3c77beb827e7eb05,"Fix the regression test to not use 2.4's sorted function.
",numpy/core/tests/test_regression.py
1d5bd2e9b44996c20eb31fabc2da79cb942b08bd,"Fix-up iterator macros so that they can take Python Objects (which are returned from the creation function).  Add NOTDONE macros.
",numpy/core/include/numpy/ndarrayobject.h
29c5d911e6e0193b0e20e6b2383e01df685df89d,"Fix include directory for fenv.c
",numpy/numarray/_capi.c
bdb43053e6cd090f3fd95e4cbfc82e70ee07c582,"Fix location of fenv.h file for CYGWIN to correct compilation of NumPy on CYGWIN
",numpy/numarray/_capi.c
20097b529cd7d7dda37ab814df36b2f58d9ce8f5,"Add a NOTDONE test for iterators.
",numpy/core/include/numpy/ndarrayobject.h
65f5782a9340f36467a3a7cfad3eac107d048428,"Correct the .args attribute of MAError. It needs to be a tuple. Python 2.5 depends on this.
",numpy/core/ma.py
34374574705466bdc9e1631ebee8d0334cb246bb,"Fix missing import statement.  Fix bug where random.permutation did not accept numpy scalars.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/testing/numpytest.py
1214839af24d8458e23f8edba7ed4375aff0ca3b,"G3 F2PY: Fixed parsing a*b**c expression.
",numpy/f2py/lib/parser/pattern_tools.py
d84df7beb09f4a3a80b721102d9705e9661fc47a,"deprecate the use of ScipyTest and ScipyTestCase. fixes #421
",numpy/testing/numpytest.py
36a3272a64938f27a9ba29503d5d427d89b7a9e6,"Expanded docstrings. This is a tedious and slow process, so please jump in and help if you can.
",numpy/core/fromnumeric.py
cdb170ab36b668cd8668f71ea5f871396d95cb54,"Use the out= parameter supplied by the user in defmatrix.sum()
",numpy/core/defmatrix.py
64aeb4dd4e4b22106db29329a3a81d2d7bc31b28,"Regenerate mtrand.c with the lxml project's branch of Pyrex in order to fi a 2.5-related bug in the official Pyrex distribution.
",numpy/random/mtrand/mtrand.c
3a4f10daab355101586464b538e9f3250b79054c,"whitespace cleanup
",numpy/linalg/linalg.py
206a5025fa82be9f2dcc5815e040651331889245,"Add regression test for reduction with noncommutative ufuncs.
",numpy/core/tests/test_regression.py
e56a09af9e696129b92e7487bccbc3713568fc5b,"clean up unused imports and bad whitespace
",numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/ma.py,numpy/core/setup.py,numpy/ctypeslib.py,numpy/f2py/auxfuncs.py,numpy/fft/helper.py,numpy/fft/setup.py,numpy/lib/convdtype.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/polynomial.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/random_array.py
4d9b87ec11dc268bb9069831deab466ffe47ad93,"Fix reduce problem with non-commutative arrays.
",numpy/core/src/ufuncobject.c
16a1d42ad141780a755603d48004e04cd3d33c1f,"Fix segfault in N.float64, ticket #412.
",numpy/core/src/scalartypes.inc.src,numpy/lib/tests/test_shape_base.py
1bd2d49ef378fb869d015cef32c3e44a4c03a8f0,"Whitespace cleanup.
",numpy/__init__.py,numpy/add_newdocs.py,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_errstate.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/config_compiler.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/interactive.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/f2py/capi_maps.py,numpy/f2py/f2py_testing.py,numpy/f2py/lib/main.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/parsefortran.py,numpy/f2py/lib/parser/readfortran.py,numpy/f2py/lib/parser/sourceinfo.py,numpy/f2py/lib/parser/splitline.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_parser.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_derived_scalar.py,numpy/f2py/lib/test_scalar_function_in.py,numpy/f2py/lib/test_scalar_in_out.py,numpy/f2py/lib/wrapper_base.py,numpy/f2py/rules.py,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/f2py/tests/c/return_real.py,numpy/f2py/tests/f77/callback.py,numpy/f2py/tests/f77/return_character.py,numpy/f2py/tests/f77/return_complex.py,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_logical.py,numpy/f2py/tests/f77/return_real.py,numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_logical.py,numpy/fft/fftpack.py,numpy/lib/__init__.py,numpy/lib/arraysetops.py,numpy/lib/convdtype.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/polynomial.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/twodim_base.py,numpy/lib/user_array.py,numpy/lib/utils.py,numpy/linalg/info.py,numpy/matlib.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/convolve.py,numpy/numarray/functions.py,numpy/numarray/image.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/setup.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/fix_default_axis.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/linear_algebra.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/random/setup.py,numpy/testing/numpytest.py,numpy/tests/test_ctypeslib.py
98b6d48b07f4eadfb7d1fc41483debe7e07eecd6,"Refer to NumpyTest instead of ScipyTest.
",numpy/testing/info.py
025a217f45bfeb22176827adfe02838d712660a0,"Refer to NumpyTest instead of ScipyTest.
",numpy/__init__.py
0ab9ae36e8484d06f2a8e70c6fe45004e73408b4,"* Fix #410 by using the stable mergesort instead of the unstable default sort in setmember1d().
* Add some more information to the function docstrings.
* Reduced the ""See also"" sections of the docstrings to point to the module instead of the full list of functions (some of which were not entirely relevant).
",numpy/lib/arraysetops.py
0f1df3fcfcdb4527ff2c332ddf7504b6b60e2813,"fix for #407 and add unit test for it
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
2e832de49f69d26eb7c8d133e45f9b9d99f7a3a6,"add a docstring to nan_to_num. closes #406
",numpy/lib/type_check.py
099247b5d7a88339d0e159c434905cf69540cc85,"Fix docstring typo as per #397
",numpy/add_newdocs.py
26c90195503e9091999397e3512b1eb6350de9d4,"Make it so that array scalars can be sub-classed.
",numpy/core/src/scalartypes.inc.src
6d7432af25facf48e0941904b1cacc54b8851833,"Test for ticket #374.
",numpy/core/tests/test_regression.py
04102657b2348c02fe3b870d7fb6b9e941de16d8,"Fix tests for Boolean.
",numpy/lib/tests/test_ufunclike.py
3fa7474c1f507482c82ec63e0276cf05f02c596c,"Cont. implementing F2000 parser.
",numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_Fortran2003.py
0b5b7b6897600c264e22283e3b18374f9704b26b,"Fix-up boolean Formatting so that true and false line up.
",numpy/core/arrayprint.py
77295888c6913b2bccaf69571fc97f87d211aa62,"Fix ticket #408 --- chararray problem with argsort
",numpy/core/defchararray.py
9ec50769a3fc1ca2a2cb220631d3c549da05ad9a,"[distutils-rework] Fix up how the Fortran compiler is chosen and used.
config_fc sets up an object referencing the compiler, which the other commands
(build_clib, build_ext) use. This object keeps track of whether we need
an F90 compiler at any point.
",command/build_clib.py,command/build_ext.py,command/config.py,command/config_compiler.py,fcompiler/__init__.py,fcompiler/gnu.py,interactive.py
32789fd7d5fdce563c37363a3dd1192aafdc0a9e,"Fix typo in oldnumeric and add Rick White's improvement to histogram for large arrays.
",numpy/lib/function_base.py,numpy/oldnumeric/compat.py
e776ee6c1518c91bcb58c72ae1ad4b0c973caca7,"[distutils-rework] Merged revisions 2922,2924-3484 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

Biggest problem in merging was appropiately choosing a f90 compiler in
build_clib and build_ext.

........
  r2979 | cookedm | 2006-08-08 17:16:05 -0400 (Tue, 08 Aug 2006) | 1 line
  
  fix #234: IntelVisualFCompiler is broken
........
  r3014 | stefan | 2006-08-14 06:05:22 -0400 (Mon, 14 Aug 2006) | 2 lines
  
  Ignore *.pyc files [for Albert Strasheim].
........
  r3061 | oliphant | 2006-08-24 16:07:59 -0400 (Thu, 24 Aug 2006) | 1 line
  
  update g95 version pattern
........
  r3138 | rkern | 2006-09-08 12:56:50 -0400 (Fri, 08 Sep 2006) | 1 line
  
  Fix #198
........
  r3164 | oliphant | 2006-09-15 17:06:47 -0400 (Fri, 15 Sep 2006) | 1 line
  
  Fix subversion number getting for 1.4 clients.  Also works for pre 1.4 clients.
........
  r3165 | oliphant | 2006-09-15 17:13:09 -0400 (Fri, 15 Sep 2006) | 1 line
  
  Fix when svnversion is not present.
........
  r3166 | oliphant | 2006-09-15 17:18:33 -0400 (Fri, 15 Sep 2006) | 1 line
  
  Small code re-org in _get_svn_revision
........
  r3228 | cookedm | 2006-09-28 07:23:18 -0400 (Thu, 28 Sep 2006) | 1 line
  
  For the MKL library, define the macro SCIPY_MKL_H
........
  r3240 | rkern | 2006-10-02 12:41:47 -0400 (Mon, 02 Oct 2006) | 1 line
  
  Add .dylib as a valid OS X shared library extension.
........
  r3290 | pearu | 2006-10-08 05:30:17 -0400 (Sun, 08 Oct 2006) | 1 line
  
  numpy.distutils: use language flag or source file extension to select default f77 or f90 compiler.
........
  r3291 | pearu | 2006-10-08 05:38:12 -0400 (Sun, 08 Oct 2006) | 1 line
  
  numpy.distutils: fixed bug.
........
  r3302 | pearu | 2006-10-10 16:27:23 -0400 (Tue, 10 Oct 2006) | 1 line
  
  Improved is_free_format.
........
  r3371 | pearu | 2006-10-19 18:03:23 -0400 (Thu, 19 Oct 2006) | 1 line
  
  Add Intel Itanium compiler 9.x support (needs testing).
........
  r3372 | oliphant | 2006-10-19 18:55:23 -0400 (Thu, 19 Oct 2006) | 1 line
  
  Fix missing comment characters in intel.py.  Check for None in .reshape and .resize
........
  r3430 | stefan | 2006-11-04 16:19:03 -0500 (Sat, 04 Nov 2006) | 2 lines
  
  Fix typo.
........
  r3450 | pearu | 2006-11-19 15:56:57 -0500 (Sun, 19 Nov 2006) | 1 line
  
  Skip interactive mode when using script_args argument.
........
  r3467 | oliphant | 2006-12-01 23:34:25 -0500 (Fri, 01 Dec 2006) | 1 line
  
  Try updating version command for NAG compiler.
........
",ccompiler.py,command/build_clib.py,command/build_ext.py,command/build_src.py,command/config_compiler.py,core.py,fcompiler/__init__.py,fcompiler/g95.py,fcompiler/gnu.py,fcompiler/intel.py,fcompiler/nag.py,misc_util.py,system_info.py
fac08c634a084284cb39caca2215647429262a93,"[distutils-revamp] Minor cleanup of command/build_src.py
",command/build_src.py
8bd6fb7ef7c81a97d3e86dc22badcf95af199860,"Fix random.shuffle
",numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
6d8631d90dc03603ce7c0482ccdb16bf3a88d4d3,"Fix shuffle and chararray printing for empty strings.
",numpy/core/defchararray.py,numpy/random/mtrand/mtrand.pyx
db487c204c9df0472642d14d80632382463ecbcc,"Add feature so that user-defined types can be recognized when instances of scalars of those types are present in the nested sequence.
",numpy/core/arrayprint.py,numpy/core/src/arrayobject.c
e3a1550ff1417599f68207f60ea622404d281178,"Fix some problems with user-defined ufunc registration.
",numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
9c5f0d85bc51b21650fb93657d4094e8f09b63b1,"Fix hanging eig computation when inf or nan values are in the array.  This check is already in SciPy.  We need it in NumPy too for some LaPack calls.
",numpy/linalg/linalg.py
51799cf3dbebbf99e1e0fb0e06c3215bb8dc3d69,"Fix overlapping copy problems with object arrays by incrementing the source reference counts before decrementing the destination reference counts.
",numpy/core/src/arrayobject.c
b4e8ba7d250acda7e279b00f0d72138dce818d5d,"Fix compiler warnings.'
",numpy/core/src/multiarraymodule.c
5e670a9a6d7d2e26ad34947055a64ecc08082ec2,"Fix reference counting with PyArray_ArgSort
",numpy/core/src/multiarraymodule.c
fb09e79a2a8defd173f8cb966a0104d8ecda66e6,"Fix reference counting with PyArray_ArgSort
",numpy/core/src/multiarraymodule.c
57dbc1b4f1a9069769a5984abfd3454ebe0667b8,"Fleshed-out site.cfg example.
",site.cfg.example
d3527fa262158a7323a3bb6997699cb12db6468f,"Trunk is 1.0.2
",numpy/version.py
91e3f408b21bde54cac134b7140d76c7ae147a20,"Allow 1-element arrays to be index arrays in Python 2.5
",numpy/core/src/arrayobject.c
42655ec7108f9a1e8e684328c0058c837eaf1a61,"Add space to error message.
",numpy/core/src/arrayobject.c
3a93adce6609cd3499d85c5f2b9dc38d3d1255c7,"Fix warnings found by Intel compiler due to unused variables that were set.  Make ones work for compound types.
",numpy/core/blasdot/_dotblas.c,numpy/core/numeric.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/fft/fftpack.c,numpy/numarray/_capi.c
921fa088183b86dbaeb35a9c9af17980e7708a54,"Try updating version command for NAG compiler.
",numpy/distutils/fcompiler/nag.py
bf677ca3b1b02c57da75a302a0f0b5704e3f525f,"Allow argsort and sort functions and argsort method to take None as an argument.  Add order= keyword to sort and argsort functions.
",numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
574fe369112ded91f80502db73022a8fd79d3fe3,"Add order keyword to argsort and fix documentation of sort and argsort.  Also, fix so that a Python long is passed to mmap instead of an array scalar.   Fix setting when using mixed array indices and slice objects by making sure to swap the object in the reverse direction to the swapping that takes place on the MapGet operations.
",numpy/add_newdocs.py,numpy/core/memmap.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
5898c2c445cb7fe14e2866b34f625e6f95bbf82f,"Fix arr.flat[ind] = obj  when ind is 1-element and obj is a 1-element sequence.
",numpy/core/src/arrayobject.c
7ba40d2928695a751ae24c05a6b7f2fb7aa97f88,"Docstring improvements.
",numpy/core/numeric.py
1c4ad37689cbafd5f63f9c4e8b05b825dbf1f783,"Revert previous change and rather check for both possible outcomes.
",numpy/core/tests/test_regression.py
1e6992d8d89bae2c3328b5430765036b86b14a40,"Remove dependencies on default integer type in test for ticket #372.
",numpy/core/tests/test_regression.py
bdb5ec1887d060620ab611c70dbbe4b788cae14a,"Fix early return in polysub.
",numpy/lib/polynomial.py
f11c32a592360e6def1c9e338a436ad869598833,"Fix early return in polyadd.
",numpy/lib/polynomial.py
76ccf8586dfc01a41b316e9cf38b713ac3be4f68,"Don't share __all__ between numarray.linear_algebra and oldnumeric.linear_algebra.
",numpy/numarray/linear_algebra.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/mlab.py
886c1db715d9b79cf2af945c880aee96a41e24fb,"better doc for a.dump and a.dumps
",numpy/add_newdocs.py
c090cbc510fcf2e193bcb160dd3b9a8f4ffc76c8,"Parenthesize a macro argument.
Break some long lines.
Lineup macro line continuations for easy reading.
Insert some empty lines for clarity.
",numpy/core/include/numpy/ndarrayobject.h
763d2508c27487b5e1300d0298f3afdd48fbeef6,"Add test for chararray.startswith.
",numpy/core/tests/test_regression.py
9f036ecd5ae67db2af4d486199f2b64c73670acb,"Fix startswith operation on character arrays.
",numpy/core/defchararray.py
1ad56e631c29869d127931b555d0b366f7e75641,"Add test for fftpack.
",numpy/fft/tests/test_fftpack.py
8fe987afb4de13e9160191917b6b3ec8b79adfa3,"Refuse to compute FFT for invalid number of data points.
",numpy/fft/fftpack.py
97fe6fa1b7e3a5b9b4e4eecd92ab816846c99c54,"Parenthesize some arguments in macros. Cleanup whitespace. Fixes ticket #383
",numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/include/numpy/oldnumeric.h,numpy/core/include/numpy/ufuncobject.h
7078ccf341a5dabda585c3a8a5fca397ea73409c,"Skip interactive mode when using script_args argument.
",numpy/distutils/core.py
b1f12018b15b585f11b2dc96c122381fac1cdad8,"Test refcount for changeset #3443.
",numpy/core/tests/test_regression.py
92650714b3b1d654f1bc60e9b430e834a713f3d4,"Remove Py_CLEAR and set ptr to NULL manually
",numpy/core/src/ufuncobject.c
005583cc50abc22d1784f51cc0f19b0e2367fb82,"Allow array_descriptor format to also use alignment.  Force objects with _fields_ attribute to use alignment (ctypes case).
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
ccd63380eb664f67c5fa9fcaad8860138c8c0607,"Allow data-type objects to be 'repeated' using '*' like ctypes.
",numpy/core/src/arrayobject.c
e2756cb71da612edbd7941fc896ef01ebc7424ed,"Understand array's of ctypes types.
",numpy/core/src/multiarraymodule.c
9356329f5b5f6c658f0dd54363c25157c35a5841,"Understand ctypes basic types and structures.
",numpy/core/src/multiarraymodule.c
c4a0dbf837cd66eb0d9691947c39d458ebd4f1b4,"Fix reference count problem with dtypes in vdot
",numpy/core/blasdot/_dotblas.c,numpy/core/src/arrayobject.c
6bd9d2feaf1253081867f822c03abbc1593b5652,"Test for ticket #378.
",numpy/core/tests/test_regression.py
f552cf5cb9ccb02e05597559069ad97312464c54,"Fix some compiler errors.
",numpy/core/src/scalarmathmodule.c.src,numpy/numarray/numpy/arraybase.h
e6ef04049867f2174c766e2e81e27d79f531b44d,"Add docstring to correlate.
",numpy/core/numeric.py
20cd8f309b54b4cab803c625abb90f5cb2cccb0b,"Applied tecki's patch for ufunc's involving objects
",numpy/core/src/ufuncobject.c
8b48eb0badedb75e3b297b4f68552158d7ca938e,"Moving the research/ directory out of the trunk as it takes up space in the source distribution without being useful for users.
",numpy/f2py/lib/research/04-007.pdf,numpy/f2py/lib/research/pointers/pointer_size.c,numpy/f2py/lib/research/pointers/settypeinfo.f90,numpy/f2py/lib/research/rat/main.c,numpy/f2py/lib/research/rat/main.f90,numpy/f2py/lib/research/rat/rational.f90,numpy/f2py/lib/research/rat/wrap.f90
3e2d1f8c497c9f43ecca15b4a309beb73e128fbd,"Used an adapted setArrayFromSequence from numarray to increase speed of Assign_Array dramatically
",numpy/core/src/arrayobject.c
7dc0cb19610c4ce559b32617eace1091cddd8ea4,"Expose fromiter's docstring.
",numpy/add_newdocs.py
6dca58209f243033df4e04a3cfdb64dad3718040,"Fix bogus unitialized variable warning by removing unneeded variable. Cleanup whitespace.
",numpy/linalg/lapack_litemodule.c
0a4064e8356c286b864315f1a7750e273119548f,"Fix typo in lapack_litemodule.c
",numpy/linalg/lapack_litemodule.c
ad31bbdce9e812e4218839c1446031b9d41dd514,"Coerce to floating point arrays in cov to avoid errors when integer arrays are passed.
",numpy/lib/function_base.py
a3ff1627d8ee99c47e4b3b28d23be434657dca4d,"Only raise ctypes version warning on load_library. Whitespace cleanup.
",numpy/ctypeslib.py
a15d0d96c00f8ae86e5302024c4a940c266d5288,"Add test for ticket #372. Whitespace cleanup.
",numpy/core/tests/test_regression.py
c2b5203c09cac644dae7ec02c6011f337c856636,"Fix typo.
",numpy/distutils/command/build_ext.py
c0c1bea69b11881bebf483ce0c961812a27f061c,"Fix auto-naming in records.py
",numpy/core/records.py
2b5e6e4c7e74adbd826b28eec4432eadc86ffd92,"Allow order keyword to sort for sorting record arrays.
",numpy/core/_internal.py,numpy/core/src/arraymethods.c
ed184cde3c12fc43049951a60434df296e5725f3,"F2PY G3: continued F2003 parser implementation and unittesting.
",numpy/f2py/lib/main.py,numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_Fortran2003.py,numpy/f2py/lib/parser/test_expressions.py,numpy/f2py/lib/parser/test_statements2.py
df18ca848af515b961d50167646404e0d8db5eb8,"Fix #369: windows returning invalid results for M=1
",numpy/lib/function_base.py
8cc0baba1bea752cc6c8bc8917055260795960ba,"Apply #368
",numpy/f2py/crackfortran.py,numpy/lib/shape_base.py
39242cbff4ad887be3d0d46dd348f769d6729d82,"Fix problem with dgesdd where the optimal work size is not computed correctly.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/multiarraymodule.c,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py
a39c1cd2e4ec42adfdd548da86ae36a9241a58da,"F2PY G3: Cont impl F2003 parser; defined all syntax rules.
",numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_Fortran2003.py
66e484b186c74de4901cdb7783285f4126b65dd0,"Revert hasobject to returning True or False
",numpy/core/src/arrayobject.c
d02c44d0712059c51b913771141ffbcd7bdb7506,"F2PY: Cont implementing Fortran 2003 parser. Clean up.
",numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/readfortran.py,numpy/f2py/lib/parser/statements2.py,numpy/f2py/lib/parser/test_expressions.py,numpy/f2py/lib/parser/test_statements2.py
b18a794fef392866fc973f40f9f48108d52345e2,"Fix OBJECT_argmax problem and add test.
",numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_regression.py
2f43a2fcedd049de347a4cef4fc3456ce2cb0499,"Fix some reference-count problems in f2py with data-type objects.
",numpy/f2py/src/fortranobject.c
6d3f78e6665122ec7b9dffaa1c81c0327bccd365,"Fixes when fielddict is None
",numpy/core/records.py
4d11fdfa180f9e1412b18278c95b17d2040ea67f,"F2PY: Cont. unifying Fortran stmt and expr parsers.
",numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/readfortran.py,numpy/f2py/lib/parser/splitline.py,numpy/f2py/lib/parser/statements2.py,numpy/f2py/lib/parser/test_expressions.py,numpy/f2py/lib/parser/test_statements2.py
693762bb8378a9977ccc1367e5e03d352f90f7cb,"Add test for recent fixes to recarray setattr.  Replace sb.ndarray with global variable ndarray
",numpy/core/records.py,numpy/core/tests/test_records.py
163ae262a4609b3a67361d466910426e37dfa732,"Fix the inability of record arrays to be able to set field data by setting the attribute of that field name to some value. 
",numpy/core/records.py
5de193472de880a05e1bdde2b3158dc5a4b44c69,"Fix usage of 'as' as a variable
",numpy/core/numeric.py
585f922308a8af2d85a3c92d0d2bb121fed538fd,"Use more general notion.
",numpy/core/src/scalartypes.inc.src
668574c12f81caf3ee744991a29e47146fb82231,"One more fix for allowing use of setitem in PyArray_FromScalar instead of memcpy
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/scalartypes.inc.src
c3551579554421e37acb7aa6b0bcda55dd88cfac,"Expand usage of hasobject to be a flag-like entity keeping track of how the data-type should be used.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
6a56d81b25cb69767f78c1e8f5247815b16297ea,"Fix to allow typeobjects in array descriptors which are not sub-types of array scalars.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
0051241ac1e06cb13cda0bcc67410f361a97217f,"fixes to last commits.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
cc32637e236429e582db471837cc6bb85b2df1b4,"scalar value doesn't fail.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
791fa388df16051e1f25d41d42dc9ab62a9ad704,"More fixes to allow user-defined types in C.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
3c64ccdb050e56a0b112995d4d359c2017d4a4cd,"Allow subtypes of all array scalars and fix-up scalar_value to accept sub-types.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
50c0847bc0f6dd4df616ac3c12d21dc423e8018c,"Re-organize user-defined check.
",numpy/core/src/scalartypes.inc.src
4a8eb74e8e925929f3e5fd6933e50bccc91d8e23,"Fix PyArray_Scalar to handle user-defined types.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
9bc2e05fe3c5b886b906bbac37ff2d566669fd11,"F2PY: start unifying Fortran statement and expression parsers.
",numpy/f2py/lib/parser/Fortran2003.py,numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/statements2.py
937e4dbfa532e14e1da0dbc091b83ab0031913af,"Eliminate test for longfloat.
",numpy/core/tests/test_regression.py
9e44f62b907078ab5ad9edbee7c0cf670e49506f,"Fix-up the THANKS file.
",THANKS.txt
5db1af4e2840a257c20cdbbb0fb423ba8bb7823d,"Fix-up the THANKS file.
",THANKS.txt
1dd7c930eae5deb7d7dadde2eca1ed6aa648dc16,"F2PY G3: more tests for Fortran expr parser.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/test_expressions.py
cf818fd06c8a9a7b28f09215eb503372f3bd9373,"Fix vectorize bug ignoring otypes.
",numpy/lib/function_base.py
2d3a2f6ef7b024fc6ce08b32121d666b836ec042,"F2PY: Optimised Fortran expr parser. Fixed bugs.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/test_expressions.py
b2eb92995656ae62d980506a24ba5a6faa601cc0,"Update version number of trunk.
",numpy/version.py
75981b8a97760e91295ef8b64148816a897c9b7d,"Add test for recent bug in indexing optimization.
",numpy/core/tests/test_regression.py
24b485da911fa5b5fe9036ad0b3db341267aee80,"Fix optimization so that array's of 1-element are not interpeted as integers.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c
1e25ae2b885ed6cd5b087f013bd3c61d4c80a1e4,"F2PY G3: finished Fortran expression parser implementation, comes with complete unittests.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_expressions.py
ef8c2a7e22edf179beda65d13c3a35ffc3e90c2a,"Fix some typos and allow use of F_CONTIGUOUS and C_CONTIGUOUS in requires.
",numpy/core/numeric.py,numpy/core/src/arraymethods.c
3f4f58619f955e0af1e9c1d73bd1639b6c95e455,"Add more keys to _flagdict.  Fix uses of F_CONTIGUOUS and C_CONTIGUOUS up a bit and make sure flags in num_to_flags includes only full flag names.
",numpy/core/include/numpy/noprefix.h,numpy/core/src/multiarraymodule.c,numpy/ctypeslib.py
3347ff8d540b2cd5461cb5d2718873f570e9cf8b,"Add warning for ctypes < 1.0.1 and fix test and add C_CONTIGUOUS and F_CONTIGUOUS to multiarray._flagdict
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_defmatrix.py,numpy/ctypeslib.py
88254d5756568c9e8d41e7b8272a0e48a5b149b5,"Initialize pos before calling PyDict_Next.
",numpy/core/src/ufuncobject.c
5817ed4ec7fa662f70a1401b521a8a6d785fe51f,"Add .A1 property to matrices to be equivalent to .__array__().ravel()
",numpy/core/defmatrix.py
4ea6483ccf7c9568dc8a487114590be9e4771fb4,"F2PY G3: Cont implementing Fortran expression parser, almost finished.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_expressions.py
b98a6d71088106d422994687c871cf51389cde39,"Don't allow builtin data-type objects to be deallocated.
",numpy/core/src/arrayobject.c
440a2627ac7d15de4b765279ce7546e66ddfa780,"Add ability to sort arrays with fields defined more intelligently.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
ce92c890b685c9a3c2d75f2265763f2226fd884b,"Add ticket #358 to improve detection of reshape that does not require a copy.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_regression.py
46d56d06d82b993b94a95148605f217d71a1c961,"Use fp_swap_flag(0) to reset flags on AIX.  Ticket #362
",numpy/core/include/numpy/ufuncobject.h
90372cf755f3f9f90d021d3db2d774de4e6a6161,"In ix_, do not modify shape of input array.
",numpy/lib/index_tricks.py
400ba83e59ef77b68c5a415daadcd1548f2e58f6,"F2PY G3: Cont. implementing Fortran expression parser and unittests.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_expressions.py
0de69a4aa425c8f472e86f18795ba537893d292e,"F2PY G3: implementingg Fortran expression parser cont.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_expressions.py
0397a0569f57e5d2ab4e032840ee4131e1f0f93f,"F2PY G3: fixed bugs (ticket 361), impl expression parser.
",numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py
6b7adeef81f7a39b0333dfd571a0b5823a46e4d5,"Fix possible unitialized 'i' to fix #359
",numpy/core/src/ufuncobject.c
b5a17594bc7e45f30fea4a651783361b6caaa294,"F2PY G3: Impl. pattern tools for expression parsing.
",numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/pattern_tools.py,numpy/f2py/lib/parser/test_expressions.py
5e6ae5b1b7c335a70d7c73711d9cb180e3caf7aa,"F2PY G3: started impl array support.
",numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_scalar_in_out.py
b489d3b282fd7e2ebebbf316d31b2c66a5e62389,"F2PY G3: started impl array support and expression parser.
",numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/expressions.py,numpy/f2py/lib/parser/test_expressions.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/parser/utils.py
d4b47b7573c6d3d21cac7e97a0aee306d15b8d1b,"Fix missing comment characters in intel.py.  Check for None in .reshape and .resize
",numpy/core/src/arraymethods.c,numpy/distutils/fcompiler/intel.py
ec2c2bc190e3a8fa9aa6e956cc0ce6dd63bde445,"Add Intel Itanium compiler 9.x support (needs testing).
",numpy/distutils/fcompiler/intel.py
0d9589d534383c8e4291d0579208b36ece2312e1,"Added tests for errstate(call=x). Made minor change to errstate so that an existing call can be suppressed using None during a block as well replaced.
",numpy/core/numeric.py,numpy/core/tests/test_errstate.py
c08e80eb6c1f47a9d65e363316ae1f6c6e6f870d,"Eliminate more warnings in testing.
",numpy/core/numeric.py,numpy/core/tests/test_ma.py
e84754abd8efafab439474137865707d2bbbdd20,"Fix tests to run cleanly with new, tighter error handling.
",numpy/core/tests/test_ma.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py
ab5a8a2d2d019c4962cd08b0b37b5d48b63ec880,"Fix longfloat test on platforms where they are the same as doubles.  Add ability to set error call-back/logging-object in errstate object.
",numpy/core/numeric.py,numpy/core/tests/test_regression.py
bea2f1c00930442aeaaa5c227f6458ff5067f3d1,"Fix length early in IntpConverter.
",numpy/core/src/multiarraymodule.c
88c3c464491c92ef2b43dc3a0d76bcce9fe69b6b,"f2py-2e is not ready for PyArray_STRING, using PyArray_CHAR for now (character*n support has improved in f2py-g3.).
",numpy/f2py/capi_maps.py
bafa719696243a03bf0f1f3b2f7bf0c6bb0f26ed,"Fix test.
",numpy/core/tests/test_regression.py
448f3851e99f4667faaae813bd0cd6df2b666c29,"Add print and log facilities to error handling and change the default error mode to divide='print', over='print', invalid='print', and under='ignore'
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
42ec0613463dd5a1e583370d5f7fd8fddbedced8,"Allow F_CONTIGUOUS and C_CONTIGUOUS as aliases to FORTRAN and CONTIGUOUS
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
b022765aa487070866663b1707e4a2a0d8ead2e8,"Fix-up so that if on creation, a string or unicode data-type has an empty elsize it is reset to the size of one character.
",numpy/core/src/arrayobject.c
2e7c822ee511d36b36dc5df9b35bbacccfe366e5,"Fix Ticket #352
",THANKS.txt,numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
ed7b368d34b95f8391d5dbec35e6ae7e7f4b77dc,"Change to sig (signature) keyword.
",numpy/core/src/ufuncobject.c
5d17dd076b199e34b2718d3088f702fe1cb32132,"Allow entry in self->types to type= keyword.  Change from dtype= keyword because it doesn't always follow the rules of data-type conversion.
",numpy/core/src/ufuncobject.c
0bcccc6d1e15f305db5c6ad1af41a08f38ee87c1,"Add ability to select specific 1-d loop to use when calling a ufunc, either by the output type or an exact signature.  An error occurs if a 1-d loop is not found to match the specification.
",numpy/core/src/ufuncobject.c
4590e9bba04cae1c989c7d16da3dffdffb375561,"Fix so that reshape copies fewer times. Fix so that arr.ctypes.data returns the integer and arr.ctypes._as_parameter_ returns the c_void_p type
",numpy/core/_internal.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
0e70085a1e01b853739ab7c8160ae05f6560db03,"Increase the C-API and allow ufuncs to be given keyword arguments.  Re-compile extension modules after updating to this revision number.  extobj= and dtype= keywords are possible, but only extobj= is implemented in this revision.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/numeric.py,numpy/core/src/ufuncobject.c
8a142f7dafd5a820190e61e7173de1fde8acee7a,"Allow ability to reset the string function to the builtin string function.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
32b16bbd43214d80362530a4c6dfd156dcab6b04,"Change the 'array' function so that forcecast is true.
",numpy/core/src/multiarraymodule.c
a70ebabc0022a19df8caca07fe79d87b69791c95,"Fix PyArray_FromAny so that it raises an exception on casting unless FORCECAST is True.
",numpy/core/src/arrayobject.c
637f70c7236c547e575d74e68ed8d971a4799aa0,"Fix #350 by changing wording.
",numpy/core/src/ufuncobject.c
cf7a96e9c975a1a71d4d6737b84b80cc202328fc,"include <signal.h> when trying check for SIGSEGV
",numpy/core/src/multiarraymodule.c
1e263c23dcc07d6943540a770f2a582857987df3,"Re-format THANKS.txt and add check for reshape order argument.
",THANKS.txt,numpy/core/tests/test_regression.py
405115b37b3865cebfd20822fc1edce51731973e,"Fix reshape for FORTRAN order from 1-d arrays.
",numpy/core/src/multiarraymodule.c
6130751b1c8657b4349daae7ee3978e3e88d4525,"Added yours truly to THANKS.txt
",THANKS.txt
fcc5b25a3526995708ae1c984818c46db161757c,"Applied patch for ticket #345: fix to test_errstate for Python 2.5
",numpy/core/tests/test_errstate.py
15155cf5d7a0f9afc1a9cebb9203d80fddcb6c92,"Fix qr decomposition. The dimensions m,n were taken from the fortran ordered array
instead of from the numpy ordered array and consequently were reversed.
",numpy/lib/polynomial.py,numpy/linalg/linalg.py
ff1c6632c9313027a58f13797dc58127bcaededf,"Fix finfo eps and huge to be array scalars of the appropriate type.  And use finfo interface instead of MachAr.
",numpy/lib/getlimits.py,numpy/lib/polynomial.py
533fba23cb556658fa8cc465c3385426ec3a8521,"Change error exception to RankWarning.
Add keyword argument full to get full fit info.
Make 'always' the default of RankWarning.
Improve documentation.
",numpy/lib/polynomial.py
c951acde99c069cf656e30119f5423bcee0b1a57,"Make sure order is an integer
",numpy/lib/polynomial.py
658b94aa185b341ddf638ec488ac5acd8cdf28fa,"Set rcond to precision of x as default.
Make error message more informative.
",numpy/lib/polynomial.py
62e610eac5302aa3c1f6c1715c5d3be745caedaa,"Scale the x vector in polyfit to improve condition of Vandermonde matrix.
Throw error on rank reduction in polyfit.
Error should probably be replace with a warning at some point.
Add argument checks in polyfit.
",numpy/lib/polynomial.py
f1c9d44a13ad1ff8002fdbbc015a71cc08fccc67,"F2PY G3: fixed compiler warnings.
",numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py
1c36f49e3964e894f03a7b97b75096f4634ae3b3,"Add test for ticket #339.
",numpy/core/tests/test_regression.py
81e481bd272d8685d986030e855fe3a389d68061,"Add tests for tickets #335, #341, #342 and #344.
",numpy/core/tests/test_regression.py
099f140d97c07671497e5883ce2be9fcac62a3a1,"Add roll function from ticket #293
",numpy/core/numeric.py,numpy/lib/shape_base.py
ec5a3911b06f7dbefe89947a42d8ff23e1b82fdd,"F2PY G3: modules can import f90 derived type wrappers from other modules.
",numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_module_module.py,numpy/f2py/lib/wrapper_base.py
2d2cc2c1f8ce408b8247fd80b2fccb3ae81edc01,"Fix ticket #342.
",numpy/core/src/arrayobject.c
9416787ebb51f1fb847567dd6f2df48cd7ab4b97,"Fix ticket #344: normalize repr of dtypes with shapes.  Also change align argument in dtype constructor to be a boolean.
",numpy/core/src/arrayobject.c
58541aa666e7363c3313bd886e1eafbe07d77cc6,"Mention scaling in the polyfit docstring.
",numpy/lib/polynomial.py
10f2827029febe95d6e72a2f8568b0595f83c66b,"Fix mgrid for count of 1
",numpy/lib/index_tricks.py
bee75459472c7fdfdbf08d0caa390342c447c49d,"Fix ticket #341: part with 'c' arrays not being comparable to strings.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
81abf6377654cb96ee6e2dbe568de0ea5d4f4af1,"Fixes from 64-bit warnings in ticket #337
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
96140d2a8e221126cdb6e6a72a98f3e5f3413801,"Add fix so that '()type' is detected
",numpy/core/src/multiarraymodule.c
4f83a34fe0961bf00e27313949676c4101c44b73,"Fix-up tensor solve and tensor inv and rename to match tensordot.
",numpy/core/numeric.py,numpy/linalg/linalg.py
45f9558ec55e04a214b1e259fb0a73ed08c1bd9f,"F2PY G3: exposing f90 type information via _API variable for other modules.
",numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_module_module.py
4a69a27cf3edc60a1304110e5b9bf4090b8c6ec5,"
Add a rcond parameter to the polyfit function and give it the double precision
default value that dgelsd uses (rcondx=-1) on the principle of least surprise.
Values of rcond less than this can also be useful, so a warning message and a
bit of explanation was added to the documentation.

The default value used by lstsq was set to the default (-1), and rcond in pinv
has a default value of 1e-15.
",numpy/lib/polynomial.py,numpy/linalg/linalg.py
9361c17caa2816d755e2ce2a5faa860ea2e675c2,"F2PY: Impl. (suboptimal) solution for nested f90 module wrapping.
",numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_module_module.py,numpy/f2py/lib/wrapper_base.py
0aaac11ce7be7354a101d90d9c95dde6e562008d,"Add solvetensor and invtensor
",numpy/core/numeric.py,numpy/linalg/linalg.py
f2d36cc4c0684e1eca90aaaa69812404ce742873,"Forgot this file in last commit:

Added docstring and tests to errstate. Also added 'all' option for seterr so that we can set all the options at once. Note that tests on errstate are only run in Python 2.5 and higher.


",numpy/core/tests/test_errstate.py
abb7a32a344bf73dd5f9a878c99335352316480d,"Added docstring and tests to errstate. Also added 'all' option for seterr so that we can set all the options at once. Note that tests on errstate are only run in Python 2.5 and higher.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
61d36f3bcbb50da5d33cf6c614859925e27f6abd,"Under Python 2.5 on windows test_multiarray was failing mysteriously. Applying normpath to set_local_path cured that.
",numpy/testing/numpytest.py
53bf14a0dbde7f708fb6a83fefd95138b54a678b,"
",numpy/lib/arraysetops.py
b5fc73534d943c77a9cd8254e97ea8d7aeb1be09,"modernized to use new numpy features, speed-up of unique1d, doc update
",numpy/lib/arraysetops.py
e5bb060c98b5ad52c98c24e45fe81ce3737ba5f4,"Fix
asbuffer -> int_asbuffer so that it checks for read (and write) ability to the memory to be used as a buffer by catching SIG_SEGV
",numpy/core/numeric.py,numpy/core/src/multiarraymodule.c
cf3eb93b05da716e16b87c30d7b5e08c22115330,"Add errstate object to be created in new 'with' statement
",numpy/core/numeric.py
1031df26af6d9b209458fb229a987247bf2d5497,"Fix scimath.power for negative integer input.
",numpy/lib/scimath.py
bafea8e5b00acabaf3f6688764bd33706a892cef,"Test for ticket #334.
",numpy/core/tests/test_regression.py
7338a7ecfb84fe1eaf0a887dcb523e852a12b4aa,"Fix some name-space errors in scimath.
",numpy/lib/scimath.py
a6f8d27fbc1dbda82e89a77b5879c86f5952cc18,"F2PY G3: Impl. F90 module subprogram support and simple tests.
",numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/test_module_scalar.py
87e301093842c6ec1a47e0c8bf4f28c7fc164455,"Make (type,()) return type
",numpy/core/src/multiarraymodule.c
d6c1b18483f22c40abb5ae040476491b932ca6e0,"F2PY G3: Impl. scalar function support and tests.
",numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_derived_scalar.py,numpy/f2py/lib/test_scalar_function_in.py,numpy/f2py/lib/test_scalar_in_out.py
92a25379d95b1b1448f41e601e08ab0239ea7181,"F2PY G3: improved public/private spec handling. Added function wrapping support.
",numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/typedecl_statements.py
c0f1f96067a7dd75f767068790c39e055a83e40b,"Fix asbuffer function.
",numpy/core/src/multiarraymodule.c
02b451e4a1a7f9b96becb27feceb699267ff9d95,"Remove extra semi-colon.
",numpy/add_newdocs.py
7147b21ea8483ce6ce2ed3474e23136bb1043913,"Fidget with average/mean docstrings.
",numpy/add_newdocs.py,numpy/lib/function_base.py
f52ca5b51b089962f3870107b2a6b8ccdcae2286,"Simplify mean and average docstrings.
",numpy/add_newdocs.py,numpy/lib/function_base.py
349a84138004e47925a39e5d7144b3b0f47d4389,"Improved is_free_format.
",numpy/distutils/fcompiler/__init__.py
cc4434289c938e041c34ff54ddfcd641f7d10c16,"Test for ticket #330.
",numpy/core/tests/test_regression.py
f558fbbf01eaf976daeeaa8e963985a4a5d52422,"Resolved ticket 285: imporved error messages
",numpy/f2py/f2py2e.py
0330812bca3a97a2b808964e32d5ae81b466441c,"Fix segfault in .imag for real array scalars.  Be specific about infix multiplication.
",numpy/core/src/scalartypes.inc.src,numpy/lib/shape_base.py
a307a7f160a2f8fc4173d6bbcff48b465c0758e3,"Get rid of warning on main trunk.
",numpy/core/src/multiarraymodule.c
f9b93a7ca14e04e8616c636b343978eee704279c,"F2PY G3: refactored Python specific wrapper code from parser.
",numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_derived_scalar.py
ecbabb3ac7764c09ae8f6f8aff691b36f40b6870,"Speed up concatenate and choose when sequence is an array.
",numpy/core/src/multiarraymodule.c
9c9f739d4589ed7ad5469bda7269e79e90d843cb,"Fix kron for multiple-dimensions.  kron is defined so tile(b, s) is the same as kron(ones(s,b.dtype), b)
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
b7f719aac1d6ff56cf58cb915ca7453820357a11,"F2PY G3: added simple test for subroutine with derived type intent(in,out) argument. Fixed bugs.
",numpy/f2py/lib/main.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_derived_scalar.py,numpy/f2py/lib/test_scalar_in_out.py
416f306f8add72dbf1ea6052f7c0ca51b226321a,"numpy.distutils: fixed bug.
",numpy/distutils/fcompiler/__init__.py
45e92465815e16d02a611005b61abc6a65f6b91c,"numpy.distutils: use language flag or source file extension to select default f77 or f90 compiler.
",numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/misc_util.py
cc7fd3d7d62f4bc6ee17456d282475781204f98e,"F2PY G3: added support and tests for character*(*) types.
",numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_scalar_in_out.py,numpy/f2py/lib/wrapper_base.py
fd52a61390598af319a4e67366972590cfeeaf98,"F2PY G3: Impl. support and tests for scalar logical and character*<len> types.
",numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/test_scalar_in_out.py
dbe29f439bf38f594db51b8e96057f3adabe9b45,"Kron is now N-dimensional, so remove rank check.
",numpy/lib/tests/test_shape_base.py
0d127c8bcc0612deaf0624c7d5a7deeb0d69ada6,"Add test for insert.
",numpy/lib/tests/test_function_base.py
a09fa7d6edf0d39adecc0b96e8644be2b23cf234,"Close ticket #328.
",numpy/lib/function_base.py
8d93420410253b4954a011f6435671fb042cc08e,"F2PY G3: clean up.
",numpy/f2py/lib/src/SCALARS_IN_BITS.cpp,numpy/f2py/lib/src/pyobj_to_Py_complex.c,numpy/f2py/lib/src/pyobj_to_double.c,numpy/f2py/lib/src/pyobj_to_long.c,numpy/f2py/lib/src/pyobj_to_npy_longlong.c
90d11ae25a5edabecc0b9e9c7a6e3de929d125f2,"F2PY G3: completed test site for int,float,complex scalar support. Fixed bugs.
",numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/src/pyobj_to_Py_complex.c,numpy/f2py/lib/src/pyobj_to_double.c,numpy/f2py/lib/src/pyobj_to_long.c,numpy/f2py/lib/src/pyobj_to_npy_longlong.c,numpy/f2py/lib/test_scalar_in_out.py
79f992d50ce28fa119455e0f12e428559b0ff0b8,"Added NPY_<CLS><BITS>_FMT macros.
",numpy/core/include/numpy/ndarrayobject.h
e5181859b022407090ce43bfca833881c8488b09,"Fix kron to be N-dimensional.
",numpy/lib/shape_base.py
ba6b099b3d4b97fe933e0ebf5f18ca29f8111855,"Fix typo in tile.
",numpy/lib/shape_base.py
c75bd2d03ccc6415bb9a0f090d7e2d80b40ea2af,"Add tests for tile and fix error.
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
1ff0cd9948e79eecd2c8ec9ac9aa88c81c6b9dfc,"Add tile to numpy and move repmat to matlib.py
",numpy/lib/shape_base.py,numpy/matlib.py
831feb757019ebbeb911e867e30700581629140f,"Get rid of unused variables.
",numpy/core/src/arraytypes.inc.src
54fc7a4a9f46d4011f78994cc122ae168c452a48,"Add test for ticket #325.
",numpy/core/tests/test_regression.py
1e339d7f58653beba15714fdeead052ed9d73611,"Fix last OBJECT function to handle NULLS.
",numpy/core/src/arraytypes.inc.src
ce24459130f1d909d6fa051acf1da2aab19f32e0,"Test for ticket #327.
",numpy/core/tests/test_regression.py
fe0b9ed21326cc779f70880152b271908769d3d4,"Fix ticket #325
",numpy/core/src/arraytypes.inc.src,numpy/lib/function_base.py
505a95a549ca32c2e81587022ab9259eb4aafe2f,"Fix ticket #327.
",numpy/core/src/ufuncobject.c
d79e367279555247cfd3153a7cafac0c1733673d,"Add test for ticket #302.
",numpy/core/tests/test_regression.py
1ce64f75d452492caa9bffbb36d4b3711c3e4e23,"Add test for ticket #324.
",numpy/core/tests/test_regression.py
a2e090a9dec7e51197fe5ed74998e94505802dc4,"Fix ticket #324: not returning minimum array.
",numpy/core/src/multiarraymodule.c
1c88a77c1b14297da7c4165bdf00d1f30c705f35,"Add tests for tickets #312, #322, for polynomial roots and for setting
elements in object arrays.
",numpy/core/tests/test_regression.py,numpy/lib/tests/test_polynomial.py
2c406001966f201617c463633dc1ab67d396d0c0,"F2PY G3: fixed bugs, started adding features.
",numpy/f2py/lib/main.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/py_wrap_subprogram.py
30cdb1624fe86b26b480b4c262ae1c8a24ab35d8,"Re-work flat index setting to handle integer case better for objects arrays.
",numpy/core/src/arrayobject.c
ee3d027eeb4a1b46186a1d216d38356d8e6e0a66,"Fix ticket #323 --- problem with roots all zeros and all zero coefficients.
",numpy/lib/polynomial.py
be917888687f967df612629d3b52b8c488ad3755,"Fix ticket #322
",numpy/core/records.py
310966efbfb7641a0ee91ef79b3a21c2be2c32c6,"Fix ticket #320
",numpy/core/records.py
d8459ee04cb2c53b809d45641be464096c6feaad,"Fix ticket #319.  There may still be a problem in casting from one data-type with nested fields to another.
",numpy/core/src/multiarraymodule.c
22f16b38b8086cfcef5dc86c852f88a9e777bb92,"Bug fix for DATA statement with components containing subexpressions.
",numpy/f2py/crackfortran.py
f0bfc449991703abef349b844764dc3f3abc9fef,"F2PY G3: added basic support for wrapping Fortran subprograms, scalar input only.
",numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/wrapper_base.py
73eef3a9fc78c6f047af91eb6f86b8e3b7893240,"Defined Py<Cls><bitsize>ScalarObject and Py<Cls><bitsize>ArrType_Type CPP macros
",numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ndarrayobject.h
d6abf8572792110f7638987704a230725ffea670,"Speed up broadcasting ufuncs by making sure the loop axis is the one with the smallest strides.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/old_defines.h,numpy/core/src/arrayobject.c,numpy/core/src/ufuncobject.c
97390cc85d5efbe76a66baa9837eb101a4f70f60,"Fixed typos.
",numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/wrapper_base.py
d0899e7b20c3170fa2b8a89822c7b57761d85204,"Use .view in-place of astype in rec.array when new dtype is given.
",numpy/core/records.py
99fab64c94c45f326cc34e9cc4f02b5bfb46d706,"Fix #317 typo.
",numpy/core/records.py
c6aa52df0532547ba1e046fbd65b8d0524e89c16,"F2PY G3: started subprogram support addition.
",numpy/f2py/lib/main.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/py_wrap_subprogram.py,numpy/f2py/lib/py_wrap_type.py,numpy/f2py/lib/wrapper_base.py
3a6607f4ccd87d54c8be6387cf6ee568e4bf77c0,"Fix so that rec.array copies by default.
",numpy/core/records.py
31016a0dee1512b12a56779f47bc03ac375d0736,"Fix issue #313.  Also make sure shape attribute of dtype object always returns a tuple.
",numpy/core/records.py,numpy/core/src/arrayobject.c
c76a2c4097fda804b05a713370ce077215e2ee7a,"Fix up __array_interface__ getting and depth discovery for scalars.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/lib/function_base.py
c620acddd34a07edd6f33baad0adfad6e8cf1bd5,"F2PY G3: exposed wrappers via f2py script. A working example: wrap F90 module containing derived type with scalar components.
",numpy/f2py/lib/main.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/parsefortran.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/py_wrap.py,numpy/f2py/lib/python_wrapper.py
ac93e95702a9047b774b4cdd1838c9e1b1f70739,"Fix typo.
",numpy/core/records.py
c7e811cd0f9aef43a90df12bd2daf02ac2cc144f,"Allow lists to work with rec.array using fromrecords.py.  But, tuples are the standard for records as the ndarray only allows tuples to be used for records.
",numpy/core/records.py,numpy/core/tests/test_regression.py
6cef646e900565129caf116380f75136f155c516,"Convert to arrays earlier.
",numpy/core/records.py
e1a62e06b55b1c01da1bc586d7d277b05204c03e,"experiment with iterator speed up.
",numpy/core/include/numpy/ndarrayobject.h
0934daa01a823c3511511528586de2e9238c478f,"Use sb.array to handle the array interface.
",numpy/core/records.py
5c876be793ddfee6da8bb4c0a1bd5b64bf1d5a97,"Fix bugs: uncaught error, way record data-types print, asbuffer function fixed.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
d0791f7ade3b1d6d2673c0de93d58e0a3e225b4e,"Fix ticket #308 by sending more than just ndarray to fromarray.  Also, allow conversion of array-interfacing object to recarray.  Also add the asbuffer function to multiarray (but don't expose it) which allows creating buffer objects from memory locations.  User must be sure the object holding the memory is not deallocated before the new buffer.
",numpy/core/records.py,numpy/core/src/multiarraymodule.c
d03ee64ee0c3fe6419c1266754d083983dabde33,"Fix #302 by being careful about situations where the index method is defined but the object is a sequence.
",numpy/core/src/arrayobject.c
022b06b4d628d991c8a8a294db92c0d4f93f4c90,"F2PY G3: exposing G3 to f2py script, fixed bugs, wrote source docs.
",numpy/f2py/f2py2e.py,numpy/f2py/lib/__init__.py,numpy/f2py/lib/api.py,numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/main.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/parser/base_classes.py,numpy/f2py/lib/parser/block_statements.py,numpy/f2py/lib/parser/statements.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/setup.py,numpy/f2py/lib/src/pyobj_to_Py_complex.c,numpy/f2py/setup.py
58c43785202a4fb52c79b8658afa0682ef59c54a,"Add .dylib as a valid OS X shared library extension.
",numpy/distutils/system_info.py
bd4a480813a01fcd0e963d8b5d7cc1a579fa073f,"F2PY G3: fixed bugs, added float and complex scalars support.
",numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/parser/typedecl_statements.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/src/SCALARS_IN_BITS.cpp
c3c53e6805beb164581f041a69c9f51c2740d344,"F2PY G3: Moved Fortran parser related code to subpackage parser.
",numpy/f2py/lib/analyzefortran.py,numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/parser/__init__.py,numpy/f2py/lib/parser/api.py,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/{,numpy/f2py/lib/python_wrapper.py
6c52e6fc05f89f13871b79074ea8891c11092d35,"Fix setting unicode/string arrays with 0-d arrays of type unicode and/or string.
",numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_multiarray.py
87a1a601efc59a98dfc67b2e863189b44deff4a6,"F2PY G3: wrapping nested derived types.
",numpy/f2py/lib/block_statements.py,numpy/f2py/lib/generate_pyobj_tofrom_funcs.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/src/pyobj_to_Py_complex.c,numpy/f2py/lib/src/pyobj_to_long.c,numpy/f2py/lib/src/pyobj_to_npy_longlong.c,numpy/f2py/lib/src/pyobj_to_string_len.c,numpy/f2py/lib/typedecl_statements.py,numpy/f2py/lib/wrapper_base.py
186a47573debdfb937e95974354a7ab140058b7d,"Only use the LongLong conversion if negative conversion worked.
",numpy/core/src/arraytypes.inc.src
aedd3d9f85f1c2e00c11c4f71e5a00ee6c809cca,"Allow -1 to be used on uint32 and uint64
",numpy/core/src/arraytypes.inc.src
b821b5c6c5337fdec5d108182de36facbc4ee039,"Create PyArray_HasArrayInterface macro to simplify getting an array from the array interface.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
c9eba748246a0f1d1e93c587eb4d62c185cdc20a,"Change unique1d's argument name from retindx to return_index.
",numpy/lib/arraysetops.py
5a490d046ae11869f1588fc5514c394218c71713,"Add test for ticket #298.
",numpy/core/tests/test_regression.py
feb91f47b9aec75fc94fd206090802bb665e6a5b,"Update lexsort documentation a bit to give a hint as to how to use the keys to implement primary and secondary sorting
",numpy/add_newdocs.py
1b5e91c9fbac46e3c94fee936692e5558e7eef2f,"Fix merge argsort for strings. Code was not indexing correctly into the array of strings.  Add object-detection so future addition of an object MERGE sort doesn't cause lexsort and threading to die.
",numpy/core/src/_sortmodule.c.src,numpy/core/src/multiarraymodule.c
a40b05bb4dbccea7f131cb8eda384e676284c05f,"For the MKL library, define the macro SCIPY_MKL_H
",numpy/distutils/system_info.py
0698cb7e52b7dab046b28322d37f28050257e9c0,"Python 2.5 fixes: replace int with Py_ssize_t where appropiate
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/numarray/_capi.c
f9409c5e14dc38047365b30da7d1ee2f2084fc72,"Fix documentation of fft sub-package to eliminate references to refft.
",numpy/fft/info.py
7906451af30f3c29250937863b22199cf9f42dfd,"Fix the fromfunction routine to use float as default.  Update oldnumeric and numarray compatibility modules.
",numpy/core/info.py,numpy/core/numeric.py,numpy/numarray/functions.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/misc.py
483ce064ed954b8b9235f69f06bbbcff35d5fe4d,"Don't copy arrays inside ix_
",numpy/lib/index_tricks.py
38124a012c043fb2ddc3d2eab90af4c35db619c6,"Fix printing of arrays with records so that nested arrays print as lists instead of using array syntax
",numpy/core/arrayprint.py,numpy/core/src/scalartypes.inc.src
74b68e37a478ca5d6e515196af1108e9494a01f1,"Add quotes to printing strings.
",numpy/core/arrayprint.py
92d3aafb23899c1c7f959d16c08ca3274f315223,"Fix setting string and unicode arrays so that non-string sequences are not allowed.
",numpy/core/src/arraytypes.inc.src
9cfb0c67b7c0e02afa5fae54781f5e508931231b,"Fix so that 'i4' and 'int32' are allways inserted into sctypeDict together. 
",numpy/core/numerictypes.py
306f1266a3416df1f4768f446f060e2536362047,"Allow scalars to be constructed with default values of 0.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
61fbe0e45c5e22054190b6973d7f23c1f95434e6,"Sort only once in median.
",numpy/lib/function_base.py
aaaa7aff433adc022a21599b60cfb02c0c168b5d,"Draft documentation for ndpointer.
",numpy/ctypeslib.py
c7eb19932b673ffffcf49a55d52e005ec996cdda,"Add oldtypecodes to oldnumeric.typeconv so that old Numeric character codes can be identified.
",numpy/oldnumeric/typeconv.py
25b594e5332f1f9bff3908f97bf45436b36a129b,"Fix back repr of arrays to not have quote unless flexible.
",numpy/core/numeric.py,numpy/lib/tests/test_ufunclike.py
46bd2a34e3006a5047d637543f472893e418462f,"Fix doctests for new dtype
",numpy/lib/tests/test_ufunclike.py
d0d5a9218ecb31041e9e20807ff2f4ccca0bbbfb,"Fix ticket #289 plus improve the way array data-types print and arrays represent themselves.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c
61838cf125b8308d152266f3eab2c6815377e862,"Fix Ticket #288
",numpy/core/src/arrayobject.c
6d9195dfd53fc827171f2de571c2d4049c36c610,"Fix for #291
",numpy/lib/shape_base.py
65f0d8a7ae024b595a019043945ca46028998c69,"Add test for default axis in method and functions.
",numpy/core/tests/test_regression.py
dff8d9e31223e31a0544ee743b7be80f47ce9ac3,"Fix the Python2.5-compatibility macros so that conflicts with other libraries are avoided.
",numpy/core/include/numpy/ndarrayobject.h
12467b6106f05bc08412f584f9331cb4374dbde1,"Fix .take() default-axis argument bug.
",numpy/core/src/arraymethods.c
310b6d0be5f3277a4bb233564e2b476b676ad646,"Switch order of .put arguments to match the function call.  Eliminate .putmask as a method and make it only a function.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/lib/shape_base.py,numpy/oldnumeric/misc.py
98940062227b324d22dc2b81b9a4814dd9acfc57,"Refer to ""length of a"" instead of ""a"" in fftpack docstrings.
",numpy/fft/fftpack.py
5453138a56c0b78ebf6f210857fed7357f41dfa0,"Fix docstring for delete.
",numpy/lib/function_base.py
4c856fa57b5dfd387f83c308a8f3933dd5792012,"Add Object-type to maximum and minimum ufuncs.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
b07ee45ae38c2102dbd373894fe5389348058870,"Small changes of searchsorted error messages.
",numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
d0b67d883c3eed3ed45721b35910935c36cbeabf,"Make a PyArray_SearchsideConverter for the side keyword in searchsorted.
Rename some searchsorted variables with more descriptive names.
Do some documentation markup in case we ever run doxygen over the source.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
3e47b2420c722cbb61250d816424617603cbc718,"Fix problem with alter_code1.py
",numpy/numarray/alter_code1.py,numpy/oldnumeric/alter_code1.py
b1d84f913bac076fae745e09d77314dc5a3b6df0,"Next numpy release should be 1.0
",numpy/version.py
b63052506f53bf7eff119e3468de49777ac2bf1e,"Up version number on trunk.
",numpy/version.py
7a8ebd261c37307176bbad175ca60e99aa53fabf,"Remove sorted from unique1d.  Add testall to test if level > 10.  Remove compiler warning.
",numpy/__init__.py,numpy/core/src/multiarraymodule.c,numpy/lib/arraysetops.py
289b1c6c44704de514659452ddb66c3d2e1656ce,"Only alter data-type of integer and bool types on reduce-like functions for 'add' and 'multiply'
",numpy/core/src/ufuncobject.c
1f4b85881b127b879241f2dafb88483c3c20bdd4,"Remove dft from build.
",numpy/setup.py
1f0508e85e320c486e88bbca329a70bcd467cdc1,"Remove UserArray.py and dft sub-package.
",numpy/dft/__init__.py,numpy/lib/UserArray.py
b8d9549bdd7d8492108d655a17513a03600a80b0,"Rework logic a bit for clean-up
",numpy/core/src/arraymethods.c
2a99ea81a0a42500d27a76419ee8d12f08f54fd6,"Fix mean, std, and var methods so that they reduce over double data-type with integer inputs.
",numpy/core/src/arraymethods.c
ee7a0be0eac7b3e02219ea6a56d2885cb8524ca8,"oldnumeric.argmin should use numpy.argmin
",numpy/oldnumeric/functions.py
2d9f62812237eba33a462630929d6f6ebbd29895,"Fix ticket #284
",numpy/add_newdocs.py,numpy/core/fromnumeric.py
60d18d232dde5317b0ba84893339c6e0c316f596,"Fixed compiler errors when using Python 2.5rc.
",numpy/core/src/arrayobject.c
f54a116f84b82b4679dd803728d2fa08491ea613,"Add one more import possibility.
",numpy/numarray/alter_code1.py,numpy/oldnumeric/alter_code1.py
5be3af7f9288f503fc7fe08c97d53c920f235594,"Add convertsrc to alter_code1 and clean it up so it doesn't always write the .orig file
",numpy/numarray/alter_code1.py,numpy/oldnumeric/alter_code1.py
b18173d63ce02ab0f978178518173da534ce052b,"Add tests to arraysetops for empty arrays.
",numpy/lib/tests/test_arraysetops.py
bdadc1ba29ea2852a31233aa521b59c7e223f31f,"Support empty arrays in setxor1d and setdiff1d.
",numpy/lib/arraysetops.py
06db31eac5bf957778c5b95f813b4cd0d86ed012,"Fix unique1d for empty sets. Closes r208.
",numpy/lib/arraysetops.py
371f8c6a1df8b2d244afd50d03e492d79a1372fe,"Add ediff1d support for empty arrays.
Fix ediff1d for to_begin or to_end = 0.
Allow insert to operate on empty arrays.
",numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/tests/test_arraysetops.py
29cb5ffae98ad43a3e7ebada8dc77ce0a4045529,"Add tests for recent void byteswap problem.
",numpy/core/tests/test_regression.py
ab1d154233006e561157ab8c89ab02aafb6c1997,"Fix copyswap for VOID arrays when src is NULL
",numpy/core/src/arraytypes.inc.src
adb82edb90a53825b785b11f1e95f2bcda98e456,"Rework fix to #282
",numpy/core/src/multiarraymodule.c
79b158bad6f2b7ed7bb7cd8786f03b73d1fb3c5a,"Fixed #282
",numpy/core/src/multiarraymodule.c
a035984ce2d5e8dd849f7da889ccc91d9ba865d4,"Fix #280
",numpy/core/src/ufuncobject.c
eff272cf3e4223a31917df07de4479abe83fe7dc,"Fix so that astype and transpose return 0-d arrays if given 0-d arrays.
",numpy/core/src/arraymethods.c
ab485b5413da403ae2d7d4c55982eb7dbe49344a,"Fixed typos, started impl. derived type support.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/typedecl_statements.py
292d5d9446588fc2c9493a7640d4fd9a07bbf195,"Fix typo.
",numpy/core/src/arrayobject.c
562be02b6f5c3715ddb37b0ee9d4d7a6559bcef4,"Add test for recent fix.
",numpy/core/tests/test_regression.py
ae85925a0099ff9e814be8cc32fcf96ad230d602,"Fix type-coercion for void-type arrays.
",numpy/core/src/arrayobject.c
cf56f9470be546d5b80bbad4495623b056df8e2f,"Added Fortran Standard reference manual.
",numpy/f2py/lib/research/04-007.pdf
617b46e97017ca4614d04090db5c7d999d1be422,"4G f2py: first working example.
",numpy/f2py/lib/analyzefortran.py,numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/doc.txt,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/python_wrapper.py,numpy/f2py/lib/research/pointers/pointer_size.c,numpy/f2py/lib/research/pointers/settypeinfo.f90,numpy/f2py/lib/src/F_FUNC.cpp,numpy/f2py/lib/src/pyobj_to_Py_complex.c,numpy/f2py/lib/src/pyobj_to_double.c,numpy/f2py/lib/src/pyobj_to_long.c,numpy/f2py/lib/src/pyobj_to_npy_longlong.c,numpy/f2py/lib/src/pyobj_to_string_len.c,numpy/f2py/lib/statements.py,numpy/f2py/lib/typedecl_statements.py,numpy/f2py/lib/utils.py
8b6db6e885dec95dda7bbe2001d95bdee63e6cf1,"Fix ticket #188 by returning the name of the dtype objects for data-type objects without fields or sub-arrays that are in correct byte-order
",numpy/core/src/arrayobject.c,numpy/lib/twodim_base.py,numpy/lib/utils.py,numpy/numarray/functions.py
f74f1d14f0768650a7dd5327944ddcc82f0d892d,"Rename to histogramdd as original author said.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
972ae975594790108be7bd3661d0d0be007e048c,"Add rollaxis command and fix cross function
",numpy/core/numeric.py
bef75b3f149af546a4aa592bee9a1acecc267898,"Small code re-org in _get_svn_revision
",numpy/distutils/misc_util.py
123663789912181b190cd2fa87ea10316c75219b,"Fix when svnversion is not present.
",numpy/distutils/misc_util.py
843327063a597e72376beb0dad5381a94b300df4,"Fix subversion number getting for 1.4 clients.  Also works for pre 1.4 clients.
",numpy/distutils/misc_util.py
69de9805cc4e0c7bd8d3dee414fb41e15792ed6f,"Clean up info(ndarray)
",numpy/lib/utils.py
9ac3b0e5c2e181873221ff0160b882772ea9d435,"Add 'a' to sctypeDict. Fixes #279
",numpy/core/numerictypes.py
3cf31df5d76acf7ff31c23d6a387824fce68e9df,"Fix .descr of aligned structures
",numpy/core/_internal.py
a761817d410c96e93a413f6ad98de17cb20fbd6b,"Add DescrAlignConverter
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
b3a5ff58124174ff9beab9118039b16db8a6b83d,"Don't raise errors when setting with a zero-sized array, just exit
",numpy/core/src/arrayobject.c
ac9c4730ca4650d9cc1ca97323a1b499dab970b1,"Fix numarray.info function
",numpy/numarray/functions.py,numpy/numarray/numerictypes.py
2259299c824b866df8c1ddcf2f7f6ba14930abbd,"Fix problem with .item(n) for 1-d case.
",numpy/core/src/arraymethods.c
b2d51134f0720795c1885ca6ef362360509eb43e,"Eliminate unnecessary check.
",numpy/core/src/arrayobject.c
7633701e434c9283b817d0583a7445c5e90cfc0e,"Fix a.flat = []
",numpy/core/src/arrayobject.c
0bb5f4ce30db8dcf4d40e19cca7c708330c87f25,"ndpointer will still work even without ctypes installed.
",numpy/ctypeslib.py
5a4affaf610cf183f50dfe63af1c35d210079385,"Don't deprecate c_.  Use it as short-hand for a common case
",numpy/lib/index_tricks.py
2ef6aa9fd13f335036fd7445f408eb0c334b9e46,"Add a few more defined checks for FreeBSD and NetBSD
",numpy/core/include/numpy/ufuncobject.h
41f45049e37b8ef040e32a3a54c4a3090d497a8c,"Fix transpose implementation to work with higher dimensional arrays as well
",numpy/lib/index_tricks.py
d6ce2d7dc3a62b45272779d771c86338cf4f2c56,"Fix up r_ so you can specify the minimum number of dimensions to force arrays to and allow alteration of the concatenation axis and whether or not to transpose 1d arrays
",numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/tests/test_index_tricks.py
4e76e00cc5afceaf70fe8d655cf59d4a9fb85a0a,"Add histogramnd and fix histogram2d
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py,numpy/oldnumeric/functions.py
6359dccac9d940dc3291de360b4cb377183e1b9d,"Fix column-stack to not transpose 2-d inputs.  Fix iscomplex for strings.  Add deprecation warning for c_
",numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/lib/type_check.py
aa27298288961201372528c1391bc73348f4efb8,"Fix random.poisson(0) to return 0 (#229)
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/tests/test_defmatrix.py,numpy/random/mtrand/distributions.c,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
795e498cd628ceb407d03c171d8659917d71f893,"Add itemset method to parallel item method
",numpy/core/ma.py,numpy/core/src/arraymethods.c,numpy/core/src/scalartypes.inc.src
27775e944be6e089bc6a3e58e9e97d58b1079067,"Allow .item(<index>) for fast selection of Python scalars from a numpy array.  Re-name a few confusing constants in ufuncobject.c
",numpy/core/src/arraymethods.c,numpy/core/src/ufuncobject.c
4fa99554f4c2e2fe40a684b2a7d5b7a7c418d8d3,"Update type comparison to be based on equivalence classes and safe casting defining the ordering.
",numpy/core/src/ufuncobject.c
c816ddc5483821a8646a341ea113f65dddf8b5b4,"Add some comments about grabbing the CObject implementation.
",numpy/core/src/ufuncobject.c
c4608ed1c831143e63c5df338c1c64acfa8a5343,"Improve the getting and setting of ufunc loops for user-defined types. 
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
6686ee2a647f71d68cc6c85173ec7d701f366293,"Pass the converted array arguments instead of the scalars.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
b473660ffab11a7b90c96cc5f2473694d6249761,"Fix ReplaceLoopBySignature.
",numpy/core/src/ufuncobject.c
14fbb3bdfa9bcbd0371fcdaf88a8a4c095d3b366,"Fix functions in oldnumeric.mlab
",numpy/oldnumeric/mlab.py
9109c6af6b5adba53ac5fd9161dbfa2e04c52a04,"Fix #198
",numpy/distutils/ccompiler.py
8f6519144f53c8de74f54d7774397e4bbe84663d,"Add analyze fortran hooks.
",numpy/f2py/lib/analyzefortran.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/research/rat/rational.f90,numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py,numpy/f2py/lib/typedecl_statements.py
4963af21d20a3161d17f93b187b49cfdaa3664cd,"Add ticket for ticket #243.
",numpy/core/tests/test_regression.py
e650de170522fa0f0478f33c51ad0ace9fa50c6e,"Tests for tickets #246 and #251.
",numpy/core/tests/test_regression.py
2173026070a44e36d57aea877d98ea05fccd7355,"Tests for tickets #254 and #270.
",numpy/core/tests/test_regression.py
9e10fed57df87e3a934470df2487583382af020e,"Add test for ticket #271.
",numpy/core/tests/test_regression.py
60417381250675c9f40d0153a5c43e0751a40b89,"Add unit test for ticket #273.
",numpy/core/tests/test_regression.py
aa2c09a7ddb8c7e7eb1170edc24ec274aaa636b1,"Fix invalid keyword argument error in reshape method.
",numpy/core/src/arraymethods.c
49f41ff05c4ed9442539debe1e612a2ea557e122,"Documentation tweaks for searchsorted and round.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py
8c2697178d1b7332bc300475f4d7e6b86bb6c9e8,"Whitespace change in alter_code1.py
",numpy/numarray/alter_code1.py
2b6af2c5e95497ba9f7ea23eb9aef9f3bfc22aa2,"Add c_intp to ctypeslib.  Add converttree to alter_code functions.  Fix ctypeslib when ctypes is not available.
",numpy/core/_internal.py,numpy/ctypeslib.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/oldnumeric/fix_default_axis.py
c4b98bdd9b0046494c1f972912137b4a7e5c6874,"More code cleanup
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
f34278fc690fa577523eadcef70dc378bff1dbb7,"Code clean-up
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
bc122407402fd8842753b72c2edb7ea21bc6c49f,"Fix segfault in BroadcastToShape
",numpy/core/src/arrayobject.c
61c3159dca9b35eb3e0ad6b7724900112c609123,"Fix memory leak in corner case of lexsort.
",numpy/core/src/multiarraymodule.c
1072ff32e979e134737a4f9374f92af36644e8ce,"Break up more of the documentation in add_newdocs
",numpy/add_newdocs.py
fc61d8a7371a2badfc84313482fe482dac4eb7c6,"Docstring for tostring and small formatting change to PyArray_SearchSorted.
",numpy/add_newdocs.py,numpy/core/src/multiarraymodule.c
341e0beb732f769887c7bb37fe01a5170602ee0a,"Fix dimension error for object arrays.
",numpy/core/src/arrayobject.c
1fcb79afad43182ce548c39fea4b5c4790f5958f,"Optimize fftfreq.
",numpy/fft/helper.py
802450e805da6e18538e56e41fcec1c757ff7f1a,"Fixes for Python2.5
",numpy/core/src/arrayobject.c
887544fd8cf38fbaacdcfbb3a49362ef519604f3,"Bump up version number to rc1
",numpy/version.py
ae4e6ce449c06b25806b499ff2384d7335583570,"Add more docs to function fromfile()
",numpy/add_newdocs.py
2e6688521aabe7a03fd980e226f7088abb71a307,"Document the method tofile()
",numpy/add_newdocs.py
9ae4fd02510b4aef8423896edca66ffd5412f3a8,"Fix ticket #271 and turn default printing of warnings off
",numpy/_import_tools.py,numpy/core/ma.py
9c736b3941cf35d395524b0416deb4a462ef4a9b,"Fix object array creation to revert to previous behavior
",numpy/core/src/arrayobject.c,numpy/core/tests/test_regression.py
0982d6e124e0728e227bda735a19c359900fcc4a,"Update ndarray.round docs to match Travis' mods
",numpy/add_newdocs.py
33a5ed76adf630b4ad0f90d02a1dc73d6f086ef8,"Fix rounding of integers with decimal < 0
",numpy/__init__.py,numpy/core/code_generators/generate_umath.py,numpy/core/fromnumeric.py,numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src
b1e4fe0ae77bc204c3ecbe85e606f846f42d189a,"Add Index checking for integer conversion and Python 2.5
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
cd71708a570b7eb770e54ba08ccbf7b414b26201,"Add documentation to round and around to clear up confusion from numpy's choice
to round to even.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py
2d72b34fb356c1f5440218123c06efd534555303,"More document tweaks for searchsorted.
",numpy/add_newdocs.py
c268f1d89bbf826e69bafabbf0029b7847ca59a4,"Small fix to the insert document string.
Cleanup whitespace.
",numpy/lib/function_base.py
581f6b13baac8fecbfd3d3654e49ff2aa85eeef4,"Change ndarray.searchsorted keyword ""value"" to ""keys"".
Tweak documentation of searchsorted.
Indent many docstrings in add_newdocs.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c
6f31fbc4da05ddaec34fde5cd455b5028e60b355,"Add new keyword <side> to the searchsorted method and function.
Add documentation thereto.
Cleanup whitespace.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
92abb2700078ae4a4e1da4df8a075e3134a86216,"Oops, previous commit was accidental and had a temporary mod I was using for
testing. Remove that mod. Meanwhile, have added a local_search_right function.
",numpy/core/src/multiarraymodule.c
e9b1afbc48f3653bddc1a3fb7ad6dc4d7b0ae877,"In multiarray.c rename function local_where to local_search_left.
",numpy/core/src/multiarraymodule.c
639077baee65cb0e34bec396b9c053aa796ea53d,"In multiarray.c rename function local_where to local_search_left.
",numpy/core/src/multiarraymodule.c
f4c25ba96601a2b22db959462fbed0e4f7206a97,"Fix default type of empty array.  Fix test for strtod on Python 2.3
",numpy/core/setup.py,numpy/core/src/arrayobject.c
8a53914ded66488c093c48d20a29d475c1a3f79d,"Fix so that VOID arrays are not found during a search but instead object arrays.
",numpy/core/include/numpy/ndarrayobject.h,numpy/core/src/arrayobject.c
f21c08b6b4eed501a54bcb4522877ce716726e75,"Add a module/script to fix the default axis issue for code already converted to NumPy
",numpy/oldnumeric/fix_default_axis.py
63326185c04be2795a7a33028d427e9c8c31c900,"Clean-up some un-needed default axes. Fix default axes of ma.sum and ma.product
",numpy/core/ma.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/fft/fftpack.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/shape_base.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/numarray/functions.py,numpy/oldnumeric/random_array.py
064c8eb43637e920f6019215b00ef1593d74b0c1,"Finish moving comments from arraymethods to add_newdocs.
Replace hardcoded 1 by METH_VARARGS in arraymethods.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c
19a94794c106aef993bb2af6a7ea11950e362d0d,"Fix problem with randn in matlib.  Acutally add min, max, round, abs to the numpy name-space without over-writing builtins on from numpy import *
",numpy/__init__.py,numpy/core/__init__.py,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/matlib.py
775a47de7e2f4b039592d614e7ac3fda464975a8,"Add axis arguments to various functions so as not to rely on the defaults.
",numpy/add_newdocs.py,numpy/core/ma.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_numeric.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/fft/fftpack.py,numpy/lib/arraysetops.py,numpy/lib/function_base.py,numpy/lib/shape_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/utils.py,numpy/linalg/linalg.py,numpy/numarray/functions.py,numpy/oldnumeric/random_array.py,numpy/oldnumeric/rng_stats.py
ce7a968a7b5cdb328ca1ea222211ad9cd8e506ad,"Restore un-needed axis arguments
",numpy/lib/arraysetops.py,numpy/lib/shape_base.py
936b14b2363d0b57aaa109b255d332d222704640,"Add axis argument to usages of take
",numpy/lib/arraysetops.py,numpy/lib/shape_base.py
7b9df715cabe56f14d09a97b7b4b2bf524a3706e,"Move more documentation from arraymethods to add_newdocs.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c
762dacd686faa83c7de12c115e0a5874eef0481e,"Add float, int, etc. to numpy name-space.  Flesh out tensordot.  Fix-up getcharbuf to allow all 8-bit types to be returned as a charbuf.
",numpy/__init__.py,numpy/core/numeric.py,numpy/core/src/arrayobject.c
8d80b96d2aa1f498b80fc19b296ff881185cd363,"Fix flags on numpy array scalars for array interface.
",numpy/core/src/scalartypes.inc.src
527937eb3df319c23a9ccfe26558739acec14e8c,"Fix sundry errors.
",numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/function_base.py
0f23250d0f7f84f1c69ccd85d13338714343d4c1,"Merge changes mistakenly added to 1.0b4 tag to the main trunk
",numpy/core/numeric.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/oldnumeric/misc.py
59286e9133cfc1d71b92313e0b0443e31f03e8ce,"Break up the documentation of ndarray attributes into separate calls.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c
4dcd244210909cc81b15cc43484f13fed79bcb62,"Move most of the remaining documentation from arraymethods to add_newdocs.
The formatting is still very crude and the docs need expansion.
",numpy/add_newdocs.py,numpy/core/src/arraymethods.c
c5f1772b572e9e31ec63c5e3da2a1c3f1c71606d,"Move the documentation of the sort, argsort, and searchsorted methods into
add_newdocs. Rewrite the documentation of sort and argsort. Replace the
documentation of these functions in fromnumeric with the new documentation.
",numpy/add_newdocs.py,numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c
9c4eb86a099b83fdc9d6b6db95a45cb695d4786c,"Up version of trunk.
",numpy/version.py
d42af63df8fbc4c275aa0b7e017dc153b39158ce,"Fixes to the deletefrom, insertinto, functions...
",numpy/lib/function_base.py
307b1cf34928495500aec4650e8dd6497fdc205c,"Fix how deletefrom and insertinto handle objects with __array_wrap__ defined.
",numpy/lib/function_base.py
5dd549836b872e7c65f2d6b69e303f953de0f488,"Fix broadcast-copy on fancy set-item.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/lib/function_base.py
c37cfa5b256d257a339b30334392c93ae8b7d78a,"Add deletefrom, insertinto, and appendonto
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/lib/function_base.py
28e44d3bbe831956a10064de2b76298316dc7cf5,"Fix a problem with __all__ not being copied in oldnumeric.
",numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/oldnumeric.h,numpy/oldnumeric/random_array.py,numpy/oldnumeric/user_array.py
1bc555d8e56339777bcb31cc323e619c00cfff51,"Add more import_array possibilities so it can be used inside a function.
",numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numpy/oldnumeric.h
3458c5050ba43b6d4450fbbd0319aa0ba2d06d01,"Revert import_array so that it doesn't return anything
",numpy/core/code_generators/generate_array_api.py
7dd9a565c2fc24b49b1bb0193a9e826294c1f876,"Added a delete function
",numpy/lib/function_base.py
b4e76e3499cb660e6d8e64688bab66c668d0d6c9,"Fix coercion in multiarray to be like ufunc coercion.
",numpy/core/src/arrayobject.c
93d2d8f20cb9904f33384a0c26bc082b27ecd1eb,"Fix warning...
",numpy/numarray/_capi.c
f769cefd2533d5d63adb2b229364209450c80bc4,"Don't use LONGJMP on windows.
",numpy/core/setup.py
2266ec69c890a1be820f1c519ffa79e5372dd084,"Add allow threads code
",numpy/core/src/multiarraymodule.c
a15155fed63c2c032197eb689931e731944ff090,"Move signal handler and global variable getter to C-API
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/src/multiarraymodule.c
960e67401202793e22f27742fe6ef8b7b1e38433,"Fix NA_NewAllFromBuffer when shape is given
",numpy/numarray/_capi.c
63b2e7394465c5d165821f5188b87b7740dc978c,"Add an example of using PyOS_InterruptOccurred() to the test_interuppt function.
",numpy/core/src/multiarraymodule.c
060b124888953d302d8611c459f978ef9201ae96,"update g95 version pattern
",numpy/distutils/fcompiler/g95.py
0b3285cf94f6dbd73c01f9d5678c2ab8a79d7968,"Also include signal.h
",numpy/core/include/numpy/npy_interrupt.h
dafda7f0fbcd583bfbcfe04084783e70ffd6e541,"Make sure test_interrupt ends at some point.
",numpy/core/src/multiarraymodule.c
090cb0a1ad27a98584657c0803d05b871d21e903,"Remove automatic setting of tp_free and tp_hash when it could be a Python function
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
d9650b61184db94ce83187fb1b4be2de4bb5f2b8,"Fixed issues with ticket #267
",numpy/core/include/numpy/npy_interrupt.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
ca059fbcebb498f68ccf5eecd692b4c90a6b4bb7,"Add rudimentary interrupt handliNG.  Add max, min, round, abs to the numpy space.
",numpy/core/code_generators/generate_array_api.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
9ab77ec1e9fdd2ebe5dfe2eccd7ad129189ea076,"add .abs() as a method on the array object
",numpy/core/ma.py,numpy/core/src/arraymethods.c
eb334fc4722b27cdad024784dc3246c80febfb35,"Move complex multiply and divide from the generic interface to the specific interface --- saves about 10% speed increase.
",numpy/core/code_generators/generate_umath.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/npy_interrupt.h,numpy/core/src/umathmodule.c.src
6bda06633124354dbd0e85caac0b70fed2ddd0ab,"Fix a formatting bug in CAPI.txt
",numpy/doc/CAPI.txt
877df472355e1953c4437f1f6c9bff8acab15658,"Fix copyswapn for complex data-types
",numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_regression.py
548412cf07237e1f6578f0754398d3318d60fed6,"Fix real and imag attributes for byte-swapped arrays. Fixes ticket #265
",numpy/core/src/arrayobject.c
7a9ac3e5546a5d21487fe8569cfe56ecd1c86d7c,"Fix silly version number
",numpy/version.py
d73e71e413eae0a89006e05e2f78bf5fcfc6b8a7,"Make trunk 1.0b4.dev release
",numpy/version.py
52bb92724e0bb023544a3b68a16d69bb0c76d058,"Fix shape attributes of data-types with no shape
",numpy/core/src/arrayobject.c
38fb6d0ed7881d4e4c28d242f9017e500cf34f20,"Re-factor fix to linspace
",numpy/lib/function_base.py
973779460434e0a26e0f0e5c7dd566cf6a47c5c5,"Remove usage of FatalError and fix linspace to end at stop if endpoint is True
",numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/src/ufuncobject.c,numpy/f2py/rules.py,numpy/lib/function_base.py,numpy/numarray/numpy/libnumarray.h
77732fafe67896acd72c96b237154051f85732df,"Fix missing #endif
",numpy/core/include/numpy/arrayobject.h
35b2e72846667f7a5630eaf4aeef905164ae6ab7,"Include interrupt stub.
",numpy/core/include/numpy/npy_interrupt.h
a7b84416c876c035d811ef705da3e26309b1709e,"Add simple function to replace Ufunc
",numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/ufuncobject.c
b9ce9390471f4f0989c6e4605d04ef0e5d1f5494,"Fix white-space issues.
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ndarrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/oldnumeric.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numerictypes.py,numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
262dff23c6053efb7c28ca4dc7ccb294b7e25a4d,"Fix missing numeric type issues.
",numpy/core/numerictypes.py
12d22f9337b3e24cccab694cd9caa73d73d1a92f,"Fix missing bool8
",numpy/core/numerictypes.py
a601525837bd2357c7a428942add2907c623f91a,"Fix logic for using THREADS
",numpy/core/setup.py
6e809f2fc0e4101951beb53c6442876ce79656e3,"Add ndarrayobject.h file and fix ticket #255
",numpy/core/include/numpy/ndarrayobject.h
543e764f6f0b05c38f460aeae9036dc2e6be2f2b,"Fix ticket #254 and allow defining NPY_NO_PREFIX instead of including 'noprefix.h'
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/ma.py
44b8093162207cf82143b58d9cdf5a2af7ed0731,"Fix ticket #252
",numpy/oldnumeric/alter_code1.py
647505516a3adb0c30d84fa2219cf33870cb0d75,"Alter the naming of un-specified fields to start at 0
",numpy/core/src/multiarraymodule.c
a764a203bbe4b26c25457f86ae902e248998bda6,"Fix mismatch between tp_name and pickle name so that pickles of scalar types will work.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
9e244f2d5ab9b2a92a46bf8d41daed3258c0f7fb,"Fix ambiguity of list data-type objects.  Lists are always interpeted as array_descriptor format.  Use a comma-separated string for the other approach.  Add 'int', 'float', etc. to the sctypeDict so they can be interpreted in strings.
",numpy/core/_internal.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
bd9dc9ec6a44ad339e6ad8ac7e0b849bcbb496b7,"Allow titles to be used as 'meta-data'
",numpy/core/src/multiarraymodule.c
9b0c090eaa73c7646dbc163cf2ff85a59e2109dc,"Fix error in oldnumeric.empty
",numpy/oldnumeric/functions.py
680266e774c707862015244c86e22f864197530b,"[distutils-rework] look in environment for more things (programs, flags) for Fortran compiler
",command/config_compiler.py,fcompiler/__init__.py
fcee1ad856089a7ecb7b6865d280c0273dacb638,"import ctypeslib on numpy load and change name from ctypes_load_library to load_library
",numpy/__init__.py,numpy/ctypeslib.py
9a0c3ebd59782e352b3fc6357577751065ff691f,"Test for lexsort.
",numpy/core/tests/test_regression.py
18b1f90e69d93edd96a7cc946e5ea10389a98d46,"Handle 0-d case in IterAllButAxis
",numpy/core/src/arrayobject.c
325aad6d001b486b3664ac48f117b32863da66fc,"Fix-up issubdtype to be more useful
",numpy/lib/utils.py
5d9449f721b3a2ab6dceeabd23e9f50348c4282a,"Add a test function to the ctypeslib module.
",numpy/ctypeslib.py
f77587b2cd9091a99a31bb0d5f99c57cc077aa8e,"Fix Python 2.5 compatibility to work with new b3 release
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/ctypeslib.py,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py,numpy/setup.py,numpy/testing/numpytest.py,numpy/{lib/tests/test_utils.py
06acb9555bf64997423b124620fb469cab24cb2b,"Move ctypes-related functions out of top-level
",numpy/ctypeslib.py,numpy/lib/utils.py
c347f572c0d1dbd4f38c5cce861bccaa7aaa2ccd,"Remove strnlen and fix unicode copy and strip
",numpy/core/src/arrayobject.c
c3fc219b92e76a169b84824a7f56287208e0deb1,"Check for return value in linalg.det
",numpy/linalg/linalg.py
583673340f922a616812a88db27e44358f338b70,"Fix == --> = error in ufuncobject.c
",numpy/core/src/ufuncobject.c
a06ddf3e22ee65fe4009c8f0f304d4b26143e600,"Fix ndpointer and add tests from ticket #245
",numpy/lib/tests/test_utils.py,numpy/lib/utils.py
c70b3c6fe0e073fc70eb8b424c30ca6c5c01ea04,"Strip characters from chararrays during comparision
",numpy/core/defchararray.py,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
779dc154b799a6660f7f60ef50c09fc445329999,"Update version to 1.0b3
",numpy/version.py
7b50608412dc41f79984aca28abd3019ac513394,"Remove un-needed functions.
",numpy/oldnumeric/mlab.py
9ad90f5e7264e1f1fd9ee38668c5b1e19982e9da,"Restore numpy.oldnumeric.mlab.cov to MLab.cov behavior
",numpy/oldnumeric/mlab.py
7aa30aee6bae9a2c28539b06331225efbd3f5370,"datatype --> dtype in ndpointer and fix logic of from_param checks
",numpy/lib/utils.py
7168ea12f749508630f83cfc5e39f0a6caf13d84,"Allow for type-less ndpointer.
",numpy/lib/utils.py
3fa71a7122f1a9379b31a35a9f3da9b4f902299b,"Improve ndpointer to allow shape and flags checking as well.
",numpy/lib/utils.py
eee00f8f7e15592a048c8b841aef9ea81faa0fda,"Remove _as_parameter_ attribute from arrays and add it to the ctypes object.  Create an ndpointer class factory to return classes that check for specific array types.  These can be used in argtypes list to ctypes functions.
",numpy/core/_internal.py,numpy/core/src/arrayobject.c,numpy/lib/utils.py
8e24ef871ee8a58ae65d4d59d8ac916a48568c56,"Fix ticket #243
",numpy/core/src/multiarraymodule.c
01a0309eca710b4128df2c9b5ce3a6905281df4b,"Change default axis argument of average and several masked array functions. Move old behaviors to compatibility layer.
",numpy/core/ma.py,numpy/core/tests/test_ma.py,numpy/lib/function_base.py,numpy/numarray/functions.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/misc.py
9584e277a057c490606cd8abb9100962f4676070,"Minor change in test for ticket #239.
",numpy/core/tests/test_regression.py
747579e371dc1515d76df0a10f474f58786ebe22,"Add test for object array creation.
",numpy/core/tests/test_regression.py
937013b35e0483ce82c1b90fb8416ab9188b1ed3,"numpy.core.setup: remove forgotten kws_args
",numpy/core/setup.py
26d3328c64bc8437f37b49fcc4ed3c7d5cfa7e97,"Some fixes to array interface on Numpy side --- make sure descr pointer is NULL if not used and XDECREF it on interface free.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
ec2a036800c2c0867789684c188f25f6bacecc73,"Check for errors when casting from non-number types.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
5a04bc9ae2e8b379b6b03b76e465ad64876e197d,"Allow .astype method to work on data-types with fields.
",numpy/core/src/arraymethods.c
59a421dba03c127672e13be07bbbdb81e72f1188,"Rework meaning of isnative so it takes into account the fields. 
",numpy/core/src/arrayobject.c
cceb25c8c4b0d7c35d2629c9a8004abb8fda9574,"Fix record class so that it returns chararrays and record arrays as needed as well.
",numpy/core/records.py
b963f883d4db71676ee9be260f63f38f6aead8e6,"Fix silly mistake in chararray.
",numpy/core/defchararray.py
6628b4156a2a7ee74cf284cbdb765dc5a06ddbc2,"Finish adding the rest of numarray compatibility
",numpy/numarray/fft.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/random_array.py
e74b65af13735872f42adc1553ada2479d7dd11f,"Fix ticket #240
",numpy/core/src/arraytypes.inc.src
2c7b4a52edb7ae94ca063edc7177b55c5fc3c059,"Add qr decomposition to linalg
",numpy/linalg/lapack_lite/wrapped_routines,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py,numpy/numarray/fft.py,numpy/numarray/linear_algebra.py,numpy/numarray/ma.py,numpy/numarray/matrix.py,numpy/numarray/mlab.py,numpy/numarray/random_array.py
7be6aec11a977bfd622f69f0124952e3d3f72157,"The code generators for the API now create a .txt file (in ReST format)
with the API functions and the documentation comment from the source.
Currently, this is put in the header file directory
(`src.<platform>/numpy/core/include` in the `build` directory).
Also fixed up dependency checking: API changes should force a rebuild
of all the C extensions using the API.
",numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/setup.py
056a264e3445674172d5dc44a89d28a1c1891312,"Finished up numpy.numarray.alter_code1
",README.txt,numpy/numarray/alter_code1.py,numpy/numarray/alter_code2.py,numpy/numarray/functions.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py
7451ebe97776507e769f2bf8f5f448aaa4c43305,"Fix ticket #239
",numpy/core/src/arrayobject.c
a9314ac69c102f5e93a1ff647aa5943e8545433d,"fix more argument lists for ma.py --- output arrays are ignored for masked arrays
",numpy/core/ma.py
123a4350fcb303622a6a69d241385d1068cc8cac,"Don't use masked output values for output array
",numpy/core/ma.py
c261b1f8fc16a0001d90fd3e024d2fd13f28ade1,"

More fixes to masked array support of output arrays. 
",numpy/core/fromnumeric.py,numpy/core/ma.py,numpy/lib/utils.py
a085eeb1a16daa01645afaa151225ab4ae66f240,"Change name of function -- no re-compile necessary.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
c6f48c8a03c438da6e2d400752eff702d1234cfc,"Add output arguments to a few more functions for consistency
",numpy/core/blasdot/_dotblas.c,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c,numpy/numarray/functions.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/misc.py
b772c977e5d4d71c78919ef941858ad438ee4986,"Update C-API to add features needed for numarray compatibility.  Output argument added for several functions and clipmode argument added for a few others.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/numeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/numarray/__init__.py,numpy/numarray/compat.py,numpy/numarray/functions.py,numpy/numarray/numerictypes.py,numpy/numarray/session.py,numpy/numarray/ufuncs.py
4b1569e2208baf36a5ebd0de0877946bd86b2a38,"Add unit-test for recent comma-string updates
",numpy/core/tests/test_numerictypes.py
8959e33dfc7c2eef00cfdca74d3b750675cfc79d,"Fix byte-order problems in comma-string formats and size-specified fields.
",numpy/core/_internal.py,numpy/core/src/multiarraymodule.c
217ae0e1df7846bb902a0383c77af26c0c7993a0,"fix #234: IntelVisualFCompiler is broken
",numpy/distutils/fcompiler/intel.py
417214841d130b0eead0f17444cf47229827548c,"Add bitwise_not to numpy
",numpy/core/numeric.py
2322210c0395765e93c89f79353522f75c8a6a19,"Fix numarray compatibility layer so it at least imports.  It's not finished yet, but some functionality is there.
",numpy/numarray/functions.py,numpy/numarray/ufuncs.py
5e385c922b18cb35fc02f244bc59e9cdf96e9f6c,"Fix import problem
",numpy/numarray/functions.py
3e3dd665d89496da053f76f120d504e9f1bf1699,"Add numarray compatibility.
",numpy/core/src/multiarraymodule.c,numpy/numarray/__init__.py,numpy/numarray/alter_code1.py,numpy/numarray/compat.py,numpy/numarray/functions.py,numpy/numarray/numclass.py,numpy/numarray/numerictypes.py,numpy/numarray/ufuncs.py
50a50441a148a9ea3fbc1629e065d88a4f28a419,"Fix segfault in Ticket #238
",numpy/core/src/arraymethods.c,numpy/numarray/alter_code1.py
fec6f0838c8c35709f4e8ef6753f6a1e5a88647c,"Fix adding docstrings of digitize, bincount, and add_docstring so it doesn't happen twice.
",numpy/lib/function_base.py
88f59b32e212e41ec905969263345be7d335e8e2,"Add complex types correctly.
",numpy/core/numerictypes.py
d76c27de89576f888618a20c54216991f9bedaad,"Minor changes to alter_code scripts
",numpy/numarray/alter_code2.py,numpy/oldnumeric/alter_code2.py
db349674856abc7b2652546e937c85dbbbebbf9c,"Move source, info, and who to NumPy
",numpy/lib/utils.py,numpy/numarray/alter_code1.py,numpy/numarray/convolve.py,numpy/numarray/image.py,numpy/numarray/nd_image.py
0072bd2837bcc89928fcc58e8ede88edbe1dcccd,"Un-deprecate some names in Numeric.
",numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/ufuncs.py
6983e3f24e6ca214347012652fbf65cb01cf6e5b,"Move converting code
",numpy/{lib/convertnumericA.py,numpy/{lib/convertnumericB.py,numpy/oldnumeric/alter_code1.py,numpy/oldnumeric/alter_code2.py
e292dc4b11eed3e5f5e3609f0fe16dd8709275db,"Fix convertnumericA.py to fix transition from 'b' to 'B'
",numpy/lib/convertnumericA.py,numpy/lib/convertnumericB.py
1a83cc8b5cfc71b5a7f01a5dcefcd4de4e306cfd,"Update eye and tri to take dtype in mlab
",numpy/oldnumeric/mlab.py
d372798ae6bf88c3a4414027341d2b0322941c68,"Move location of flatnonzero
",numpy/core/numeric.py,numpy/lib/function_base.py,numpy/linalg/linalg.py
3457ac34f84f502de194ad825c0db4cb0d56dc82,"Fix uses of nonzero and add flatnonzero
",numpy/core/fromnumeric.py,numpy/core/ma.py,numpy/core/tests/test_ma.py,numpy/lib/convertnumericA.py,numpy/lib/function_base.py,numpy/lib/polynomial.py,numpy/linalg/linalg.py
0820b2a2c8cebe828c1a9faa1bef45a8b0421100,"Alter typeconv to ignore 'b'
",numpy/oldnumeric/typeconv.py
04d79b539391064f6a81fba9ffa45e6371ffcedd,"Fixes for the recent change to oldnumeric
",numpy/fft/old.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/fft.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py
d6eb562b8d4b37be1f2c6743bae5ea520703da64,"Redo nonzero change --- head for the hills...
",numpy/core/fromnumeric.py
50c0c443d4a6aef02460052090daf5470b13ee7c,"Final fixes to oldnumeric
",numpy/core/fromnumeric.py
87cb586ef026ce7d0bfc7c776c91843d23c1d806,"Final fixes to oldnumeric
",numpy/core/fromnumeric.py,numpy/oldnumeric/functions.py
65343e533fbf10a5f93970497065478e24ee6238,"Fix-up oldnumeric compatibility layer.
",numpy/oldnumeric/compat.py,numpy/oldnumeric/functions.py,numpy/oldnumeric/misc.py
9d8e2024ff9014fa2fd9a29812cec615dff6feb9,"More fixes to backward compatibility
",numpy/oldnumeric/__init__.py,numpy/oldnumeric/array_printer.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/{olddefaults.py,numpy/oldnumeric/ma.py,numpy/oldnumeric/matrix.py,numpy/oldnumeric/misc.py,numpy/oldnumeric/precision.py,numpy/oldnumeric/typeconv.py,numpy/oldnumeric/ufuncs.py,numpy/oldnumeric/user_array.py
9d98d9d5e3668d3b8da3bb3019a28d6e945d6fad,"Add back dft stub and alter warning.
",numpy/dft/__init__.py,numpy/lib/UserArray.py
06ad6340a1d6ec0adc6faf280b9030946efe2c7f,"Add back a compatibility UserArray.
",numpy/lib/UserArray.py
f1cca04886d4f63f7b1ed5b382986af3a9ee6a61,"Many name-changes in oldnumeric.  This may break some numpy code that was using the oldnumeric interface.
",numpy/__init__.py,numpy/dual.py,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/{dft,numpy/lib/convertnumericA.py,numpy/lib/convertnumericB.py,numpy/lib/mlab.py,numpy/lib/{UserArray.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/compat.py,numpy/{linalg/old.py,numpy/oldnumeric/mlab.py,numpy/oldnumeric/olddefaults.py,numpy/{random/old.py,numpy/{random/oldrng.py,numpy/{random/oldrngstats.py,numpy/setup.py
8f26568de7cc97ac0dcedfd5061e08bb54770b61,"Change axis=0 to axis=None to be consistent with methods and move axis=0 functions to oldnumeric
",numpy/lib/{convertcode.py,numpy/lib/convertnumericB.py
a9046559ee562323b483ffbb80eb4b4d0cb11d36,"Convert so that axis arguments are consistent for methods and functions.  Place functions for which this changes the Numeric default into oldnumeric.
",numpy/add_newdocs.py,numpy/core/blasdot/_dotblas.c,numpy/core/fromnumeric.py,numpy/core/numeric.py,numpy/lib/tests/test_function_base.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/compat.py
7ffd787c0702925a985fedfc0c988059a77c2b61,"Make sure the scalars corresponding to intp and uintp are added.
",numpy/core/numerictypes.py
63c8a61a6e7eca823b34b65b0a23cd6ea40623c8,"A few corrections to scalar-type tests
",numpy/core/numeric.py,numpy/core/numerictypes.py
668950285c407593a368336ff2e737c5da84af7d,"Clean up scalar-types functions a bit.
",numpy/core/__init__.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/src/arrayobject.c
fad726e58b7eb8452712a79a3cd52aee510f1104,"Strip white-space on element retrieval
",numpy/core/defchararray.py,numpy/oldnumeric/compat.py
77187d2372898d6c18129aba9d562450a1af3a2c,"Format docstrings to be consistent with others.
",numpy/lib/function_base.py
079b1d88ac7926c272482f49413eb8db561a9d71,"[distutils-revamp] Rework building of extensions using Fortran.

* less stuff done in Fortran compiler modules at import time

* list of available compilers built up from modules in
  numpy.distutils.fcompiler

* finding executables centralized in one place and made sane. For instance,
  setting the Fortran 77 or 90 compilers will also make the right compiler
  used for the version command and the linker.

* environment configuration for FCompiler put into one place. The environment
  module takes care of environment variables and distutils configs, and
  the FCompiler class has everything that's configurable grouped in one
  place. Much easier to tell how to customize it now.

* fcompiler only set in config_fc

* build_ext implies build_clib

* some other cleanups

There's still some rough edges here.
",ccompiler.py,command/build_clib.py,command/build_ext.py,command/config.py,command/config_compiler.py,environment.py,exec_command.py,fcompiler/__init__.py,fcompiler/absoft.py,fcompiler/compaq.py,fcompiler/g95.py,fcompiler/gnu.py,fcompiler/hpux.py,fcompiler/ibm.py,fcompiler/intel.py,fcompiler/lahey.py,fcompiler/mips.py,fcompiler/nag.py,fcompiler/none.py,fcompiler/pg.py,fcompiler/sun.py,fcompiler/vast.py,intelccompiler.py,system_info.py
33d3fde298fb6ba2da8087f0354f8b6ec9b0d056,"Fix rstrip for character arrays (ticket #222).
",numpy/core/defchararray.py,numpy/core/tests/test_regression.py
a2031b1c6bba80f83f996acddd7f3efa0fb93be7,"Make it so that .T is *always* .transpose()
",numpy/core/src/arrayobject.c
a1e9a90654afd97b7bf45d318019966684935c51,"Add diagflat.  Begin to add numarray compatibility
",numpy/lib/twodim_base.py,numpy/matlib.py,numpy/numarray/__init__.py,numpy/numarray/numclass.py,numpy/numarray/numerictypes.py
b5048ddf5c8a305e9635bc3ad988e6da78fe0a31,"Add PyArray_ContiguousFromObject to numpy.pxi
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/numpy.pxi
d777c28575a31f8a4c11e636e57b4f7a85a1ef8e,"Add IntpArrType_Type
",numpy/core/include/numpy/arrayobject.h
bb74b1f9346911c0d92b00732b3719d51746bd7d,"[distutils-revamp] Merged revisions 2923 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

{{{
........
  r2923 | cookedm | 2006-07-29 10:14:08 -0400 (Sat, 29 Jul 2006) | 2 lines
  
  Fix bugs in gnu and vast fcompilers (should fix #214)
........
}}}
",fcompiler/gnu.py,fcompiler/vast.py
b83179e800eeeae0d1831b37416a2382f3cea073,"Fix ticket #218
",numpy/core/src/arrayobject.c
9051aeeb52b2d17a66e707d5393f8adec461bd48,"Revert change to lwork
",numpy/linalg/linalg.py
ba7e34fde1cdb7b32993a1a913249f4257f51c2e,"Revert change and add better test for umath
",numpy/core/tests/test_umath.py,numpy/linalg/linalg.py
3f18558a00bd4567989ef7086f8a84168e2b4752,"Add test for ufunc complex-problems fixed in previous commit.
",numpy/core/tests/test_umath.py
b3eb6e239bc365106824fe69eed76408e43274b5,"Fix prodi when intput and output are the same.  This fixes a problem with arcsin
",numpy/core/src/umathmodule.c.src
e9d3752b841f9593134df464a3791aa1731ca943,"Move more docstrings to add_newdocs
",numpy/add_newdocs.py,numpy/core/src/arrayobject.c
0c7be2c208f3f173b3d8913e55aeb3b731fcf3f7,"Fix longdouble machar problem (iterations too low)
",numpy/lib/machar.py
3bbf6b2016feddcc36f0c1c73e87b4d83f928eab,"Fix segfault from last commit.
",numpy/core/src/multiarraymodule.c
7d50c63082f0f98ef5391603e2f538f99bcd4d4c,"Fix ticket #216.  Also fix uses of DATA_RENEW so that object arrays will raise an error instead of possibly memory-leak when reference counts aren't freed.  Fix uses of longlong to Py_ssize_t and apppropriate FORMAT string.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/lib/index_tricks.py
0bd7d94f96b10781ef8b0c381b295aee41a3458f,"Fix-up invalid casting back to real when complex result.
",numpy/linalg/linalg.py
e4c823dd9d0a3d6fdf6a5f3f7b06b586bd946d11,"Py_OptimizeFlag is available from Python.h
",numpy/lib/src/_compiled_base.c
4b9387a507b5b62b00bbb2b359b4fbe6b23fb86d,"Don't add docstrings in add_newdoc if run with -OO
",numpy/add_newdocs.py,numpy/lib/src/_compiled_base.c
43165e87f293b52e3d4938b49124c82410afe335,"Use spaces instead of tabs.
",numpy/core/tests/test_regression.py
b4384f37c835c96f426aaf63896a29fe0f7e7bb3,"Fix test for intp on 64 bit systems.
",numpy/core/tests/test_regression.py
4ad281e43eaa9f8cb71a8cb546409d357b2943f1,"Add docstrings for multiarray to numpy.core.multiarray instead of to
numpy.core.  Fix some typos in function names.
",numpy/add_newdocs.py
162f816ba1bd8aff88b115c2441fff9099966971,"Move docstrings from multiarraymodule.c to add_newdocs.py.
",numpy/add_newdocs.py,numpy/core/src/multiarraymodule.c
3b49529e9114acd86afb0379218f8ab20c6d3955,"Fix bugs in gnu and vast fcompilers (should fix #214)
",numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/vast.py
d48ab365b5023f251238404bbd6f40649e344c83,"[distutils-revamp] Merged revisions 2758-2921 via svnmerge from 
http://svn.scipy.org/svn/numpy/trunk/numpy/distutils

........
  r2813 | cookedm | 2006-07-12 22:48:24 -0400 (Wed, 12 Jul 2006) | 2 lines
  
  Fix use of os.WEXITSTATUS and friends: only use if they exist
........
  r2824 | cookedm | 2006-07-17 00:31:04 -0400 (Mon, 17 Jul 2006) | 1 line
  
  fix arch flags for ifort on machines in em64t mode
........
  r2825 | cookedm | 2006-07-17 19:43:21 -0400 (Mon, 17 Jul 2006) | 2 lines
  
  Replace ScipyTestCase with NumpyTestCase
........
  r2916 | oliphant | 2006-07-27 23:59:59 -0400 (Thu, 27 Jul 2006) | 1 line
  
  Add NPY_MAXARGS to arrayobject.h for Multi-iterator object.  Don't fail if get_atlas_version can't execute the code.
........
  r2917 | oliphant | 2006-07-28 00:08:05 -0400 (Fri, 28 Jul 2006) | 1 line
  
  Typo
........
  r2919 | cookedm | 2006-07-28 16:02:07 -0400 (Fri, 28 Jul 2006) | 2 lines
  
  Fix #114: Problems with building with MSVC and GCC under Cygwin
........
",ccompiler.py,command/build_ext.py,command/config.py,fcompiler/gnu.py,fcompiler/intel.py,mingw32ccompiler.py,misc_util.py,system_info.py,tests/f2py_ext/tests/test_fib2.py,tests/f2py_f90_ext/tests/test_foo.py,tests/gen_ext/tests/test_fib3.py,tests/pyrex_ext/tests/test_primes.py,tests/swig_ext/tests/test_example.py,tests/swig_ext/tests/test_example2.py,tests/test_misc_util.py
02926b0b6c030ec3cbf46eb37227d111c6da0ea8,"numpy.lib.getlimits: replace typecodes with dtypes
",numpy/lib/getlimits.py
39bd37d9ee35b8a28aa75ab5e5b0c988c48b0e87,"numpy.lib.machar: replace 'while 1' loops with 'for _ in max_iter'
If there are bugs in the scalar objects, the 'while 1' loops can potentially
run forever, so we make sure they only go at most 1000 times.
",numpy/lib/machar.py
b8783285fe67338ef11ba0a40d80ce62172d8ba1,"Fix #114: Problems with building with MSVC and GCC under Cygwin
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py
471419fc4edca27993f8970306115e4c55a2c8a1,"Remove clash of string module and string numpy object by renaming string scalar object to string_.  Fix up tickets #210 and #211
",numpy/core/defchararray.py,numpy/core/numerictypes.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
444891fc56cdc07a66ecce5c8837ae9578c94280,"Typo
",numpy/distutils/system_info.py
1bb62100df7ab50cee97d607d497147e0e416cea,"Add NPY_MAXARGS to arrayobject.h for Multi-iterator object.  Don't fail if get_atlas_version can't execute the code.
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/arrayobject.c,numpy/distutils/system_info.py
006cee584e54c3cfe68ad018bb71cba3d3ec614e,"Fix-up version.py so that a release just changes a variable to True.
",numpy/version.py
1d012e6f1b180b93e51b886d1c51699b1a429995,"Last version change.
",numpy/version.py
e26746784e19748784d69707e3f587ad3612d6a0,"Fix revision numbers.
",numpy/version.py
19ce2ea3251916695bc5a7f3d4389664255d4db4,"Add test for ticket #203.
",numpy/core/tests/test_regression.py
4bba31c59d4dd4c4d6b9f59df0564a687efd0f5c,"Back to 0.9.9 version
",numpy/lib/function_base.py
05cdc869ae8a7f44097dd186fe6688500a99e30f,"Add tests for ticket #205.
",numpy/core/tests/test_regression.py
ec6d0629236081a4e24e632f603aa4a0b56926a3,"Make version number 0.9.9 until 1.0 comes out
",numpy/lib/function_base.py,numpy/version.py
04dfae6d7468213950012e37adeb86ab82efcdca,"Fix-up problems with iterator subscripting.
",numpy/core/src/arrayobject.c
fd96933a5f4e3cf0aba5336a3de713069be83a2b,"Update to use pyrex 0.9.4.1
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
ce00aea399ebbe697ec7571f0beccf188c7944bb,"Fix random.uniform
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
44011bc6f9fadaef25dacf127f46ca66c2f04df3,"Merge non-white space changes from ver1.0 branch.  Change to Py_ssize_t and better error on align=True with array_descr conversion.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
c47dfadf925b567ad0ff7dc0331afa8247160240,"Merge changes from ver1.0 branch.
",numpy/core/defmatrix.py,numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/doc/CAPI.txt,numpy/doc/pyrex/c_numpy.pxd,numpy/lib/convertcode.py,numpy/linalg/linalg.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
5508e33853b909315b0cc4f12e4daba5f2e767a6,"Fix unnecessary use of NULL in scalar_value and remove tabs.
",numpy/core/ma.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
f44b6859c241129bedad7a223edf221646b30e04,"merge from ver1.0 (r2896): fix for #207
",numpy/core/src/scalartypes.inc.src
da18fe3d87328e330be066c9af3df05506a13cae,"Fix for #207. Need to convert void * to char * before doing pointer arithmetic.
",numpy/core/src/scalartypes.inc.src
e0cf775be41e3be9ae4a846234df2b586b056c81,"Merge fix from trunk r2894 for longdouble failing on OS X (ticket #183).
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
598e6ff5286b0cc672b3211271ee51d7d18e0174,"Fix for longdouble not working on OS X with gcc 4 (#183).
Replace the _SOFFSET_ macro (which got the address of the obval member
by casting to a PyScalarObject) with a function scalar_value, which
checks the type_num. This allows Py*ScalarObject's to have different
binary layout than PyScalarObject (PyLongDoubleObject had its obval at
a different place due to alignment issues).
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
7fbac39e5e1715fea4dd51fee79554e789447bd2,"Fix missing return.
",numpy/linalg/linalg.py
9bda193417b278dce14c22b1ac5c8bc1a6717365,"Add broadcasting behavior to random-number generators.  Fix cholesky to keep matrix return.
",numpy/core/include/numpy/arrayobject.h,numpy/doc/pyrex/c_numpy.pxd,numpy/linalg/linalg.py,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi
e116574cde770234beffaf2be6cd542472679313,"Fix-up convertcode and CAPI docs
",numpy/doc/CAPI.txt,numpy/lib/convertcode.py
0adda1b2ab591010396559c1da5c062797b7775a,"Fix ticket #202
",numpy/core/records.py,numpy/core/src/multiarraymodule.c
23aa0cfbfd06f36680b36c0357e5bbc320c5b604,"Undo typo-change.
",numpy/core/include/numpy/arrayobject.h
4eea418ebf33e4d78fd10b6db7d5daadc0bd359d,"Update check for no-threading and change wording of error.
",numpy/core/setup.py,numpy/core/src/arrayobject.c
b2eafe470daa694148b7aebd5080006893ea4829,"Change all uses of PyObject_AsReadBuffer and PyObject_AsWriteBuffer to use Py_ssize_t for Python 2.5
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
96d053c58aabcdb5e87d014e16b6f2ca6dccee91,"Fix matrix getitem to return column matrices when appropriate.
",numpy/core/defmatrix.py,numpy/core/src/arrayobject.c
19c85f13b9fcee3dc5d5632b77380a61108ca3e6,"Fix spelling mistake [for Albert Strasheim].
",numpy/core/src/multiarraymodule.c
f68d43102a60376764e1226fc774548b89bcf3c8,"Fix spelling mistake [for Albert Strasheim].
",numpy/core/src/multiarraymodule.c
d75894515ecb535fdd02bbf05c1c3f21e6aaa5dc,"Close ticket #203 [for Andrew Straw].
",numpy/matlib.py
f9a971eeef6761cedc6e48cb1dcf7af3f7966925,"Fix ticket #203 [for Andrew Straw].
",numpy/matlib.py
9355b1c4c1daea10f32819111d36030ddd84f217,"Remove test that fails on windows.
",numpy/core/tests/test_regression.py
324e7f227df2fc4861319236dc89f1c63060aac4,"Add more regression tests.
",numpy/core/tests/test_regression.py
07e319edaa2c21c9300acdefa60f4b719b44af12,"Change version number.
",numpy/version.py
dcad2cefe8a76b72e7ab93498db61edac41d5748,"Change trunk to version 1.1
",numpy/version.py
3e0ef32d75cbe0749e96666e3fae03101bf837bb,"Change version to 01000000
",numpy/core/include/numpy/arrayobject.h
83d1d47bb8e5df4c9578a42f9f2ce8db408ccd00,"Change c-api to 1.0
",numpy/core/include/numpy/arrayobject.h
3faacbbc2b90a123440423ad6db109d7a6b978f0,"Fix memory leak and Fix segfault on Python2.3 by disabling threading.
",numpy/core/setup.py,numpy/core/src/multiarraymodule.c
edb79679e92ccda68d87a69bb3e291cb2c36f5a5,"Fix up segfault problem in #196
",numpy/core/src/arraytypes.inc.src
bb8bf82c40ab83d3739b60dd022d6c936cd615c2,"Rename test.
",numpy/core/tests/test_regression.py
fa9dab85ce7128291eb90748753af273a4050379,"Use StringIO instead of TempFile. Add two more tests.
",numpy/core/tests/test_regression.py
4c2a11b0f32caee44b18fd521a2e62006a19f72f,"Add regression tests so they get loaded.
",numpy/core/tests/test_multiarray.py
da03634412bee2491bab426808d8b3e6ad4b1545,"Update tests.
",numpy/core/tests/test_regression.py
948354a12e35712008a2a52fd5efc581d36595dc,"Keep valgrind happy: assign values to memory before using.
",numpy/core/tests/test_regression.py
b087a1da57a7badf9b3cf1d045eb1963a41128ae,"Test for #194.
",numpy/core/tests/test_regression.py
748de97f20a8b76a8239c16ab2d8a462e9bdb367,"Fix so that broadcast copy and broadcast cast do not allow the broadcasted result to be larger than the destination.
",numpy/core/src/arrayobject.c
270c4fb03a62f84bf30e8a64918bc595c89e14f7,"Fix spelling of 'threshold'.
",numpy/core/arrayprint.py
6471522ba64c7d165606f9aabaacf808dedb8c3c,"Remove unused names from __all__ in arrayprint.
",numpy/core/arrayprint.py
7b68d6bf90d88e38d9336ad0db298d2703106792,"Add explicit imports patch in #193
",numpy/__init__.py
ee4083f770439ec67e71b45fea68a8369aee57ce,"Fixed a memory-leak in EnsureArray.  Added __array_priority__ to array scalars.  Added bug-fixes part of david huard's histogramdd ticket.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py
feb0f3a673496e408c374448d8446bbcb107eaa1,"Add more regression tests from recent tickets.
",numpy/core/tests/test_regression.py
046388a091904307a3e2b0f1e669b00382b5b174,"Make sure we deal with null bytes appropriate when getting a random stream of bytes as a Python string.
",numpy/random/mtrand/Python.pxi,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
e6b71b7959907037d224f304e233f8688a366d45,"Fixed spelling of type object to be consistent with rest of code.
",numpy/add_newdocs.py
9281fc791f0e5c0463656ed18e7c5cc7457714b2,"Change file reading and writing to call file object instead of using PyFile_FromString
",numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
3a4fd7e82ca5b200e7b7eeb92343e32b4e8891b6,"Add more documentation.  Fix #99
",numpy/add_newdocs.py,numpy/core/src/scalartypes.inc.src
622701d2159a7d25153db1bfc270d4b710c0eaa1,"Clean up docstrings.
",numpy/core/fromnumeric.py,numpy/lib/function_base.py,numpy/lib/utils.py
999b6cd79c2609225a5793db81c346cff0ceec7b,"Fix ticket #192
",numpy/core/src/arrayobject.c
9780ffa0a0253a14d81d290b0531ef3eebe08d14,"More regression tests from tickets.
",numpy/core/tests/test_regression.py
7b597d57f2d9bc227e23b7a24df05111e483cee5,"Remove TODO.txt
",TODO.txt
20a9e65369d5a689be1991cc42ef6f91f91b49ef,"Add more regression tests, provided by Albert Strasheim.
",numpy/core/tests/test_regression.py
50831666840ec2ee065569c3e3c9fbc5461fc918,"Apply patch for unique from #154
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
0991c5d70f87c38a92364da8485be265762686db,"Fix-up optimization for assignment.  Fix threading one more time.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
f78f75ed14f93361452dcf2827c552560f81237b,"Don't release GIL for casting involving extended data-types.
",numpy/core/src/arrayobject.c
5172ae3f46a2da8935e643c7ee6a2086fca3956c,"Fix up rec.array when dtype and formats are both None for cases that support it.  Alter dtype=object parsing so that tuples and lists are recognized as sequences.
",numpy/core/records.py,numpy/core/src/arrayobject.c,numpy/core/tests/test_records.py
b884d998f468f89704dae39ef4d1e0b2bc71a9f3,"Improve creation of object arrays when dtype=object is specified.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
48ef07dc880e384409024c81e7da67cc47c90d9e,"Fix a couple of issues with object matrices
",numpy/core/defmatrix.py,numpy/core/src/arrayobject.c
d5a13c5e4d881a205bef6ce64cb2222aef98d43c,"add some more docstrings
",numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c,numpy/lib/function_base.py
ba41f2f5d864551b4462a9f53e8f23f626b11105,"Fix sub-classing of matrices..
",numpy/core/defmatrix.py
fe9508708db30fde8629269792d25bea838a86e5,"Fix pickling of dtype objects with hasobject set so hasobject gets set on un-pickle.
",numpy/core/src/arrayobject.c
70ff09c6be8979d81a26297e54962b3a5108510d,"Add GIL-releases to tofile method.
",numpy/core/src/arrayobject.c
eefce918a50343132053487c8f0359340cc6ca8a,"Fix ticket #175
",numpy/core/ma.py
bc0e889643645b39eae2a969d3e5629a1295f641,"Fixed order of DECREF and END_THREADS
",numpy/core/src/multiarraymodule.c
f1f0e0d81904c96c14fee21629f4fcd98fc5d6b4,"Fix FORTRANORDER support in tostring for discontiguous arrays.
",numpy/core/src/arrayobject.c
565f8c335c12a9365d6c9163889b8db1ac44690e,"Added PyArray_ToString to C-API and made default .tostring() method return C-order.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c
b1015e1386bbe3d0d2868ebf0745332bb8346d97,"Regression tests from previous tickets.
",numpy/core/tests/test_regression.py
702655e4c2371e525cdc3d27e30a16e2be5b7037,"Change so that WITH_THREAD is used in a define statement
",numpy/core/setup.py
958601cb55c15930a443057d61230a6aa5a45c02,"Fix ticket #178 which was an error whenever multiple buffers needed to be used to cast.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/linalg/linalg.py
3acb430d1422a16f9bf705fb31cef2c53b3ba9b0,"Fix to example.
",benchmarks/simpleindex.py
ae4de66c4d02e6616750b04e2fed76805fab14e0,"Add test that scalar types work (i.e., scalartype(number) == number)
PPC OS X fails this for longdouble.
",numpy/core/tests/test_scalarmath.py
5211f02f2b0f8882fe5177796f6d9d2b0be86062,"fix small typo
",numpy/core/src/scalartypes.inc.src
b098d6252f944b814663d4dbf9ac4e08c4e15e38,"Fix-up usage of NPY_ALLOW_THREADS.  Default is now WITH_THREAD but an environment variable NUMPY_NOSMP can be set which will make the default 0
",numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/old_defines.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c,numpy/doc/pyrex/c_numpy.pxd
6e3790036dab34159c6973c64d6e5626db64b829,"Make sure generated C-API uses new names.
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/noprefix.h,numpy/core/include/numpy/old_defines.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
78a9dbd850514694438e03933001000c7d5787ff,"Allow threads at several places in the code.
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/_sortmodule.c.src,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
10943b683e107694053221df6b36e5117eb38e13,"Replace ScipyTestCase with NumpyTestCase
",numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/dft/tests/test_helper.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_misc_util.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_type_check.py
2acb0e779d6d0a50288aed3c050fc1fbffaf692c,"fix arch flags for ifort on machines in em64t mode
",numpy/distutils/fcompiler/intel.py
c47e6cb2d885c753ece0667fa3f5fad74668e314,"make printed errors from approx_array_* better
",numpy/testing/utils.py
cf0dd874261547add03a56baf14b4d5102f64f1e,"Fix failing linalg.tests.test_det on 32-bit machines for csingle.
This compares det() with the product of the eigenvalues, which were being
calculated as csingles. Changing that to cdouble makes this work.
I have no clue why this fails for 32-bit linux, but not 64-bit.
",numpy/linalg/tests/test_linalg.py
46fa7a119d9995f5f348694ae0595f2abdf44762,"numpy.linalg: fix bug where complex arrays weren't being returned.
Also improved test cases.
",numpy/linalg/linalg.py,numpy/linalg/tests/test_linalg.py
acd97c630b02b7a48b715eaf67155784642d95d8,"linalg routines will try to return their results as the same type as the arguments.
i.e., if you pass in a single or csingle array, that's what you get back.
(Routines still use double-precision, though).
Also some cleanups.
",numpy/linalg/linalg.py
f57a6625f380bb7b68d6cbb1de190af47c0beba4,"numpy.linalg.setup.py: include the test cases
",numpy/linalg/setup.py
26a4597fb4db0b09cdaf5d9db817a68019174f75,"Add test cases for linalg
",numpy/linalg/tests/test_linalg.py
b9cb27d7d3bb18acde9c554b111ef3661ae9b421,"`` -> repr in numpy.testing
",numpy/testing/numpytest.py,numpy/testing/utils.py
c517a815c40f0b79b2f211b2e6f786d7d5926208,"squash remaining uses of typecodes in linalg
",numpy/linalg/linalg.py
af40b197e5af26afe09ebc1b9392993fa8a62270,"fix bug in eig with complex solutions
",numpy/linalg/linalg.py
de0ac347a7332b04ff35b21c87e7e1bdb0cb5bc4,"convertcode: replace ArrayType, NewAxis, and typecode =
",numpy/lib/convertcode.py
705fa01506ea1d98add04ff2e2717a70c627507a,"Fix use of os.WEXITSTATUS and friends: only use if they exist
",numpy/distutils/command/config.py
e30882f573121d69bfbc86c83f704c8b4657659c,"Fix ticket #177
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarraymodule.c
1a9ba98fb2f0aa0475d12d3f8007e851525ccb30,"Keep rand and randn in matlib and make them take tuples as well as individual arguments.
",numpy/matlib.py
3e05403c03182b51d8fecd8b478b44bc7b1f65d9,"Fix docstrings.
",numpy/core/fromnumeric.py,numpy/core/src/arraymethods.c
27c212bf3d4bbd180c60149e178047c2e49a5648,"Change occurrences of N.rand to N.random.rand.
",benchmarks/simpleindex.py,numpy/matlib.py
cadbb5f2ec84cb774023bbe8cbe6f39a93e837d7,"Fix a bug due to optimizing compilers.  See http://www.nanoengineer-1.net/mediawiki/index.php?title=Bug_1058
",numpy/linalg/dlamch.c
0d68afb5705489943e3ec611ebb1d8a515153583,"Fix names used in dft.old refft->rfft
",numpy/dft/old.py
eb9f5f70bcce4354130bbf68d69d645ccd1d147f,"Remove global symbols from numpy. Remove use of replacetypechars in convertcode.
",numpy/dft/info.py,numpy/lib/convertcode.py,numpy/random/info.py
36d3c1616707659db3c0217688b4ccb5d7838ae1,"Remove MANIFEST file at startup time, since distutils fails to properly update it.  Also add proper shebang line.
",setup.py
6a882aee5c0f1db892363600f17fc43f4a175d23,"Add GIL-releasing calls
",numpy/core/src/arrayobject.c
d48cd46c8ee45039735ae49a268c9c8943c34484,"Fix base when using array interface and a buffer object.
",numpy/core/src/arrayobject.c
a345bd21446141f16f70b8f84c7b42b257b0dcff,"Fix .choose docstring and allow more functions to be 'vectorized'
",numpy/core/src/arraymethods.c,numpy/lib/function_base.py
107a45f793e249bc87e9bd328fa7d62519a5b4e9,"Fix casting of signed ints to unsigned ints and Change aligned=0 to aligned=False in records.py
",numpy/core/records.py,numpy/core/src/arrayobject.c
e43820609750d9035623af82e11cf7501bf9cc4c,"Fix so formats as dtype is not accepted.
",numpy/core/records.py
6880ab5ed65fba331c680c340fe43f033b266b7e,"Alter order of records.py keyword arguments and allow dtype= keyword or formats= keyword to determine type.
",numpy/core/records.py
1e689a2210534c18e035cf511d9ececd1f2d833c,"Add the dtype= keyword to records.py functions
",numpy/core/records.py
9e82f3ccc4063fbd06d206e923fc7d42f1b7df30,"Add dtype= keyword to functions for record arrays so that pre-built descriptors can be used.
",numpy/core/records.py,numpy/core/src/arrayobject.c
bedbd80af325f1f234a1ffc6acc7fcd429528b3e,"Make third argument to recarray.__new__ a keyword.
",numpy/core/records.py
ac7ff77afad04b6c330a534463dd02681d278c9b,"MADE NPY_ versions of all PyArray_ prefixes corresponding to CONSTANTS.  Created a names member of PyArray_Descr and changed usages that extracted -1 out of the fields dict.
",numpy/core/_internal.py,numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/old_defines.h,numpy/core/records.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
b4ca1e1eb0d04dac6f6ab544ceff8e2333f8fd12,"replace some bare except:'s
",numpy/core/records.py,numpy/lib/index_tricks.py
18ceceaa97fd7e1b8a97dad1b4c5ebdd0756cf68,"fix warning about comparisions in scalarmathmodule.c.src
",numpy/core/src/scalarmathmodule.c.src
0a7f9f5f8bffdcbb4ba94c98d722056b1e6bb133,"Use dtype in numeric.indices.
",numpy/core/numeric.py
c2459780ab054722cdbf1ec0b24e74a5aceac3c7,"fix tabs -> spaces
",numpy/core/fromnumeric.py
6e4374e08e9cb2deb0266d3c4af61c3a6ee57deb,"remove unused import
",numpy/core/memmap.py
1643267504310c3454579ff7fdc105d818454ef6,"fix clobbering of N
",numpy/matlib.py
23c7be589e17be1fa90850347ec801137bff275e,"Comment changes.
",numpy/core/src/arrayobject.c
16013d99a464dbad3dd016ed0e1473bb7c6c9e09,"Fix 0-stride contiguous bug.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
adeeb8102a681f4b23a59b765a3b8a0ee45f218e,"Add CopyAnyInto and CastAnyInto functions for implementing UPDATEIFCOPY functionality when source and destination are not broadcastable but the same shape.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
36c839a590e227fe2c5508b6bfd325a22f3cfafd,"Add simple get_numarray_include() function and typedefs for completeness
",numpy/core/include/numpy/arrayobject.h,numpy/lib/utils.py
3655a56c37385ced20042c871a4dcefb21ba971f,"Fix problem with CheckFromAny when descr is NULL
",numpy/core/src/arrayobject.c
56d04a88ac47b7d5966aca68f081ba97e23c5e70,"fix numarray package a bit.
",numpy/core/include/numpy/noprefix.h,numpy/numarray/__init__.py,numpy/numarray/util.py
a8b68803bad4052ce2e18ee697b6e2b0b546f846,"Add definition to avoid repeat noprefix.h defines
",numpy/core/include/numpy/noprefix.h
21e52f005c9ee4a44a23cdec87d9eaa357bd31e5,"Fix f2py and doc
",numpy/core/include/numpy/ufuncobject.h,numpy/doc/CAPI.txt,numpy/f2py/cfuncs.py,numpy/f2py/src/fortranobject.h
b6f0858d8b714f83e4c8a390fad310648cf0f823,"More f2py changes
",numpy/f2py/cb_rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c
5694ae71ac969247b44951d2caa9820852ff6e21,"More fixes to f2py
",numpy/f2py/src/fortranobject.c
d1b492038476e0da520c97549e39c9284ae64e18,"Fix f2py to use new names
",numpy/core/include/numpy/arrayobject.h,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
a29b0e2bf884c5d43d07e5fe7c88344b6dd8bde8,"Remove tMIN and tMAX macros
",numpy/core/include/numpy/arrayobject.h
546ad88809f1055a173fd559a8e6afec0351514a,"Make _FLAGS names available in noprefix.h
",numpy/core/include/numpy/noprefix.h
6fbdc96b027cf5c4b15a8b3f0bf4b428e722ce92,"Fix added files.
",numpy/core/include/{,numpy/core/include/numpy/oldnumeric.h
62af9adba71f8b3a154da2bfc9df7ddac713697b,"Add noprefix.h header
",numpy/core/include/noprefix.h
1acf453e6bdbac5e176806b0ad07ad33e32a5f40,"Apply npy_ and NPY_ prefixes to all C-API names that don't already have PyArray_ prefixes.
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c,numpy/numarray/_capi.c,numpy/numarray/numpy/arraybase.h,numpy/numarray/numpy/nummacro.h
8904c7ab8d3e5fb1233e80586c5a4c6b7df4a14b,"Fix numeric.indices on 64-bit platforms.
",numpy/core/numeric.py
46cb8b16d2ce0d0fb115910ffb3d225f82119990,"Fix-up uses of Bool as return type in C-API
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
d896e9ee78d865474ab85c64a648c05834225966,"Make .T == .transpose()
",numpy/core/ma.py,numpy/core/src/arrayobject.c
5ee14815b3520074e73b2b2836a8a11de0cc9fc2,"Add library of matrix functions.
",numpy/core/defmatrix.py,numpy/matlib.py
876176a0412c4fb22645edc531110d2a0a2fed16,"Don't want to assign test to NumpyTest().test (which instantiates NumpyTest),
so rather bring over its docstring.
",numpy/__init__.py
6dc0d80179c589f12bfef76a9564b28c450437d0,"Add docstring for bincount.
",numpy/lib/function_base.py
797911288ad649bded549b13492c4fb5d240ee79,"Scan for abs(level) tests.
",numpy/testing/numpytest.py
80f1d7825004f8be40fa265eaaf165471467112d,"Remove .M .A .H attribute.  Keep .T attribute as .transpose for >=2d.  Creates 2-d from 1-d and returns self for 0-d.  Fix-up flag-checking when stride 0 is coupled with dim == 1
",numpy/core/defmatrix.py,numpy/core/ma.py,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
ddfe20b98506f0e0eb5f27286dc515ccab4b44a8,"Fix memory leak in #172
",numpy/core/src/multiarraymodule.c
3ea289e92d3a53bc296cb6a0a26bcafaee7ca48e,"Speed up mod function using fmod and add use_pythonmath and use_scalarmath functions to alter the tables of the appropriate array scalars.
",numpy/core/__init__.py,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umathmodule.c.src
03908e3a396a3612ce5bcc7ccd0bd40e004166ec,"Fix to NA_OptionalOutputArray so that resulting array is a copy of the master when the specified output array is NULL or None,  i.e. omitted.  flags. Submitted on behalf of jmiller.
",numpy/numarray/_capi.c
e1d243755fcf23a79423f1dc9245fba058175dc2,"[distutils-revamp] some more cleanups.
Use core.get_distribution() instead of distutils.core._setup_distribution
",ccompiler.py,command/config_compiler.py,fcompiler/__init__.py,misc_util.py
a880c68752c47a63577e55689275b5fb9d6595a3,"[distutils-revamp] Some initial cleanups.
",conv_template.py,core.py,from_template.py
be3e20843fa8203cf64de8a944be95c02bde7d9b,"Patch from David Huard to future-proof histogram2d test
",numpy/lib/tests/test_twodim_base.py
6782a92fd1a7625ee48f6b2946a7d7149ab28a77,"Branch numpy.distutils to distutils-revamp
",COMPATIBILITY,DEV_README.txt,LICENSE.txt,MANIFEST.in,README.txt,TEST_COMMIT,THANKS.txt,TODO.txt,numpy/distutils/__init__.py,numpy/distutils/__version__.py,benchmarks/casting.py,benchmarks/creating.py,benchmarks/simpleindex.py,benchmarks/sorting.py,numpy/distutils/ccompiler.py,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,{numpy/distutils/command,numpy/distutils/conv_template.py,numpy/distutils/core.py,numpy/distutils/cpuinfo.py,numpy/distutils/exec_command.py,numpy/distutils/extension.py,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,{numpy/distutils/fcompiler,numpy/distutils/from_template.py,numpy/distutils/info.py,numpy/distutils/intelccompiler.py,numpy/distutils/interactive.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/log.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/__init__.py,numpy/_import_tools.py,numpy/add_newdocs.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/blasdot/_dotblas.c,numpy/core/blasdot/cblas.h,numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/genapi.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/fromnumeric.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/arrayscalars.h,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/info.py,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/src/_isnan.c,numpy/core/src/_signbit.c,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_scalarmath.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/core/tests/testdata.fits,numpy/dft/__init__.py,numpy/dft/fftpack.c,numpy/dft/fftpack.h,numpy/dft/fftpack.py,numpy/dft/fftpack_litemodule.c,numpy/dft/helper.py,numpy/dft/info.py,numpy/dft/old.py,numpy/dft/setup.py,numpy/dft/tests/test_helper.py,numpy/distutils/setup.py,numpy/doc/CAPI.txt,numpy/doc/DISTUTILS.txt,numpy/doc/README.txt,numpy/doc/pyrex/MANIFEST,numpy/doc/pyrex/Makefile,numpy/doc/pyrex/c_numpy.pxd,numpy/doc/pyrex/c_python.pxd,numpy/doc/pyrex/notes,numpy/doc/pyrex/numpyx.c,numpy/doc/pyrex/numpyx.pyx,numpy/doc/pyrex/run_test.py,numpy/doc/pyrex/setup.py,numpy/doc/records.txt,numpy/doc/swig/HelperFunctions.txt,numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/setup.py,numpy/doc/swig/testSeries.py,numpy/doc/ufuncs.txt,numpy/dual.py,numpy/f2py/BUGS.txt,numpy/f2py/Makefile,numpy/f2py/NEWS.txt,numpy/f2py/README.txt,numpy/f2py/TODO.txt,numpy/f2py/__init__.py,numpy/f2py/__version__.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/diagnose.py,numpy/f2py/doc/Makefile,numpy/f2py/doc/Release-1.x.txt,numpy/f2py/doc/Release-2.x.txt,numpy/f2py/doc/Release-3.x.txt,numpy/f2py/doc/Release-4.x.txt,numpy/f2py/doc/apps.tex,numpy/f2py/doc/bugs.tex,numpy/f2py/doc/collectinput.py,numpy/f2py/doc/commands.tex,numpy/f2py/doc/ex1/arr.f,numpy/f2py/doc/ex1/bar.f,numpy/f2py/doc/ex1/foo.f,numpy/f2py/doc/ex1/foobar-smart.f90,numpy/f2py/doc/ex1/foobar.f90,numpy/f2py/doc/ex1/foobarmodule.tex,numpy/f2py/doc/ex1/runme,numpy/f2py/doc/f2py2e.tex,numpy/f2py/doc/f2python9-final/README.txt,numpy/f2py/doc/f2python9-final/aerostructure.jpg,numpy/f2py/doc/f2python9-final/flow.jpg,numpy/f2py/doc/f2python9-final/mk_html.sh,numpy/f2py/doc/f2python9-final/mk_pdf.sh,numpy/f2py/doc/f2python9-final/mk_ps.sh,numpy/f2py/doc/f2python9-final/src/examples/exp1.f,numpy/f2py/doc/f2python9-final/src/examples/exp1mess.txt,numpy/f2py/doc/f2python9-final/src/examples/exp1session.txt,numpy/f2py/doc/f2python9-final/src/examples/foo.pyf,numpy/f2py/doc/f2python9-final/src/examples/foom.pyf,numpy/f2py/doc/f2python9-final/structure.jpg,numpy/f2py/doc/fortranobject.tex,numpy/f2py/doc/index.html,numpy/f2py/doc/intro.tex,numpy/f2py/doc/multiarray/array_from_pyobj.c,numpy/f2py/doc/multiarray/bar.c,numpy/f2py/doc/multiarray/foo.f,numpy/f2py/doc/multiarray/fortran_array_from_pyobj.txt,numpy/f2py/doc/multiarray/fun.pyf,numpy/f2py/doc/multiarray/run.pyf,numpy/f2py/doc/multiarray/transpose.txt,numpy/f2py/doc/multiarrays.txt,numpy/f2py/doc/notes.tex,numpy/f2py/doc/oldnews.html,numpy/f2py/doc/options.tex,numpy/f2py/doc/python9.tex,numpy/f2py/doc/signaturefile.tex,numpy/f2py/doc/using_F_compiler.txt,numpy/f2py/doc/win32_notes.txt,numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/HISTORY.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt,numpy/f2py/docs/TESTING.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/docs/default.css,numpy/f2py/docs/docutils.conf,numpy/f2py/docs/hello.f,numpy/f2py/docs/pyforttest.pyf,numpy/f2py/docs/pytest.py,numpy/f2py/docs/simple.f,numpy/f2py/docs/simple_session.dat,numpy/f2py/docs/usersguide/allocarr.f90,numpy/f2py/docs/usersguide/allocarr_session.dat,numpy/f2py/docs/usersguide/array.f,numpy/f2py/docs/usersguide/array_session.dat,numpy/f2py/docs/usersguide/calculate.f,numpy/f2py/docs/usersguide/calculate_session.dat,numpy/f2py/docs/usersguide/callback.f,numpy/f2py/docs/usersguide/callback2.pyf,numpy/f2py/docs/usersguide/callback_session.dat,numpy/f2py/docs/usersguide/common.f,numpy/f2py/docs/usersguide/common_session.dat,numpy/f2py/docs/usersguide/compile_session.dat,numpy/f2py/docs/usersguide/default.css,numpy/f2py/docs/usersguide/docutils.conf,numpy/f2py/docs/usersguide/extcallback.f,numpy/f2py/docs/usersguide/extcallback_session.dat,numpy/f2py/docs/usersguide/fib1.f,numpy/f2py/docs/usersguide/fib1.pyf,numpy/f2py/docs/usersguide/fib2.pyf,numpy/f2py/docs/usersguide/fib3.f,numpy/f2py/docs/usersguide/ftype.f,numpy/f2py/docs/usersguide/ftype_session.dat,numpy/f2py/docs/usersguide/index.txt,numpy/f2py/docs/usersguide/moddata.f90,numpy/f2py/docs/usersguide/moddata_session.dat,numpy/f2py/docs/usersguide/run_main_session.dat,numpy/f2py/docs/usersguide/scalar.f,numpy/f2py/docs/usersguide/scalar_session.dat,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/docs/usersguide/spam.pyf,numpy/f2py/docs/usersguide/spam_session.dat,numpy/f2py/docs/usersguide/string.f,numpy/f2py/docs/usersguide/string_session.dat,numpy/f2py/docs/usersguide/var.pyf,numpy/f2py/docs/usersguide/var_session.dat,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/info.py,numpy/f2py/lib/__init__.py,numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/research/rat/main.c,numpy/f2py/lib/research/rat/main.f90,numpy/f2py/lib/research/rat/rational.f90,numpy/f2py/lib/research/rat/wrap.f90,numpy/f2py/lib/sourceinfo.py,numpy/f2py/lib/splitline.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py,numpy/f2py/lib/typedecl_statements.py,numpy/f2py/lib/utils.py,numpy/f2py/rules.py,numpy/f2py/setup.cfg,numpy/f2py/setup.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h,numpy/f2py/src/test/Makefile,numpy/f2py/src/test/bar.f,numpy/f2py/src/test/foo.f,numpy/f2py/src/test/foo90.f90,numpy/f2py/src/test/foomodule.c,numpy/f2py/src/test/wrap.f,numpy/f2py/tests/array_from_pyobj/__init__.py,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/c/return_real.py,numpy/f2py/tests/f77/callback.py,numpy/f2py/tests/f77/return_character.py,numpy/f2py/tests/f77/return_complex.py,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_logical.py,numpy/f2py/tests/f77/return_real.py,numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_logical.py,numpy/f2py/tests/f90/return_real.py,numpy/f2py/tests/mixed/foo.f,numpy/f2py/tests/mixed/foo_fixed.f90,numpy/f2py/tests/mixed/foo_free.f90,numpy/f2py/tests/mixed/run.py,numpy/f2py/tests/run_all.py,numpy/f2py/use_rules.py,numpy/lib/UserArray.py,numpy/lib/__init__.py,numpy/lib/arraysetops.py,numpy/lib/convdtype.py,numpy/lib/convertcode.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/machar.py,numpy/lib/mlab.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/lib/setup.py,numpy/lib/shape_base.py,numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/blas_lite.c,numpy/linalg/dlamch.c,numpy/linalg/dlapack_lite.c,numpy/linalg/f2c.h,numpy/linalg/f2c_lite.c,numpy/linalg/info.py,numpy/linalg/lapack_lite/README,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/lapack_lite/wrapped_routines,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py,numpy/linalg/old.py,numpy/linalg/setup.py,numpy/linalg/zlapack_lite.c,numpy/numarray/__init__.py,numpy/numarray/_capi.c,numpy/numarray/numpy/arraybase.h,numpy/numarray/numpy/cfunc.h,numpy/numarray/numpy/ieeespecial.h,numpy/numarray/numpy/libnumarray.h,numpy/numarray/numpy/numcomplex.h,numpy/numarray/numpy/nummacro.h,numpy/numarray/setup.py,numpy/numarray/util.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/olddefaults.py,numpy/oldnumeric/setup.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/random/__init__.py,numpy/random/info.py,numpy/random/mtrand/Python.pxi,numpy/random/mtrand/distributions.c,numpy/random/mtrand/distributions.h,numpy/random/mtrand/generate_mtrand_c.py,numpy/random/mtrand/initarray.c,numpy/random/mtrand/initarray.h,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/numpy.pxi,numpy/random/mtrand/randomkit.c,numpy/random/mtrand/randomkit.h,numpy/random/old.py,numpy/random/oldrng.py,numpy/random/oldrngstats.py,numpy/random/setup.py,numpy/setup.py,numpy/testing/__init__.py,numpy/testing/info.py,numpy/testing/numpytest.py,numpy/testing/setup.py,numpy/testing/utils.py,numpy/version.py,scipy_compatibility,setup.py,setupegg.py,site.cfg.example,numpy/distutils/system_info.py,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,{numpy/distutils/tests,numpy/distutils/unixccompiler.py
216f071ab060a6f08c22666aea33f7095f079d1e,"Fix UserArray.
",numpy/doc/pyrex/numpyx.c,numpy/doc/pyrex/numpyx.pyx,numpy/lib/UserArray.py
fb83db13965023c3f82eef0cf1b8e8b18789f5b9,"cache the ATLAS version computation
",numpy/distutils/system_info.py
18db7b375a7969704686a5cdcbff7185dd5813fc,"Find reference-counting problem leading to memory leak in PyArray_Round
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
aa17d93cc0f4beae1973646131a1caba5536b336,"Get rid of silly returns in scalar-math module which was preventing it's working.
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
c1b2fc12263b652898d4e7d539aabaf31176629c,"Optimize 1-d indexing and re-factor code that handles negative numbers in dimensions.
",numpy/core/src/arrayobject.c
a7b49529358d6e52c449a739cc09d390e36238db,"Fix error in linalg.py
",numpy/linalg/linalg.py
42477d7f8380d4c39caea70eb35d371b985e3465,"Fix missing ) in numpy.i
",numpy/doc/swig/numpy.i
a6d06e1fd07f0d358461661254581e8fe60733d1,"Add .M .A .T .H to array scalars.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
11aa95a6a4978a687288f62287c147a63f834acb,"Add .M .A .T .H attributes to MA
",numpy/core/ma.py
2a37179758d8c8db59b0e35c5355c8fd6f9b21dc,"Add .A, .H, .T, .M attributes to the ndarray.
",numpy/core/defmatrix.py,numpy/core/src/arrayobject.c
0f17838356834ecf848140cc931cba1a162fe6c6,"Fixed typos in distutils.system_info
",numpy/distutils/system_info.py
fdd32af7eb958ae1bf055f1b36712f34dbfaf2a8,"Add comments for VOID_compare)
",numpy/core/src/arraytypes.inc.src
2f4f567759dab5880c206ffa63bf3b8fdeceed82,"Add support for == and != comparison of void-type arrays.
",numpy/core/src/arrayobject.c
640a99d367e691eef576af04a29da06ba34acf23,"Fix assert_array_compare to handle boolean return from equality testing (which can happen)
",numpy/testing/utils.py
485f171d57748773f8f8d162e89cb668cfc55c11,"Fix buffered reduce, accumulate, and reduceat.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/ufuncobject.c,numpy/linalg/linalg.py
823ca7e3c354849238f15f1117f7cc8911933fb8,"In meshgrid, use views on the input parameters to avoid changing their
shapes. Fixes #169.
",numpy/lib/function_base.py
8027438e2ecf9333a23b116d5031a3b0abfab864,"default dtype conversion
",numpy/lib/convdtype.py
085ea43714e8f551d30840b0e60c7cc235ec53ff,"Working on Fortran analyzer.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/typedecl_statements.py,numpy/f2py/lib/utils.py
f72e5a81b1242f1d350b4a738393d085b4dba86b,"Redo mtrand.pyx with Pyrex 0.9.4.1: fixes bug in test_histogram2d on Python 2.3.5
",numpy/random/mtrand/mtrand.c
d4840f8838361de985aa8858aaf99bbe85a43621,"Convert linalg to use dtypes instead of typecodes
",numpy/linalg/linalg.py
a8672c2c5e1fe4ae0c51805aa1eed5d736a5eedf,"Working on Fortran analyzer.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/research/rat/rational.f90,numpy/f2py/lib/research/rat/wrap.f90,numpy/f2py/lib/splitline.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py,numpy/f2py/lib/typedecl_statements.py,numpy/f2py/lib/utils.py
17d8921d6d37745e01601fc19497ae2b4029b10c,"Check for error and asthetic spacing change.
",numpy/core/numeric.py,numpy/core/src/ufuncobject.c
fb9e2b032c62fa254bb1996e8c4e50488ab13999,"Fix .ctypes.strides and .ctypes.shape to return None (interpreted as NULL by ctypes) if the array is 0-d.
",numpy/core/_internal.py
dbee46ab3ef89d1f55cd72d1a61151df19009346,"Change the name to ctypes_load_library
",numpy/lib/utils.py
7a90a212488d7a55a939b3865b5236108fa28325,"Add a require function, a issubdtype, and a load_ctypes_function to NumPy
",numpy/core/numeric.py,numpy/lib/utils.py
6b7f2361d969f0ceda30c5fb10a309531aa27c03,"Convert docstrings to reflect change to floating-point defaults.
",numpy/core/_internal.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
c5f757c13b831d6ea4bfda80202b4e8ad0600574,"Fixed missing case in casting call.
",numpy/core/src/arrayobject.c
105354f5f3ff2ee7a7d6bcd8bd66b01889e44057,"Added more Fortran parser tests.
",numpy/f2py/lib/block_statements.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py
7221c116a95457b61364c82875e2a912250fee98,"Improve docstrings a little.
",numpy/core/src/arrayobject.c
e458361c888c24b062aaf1bd548e8f2b99458785,"Add _as_parameter_ method so arrays can be used directly as ctypes
",numpy/core/_internal.py,numpy/core/src/arrayobject.c
9ad24c52f3dd0cb3bfdc524214aad1c6e31e70cc,"Fix up failing tests.
",numpy/core/_internal.py,numpy/core/ma.py,numpy/core/tests/test_defmatrix.py
da42cda6ebd4666299c1287b8fdec82df15197fe,"Remove dependency on _internal.py from pickles. Clean up Py_ssize_t usage.  Add .ctypes attribute for use with the ctypes module if it's available.
",benchmarks/casting.py,benchmarks/creating.py,numpy/core/_internal.py,numpy/core/include/numpy/arrayobject.h,numpy/core/numerictypes.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
c00b40099043644cca23b6044c276ad72e9b8591,"Improve c_numpy.pxd a bit.  Re-name get_numpy_include() to get_include() and deprecate old name.  Add PyArray_ZEROS and PyArray_EMPTY macros which take type-number instead of data-type object.
",numpy/core/include/numpy/arrayobject.h,numpy/doc/pyrex/c_numpy.pxd,numpy/lib/twodim_base.py,numpy/lib/utils.py
b8030615d5b5bef97d212c7ef0ac7dff7e7d3bf6,"Adjust histogram2d a bit.  Fix doc for logspace.
",numpy/lib/function_base.py,numpy/lib/twodim_base.py
3bf7055cef2d027048f09d318cdff0dd3160d085,"Added histogram2d #161
",numpy/lib/tests/test_twodim_base.py,numpy/lib/twodim_base.py,numpy/oldnumeric/olddefaults.py
355f943419200c921e49c225dab44ac8da0d94db,"Fix typo shown in #164 and change dummy to two in PyArrayInterface
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
3584a117f79ae0ce6d18bc241ce533d11bc1f800,"Make 'assert_equal' handle tuples (not only lists). Closes #163.
",numpy/testing/utils.py
7d4055d0d856ef1bfa4b65052acb7164923a7cdf,"More unit-tests for Fortran parser.
",numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py
7ab5d9e22c75cea09a808d0bfe7419c97a928732,"For repr() of a matrix, add an extra space at the beginning of lines to line up columns.
",numpy/core/defmatrix.py
8ba48b04185cac855257173b664883e18b5f3172,"Fix up numarray requirements flags.
",numpy/numarray/numpy/nummacro.h
7d4c3ed2a0caebf1ce9e0da3473fdbde005699e5,"Make the default array type float.
",numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py,numpy/lib/mlab.py,numpy/lib/twodim_base.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/olddefaults.py
ec1662fb0182a87ebf39ec476109becfc7a8cdb1,"Writting parser unittests, fixed bugs.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/splitline.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/test_parser.py,numpy/f2py/lib/typedecl_statements.py
906855403e7b9853222af1c715202c86b226b71e,"Workout a way to access Fortran derived objects from C.
",numpy/f2py/lib/research/rat/main.c,numpy/f2py/lib/research/rat/main.f90,numpy/f2py/lib/research/rat/rational.f90
2b06537f480da6c75666b8c3ed8e45aa2aef6e59,"Cast to double instead of float in digitize.
",numpy/lib/src/_compiled_base.c,numpy/lib/tests/test_function_base.py
bbabc5c6e3ac6356056ec3f997c81bd430f3214b,"Add docstring and tests for digitize.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
339afa63fa51f0dec49adfc5b700f2b30f60407a,"Fixed lapack finding on intel-mac
",numpy/distutils/system_info.py
f570f1333cc483077f27526e6de24f6a45472487,"Fix up mtrand compile again.
",numpy/random/mtrand/mtrand.c
8af73d5a128335cd38be5cd2ee424373ea4c87c4,"Fixed import error.
",numpy/f2py/lib/parsefortran.py
ac36767b457ad25d3383fbb4ff4feea293ce4451,"Removed old files.
",numpy/f2py/lib/block.py,numpy/f2py/lib/init.py,numpy/f2py/lib/stmt.py
109772b31ff4c3e755fc21eb2ef3c0db267002ef,"Finished impl. Fortran 77-2003 parse pattern classes.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/sourceinfo.py,numpy/f2py/lib/splitline.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/typedecl_statements.py
9913769d0719b6cfca1b3d51baee8421ba7cf288,"Fix some compiler_cxx errors.
",numpy/distutils/ccompiler.py
b173aa1a6dc1c361d65150c6782db7618a5ff126,"Add simple indexing test.
",benchmarks/simpleindex.py
05bb6ebdf72a580c16b20a2c6b29c1a1f6c254f1,"Put back the test for bdist_egg when using setuptools
",numpy/distutils/core.py
d5a14e423b8ef4dce76d377d95b41e1665fa2945,"Don't import setuptools by default, but do use it if it has been imported.
The setupegg.py script can be used instead of setup.py to use setuptools.
",numpy/distutils/core.py,setupegg.py
59ae2e878fa70c47e7df5b948934aafb26ddd022,"Fix-up matrix indexing.
",numpy/core/defmatrix.py
b75bb07b82bacfe324ee631e7218b45f281a65e7,"from Neilen Marais: make numpy.testing compatible with the nosetest package with a trivial patch
",numpy/testing/numpytest.py
145d10cd37fe61c5dcdf1d5841b7d23b09751038,"Add benchmark for creating new arrays.
",benchmarks/creating.py
36c72bfc2118e52160d3445e06b6e1cc17a2cba7,"Add a function to retrieve a user-defined type number from the name of the associated type-object
",benchmarks/casting.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/src/arrayobject.c
47c92e4224ee36090289fcafa6820f749bc3d9b1,"Fix setting of sub-classes that over-ride __getitem__
",numpy/core/src/arrayobject.c,numpy/core/tests/test_defmatrix.py
f3ecc6649d31ccb1e83be632c43fd7bc61701934,"Add the code that generates lapack_lite from LAPACK sources.
This is from Numeric. I think we're still using the same generated sources.
",numpy/linalg/lapack_lite/README,numpy/linalg/lapack_lite/clapack_scrub.py,numpy/linalg/lapack_lite/fortran.py,numpy/linalg/lapack_lite/make_lite.py,numpy/linalg/lapack_lite/wrapped_routines
8290d01cba2320c7b1f9367f73356596d279c2da,"Add some documentation to linalg.py
",numpy/linalg/linalg.py
3263664f0dab43f4fe75017027d4fd74a30f89be,"allow _fillobject to handle non-object cases.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
e3af9216b8db1653c0cff98f3b861458b7c388db,"Add support for fields in VOID_nonzero
",numpy/core/src/arraytypes.inc.src
7ae3b470b424cd8f80fdf54eab22a7fa8ac127ac,"Add unit-test for record-arrays with object field.
",numpy/core/records.py,numpy/core/tests/test_records.py
41471a6e9fcf1a6fc18630b1f7d0716ba977211d,"Back out accidental change.
",numpy/core/records.py
7e4a505ceebc45e4bc90cf5093b6f59aa1125be8,"Fixes for objects in arrays.
",numpy/core/records.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
db8442b04f2b8dcc714dd974d0bd6407e9e054ef,"Add support for object-arrays inside of other recorcd types.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
4f442b4e66c4fa81d30b3ae152b8612ea23f1d99,"Undo move to numpy_numarray.
",numpy/numarray/_capi.c,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/setup.py
a73855cf27d42778e31f7cdbb0be5f54131c27df,"Renamed numpy/numarray/numpy directory to numpy/numarray/numpy_numarray to be consistent with setup file and usage instructions.  Modified _capi.c to use the new directory name.
",numpy/numarray/_capi.c,numpy/numarray/{numpy,numpy/numarray/{numpy,numpy/numarray/{numpy,numpy/numarray/{numpy,numpy/numarray/{numpy,numpy/numarray/{numpy,numpy/numarray/setup.py
bc7a2ecaade93a802543c7494427b7b8b73820ae,"Fix missing error checks.
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_numeric.py
ce9de277644a87d960c0813687f6e4d65827ed65,"Fix #157
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c
270fb0dd981acc777c2c83c66910485f5a804ea6,"Reduce size of buffers for small cases.  Improve reference count handling for OBJECT arrays in new broadcast_cast code. Fix swapping test.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
b2c84d9ad624f9adc3620a65c2d3c0353c03324d,"Revert previous change but add unit test to catch ticket #156.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_numeric.py
e70feca6cd7278a7bebc9a49f0cac3b2d071e0bc,"Temporarily revert change made in r2665 that breaks dot.
",numpy/core/src/arrayobject.c
ff660cb1a45a60128b6d934bc6977773b3ca7e34,"Cont. impl. Fortran parser.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/splitline.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/typedecl_statements.py
ecd8d3e9db972b5d1f3633266004942004052354,"Fix typo in README.
",README.txt
645875e245d43678def9916cf23510453670afda,"Allow void-type scalars to be sequences if they have fields.
",numpy/core/src/arraymethods.c,numpy/core/src/scalartypes.inc.src
b29933635ef46e3b88b4d31cb8d830fa2401c04f,"Fix init_by_array to properly initialize the has_gauss and has_binomial members. Fixes #155.
",numpy/random/mtrand/initarray.c
bc4afd84a0b5dc8afe93df70968699497384d54e,"Fix copyswapn to take strides.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/ufuncobject.c
94bb3f5326057c88c05a810fb18d10407ba4838c,"Removed unnecessary use of copyswap.  Fixed up argsort (and lexsort) on byte-swapped data.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
0ae92943953b2ea7f2a851202a7902c474e623e2,"Move code and fix VOID_copyswap to recurse through fields.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
cf80c7230397288b9f0c7b448bd9fe0c500dc323,"Add code to descend through a field and increment (or decrement) any object reference counts.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/lib/function_base.py
96b0a3aae9c5d509c7326b1ee101ac81fe65e52c,"Implement rich comparisons for flatiter objects.
",numpy/core/src/arrayobject.c
ff9041e31f70e9073a5c78ed62622707f22e8ec4,"Fix __array__ method of flatiter object to return base-class array
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
dd9f5c420f53ff98b3bead22e605eae83ea2c5c4,"Fix unaligned object arrays a bit.
",numpy/core/src/arraytypes.inc.src
39ca50790e56618334466ccf592f886f3f343569,"Get Object arrays ready to be part of a structure (could have misaligned object arrays.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
7dd0e2b1bffc4fed6ff4e4ac6160e3f5a714c784,"Clean up diag documentation.  Clean up PyArray_INCREF and PyArray_XDECREF to use new iterators.
",numpy/core/src/arrayobject.c,numpy/lib/twodim_base.py
696518364d950c63fc64ab026200c172b05342ee,"Fix the problems with SciPy.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
bfd42747a6c3c35f2eb612490a50a2173ca945d9,"Use INTP_FMT for formatting intp in strings
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
1d7c063912d334bdae1ca62da912debce9e943ae,"Cleaned up casting code to also handle broadcasting.  Several SciPy tests are still failing...
",numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/src/arrayobject.c,numpy/numarray/numpy/arraybase.h
d5a5da520b1eddd10a7dde79b0e7df281ee1abaa,"Cont. impl. Fortran parser.
",numpy/f2py/lib/base_classes.py,numpy/f2py/lib/block.py,numpy/f2py/lib/block_statements.py,numpy/f2py/lib/init.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/statements.py,numpy/f2py/lib/stmt.py,numpy/f2py/lib/typedecl_statements.py
1fe0237f46025a44779ad98974b9a587b6aa6ac8,"Fix ticket #76 -- copying now uses broadcasting.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
bcc293b75e2a266ff5be2f21921c1b12bda386bd,"Speed up some copying code.  Add MoveInto and CopyInto variants of PyArray_<...>.  Add PyArray_CopyObject to C-API.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
9b6417cb6ece0cb53aaac162b6caa839965c915f,"Add optimization for integer selection from array.
",numpy/core/src/arrayobject.c
851cbaad7361c218569a779e9d0e8d569001d907,"Fix memory leak in indexing code.
",numpy/core/src/arrayobject.c
1c2110fffea05d08fb327b68b552d4d0f830a63c,"Add boolean indexing capability mixed with slice objects.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_numeric.py,numpy/lib/index_tricks.py
165a1f58ad0a5f2dbe77a85bd1a3e4eb37b4daaa,"Fix binary_repr for large numbers and add test.
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
1e40d58f9f15217dc84331f2c827225dab229afb,"Eliminate more warnings and add fixes from #149 and #150
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/distutils/fcompiler/compaq.py
b8e7cedee377403b6de2a0081d73bad7a090f951,"Remove PyArrayinterface Version string from __array_struct__ and add consumption support for the descr member (when it's present in the PyArrayInterface struct.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
a44ae084ed7ceb38be0cfc0ad6a3ab405242ce0c,"Fixed build problem with Solaris compilers.  Needed to remove return values from void functions in numarray c-api.
",numpy/numarray/_capi.c
d33a8f627aee89c08c54e2f8cd37ecb888e5aca1,"Use hexadecimal lookup table for binary_repr.
Fix for input 0.
",numpy/core/numeric.py
d8645d71ca0fd6cafd462d2f9d999c0b18d19dc1,"Fix-up C-API support for numarray
",numpy/core/src/arrayobject.c
24b88b2c4aaffd71ae36268a759afe7e69f77d1d,"Changes suggested by experimentation with new data-types
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
4343bb6b99eeba83ae634d5acda27e28eaa5f77e,"One more name change.
",numpy/numarray/_capi.c,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray,numpy/numarray/{numpy_numarray
4854f609deb60adf731f7c5bf1cb89bf769f06bf,"Add numarray configuration command.
",numpy/distutils/misc_util.py
f17405eed765ef1aacabe7dbc05619b329a78ab1,"More fixes to C-API for numarray
",numpy/numarray/setup.py,numpy/numarray/util.py
669c8238d35fc7d60eba62f7499f9f624db908a6,"Fix-up C-API support for numarray
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/numarray/_capi.c,numpy/numarray/numpy_numarray/arraybase.h,numpy/numarray/numpy_numarray/libnumarray.h,numpy/numarray/numpy_numarray/nummacro.h,numpy/setup.py
b29b5900de7389529d369f35a5f9629e8463c275,"
Fix reference-count problem in z **= 1 and more numarray compatiblity fixes.
",numpy/core/include/numpy_numarray/arraybase.h,numpy/core/include/numpy_numarray/cfunc.h,numpy/core/include/numpy_numarray/ieeespecial.h,numpy/core/include/numpy_numarray/libnumarray.h,numpy/core/include/numpy_numarray/numcomplex.h,numpy/core/include/numpy_numarray/nummacro.h,numpy/core/src/arrayobject.c,numpy/numarray/_capi.c,numpy/numarray/numpy_numarray/arraybase.h,numpy/numarray/numpy_numarray/libnumarray.h,numpy/numarray/setup.py,numpy/numarray/util.py
4f3c3755d9fcbfd9ce0551c19bb893e7ba73db91,"Add missing setup.py
",numpy/numarray/setup.py
b89e39810fbe44c01dafd2f04faba2103c6e29b4,"Move include files.
",numpy/numarray/numpy_numarray/arraybase.h,numpy/numarray/numpy_numarray/cfunc.h,numpy/numarray/numpy_numarray/ieeespecial.h,numpy/numarray/numpy_numarray/libnumarray.h,numpy/numarray/numpy_numarray/numcomplex.h,numpy/numarray/numpy_numarray/nummacro.h
be04d9c4bc83b4075a32091712806a156a7728b8,"Adding numarray C-API
",numpy/numarray/__init__.py,numpy/numarray/_capi.c,numpy/setup.py
69ec66bfe980ee0271eaaea9b1fbd389a1a9a5ba,"Rename compat headers to numpy_numarray
",numpy/core/include/{numarray,numpy/core/include/{numarray,numpy/core/include/{numarray,numpy/core/include/{numarray,numpy/core/include/{numarray,numpy/core/include/{numarray
d95352902eb4d909dc13e8e8f7136169b15a9157,"Add ieeespecial.h to numarray compat.
",numpy/core/include/numarray/ieeespecial.h
f1e6e2b2fa0ef6bfa9f6f4ee832cfbc1fd817728,"Make import_array and import_ufunc MACROS again.
",numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/include/numarray/arraybase.h,numpy/core/include/numarray/cfunc.h,numpy/core/include/numarray/libnumarray.h,numpy/core/include/numarray/nummacro.h,numpy/core/src/_sortmodule.c.src,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umathmodule.c.src,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c
c6c3f19d4968ca1971830fddfe391a942ec29edb,"Draft of libnumarray C-API.
",numpy/numarray/_capi.c,numpy/numarray/util.py
aa2c1141f3782ac063f78380bead0be3a066c5cd,"Fix bad syntax in generated __config__.py files.
",numpy/distutils/misc_util.py
1dc30f8d0bcc069afe3a2eadcc9d7f7121e64a94,"**= Was being invoked twice when it should have gone through the fast path. Fixed and added a test that should capture it. Results was that that [0, 1, 2] **= 2 => [0, 1, 16].
",numpy/core/src/arrayobject.c,numpy/core/tests/test_umath.py
4eca92870b244259efee5585c6a856dd1e35ec87,"Adding numarray c-api compatibility.
",numpy/core/include/{numpy,numpy/core/include/{numpy,numpy/core/include/{numpy,numpy/core/include/{numpy,numpy/numarray/_capi.c
4962bf9cea6d261b3a6ea9b3318b76412af21535,"Adding numarray compatibility C-API
",numpy/core/include/numpy/arraybase.h,numpy/core/include/numpy/libnumarray.h,numpy/core/include/numpy/numcomplex.h,numpy/core/include/numpy/nummacro.h
da320f43a5e3e34d7c12e138f3cd40c0a81dfc28,"Fix docstrings in numpy.dft
",numpy/dft/fftpack.py
43de54a40a4a6894cccc0de71b6319099b710124,"Add meshgrid to NumPy
",numpy/lib/function_base.py
8456d5484c8f9e0f844d059dc2e30e54155d394d,"Updates and fixes to make NumPy compliant with array interface Version 3.  Still works with Numeric.
",numpy/core/src/arrayobject.c
23954ea53845ba6fec0f6424048292e7aa36c5fd,"Clean up array interface...
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
ee966df695a53e63641187a086735dec33e86b2b,"Fix abs(<complexscalar>) to return real
",numpy/core/src/scalarmathmodule.c.src
8a129527c7fed3c5d88416e92beaa1a7d73186b8,"Fix Python 2.3 incompatibilities
- use of a generator in core/tests/test_numeric.py
- you can't set __name__ on a function in 2.3
",numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/lib/utils.py
b05d85bd8d6dc1fde66ee40b99be66a338d96424,"Fix deprecated for when the function doesn't have a __dict__
",numpy/lib/utils.py
1174b739acf3637626ef216f970bee84e545fe99,"For `deprecated`, include a note about the function being deprecated in its docstring.
Also set the __name__ attribute and copy over function attributes.
",numpy/lib/utils.py
bd83339b9e42ddf3d92339b41e6a6bb93ce68051,"Fix name issues in fftpack.  Add OpenBSD support to floating-point handling.
",numpy/core/include/numpy/ufuncobject.h,numpy/dft/fftpack.py
2f4a9678f04a3eab6878f4694231d4848e127490,"Expose deprecate function
",numpy/dft/fftpack.py,numpy/lib/utils.py,numpy/oldnumeric/compat.py
439ea9dc39d6ab0c4052b0881d0f6fed5e8c344f,"Make refft -> rfft and have old names for backwards compatibility.
",numpy/core/src/arrayobject.c,numpy/dft/fftpack.py
d5a134b8bc96cf1e63c31c0ce933e442adb77c2a,"Fix-up unicode comparison for mis-aligned arrays.
",numpy/core/src/arrayobject.c
d1e359d1a85be3905a0c760464ba986171b589fc,"modernized ufunc attribute access
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
80d85d62e932f97494387b66be3cfadbab5bde8d,"Remove print statement.
",numpy/lib/function_base.py
b91fea230651e442df868a605b9a33e778b15729,"Add error message.
",numpy/core/src/ufuncobject.c
4cd71bf7016873c4f75d3206c516cf8505eda31d,"Fix bug in _myunincmp.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_numerictypes.py
11869d369ab71f39d4a152260f88fae4df276378,"Compress Python-side array interface to __array_interface__ attribute.
",numpy/core/defchararray.py,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
6a4ff2dcd299ec2cc154726fbd04cad284edbb10,"Rework numpy.testing.utils.
This tightens up equality tests a bit; some tests in numpy an scipy fail.
",numpy/testing/utils.py
b65ac291abf9fb443f7e581635ee3ffe04415e66,"Remove -Wstrict-prototypes from C++ compilations (it's an invalid option for
C++).
",numpy/distutils/ccompiler.py
fcf1365e8c1617eb649955b2e2e430a25e867420,"Add CObject API
",numpy/random/mtrand/Python.pxi
7a957813bc80e45b1707535c5ae6cad65c8d84b2,"Preserve matrices.  Fix #142
",numpy/lib/function_base.py,numpy/lib/shape_base.py
bc5dc0aeeca04450fd4c6b44da55dc812e5a3f94,"Fix-up imports a bit.
",numpy/lib/mlab.py
6408d0d38af09323b9192d0185f8435060e4e93a,"Fix-up oldnumeric module
",numpy/lib/mlab.py,numpy/oldnumeric/__init__.py,numpy/oldnumeric/setup.py
fbf0b479604c22e60215bb28cdedabfb821b9d75,"Check-in name-space changes so that numpy.oldnumeric is the compatibility module and numpy does not contain all of the names.
",numpy/__init__.py,numpy/core/__init__.py,numpy/core/arrayprint.py,numpy/core/{oldnumeric.py,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_oldnumeric.py,numpy/lib/convertcode.py,numpy/lib/function_base.py,numpy/lib/machar.py,numpy/lib/mlab.py,numpy/lib/shape_base.py,numpy/oldnumeric/compat.py,numpy/oldnumeric/tests/test_oldnumeric.py,numpy/random/oldrngstats.py,numpy/setup.py
b5e35c7c5c715d58aca9638e40098d044b8b8dba,"Checkin another error I found and not checked in, in numpy.distutils.system_info
",numpy/distutils/system_info.py
353954f03e20cfdcef94e5de8d50f59a2125a549,"Fix 'UnboundLocalError' in numpy.distutils.command.config
",numpy/distutils/command/config.py
cc961e3f6758e563be1bf3bf25ed5e6367036e65,"Fix ticket #140 where objects in a field could be specified but resulted in segfaults.
",numpy/core/src/multiarraymodule.c
c0d32936d1991a2cd8a75b21b805777c18be66e9,"Apply patch #137
",numpy/core/defmatrix.py,numpy/dft/fftpack.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/testing/utils.py
844fd39844d3930ffa9c98c7d569b1f9829671ff,"Changed normpath to normcase to close #129
",numpy/distutils/conv_template.py
275ac5fec0f89c354aeefbd554445fb5e608bfe8,"Fix logging when 'None' is used to disable environment-variable
",numpy/distutils/system_info.py
ac34fb932e37901c3b25d0e6c9759d14e9dd0974,"Fix incorrect type in PyArray_FromIter
",numpy/core/src/multiarraymodule.c
9bd3b4edcb4dfaab47bca4bfaf9407063303b211,"Replace Python version of fromiter with one coded in C.
",numpy/core/numeric.py,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_numeric.py
77762150377d2edd8934b3547f83f3a70ec75b6c,"clean up scalar assert_*_equal in numpy.distutils.util
",numpy/testing/utils.py
2e40c9069fcc01fadcc85c08955f134cc024c3dc,"Add docstrings, update common_type to return a scalar type instead of a typecode.
",numpy/lib/type_check.py
4d4224461cf4e33b6ee66006254ea5273fc82583,"Add a version number to pickles of ndarray and dtype.
This is backwards compatible. Also added test cases to make sure.
",numpy/core/_internal.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
de1dedc34a2ec31c35a108b9d558484e81c17bb1,"Fix syntax error in numpy/random/old.py: can't use import * in functions anymore
",numpy/random/old.py
6768d24e4709c080d0ed5c7dca1f36f759fa8ba2,"Add RNG interface and clean up old-interfaces to be separate from newer ones.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/dft/fftpack.py,numpy/dft/old.py,numpy/lib/convertcode.py,numpy/random/old.py,numpy/random/oldrng.py,numpy/random/oldrngstats.py
e0bd761dc33d9716be220d6481756aa982599132,"Fix typo in system_info (at 6am 'libray' looks like 'library')
",numpy/distutils/system_info.py
8360b0b8762b4abf64e6528acd8514b655ab360c,"Update mtrand code
",numpy/random/mtrand/mtrand.c
13c9eeff4ee39555967f05be054111a695bd7cfc,"Use dot instead of matrixmultiply
",numpy/random/mtrand/mtrand.pyx
a5b115b97ffed88cd7d159d944105bb748d44cf6,"Add patch for #141 from Andrew Straw: standard setuptools install idiom fails
",numpy/distutils/command/install.py
d4ea24a49b077407a991afc1475a61dbd5e19335,"Make system_info saner.
* Add a get_output() method to the config command, which compiles, links,
  and runs a program, and returns the output from that program.
* Also cleaned up some stuff. system_info uses log instead of print.
",numpy/distutils/ccompiler.py,numpy/distutils/command/config.py,numpy/distutils/log.py,numpy/distutils/system_info.py
79ab0f4ba033372dc568a115b52fa013f7433495,"Add power to integer scalar types.
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_scalarmath.py,numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/gnu.py
d1db955edafd63f3cf7d3a331ce3bba94dde48ae,"Add docstrings to numeric.py, especially for seterr and geterr.
",numpy/core/numeric.py
8f7d59f607e418a5b9e09295a0c87aff5d0f2b1c,"Fix unravel_index docstring.
",numpy/lib/index_tricks.py
858fdcea384a8b7c2460ec00501a26d8caa6995c,"Impl. Fortran parser cont.
",numpy/f2py/lib/block.py,numpy/f2py/lib/init.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/splitline.py,numpy/f2py/lib/stmt.py
d3d8f52c27e035bcdfd52344a03c370299a75196,"Remove TIMSORT
",numpy/core/src/arraytypes.inc.src
c78cdbb6968c748b5028196d72e61c92f8267243,"Remove TIMSORT.
",numpy/core/src/multiarraymodule.c
38d4b852ee1e6b97415b2d752378b94787593c64,"Comment changes and remove TIMSORT.
",numpy/core/include/numpy/arrayobject.h
ec90f8f51954fe890a5f608c13eb2e057fe837f6,"Change rand and randn back to not take tuple argument.  Alter docstring to alert user what function to use to pass in a tuple.
",numpy/random/mtrand/mtrand.c
252b09d263678204ee5c30722dd5664cb5279d1a,"Change rand and randn back to not take tuple argument.  Alter docstring to alert user what function to use to pass in a tuple.
",numpy/random/mtrand/mtrand.pyx
241a113911649a7f43b4f1a2b99ca49ecd7e709a,"Allow user-defined data-types to participate in the casting infrastructure.  By default they cannot cast to any other data-type.  But, this can be changed by using RegisterCanCast.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
c7471028b5b053f7e2c0db6028d5f2c83174dc1a,"Fix so that user-defined data-types aren't silently attempted.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/ufuncobject.c
71ec2db3636ecc0a8180a4656c854ee089ae6690,"Allow registering casting functions to built-in datatypes.:
",numpy/core/src/arrayobject.c
ba90d59094378655490981d9add81df429b3f1c9,"Allow tuple argument to rand and randn
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
ebc3848e61739bea11645168bd4725b5760fa741,"Remove deprecated names from ma and tests.
",numpy/core/ma.py,numpy/core/tests/test_ma.py,numpy/lib/shape_base.py,numpy/linalg/linalg.py
ce9414d3007101af1c18d674bd162cdef48c564d,"Use convertcode to replace matrixmultiply with dot.  Add DeprecationWarning to several old Numeric calls.
",numpy/core/oldnumeric.py,numpy/lib/convertcode.py
4327faedf775668e4d2178f0ddd27ced9a082a7c,"Add some checks for RegisterDataType
",numpy/core/src/arrayobject.c
f68932abd4c908f8f312c5d4c515630b2976a669,"Fix syntax errors from last commit.
",numpy/core/src/arrayobject.c
f116819dfb4d974e6c4878e3d40420b8b4a2951f,"Updated NDARRAY_VERSION**  Added RegisterCastFunc and moved RegisterDataType.
",numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
aba0c68744443f55e8c133343f23d0a9f62e4a0c,"Improve registered ufuncs so that they can coerce data to and from user-defined data-types.  Clean-up _SOFFSET_ macro.  Make sure that user-defined types always succeed in CanCastSafely.  This is a hack but there is currently no way to record this information.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
98533e5228e7517c530c2e131d281e0d4e071c5d,"Fix-up casting so that registered data-types can register casting functions as well.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/ufuncobject.c
0293199869cce0a8dab3a589ee7b05249ff6be33,"Fix-up handling of registering of data-types.  Now it is done using a PyArray_Descr * object as it should be.  Any Pyarray_Descr * object will do.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
ce75dc9f0921a81cb16fe8d79a3a5ba24efbb922,"Allow lexsort to take any sequence as an input.
",numpy/core/src/multiarraymodule.c
24ed9eb8234e25ba435d8d6fb34e7c275b4c88aa,"Fix up comments and checks in buffer setting and error-function setting.
",numpy/core/numeric.py
ce2f12baf0e3ae608e520dd345c4517efe36aff4,"Remove broken optimization...
",numpy/core/src/umathmodule.c.src
9f88ecbc10e7a1f56e2eb1b8445184263111a1cf,"Comment changes and change var and std to divide by N instead of N-1 
",numpy/core/src/multiarraymodule.c,numpy/lib/index_tricks.py
5a85dd3d9557c5aa4119ced4ebd47e0e8e3f1142,"Fix-up test_scalarmath to compare against ufuncs.
",numpy/core/numeric.py,numpy/core/tests/test_scalarmath.py
56be9fd122e1ea37e6bec3abaf0f4714284a5380,"Change squeeze to not return array scalars.
",numpy/core/src/arraymethods.c
1258bc1baaad7ca29d50a82f6aeea2a57fe3e0eb,"Fix-up the work-around.
",numpy/core/src/scalartypes.inc.src
db819d97b7cb4ff27347fd2fd84e826833b58860,"Work-around Python bug in complex_number new for subtypes.  Also change a few comments.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_scalarmath.py
4b27d2291c67ef476254dba1277ca2e43152165e,"Add more complete docstring to ones_like.
",numpy/core/code_generators/generate_umath.py
c81bb8372e5e5f29d506b10f61a9052ee9f59f03,"Updated g95 version pattern.
",numpy/distutils/fcompiler/g95.py
89294ae940833da001a9d276a721a4fd0658854b,"Improve compatibility with Numeric character arrays.
",numpy/core/src/arrayobject.c
69b323a02ca50f55ec038449a170493eb1598f46,"Add constants for backwards compatibility
",numpy/core/include/numpy/arrayobject.h
30c9eebbb9f4d4dfcfbdbcfd5ee892ff45ffa4a5,"Added scalarmath tests.
",numpy/core/tests/test_scalarmath.py
526039a407248404c6c29cc391a55f569cf24742,"Add Macro for PyArray_DECREF_ERR to improve recovery on an error condition for arrays with the UPDATEIFCOPY flag set. 
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/ufuncobject.c
b5d7bcc7aa3718d40cfd4f6dbb0d793bfcfdefc7,"Add _scan for BOOL, BYTE, and UBYTE.
",numpy/core/src/arraytypes.inc.src
7e7b874568bb08b8f22fc38f15df40aafa6571ef,"Fixed new fortran reader and parser bugs.
",numpy/f2py/lib/block.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/sourceinfo.py
9b185702f5142bada883f3231a889679d25033f2,"Factor simple subscripting out into separate functions.  Can't really do it first because of Boolean arrays and list-treated as integer arrays.
",numpy/core/src/arrayobject.c
a12cb7b1dab184bae0f1ae9931292778afc93f5d,"Cont. impl. fortran parser, added do and ifthen blocks.
",numpy/f2py/lib/block.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/sourceinfo.py,numpy/f2py/lib/splitline.py
4de4ac85272818496e6bd4868b66e1690ee26f65,"Add row_stack as alias to vstack to complement column_stack.
",numpy/lib/shape_base.py
6dac6a0454542d25f943ca8c48bb4ba72714ae5d,"Apply Stephan's recommendation to fix issue #129 with line directives on mingw32 build
",numpy/distutils/conv_template.py
fff3c3f3b186d5a7cbbd3f4440b8f99f2035e733,"Impl. simple fortran parser.
",numpy/f2py/lib/block.py,numpy/f2py/lib/parsefortran.py,numpy/f2py/lib/readfortran.py
f3d3c4bc5b59da6dc9cd0343aeaf523a71521408,"Removed win32all dependence from numpy/testing/utils.py
",numpy/testing/utils.py
95d1996b0d4c3bc87d608561769d12667d82f25b,"Add inline f2py directive support to new fortran reader.
",numpy/f2py/lib/readfortran.py
0c7da8ae1e9464b9ad8b7458690513622b17e4ff,"Impl. new and improved fortran file reader (remembers line numbers, comments, gracefully reports errors and warnings etc.).
",numpy/f2py/lib/__init__.py,numpy/f2py/lib/readfortran.py,numpy/f2py/lib/sourceinfo.py,numpy/f2py/lib/splitline.py
5c82fafac476980e1d487ca4aa06621390aa6c26,"Fix reduceat reference count bug.
",numpy/core/src/ufuncobject.c
1558871def68c543b840755e9d446f257cf5736c,"Fixed bug in scalar casting..
",numpy/core/src/multiarraymodule.c
0af4c99f67ca552646fce0edb93905a042b6248f,"Do replacing nulls with ' ' after strncpy correctly in f2py.cfuncs.
Also corrects some problems with buffer sizes
",numpy/f2py/cfuncs.py
09a1eb6b32eaa3ad1ed980d32930cfda0e0c930f,"label g95 as the G95 Fortran Compiler, not GNU Fortran 95
",numpy/distutils/fcompiler/__init__.py
4aa8a924509dc4f66ebc488a56cf49e6d259d540,"Fix problem causing segfault in ticket #126
",numpy/core/src/scalarmathmodule.c.src
267228a6d819c857a5c1fe6dcea85b90781ea7cc,"Intialize the has_binomial field of the mtrand state.
",numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/randomkit.c
dc9088641bb96139279bf06b5a4672da3c466960,"Fix unitialized error for 0d arrays.  Tickt #124
",numpy/core/src/ufuncobject.c
7ce372cd615b1b914e4758069989831034b3b583,"Simplify argwhere (maybe prematurely added), and fix memory leak in #125
",numpy/core/numeric.py,numpy/core/src/arrayobject.c
d382977b4ac76f693c29082f62fc713680473364,"Add feature: read f77 compiler flags from source. Added a section for extra features in numpy.distutils.
",numpy/distutils/fcompiler/__init__.py,numpy/doc/DISTUTILS.txt
72c0d33f146bb7f40f70868f055851ba037837ab,"Add comment.
",numpy/distutils/command/bdist_rpm.py
4e6f53af6e8fe821b43490347751dce05a911fda,"Set NUMERIX env variable in get_info('numerix')
",numpy/distutils/system_info.py
224328314df74d60aa94380c15810a1eb7de6b96,"Added transpose tip to where() docstring; cleaned up lexsort docstring
",numpy/core/src/multiarraymodule.c
e6001018db154ccedecd6c7f0466b351fded0768,"Better docstring for the nonzero method.
",numpy/core/src/arraymethods.c
3f7fc98591d11b0a67372699371843f9fd019e36,"Update head revision to 0.9.9
",numpy/version.py
1b425c5c98cfd68dff1741e35cb4e846b78fbd99,"Rename fromflat to unravel_index.  Add argwhere function.  Change where docstring to reflect truth.
",numpy/core/numeric.py,numpy/core/src/multiarraymodule.c,numpy/lib/index_tricks.py
a27f468bd852b6ff7cce4740c2980b5e66081e41,"Change from C++ comments
",numpy/doc/swig/Series.i,numpy/doc/swig/numpy.i
0f8a56410d6a780eb23558f33e9ef01759922dfc,"Fix memory leak in PyArray_Round that probably caused error in ticket #110
",numpy/core/src/multiarraymodule.c
6fcac575b2263913fb3308868fec7792278441df,"Remove memory leak from scalarmath in ticket #123
",numpy/core/src/scalarmathmodule.c.src
0eadb3629d6dcff537946584a1ad2ab85d177a9b,"Add test for multidimensional argmax.
",numpy/core/tests/test_multiarray.py
cdaebaae5aaaca62a93ae183c0f5a32dc5a20880,"Fix argmax and argmin problems for multi-dimensional arrays.  Closes ticket #119
",numpy/core/src/multiarraymodule.c
8cfbbe13d9a2c94529e2d2c06a8e154d9892c8c4,"Fix for using NAG Fortran 95, due to James Graham <jg307@cam.ac.uk>
",numpy/distutils/fcompiler/nag.py
c3f83e91f1e60e5c01d02bf6d6f2f9e58677f252,"Better handling of string representation of longfloat and clongfloat arrays.
",numpy/core/arrayprint.py,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
2733a07a2c0cbe08af8f6e30d75fa032a416bb60,"Fix #120: array.transpose() too lenient with its arguments.
Change PyArray_Transpose() to either take a NULL argument, or a valid
permutation of the axes (has to be the same length as the number of axes,
and no repeats).
",numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
887e22a6ca6545e5739080bdff800e3f774b0e36,"#107: Directory name build/srcipts-pythonversion needs platform information
",numpy/distutils/command/build.py
6cf0da748afc8580030027c8390a5139034d75b8,"Imperfect fix to longfloat arrays printing with inf (#112); use '%s' as the format.
",numpy/core/arrayprint.py
b686a426271d7654bbca0c5365369414c2283109,"Fix for linspace (#118) was incomplete; good now.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
a1445160dea079dd0e1c82fcda7729d3809b13d7,"#118: linspace should always return floats
Patch from stefan; fix special case which could return an array of one int.
",numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py
38c83aba3369696b4d3053e2081dd490c7a18c66,"Initialize a potentially uninitialized variable in scalarmathmodule
",numpy/core/src/scalarmathmodule.c.src
7b4dcf86bf4a27007a9b29dd20ce087f4e522a39,"Use sasha's patch to add #line to generated files (#85).
Already helped with some compiler warnings, so I'm liking it.
",numpy/distutils/conv_template.py
2e18a0607bbbdc986645f640e35e2d5fefc5b9d5,"Better a.transpose() docstring (fixes #121)
",numpy/core/src/arraymethods.c
a0ff0db8a3a5daa5d06f47c9c849887b23fe387b,"Use a hack to get numpy to install with easy_install (#81)
I couldn't find any other way; see the comments in the code or my discussion
at #81 for why this is necessary.
",numpy/distutils/misc_util.py
b6f1d9f6fbabba198441679ffde7ac651b9fd842,"Add 'q' to _array_kind and fix argmax which doesn't need to swap back axes.
",numpy/core/src/multiarraymodule.c,numpy/linalg/linalg.py
57acda4d624eb9a09c9230c7b8ce0011cffc5ba3,"Warning messages from numpy.distutils.misc_util.Configuration are printed in blue
",numpy/distutils/misc_util.py
88698f42f4600d81eda4a3254d3b177338f68b07,"Fix defect #115
",numpy/core/blasdot/_dotblas.c,numpy/core/src/arrayobject.c
1f5827c2a0b8a64da946eb72dfbb261ab09d0f4d,"Fix defect #111
",numpy/core/src/multiarraymodule.c
834d4dd20ea038e4bfd0dd7f9846d285c369cd5c,"Fix up warnings.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umathmodule.c.src
7cd1911082f7c2a431cd8bee944ac0abc61c8f9b,"Fix crash for zero-size arrays.
",numpy/core/src/ufuncobject.c,numpy/lib/index_tricks.py
916b29a1040d0d83ac6beef1138112873581b61e,"Fix crash for zero-size arrays.
",numpy/core/src/ufuncobject.c
650e266a61717c74ec46c090780afa255ca15a51,"Fix ticket #109
",numpy/core/blasdot/_dotblas.c
e8afda1a687cd786cffaaf8e8a287311976dee60,"Finish adding scalarmath and import it.  Mixed-types are handled with ufuncs still.
",numpy/core/__init__.py,numpy/core/include/numpy/arrayscalars.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_defmatrix.py
0823dec46c105b43feae508c757cfbc49c0d5471,"Apply patch for ticket #83 to make matrices return scalars on axis=None reductions.
",numpy/core/defmatrix.py
ac244d26c185bcc79e2d22bc008dee1e40692d8d,"Fix ticket #106
",numpy/core/blasdot/_dotblas.c
67eeb36aee72eae9a2ac42765fb11b63613f05cb,"Fix ticket #104
",numpy/core/records.py
8ff1adedbdde89ebed3e5ce1a01637814eb7464d,"Fix byte-swapping problem for ticket #105
",numpy/core/src/arrayobject.c
249e8aa128d9496e0ef001f65a8a8823a4f14505,"Fix ticket #102 and a few other 1-field descriptions.
",numpy/core/_internal.py,numpy/core/records.py,numpy/core/src/multiarraymodule.c
6d3dd20beaf6a05d157f0ea9876f3e7950e4a099,"Added matrix method test from ticket #84
",numpy/core/records.py,numpy/core/tests/test_defmatrix.py
d874c8beca6c62c5cabcffae87bde647576329fc,"Fix field method to always return fields.  Fixes ticket #101
",numpy/core/records.py
4a0b99752e3d0fc70e643bf27b13b315edaf7440,"Add missing Py_INCREF to fix ticket #95
",numpy/lib/src/_compiled_base.c
56dc16d4724f4ace37241073a8933c818849a3c1,"resolve ticket #89
",numpy/testing/utils.py
8fa627561de6f87c5150cf694168081d5e97f999,"Fix-up optimized dot when strides is not a multiple of the element size.
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
a504789d554d01c7c90b5f645fe1de8ef5800ac7,"Fix field-comparisons for EquivTypes.  Fixes ticket #94
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
f7008485fb30ceb721703a2c28d4a8f3ffdd8bdc,"Fix type-error oddity in defect #92
",numpy/core/src/arrayobject.c
865200df355af8a6f2ff31e8668b89b2807e3874,"Fix for ticket #86
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
8cc0a0884a28034a62808bc6133b82c56c89de3b,"Fix Issue #93
",numpy/core/src/multiarraymodule.c
a14d6fe4670f4a18146e99f2f62c4626e6e23f38,"Fix-up swapping error in iter_subscript.
",numpy/core/src/arrayobject.c
0198361ec2339eb05e8b7677ad75225d5a5cf679,"Moved the declaration of retstatus above the variable assignments in the #if/else block to make the syntax C like instead of C++.  This is a slight modification to revision 2472.
",numpy/core/src/scalarmathmodule.c.src
29bdfcd3917d134a52eeda901816008eb59ce704,"Removing bool scalar nb_add and nb_multiply functions as they appear to give incorrect behavior and break clip.
",numpy/core/src/scalartypes.inc.src
9098bf39d2bc30cbb0162c92126a5b7c97901371,"get_info returns deep copy of a dictionary, fixes bugs when one modifies info dictionary objects.
",numpy/distutils/system_info.py
1418439c292cf8a246a0a636e37a38bbb50afa3d,"Added numerix info class to choose between different array backends using env variable NUMERIX.
",numpy/distutils/system_info.py
aa00fd2c05034316bb78251fbb54fa936030d6d2,"Fixed doctest usage 2.4-ism.
",numpy/testing/numpytest.py
30581a54d96448422cc550143e2b6fb860ef5c45,"fix: `emath` instead of `nmath`
",numpy/lib/__init__.py
b2808893e27b969ffe7e9cf07020b0a3fbba42a2,"fix compile problem (patch by Ted Horst)
",numpy/core/src/scalarmathmodule.c.src
087ef6d0965df5572288b51773e1f6d61567db71,"numpy.lib.scimath --> numpy.emath
",numpy/lib/__init__.py
f544e777b5124da236b2fb2afefcf310f025042f,"Add math module to numpy namespace so numpy.math works same as Numeric.math.  Change numpy.math to numpy.nmath
",numpy/lib/__init__.py,numpy/lib/function_base.py
45330187562c533df24917c04f40050f81190814,"Fix array('mystr','c') so it works as in NumPy
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
356e93e2e3d18a44bbf63a95b487fc91a1fed147,"Add PyArray_CHAR as an alias to PyArray_STRING with element size of 1
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalarmathmodule.c.src
20cd0157fa6a3ff3ad2f431965092caf1246646c,"Fixed prune file pattern - subdirectories were exluded by this bug for add_data_dir.
",numpy/distutils/misc_util.py
1615d531bea612238c3bdffb35289e13bc792e8e,"Impl. NumpyTest.testall method that looks for test methods more agrressively than NumpyTest.test
",numpy/testing/numpytest.py
fe2076907f6245231857df946e08d656b7303236,"Fix #90.
",numpy/random/mtrand/distributions.c
7a10bcdf14827bef1ba4b79fd4bd4f92bc9e84be,"Made only/skip f2py options active when using -h option.
",numpy/f2py/crackfortran.py
ab513918819e227187168222ca8a81dc996d89ca,"Changed rundocs to closely follow procedure outlined in the docs for imp.load_module. This fixed a bizzare error where tests would run fine the first time through, but would fail the second time through when loading from a pyc file.
",numpy/testing/numpytest.py
b3bf22851ebe0096dcf504f9576ce6d14ff42817,"Fix absolute which does not contain the needed functions...
",numpy/core/src/scalarmathmodule.c.src
f6a6d8fde5eb4a02505c02980b74812f26d16642,"Implement int, float, long, oct, hex
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
f399dfcc9cdbc454522c69852e188f2907364bfa,"Fix up usage of platform-specific functions.
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
40cc08de6d5fa4f7cc518c7caa97e196259e03a4,"Fix type of _PyArrayScalar_BoolValues
",numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayscalars.h,numpy/core/src/scalarmathmodule.c.src
da478e7332dc8dd0fc9a3fdbc1101a7eed831990,"Fix-up size check for 64-bit
",numpy/core/src/scalarmathmodule.c.src
42f652d713fe507b5648dfe57987e3744acfe685,"Fix so correct return value happens in get_functions
",numpy/core/src/scalarmathmodule.c.src
37b177864b0d4a5fa5add75a64b020db6cf533a4,"Finish up scalarmath.  Needs testing...
",THANKS.txt,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umathmodule.c.src
638ed060ef7a79e3892ef4d2db4444cf2794d193,"Implement divmod
",numpy/core/src/scalarmathmodule.c.src
ed4b92a17d3972d5537396344a4880ea0cfc1da2,"Fix true_divide for integers.
",numpy/core/src/scalarmathmodule.c.src
6172e536a2cbf76fd7ff8b947db11c4542998fdd,"Add ctype_true_divide, ctype_divide, and ctype_floor_divide for integers.
",numpy/core/src/scalarmathmodule.c.src
1640c112ed63ee5251109a62e131e2ca0ac21f5a,"implemented @name@_ctype_(l,r)shift
",numpy/core/src/scalarmathmodule.c.src
1dc253cf87be58ed0d57c98d91ee8038750db94a,"implemented (float,double,longdouble)_ctype_remainder
",numpy/core/src/scalarmathmodule.c.src
18d4b43bec7390282ee944b673fbdc5b7779f4eb,"Fix typo
",numpy/core/src/scalarmathmodule.c.src
a974a0667c20ffe6670db29843c2a75edf2d4d05,"Fix typo
",numpy/core/src/scalarmathmodule.c.src
81588c84e2b2193cb1d9b54758d2ffb9161cf951,"Perhaps floor functions should be present
",numpy/core/src/scalarmathmodule.c.src
b31750988b97901c96bc5ff906ee281534753727,"Add multiply and floor_divide
",numpy/core/src/scalarmathmodule.c.src
46abd33794766b162d6b60f15ef042630746e96a,"implemented (float, double, longdouble)_ctype_power in scalarmath
",numpy/core/src/scalarmathmodule.c.src
a129ce4f8b4d8ff6910a476b5fa8e6c7e99b04ea,"implemented @name@_ctype_(positive,negative) in scalarmath
",numpy/core/src/scalarmathmodule.c.src
77dfa4121ddec3518bc58553598f9b0f6750aa9c,"implemented @name@_ctype_absolute in scalarmath
",numpy/core/src/scalarmathmodule.c.src
f37d7f1909f7a6e18c541c853c2b126ef2854de7,"Fixed up nonzero --- it doesn't need a ctype implementation anymore...
",numpy/core/src/scalarmathmodule.c.src
66e926b38691ace409835b8492a53f74121cb983,"implemented @name@_ctype_nonzero in scalarmath
",numpy/core/src/scalarmathmodule.c.src
c10618c8b35ee51475627289169caea1fc39c3af,"Fix nonzero and go back to using Generic scalar handler on failure in main scalar routine.
",numpy/core/src/scalarmathmodule.c.src
3caa584104049198562906e3e72f25dd298748b7,"implemented @name@_ctype_invert in scalarmath
",numpy/core/src/scalarmathmodule.c.src
c7737e63883e9ca4392f372d5a55978ed99dc23e,"Fix indentation error.
",numpy/lib/function_base.py
91548d0acc47252111725f4fc467f21a64659394,"Add improved checking for number of arguments to support more functions
",numpy/lib/function_base.py
92e59def160e1d6c340e997fbcec0c01363bcf87,"Fix missing error check.
",numpy/f2py/src/fortranobject.c
808ea6e96da4b06398ff3a3a971e337e1c400b9f,"Fix typo and warning.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
f452b595d1dd481cc24190a7c5f6fa73bd71368b,"Add EnsureAnyArray as a function instead of a macro
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
de1b419c150add9b3f91ccfeccfb49e933ba0b95,"Bump up version number.  Fix methods on matrices to preserve order.  Add more scalar math (it now compiles).  Add a missing API.
",numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/defmatrix.py,numpy/core/include/numpy/arrayobject.h,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
6d4a9d0b1cc56a45286e118a67dad5dd0a21e343,"Fix typo.
",numpy/core/src/scalartypes.inc.src
17a767507d75c8375fd22d75f72091c56447773f,"Add a couple more ufunc API calls.  Add more to scalarmath.c.  Get rid of overflow checking on multiplication.
",numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
d526919782dc88d77f18b800b79aca23d657ee87,"Better uninitialized variable fix in array_richcompare
",numpy/core/src/arrayobject.c
24893ed1f51a4566a74a18421a2a78a3d84c0497,"Remove print stmt.
",numpy/core/tests/test_records.py
3f682ff50232c35610ff885c6c1a7e3d400866d7,"Added NumpyTestCase.rundocs method to support running doc-tests via unittest machinery - needed for running tests via testoob.
",numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_ufunclike.py,numpy/testing/numpytest.py
7413032ea6011c74524aa5ecc384b2ae4964d6e9,"Apply replace ScipyTestCase->NumpyTestCase. Fix tests for testoob.
",numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_unicode.py,numpy/doc/DISTUTILS.txt
b01cd88166e84fd8510ad74c231a5aaf0ae4879d,"Added importall function that recursively imports modules. Convinient for detecting any import problems.
",numpy/testing/numpytest.py
f6c56c197f7b3fd245615e2c9bc862b815309c57,"Try harder to get swig module name when in package.
",numpy/distutils/command/build_src.py
0feed10e39e924798036105221ea26f90743c684,"Fix warning about a potentially uninitialized variable
",numpy/core/src/arrayobject.c
1871d95bca3b9d1af462814b0c24a2073b73f8a1,"Better concatenate docstring
",numpy/core/src/multiarraymodule.c
39e6217284a36d4ee447a7c60aacf971f27b67fd,"Add new C-API function in middle.  Bump C-API version number.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/lib/function_base.py
6a720229ed41099a47ea8f94ca10bcdeee8f898d,"Slightly different fix to vectorize.
",numpy/lib/function_base.py
e328ecf10f570df8900438ec9e727b3af68c7f84,"Fix vectorize to handle scalar return values.
",numpy/lib/function_base.py
d2dfaf23b530b7f932e225fba71ca0194258864a,"Fix compiler warnings about returning int in void function.
",numpy/f2py/rules.py
b61fc7441ca8c1a0b239bbe292615ebbd7c4a0a6,"More additions to scalarmath
",numpy/core/src/scalarmathmodule.c.src
1516b86b813d530bf816d4a9cf939d89647c3cf2,"Some asthetic macro changes.
",numpy/core/include/numpy/arrayobject.h
c1bfdfda3dbd4e2349f5313a2f5846f60d7ea7ed,"Fix issue #77
",numpy/doc/swig/numpy.i
7e7f3837ab12568036c79ea9d05087fa147f1bbe,"Fix reference-count problem in Macro form of EquivTypenums and update numpy.i to use EquivTypenums.
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c,numpy/doc/swig/numpy.i
aabd8a7ac7913529dc8a1d48f42ca773c974f860,"Add a few scalar-macros.
",numpy/core/include/numpy/arrayscalars.h,numpy/core/src/scalarmathmodule.c.src
b93564d6fc67a9905d704978b089e42c82525e62,"More scalar math implemented.  Cosmetic changes to arrayobject.c
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
d81315e28f98d9318c79683c824d9d06f5414360,"Fix problem actually in PyArray_Scalar for wide builds.
",numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
879bc24af319c0c35bbd067b44452822314e341a,"Fix memory leak on error.
",numpy/core/src/arraytypes.inc.src
34624ffa5bb90665d3e4ea3c07e45797cc56f8ee,"Fix UNICODE copyswap code.
",numpy/core/src/arraytypes.inc.src
46bdb66f9638dc01e029cc026aa532833a5ccba9,"Fixed typo.
",numpy/distutils/misc_util.py
b139fd5eaba3be0ad87a2d39332a548af86055b1,"Fixed error in _strided_copy macro.  Fix access error.  Make PyArray_ToScalar a macro.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
4fce8c0e0b0f3f31d94e8e36fd7688a5d007def6,"Fix Unicode swapping problem.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
1a0525b24be6481d45d20227f14525d7d5875383,"Clean-up strided_byte_copy code and expose a new API call for getting broadcasting behavior and ufunc-like iterators over the longest axis.
",numpy/core/code_generators/array_api_order.txt,numpy/core/src/arrayobject.c
6e1856efaa06ad7e8c1245e9e74745662af36c96,"Update copyswap functions to take array as argument in preparation for improved functionality of VOID_copyswap and possibly faster code for aligned data.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
61b04184c82083570a3ad019bb34391c0f6db1ae,"Fix splitting a pattern on win32.
",numpy/distutils/misc_util.py
8c7d39dd62049b59ecb90958feeef6bc69cb92bd,"Make ext module typespecs to use PyMODINIT_FUNC that is essential for mingw32 and c++ code combination to work correctly.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/umathmodule.c.src,numpy/dft/fftpack_litemodule.c,numpy/distutils/system_info.py,numpy/doc/pyrex/numpyx.c,numpy/f2py/rules.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c,numpy/lib/src/_compiled_base.c,numpy/random/mtrand/mtrand.c
628087d5e53b152435b71d9330a04719169fa033,"Change svn:eol-style to native
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_oldnumeric.py
448bb44cca09075c0281f0857109db3925908098,"Fix so USE_USE_DEFAULTS code works in multi-threaded case.  Speed up 1-d array indexing by an integer.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/ufuncobject.c,numpy/core/tests/test_numeric.py
9867cad08e60ed9232a721dc9a95b7951455bfc1,"Applied ticket #77 patch.
",numpy/doc/swig/numpy.i
79ff23570f076f23f34c35a64b9530ffc672808a,"Minor bug fix in interactive sys.argv set feature.
",numpy/distutils/interactive.py
f908c6ab7984c839bf182f2261e926f0c28827a8,"Adding plat_specifier to build/src directory so that multiple platforms could share build directory (fixes numpy/core config.h conflict).
",numpy/distutils/command/build_src.py
43521c0bdbda97a41256e5c2c972189272e03dca,"Fix old scipy Issue173.
",numpy/distutils/mingw32ccompiler.py
4694331a0563cfa766e661617e32ed152409644c,"Fix PyArray_FromAny so it returns error if UPDATEIFCOPY is set for nonarray input.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
1753b623b4ae4c963314b13326977f327f0eb395,"Missing error return added. Fixes Sourceforge bug.
",numpy/core/src/multiarraymodule.c
2276bf7935c28385511fa3a11abe11a975a76c81,"Use correct download url in setup.py so that setuptool's easy_install would
be able to download the source correctly.
",setup.py
73bff2a400a2453bc387f2ed882c9ded88d89c12,"Tweaks to Travis's recent addition of thread local semantics to setting of errors. Most important is that I disabled the optimization in the ""default"" case since it appeared broken when there were multiple threads and it didn't seem to have a significant performance impact. Added comments on how to fix it if that turns out to be desirable.
",numpy/core/numeric.py,numpy/core/src/ufuncobject.c,numpy/core/tests/test_numeric.py
4a4caf019b292e4fa8c7da77fe1104dbbe0b7eb3,"Improve docstring for complex scalars.
",numpy/core/src/scalartypes.inc.src
a68ca8a64f70c9c6445101fd8d70a0125b476829,"Fixed subpackage name when adding subpackage with setup.py script.
",numpy/distutils/misc_util.py
d748172f6e830beece1f1fc5e86bbf906eba3b23,"Fail with long traceback from setup before closing interactive session.
",numpy/distutils/core.py
014ca86120abd3f0c20b44e74a11cc927498a99b,"Possible fix for #72.
",numpy/core/src/arrayobject.c
f51a51f014fe9b3fbf37223256fefd81cda5be4a,"Remove cwd from sys.path when running numpy/setup.py script.
",numpy/setup.py
0f8a871123131fd114376673789b0d751c7a172d,"Fixed the order of setup commands.
",numpy/distutils/interactive.py
d2f1e960dfd2dee2e9063f94cafc6e89e4bf5b3c,"Added configure alias to interactive sys.argv setter, number of minor improvements.
",numpy/distutils/interactive.py
b00fb8dcaf946fc855970763a15795993626ed0e,"Fix kron so that the return type reflects the type of its arguments. Also, raise an exception if the arguments are not rank-2 since the other cases were some combination of ambiguous or broken.
",numpy/lib/shape_base.py,numpy/lib/tests/test_shape_base.py
137be11f99847e118f118b5dfed45ca897e0512b,"Completed impl. of interactive setting of sys.argv.
",numpy/distutils/interactive.py
bc76490acd4e47b14172e0b7dbf75f61ba435773,"Fix interactive setup: hold the process until enter is pressed.
",numpy/distutils/core.py
dbe851fdd16fa7b829efdc698ff81b066ae52985,"Fix version detection of an older absoft compiler (version 2.3 to be specific).
",numpy/distutils/fcompiler/absoft.py
8a31e29feafddc3c29bf1ca8ee378fb7b69c67b7,"New feature: interactively set sys.argv when setup.py is called without arguments. At the moment the feature only can show system/platform/fcompiler information..
",numpy/distutils/core.py,numpy/distutils/interactive.py
7ac6e2005976d03e25e723bacd59f27ad87e86dc,"Fix bug in resolving target_dirs for data_dir patterns containing extra slashes.
",numpy/distutils/misc_util.py
696853112da4073d64bbf69619e889e0d2f9f5d5,"Some fixes for Absoft Fortran 10.0 on 64-bit Linux. I would appreciate some double-checking from someone else on this!
",numpy/distutils/fcompiler/absoft.py
51a6c983cedeceee316a5d7b2e99f6ebca65b518,"Fix build_src inplace build for library sources.
",numpy/distutils/command/build_src.py
847c32da33086fd525e230d0af6a8513593cee25,"Added warning about config.add_headers to DISTUTILS.txt
",numpy/doc/DISTUTILS.txt
b66327781da7203a74b6daac8d6b3dbdeea6f590,"Use add_data_files instead of add_headers to install randomkit.h
",numpy/random/setup.py
11273d2fd8193e4daffaee16cabdb073a9298048,"When selecting from string arrays, remove NULL bytes from string scalar.  Fix string comparisons so NULL bytes are not compared inappropriately.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_unicode.py
e7da22ef0036484ef52f1ef362d6b0554be25347,"Fix bugs in recent check-in
",numpy/core/src/arrayobject.c
5964bd79342fee24cb8b70caa6005046a897c949,"Add special-purpose code for copying aligned data.
",numpy/core/src/arrayobject.c
959e147a8a41c37bc3b9d1f11d89449cb4cc9882,"Speed up copying code a bit for well-behaved cases.
",numpy/core/src/arrayobject.c
787e44fdc052f858679175850515259433e48ed5,"fix typo.
",numpy/lib/UserArray.py
dbb89ee8932e1f2b9f4a8940d90d6fd96c8c3f8e,"Fix numpy ticket 53.
",numpy/distutils/misc_util.py
021da2c12f9b1adc161197c2d71aef95db9d811f,"Fix bad __getattr__ code causing recursion.
",numpy/lib/UserArray.py
07e5091227397cdec85d0b07e9a7cbc34ab257ed,"Implement a reset-on-delete object for save error modes.
",numpy/core/numeric.py,numpy/core/src/ufuncobject.c
e273a1abc85f55719a1f3ff247372be6274522b1,"Change ...errlist to ...errobj
",numpy/core/numeric.py,numpy/core/src/umathmodule.c.src
ae43872a80811507385bb4175a550d5d40d6eece,"Changed error look-up to use per-thread global variable.
",numpy/core/numeric.py,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src
5d5d80f54e09b5bb220c3e92a5703ab3cdc53ab5,"Modified numpy/random/setup.py to export randomkit.h header file
",numpy/random/setup.py
6890d56838096102780da764dd980e148448ee54,"Check fwrite of separator to ensure it was written.  Fixes ticket #68
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
c523feaac9020b55e33d90e6bd4e68f0ec77ffcd,"Expand sqrt docstring. Fixes #66.
",numpy/core/code_generators/generate_umath.py
b01e909b7aec0a34f5f2aa1af105fa20361fb660,"Actually return the appropriate version if found.
",numpy/distutils/fcompiler/ibm.py
6c736d2b7a297076283b8aac5c2766cda4022b28,"Fix valgrind-discovered errors for 0-dim and 0-sized arrays.  Fixes tickets #60,#61,#62,#63,#64,#65
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
52b98d20ffd229f2b3a1fcd0f2027c7ebdc4926b,"Fix some more bugs found by valgrind.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umathmodule.c.src
c429c9c7cdc0ab9a4fad1a591daf79d9cab867ff,"Initialize buffer for object loops.
",numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
412bd52a7a295eee80f129a762b28923b30fe584,"Bump up the version number.
",numpy/core/include/numpy/arrayobject.h
a52217361c8b5e6941766c6ab0e2752aa40f8652,"Fix object-loop reference counting in BUFFERED UFUNC.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/ufuncobject.c,numpy/lib/tests/test_function_base.py
5567185f1bbe1f568c2bcbaeb34ea8df84e83610,"Add string (and unicode) comparison to array objects.
",numpy/core/code_generators/array_api_order.txt,numpy/core/defchararray.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ucsnarrow.c,numpy/core/tests/test_multiarray.py
036d7a3724a89d880339c89a1aff171d7e4c1e10,"Fix so that b.shape = <tuple> does not work for non-contiguous arrays
",numpy/core/src/arrayobject.c
66afe6dc308db475d729fbd742d79da00e1955ca,"Fix so that b.shape = <tuple> does not work for non-contiguous arrays
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
8a20ec0dd37e84c24bda059c6d76d56790c47c53,"Fix the test for Ticket #59
",numpy/core/tests/test_multiarray.py
47dc68a0711249e7043fd50d743d6b70e889ed6d,"Fix more on ticket #59
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_multiarray.py
964039632baab1c44e700693dce1b130db5d6938,"Fix segfault on indexing (but functionality still not working).  Add vectorize test-case (ticket #52).  Improve comments on broadcast failure.
",THANKS.txt,numpy/core/src/arrayobject.c,numpy/lib/tests/test_function_base.py
6eec6faa0d5fe660305d5f3014a442eefd0f656d,"Try to fool compilers on in divbyzero generation.
",numpy/core/src/umathmodule.c.src
7d03612d28dff126421b2cb19d61622262f63d95,"Fixed Ticket #43
",numpy/core/src/multiarraymodule.c
d618770c32987d4148a94e6e14c14b9de72e3763,"Fix Ticket #50 --- allow reconstruction of dumped chararray
",numpy/core/defchararray.py
ea68104317fedb97b7e893f9adbcfb9532c2a938,"Fix ticket #40
",numpy/core/src/ufuncobject.c
e2099043be00ed961995ede87e5475f760e32101,"Fixed silent altering of index arrays in fancy-indexing.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
ec554d0caee4fb34122533eb630e7130e5568db3,"Fixed where to always return a tuple
",numpy/core/oldnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c,numpy/lib/arraysetops.py
5534a9987fa9b916a4c035220a3fb488bd315753,"Fix Ticket #52
",numpy/core/src/ufuncobject.c,numpy/lib/shape_base.py
5326f8922066ad8e3adc27ef26b75fd6d4d2b895,"Comment changes.  Fix-up byte-swapping on pickle read so that descriptor is also changed.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
c71689e56764c93535481273c6a2be857ac08764,"Byteswap on pickle-read if not
in correct byte-order.
",numpy/core/src/arraymethods.c
fe48ab5baf09f74f416aebccf7b7c68fdaa1b855,"
",site.cfg.example
d143f3c1a28a6c82237c7d455416147ee72841c6,"Splitted umfpack and amd system_info classes into two.
",numpy/distutils/system_info.py
50e69de29085387db2e0ab7768bc9b81c2712169,"Add Intel EM64T Fortran Compiler support.
",numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/system_info.py
a8e674757141889f3609890a1d89a8634abc98bb,"Fixed typo.
",numpy/distutils/command/build_clib.py,numpy/distutils/fcompiler/__init__.py
6932d858cf4701106a7cedf0edce70c34bf75925,"Add support to specify config_fc option in setup.py file.
",numpy/distutils/command/build_clib.py,numpy/distutils/fcompiler/__init__.py
5cb0f8bb28951f09beec7036601eab8796ab5d03,"Removed cc_dynamic from libraries list for Gnu95FCompiler (darwin).
",numpy/distutils/fcompiler/gnu.py
1bca125a3f0c1e86b7777adebcdde5671b713f92,"Fix ticket 48.
",numpy/distutils/command/config_compiler.py
18c2a959e5ef86a576cc13470ac845174b57a39c,"fixed mask calculation in cum* methods
",numpy/core/ma.py
b6427785d14ee282c6e4251771f8a48283a0ecaf,"more array methods in ma (thanks Pierre GM <pgmdevlist@mailcan.com>)
",numpy/core/ma.py,numpy/core/tests/test_ma.py
f2337b8095ca09312b4486c99b82dea05ae3ac58,"site.scfg.example added
",site.cfg.example
035720e9fa8fe6ba910ec92b38aa7a28cc63e692,"Fixed bug in sorting on byteswapped arrays.
",numpy/core/src/multiarraymodule.c
17d7cfe350073ca04a17f76323fe813e361d74de,"Fix version machinery and pkg information requests.
",numpy/distutils/misc_util.py,numpy/setup.py,setup.py
4c0bf7da9c6c7c5e554fb62792ee0322a3846239,"Fixed typo.
",numpy/distutils/core.py
163d94675ef2b4e37700c2293d800b858b698b4a,"Applied Bryce patch to support TestCase proxy classes.
",numpy/testing/numpytest.py
7c0eef63f9429ead37f628984de22177b08a5597,"Workaround strage tempfile problem.
",numpy/distutils/exec_command.py
6cc9da7aea03502abbccf7454f73e0fc308358f5,"Reorg. code so that numpy.distutils could be used from cwd that contains math.py.
",numpy/distutils/core.py,numpy/distutils/exec_command.py,numpy/f2py/__init__.py
8680d6f6df88d32e07a25c441fa29ac7a1095919,"Fix typo.
",numpy/distutils/misc_util.py
827b79a954d3f222bb1f618fd0a14e606dbd7e6e,"Fixed _wrapit so that it correctly handled non-array return values.
",numpy/core/oldnumeric.py,numpy/core/tests/test_oldnumeric.py
f0c7ba02e42d71d120cc782395f01acc6ae15db0,"Fix inplace building of data sources.
",numpy/distutils/command/build_src.py
17e57d06d885affe8a916d4e587d63db361565f0,"Handle callable data file generators
",numpy/distutils/misc_util.py
aa6ca9bba4a8c0232ea4c717ab2539e7882f37a3,"unit test for r2312
",numpy/core/tests/test_multiarray.py
2a800cc944f0cbb2594a69cc1fbee3049ce6399b,"Add svn revision number to version.
",setup.py
c31f2f845587db8101f697dc36286bd55d780ead,"Applied http://projects.scipy.org/scipy/numpy/ticket/39
",numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/intel.py
d1573150a33df8c6eaf95189a6dcd6ee6f0c48ad,"Hint for using new setup configuration kw argument.
",numpy/doc/DISTUTILS.txt
471196b6dfc3f45decc18dc34e044842e5fa2c21,"Introduced configuration kw argument to setup. This fixes long lasted long configuration messages when setup command line has only help request or errors.
",numpy/distutils/core.py,numpy/distutils/misc_util.py,setup.py
da78766309515905b4016ac494dac384fe80a5fd,"Fix-up record-array pickling and attribute access errors.  Fix minor pickling inconsistency with un-ordered ('|') data-types.
",numpy/core/records.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
698a593861f8a9c4f2346e456eee978393bf5595,"Fix restoring distutils.core globals on setup failure.
",numpy/distutils/system_info.py
1f1b3b4fca312fe3c17b72845af0a84711d83469,"fixed segfault from add(x, [1], x) where x = array(2)
",numpy/core/src/ufuncobject.c
11bbd92e442bcc4556ed8260f8017031279761de,"Allow flexible types to be up-cast to OBJECT dtype in 'ufuncs'
",numpy/core/src/ufuncobject.c
5bce29536aa3b0238a728c3fd46c8edc73d3a84f,"Fix-up _wrapit
",numpy/add_newdocs.py,numpy/core/oldnumeric.py
7ddcb8913b4436cbf849edfdbbbef16a0ed9286a,"Improved umfpack_info.
",numpy/distutils/system_info.py
97dbaec1d08ab8ed0d613e724a0fa50b169daad6,"Added swig_opts to umfpack_info.
",numpy/distutils/system_info.py
65d44cd7958babd0059f2690ed57f42b48e3a542,"Fixed 'from numpy.lib.scimath import *' failure.
",numpy/lib/scimath.py
9953985293fb344fc904ab3f4945cf5688a8b7fd,"Included numpy .txt files to installation.
",setup.py
8869df5b1cba1ffeda6d772eee1a7507fe18bdef,"Reimplemented add_data_dir and add_data_files methods to fix ambiguities.
",numpy/core/setup.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/doc/DISTUTILS.txt
1845b35c086f01bec62097ef3ec03dad8646d6b6,"Trying harder to find info modules.
",numpy/_import_tools.py
a873580ec504bee32ab45556d4083873de9d4918,"Fixed errors when trying to import freezed numpy scripts.
",numpy/_import_tools.py
4a5ed4f6c97a6bdb8b578210e7e1ba0906e74030,"Refactored Configuration._fix_paths method to gpaths, added tests and documentation.
",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py,numpy/doc/DISTUTILS.txt
052de78f3e507a4c405e8665ec8e28bfd8c0756d,"Rever to old .reshape copy-if-necessary behavior.  Too disruptive to change. A sub-class should change it.
",numpy/core/oldnumeric.py,numpy/core/src/multiarraymodule.c
8898b967ff8fa95375fcf5c744011e8b3bf06664,"Fix-up usage of asarray.
",numpy/lib/function_base.py
680a44a631b3d039dc63d108274eeeefa062de34,"Introduced standalone kw argument to add_subpackage and parent_name kw argument to get_subpackage. Fixed delegating options to subpackages when calling from Python prompt.
",numpy/distutils/misc_util.py
b0921fb626ea069548e240b9af751ede97cd3d37,"Fixed njoin for absolute paths.
",numpy/distutils/misc_util.py
10764c8b284e33a180339a17df82772662fdb85a,"Fixed minrelpath bug for processing '.././..', minrelpath resolves '.'s. Introduced internal caller_level kw argument to Configuration to resolve relative path problems.
",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py
cecd918ce6c4665e4f2361fa64e076c35d3cfae4,"Forcing unique names for subpackage setup.py modules.
",numpy/distutils/misc_util.py
700d45ec7abfc06bc1360e008b2328d5f95c7909,"Fix use of wrong type in array_zeros.
",numpy/core/src/multiarraymodule.c
7c4be14e609cea05db330e39fbf79926afe16c2e,"Fix up asanyarray usage
",numpy/core/oldnumeric.py
4aa3f16135c98a0a1d9c049dafe89cd272e01d87,"Fix ravel function because method went back to old behavior.
",numpy/core/oldnumeric.py,numpy/core/src/arraymethods.c
c1dff9e8f2f9231597adb132634305ba407a8cc5,"Change so that .ravel() has old behavior.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
f819562be99e8f0adde23264d3aab654c0d32071,"Updates to array creation: improve docstring, allow fast exit for subok=1, remove copy argument from all but array function itself.
",numpy/core/numeric.py,numpy/core/src/multiarraymodule.c
ffe633bdf4ca09b5ad084998c441dc1d109d2fcc,".ravel and .reshape always return views and raise ValueError if that is impossible.  The functions ravel and reshape return views or copies if the view is not possible.
",numpy/core/arrayprint.py,numpy/core/oldnumeric.py,numpy/core/src/multiarraymodule.c
4776dffd495de69f71c90ed13115c711e05ebde0,"Fixed import.
",numpy/distutils/fcompiler/compaq.py
580fb516c0a197d7a7f3ca64a0a2a98da679a4dc,"Change order of attribute lookup for recarrays.  Now, the methods and attributes of the object are tried first). 
",numpy/core/records.py
592b9dc6ca7a9fec970de81ccc303525a14d7f61,"Remove nd=1 optimization in .ravel and add support for fortran order arrays that don't copy
",numpy/core/src/multiarraymodule.c
d3f62a662cb0e4ed514f6c0999ca5930b84c7aeb,"umfpack detection added
",numpy/distutils/system_info.py
768e57a8cfc5a75a66bc6ed982ee256b3bddc15e,"remove unused imports
",numpy/lib/function_base.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py
3c45bc35234faa07a4ac095fccbc4998c2481bdf,"remove unused import
",numpy/lib/scimath.py
4921d30b0e08d414b397585d0030958781cb1a56,"remove unused variable
",numpy/core/memmap.py
28b7d9fb65da6e36eff3158f77b2a023edf7f733,"Changed fortran= keywords to order= keywords
",numpy/core/code_generators/multiarray_api_order.txt,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/oldnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
76612bfed9caef1f619c12bdd867b4974e93d8f4,"Simplify interfaces.  Fix UCHAR bug.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/lib/shape_base.py
4bd0d90ed1786edf87e7939258026b35099a9a80,"Use generate_mtrand code to create the mtrand.c file.
",numpy/random/mtrand/mtrand.c
2db96a7f02233493849343ff9fed470cd7dc30bd,"Added ascontiguous and asfortran functions.
",numpy/core/numeric.py,numpy/core/src/multiarraymodule.c
3fa921bb348ca4fabfbf00973bc61be1b59c6097,"Fix randint(1,2) == 0 bug.
",numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
16de17ab742f42aeec31003725fc955d22eb8ded,"don't catch exceptions from method calls
",numpy/core/oldnumeric.py
6e5c13bbebbadd646f816fae36d2094612462185,"compress code
",numpy/core/src/arrayobject.c
0e72b1b67f1291aef293a77138ad94d459d8448b,"Fix segfault in fast power.
",numpy/core/src/arrayobject.c
bf8b6bc167fadcec411d1b56f1590e297ae2fab3,"trivial whitespace changes, more explicit imports
",numpy/lib/function_base.py
9ceea564a055c749d5189d855cc5b683eb04851c,"trivial whitespace changes
",numpy/lib/index_tricks.py
01d1eedc2f66688336fda60f2bd9f5f87f73c76f,"explicitly use numerictypes
",numpy/lib/getlimits.py
815ac8fe897bbf74c92009f53c30dd0bdbbd9e16,"shorten long comment line
",numpy/lib/scimath.py
2ee64fdacd5167472d868f8b155e5fbbfc9f00ce,"use docstring header, fix 'import *', remove duplicate definition of __float__, change first arg of method from 'a' to 'self'
",numpy/lib/UserArray.py
4867af4f63044bbc487c8510b990dfa65c9531e0,"change header comments into docstrings
",numpy/lib/convertcode.py,numpy/lib/machar.py
56ae0d3d843e2e6f8548cde972c2b84446e84071,"Removed branches that use undefined ""_wrapit""
",numpy/core/ma.py
7dd693cd1c4b210464f4f368642c6a05543d1404," * More array methods thanks to Pierre GM <pgmdevlist@mailcan.com>
 * Added dtype argument to reduce

",numpy/core/ma.py,numpy/core/tests/test_ma.py
394965f9a440a59b8c31ab43fed07a7b7c3d5931,"Fix optimized dot error (1,1)x(1,N) and (N,1)x(1,1)
",numpy/core/blasdot/_dotblas.c
4ede50a47e50219e833ae2738fca3e3384b76d93,"Expose another dot error.
",numpy/core/src/scalarmathmodule.c.src,numpy/core/tests/test_numeric.py
4b414d7b1c0cd25d2b66f0a7ac09d63654b5440b,"scalar math updates.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/scalarmathmodule.c.src
8a80009275ee3828636a8a0c75f75c1f588efbcf,"Fix reshape function to support fortran perspective better.
",numpy/core/src/multiarraymodule.c
cdbcee59fbe407dcfa3a81fc18f95eca4e8ec6c4,"Fix reshape to always interpret as C-contiguous unless fortran=True is given or fortran=None and array is already fortran array.
",numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/oldnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
cd5f36dc87fd462bc0391a3f7e13036bf1ad3c40,"Better version matching for Sun Fortran, and don't panic when we can't match the version number
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/sun.py
8f28c43e00c6622e6ca654be1652d5a5a77fd28b,"whoops, readd cc_dynamic to libs to link with for darwin platform.
",numpy/distutils/fcompiler/gnu.py
0838fa5177a802345d1bab2bc6cbdf36bc57d7bd,"remove 'from numerictypes import *'
",numpy/core/ma.py,numpy/core/tests/test_ma.py
06f4407a27139efcc9adfc5b3b504fe38a712bd4,"For version checking of compilers, first look for a .version_match method
to call, then check the version_pattern regex if not found. Also add a
simple_version_match function to ccompiler which does a fuzzy match.

Update the GNU Fortran compilers to use version_match.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/gnu.py
267a8f5d47beb4ca8badd7859b044581708d7b52,"change use of deprecated NewAxis to newaxis
",numpy/lib/index_tricks.py,numpy/lib/tests/test_shape_base.py,numpy/linalg/linalg.py
116482559bc3a3856022b0a7b25429605d351c02,"Add coercion test for scalar objects.
",numpy/core/code_generators/array_api_order.txt,numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src
178049619a9ae83860977e8cec27ecb281569a28,"Comments only.
",numpy/core/src/scalarmathmodule.c.src
6eec749b27cf8787177585df601795d92f31e643,"Add extra arguments to corrcoef.
",numpy/lib/function_base.py
9003457feff1a215d296a300dc8e2682fa797592,"Fix scalar case for corrcoef
",numpy/lib/function_base.py
7b85f2193b938e748120695cf5d3a09a811d831f,"Third time's the charm.
",numpy/lib/function_base.py
0818507117b55a7f0e95dfc3cbe9f6ed1354aad9,"Fix cov and corrcoef in numpy
",numpy/lib/function_base.py
959f36c04ce8ca0b7bc44bb6438bddf162ad2db9,"Fix cov and corrcoef in numpy
",numpy/lib/function_base.py
4506c519cd88710615cb83810b7ddc96773985a4,"Expose arrayscalar structure to make scalarmath and other extensions easier to write.  Move bool scalar C-API to arrayscalars.h
",numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/arrayscalars.h,numpy/core/src/arrayobject.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src
8c9cf9ac2a07e9ebb8dae51a264f708229770624,"clean up some imports
",numpy/dft/fftpack.py,numpy/lib/machar.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py
5a712837f673a194353113ebad72d5050ad1f68f,"Fix bug when setting uic to False.
",numpy/core/src/arraymethods.c
75f139dacec2845ed18424bb65efbed3280fd0b2,"Fix flags getitem.
",numpy/core/src/arrayobject.c
967e9fd69a2113f124591e144b8ede722faa887e,"Fix-up name-spaces.
",numpy/linalg/linalg.py
abe1567d970117ed9a3634c10c843da2e3399f60,"Fix-up name-spaces.
",numpy/core/oldnumeric.py,numpy/linalg/linalg.py,numpy/linalg/old.py
24cd77be0d56b1a98424d4f31aa58b506c4598e0,"fix imports so that all tests pass
",numpy/linalg/linalg.py,numpy/linalg/old.py
db77da02aced7b10bd3fd8306cf66d88a0e8800e,"Isolate Numeric compatibility to numpy.linalg.old
",numpy/lib/convertcode.py,numpy/linalg/linalg.py,numpy/linalg/old.py
9682b2c4abe69d055d7e56c2a53e5e0955e75ab3,"Committed much of ticket #36
",numpy/dual.py,numpy/linalg/info.py,numpy/linalg/linalg.py
03736884e2fb993e096ef801dd49135b9292b823,"Changed the C-API by making the a.flags object a builtin object for speed.  Also fixed issues with linalg and matrices.
",numpy/core/_internal.py,numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umathmodule.c.src,numpy/linalg/linalg.py
440214d5835da50d9dad3103835fb8b3967eb3b5,"New version number
",numpy/version.py
ee8e27ad4facd8123858f3b046f6bba78fea7c89,"Fix 2.3 compatibility on windows.
",numpy/testing/utils.py
7afda6a7aa249f3bfe490e62f61480d9e5e9c941,"Add rest of the examples for pyrex and swig
",numpy/doc/pyrex/MANIFEST,numpy/doc/pyrex/Makefile,numpy/doc/pyrex/c_python.pxd,numpy/doc/pyrex/notes,numpy/doc/pyrex/numpyx.c,numpy/doc/pyrex/numpyx.pyx,numpy/doc/pyrex/run_test.py,numpy/doc/pyrex/setup.py,numpy/doc/swig/HelperFunctions.txt,numpy/doc/swig/Makefile,numpy/doc/swig/README,numpy/doc/swig/Series.i,numpy/doc/swig/series.cxx,numpy/doc/swig/series.h,numpy/doc/swig/setup.py,numpy/doc/swig/testSeries.py
22335be3938621d9a4ed0ca0ac8ec5a8fc5a1da3,"Fix missing increment of reference count.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/arrayobject.c,numpy/doc/CAPI.txt
57b603a2cfbd54de0c4ad64194a88b1860955015,"Fix scalar multiplication in optimized dot.
",numpy/core/blasdot/_dotblas.c,numpy/core/tests/test_numeric.py
55b860463b1c95097d1d628b322b62a8416dfce7,"Fix consistency of optimized dot
",numpy/core/blasdot/_dotblas.c
aa04352b39a26f24a7293ca13f13c2348793484a,"Remove numpy distutils from autoload and fix 64-bit bug.
",numpy/__init__.py,numpy/core/src/arraymethods.c
37e0c9b5b852dffee11e41d1a9ee7a11be1f662e,"remove unused imports
",numpy/lib/UserArray.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/ufunclike.py
8a65c256de43db750357e7ac468352b06c960a25,"update tests to all run correctly
",numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_twodim_base.py
7ed95441ce78c441079120c49de159e8beb337fa,"Deleting copied files
",numpy/core/include/numpy/c_numpy.pxd,numpy/core/include/numpy/numpy.i
e3b5adb2b14e6143cdd4da7c4456cd9e6e17e4f7,"Move swig and pyrex over
",numpy/doc/pyrex/c_numpy.pxd,numpy/doc/swig/numpy.i
3afb449634c2f1aac55e0a0d9d0693d098d66d8c,"Adding swig and pyrex examples
",numpy/core/include/numpy/c_numpy.pxd,numpy/core/include/numpy/numpy.i,numpy/core/src/arrayobject.c,numpy/doc/ufuncs.txt,setup.py
64c7a3cb6e30bee5bfbffb65b5e651362ccdaf32,"Fix ticket #35
",numpy/core/src/multiarraymodule.c
67940c3d69c51bae3561695693020ced3d9d470a,"Fix up oldnumeric.py functions to return intput class where possible.  Allow complex-valued arrays in PyArray_Round. Add backward-compatible support for Python2.5 ssize_t changes.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/oldnumeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
cda50abbda59616f3794ca748c791a01a6e693a5,"Fix defect #28
",numpy/lib/polynomial.py
2ce697cf4dde594f9e39905c0b6b44172a60e7f6,"Fix object array setting.
",numpy/core/src/arrayobject.c
0c436ea6d48135bc14edf760f1cecc53f1c5d5a9,"Fixed segfault on multiarray import in install directory.  Now, it just raises an error.
",numpy/core/_internal.py,numpy/core/src/multiarraymodule.c
b865aac8749105b59fc8567790d2510cd4f0638f,"Fixed typeNA (ticket #31)
",numpy/core/numerictypes.py
bf57380caa818b73a4c41409de6ff260425f9bb6,"Run reindent.py (script distributed with Python) over the source to remove extraneous whitespace
",benchmarks/sorting.py,numpy/_import_tools.py,numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_umath.py,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/info.py,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/oldnumeric.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_records.py,numpy/core/tests/test_umath.py,numpy/core/tests/test_unicode.py,numpy/dft/__init__.py,numpy/dft/fftpack.py,numpy/dft/helper.py,numpy/distutils/ccompiler.py,numpy/distutils/command/__init__.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config_compiler.py,numpy/distutils/conv_template.py,numpy/distutils/cpuinfo.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/from_template.py,numpy/distutils/lib2def.py,numpy/distutils/line_endings.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/unixccompiler.py,numpy/dual.py,numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/doc/collectinput.py,numpy/f2py/f2py2e.py,numpy/f2py/f2py_testing.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/c/return_real.py,numpy/f2py/tests/f77/return_complex.py,numpy/f2py/tests/f77/return_logical.py,numpy/f2py/tests/f77/return_real.py,numpy/f2py/tests/f90/return_character.py,numpy/f2py/tests/f90/return_complex.py,numpy/f2py/tests/f90/return_integer.py,numpy/f2py/tests/f90/return_real.py,numpy/f2py/use_rules.py,numpy/lib/__init__.py,numpy/lib/arraysetops.py,numpy/lib/convertcode.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/shape_base.py,numpy/lib/tests/test_arraysetops.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/info.py,numpy/linalg/linalg.py,numpy/linalg/setup.py,numpy/random/__init__.py,numpy/random/setup.py,numpy/testing/numpytest.py,numpy/testing/utils.py
f2db317c1fad63f1c85944ba8443b465e32774dc,"Run tabnanny over the code, and replace uses of tab for indentation with spaces
",numpy/core/_internal.py,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numeric.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/system_info.py,numpy/f2py/capi_maps.py,numpy/lib/machar.py,numpy/lib/tests/test_twodim_base.py
3493d8b3cee54037e893fde83f3113a66b0ec7e8,"Add back missing typeNA values
",numpy/core/numerictypes.py
d04f07463ef0816435777ea4213752c5bd0f2760,"Fix numpy intYY types so they correspond exactly with C-based PyArray_INTYY number
",numpy/core/numerictypes.py
088cd5a3a71b448f777d70b21c9cb70033318ac5,"Simplify scalar arithmetic and improve it in cases of array scalars mixed with masked arrays.
",numpy/core/src/scalartypes.inc.src
132acae81d471640426edcb37d98361131bf6779,"Change error raise to warning when __array_() is called with no context
",numpy/core/ma.py
33c9c5bf1e86d4a768d7b80ed9e53a3278fd0cf5,"Fixed SETITEM and GETITEM macros. Added __index__ support for array scalars of integer type for Python 2.5
",numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/scalartypes.inc.src
15dea0280a1c9eaf6acfd488679ab60ca88671c0,"Add unit test for negative complex powers
",numpy/core/tests/test_umath.py
1c82c1fa5d12f83ad60f197b2940f5eb7489186c,"Fix negative integral powers of complex numbers being computed as positive powers!
",numpy/core/src/umathmodule.c.src
704204550661e497888ac879e292cb69a55bbd8c,"Fix f2py to handle character arrays in common blocks
",numpy/f2py/common_rules.py,numpy/f2py/src/fortranobject.c,numpy/f2py/src/fortranobject.h
07d036080bcac11ef5ff601b5f6a3215fed230c8,"Fix tabs-to-spaces and unused import re: ticket #26
",numpy/core/defchararray.py
d4f1427519a22608b947397a9c746e7ad1a764e1,"Merge power_optimization branch (r2103:2205) to trunk.
Important changes:
 * x**n (where n is a scalar) is optimized
 * new ufuncs: square, reciprocal, ones_like, used for optimizing x**n
 * PyArray_FromAny speed increased for converting scalars
   - side effect is that subclasses of Python builtin scalars won't have
     the array protocol checked.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py,numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py
c9d2cdc913171d079eabb6b71405d7101041356b,"Merge trunk (r2142:2204) to power_optimization branch
",THANKS.txt,numpy/__init__.py,numpy/_import_tools.py,numpy/core/__init__.py,numpy/core/arrayprint.py,numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/defmatrix.py,numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_umath.py,numpy/dft/__init__.py,numpy/distutils/__init__.py,numpy/distutils/ccompiler.py,numpy/distutils/misc_util.py,numpy/f2py/f2py2e.py,numpy/lib/UserArray.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/twodim_base.py,numpy/linalg/__init__.py,numpy/linalg/linalg.py,numpy/random/__init__.py,numpy/testing/info.py,numpy/testing/numpytest.py,numpy/testing/utils.py
5bb7342c6c2fa9757edc28df0dbbc8d433ac50d8,"Fix pickling of fortran arrays (defect #16)
",numpy/core/src/arraymethods.c,numpy/core/tests/test_multiarray.py
819578a1b2d5f9adf9ab6719e8b9b425c5ca7e00,"Apply Tim's code-checker tests except for white-space-only changes.
",numpy/core/arrayprint.py,numpy/core/defmatrix.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/tests/test_ma.py
2ce56bc1c3faa7d2e9e4ba5e64e2a8bdd5bb5313,"Fix so that -OO works
",numpy/__init__.py
377645d4602e5dde51cba0ab859a66a958750157,"removed checks for the mask shape; fixes ticket:19 by timl
",numpy/core/ma.py
881883965ecc9977b15d861d0f38ab503d46652a,"code cleanup for ma.py by timl
",numpy/core/ma.py
4e8b56df4b82feaa624a6c45859d0420ee7b2112,"Ensure scalars in finfo
",numpy/lib/getlimits.py
f1fb5f8d6b3fe27dae96acd274fed9bafa8977c7,"A little re-ordering.
",numpy/core/src/arrayobject.c
07bdddd17c9953d9ce4e5ebe1cceda9e21eb855d,"Fix bad substitution of PyArray_New
",numpy/core/src/arrayobject.c
fe076fbbda80b494d6b0cde4511df83bddcddfe0,"fixed ma.nonzero
",numpy/core/ma.py,numpy/core/tests/test_ma.py
d5c0229e1ac366b43bc35c9fdbf6d0f102d00539,"Fix bug when ENSURECOPY was present but types are different.
",numpy/core/src/arrayobject.c
07a9750e934ad45f086b73b9f9f114ea4b2fcdd1,"Fix an issue with string/unicode arrays created from scalars.
",numpy/core/numerictypes.py,numpy/core/src/arrayobject.c
7db985eaaac53558b3b2af322375f237ca4fe457,"Fixed license statement
",numpy/f2py/f2py2e.py
a93cea60ef4816a150f741cca2f55b63f265291b,"Fix equality and inequality comparison so that non-array objects are not cast to the type of the array object unless that array is of type PyArray_OBJECT.
",numpy/core/src/arrayobject.c
6fd31c330e6572963a03b71bcd479dbedd153ac8,"Remove bigndarray because Python SVN has support for 64-bit indexing.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
3f8c2dea68dd5d8b437a02f002836f09644e5c3f,"Swap order of fill-function arguments and make ones use fill now.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
5f9949015822c662a8a5bd145f2aab08c2b3dfb2,"incremented NDARRAY_VERSION
",numpy/core/include/numpy/arrayobject.h
b25ddc20561f810283b7a6ecb49910f45df9770d,"faster ndarray.fill
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_multiarray.py
8f6eca691ad76cf0264ed9c8e2893e9160efe990,"made ma friendlier to pydoc
",numpy/core/ma.py
60a6705329186d57614e551c9e75dfd3158c2787,"Add keyword arguments to single-argument functions taking axis argument.
",numpy/core/src/arraymethods.c,numpy/core/src/scalartypes.inc.src
c190cfaf8d8717aa459394629c58f5e7cadb45e3,"implemented ndim attribute
",numpy/core/ma.py,numpy/core/tests/test_ma.py
6627d4e993df8033d5e078f24d84cb028ba09d0c,"Fix-up error in piecewise.
",numpy/lib/function_base.py
931a4a355aeb3a5f272af91258b848e81114febb,"Code cleanup
",numpy/core/src/arrayobject.c
f4fc0196c348b52417ddc546c8a43ef946ae7f8a,"Check strides every time it is allowed.
",numpy/core/src/arrayobject.c
fc064db275032fa5c2b0f9d86945988051cfa11c,"Add refcheck keyword argument to resize method to allow override of reference count check.  Allow 0-stride arrays to be created and allow setting of strides even when we create the memory.
",numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
1bf01888151e1e6c28b2eb3b8ccb482148d55402,"Fix reference counting on wrap method in ufuncobject.c
",numpy/core/src/ufuncobject.c
e11ca4d8afc3e412f530ccd55657b401294387ea,"Fix tests and segfault in set_strides.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
a538c37f2a78fda5118ffa54f8b6257f11d4b5a3,"Allow any integer as a stride (including zero --- though you need to understand that case to use it effectively).  Also.  fix a bug in strides_set that appeared when an array had say a string as it's base object instead of an array.
",numpy/core/src/arrayobject.c
3e5fdde668f661e82789bdd764ee6846f43efe84,"Add __eq__ and __ne__ to poly1d
",numpy/lib/polynomial.py
3989cad8d582c1ad3e4941a963ec20b13b67cd9d,"Modest improvements to UserArray attribute access.
",numpy/lib/UserArray.py
c222547c4cf82eff4ec837e177a6a3c2256db4c6,"Undo last change.  Misunderstood...
",numpy/core/defmatrix.py
d46782def8fff463f8dcff69e7d8b4f3e3ddfb71,"Don't check scalars in matrix mul.  There is fast code for them in dotblas.
",numpy/core/defmatrix.py
5ffd88a782e28c9a6af60e61a4064389d0b80d93,"More judicious calling of dot() from matrix.__mul__
",numpy/core/defmatrix.py
b8ba26230f5290093351e4ebad676ed9b6471d8a,"Have __array_finalize__ be called for every sub-class creation.
",numpy/core/memmap.py,numpy/core/src/arrayobject.c
def1c92c288699c65356e52722487bbacc036343,"Fix segfault due to no error check.
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
1b3fcc6fdf4572a5b265794d60c798cbc0d0e288,"fixed whitespace in several doc strings
",numpy/core/src/arraymethods.c
4156b241aa3670f923428d4e72577a9962cdf042,"made subscripting return ndarray if ellipsis is present
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
013b3968457f78caf1a7185702771f6235515db9,"Clean up.
",numpy/__init__.py
a895d1039f3e34b65f612844b725043289a2545b,"Replaced numpy.distutils.test method instance with a function to avoid importing numpy during numpy import.
",numpy/distutils/__init__.py
27e255bc8e5149b5326b4940d33db6d337f89a94,"allow array(())
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
00f2295ec55239ce35687a20a7c58d1583b068f1,"Added more debugging hooks to PackageLoader: NUMPY_IMPORT_DEBUG. Avoid initiating Scipy/NumpyTest during imports.
",numpy/__init__.py,numpy/_import_tools.py,numpy/core/__init__.py,numpy/dft/__init__.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/linalg/__init__.py,numpy/linalg/linalg.py,numpy/random/__init__.py,numpy/testing/info.py,numpy/testing/utils.py
ec53dd5cac4175116048d847f74076e05b6b1a6a,"Fixed inappropriate use of gentype_copy
",numpy/core/src/scalartypes.inc.src
4daf55160be6e0b8a4f6492d8a13beec673b6c11,"Added kron and repmat
",numpy/lib/shape_base.py,numpy/lib/twodim_base.py
b18d25b368aaee7f4617ed250e0201903fb42440,"Faster return.
",numpy/core/defmatrix.py
24a8d329deff1e63c40460fe41f72dc420ade1c9,"Don't allow matrices larger than ndim=2
",numpy/core/defmatrix.py
8db604ba730d0d64b6491cee731ef363d459207f,"Fix problem with subspace indexing an matrix subclass
",numpy/core/src/arrayobject.c
14f6333ced59fcd3d04f302e166eaf2355f1da7f,"Fix scalar multiplication striding for both rows and columns.
",numpy/core/blasdot/_dotblas.c
a616cf68bfd7d4242557c6cd0a790ed0f013b246,"Improved the meaning of test level argument: with negative level return a list of abs(level) unit tests, with a positive value, also run them.
",numpy/testing/numpytest.py
fc3ad911ae8a5ef2b3888fe82581ddf117f44f24,"Documented NumpyTest.test level and verbosity arguments. Added special behaviors.
",numpy/testing/numpytest.py
71597d77b8713c58410e7377632eb1836d39f0f6,"Change formating of all flexible arrays to str(arr.dtype)
",numpy/core/numeric.py
e3a1d502e5d08a755dd1d91eb74341c7617adbdd,"Special-case PyArray_FromAny to handle Python scalars.
bool, int, long, float, and complex are tested for early, and converted using
PyArray_FromScalar before going to the general code. Before, tests for
attributes like __array__ would be done first.

This does have the side effect that if you have a subclass of float, say, that
defines the array interface then that will not be used. I can't conceive
of a use for that though.
",numpy/core/src/arrayobject.c
e9b5c6347d998195f458fab52462f0f7c0931921,"Make r_ and c_ instances of subclasses of concatenator, with appropiate docstrings.
",numpy/lib/index_tricks.py
872a836d920c0c45321c862d73f2aa9ec9c77f51,"Add check for rint and a default implementation if not present.  Make UserArray a new-style class.
",numpy/core/setup.py,numpy/core/src/umathmodule.c.src,numpy/lib/UserArray.py
f909e9889cf1b686b689c671a53d5f18b9505021,"Add round method to array scalars and fix a few reference count issues.
",THANKS.txt,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
adc21734b3b1d5bfdf027c4966fba3bbece12468,"added rint ufunc and ndarray.round
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_multiarray.py
9f395ae6f261a879ef9311a0c0b7f5b7eec97693,"Make an enumerated type out of the scalar defines.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c
a497e908f91baea611dadc3fbcf51853d5c38960,"Fix scalar-multiply dotblas error for non-double types.  Preserve more matrices through functions
",numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/arrayobject.h,numpy/lib/UserArray.py,numpy/linalg/linalg.py
ee7b258d90768a6ec1e7a697e3b7b5067eda00e4,"Add optimizations for integral powers of complex numbers to nc_pow.
",numpy/core/src/umathmodule.c.src
7adb2e2d0abc93ca9572ff451ff3ca1acdfce4cb,"Fixed a bug in importing zzz/tests/test_zzz.py when zzz/zzz.py exists. Added check_testcase_name and testfile_patterns to NumpyTest so that different test suite conventions can be used.
",numpy/testing/numpytest.py
97342eff4ae87caeb83f4e419270b0da88a161e1,"Make matrices survive through more functions.
",numpy/linalg/linalg.py
5c566d6098fe1afd13290951fe60888317deb8b1,"Fix _AIX bug and add UserArray for container class backward compatibility.
",numpy/core/include/numpy/ufuncobject.h,numpy/lib/UserArray.py,numpy/lib/twodim_base.py,numpy/linalg/linalg.py
61553e3dc19e3fb680380aa70a62b3263a83ffee,"Fixed linalg.singular_value_decomposition. Should full_matrices=1 ??
",numpy/linalg/linalg.py
ede85cec1879d0d18a797749ccf7fc1853a2146e,"Merge trunk (r2124:2142) to power optimization branch
",numpy/core/code_generators/generate_umath.py,numpy/core/defmatrix.py,numpy/core/include/numpy/fenv/fenv.c,numpy/core/include/numpy/fenv/fenv.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/ma.py,numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_ma.py,numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/misc_util.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/testing/numpytest.py,numpy/testing/utils.py
0aa85cabe66a188a409e51e04186a050ba6d2d79,"Improve umath generation a bit (ufuncs are outputed in name-sorted order)
",numpy/core/code_generators/generate_umath.py
b7db375217b511008205112cb015d10b1d577252,"Minor style improvements for polynomial.py
",numpy/lib/polynomial.py
bb23ed753f0548e79bf3371cc7c6a3ec81187bb4,"Fix up Tim's x**n optimizations
 * do the reciprocal right for complex arrays
 * use PyArray_Copy for x**1, instead of x.copy(). PyArray_SetNumericOps
   can't find ""copy"" when multiarray is imported, so this wasn't called.
 * some whitespace issues
 * add some test cases for x**n
",numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
00c6d3e64f492a293ef24eb27c67ebe0eb639e65,"Impl. check_testcase_name, get_testfile methods to support different unittest suite naming schemes. Removed Python 2.1 support code.
",numpy/testing/numpytest.py
9fddb815383b3a02c1052791cd268122ee7cac01,"Added memusage() for os.name=='nt'
",numpy/testing/utils.py
c90f2faa40029995bb7f3d4000dc63dabf057592,"Added dict and list support to assert_equal when they contain arrays.
",numpy/testing/utils.py
5937d593cb1ed086236713db74828205b2002286,"Dispatch to reciprocal, ones_like, copy, sqrt, square inside array_power and array_inplace_power when power is a scalar in [-1, 0, 1, 0.5, 1, 2]. Also, added the ufuncs reciprocal and ones_like.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src
f30e6c284e6430068c8301206c7e811f5127141b,"1) Fix scimath functions to take and return vectors.
2) Fix old bug in PyArray_CastTo when multiple copies made.
3) Fix reference counting bugs.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/lib/scimath.py
626bcc3dad4d8227addd43619bca1dc29ce4d0b1,"Fixed numpy build for cygwin.
",numpy/core/include/numpy/fenv/fenv.c
54d08c6580488b8cad46b0512233de125c574699,"Moved fenv codes to numpy/include/fenv/ as mingw32 compiler was picking up wrong fenv.h header file.
",numpy/core/include/{,numpy/core/include/{,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py
cfffff3dee854e924d11ad80ad0a9024fe83170d,"Fixing mingw32 building: fixes undefined referece __EH_FRAME_BEGIN__ linker failure.
",numpy/distutils/ccompiler.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/misc_util.py,numpy/testing/numpytest.py
ca84e842144162056592cf97a172708946a049e0,"Fixed compiler warnings.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
6e709fd4efe657611ac137d3205c93931fe61698,"fixed max and min
",numpy/core/ma.py,numpy/core/tests/test_ma.py
30d932b0a0120122eccaa67900d6234d688c362f,"Fix output logic for ufuncs with output arrays provided...
",numpy/core/src/ufuncobject.c
2035b20ff5cfc6779f4b1a186e596c072423dc60,"Fixed orientation of matrix.sum(axis=1), added unit test
",numpy/core/defmatrix.py,numpy/core/tests/test_defmatrix.py
9c339c6b39025ce5acd33a9728fde1b0bd47c3d6,"Small documentation fixes
",numpy/core/src/arraymethods.c,numpy/core/src/multiarraymodule.c
8d9af69878ff93bc21859494f301f689cef8e0e4,"merge trunk (r2103:2124) to power_optimization branch.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/records.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/system_info.py,numpy/lib/__init__.py,numpy/version.py
38d444794b0e3aad56775ab20fdce9477b7ae08c,"Add patch from BSD to get cygwin working.
",numpy/core/include/fenv.c,numpy/core/include/fenv.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/setup.py,numpy/core/src/umathmodule.c.src
f5c567829148bd57370fa7e7e6e053cded657c46,"Remove some experimental code that I accidentally left in.
",numpy/core/code_generators/generate_umath.py
912beccc011bf60d61b61fa24021f6235dba0225,"Redo generation of ufunc api.
This uncovered some latent bugs:
- conjugate, remainder, and fmod were improperly defined for objects
- all the binary ufuncs that delegate to a method for objects were broken:
  they weren't passed the other object. Added PyUFunc_OO_O_method to take
  care of this case.
",numpy/core/code_generators/generate_umath.py,numpy/core/code_generators/ufunc_api_order.txt,numpy/core/src/ufuncobject.c
2aba0e2b842867f7d5c5bb48be1b15e709903828,"Upgrade version number of trunk and add 'math'
",numpy/lib/__init__.py,numpy/version.py
54524a9b6d8db1194dc8644250c66943102b7858,"Change C-API to version 0905 to sync with 0.9.5
",numpy/core/include/numpy/arrayobject.h
74d5bbdfa7f9fa3b9daedeea07862a1ccbf519df,"Fix problems with isfortran test.  Always test before committing ...
",numpy/core/src/arrayobject.c
2fd136eb7977dd5172eb92d173a7c39921b0cf98,"Fix sub-array for fortran arrays so that new dimensions are correctly appended at the first.
",numpy/core/src/arrayobject.c
6c8412f3caab448f4577b84c8955eaa810e8f882,"Fix-up site.cfg
",numpy/distutils/system_info.py
f638095acfbc334074520e3938fe398a58c826c6,"support passing arrays with non-trivial mask to ufuncs
",numpy/core/ma.py,numpy/core/tests/test_ma.py
6dec38800a4d39b0384720bfde0df089fee0886b,"Added axis= argument to cross
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py
34535b95a1367750cdb4fa53a5a984f07391d97c,"Try to improve site.cfg search
",numpy/distutils/system_info.py
2b36f2037f212a884c68a126c30de299ad67057c,"Change the -1 entry of the fields dict to always be a tuple and enforce it on conversion from the names sequence.
",numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
7f0f842347b0be584df48ea08b18341e05e641b2,"Added a field method to recarray to allow field access via column name or index.
",numpy/core/records.py
dcdfc1c02eeadcebd84dc70bcc18a218dfa380d0,"Fixed importing test_unicode.
",numpy/core/tests/test_multiarray.py
b68b23ead2d4147f6360ab5c9049738de753f05a,"Removed spurious asmatrix test
",numpy/core/tests/test_defmatrix.py
888b883c8c5b9d34efb7a02d409d64bc053e12eb,"Fixed ticket 4
",numpy/distutils/command/build_ext.py
df636e21d191d9db9a2f0e07e561d5fb8a3e7ea0,"Applied Matthew Brett patch: clean up the logic in gnu.get_flags_arch, support to more recent cpus.
",numpy/distutils/fcompiler/gnu.py
9a651c5ff14ab81388ead5c8b1c6edf9f3f564c0,"
Fix fromstring docstring to point out that it can read ASCII strings with separations similar to fromfile.
",numpy/core/src/multiarraymodule.c
70a40679af0eb4e2613606b0f19ba32e3ece67dc,"Add a square() ufunc, and optimize power(x, <scalar exponent>) for ints and reals.
",numpy/core/code_generators/generate_umath.py,numpy/core/src/umathmodule.c.src
6b93ba8d5761b2a2c84c8375b80d2bd1e2c9cfd3,"Added unit-tests from Francesc Alted
",THANKS.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/tests/test_multiarray.py,numpy/core/tests/test_numerictypes.py,numpy/core/tests/test_unicode.py
263df7516f66a53dd9a93f6cd08ce98e30ad0eca,"Make Getptr function and macros return void *
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c
3faeb7eb7d496991eaa55996c6a9ada2248a2b29,"Fix segfault and move PyArray_Put fix from newunicode branch.
",numpy/core/src/multiarraymodule.c
adcc8b80b9c60136aef3b37891219b6e504398fc,"Fix typo.
",numpy/core/src/arraymethods.c
3eae4c1ea4d1fb2f756f339221316feb91cbc778,"Move scalar coercion rules to C-API.
",numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h
2236762d7c08265d5bd59685a0e761a91a3d1f9b,"Fix .view to not return scalars.  
",numpy/core/src/arraymethods.c,numpy/core/src/umathmodule.c.src
b3746796dc5608645ff5a9f4e46b4ef697a51a77,"Fixed allocation problem.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
17049d1f489ce9fa46014cf2839715ca663ffd22,"This is a test to see if I (tim_hochberg) can successfully commit.
",TEST_COMMIT
9175b192fe26d84a9c9b8a06c130baa3405721fe,"Add check to make sure title dictionary insert is not over-writing something already there.
",numpy/core/src/multiarraymodule.c
7d4d958724a9ea5259680e84a46837b86b1aefa8,"Fixed minrelpath tests for platforms where os.path.sep<>'/'.
",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py
8ee6df7668b3ae0568573620153e71e36c9c399a,"Fixed UNICODE functions to handle misaligned and/or byte-swapped arrays. 
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src
7e34c2e10baa325f2ca22a12e655b1729ae59785,"Change PyArray_Put so that values0 is forcecast to the right type.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
6fc0e44e5daab7dcaae4a3250b7545a263d6bfcb,"Fixed numpy.put docs, added a test checking a put bug.
",numpy/core/oldnumeric.py,numpy/core/tests/test_oldnumeric.py
ad19f35e7920f83356e44960d21fb9f958f2565b,"use array style in *_fill
",numpy/core/src/arraytypes.inc.src
d99b73b34ffc1778e9ff2423b56a8994d0e9be78,"Change accuracy of fill and more _WIN32 fixes.
",numpy/core/setup.py,numpy/core/src/arraytypes.inc.src,numpy/distutils/system_info.py,numpy/random/setup.py
f5209cbd46b7d6ad0a0960630189670adb2b3ccb,"Back out mistaken commit
",numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/gnu.py
ddf6e61b8c92311ec3215252aa117fd7fdaaf8ef,"Fixed join() -> os.path.join()
",numpy/distutils/command/build_ext.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/system_info.py
e5e72a41b507f9d18564aa881c9482c76d399c45,"Fixes to help compilation on Windows with MSVC
",numpy/distutils/misc_util.py,numpy/distutils/system_info.py,numpy/random/mtrand/distributions.c,numpy/random/setup.py
44f0e40eed3cc04292f1295ae524a1d5aedb382c,"Fixed get_path bug fix.
",numpy/distutils/misc_util.py
2eb3a4b6e293a96465229ce18109b2ccae97ca70,"Impl. rename() method for NumpyTest class that allows redefining mapping between module name and test_<module name>.py file name. Fixed bug with output_exception argument.
",numpy/testing/numpytest.py
622e6867a9b500d30333d157eaffdf44d3c52fe1,"Fixed bug in unicode change.
",numpy/core/arrayprint.py,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c
e4df04ac07a6442d711a34cfa64d64c033f4f1a8,"Speed up fill a little.
",numpy/core/src/arraytypes.inc.src
94291389d72f38b2a1641fd7b82d14e2fd691f1f,"Merged unicode changes back into main branch.
",numpy/core/include/numpy/arrayobject.h,numpy/core/numeric.py,numpy/core/setup.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c
fc7ac38dec262117bbc30698e0696e9911369207,"Fixed reference count problems.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ucsnarrow.c
094c14dfe3bb2f19979bde0978cff9a9f96ab321,"Finish reStructedText'ing CAPI.txt, and correct documentation of PyArray_FromAny.
",numpy/doc/CAPI.txt
b5953fe485134f2eea3072de9a3ecd45a224eee1,"Fix get_path to return correct path when module is __main__, but doesn't have a __file__ attribute.
This could happen if called as execfile(""setup.py"") when building eggs.
",numpy/distutils/misc_util.py
c8702529efbd7b121bf4eb4df15bfbb89a292ad3,"Clean up comments (and add a few) in arrayobject.h, for documentation purposes
",numpy/core/include/numpy/arrayobject.h
f1bffaafc8e94cb5e1e94bd0527410108903669c,"Created NumPy unicode as 32-bit.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ucsnarrow.c
520b1c94e456dacf814b1a2d1ff13e8133294cb1,"Add ucsnarrow.c code.
",numpy/core/src/ucsnarrow.c
9a4d9271638c5a1e28dc21a2d92d8d5d16d2fbd5,"Fixing new-unicode branch.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
2a59095bd73279d78c6af64b535fd08823c10273,"Augmented arange docstring
",numpy/core/src/multiarraymodule.c
34b811398d0a7ef3583a0539b1b61b343e55d237,"Fix record-array so sub-classes work.
",numpy/core/records.py
6ff711edc3e891d3ef1995f16be9b885a9a17088,"Refactored path fixing code to _fix_paths_dict. Apply path fixing to extension libraries.
",numpy/distutils/misc_util.py
7c5d117649249ff5eecaba9f7955b5ac5023c801,"Added f2py_info to retrive fortranobject.c.
",numpy/distutils/system_info.py
6852097668851bf05ec0ea8f4a328d8f7b74fa29,"use _fpclass on MSVC for isinf and typecast to double
",numpy/core/include/numpy/ufuncobject.h
45e4e480009d0b81102ca9ea431774a133dc4810,"Fixes to help compilation on windows with MSVC
",numpy/core/include/numpy/ufuncobject.h
8913a2b030b2ecbf76d19e32dd38f8e56b8ffd32,"Fixed intent(c) statement bug when only spaces follow.
",numpy/f2py/crackfortran.py
d34bdb294116f75b44e16326dc0374cfdd8de5f8,"Change to undefine any long-double defines.
",numpy/core/src/umathmodule.c.src
f2daadab7e3d3d87f37d6d207e794f14f5b75c86,"Add ifndef statements to all long-double and float functions
",numpy/core/src/umathmodule.c.src
43088663484ef7c4771c17ede665e67196a9c5e8,"Fixed get_path to return correct path when module is __main__. Fixes calling path/to/setup.py bugs.
",numpy/distutils/misc_util.py
5b8f347d93cc675edac0909b326e8b6b962f16d4,"Make unicode use w or W on output.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
79f73f394f16f03e335e215383abf03e93a88794,"Remove void * arithmetic
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
810f8fa8ede914c69619bf888322fde161516fd4,"Add data-type descriptor getitem ability and fix inconsistency between unicode typestr and data-type entry
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
1e78e193ac00b639f8f12bb20eb254ebf1c032b8,"Changed -M to -J for gfortran.
",numpy/distutils/command/build_src.py,numpy/distutils/fcompiler/gnu.py
0e8e7f154a559e0152ccf955e7bcec58bc4b849a,"Updated numpy.distutils tests site.
",numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/setup.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/src/example.i,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py
d8342ac3f90e7e0f3136293762db055de2c37682,"Added pyrex support to numpy.distutils.
",numpy/distutils/command/build_src.py,numpy/distutils/tests/pyrex_ext/__init__.py,numpy/distutils/tests/pyrex_ext/primes.pyx,numpy/distutils/tests/pyrex_ext/setup.py,numpy/distutils/tests/pyrex_ext/tests/test_primes.py
ad1f3dbd434e03db560406afe8363599aac42c79,"do not ignore strides in ndarray() when no buffer is provided - raise an error
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
1efcf75ddc2001780843b24e311d2479476a7ed5,"check negative strides and disallow zero strides
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
f767de2fa5da467ffc63943d41f90e3b70c5f7ea,"fixed a typo in an error message
",numpy/core/src/arrayobject.c
26181eb3501a37dd529b96978bb153e24c558dcc,"Some work on CAPI.txt to be better reStructuredText (only half done)
",numpy/doc/CAPI.txt
cba01fd50d2ea91faab702b1372ee2a3feb5e049,"More refactoring in numpy.distutils.misc_util
",numpy/distutils/misc_util.py,numpy/doc/DISTUTILS.txt
9e5252bd45403ddd97252d83ede5eeb6b72e0767,"Remove unused imports
",numpy/distutils/command/bdist_rpm.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/install.py,numpy/distutils/command/install_data.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py
91473bf148643b2412e595f0897c86076ecae1d2,"Add a void * cast to PyArray_DATA, and add PyArray_BYTES for the uncast version (which returns a char *)
",numpy/core/include/numpy/arrayobject.h
85fae8912301e6a2205c07e00bf22f43e7fa6020,"Partial fix to build failure
",numpy/distutils/command/build_src.py
01407b9b6c21b2685397ea8f0860e90c038914ae,"Precision representation improved when LONGDOUBLE == DOUBLE and bugfix in AsCtype
",numpy/core/src/scalartypes.inc.src
9a794fa867d664aaf85a82be2c7fadf2b7d5fe21,"Replace type(a) is (something) with appropiate is_string/is_sequence tests
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_py.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/exec_command.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/log.py
c0f4676426b86daa235331ed14720eaf7f7d461d,"Fixed missing Py_INCREF and added Francesc's tests for nested record structures.
",numpy/core/src/arraytypes.inc.src,numpy/core/tests/test_numerictypes.py
ad3b00ab4f4ebec2ce5d010f9c4065ea96dcdc95,"Change dtype.name getter.
",numpy/core/src/arrayobject.c
a3f10be56d041429363414abe3ec8ced6a76c2f2,"Fix typo.
",numpy/core/src/arrayobject.c
a09e74822cac777681486c6efe080602d942f1f7,"INCREF Py_True and Py_False before returning them.
",numpy/core/src/arrayobject.c
8920e59f4ef00175bdc765ddf99d291e238dbed3,"Fix so that equality and inequality comparisons of arrays with None still return True or False
",numpy/core/src/arrayobject.c
26188dcc2f6b28f53f87151f58c7e60a404879dd,"When using setuptools, run the build_src command before egg_info (which is run by the bdist_egg command).
This means that
python -c 'import setuptools; execfile(""setup.py"")' bdist_egg
works fine, without having to add build_src in there.
",numpy/distutils/command/egg_info.py,numpy/distutils/core.py
042a315ef2bf081067b4ed93ac7994016936653b,"Add /opt/local for directories searched for includes and libraries.
This is used by darwinports on OS X.
",numpy/distutils/system_info.py
f59515e452a522fb3b4989aada18eb84234bacc0,"Misc cleanups + replace `a` with %r or repr(a)
Also replace some type checks with misc_util.is_sequence or misc_util.is_string
or appropiate isinstance().
",numpy/distutils/ccompiler.py,numpy/distutils/command/build_src.py,numpy/distutils/core.py,numpy/distutils/exec_command.py,numpy/distutils/misc_util.py,numpy/distutils/system_info.py
c1b9a6e8b560ac77dede465a4c0f527429f24d3d,"Change name of scalars from <x>_arrtype to <x>scalar
",numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/src/scalartypes.inc.src
41496b7356906d31b61c2f208e622eb4bd0c2ec2,"Change arrtype --> sctype so that dtype is given pre-eminance in determining array type.
",numpy/core/numerictypes.py,numpy/core/oldnumeric.py,numpy/lib/getlimits.py,numpy/lib/type_check.py,numpy/lib/utils.py
8a52fe2795b224fb9e9daa3877e385a7975a7a5b,"Remove getitem and setitem from record class -- void type does the right thing
",numpy/core/records.py
e38f25a19be3ef74e688c512d6f61160ba07b4ca,"Fix up record class to allow getting items from list.
",numpy/core/records.py
b88a3fcd3405258f57ba8ec7ebefbacf13ff5019,"Fixing inplace support for data_files and py_modules.
",numpy/distutils/command/build_src.py
9e850093ec7cd543d51301c1a5e565247cd4bec8,"Fix long-standing dot bug.
",numpy/core/src/multiarraymodule.c
389d6d2d11f3caa0255218bd8cbdeca074c035ee,"Added warn,info methods to NumpyTestCase.
",numpy/testing/numpytest.py
8343ed35bde1628ec04fd09b0ab23587da89caf5,"Fixed a misplaced test messages by flushing.
",numpy/testing/numpytest.py
a6eeae554437155dfe1fd79c4f431618d9a000a9,"Renamed ScipyTest to NumpyTest, flushing printouts, fixed a bug of including too many tests in situations where we have xxx/__init__.py, xxx/xxx.py, xxx/tests/test_xxx.py.
",numpy/testing/numpytest.py
daf3e9fae50a559a9b731bbaa5e1532a08b5d5d7,"Fixed pkgload: synced behaviours of postpone and postpone_import flags.
",numpy/_import_tools.py
71f74ba1e86be798f35d59f4d632b9042c53eeb5,"Improved warn messages.
",numpy/distutils/misc_util.py
33279f11ed91b4175aaca16443ecd828b4b5c549,"Added options to Configuration.
",numpy/distutils/misc_util.py,setup.py
39ba8fc2bdf333811337d18d83c8611775649bb3,"Handle setup.py help and display requests without noise.
",numpy/distutils/misc_util.py,setup.py
ca90e3eba3c94de3bd13266ccfd9f96dbf23693a,"Fix-up record arrays that were not of dtype.type record.  Don't allow arbitrary objects with dtype attributes as data-type indicators.
",numpy/core/records.py,numpy/core/src/multiarraymodule.c
624787ad6dbdf9cd73749f29092d05e0f716f12c,"Fixed coercion rules so that integer scalar is not seen as a negative integer scalar unless it is actually negative.
",numpy/core/src/ufuncobject.c
f097ed4fa79aca45adf867a3f01bf677679559d7,"Fix bugs relating to adding hasobject.  Add scalar-loops for some operations to see if they are faster on some platforms.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src
0245ddea0b3a7ccf8dfc1a8366cbacb2232cefb8,"Fixed so that long integers convert to int64 arrays if possible.
",numpy/core/src/arrayobject.c
2438f98798fa6cf0443433d879365cd2121b6b5e,"Convert to arrays in piecewise.  Improve error-handling of object-array conversions.
",numpy/core/src/arraytypes.inc.src,numpy/lib/function_base.py
c0d68f47a04c22d1e9de64b8d09d43fb1b72fc63,"Fix the dot(shape=(1,), shape=(1,N)) case too
",numpy/core/blasdot/_dotblas.c,numpy/core/tests/test_numeric.py
bbca1e38ad33e95145c7e96229a3a5b6d012231f,"Fix inconsistency with un-optimized dot function
",numpy/core/blasdot/_dotblas.c
518655847eb27aadcccc4fb9fed27897fcc9828d,"Fix column-vector x (1,) in dotblas.
",numpy/core/blasdot/_dotblas.c
83d691d731082ec8d2367affb77b454c2a0b0855,"Add test for column-vector bug in dotblas.
",numpy/core/tests/test_numeric.py,numpy/lib/function_base.py
e97d2da5c89a2dc2ee87bc67d54b7d6a946835a9,"Fixed add_data_files for patterns. paths takes include_non_existing kw argument.
",numpy/distutils/misc_util.py
4c2ce0ae3095ce4f7420bfb88fafd51aca5a0a46,"Introduced njoin and minrelpath to handle relative paths and containing slashes in an OS independent way. Fixed a __svn_version__ installation bug.
",numpy/distutils/misc_util.py,numpy/distutils/tests/test_misc_util.py
ba6c2ba95f4d0ab8a6c153a617aa5d1c789318a5,"Fix bdist_rpm for path names containing spaces.
",numpy/distutils/command/install.py
b8e4a5f019da3020939407e447b0631db5e17371,"Store the relative path inside the installed package as part of the Configuration instance (instead of recalculating each time)
",numpy/distutils/misc_util.py
ee0533b791d62c87bee0e7b7a174840917bc7d9d,"Add site.cfg to datafiles installed for numpy.distutils.
",numpy/distutils/setup.py
ebb9354ecc7a06bdbdc033340e45511bfd110085,"Cleanups of numpy.distutils.misc_util
Mostly covers replacing typechecks using type() with two routines: is_sequence and is_string.
",numpy/distutils/misc_util.py
c6c45c053488a63057e7758dc9531f91d86cc5ce,"More missing names from Numeric.
",numpy/core/oldnumeric.py
c3761a4940346ef33976f87879c9842110f0a968,"Add UnsignedInt32
",numpy/core/oldnumeric.py
f94d937892c7d82bdb35115968f6fa0d2d8d67cc,"Resolve paths in add_library include_dirs..
",numpy/distutils/misc_util.py
6bf1820ba23583a96331dedc07338dc2ee78564b,"Added data_files generator support - removed a piece of core.setup function.
",numpy/distutils/command/build_src.py,numpy/distutils/core.py,numpy/distutils/misc_util.py
b7cc1f63d4bd51ea8df16305d8213a10d7493f3a,"Add ndindex iterator to complement ndenumerate iterator.
",numpy/lib/index_tricks.py
606c857c8e5c9ee844a58dd5919d14a6eaff191e,"Prefer xxx/setup.py file over xxx/setup_xxx.py when both exist.
",numpy/distutils/misc_util.py
e59bb826219298274ca8c2a87f94e83b52a6175c,"Added simple pattern support for Configuration.add_subpackage method.
",numpy/distutils/misc_util.py
f6d28d03b06dd15c9523a84047d6bec8b987b2d9,"Simplify the ndenumerate class by exposing coords and index from flat iterator.  Simple cosmetic changes to ffts.
",numpy/core/src/arrayobject.c,numpy/dft/fftpack.py,numpy/lib/index_tricks.py
5da0b20fd90045f35b2b76e3ddff4f1c6c48908a,"added simple tests for reduce ops
",numpy/core/tests/test_ma.py
434501d7248bf5c53aa0ab8df3bfea81ca95f198,"fixed alltrue and sometrue
",numpy/core/ma.py
656b8ba14074b62b0560748324fd66186410e396,"Simplify hasobject checks by setting hasobject to 1 for OBJECT_Descr data-type descriptor.
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
2a71223ff0ca8ff7c9f7cb69c73de19ae19c1782,"Raise error when using same field names and disallow object fields for now.
",numpy/core/blasdot/_dotblas.c,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/dft/fftpack_litemodule.c
9dc43c41723027dc9cb924e98d3e7a37f4f7069d,"Fixed f2py bug in calculating dims vector when expected rank equals to array rank.
",numpy/f2py/src/fortranobject.c
f1421a973c1d57ca8c2a6ce6ca7a20f2cf766af5,"Updated f2py tests to recent numpy CAPI.
",numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c
83051c178723515a51270e731aacac5434ba7d43,"Check for duplicate field names. Change .arrdescr --> .descr  and .subdescr --> .subdtype  in the dtype object.
",numpy/core/_internal.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
14cc42d233c139c1146398e880e38dfe246b12fb,"Fix so that string and unicode types don't print NULL bytes
",numpy/core/src/arrayobject.c,numpy/core/src/arraytypes.inc.src,numpy/core/src/scalartypes.inc.src
6a355bbee8dbfdbc33f4254a4bcdc35ec1c401f7,"Added missing return to f2py generated ext/module init function.
",numpy/f2py/rules.py
4b644a764e0f4d2d6efff0aa73cf51b53d36f808,"Remove bad 'fix' for f2py
",numpy/f2py/src/fortranobject.c
d1fd99dc4b15fa6d1f943aec4f4fdc7c03537559,"Undo special checks for dimension=1 in contiguous and Fortran-ordrer checking routine.
",numpy/core/src/arrayobject.c
a47cfdcf0dea1e9c3135296c229f36e45fe589a4,"Fixed setup.py sdist.
",numpy/distutils/command/build_py.py
16c544e58ff095cad64b9a57c2f7406b2e768409,"__config__.py files are generated through py_modules list. Added get_info method to Configuration.
",numpy/distutils/command/build_py.py,numpy/distutils/command/build_src.py,numpy/distutils/misc_util.py,numpy/doc/DISTUTILS.txt
b1b17f10d24a62112d843bc1b99aab977f3c6680,"Fix umath module load mistake.
",numpy/core/src/umathmodule.c.src
0917323eb52e2eed8bc84bf844cbcdcd6e6bd12e,"Don't raise fatal errors on load.
",numpy/core/src/multiarraymodule.c,numpy/core/src/umathmodule.c.src,numpy/lib/src/_compiled_base.c,numpy/linalg/lapack_litemodule.c
5beecfe93c4755dc18726b8135e79ef06cdfc470,"Add ndmin to array constructors.
",numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/lib/shape_base.py
2718405df3959d6add724e40a7a4d2e6588d8999,"Ignore implied-do list in data statement.
",numpy/f2py/crackfortran.py
4c7ad57fc7503e50351b0139be396e3d7f38b7ab,"Instead of Fatal error in f2py ext.modules let Python handle raising an exception.
",numpy/f2py/rules.py
1b3333b52a242dff187c0254eba2cf9b1c182bb1,"Fixed C-API to not use special types
",numpy/core/src/multiarraymodule.c
3c11cd72a14a8e7ac5555736a5f575c305f66c20,"Fixed get_info for Numeric. Doc fixes.
",numpy/distutils/system_info.py
47306a9aa39ff18976f977c0dace3f23c30a9132,"Switched order of NDARRAY_VERSION C-API check.
",numpy/core/code_generators/generate_array_api.py
4eeb659b1ec21647c448d50803cc51a7a351666b,"Fix 2.3 compatibility.
",numpy/core/setup.py,numpy/core/src/arraytypes.inc.src
d297382e0024174d463d7b03ef57525bf687104c,"Bumped up version after release.
",numpy/version.py
f32a4e4d4836da7cf9e43f7b14e31a3922713b35,"Comment change in fortranobject.c better.
",numpy/f2py/src/fortranobject.c
34b8ce671b12e9ee6740dc4df32fafc2eae44f64,"Added LICENSE.txt to distribution. Fixed f2py check_and_fix_dimensions to not reverse dimensions.
",MANIFEST.in,numpy/f2py/src/fortranobject.c
beb7e7c80b325df0c16419ce63d87cc2c6ea5ada,"Added tests for fromstring.
",numpy/core/tests/test_multiarray.py
f18a0fab69c9da73e3f30231403abede272de1c4,"Fix uninitialized variable.
",numpy/core/src/multiarraymodule.c
4072234146d63644ed0e658f685a5575ca051d9d,"Fix a few more improper uses of .dtype attribute.
",numpy/core/defchararray.py,numpy/linalg/linalg.py
1b409ce9fe55ebf61eaa5d295753b0b8ad1efcf2,"Update C-API version.
",numpy/core/include/numpy/arrayobject.h
e5a5e245f19f3bf6aa606a43e262be5431ade27f,"Added ability to read ascii strings in fromstring.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c
d51b059ba26db75b2358a1ee2eafdd2398eecb6a,"Fix arange to accept None and treat it as if it hadn't been passed in.
",numpy/core/src/multiarraymodule.c
67e756592f6ebec479e404a104380ca373ad11f1,"Add a BSD-type LICENSE.txt file
",LICENSE.txt
6b724c9e4798b919858c3a980c3e865eb4a055c1,"A few safety checks for platforms where SIZEOF_LONG < SIZEOF_INTP -- windows 64-bit I think
",numpy/core/src/arrayobject.c
a0a42fce29c83184f730b08cf48828edd35bb99b,"Fix conversions to NaN for other floating types
",numpy/core/src/arraytypes.inc.src
3249d3b68eb2132ab0e1dcbf228618bcb326c417,"Fix so that None converts to Nan in array conversion.
",numpy/core/src/arraytypes.inc.src
f3a4e8ff8d76dbadd59d4d4e2efc359d3b2db091,"Fix str representation for rank-0 arrays
",numpy/core/numeric.py
97f03d64d86f6d7a7c9135c44ef97baf17e6ce15,"Fix segfault when using subdescr.
",numpy/core/src/arraytypes.inc.src
e45d0eb3dd55af9e1347bf39307be5695c67bd7b,"Change License text to NumPy License (permission granted by Pearu)
",numpy/f2py/auxfuncs.py,numpy/f2py/capi_maps.py,numpy/f2py/cb_rules.py,numpy/f2py/cfuncs.py,numpy/f2py/common_rules.py,numpy/f2py/crackfortran.py,numpy/f2py/doc/collectinput.py,numpy/f2py/doc/index.html,numpy/f2py/docs/README.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/f90mod_rules.py,numpy/f2py/func2subr.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/use_rules.py
e966fd194660c6e1a3f560a70415fa986fc84309,"Remove unnecessary check.
",numpy/core/src/arrayobject.c
9ccdfb64beb215ca845e07aa469d13a968dc8676,"Change order of descriptor functions to match required vs. non-required.
",numpy/core/code_generators/generate_array_api.py,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arraytypes.inc.src
e8d618404b33962e896c45c6419c5daabdee4961,"Fixed error in no-axis methods for matrices.
",numpy/core/src/arrayobject.c,numpy/core/tests/test_defmatrix.py
502af603c2b1cc85696fc62f4b0a79842887f07b,"Fix so that arrays never become scalars using .copy() command
",numpy/core/src/arraymethods.c
45475dd140ce5ce8e9f2f9cbd5573e5b288c87dd,"take advantage of nomask=False_
",numpy/core/ma.py
b22888655e8136aa3f60932f83d211602206f034,"changed nomask from None to False_
",numpy/core/ma.py
c8ca3be233f0cc830be025f80b18eefcaaf62ccd,"Fix inappropriate DECREF.
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c
01597c2bbe93f5d444355fd6efe5322da53bc770,"Made ma immune to a bug in choose
",numpy/core/ma.py,numpy/core/tests/test_umath.py
39edf8031bbbaad86b85195e0db3090ad9c9f681,"Defined False_ and True_
",numpy/core/numeric.py,numpy/core/tests/test_numeric.py
7cff614fe4080f735fe6b66c0f55ff4377b750bd,"numpy no longer needs to be a namespace package.
",numpy/__init__.py
8e801afb78576b88737b97e5e1b2ca79930d5fb4,"Fix reference counting problems..
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_numeric.py
481610f17412a2b2aab09c18c3d43e3a76386212,"Fix bad strides in complex scalar-matrix multiply.
",numpy/core/blasdot/_dotblas.c
490cbac6ec792b77f7090e56f8172c35386d88c1,"More optimizations to indexing...
",numpy/core/src/arrayobject.c
5c62c0e4f5252717f2e9b5ec720f1b6189791865,"faster 'nonzero', &, | and ^ for bool_
",numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_numeric.py
70e790a6cca9a4c825eef10fbbfb1d5b5e593e06,"Speed ups to indexing..
",numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c
8755f5394b81b8454a8da3a59f0f3c210027b236,"Using /etc/ld.so.conf and LD_LIBRARY_PATH to detect MKLROOT. When MKLROOT is not detected, using MKL is disabled.
",numpy/distutils/system_info.py
ee811d8a07cdc121de6ff96d4ffa6482fc8ce410,"Added NDARRAY_VERSION check on import_array
",numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/multiarray_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
6a30aaf84be313b29a4072ec3357ff5e4a6b2d74,"Add restore functions to numpy.dual
",numpy/dual.py
107c7d31a655be8fdf0c58ea7274ec98149d56fd,"Use a register_func system for altering functions in numpy.dual
",numpy/dual.py
f7d8a57f0818f294fdd49c5025273075dd168704,"Cleaned up some uses of CheckFromAny
",numpy/core/include/numpy/arrayobject.h
044fa497f3c89b48134e00455dd3035a49aa7fdf,"Fixed up PyArray_FromAny and friends for API --- recompile extensions...
",numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/array_api_order.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/f2py/src/fortranobject.c,numpy/lib/src/_compiled_base.c
ac121be4bfd3775c568bfc59463dc43ceb99e2f6,"more tests for {{{__array__}}} calls
",numpy/core/tests/test_umath.py
3611572660cf54116ea493bf198f8c0e8b345b69,"More optimization in iterator for 1d.
",numpy/core/include/numpy/arrayobject.h
f5fef908b488cfd4d752945f845f72148450b951,"Re-order optimization in iterator for 1d.
",numpy/core/include/numpy/arrayobject.h
39d51cd0c133c5e9e1b7adb9a9e95ecd76754287,"Add optimization in iterator for 1d.
",numpy/core/include/numpy/arrayobject.h
a58b3f7ba6bbca7ce937b456b4ab0d25ecf12cc5,"Fix problems with non-square matrices in _dotblas.c
",numpy/core/blasdot/_dotblas.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_numeric.py
ecd4f328c4f434d41d96d52e3e7535cedb99ef81,"Revert passing -m32 to g77
",numpy/distutils/fcompiler/gnu.py
b38716564107fd241239c864d0ce9e68fbf82581,"static allocation of boolean values
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src
968b9239c6b2401d6688bf86d55bbcc6a48cc3b7,"intern bool_arrtype values
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/tests/test_multiarray.py
5aab814ef2fa34881a3d9914c6d056f445c31625,"Fixed char.array function
",numpy/core/defchararray.py
59bd3423de053f3d4d9e286cf268fbaf047662d3,"added passing optional context to the __array__ method
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py,numpy/distutils/fcompiler/gnu.py
c701bc5af0d0b24e4aba0422e1e0ea6ce0ac4cf6,"Fixed up inappropriate copy...
",numpy/core/blasdot/_dotblas.c,numpy/core/src/arrayobject.c,numpy/core/tests/test_numeric.py
d1e5d1de77e30c233e98ea7c35f8d7b4623fd1f3,"Use pickle.loads/dumps for test_ma to avoid littering the filesystem with test9.pik files.
",numpy/core/tests/test_ma.py
0e1c71808725c49f65d84847cc6fc7e88909a6de,"Reset MAX_DIMS to 32 and add tests for dot.
",DEV_README.txt,numpy/core/include/numpy/arrayobject.h,numpy/core/src/multiarraymodule.c,numpy/core/tests/test_numeric.py
e5bd12f3dd9e408faea445e963e28654fe9c3327,"use nomask instead of None
",numpy/core/tests/test_ma.py
8706ede51b2d6c07f5afb1880f229f227b3795ae,"fixed filled(masked)
",numpy/core/ma.py,numpy/core/tests/test_ma.py
76761ff119acab82da016358d13b8e4bb4c6c34d,"Fixed dotblas for zero-size arrays.
",numpy/core/blasdot/_dotblas.c,numpy/core/defchararray.py,numpy/core/numerictypes.py,numpy/core/records.py,numpy/core/src/multiarraymodule.c,numpy/distutils/misc_util.py,numpy/testing/numpytest.py
e92c9c4400da1024053666b62e2e20bd312a937c,"Add Paulo's improvements to _dotblas.c and don't always require contiguous.
",numpy/core/blasdot/_dotblas.c,numpy/core/defmatrix.py,numpy/core/src/multiarraymodule.c
4593515985f1aa30cf07715ace5eeee6da848c97,"Fixed up usage of dtype to be consistent with new dtype objects.
",numpy/core/defchararray.py,numpy/core/ma.py,numpy/core/numerictypes.py,numpy/core/oldnumeric.py,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src,numpy/lib/getlimits.py,numpy/lib/type_check.py,numpy/lib/utils.py
a397b5545b1a20e1b0e39881eb8cf8d2dd26b793,"Load numpy.linalg on import
",numpy/__init__.py
fd4b2e843bb94bda0e998428b62569c505f85862,"Fix equality comparison for object arrays.
",numpy/core/src/arrayobject.c
74ce98641418066a56dfd9f0d198d735002d8138,"Add docstrings to index_tricks functions (r_, c_, ndenumerate, index_exp)
",numpy/lib/index_tricks.py
1f45e43c307e8d93f7c6cccb5b95d4092366f5be,"Fixed uninitialized memory in real_fft.
",numpy/dft/fftpack_litemodule.c
edc8a8542059b76f131d5d32612543d506970a48,"Fix shape() function.  Fix so that longdouble typecode never overwrites double if longdouble is the same as double.  Fix missing math module import.
",numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/oldnumeric.py
8b271e09233bdb81d0f4706e1021ca2e5c227fe3,"Move handling of array priorities in dot-related functions to a separate function.
Also fixes 'unused variable' warnings which were bugs.
",numpy/core/blasdot/_dotblas.c,numpy/core/src/multiarraymodule.c
f22f844e4fd3cf724c250d850f6b04bf1650aa9f,"do not mask errors in {{{__array_wrap__}}}
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
1a897288732e541db9f42cff8122c7886791d438,"Remove the automatic squeezing from _dotblas so that it is compatible with Numeric and non BLAS optimized matrixmultiply.
",numpy/core/blasdot/_dotblas.c
d868ba28c1d31faa1b0b1b6684e316ae329bc549,"Made dtypedescr name attribute always report bit-width; fixed memmap slicing; Improved documentation of convertfile and convertall in convertcode.py
",numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/src/arrayobject.c,numpy/lib/convertcode.py
02f61f06d44bd8f118d9e9727910c77337857857,"Fix unnecessary priority checks in multiarray and use C-API call in ufuncobject
",numpy/core/src/multiarraymodule.c,numpy/core/src/ufuncobject.c
9e0de87f23c875b807bf1a2f99d5513a102104e6,"Minor renaming.
",numpy/core/defmatrix.py
03c804239307a3d71b3df0dc69e4538dcf80f1c8,"Speed up matrix-vector calculations using matrix class.
",numpy/core/blasdot/_dotblas.c,numpy/core/defmatrix.py
ded59130b65a2046f2aea9a4d3d255437b527141,"Do not check {{{__array_priority__}}} if only one instance with {{{__array_wrap__}}} is
in the argument list.

Added more tests for  {{{__array_wrap__}}} selection.
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
ee91d88c01947723ae6ee7f0255f8357f7d8845c,"Fix bad use of .dtype
",numpy/lib/polynomial.py
0283b6f480b7239dc1390dadf29fcb5e1f2516e3,"Moved .dtypedescr to .dtype; .dtype->.dtype.type; .dtypestr ->.dtype.str; .dtypechar -> .dtype.char
",COMPATIBILITY,numpy/core/_internal.py,numpy/core/arrayprint.py,numpy/core/blasdot/_dotblas.c,numpy/core/defchararray.py,numpy/core/defmatrix.py,numpy/core/ma.py,numpy/core/memmap.py,numpy/core/numeric.py,numpy/core/numerictypes.py,numpy/core/oldnumeric.py,numpy/core/records.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/tests/test_defmatrix.py,numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py,numpy/dft/fftpack.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/lib/convertcode.py,numpy/lib/function_base.py,numpy/lib/index_tricks.py,numpy/lib/shape_base.py,numpy/lib/tests/test_polynomial.py,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/linalg/linalg.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/numpy.pxi,numpy/version.py
d04bb02f393f0122e52b804bf548e0e18a0a2ecc,"handle odd scipy installations
",numpy/dual.py
42b3ee706e1524d5133211731da6888c8753df07,"fixed handling of __array_priority__
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
90b8e1d7b96f8283ad91a02d8cdcd602f1335f17,"Added missing info.py files
",numpy/distutils/info.py
aaf9d392bf4c5943669e2c599c0215cc3bedc8f7,"Making f2py and distutils scipy-style packages. Using pkgload to load numpy packages.
",numpy/f2py/info.py
2cdbd57b9e141770e66b7340f9e04ef746b00a6c,"Making f2py and distutils scipy-style packages. Using pkgload to load numpy packages.
",numpy/__init__.py,numpy/_import_tools.py,numpy/distutils/__init__.py,numpy/distutils/fcompiler/ibm.py,numpy/f2py/__init__.py,numpy/lib/info.py
5410f3426f3a6a97f5053dcf96f593d4bdde769a,"fixed domains for arccosh and arctanh

TODO: replace literal constants with appropriate machine
specific values in arctanh and tan domains
",numpy/core/ma.py,numpy/core/tests/test_ma.py
dde45b170499fbe3202e45e93eeb2acb08837c45,"use extended {{{__array_wrap__}}} in ma
",numpy/core/ma.py,numpy/core/tests/test_ma.py
ceda8cd63caa516c1a3bb3249afe2a357c788240,"extended __array_wrap__ see wiki:MaskedArray
",numpy/core/src/ufuncobject.c,numpy/core/tests/test_umath.py
6de260c36f24bdd93cef333fbd0df964b7adf440,"Finish the fix...
",numpy/core/src/umathmodule.c.src
438efdea7004a9d9962184854dcb02df82e6f897,"fixed printing of masked zero-rank arrays
",numpy/core/ma.py,numpy/core/tests/test_ma.py
c5d8aaf28f1fad0baf3b9d8c867b66872f2c0f25,"Remove expm1 and log1p from C99 defs.
",numpy/core/src/umathmodule.c.src
f64c19f720420b7ad0a10355864dc1f69364ef26,"fixed core dump for invalid __array__
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
ed647a020935de7d43b2d51c2625dc86ddc1291e,"fix up the expm1 and log1p additions.
",numpy/core/src/umathmodule.c.src
968dd66df41a74bc3aea2c806705fdf4c52e61ee,"fix up the expm1 and log1p additions.
",numpy/core/src/umathmodule.c.src
3883205632b3569a8741176b3888ea48485cf188,"Add generate_div_by_zero
",numpy/core/include/numpy/ufuncobject.h
8aee1fe94c2d0c0d83d28f7cac7db4832e0e7026,"Fix AIX portion of code
",numpy/core/include/numpy/ufuncobject.h
42779fea3ed52eac633f4d12ca4f9d355ffb5535,"introduced nomask = None constant
",numpy/core/ma.py
0a407f99008973cead33d672c44006fbfa285a34,"made 'masked' rank-0
",numpy/core/ma.py,numpy/core/tests/test_ma.py
071f111e8c14ac2286722fb147254aebd8ff98d3,"Make (type, 1) case equivalent to type
",numpy/core/src/multiarraymodule.c
ece9e80e8eb587ed11958403a34fb8b9de0fdb51,"Fix segfault in constructor when dtype not given.
",numpy/core/src/arrayobject.c
470bc4b47535a4749037661881aad82a44b1fd9b,"Fix the complex version of expm1
",numpy/core/src/umathmodule.c.src
a41d567109efa6c887b972da0b20b50f096cd279,"Use better functions for inverse hyperbolic functions, and expose log1p and expm1.
The functions are transformations mainly due to Kahan.
",numpy/core/code_generators/generate_umath.py,numpy/core/setup.py,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_umath.py
f1a1c7c72fb77edbd38c08414174052dcdd7ba79,"started filling in missing ma.array methods
",numpy/core/ma.py,numpy/core/tests/test_ma.py
74cc5f80fedd223b3dace284a7456c5d16187b52,"Fix up use of aligned keyword.
",numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c
f547239676d6803e8644bacb3023aa0aed031425,"Fixed-up tests we are not returning object array scalars...
",numpy/core/tests/test_ma.py,numpy/core/tests/test_multiarray.py
fec83ff625de7f0481fb82717b3e599093507b4f,"Don't return Object Array Scalars.
",numpy/core/src/arrayobject.c
7433c36a44abc08281b9a4c69c6a00b3d885545e,"Fix arraysetops.
",numpy/lib/arraysetops.py
a13aad3ac33b629f3e696b4d4d5dbf4b5605d567,"Add support for generators in NumPy sum
",numpy/core/oldnumeric.py
9a1d729679a1470530014a0ed79bbd7b42fecfa6,"Rename arguments in arraysetops to follow convention.  Add bsum for builtin sum.
",numpy/core/oldnumeric.py,numpy/lib/arraysetops.py
efa20eba4c84c282c1932cbd3a0f4154a3e7a026,"Don't wrap ndarray's in object array wrappers.
",numpy/core/src/arrayobject.c
2ea2a8751198880820adaebd55f4e0f1979aeaea,"Change the order of attribute lookup for object array types.
",numpy/core/src/scalartypes.inc.src
45c7e2bb8135146245b5a980560e4d0a2b3a7868,"Improved object array-scalar types
",numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src
ba52e16f2f18d11155a5508cd85f0737d4657ffa,"allow assignment with multiple same indices as susbscripting.  Limit to 1 ellipsis object for 0d array subscripting.
",THANKS.txt,numpy/core/src/arrayobject.c
04d73382bcf31f51726e2e7aae2cc7772a71d84f,"Spell newaxis in lower case in error messages and comments
",numpy/core/src/arrayobject.c
b32744e3fc5b40bdfbd626dcc1f72907d77c01c4,"implemented newaxis support for zero rank arrays
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
8b2fae0d075320b8e9d2cb8e4e4c9c934f7cc6fa,"Added check for floating point support.
",numpy/core/tests/test_umath.py
cdcb6064252fc91898145dcf2b09a0dcb3f98fbd,"Added openBSD and FreeBSD checks.
",numpy/core/include/numpy/ufuncobject.h
8f1c332478ddcb4616fcf9124754190daafca502,"Fixed up bad-checkin of ufunc code.
",numpy/core/include/numpy/ufuncobject.h,numpy/core/src/arrayobject.c,numpy/core/src/umathmodule.c.src
2a53be68a5e03c27da908b39ae7cfa6344447946,"Added floating point support and changed default number of MAX_DIMS to 20
",numpy/core/include/numpy/arrayobject.h,numpy/core/include/numpy/ufuncobject.h,numpy/core/src/arraytypes.inc.src,numpy/core/src/umathmodule.c.src
743d922bf5893acf00ac92e823fe12f460726f90,"implemented a[...] = v and a[()] = v for zero rank a
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
52c1871f6e840bb46bbd1df6f44501e896f73495,"Fixed up segfault and error in r_
",numpy/core/src/multiarraymodule.c,numpy/lib/index_tricks.py
9024ff0dc052888b5922dde0f3e615607a9e99d7,"allow x[...] and x[()] for zero rank ndarray x
",numpy/core/src/arrayobject.c,numpy/core/tests/test_multiarray.py
e2f62fa6b68cf07a871c22ea1a2b1635c23300f2,"Fixed missing keyword.
",numpy/core/src/multiarraymodule.c
f2ab33204daac2a90c8167dbfc9e6d5af97aa52a,"Fixed multiarray.dot([],[]).
",numpy/core/src/multiarraymodule.c
669969980843dc207db170d99fa0884594c6bc7e,"Arraysetops added to numpy.lib
",numpy/lib/__init__.py,numpy/lib/arraysetops.py,numpy/lib/info.py,numpy/lib/tests/test_arraysetops.py
cb69a9f6ce005671cd7b39ebb16d7469d958fa5a,"Improved warning message for non-existing packages in pkgload call.
",numpy/_import_tools.py
5d495dd5e9c3f1d2311a3a860a11c7d220f18e8d,"Fixed pkgload docs.
",numpy/_import_tools.py
4fecd1eed369a26d6205c95648b27494965bc7c0,"Documenting global_symbols in __doc__ and fixed formatting.
",numpy/_import_tools.py
e3d3245e3c02bda0493fc020f354341bba2e285c,"Undo r1855. x[m] does not raise ValueError anymore.

See Travis' r1836.

",numpy/core/ma.py
ff02df4a7561baf68e2906a336658f34dd670a23,"Undo size-0 iteration changes and fix possible core dump in PyArray_Return.
",THANKS.txt,numpy/core/src/arrayobject.c
c1cdece490e054bad809f4ca5817930944d99541,"Fixed a failure in test_ma reported by Nils Wagner
See http://aspn.activestate.com/ASPN/Mail/Message/scipy-dev/2969615 
",numpy/core/ma.py
0a6b8e4fcb3573c66416c8e6fb53814f73b328ec,"Fixing scipy.lib and numpy.lib names conflict.
",numpy/__init__.py
a71140e506732899d279269bd3ac98be9e823cec,"Fixed up so that at least element-size is allocated and iterator of size-0 raises an error
",numpy/core/src/arrayobject.c,numpy/dual.py
4596572c65c77590fff709a85a3992254cc145d3,"Fixed the case when scalar mask is not None but False (see r1850)
",numpy/core/ma.py,numpy/core/tests/test_ma.py
9974432933d79aa0ec94344a56e280bd015b7652,"Fixed printing of masked arrays
",numpy/core/ma.py
b12fbb15a6d920272a7073a4c08cd4a3f57d6d56,"Fixed the following bug:

>>> from numpy.core.ma import *
>>> array(1,mask=0).filled().dtype
<type 'object_arrtype'>

Now:

>>> array(1,mask=0).filled().dtype
<type 'int32_arrtype'>

",numpy/core/ma.py,numpy/core/tests/test_ma.py
158925966f1796d93ab804f3ebecec7b524e70f4,"Fixed missing _obj2str attr bug.
",numpy/_import_tools.py
9cfe6d56ab1b9ade126d5b122b14ab4507f5ea5f,"chararray -> defchararray
",numpy/core/records.py
b97b6d52a3381d4b00014570c3810c3781d931d6,"Added some more tests.
",numpy/core/tests/test_multiarray.py
1e5c9e9f243fe4f74c37df93a7e1e4b0c8d9d0f3,"Minor cleanup.
",numpy/core/__init__.py
b65c07db16633b9798bd2b0f562cdd2262b2d18c,"Renamed module file to minimize confusion.
",numpy/core/__init__.py,numpy/core/{chararray.py
ea20506b9414bf8a6d86cbfd68b0e54be6466aaf,"Slight change for memmap
",numpy/core/memmap.py
48079cbd5da130e0d3db4e65814fe0d8f2cbd500,"A few cleanups to error code in PyArray_NewFromDescr.  Some checks so that certain subclassees cannot be created inappropriately by .view()
",README.txt,numpy/core/chararray.py,numpy/core/memmap.py,numpy/core/records.py,numpy/core/src/arrayobject.c
ddff28c9595a3742e967f4eb892632d2ba99a0b6,"Fixed import for undefined triu.
",numpy/linalg/linalg.py
2dee64455c7e32db4e51c1d531a10a714f3da2d7,"Fixed up errors..
",numpy/core/defmatrix.py,numpy/core/tests/test_ma.py
36d71451129490dcaa88f903f5090f42fd42d073,"Fixed small error.
",numpy/core/records.py
6315c4c27eaeca7f2080ea585b1901e2b683b3ff,"Added new feature to .view method so that if the argument is a sub-type of the ndarray, an object is returned with all the information of the array.
",numpy/core/__init__.py,numpy/core/_internal.py,numpy/core/chararray.py,numpy/core/defmatrix.py,numpy/core/memmap.py,numpy/core/records.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/lib/function_base.py
5f5c4b92573a060d20cf9bbf70db00d45cda7268,"Included locals info to error on negep.
",numpy/lib/machar.py
1eab315ff7027ce74e5d2f59097c6cf7d05c551f,"added a test case for mixed operands
",numpy/core/tests/test_ma.py
c4c576367acbeb9546219a8a2851bbd260d6a529,"Allow resize(a,0)
",numpy/core/oldnumeric.py,numpy/core/src/arrayobject.c
4ac586f3122cefbbced1a890185645709d219a73,"Fix-up so that masked array returns masked array when ufunc does the adding.
",numpy/core/ma.py
842f9779b63236828785322b5d4a7fc53950a404,"Fixed printing of the masked objects
",numpy/core/ma.py,numpy/core/tests/test_ma.py
543811b1592d63a57e17b62661b9ed2b33978498,"Fixed namespace issue.
",numpy/core/__init__.py
c8b5a7e9e0d39c225ac3e590d83ebf869d9c1235,"Fixed error in setflags and added a few unit tests for test_multiarray
",numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/testing/utils.py,numpy/version.py,setup.py
9dd16b4b933636baeb28076d73f4bdd7ab006527,"Added fftw2,fftw3,fft_opt info classes.
",numpy/distutils/system_info.py
218033db10a2fd643cf30857cfff7bfd15bf2555,"Updated a few TODOs
",TODO.txt
02656952c1ca3e5814d44ad26e2c1a0598d93fd3,"Added Chris Stawarz patch for solaris.
",numpy/core/setup.py,numpy/core/src/arraymethods.c,numpy/core/src/scalartypes.inc.src
8c293949830d75c9e43740ba9b98d8bc6d587a76,"Applied Darren Dale patch about detecting libdjbfft.so
",numpy/distutils/system_info.py
0fa6516b6fed1b2a10cd768464790ab61c65e87a,"Impl. get_pkgdocs and cleanup of _import_tools.
",numpy/_import_tools.py
70216261ceea4ea801c7dbbcd487ba7c7733fec0,"Doc updates and removing NUMPY_IMPORT_VERBOSE from numpy.
",numpy/__init__.py
f8f8ca74391b5681d4e16bccc282ada87a6d0b8d,"Copy input for i0 calculation.
",numpy/lib/function_base.py
cec9a2ee40ef84dab429e71825ea9c4c9765aa40,"Cleaning up __all__ list and numpy namespace.
",numpy/__init__.py,numpy/core/__init__.py,numpy/f2py/f2py2e.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_twodim_base.py
8b1e2f929fdfb79e0a446a1fb7bec33a799d492b,"Add a few more docstrings using add_docstring.
",COMPATIBILITY,DEV_README.txt,numpy/__init__.py,numpy/add_newdocs.py,numpy/lib/function_base.py,numpy/lib/src/_compiled_base.c
b97663c8b33bbce12926887bf6ddac68fbadb42d,"Remove deconvolve
",numpy/lib/polynomial.py
4dd79b090e85566d3d3290357c3a9bbdd2558dc1,"Added i0 natively for kaiser window
",numpy/_import_tools.py,numpy/core/defmatrix.py,numpy/core/ma.py,numpy/dft/fftpack.py,numpy/dual.py,numpy/lib/function_base.py,numpy/lib/mlab.py,numpy/lib/polynomial.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx
de399f0bc36d35703bb87a79ce3510c7ccada586,"Fixed name change.
",numpy/distutils/misc_util.py
88cfa336bb8462718bd2ffcaaaa8146460a52f3c,"Restore _import_tools.py.
",numpy/_import_tools.py
8081b28a284049bec54db9479de3e1d34380589a,"Re-added sasha's 1780 patches
",numpy/core/ma.py,numpy/core/tests/test_ma.py
c2b11e885235161de4cf34eff4392ef9c746dad3,"Removed pkgload from numpy - all imports can be done explicitly.
",numpy/__init__.py,numpy/_import_tools.py,numpy/setup.py
10d4896f49e6af4be274367077455dd21fee4044,"Removed pkg names from dual
",numpy/dual.py
f69c9a67449c1dc61ba24e1bc1319e87a89a6388,"Changed how to get dual numpy/scipy behavior.  Use explicit numpy.dual module.
",numpy/dft/__init__.py,numpy/dual.py,numpy/linalg/__init__.py
fb605c6e86e09a4366af88ddf6e843d7adba5876,"I don't understand why this wasn't included before.
",numpy/random/mtrand/mtrand.c
416bf3771b9d78ca0a4371b7b92d426d32922e48,"Trying to delete mtrand.c
",numpy/random/mtrand/mtrand.c
959e0ba32d1fb84295601736a66e22d70f149014,"Fixed corelinalg in mtrand.
",numpy/random/mtrand/mtrand.pyx
5b83476f1ea82ce4655f5030e3081cb49e3315ce,"Made matrix tests work.
",numpy/core/defmatrix.py,numpy/core/tests/{test_matrix.py
2f01cc8b3c368242224f7ff63e1e5343cf890e9c,"Move package loader to _import_tools.py
",numpy/__init__.py,numpy/_import_tools.py
f115fdf57332da17fd43202a1512b02902a77048,"numpy.base -> numpy
",numpy/core/arrayprint.py,numpy/core/tests/test_matrix.py,numpy/distutils/command/install_headers.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/doc/DISTUTILS.txt,numpy/f2py/diagnose.py,numpy/f2py/rules.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_real.py,numpy/lib/convertcode.py,numpy/lib/utils.py
fc95346cc7568d2464cb4daa955b947d5b42a457,"Fixed problem in mlab.py
",numpy/lib/mlab.py
605f8a5533071a0939fb5cbbc94dafede8006074,"More documentation updates
",README.txt,benchmarks/sorting.py,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/doc/DISTUTILS.txt,numpy/f2py/docs/README.txt,numpy/lib/shape_base.py
6a0653c0eabcc39a1a45565fc9dd21857c465aba,"Fixes to convertcode.py
",THANKS.txt,numpy/core/numerictypes.py,numpy/lib/convertcode.py
e74ea102831a608086fdd155101158ab19a24c2c,"Documentation updates: SciPy core -> NumPy
",numpy/__init__.py,numpy/doc/README.txt
e53c47ee4476a5de9e302fab9618006502d1b8ed,"Fixed svn_version hooks.
",numpy/version.py
75077ce6023283d25222768f177e52c5cd0a7904,"Fixed import errors.
",numpy/distutils/misc_util.py
c5b355719e9ee893362d8c6fa8f12fc32f3dc2b4,"Fixed name issue.
",numpy/f2py/f2py2e.py
be4d973ac0fa792c7e072408c2e2a895853ccdbf,"Fixed version issue..
",numpy/f2py/f2py2e.py
961f7f5348dce942991e98e48a966f458bb26273,"Merged r1773:1791 branch of numpy into main trunk
",COMPATIBILITY,README.txt,THANKS.txt,benchmarks/sorting.py,{scipy,{scipy,numpy/core/__init__.py,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,scipy/base/matrix.py,{scipy/base/include/scipy,{scipy/base/include/scipy,numpy/core/info.py,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy/corefft,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,numpy/lib/setup.py,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/base,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy/corelinalg,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,scipy/random/mtrand/scipy.pxi,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,scipy/testing/scipytest.py,{scipy,{scipy,scipy/core_version.py,scipy_compatibility,setup.py
0f05f3848fddb57a5ae895d8ac0f9d728ab8a9ed,"Final commit before merge to trunk.
",numpy/lib/polynomial.py,numpy/lib/shape_base.py
6d2d01b757e78d2c0487ec22e2101467686b2a7f,"Fix up numpy
",numpy/core/src/multiarraymodule.c
5cfcf93bf09c3a78654099ddcb3b7b184e8d4615,"More fixes...
",numpy/core/code_generators/generate_umath.py,numpy/core/oldnumeric.py,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/scalartypes.inc.src,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_ma.py,numpy/core/tests/test_records.py,numpy/core/tests/test_umath.py,numpy/dft/tests/test_helper.py,numpy/lib/__init__.py,numpy/lib/function_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_shape_base.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py
490712cd35dcecfc9423de4bde0b29cb012dda25,"More numpy fixes...
",numpy/__init__.py,numpy/core/__init__.py,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/{matrix.py,numpy/core/info.py,numpy/core/ma.py,numpy/core/numeric.py,numpy/core/oldnumeric.py,numpy/core/src/arraytypes.inc.src,numpy/core/src/multiarraymodule.c,numpy/core/src/scalartypes.inc.src,numpy/dft/fftpack.py,numpy/dft/helper.py,numpy/dft/info.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/info.py,numpy/lib/src/_compiled_base.c,numpy/linalg/info.py,numpy/linalg/linalg.py,numpy/random/info.py
7ff852162596a8eaa02ef87730474285b080d594,"More numpy fixes...
",numpy/{version
af08f349934b2ddd037bf45f68c48210d84b455d,"Moved another directory
",numpy/core/include/{scipy,numpy/core/include/{scipy
bd7411ad7cbab12a53a7a3caf96924b2d03bd418,"More changes
",numpy/core/__init__.py,numpy/lib/__init__.py,numpy/lib/setup.py,numpy/testing/{scipytest.py,numpy/{core_version.py
a6eb1cb50cefa05f1727513c35cce4ccac2285e6,"Updated mtrand pyrex-generated c file.
",numpy/random/mtrand/mtrand.c
b0a3266780974da7c3e707bb47e22d2135e6ded4,"Moved pxi in mtrand
",numpy/random/mtrand/{scipy.pxi
5a765123d45616661f7d61f322ce8ba4a518e1aa,"Fixed lib
",numpy/dft/__init__.py,numpy/doc/CAPI.txt,numpy/doc/DISTUTILS.txt,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/machar.py,numpy/lib/mlab.py,numpy/lib/polynomial.py,numpy/lib/scimath.py,numpy/lib/shape_base.py,numpy/lib/{,numpy/lib/twodim_base.py,numpy/lib/type_check.py,numpy/lib/ufunclike.py,numpy/lib/utils.py,numpy/linalg/__init__.py,setup.py
e706c7d92c4ee41e8e995fb3838bd0931b57efb5,"Changed all references to scipy to numpy
",COMPATIBILITY,README.txt,THANKS.txt,benchmarks/sorting.py,numpy/__init__.py,numpy/_import_tools.py,numpy/core/__init__.py,numpy/core/arrayprint.py,numpy/core/blasdot/_dotblas.c,numpy/core/code_generators/array_api_order.txt,numpy/core/code_generators/generate_array_api.py,numpy/core/code_generators/generate_ufunc_api.py,numpy/core/ma.py,numpy/core/matrix.py,numpy/core/src/_sortmodule.c.src,numpy/core/src/arraymethods.c,numpy/core/src/arrayobject.c,numpy/core/src/multiarraymodule.c,numpy/core/src/scalarmathmodule.c.src,numpy/core/src/scalartypes.inc.src,numpy/core/src/ufuncobject.c,numpy/core/src/umathmodule.c.src,numpy/core/tests/test_ma.py,numpy/core/tests/test_matrix.py,numpy/core/tests/test_records.py,numpy/core/tests/test_umath.py,numpy/core_version.py,numpy/dft/__init__.py,numpy/dft/fftpack.py,numpy/dft/fftpack_litemodule.c,numpy/dft/helper.py,numpy/dft/tests/test_helper.py,numpy/distutils/__init__.py,numpy/distutils/ccompiler.py,numpy/distutils/command/build_clib.py,numpy/distutils/command/build_ext.py,numpy/distutils/command/build_scripts.py,numpy/distutils/command/build_src.py,numpy/distutils/command/config.py,numpy/distutils/command/config_compiler.py,numpy/distutils/command/install_headers.py,numpy/distutils/command/sdist.py,numpy/distutils/core.py,numpy/distutils/extension.py,numpy/distutils/fcompiler/__init__.py,numpy/distutils/fcompiler/absoft.py,numpy/distutils/fcompiler/compaq.py,numpy/distutils/fcompiler/g95.py,numpy/distutils/fcompiler/gnu.py,numpy/distutils/fcompiler/hpux.py,numpy/distutils/fcompiler/ibm.py,numpy/distutils/fcompiler/intel.py,numpy/distutils/fcompiler/lahey.py,numpy/distutils/fcompiler/mips.py,numpy/distutils/fcompiler/nag.py,numpy/distutils/fcompiler/none.py,numpy/distutils/fcompiler/pg.py,numpy/distutils/fcompiler/sun.py,numpy/distutils/fcompiler/vast.py,numpy/distutils/intelccompiler.py,numpy/distutils/mingw32ccompiler.py,numpy/distutils/misc_util.py,numpy/distutils/setup.py,numpy/distutils/system_info.py,numpy/distutils/tests/f2py_ext/setup.py,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,numpy/distutils/tests/f2py_f90_ext/setup.py,numpy/distutils/tests/f2py_f90_ext/tests/test_foo.py,numpy/distutils/tests/gen_ext/setup.py,numpy/distutils/tests/gen_ext/tests/test_fib3.py,numpy/distutils/tests/swig_ext/setup.py,numpy/distutils/tests/swig_ext/tests/test_example.py,numpy/distutils/tests/swig_ext/tests/test_example2.py,numpy/distutils/tests/test_misc_util.py,numpy/doc/CAPI.txt,numpy/doc/DISTUTILS.txt,numpy/f2py/Makefile,numpy/f2py/TODO.txt,numpy/f2py/__init__.py,numpy/f2py/diagnose.py,numpy/f2py/doc/index.html,numpy/f2py/doc/oldnews.html,numpy/f2py/docs/FAQ.txt,numpy/f2py/docs/HISTORY.txt,numpy/f2py/docs/OLDNEWS.txt,numpy/f2py/docs/README.txt,numpy/f2py/docs/TESTING.txt,numpy/f2py/docs/THANKS.txt,numpy/f2py/docs/usersguide/index.txt,numpy/f2py/docs/usersguide/setup_example.py,numpy/f2py/f2py.1,numpy/f2py/f2py2e.py,numpy/f2py/rules.py,numpy/f2py/setup.py,numpy/f2py/src/fortranobject.h,numpy/f2py/tests/array_from_pyobj/setup.py,numpy/f2py/tests/array_from_pyobj/tests/test_array_from_pyobj.py,numpy/f2py/tests/array_from_pyobj/wrapmodule.c,numpy/f2py/tests/f77/return_integer.py,numpy/f2py/tests/f77/return_real.py,numpy/lib/convertcode.py,numpy/lib/function_base.py,numpy/lib/getlimits.py,numpy/lib/index_tricks.py,numpy/lib/mlab.py,numpy/lib/polynomial.py,numpy/lib/shape_base.py,numpy/lib/src/_compiled_base.c,numpy/lib/test_shape_base.py,numpy/lib/tests/test_function_base.py,numpy/lib/tests/test_getlimits.py,numpy/lib/tests/test_index_tricks.py,numpy/lib/tests/test_polynomial.py,numpy/lib/tests/test_twodim_base.py,numpy/lib/tests/test_type_check.py,numpy/lib/tests/test_ufunclike.py,numpy/lib/type_check.py,numpy/lib/utils.py,numpy/linalg/__init__.py,numpy/linalg/lapack_litemodule.c,numpy/linalg/linalg.py,numpy/random/__init__.py,numpy/random/mtrand/mtrand.c,numpy/random/mtrand/mtrand.pyx,numpy/random/mtrand/scipy.pxi,numpy/testing/__init__.py,numpy/testing/scipytest.py,numpy/testing/setup.py,scipy_compatibility,setup.py
6d9c86cde543110e1b5937e2b217eb1374ee9adf,"Fixed sf bugs 1395698 and 1395688

Note that this patch changes the return type of a[i] and
the conversion to bool for consistency with the scipy core
rules.
",scipy/base/ma.py,scipy/base/tests/test_ma.py
c14d4fe25cb5cd482369734dd487ac8f376851c9,"Change most setup.py files
",numpy/core/setup.py,numpy/dft/setup.py,numpy/lib/convertcode.py,numpy/lib/setup.py,numpy/{testing,numpy/{core,numpy/linalg/setup.py,numpy/random/setup.py,numpy/setup.py,numpy/testing/utils.py
3496a3cda8ea70253a76ed17c0af261f2d645fe2,"Moving things..
",numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core/tests,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core,numpy/{core/tests
8057b2d910a5a6726a666a2c18ac495dbb9e6000,"rename sub-packages
",numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{base,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corefft,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg,numpy/{corelinalg
da9c6da4a304d240492b653f526b9607b032921c,"Fix-up setup.py
",setup.py
8e2654541c6eae0f308908f501cccbc86b2f9101,"Moved scipy directory to numpy
",{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy,{scipy
2581fe8666f62f00cb9af309010d61a43af91761,"test change
",TEST_COMMIT
ddaed649c23bbd0ad36cdafdfe9cd92397ce69e3,"Added compare to dtypedescr and typeNA dict
",scipy/base/numerictypes.py,scipy/base/src/arrayobject.c
3b4ee4f1edad964c20bb9dc7a32cedff4113a5cb,"fixed sf bug 1395646
",scipy/base/ma.py,scipy/base/tests/test_ma.py
1c2c47b0cb743f47dcec7d537a99e717096b5007,"test commit privilege
",TEST_COMMIT
95fc4486e429c82a872f3debcf09b0273fe2523e,"Forced fields to be a proxy object (read-only from Python) and added ability to document dynamically object attributes.
",scipy/base/scimath.py,scipy/base/src/_compiled_base.c,scipy/base/src/arrayobject.c
4712a37b93832933a46376ee99339f9040ba3670,"Moved weave to scipy
",scipy/setup.py,scipy/weave/LICENSE.txt,scipy/weave/README.txt,scipy/weave/__init__.py,scipy/weave/accelerate_tools.py,scipy/weave/ast_tools.py,scipy/weave/base_info.py,scipy/weave/base_spec.py,scipy/weave/blitz/blitz/Makefile.am,scipy/weave/blitz/blitz/Makefile.in,scipy/weave/blitz/blitz/README,scipy/weave/blitz/blitz/applics.h,scipy/weave/blitz/blitz/array-impl.h,scipy/weave/blitz/blitz/array-old.h,scipy/weave/blitz/blitz/array.h,scipy/weave/blitz/blitz/array/Makefile.am,scipy/weave/blitz/blitz/array/Makefile.in,scipy/weave/blitz/blitz/array/asexpr.h,scipy/weave/blitz/blitz/array/bops.cc,scipy/weave/blitz/blitz/array/cartesian.h,scipy/weave/blitz/blitz/array/cgsolve.h,scipy/weave/blitz/blitz/array/complex.cc,scipy/weave/blitz/blitz/array/convolve.cc,scipy/weave/blitz/blitz/array/convolve.h,scipy/weave/blitz/blitz/array/cycle.cc,scipy/weave/blitz/blitz/array/domain.h,scipy/weave/blitz/blitz/array/et.h,scipy/weave/blitz/blitz/array/eval.cc,scipy/weave/blitz/blitz/array/expr.h,scipy/weave/blitz/blitz/array/fastiter.h,scipy/weave/blitz/blitz/array/funcs.h,scipy/weave/blitz/blitz/array/functorExpr.h,scipy/weave/blitz/blitz/array/geometry.h,scipy/weave/blitz/blitz/array/indirect.h,scipy/weave/blitz/blitz/array/interlace.cc,scipy/weave/blitz/blitz/array/io.cc,scipy/weave/blitz/blitz/array/iter.h,scipy/weave/blitz/blitz/array/map.h,scipy/weave/blitz/blitz/array/methods.cc,scipy/weave/blitz/blitz/array/misc.cc,scipy/weave/blitz/blitz/array/multi.h,scipy/weave/blitz/blitz/array/newbops.cc,scipy/weave/blitz/blitz/array/newet-macros.h,scipy/weave/blitz/blitz/array/newet.h,scipy/weave/blitz/blitz/array/ops.cc,scipy/weave/blitz/blitz/array/ops.h,scipy/weave/blitz/blitz/array/reduce.cc,scipy/weave/blitz/blitz/array/reduce.h,scipy/weave/blitz/blitz/array/resize.cc,scipy/weave/blitz/blitz/array/shape.h,scipy/weave/blitz/blitz/array/slice.h,scipy/weave/blitz/blitz/array/slicing.cc,scipy/weave/blitz/blitz/array/stencil-et.h,scipy/weave/blitz/blitz/array/stencil.cc,scipy/weave/blitz/blitz/array/stencil.h,scipy/weave/blitz/blitz/array/stencilops.h,scipy/weave/blitz/blitz/array/stencils.cc,scipy/weave/blitz/blitz/array/stencils.h,scipy/weave/blitz/blitz/array/storage.h,scipy/weave/blitz/blitz/array/uops.cc,scipy/weave/blitz/blitz/array/where.h,scipy/weave/blitz/blitz/array/zip.h,scipy/weave/blitz/blitz/bench.cc,scipy/weave/blitz/blitz/bench.h,scipy/weave/blitz/blitz/benchext.cc,scipy/weave/blitz/blitz/benchext.h,scipy/weave/blitz/blitz/blitz.h,scipy/weave/blitz/blitz/bzconfig.h,scipy/weave/blitz/blitz/bzdebug.h,scipy/weave/blitz/blitz/compiler.h,scipy/weave/blitz/blitz/config.h.in,scipy/weave/blitz/blitz/etbase.h,scipy/weave/blitz/blitz/extremum.h,scipy/weave/blitz/blitz/funcs.h,scipy/weave/blitz/blitz/generate/Makefile.am,scipy/weave/blitz/blitz/generate/Makefile.in,scipy/weave/blitz/blitz/generate/arroperands.h,scipy/weave/blitz/blitz/generate/arroptuple.h,scipy/weave/blitz/blitz/generate/bzfstream.h,scipy/weave/blitz/blitz/generate/genarrbops.cpp,scipy/weave/blitz/blitz/generate/genarruops.cpp,scipy/weave/blitz/blitz/generate/genmatbops.cpp,scipy/weave/blitz/blitz/generate/genmathfunc.cpp,scipy/weave/blitz/blitz/generate/genmatuops.cpp,scipy/weave/blitz/blitz/generate/genpromote.cpp,scipy/weave/blitz/blitz/generate/genvecbfn.cpp,scipy/weave/blitz/blitz/generate/genvecbops.cpp,scipy/weave/blitz/blitz/generate/genvecuops.cpp,scipy/weave/blitz/blitz/generate/genvecwhere.cpp,scipy/weave/blitz/blitz/generate/operands.h,scipy/weave/blitz/blitz/generate/operands2.h,scipy/weave/blitz/blitz/generate/optuple.h,scipy/weave/blitz/blitz/generate/optuple2.h,scipy/weave/blitz/blitz/indexexpr.h,scipy/weave/blitz/blitz/limits-hack.h,scipy/weave/blitz/blitz/listinit.h,scipy/weave/blitz/blitz/matbops.h,scipy/weave/blitz/blitz/matdiag.h,scipy/weave/blitz/blitz/matexpr.h,scipy/weave/blitz/blitz/matgen.h,scipy/weave/blitz/blitz/mathf2.h,scipy/weave/blitz/blitz/mathfunc.h,scipy/weave/blitz/blitz/matltri.h,scipy/weave/blitz/blitz/matref.h,scipy/weave/blitz/blitz/matrix.cc,scipy/weave/blitz/blitz/matrix.h,scipy/weave/blitz/blitz/matsymm.h,scipy/weave/blitz/blitz/mattoep.h,scipy/weave/blitz/blitz/matuops.h,scipy/weave/blitz/blitz/matutri.h,scipy/weave/blitz/blitz/memblock.cc,scipy/weave/blitz/blitz/memblock.h,scipy/weave/blitz/blitz/meta/Makefile.am,scipy/weave/blitz/blitz/meta/Makefile.in,scipy/weave/blitz/blitz/meta/dot.h,scipy/weave/blitz/blitz/meta/matassign.h,scipy/weave/blitz/blitz/meta/matmat.h,scipy/weave/blitz/blitz/meta/matvec.h,scipy/weave/blitz/blitz/meta/metaprog.h,scipy/weave/blitz/blitz/meta/product.h,scipy/weave/blitz/blitz/meta/sum.h,scipy/weave/blitz/blitz/meta/vecassign.h,scipy/weave/blitz/blitz/minmax.h,scipy/weave/blitz/blitz/mstruct.h,scipy/weave/blitz/blitz/numinquire.h,scipy/weave/blitz/blitz/numtrait.h,scipy/weave/blitz/blitz/ops.h,scipy/weave/blitz/blitz/prettyprint.h,scipy/weave/blitz/blitz/promote-old.h,scipy/weave/blitz/blitz/promote.h,scipy/weave/blitz/blitz/rand-dunif.h,scipy/weave/blitz/blitz/rand-mt.h,scipy/weave/blitz/blitz/rand-normal.h,scipy/weave/blitz/blitz/rand-tt800.h,scipy/weave/blitz/blitz/rand-uniform.h,scipy/weave/blitz/blitz/random.h,scipy/weave/blitz/blitz/randref.h,scipy/weave/blitz/blitz/range.h,scipy/weave/blitz/blitz/reduce.h,scipy/weave/blitz/blitz/shapecheck.h,scipy/weave/blitz/blitz/tau.h,scipy/weave/blitz/blitz/timer.h,scipy/weave/blitz/blitz/tiny.h,scipy/weave/blitz/blitz/tinymat.h,scipy/weave/blitz/blitz/tinymatexpr.h,scipy/weave/blitz/blitz/tinymatio.cc,scipy/weave/blitz/blitz/tinyvec-et.h,scipy/weave/blitz/blitz/tinyvec.cc,scipy/weave/blitz/blitz/tinyvec.h,scipy/weave/blitz/blitz/tinyvecio.cc,scipy/weave/blitz/blitz/tinyveciter.h,scipy/weave/blitz/blitz/traversal.cc,scipy/weave/blitz/blitz/traversal.h,scipy/weave/blitz/blitz/tuning.h,scipy/weave/blitz/blitz/tvcross.h,scipy/weave/blitz/blitz/tvecglobs.h,scipy/weave/blitz/blitz/update.h,scipy/weave/blitz/blitz/vecaccum.cc,scipy/weave/blitz/blitz/vecall.cc,scipy/weave/blitz/blitz/vecany.cc,scipy/weave/blitz/blitz/vecbfn.cc,scipy/weave/blitz/blitz/vecbops.cc,scipy/weave/blitz/blitz/veccount.cc,scipy/weave/blitz/blitz/vecdelta.cc,scipy/weave/blitz/blitz/vecdot.cc,scipy/weave/blitz/blitz/vecexpr.h,scipy/weave/blitz/blitz/vecexprwrap.h,scipy/weave/blitz/blitz/vecglobs.cc,scipy/weave/blitz/blitz/vecglobs.h,scipy/weave/blitz/blitz/vecio.cc,scipy/weave/blitz/blitz/veciter.h,scipy/weave/blitz/blitz/vecmax.cc,scipy/weave/blitz/blitz/vecmin.cc,scipy/weave/blitz/blitz/vecnorm.cc,scipy/weave/blitz/blitz/vecnorm1.cc,scipy/weave/blitz/blitz/vecpick.cc,scipy/weave/blitz/blitz/vecpick.h,scipy/weave/blitz/blitz/vecpickio.cc,scipy/weave/blitz/blitz/vecpickiter.h,scipy/weave/blitz/blitz/vecsum.cc,scipy/weave/blitz/blitz/vector-et.h,scipy/weave/blitz/blitz/vector.cc,scipy/weave/blitz/blitz/vector.h,scipy/weave/blitz/blitz/vecuops.cc,scipy/weave/blitz/blitz/vecwhere.cc,scipy/weave/blitz/blitz/vecwhere.h,scipy/weave/blitz/blitz/wrap-climits.h,scipy/weave/blitz/blitz/zero.cc,scipy/weave/blitz/blitz/zero.h,scipy/weave/blitz_spec.py,scipy/weave/blitz_tools.py,scipy/weave/build_tools.py,scipy/weave/bytecodecompiler.py,scipy/weave/c_spec.py,scipy/weave/catalog.py,scipy/weave/common_info.py,scipy/weave/converters.py,scipy/weave/cpp_namespace_spec.py,scipy/weave/doc/tutorial.html,scipy/weave/dumb_shelve.py,scipy/weave/dumbdbm_patched.py,scipy/weave/examples/array3d.py,scipy/weave/examples/binary_search.py,scipy/weave/examples/cast_copy_transpose.py,scipy/weave/examples/dict_sort.py,scipy/weave/examples/fibonacci.py,scipy/weave/examples/functional.py,scipy/weave/examples/increment_example.py,scipy/weave/examples/md5_speed.py,scipy/weave/examples/object.py,scipy/weave/examples/print_example.py,scipy/weave/examples/py_none.py,scipy/weave/examples/ramp.c,scipy/weave/examples/ramp.py,scipy/weave/examples/ramp2.py,scipy/weave/examples/support_code_example.py,scipy/weave/examples/swig2_example.py,scipy/weave/examples/swig2_ext.h,scipy/weave/examples/swig2_ext.i,scipy/weave/examples/tuple_return.py,scipy/weave/examples/vq.py,scipy/weave/examples/vtk_example.py,scipy/weave/examples/wx_example.py,scipy/weave/examples/wx_speed.py,scipy/weave/ext_tools.py,scipy/weave/info.py,scipy/weave/inline_tools.py,scipy/weave/platform_info.py,scipy/weave/scxx/README.txt,scipy/weave/scxx/dict.h,scipy/weave/scxx/list.h,scipy/weave/scxx/notes.txt,scipy/weave/scxx/number.h,scipy/weave/scxx/object.h,scipy/weave/scxx/scxx.h,scipy/weave/scxx/sequence.h,scipy/weave/scxx/str.h,scipy/weave/scxx/tuple.h,scipy/weave/scxx/weave_imp.cpp,scipy/weave/setup.py,scipy/weave/size_check.py,scipy/weave/slice_handler.py,scipy/weave/standard_array_spec.py,scipy/weave/swig2_spec.py,scipy/weave/swigptr.py,scipy/weave/swigptr2.py,scipy/weave/tests/scxx_timings.py,scipy/weave/tests/test_ast_tools.py,scipy/weave/tests/test_blitz_tools.py,scipy/weave/tests/test_build_tools.py,scipy/weave/tests/test_c_spec.py,scipy/weave/tests/test_catalog.py,scipy/weave/tests/test_ext_tools.py,scipy/weave/tests/test_inline_tools.py,scipy/weave/tests/test_scxx.py,scipy/weave/tests/test_scxx_dict.py,scipy/weave/tests/test_scxx_object.py,scipy/weave/tests/test_scxx_sequence.py,scipy/weave/tests/test_size_check.py,scipy/weave/tests/test_slice_handler.py,scipy/weave/tests/test_standard_array_spec.py,scipy/weave/tests/test_wx_spec.py,scipy/weave/tests/weave_test_utils.py,scipy/weave/vtk_spec.py,scipy/weave/weave_version.py,scipy/weave/wx_spec.py
b5ba0003def4cfa43b29d29df8f085d09609707b,"Added UIntXX inplace of UintXX.  Added Bool type
",scipy/base/numerictypes.py,scipy/base/oldnumeric.py,scipy/base/src/_sortmodule.c.src
912b8ef191e420c9b5f7bce9f52b6fa815bdae54,"Correct sort documentation
",scipy/base/src/_sortmodule.c.src
f169e88dee50378c8accfb7a67438271a73fcc61,"Applied Andrew Straw patch with modifications to support eggs.
",scipy/__init__.py
25f1b45d3acbb0e47b95c1c3239000f7b6c8084f,"Added capability to add docstrings to new types and builtin functions or methods after compilation.  Doc strings can be moved from C-code into a separate Python module and added as needed.
",scipy/base/src/_compiled_base.c
3313204a24a621bb6bb5c0099d8b5e150640cb95,"Added mergesorts for STRING and UNICODE and exposed lexsort
",scipy/base/numeric.py,scipy/base/src/_sortmodule.c.src,scipy/base/src/arraytypes.inc.src
53d748f85bbf72268ea262695e8c16857ab8d566,"Added lexicographic sort.
",scipy/base/code_generators/multiarray_api_order.txt,scipy/base/numeric.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c
cd9c8d62c5c16452c29c622e2bb24a2cf26e1da3,"Added 1-d indexing speed-ups by going through the array iterator when fancy-indexing is needed.  Also added bug-fixes to ma.py from Sourceforge.
",scipy/base/ma.py,scipy/base/src/arrayobject.c
ee794463ce58609eb14c8091b01c4f5f24713b04,"Postpone implicit imports of packages without global_symbols.
",scipy/__init__.py
c54fd7cb45202074bd1d8a2fd801588f7c8d955e,"Fixed getting info files from subpackages. Code clean up.
",scipy/__init__.py
d32bc1dd80ee4590ff79454934ec3f0cdba5b706,"Fix nasty corner-case.
",scipy/base/src/arrayobject.c
c2e7e3f8fae9a3b0f156969eff94ba253e1050ae,"Fixed conversion from string to number types
",TODO.txt,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src
1bbcc97439e9024283b16179eabac0a383ce99f4,"Just changed the order of source-code
",scipy/base/src/_sortmodule.c.src
b83dfabfe169f32533a84d76b7e35ae544cb15a0,"Added other sort methods (heap, merge)
",scipy/base/code_generators/multiarray_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/ma.py,scipy/base/src/_sortmodule.c.src,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
c548d825f4bed8db889c9cc5928f5d073e6e3c12,"Added benchmarks folder
",benchmarks/sorting.py
f0e7d011d97164370f47034fbee123beb4e8aaae,"Fixed bug..
",scipy/base/src/_sortmodule.c.src
1dd6cca2a05d1a3f848a36dd414cc1196fae26a8,"Added complex sorting functions as well.
",scipy/base/src/_sortmodule.c.src
2cf3888ac82b0f16536ca31eeffb9a24433119ea,"Fixed bug in ma.py and added fast quicksorts.
",scipy/base/__init__.py,scipy/base/include/scipy/arrayobject.h,scipy/base/ma.py,scipy/base/src/_sortmodule.c.src,scipy/base/src/multiarraymodule.c
f19cbc35ca753c1a220a45e55bfe59039e119acd,"Merged fixsort branch.
",scipy/base/code_generators/array_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/setup.py,scipy/base/src/_sortmodule.c.src,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/core_version.py
445dc589e125a5c647ff6d0d85f6de39fadcd639,"Adding type-specific sorting functions.
",scipy/base/code_generators/array_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/setup.py,scipy/base/src/_sortmodule.c.src,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/core_version.py
6508583da84bd0c17b492da99c59e091ebb7c049,"Updated PyArray_ArgSort to allow future sorting choices.
",scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/core_version.py
8d90fbf15133b03d75933882c227d808a2598111,"Fix inplace sorting along other dimension.
",scipy/base/src/multiarraymodule.c
e9dead211ce95d36d1af8844403345b71d0b698d,"Fixed some other uses of sort method.
",scipy/base/function_base.py
a2eaf4b1f11187099a911a322fb5a54052d5fe97,"Changed sort to be in-place
",scipy/base/src/multiarraymodule.c,scipy/base/tests/test_function_base.py
2719abddd4e61211f4e8bfa914d82280e179f77f,"Changed sort to in-place --- uses copy for now.
",scipy/base/function_base.py,scipy/base/include/scipy/arrayobject.h,scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/base/tests/test_function_base.py
4112ff35f848c199e5e2f12f08984e1d9392c1ca,"scipy.distutils doc updates
",scipy/doc/DISTUTILS.txt
ddea42e581bf557434f09edea0019123f72b09a5,"Fixed importing _dotblas.
",scipy/base/numeric.py
d12ad062997ed0240c14f8f2fbff2e06604acff9,"Removed scipy/lib from scipy_core.
",scipy/lib/__init__.py,scipy/lib/setup.py
c589b82ef61a528341b2e63b767341729f811123,"Moved scipy/lib/blasdot to scipy/base
",scipy/{lib,scipy/{lib,scipy/base/setup.py,scipy/lib/setup.py,scipy/setup.py
9338dea9d336b5c59851d74a9d5c1a3b558175b8,"Moved scipy.lib.mtrand to scipy.random.
",scipy/lib/setup.py,scipy/random/__init__.py,scipy/random/info.py,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/{lib,scipy/random/setup.py
b5cf0b86785ebb31eb62fb002e276444fe9d9698,"Introduced postpone kw argument to pkgload. When postpone=True, packages info are read but packages themself are not loaded.
",scipy/__init__.py
5c1981deffd3305c4920bb7c619f50f8b5dd0ad2,"MANIFEST.in clean up
",MANIFEST.in
fcdf391e445e0d48df363de2846e00b4f5aaa6d4,"Fixed mistake.
",scipy/base/index_tricks.py
12fb5f95f206627c4f4c4e11b963527850df70f4,"Fixed problems revealed by pychecker.
",scipy/base/_internal.py,scipy/base/arrayprint.py,scipy/base/chararray.py,scipy/base/convertcode.py,scipy/base/function_base.py,scipy/base/getlimits.py,scipy/base/index_tricks.py,scipy/base/ma.py,scipy/base/machar.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/oldnumeric.py,scipy/base/polynomial.py,scipy/base/records.py,scipy/base/shape_base.py,scipy/base/type_check.py
ac853f7e345d949a6be1a7e6a749ce31c4b0d7f9,"Fixed problem with mod.
",scipy/base/function_base.py
b7b5cba7dde80adcff280adaf58b02ea6d490427,"Added string initialization conversion to chararray.
",MANIFEST.in,scipy/base/chararray.py
55a0865b70c49a693d406c0a661cc43827c13f1f,"Fixed up chararray a bit.
",scipy/base/chararray.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
d54955f3f535bf65eba8b3b7e22ff3d9212b5a82,"Added records unittest for fromfile method.  Included file testdata.fits file for use in test.
",MANIFEST.in,scipy/base/tests/test_records.py,scipy/base/tests/testdata.fits
3e11aea4a60519e882ba0c2cde93b49321d31933,"Remove special method names for void scalar types
",scipy/base/src/arraytypes.inc.src
1439e1ee593db114c7deb3a92076f4104be1f98a,"Improvements to nested records.
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
d846106b6eb794ed7d8ed66eb8941bfbdd9429e3,"Changed some expected outputs in docstrings
",scipy/base/records.py
c0caf58795c621079f8be86da90c7f02ca9bb600,"Don't set fields attribute in record type (get it from dtypedescr).
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
a8adf722f40fcb7a6830ab0266cbabaf9cb62308,"Fix so that anytime fields are defined void array-scalars don't copy data.
",scipy/base/src/arrayobject.c
4352925f4827646866f9298b3bc4dd93d52bc168,"Improved void array-scalar type so that it has named-field access
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
de779c8b1907261b9da84f54802d469f3dda7c6f,"Fixed use of byteorder.
",scipy/base/records.py
922f7cf07fcce95f510222b464cdc757f40ef57f,"Added an mlab so that there is one file to replace the old MLab functionality.
",scipy/base/convertcode.py,scipy/base/function_base.py,scipy/base/ma.py,scipy/base/mlab.py,scipy/base/oldnumeric.py,scipy/base/shape_base.py,scipy/base/src/arraymethods.c,scipy/base/tests/test_function_base.py,scipy/base/twodim_base.py
4b61fd0dc145083b566028edc691c5f2d1d5936f,"new test for records method fromarrays
",scipy/base/tests/test_records.py
65d5f7fc7378e7d8a05125c667ae933b7a6c040f,"Changed .toscalar() method to .item()
",scipy/base/arrayprint.py,scipy/base/chararray.py,scipy/base/convertcode.py,scipy/base/ma.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/scalartypes.inc.src,scipy/base/tests/test_ma.py,scipy/base/tests/test_records.py,scipy/base/type_check.py
c46f1525791d6b78b80ccb3dca01581d1ff30ed4,"Don't define extra variables if we don't use them.
",scipy/base/src/arrayobject.c
1208810d5fbaa1d7e548ef50e789e04485ed87cd,"Fix so that array can be used to construct default record arrays.
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src
01101677f96285a4c7340822fc3915bc10653241,"Fixing svn commit testing issues.
",scipy/testing/__init__.py
15ad0489f1e3dbdfce4a3827e9c496e61d3a4dad,"Fixing svn commit testing issues
",scipy/testing/__init__.py,scipy/testing/info.py,scipy/testing/scipytest.py,scipy/testing/setup.py,scipy/testing/utils.py
076c9da01b655e3525e6f3f6757ad204ba82833c,"Fixing svn commit testing issues
",scipy/testing/__init__.py,scipy/testing/info.py,scipy/testing/scipy_test_version.py,scipy/testing/scipytest.py,scipy/testing/setup.py,scipy/testing/setup_scipy_test.py,scipy/testing/testing.py,scipy/testing/utils.py
a1d00598a3a406e965cd3e07a6ebf95e4c50198b,"Renamed scipy.test module to scipy.testing. Clean up testing.
",scipy/__init__.py,scipy/base/__init__.py,scipy/base/info.py,scipy/base/tests/test_function_base.py,scipy/base/tests/test_getlimits.py,scipy/base/tests/test_index_tricks.py,scipy/base/tests/test_ma.py,scipy/base/tests/test_matrix.py,scipy/base/tests/test_polynomial.py,scipy/base/tests/test_records.py,scipy/base/tests/test_shape_base.py,scipy/base/tests/test_twodim_base.py,scipy/base/tests/test_type_check.py,scipy/base/tests/test_ufunclike.py,scipy/base/tests/test_umath.py,scipy/corefft/__init__.py,scipy/corefft/tests/test_helper.py,scipy/corelinalg/__init__.py,scipy/distutils/__init__.py,scipy/distutils/tests/test_misc_util.py,scipy/random/__init__.py,scipy/setup.py,scipy/test/__init__.py,scipy/test/auto_test.py,scipy/test/info.py,scipy/test/testing.py,scipy/testing/__init__.py,scipy/testing/info.py,scipy/{test,scipy/testing/scipytest.py,scipy/testing/setup.py,scipy/{test,scipy/testing/testing.py,scipy/testing/utils.py,scipy/weave/__init__.py,scipy/weave/blitz_tools.py,scipy/weave/{info_weave.py,scipy/weave/setup.py,scipy/weave/tests/test_ast_tools.py,scipy/weave/tests/test_blitz_tools.py,scipy/weave/tests/test_build_tools.py,scipy/weave/tests/test_c_spec.py,scipy/weave/tests/test_catalog.py,scipy/weave/tests/test_ext_tools.py,scipy/weave/tests/test_inline_tools.py,scipy/weave/tests/test_scxx.py,scipy/weave/tests/test_scxx_dict.py,scipy/weave/tests/test_scxx_object.py,scipy/weave/tests/test_scxx_sequence.py,scipy/weave/tests/test_size_check.py,scipy/weave/tests/test_slice_handler.py,scipy/weave/tests/test_standard_array_spec.py,scipy/weave/tests/test_wx_spec.py,scipy/weave/tests/weave_test_utils.py,scipy/weave/weave_version.py
36e55fb0bfd3f55f2ece8cbf68a7b912df6de9e6,"Changed the version in preparation for a release.
",scipy/core_version.py
0bc5df95d73b3b5e2712e6c8d378971dae75dd6b,"Changed rtype to dtype in reduce for consistency.
",scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c,scipy/base/src/ufuncobject.c
7b9f05131e22ce96c563c6dbed03b10a6b28b821,"Added redefinitions of corelinalg and corefft functions duplicated in full scipy linalg and fft
",scipy/corefft/__init__.py,scipy/corefft/fftpack.py,scipy/corefft/info.py,scipy/corelinalg/__init__.py,scipy/corelinalg/info.py,scipy/corelinalg/linalg.py,scipy/lib/mtrand/mtrand.c,scipy/lib/mtrand/mtrand.pyx
08be341967d1bfdd1646e801ad23909e667e12c9,"Changed corerandom to random to reflect that it will not be 'supplanted' by full scipy.
",scipy/__init__.py,scipy/base/convertcode.py,scipy/setup.py
e9d1483f0a5fa027d86f8c4084de9dfa4e5e4639,"Removed separate random.py file.
",scipy/random/__init__.py,scipy/random/random.py
d0ec8c0ba6351748869ccd9d469b40cf87366c6e,"Renamed corerandom to random
",scipy/{corerandom,scipy/{corerandom,scipy/{corerandom,scipy/{corerandom
2ca38d27357363781d5e284b8cb81d70754c39da,"Added rudimentary code for over-riding functions in scipy_core with those from full scipy.
",scipy/corefft/__init__.py,scipy/corelinalg/__init__.py
083e8276bc1d407db351e8626337498a10ec425c,"...and back again.
",scipy/{corestats,scipy/{corestats,scipy/{corestats,scipy/{corestats
f1caaab38fbfd62911e9bcfbdd1d297f5967f8ba,"Moved from random to stats.
",scipy/{corerandom,scipy/{corerandom,scipy/{corerandom,scipy/{corerandom
5fa9528d94fa8512a6ce1017b965f2701ce54e96,"Eliminate basic and move everything to corefft, corelinalg, or corerandom
",scipy/__init__.py,scipy/base/convertcode.py,scipy/base/matrix.py,scipy/base/polynomial.py,scipy/base/tests/test_matrix.py,scipy/corefft/__init__.py,scipy/corefft/info.py,scipy/corefft/setup.py,scipy/corefft/tests/test_helper.py,scipy/corelinalg/__init__.py,scipy/corelinalg/info.py,scipy/corelinalg/setup.py,scipy/corerandom/__init__.py,scipy/corerandom/info.py,scipy/corerandom/setup.py,scipy/setup.py
25ddd8d255ecc33d6c5a8b1d0a428ac8961987f7,"Moving out basic tools to higher level.
",scipy/basic/setup.py,scipy/{basic,scipy/{basic,scipy/{basic,scipy/{basic,scipy/{basic,scipy/corelinalg/__init__.py,scipy/corelinalg/info.py,scipy/{basic,scipy/corerandom/__init__.py,scipy/corerandom/info.py
495a683a59ffd2b20769d33e6eb24ff9101bc50a,"Create core libraries.
",scipy/{basic/fftpack_lite,scipy/{basic/fftpack_lite,scipy/{basic/fftpack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic/lapack_lite,scipy/{basic
5c9620bdebb6eb98e3d58b9756419b68461f8b04,"Fix polynomial division
",scipy/base/polynomial.py,scipy/base/tests/test_polynomial.py
540ddd3f45f502456c118def50fac5a0fc9f259a,"small change in poly1d docstring
",scipy/base/polynomial.py
27ee3d2af4f457dfd64ee803a1addecd6a9b191a,"p=poly1d([1,2,3], variable='lambda') will use 'lambda' as the variable in str(p)
",scipy/base/polynomial.py,scipy/base/tests/test_polynomial.py
42e7dd3c039992cb14b113a9314b3d6fefcb56bc,"Removed scipy/test/logging.py, logging is std part of python 2.3 and up.
",scipy/test/logging.py
9514a6c102eacc92dd3d6e84e92630a1f89dea9e,"Introduced SCIPY_IMPORT_VERBOSE env. variable.
",scipy/__init__.py
48d93641c456ee1642c589bf077db5079386b9fe,"Added info.pyc file support to pkgload, needed when freezing with py2app, Josh Marshall patch.
",scipy/__init__.py
557478ef5bf1bfbbbbf045a71db08f1d8c7f6fd4,"Suppressed pkgload debugging messages.
",scipy/__init__.py
b35106b05b7a8ae5a5b524593697f093f86439d1,"Fixed doc string.
",scipy/__init__.py
0874633787a65002e934a0fad4d4f695ff7bf48e,"Initial but working version of scipy.pkgload method.
",scipy/__init__.py,scipy/base/info.py,scipy/basic/info.py
1632f00546368aca4a77428ea5627dd4101fa45b,"Moved C++ like variable declarations to start of function to allow scipy_core to build on Solaris using native compilers.
",scipy/base/src/arrayobject.c
b2f4cb73d2bf835a0afae1ca6453061433d3cc92,"Fixed use of free instead of _pya_free.  Changed back to use system malloc by default.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
af176f8c198b7696644e7d31d1b85d8aeeb3f154,"Fixed uses of malloc to use Python Memory allocator if desired.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
2eb04a7259d196361a5a4a888778cef49d7879db,"Updated convertcode.  Added NOTSWAPPED flag as a possible input to PyArray_FromAny to simplify forcing a machine byte-order array.
",scipy/base/convertcode.py,scipy/base/src/arrayobject.c
654d4d5a2d6c548d6bfffe48b784d05d8226968d,"Fixed docs.
",scipy/basic/info.py
52fa0599b3157f4d2950f5bbd9fc60334f9c912a,"Added missing import.
",scipy/basic/fftpack.py
af71ce665bc0138812c7a6d6c9f40939c6dae56b,"Renamed directory corelib to lib.
",scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/setup.py
af25411d8966bcf1562f1872ad2d724e9e466d5b,"Moved dotblas back to scipy.corelib (scipy.base.numeric tries to import it)
",scipy/__init__.py,scipy/_import_tools.py,scipy/base/numeric.py,scipy/basic/__init__.py,scipy/basic/setup.py,scipy/{basic,scipy/{basic,scipy/corelib/setup.py
3464418761b89f678c112224a4b0dfd1ffe871f8,"Fixed _dotblas import.
",scipy/base/numeric.py
62eb8d68a00052952d07b55f21709e8dc9c1fed1,"Moved linalg_lite, fftpack_lite under scipy.basic. Code clean up.
",scipy/basic/__init__.py,scipy/basic/basic_lite.py,scipy/{corelib,scipy/{corelib,scipy/basic/fft_lite.py,scipy/basic/fftpack.py,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/{corelib,scipy/basic/linalg.py,scipy/basic/setup.py,scipy/corelib/setup.py,scipy/doc/DISTUTILS.txt
f05b6263a88339cc51ac6eaf92e127a4b2db9fd6,"Moved random back under basic and added basic to list of modules to import.
",scipy/__init__.py,scipy/base/include/scipy/arrayobject.h,scipy/basic/__init__.py,scipy/basic/{fft.py,scipy/basic/info.py,scipy/{
625ee58c1634debfd5e49b0de631eaf27ab4ae8f,"Fixed test method when using subpackages as standalone.
",scipy/distutils/misc_util.py,scipy/distutils/system_info.py,scipy/test/testing.py
83015dfad2fc91ddcc0358d1e7d0b7538e647d29," r1600@Blasphemy:  kern | 2005-12-16 01:43:39 -0800
 Removed automatic importing of scipy.basic.* into the scipy namespace
",scipy/__init__.py,scipy/base/matrix.py,scipy/base/polynomial.py,scipy/base/tests/test_matrix.py,scipy/basic/__init__.py,scipy/basic/info.py,scipy/corelib/__init__.py,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/{basic
40577981d3b5206510dc2ef30d340342d2cda702,"Remove silly return from array_flatten.
",scipy/base/src/arraymethods.c
383bca5d986b9d1529e44a425db0160d8080cbd4,"Added more macros for consistency
",scipy/base/include/scipy/arrayobject.h
ec4e73fa1fac89422429ac43f2e21c7638775ba1,"Minor improvement to dtypedescr printing...
",scipy/base/src/arrayobject.c
baddbefc1520521974b93f29cf8dba1468300621,"Added default conversion from array_descr style lists in dtypedescr __new__ method.  Added a default representation for data-type descriptor objects using the typestring (if no fields) or the array_descr representation if fields are present.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
04070b628e759484a33490a9715107baa765cbc9,"Added support to consume the array_descr protocol.:
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/multiarraymodule.c
14a14bc90036e5dc7a44559271961595bb1bff19,"Clean up more swap references.
",scipy/base/_internal.py,scipy/base/include/scipy/arrayobject.h,scipy/base/memmap.py,scipy/base/numerictypes.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
95cb1d06508e1abbec67babb2a47b8844f6c22b1,"Set Py_None in builtin fields later.
",scipy/base/src/arraytypes.inc.src
948a71603d932e43fb256a9ebb2a54cd11d32c63,"Fixed oversight of saving the flags.
",scipy/base/records.py,scipy/base/src/arraytypes.inc.src
532fb2946faec74c3f5bb47a9f7f796eb26624b9,"Made names more consistent, fixed byteorder for recarrays
",scipy/base/code_generators/multiarray_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
562bba5ceb22b4581b9b311cd2408bee81701454,"Fixed ignorance of byteorder in PyArray_CastToType
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
0a5107b382df56ee89b5f4e076cc04e0c7b319b8,"Fix array interface exporting --- set the NOTSWAPPED flag.
",scipy/base/src/arrayobject.c
e59b7f98ba79ea4e6f00c8d7a21c9e278de871f6,"Removed NOTSWAPPED flag as it is more aptly handled by the data-type-descriptor object -- PyArray_ISNOTSWAPPED(ap) is still a useful command.
",scipy/base/_internal.py,scipy/base/chararray.py,scipy/base/code_generators/array_api_order.txt,scipy/base/code_generators/multiarray_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/core_version.py,scipy/doc/CAPI.txt
9985d7cc7892effbe9290002ef3613ea33e02179,"Added newbyteorder methods.
",scipy/base/chararray.py,scipy/base/code_generators/array_api_order.txt,scipy/base/code_generators/multiarray_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/core_version.py,scipy/doc/CAPI.txt
e84aa6335c0d69f86e926cd9ee4536c7ca7cb966,"Fixed is_64bit.
",scipy/distutils/cpuinfo.py
16f6a9275c1d007485e55d2e8fd79490c5934cc4,"Fixed typo.
",scipy/distutils/cpuinfo.py
4bcd5287f619f53e7ea9d966fb860c975c1288b9,"cpu detection fixes for Itanium
",scipy/distutils/cpuinfo.py
4caffb7c22b684ada3498a022846e5a45d7b1e8c,"added additional records unittests from numarray
",scipy/base/tests/test_records.py
6a1ba6d51bd0840c241a8a3a5af3188f96dde531,"added array method test to records unittest
",scipy/base/tests/test_records.py
026c09a5c61d1c1941687a5c8c6fc905621fe9ad,"Added Intel MKL support.
",scipy/distutils/cpuinfo.py,scipy/distutils/system_info.py
9df62b0d2072bfa5809c21a4e181b3a186317422,"Removed swap paramter
",scipy/base/_internal.py,scipy/base/chararray.py,scipy/base/code_generators/array_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
22f9b8625e2de47755ba9a308478a373476aac4f,"Fixed error.  Added byteorder attribute and allow byte-order prefix in string->dtypedescr conversions.
",scipy/base/_internal.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
fe36395c1f22de9031392f7770511a9269fb78ef,"Applied prabhu patch.
",scipy/distutils/misc_util.py
d7d1645ec00a095814d95c725d80129092eeada5,"Importing misc_util locally.
",scipy/distutils/log.py
fd7052d9155beb3901b9ec2b366370d6d48a59bc,"Fixed get_scipy_include_dirs when running from scipy core directory. Fixes also python core/scipy/distutils/system_info.py.
",scipy/distutils/misc_util.py
3ae85989d87039098f2d15e45baaf79cc7d9cebd,"Added string processing to dtypedescr repetoire
",scipy/base/_internal.py,scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
cffac3dad9f46fea895b6eb1fc5e76d532d7eb2a,"Fix byte-order issues on record arrays.
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/scalartypes.inc.src
b5dbca15fc13e9714e57d24bb4a6e67fdeaacd2d,"quick fix for fromrecords unittest
",scipy/base/tests/test_records.py
186f6466c5596c9b9352f5a0be768231c6978960,"initial fromrecords unittest
",scipy/base/tests/test_records.py
7bac5ddfcbe1c53f776b2b33d2a8def6279d176f,"Changed the scipy.pxi file in non-essential ways but since it will probably be a reference I figured it might as well look right.
",scipy/base/convertcode.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/scipy.pxi
c2f71bcff52ae5b81e31ac33d5ccd04efa10f202,"modified fromstring method
",scipy/base/records.py
85203aa7cc2b0005c014a237e8e9926b75bbffe5,"Bumped up version number.
",scipy/core_version.py
21711f8ed7f4b34d3a222f1fcdb7c57d82cba7d0,"Improved VOID_getitem and VOID_setitem when there are fields.  Fixed arange segfault.
",scipy/base/_internal.py,scipy/base/include/scipy/arrayobject.h,scipy/base/records.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
aedc138774a36cdabf9ba30c666e049c19a4c302,"Fixed silly problem in mingw32ccompiler.py
",scipy/distutils/mingw32ccompiler.py
2da41b12e72450089c9873ce52428fc1e0eb360d,"Fix setup.py to include api_generating files.
",scipy/base/setup.py
a20e397e881f3b6c60d00a2195f79b87642f0cb7,"Fixed so swapped record arrays get converted properly.
",scipy/base/chararray.py,scipy/base/records.py,scipy/base/src/scalartypes.inc.src,scipy/core_version.py
f0995b54db038fa8e1ecfecf51c2519e48e10043,"Fixed array pickle to handle subclasses.
",scipy/base/__init__.py,scipy/base/_internal.py,scipy/base/chararray.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
aea56a2d4c50cbedd4591aa970c1ac2578666d5a,"Fixed pickling to support arbitrary dtypedescr arrays.
",scipy/base/__init__.py,scipy/base/numeric.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
bb4910c3f4ae165e8cc11dcfdb51fb4dc1a93b99,"Changed name ndrecarray -> recarray.  Disabled default printing and error printing goes to sys.stderr
",scipy/__init__.py,scipy/_import_tools.py,scipy/base/records.py
c1cc22f8b9992d463c9b31ebdfaa84be506fd717,"Fixed missed dtype->dtypedescr.
",scipy/base/src/multiarraymodule.c
c14792d056422fe02219efc600ca9d67c4bbd56d,"Sped up arange and remainder.
",scipy/base/code_generators/multiarray_api_order.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/umathmodule.c.src,scipy/core_version.py
cf4cf7f0e6af89772aeb6daeb7f6f05f3c51f8ae,"Update alignment when appropriate.
",scipy/base/src/multiarraymodule.c
16321ac7f30dea0ccf34136bc5237d6c60c33ec3,"Re-factor code to get dtypedescr from object.
",scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
a4592fd3804bef8d42e34fbd0260cac83ade7318,"Fixed-up putmask to accept anything and force the cast to BOOL.
",scipy/base/src/multiarraymodule.c
18d66b268247f539c8147a922a145f3c50499ba6,"Fix-up dealing with arbitrary objects as type-descriptors.
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
845a9b44ce100cfda7508dad035da7deab7e643e,"Fixed _dotblas.
",scipy/corelib/blasdot/_dotblas.c
c5f751fd21c87fd4b2cab4e890a495957a7d5feb,"Update CAPI.txt to reflect new function pointer structure.
",scipy/doc/CAPI.txt,scipy/f2py/cfuncs.py
b514d4c9754b4434e0d5987f976e831c90b80253,"Moved function pointers to sub-structure.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/core_version.py
8f9068107523e2fdde74d3d74c39373d5099a692,"Fix up object arrtypes to pass attributes to wrapped object.
",scipy/base/src/scalartypes.inc.src
8098f1e05d3296580dd91097554eb1be103b2652,"Fix backward compatible Numeric C-API so that NULL data does not return Fortran array in FromDimsAndDataAndDescr.
",scipy/base/src/arrayobject.c
4d8d808f5e6aef1c3e980a7fd01efb1b66a0fa5f,"Fix-up reference counting for OBJECT arrays in ufuncloop.
",THANKS.txt,scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c,scipy/doc/ufuncs.txt
a046954e5b71740c23e6abde42f913f72d0b6e27,"Fixed loop->function code
",scipy/base/src/ufuncobject.c
cade732ca5ffb5dff3fecf268e56a9dbbf758307,"Fixing appendpath tests fow Windows. 3rd try.
",scipy/distutils/misc_util.py
b7fd6b53a0f8d94a891a56ce55d58bfda8ad74a8,"Fixing appendpath tests fow Windows. 2nd try.
",scipy/distutils/misc_util.py,scipy/distutils/tests/test_misc_util.py
c47edab75891f9ebd2bc0bd17a94b619354aea82,"Merging fixufunc branch -r1606:1613
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
e59a3eb570dead3fefa309a914076de3c35f6bc9,"ufunc fix seems to be working...
",scipy/base/src/ufuncobject.c
9c05eb88f275e99032415d2f39187273b4330872,"Fixing appendpath tests fow Windows.
",scipy/distutils/tests/test_misc_util.py
06e4714cb71c7b90e5c4e1b16118819e3fa9a79b,"New ufunc code works on simple case..
",scipy/base/src/ufuncobject.c
269e5e6d5ce0330936d195b458faf17fc4bafbe4,"Fixed setitem problem.
",scipy/base/records.py
d741f1d429cbd2d3cc736ddfd57c91a80a669d67,"First-pass at optimized buffer ufunc.
",scipy/base/include/scipy/ufuncobject.h
76b98e3141766ea2b75f6e209cbb89f0daf6a71b,"First-pass at optimized buffer ufunc.
",scipy/base/src/ufuncobject.c
26ab095bebf4c17d98e287667a24b93aa17bbb57,"First stabs at fixing buffered ufunc to not copy unnecessarily.
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
f2f568d9572d2b37139095a1caec4021cd5e0327,"Use amax and amin in ma.py
",scipy/base/ma.py,scipy/base/records.py
5b30dd12fa2e39d3bbcc239d945489116449e755,"Fix-ups for records
",scipy/base/records.py
69ecc32bbf78a4341c183fa32984ef5cd2504dd5,"Fixed up records so that record-scalar modifies original data.
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
2f8218dcf416bed26f1771795516a68b601849a3,"Record type infrastructure in place.
",scipy/base/__init__.py,scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
38798eb17862a302f4121564b7eb225aec2a84fe,"Fix problem.
",scipy/base/src/scalartypes.inc.src
abe35b3957eb45c7c167bee09ce780a32e3b13cf,"Fixing records.py
",scipy/base/_internal.py,scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
58edc633cdc7a3bad5903997456a38afa8e4ab8e,"A few bug-fixes to descr-handling code.
",scipy/base/_internal.py,scipy/base/src/multiarraymodule.c
5073394f21439308999607ca16fe289f64b8a59f,"Added list as data-type specifier.
",scipy/base/src/multiarraymodule.c,scipy/doc/records.txt
4ba1a352b8a450831da7c7a5a9b12b19d14ddbca,"Changes to docs.
",scipy/doc/CAPI.txt,scipy/doc/records.txt
151c9d64d389e119c671dd2cf30d47a4cdfeabe1,"Added __array_descr__ protocol (export) support.
",scipy/base/_internal.py,scipy/base/src/arrayobject.c
624b71741db4f4d32aa69d09ef328cc8b37dcc4f,"New implemenation of logspace using linspace due to Alan G. Isaac
",scipy/base/function_base.py
2a2f0991f3abb9f389928a88fd93a1a30b02c8f6,"Fixed typo in setup.py script.
",scipy/base/setup.py
02d368a2476c7e61402bd299ed97b2b0a9f25900,"Fixed-up PyArray_Scalar to receive PyArray_Descr *
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/core_version.py
ff82140af3974230219fe868c9bdcbbe4f94d6f3,"Fixed-up PyArray_Scalar to receive Descr structure.
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/core_version.py
05e7ce2f90ae4eaf41fddf36af92f6316dd1fd47,"Start changes so that Scalar creation relies on Descr structure.
",scipy/base/src/multiarraymodule.c
10c13899e810e8cb38748e5f59da765c58995c96,"Start changes so that Scalar creation relies on Descr structure.
",scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
4366dcd242a91c89e96de0a8783b723b04246932,"Refactor API generation a little
",scipy/base/setup.py
f487b5a30df5ce841cc2ddde91af6d5ea0fe2134,"More robust corner cases for linspace
",scipy/base/function_base.py,scipy/base/tests/test_function_base.py
6c30140dc13115f7c7b1e8df9bf5be79da57ca10,"Don't allow OBJECT_Descr to be used as a base descriptor.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/multiarraymodule.c
0e8e24c1974be222f012d17db2e3549e382acb3e,"Fixed syntax errors.
",scipy/base/code_generators/genapi.py,scipy/base/records.py,scipy/f2py/docs/FAQ.txt
4d39b108c1eaaa9fbfa64770f2d17d9164263b08,"Left a debug statement in
",scipy/base/setup.py
c6e97c7886750ffd6d6623ec6a1510c566cb3b50,"The declarations for API functions are now read directly from the source files, using the /*OBJECT_API*/ (and similiar) tags.
The order of the API functions is determined by the *_api_order.txt files in
code_generators/. Also, the code_generators/generate_*.py files are imported
instead of using execfile() in setup.py, with common routines held in genapi.py.
",scipy/base/code_generators/array_api_order.txt,scipy/base/code_generators/genapi.py,scipy/base/code_generators/generate_array_api.py,scipy/base/code_generators/generate_ufunc_api.py,scipy/base/code_generators/multiarray_api_order.txt,scipy/base/code_generators/ufunc_api_order.txt,scipy/base/setup.py
aeccfe653e5429fc1debe38af415ec9a1ce4cfc1,"Add API tags: comments like /*OBJECT_API*/ before functions that are exported.
OBJECT_API is for the PyArray API, MULTIARRAY_API for multiarray, and UFUNC_API for ufuncs.
",scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
20e073f4b4a009158ac7e3ec679fe451a1f1e177,"Moved generic type-object checking back where it belongs.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
c8d9e844299c36befc83e095aafafada68f60347,"Fixed 64-bit problem
",scipy/base/ma.py,scipy/base/src/arrayobject.c
f45b4c5524526c0b8abe959ec53427eaf4712a5c,"Added general object->descriptor converter.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
db074713f38620572b4333026ae64d262ce87d2a,"Small fixes for declaration code style (opening brace of function on new line)
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src
4d66d0102919ba5afd09b998b0be6916d496e4d9,"Fixed int->intp in header of NewFromDescr.
",scipy/base/src/arrayobject.c
4de572b9b4dbaabe1008da8660c96d90c09c81e9,"Fixed-up setfield bug and added offset check for negative numbers.
",scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c
f49bd3ec96c15f04406f185a5ad123b897ebe6de,"One more error in cfuncs and remove Py_NotImplmented from fields.
",scipy/base/src/arrayobject.c,scipy/f2py/cfuncs.py
4a7ce99355e8a7860f9782a8f0900234c7fa96ee,"Fixed typo in cfuncs.py
",scipy/base/matrix.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/doc/records.txt,scipy/f2py/cfuncs.py
bcd661e1bd0d478b22341079c7e5fb60c9353cfc,"Comment fixes..
",scipy/base/_internal.py
50fefdff2667d55fe6c068b26dd62b2aaddae880,"Added handling of output of fields returned from dtypedescr to constructor.  Fixed itemsize reference in fortranobject.c
",scipy/base/_internal.py,scipy/f2py/src/fortranobject.c
cb2f58fe323d9753b45ecd9f877f6acb99c7c94b,"Field specification possible with two-kinds of dictionaries
",scipy/base/_internal.py,scipy/base/numeric.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
4772f10191f87a3446f4862de6d4b953e0dd95ff,"Creating data-descriptors from a dictionary now works.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
73eff17e359d08053183fc0aa4280261ca580dbd,"Fixed up tuple as data descriptor and added datadescr for descriptor constructor
",scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
9db8e4f9cb95484af086951c0e22d7d6947b744b,"Merged fixtype branch to core directory.
",scipy/base/chararray.py,scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/records.py,scipy/base/src/_compiled_base.c,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/core_version.py,scipy/corelib/blasdot/_dotblas.c,scipy/doc/records.txt,scipy/f2py/cfuncs.py,scipy/f2py/src/fortranobject.c
a13279edfc10f6e392bc01255b8daeb0fbf3e1ab,"Fixtype branch tests level 1 pass.
",scipy/base/chararray.py,scipy/base/matrix.py,scipy/base/records.py,scipy/base/src/_compiled_base.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src
a7a0f136775df5fd838f7b1c151fc78629e49d97,"Fixtype branch.  No segfaults on test...
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/_compiled_base.c,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
b7b8af237af6af1bd22bbcabe01a0a3c1e370325,"Fixtype branch compiles again.  Manual check of PyArray_Descr reference counting completed.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
cd080336631a9e49105cb79c941bd83cd98df5b0,"fixed fromstring for 64-bit
",scipy/base/src/multiarraymodule.c
20c6033a436585121667131df9de84707b09ccee,"More fixes for fixtype branch.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/doc/records.txt
de8086af15c2826f463b0a8349e946c740443e0f,"Reference count fixes for fixtype branch.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/corelib/blasdot/_dotblas.c,scipy/doc/records.txt
49b48ff25c154777d7d7bcbcbd59a956cf24787a,"Conversion from PyArray_Typecode to PyArray_Descr * now compiles.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
88c06a9dadff289c870549299019d8378358cec0,"Finished pass 1 of fixtype changes. Now, fix compile errors...
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/_compiled_base.c,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/corelib/blasdot/_dotblas.c
75e30359f2deeafc6a5aac954af035fa2b9f3349,"More changes...
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/doc/records.txt,scipy/f2py/cfuncs.py,scipy/f2py/src/fortranobject.c
a28f19c2240e48a41a70e5ee543da1fbaf7af1bb,"Saving incremental changes
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/doc/records.txt
60a887895083f636d568e1918a3331cf2745bc66,"Incremental changes to fixtype branch.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
7050eb54919b693eb4e718622e4ecbd0035b3007,"Saving changes.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/basic/basic_lite.py,scipy/core_version.py
d3fe38afa38c9f0350b0bf3d2c4705166b76d676,"Fixed astype problem causing cholesky to fail.
",scipy/base/src/arraymethods.c
4ba40d45bedc670d0a1a69ca023ddcdab3946091,"First initial changes.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/basic/basic_lite.py
830408c443f60dc56cea81774a942bcfb2e7db33,"Very old versions of setuptools don't have bdist_egg; check for that.
",scipy/distutils/core.py
5cf8208bb3567838f0812fd1c0714a6482a73c0d,"whitespace fix
",setup.py
0ce7a2672d666456fdba39047813fefa419ca95b,"Added ability to get and set a tuple-type field.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/arraymethods.c
7548e73940949948ce39387c270ba3acd606d5d4,"Added ability to set data type to a tuple
",scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c
9772a6ad0bc0e03318ecaf8714f29e5a58362efa,"Added PyArray_SetField to API.  Began code to allow setting the data type with a tuple of (dtype, shape) for better records support.
",scipy/base/code_generators/generate_array_api.py,scipy/base/numeric.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
158f48745d77993638bfe82fc1bdfddcf24cacbf,"Basic record type now works.
",scipy/base/arrayprint.py,scipy/base/numerictypes.py,scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
c9af94ca078be1fa0d7a3528f57ab2a5b295fcc4,"Fixed argmin bug.
",scipy/base/numerictypes.py,scipy/base/src/multiarraymodule.c
87db003b743e9852f1aa98f91ba78e8d02a79133,"Fixed segfault bug on type change for 0-d arrays.
",scipy/base/src/arrayobject.c
18f57f5f55fef1883ee906dbb6a5eda72b62339f,"Improvements to chararray.
",scipy/base/chararray.py
8dfbf5d48d60c741a066c2e86ee9b4aed5d370a1,"Fixed up ndchararray a bit.  Fixed up use of registered data types.
",scipy/base/chararray.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/records.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
0376164cffd1b64f276f2a04c922e1c1727f57d4,"Added .var method and fixed problem with .std
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
5a53416bb33ef90ded117784cf3529a129fe81fb,"Fixed cblas_dgemm bug reported for Numeric 24.2
",scipy/corelib/blasdot/_dotblas.c
56c7f033e60379228c88c09fce0fec137a26c4c0,"Removed print statement and added CastScalarToCtype function.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/core_version.py
25a5a74415005f887c51eac99a81ac16c12ec41e,"Add GetPyValues to UFunc_API.  Add mechanism so that if default ufunc pyvalues are in use the variable look up is by-passed.  A method call updates this static variable.
",scipy/base/code_generators/generate_ufunc_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/numeric.py,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src,scipy/core_version.py
aa61c8c72f2ac24c5c144ebc9a7bc3e248f40c6b,"Fixed object array math with non-array types.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/ufuncobject.c
d51cd611fc8e8c65ca2257c1ac47a0a6f1c7da54,"Changed version since API addition.
",scipy/core_version.py
2ff29c5484d3a2365a2f1d1fc6274c79bf0d1bda,"Added some macros and function for accessing ndarray
",scipy/base/chararray.py,scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/multiarraymodule.c
fe36f6ddc21889d99ff32aa424f1e6296ab49eff,"Enabled LastChangedRevision HeadURL keywords.
",scipy/doc/DISTUTILS.txt
b741bf35ca234f97d951c7268d30fd16a8fc21da,"Added PY_UFUNC_UNIQUE_SYMBOL and friends.  A few edits to C-API documentation.
",scipy/base/code_generators/generate_ufunc_api.py,scipy/doc/CAPI.txt
63a111824d82eec51eda7d5d1bd491f865e88651,"Fixed typo.
",scipy/distutils/misc_util.py
9bcc664ed328e3ca9b294e2beff4b94b9175ff4d,"Improvements to multiter and flatiter types -- give them a few attributes
",scipy/base/chararray.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
3180d78e34fa1a661e46b1475b89f8480d93766b,"Some more fixes to weave.
",scipy/weave/accelerate_tools.py,scipy/weave/blitz_tools.py,scipy/weave/examples/object.py,scipy/weave/examples/ramp.py,scipy/weave/size_check.py
20ba22538a5bc921032420bbfe0a886952d37335,"Fixed up unicode scalar object issues.  Started character array sub-class.
",scipy/base/chararray.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/base/utils.py
c2c4df30da57d6bd3b5bba81d8bed5b7a2b96718,"Cleaned up memmap.py and made it available.  Started with chararray.
",scipy/base/__init__.py,scipy/base/chararray.py,scipy/base/matrix.py,scipy/base/memmap.py,scipy/base/utils.py
4d8e8a06519bc190be779e8d1b3233706e383362,"Andrew Straw's patch to avoid conflicts with a C++ compiler defining Bool.
",scipy/base/include/scipy/arrayobject.h
74ffa1e40ba6c12b2ee81f14829e7fe9e5817b8d,"Doc updates.
",scipy/_import_tools.py
7b5192960a7ec97c2b3e03459f7ded340b73a22b,"Doc updates.
",scipy/_import_tools.py,scipy/doc/DISTUTILS.txt
bf8d70681632027a3bdd1b8a8278e508076fe3fc,"Added default_config_dict with depreciation warning.
",scipy/distutils/misc_util.py
c9582b927e8c919356f530a131d8ea77b208a605,"Added default_config_dict with depreciation warning.
",scipy/distutils/misc_util.py
6b631ec6fef7e218d5312cc3841e2b2ef30bf759,"Don't try to use fortran linker when it is not available.
",scipy/distutils/command/build_ext.py,scipy/distutils/fcompiler/__init__.py
7ac1eab819fd66e9a168688363ba9b89ba5a5092,"Adding none fcompiler.
",scipy/distutils/fcompiler/none.py
116f3e7a5210345bb9a91339ecca084d5ceaa86e,"Fixed problem with ravel and 1-d.
",scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c
fb2b4913ab73fd8ccf7e5416f39f97faa1dcef47,"Added simple memory mapping to core.
",scipy/base/code_generators/generate_array_api.py,scipy/base/memmap.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
a1e5c5bc399f95f4ee5994f55ceb1267b233ce12,"Fix memmap some. Fix reductions on object arrays.
",scipy/base/include/scipy/arrayobject.h,scipy/base/memmap.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
a4d16e5474254922bf4ea0ab76c4293aa2fba519,"Applied ravi patch for gfortran.
",scipy/distutils/fcompiler/gnu.py
7ad11006428c3d85a84db9b2c528b026c8a0bcc0,"Fixed compiler warning for 64 bit platform.
",scipy/base/src/multiarraymodule.c
9d4947bde9737087af3c3d31ca538c2982f16daa,"Improve writeable detection.
",scipy/base/memmap.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
a536768f167dd8c4ebb4083c9eab8e8e498df917,"Added memory mapping from numarray.
",scipy/base/memmap.py
d9b385071c9b7ca71ef3b3da693770dd078c9fae,"Fixed autocasting tests to casting tests.. Inplace casting is not supported.
",scipy/base/matrix.py,scipy/base/tests/test_matrix.py
4f869af51776d774f7555313ce879a1100eb8f80,"Reverted matrix.py to previous state.
",scipy/base/matrix.py
9f57eaeaee4fa542932b99f4bea5dc7e44538184,"Fixes and efficiency improvements for matrices
",scipy/base/matrix.py
53adce329f29e673852519682db6b204192d8002,"Fixed array_resize problem.
",scipy/base/src/arraymethods.c
1931776a17dff3d751780f8ab3e1f9f2104292f6,"Minor changes.
",scipy/base/src/multiarraymodule.c
a2b7978bb8be76fc5297f5199229906b7f6823ac,"Added asmatrix() function, as a parallel to asarray(), and new tests
",scipy/base/matrix.py,scipy/base/tests/test_matrix.py
dd815f35ebb406a70bb354f459a572cb069f6744,"Bug fixes and transparent upcasting for matrix objects
",scipy/base/matrix.py,scipy/base/tests/test_matrix.py
4330c22b2fd3c1edb368af386364d397d0aaaceb,"Cleaned up.
",scipy/base/src/multiarraymodule.c
a96cec43392ce90036a43c3bf5be5e730b933b77,"Re-factored ConvertToCommonType and added to C-API.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/multiarraymodule.c,scipy/core_version.py
d23cda7199ae132df9661e676fa0df4910fc2530,"Fixed up problem with PyArray_ArrayType that was causing trouble with PyArray_Choose.  Also altered concatenate and choose so that type selection is not swayed by scalars.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
2203b4e13e284400e9f3846f70602a99942869e7,"Allow data to be NULL in PyUFunc_FromFuncAndData
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c
8344c055f72c38b62118317f7fbb6a5335d25c80,"Disallow arrays and array scalars as types.
",scipy/base/src/multiarraymodule.c
da2ba36993bbd33d7571e5d8eaa199ecf83fbc60,"Fixed up fancy_indexing check to handle more sequences.
",scipy/base/src/arrayobject.c
1add63fa4c2e4b1af420d79aadee9525b074c688,"Fixed bug in test_matrix.py
",scipy/base/tests/test_matrix.py
532f7cf3c58aad8f24437100142e1d314d208da3,"Fixed a problem with PyArray_Where.
",scipy/base/src/multiarraymodule.c
7e9ace98bf72b49bf17f4600406463bb3baffa93,"Removed generic typecode capability.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/multiarraymodule.c
38dbe29fc9b84056264193bd3cc658efc7eb54bc,"
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/distutils/mingw32ccompiler.py
44faafe479fa1d6b203464812b4479be50dd1c70,"Fixed some issues with fromfile and hopefully with mingw32 compilations.
",scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/distutils/mingw32ccompiler.py
2f14971b82237ebcd19557421eca8c1976caccf0,"Fixed strings as indexobject segfault.
",scipy/base/src/arrayobject.c
5866c7eb8942fc9dbc5f1219917baec200b6597c,"Fixed svd and eig to be compatible with full scipy.  Eliminate warning.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c,scipy/basic/basic_lite.py,scipy/basic/fft.py,scipy/basic/linalg.py
fedd3f1d915afc7ebf31ee8fd9e69e0012ac344e,"Change rules.py back.
",scipy/f2py/rules.py
96853238f9a848100ad9e651bb64c8b2c6d1443e,"Restore inadvertent change to f2py.
",scipy/test/testing.py
48971fb6b2b44cf475f06ef5a53d123081f1315c,"Fixed set memory to zero for generic allocator.
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/f2py/rules.py
17b9068cc2566b61ed8e8920f1b2ad842b76176c,"Altered allocator for scalars.
",scipy/base/src/scalartypes.inc.src
511efc9d81f9daa005d77d8f04643f10fc32129d,"Removed dependence on Python memory allocator for most scipy core objects.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src,scipy/base/tests/test_ma.py,scipy/base/tests/test_matrix.py
d692bad8cda28858c113563722c7d66bd4d9f73b,"Closed a few more leaks.
",scipy/base/ma.py,scipy/base/src/_compiled_base.c,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c,scipy/base/tests/test_ma.py,scipy/base/tests/test_matrix.py,scipy/f2py/src/fortranobject.c
51508b2a55b9f96105dfa03d84a3bbc0341efc1a,"Fixed missing global symbols.
",scipy/basic/info.py,scipy/basic/linalg.py
3c39ae4949f97ed4eef23e2923642257c46ceabb,"Exposing package documentation strings to scipy.__doc__.
",scipy/__init__.py,scipy/_import_tools.py,scipy/base/__init__.py,scipy/base/{info_scipy_base.py,scipy/basic/__init__.py,scipy/basic/info.py,scipy/test/__init__.py,scipy/test/{info_scipy_test.py
3ceafbff8decc7b0556d5b466fad4f0d11e34d56,"Improved MultiIterator Macros. Added it to namespace.
",scipy/base/include/scipy/arrayobject.h,scipy/base/numeric.py
d6869c90048d96ebda4ff451ad6872577e8c731d,"Added multiter type to expose broadcasting as an iterator.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/core_version.py
f4e6260334dc598f736190ad73766aef3f6b1374,"Fix a.imag = obj problem.
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
2cc83c5183e257bcc6f218d998bd7d315885862e," r823@Blasphemy:  kern | 2005-11-13 00:35:39 -0800
 Fixed isinstance() uses
",scipy/base/polynomial.py
35c019e267d08bee6c17308b29c5bc6c4928dec6,"Updated version...
",scipy/core_version.py
5a215e75e2ee5100c1e6076123b10f135f62b14c,"Modify README.txt
",README.txt,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c
a218a559bfd81e2bcd18cc10da28030251398e43,"Patch by Andrew Straw, which fixes recently introduced segfaults triggered
because arraymethods.c's _ARET() macro assumes its input is PyArrayObject*,
whereas in these cases it's simply PyObject*.
",scipy/base/src/arraymethods.c
0ca82e96d3f31d8f485245cf2e9581bdf72fdb61,"Code clean up in f2py. Added initial gnu95 compiler support.
",scipy/distutils/fcompiler/__init__.py,scipy/distutils/fcompiler/gnu.py,scipy/f2py/f2py2e.py
7cbb2fcfc19c66f6470f7a24c8de4968263cf29c,"Added a few features to the C-API
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/multiarraymodule.c,scipy/core_version.py
ffa70cdb23d58eb7fb45bb73bfb4bad2d88ae852,"Changed core_version back.
",scipy/core_version.py
280dfb5924f132f8e5103bd44d9c468f9255f9ca,"Removed svn version number for release.
",scipy/base/src/arraymethods.c,scipy/core_version.py
42a1219d36a27a35350f532e46fea33da56cc227,"Prevent infinite loop with longdouble on PPC with gcc 4.0
",scipy/base/machar.py
3ecf0fe0846012b4dbfcb2e384b25b92f1c1aa55,"Possible memory leaks closed.
",scipy/base/src/arrayobject.c
6ee7839778707216a265e935278a899383de6602,"Fixed bug in scalar methods.
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
a08f2fca74b0b339c7b68249db22fbd9e211a9ff,"Added fftw3 support to system info.
",scipy/distutils/system_info.py
19a82bcaf79cf35f252c73e5988e465b2ba8d55a," r804@Blasphemy:  kern | 2005-11-11 03:22:40 -0800
 Better gamma algorithm
",scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/mtrand.c
e976023c94992967c9e8060117a5f6795102525d,"Fixed string conversion.  Cleaned up.
",scipy/f2py/cfuncs.py
4468007f48b72c5ce049777d3504be1b588e9887,"Speed up pyvalues lookup a bit.
",scipy/base/src/ufuncobject.c
a75a2b19a3391c41a8a421781caa9dd1e0aa16e9,"Mild changes and version number upgrade.
",COMPATIBILITY,README.txt,scipy/base/src/arrayobject.c,scipy/core_version.py
3e339a073a931f9a6e57973c33275e282c34cbb5," r802@Blasphemy:  kern | 2005-11-11 00:32:39 -0800
 Improved the algorithm for the small-mean case of the binomial distribution
",scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/scipy.pxi
acd6ca1a8a3481182f5538a0ef43632fa940b5c1,"Alter shape setting.
",scipy/base/src/arrayobject.c
4175a06dba69e554da3dc51802a4372bd0b7ea62,"Moving newcore to trunk
"
bc6b3143e2c7fd4554d409e0b5b6820e526a5b95,"Added f2c.h to depends.
",scipy/corelib/setup.py
6d32237526756e09dbddb605fda2438cf768f302,"Fix array scalars __array_struct__ interface
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
d9d479791f91e8ed4e0294416a39dc8220d85b6e,"Added Masked Array tests.
",scipy/base/tests/test_ma.py
82fb848fe9e79de288d9f153533ae44d5ce38547,"Minor memory leaks
",scipy/base/src/_compiled_base.c,scipy/base/src/ufuncobject.c
3f4142f8688db7b216725e175382b08e9316a297,"Fix array_structinterface bug
",scipy/base/src/arrayobject.c
a42bc3e1f378bc4d4d8853edb5679566d21ab90e,"Added Paul's enhanced masked arrays.
",THANKS.txt,scipy/base/ma.py,scipy/base/numerictypes.py,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
b184d68769440f9f47bd887d5fc068f7e24ec15b,"Fix up bad commit.
",scipy/base/src/ufuncobject.c
1859d1aa347be52ed6036269a790a370cd764514,"Changed Transpose C-API. Cleaned up memory leaks.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
46557b9d3b292bba94022c2e2ed70d45d40265e6,"Beginnings of faster scalar math.
",scipy/base/src/scalarmathmodule.c.src
4588d7ffbcb85009875a6cb8138c28676aa4d179,"Fixed put and putmask functions to not work for nonarrays.
",scipy/base/oldnumeric.py
7dcff406209725ac7859d033d0cccca80cee6298,"Switched order of put and putmask.
",scipy/base/oldnumeric.py,scipy/base/shape_base.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c
f13e023998e3e61cea04bdb0f39dd763b2c784a4,"Fix int stop -> intp stop in parse_subindex
",scipy/base/src/arrayobject.c
e56008050cc4d1bd5b6dbab6e5c201ba365f9b56,"Fixed up slice parsing to support larger integers on 64-bit platforms.
",scipy/base/src/arrayobject.c
f37554d285242096f6db36946c9e1fb3804665ac,"Created a better Copy function that can copy FORTRAN order too.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
94d041cadb5f34c55d5496217f4f42065e109b00,"Fixed another leak.
",scipy/base/getlimits.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c
b6502bf97ab39138a491378e29a7e7e38e31bd9c,"Fixed-up array interface.
",scipy/base/src/arrayobject.c
55d50c548168b4140a26893fe85f5064daf415ff,"Comment changes.
",scipy/base/src/arrayobject.c
183f6fc3a7a0aec76ea76f21479636227cd10add,"Remove PyArrayMapIter_Type from user space.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
12a01c195a986a378962953edfe6f5d045cd6490,"Updated FillWithScalar.
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src
360f43fe063484ad0a811b073aebd5ebd60a9125,"removed MapIter commands from C-API
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
19b0e649467a02eaeac225a39b9c513a8590da8c,"More valgrind-found bugs.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
c0719756b15d65e3398631e3ebf1075906a7b87e,"valgrind-found fixes and adjust indexing for object arrays.
",scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
ab695d0085440fcfb59f36a26309fea055667046,"11/4/05 -- CJH -- Moved variable declaration to make it consistent with C standard.  Declaration had been keeping scipy_core from building on Solaris systems with native compilers.
",scipy/base/src/multiarraymodule.c
705ba54e977632aad5a766bb353c63e4032c10c6,"Fixed some type issues.
",scipy/base/numerictypes.py,scipy/base/oldnumeric.py
6e3f146825a4287a8195a092173571d2af84b669,"Fixed back the test to cover all of scipy.
",scipy/__init__.py
b614b68cc7a2554b9b68904840d77d083f98e7bd,"Added flexible support for Choose.
",scipy/base/src/multiarraymodule.c
b7c1615d32885bd323d02c466df6b3d83ad5bdab,"Found and fixed Put Object bug.
",scipy/base/shape_base.py,scipy/base/src/multiarraymodule.c,scipy/base/tests/test_shape_base.py
8034b06e957eee0ec5ba51cdc76adcf2af132f7b,"Disable problem test.
",scipy/__init__.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/tests/test_shape_base.py
f5d38ebb7d2fb87ced504a23b79a619ec1e98720,"Small fixes for Intel Compiler class - tested and builds correctly
",scipy/distutils/fcompiler/intel.py,scipy/distutils/intelccompiler.py
3bdf640416687dd312c600b454ad28b8291acbd4,"Raise error for iteration over scalar.
",scipy/base/src/arrayobject.c
d70ab04a5e60afd5c76c8b236c74312c332f9c43,"Fixed problems with non-existent attributes in array interface.
",scipy/base/src/arrayobject.c
ba0c1639eea9308865cff70a91373b5d83c95f10,"Added Intel C Compiler class.
",scipy/distutils/ccompiler.py,scipy/distutils/intelccompiler.py
1514eef0c998d576ee954a02b3f4f4f46e53b1c1,"Comment changes, and change read to write in PyArray_Dump
",scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c
63e2431c51ddc6a4f501830b5c5a17a781b507d9,"Fixed bug in getfield, and some consistency issues.
",scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
91cc73f0fd06b43b22018da8a2f1ac73b307e6eb,"Added ability to create arrays of user-defined type using the typeobject.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
e484db1b4e730d58a395381aa1b4a98dee834f59,"Altered flexible types so that NotImplemented is raised in case another type wants to handle it.
",scipy/base/chararray.py,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
0e488269b5feebe4fb47380fdf19a21da95b1b70,"Updated PyArray_Zero and PyArray_One.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
8de819f1bd12f8c4fb050be5c643581e22dd2b30,"Add missing variable declaration
",scipy/base/src/arrayobject.c
fc1db88d72029d3120aee67f7fb0a20b0d5df244,"Fixed some array interface issues.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
cf2c7c970fbb74b3266aece5934e6ef9694fc991,"Comment cleanup.
",scipy/base/numerictypes.py
5a7abd79c3ed7d822dfcccc0608427e24c6f63d5,"CJH -- 11/2/2005 -- Modified the nbytes dictionary to return values in bytes instead of bits.  Makes the assumption that 8 bits is 1 byte.
",scipy/base/numerictypes.py
51024bcd0c685d040b03ba23484dfec4bff7f681,"added support for __array_struct__
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
76f82877c3ee011338bd72083437f202d5859940,"Added nbytes attribute and nbytes dictionary
",scipy/base/numerictypes.py,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
3daefec5d6169c42233fa536b28d58e7d0d15fd9,"Fixed Concatenate to use new ArrayType interface so flexible arrays are supported.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
3234006cccfce05160b77a76dd045fc5be0f4ed3,"Update Blitz++ included with weave to 0.9 (which was released 2005-10-18).
Currently, this only has a configuration for GNU g++.
",scipy/weave/blitz/blitz/MAT-NOTE.gz,scipy/weave/blitz/blitz/Makefile.am,scipy/weave/blitz/blitz/Makefile.in,scipy/weave/blitz/blitz/README,scipy/weave/blitz/blitz/applics.h,scipy/weave/blitz/blitz/array-impl.h,scipy/weave/blitz/blitz/array-old.h,scipy/weave/blitz/blitz/array.h,scipy/weave/blitz/blitz/bench.cc,scipy/weave/blitz/blitz/bench.h,scipy/weave/blitz/blitz/benchext.cc,scipy/weave/blitz/blitz/benchext.h,scipy/weave/blitz/blitz/blitz.h,scipy/weave/blitz/blitz/bzconfig.h,scipy/weave/blitz/blitz/bzdebug.h,scipy/weave/blitz/blitz/compiler.h,scipy/weave/blitz/blitz/config-ICL.h,scipy/weave/blitz/blitz/config-KCC.h,scipy/weave/blitz/blitz/config-SC4.0.h,scipy/weave/blitz/blitz/config-SGi.h,scipy/weave/blitz/blitz/config-g++2.7.2.h,scipy/weave/blitz/blitz/config-mwerks.h,scipy/weave/blitz/blitz/config-xlC.h,scipy/weave/blitz/blitz/config.h,scipy/weave/blitz/blitz/config.h.in,scipy/weave/blitz/blitz/etbase.h,scipy/weave/blitz/blitz/extremum.h,scipy/weave/blitz/blitz/funcs.h,scipy/weave/blitz/blitz/indexexpr.h,scipy/weave/blitz/blitz/limits-hack.h,scipy/weave/blitz/blitz/listinit.h,scipy/weave/blitz/blitz/matbops.h,scipy/weave/blitz/blitz/matdiag.h,scipy/weave/blitz/blitz/matexpr.h,scipy/weave/blitz/blitz/matgen.h,scipy/weave/blitz/blitz/mathf2.h,scipy/weave/blitz/blitz/mathfunc.h,scipy/weave/blitz/blitz/matltri.h,scipy/weave/blitz/blitz/matref.h,scipy/weave/blitz/blitz/matrix.cc,scipy/weave/blitz/blitz/matrix.h,scipy/weave/blitz/blitz/matsymm.h,scipy/weave/blitz/blitz/mattoep.h,scipy/weave/blitz/blitz/matuops.h,scipy/weave/blitz/blitz/matutri.h,scipy/weave/blitz/blitz/memblock.cc,scipy/weave/blitz/blitz/memblock.h,scipy/weave/blitz/blitz/minmax.h,scipy/weave/blitz/blitz/mstruct.h,scipy/weave/blitz/blitz/numinquire.h,scipy/weave/blitz/blitz/numtrait.h,scipy/weave/blitz/blitz/ops.h,scipy/weave/blitz/blitz/prettyprint.h,scipy/weave/blitz/blitz/promote-old.h,scipy/weave/blitz/blitz/promote.h,scipy/weave/blitz/blitz/rand-dunif.h,scipy/weave/blitz/blitz/rand-mt.h,scipy/weave/blitz/blitz/rand-normal.h,scipy/weave/blitz/blitz/rand-tt800.h,scipy/weave/blitz/blitz/rand-uniform.h,scipy/weave/blitz/blitz/random.h,scipy/weave/blitz/blitz/randref.h,scipy/weave/blitz/blitz/range.h,scipy/weave/blitz/blitz/reduce.h,scipy/weave/blitz/blitz/shapecheck.h,scipy/weave/blitz/blitz/tau.h,scipy/weave/blitz/blitz/timer.h,scipy/weave/blitz/blitz/tiny.h,scipy/weave/blitz/blitz/tinymat.h,scipy/weave/blitz/blitz/tinymatexpr.h,scipy/weave/blitz/blitz/tinymatio.cc,scipy/weave/blitz/blitz/tinyvec-et.h,scipy/weave/blitz/blitz/tinyvec.cc,scipy/weave/blitz/blitz/tinyvec.h,scipy/weave/blitz/blitz/tinyvecio.cc,scipy/weave/blitz/blitz/tinyveciter.h,scipy/weave/blitz/blitz/traversal.cc,scipy/weave/blitz/blitz/traversal.h,scipy/weave/blitz/blitz/tuning.h,scipy/weave/blitz/blitz/tvcross.h,scipy/weave/blitz/blitz/tvecglobs.h,scipy/weave/blitz/blitz/update.h,scipy/weave/blitz/blitz/vecaccum.cc,scipy/weave/blitz/blitz/vecall.cc,scipy/weave/blitz/blitz/vecany.cc,scipy/weave/blitz/blitz/vecbfn.cc,scipy/weave/blitz/blitz/vecbops.cc,scipy/weave/blitz/blitz/veccount.cc,scipy/weave/blitz/blitz/vecdelta.cc,scipy/weave/blitz/blitz/vecdot.cc,scipy/weave/blitz/blitz/vecexpr.h,scipy/weave/blitz/blitz/vecexprwrap.h,scipy/weave/blitz/blitz/vecglobs.cc,scipy/weave/blitz/blitz/vecglobs.h,scipy/weave/blitz/blitz/vecio.cc,scipy/weave/blitz/blitz/veciter.h,scipy/weave/blitz/blitz/vecmax.cc,scipy/weave/blitz/blitz/vecmin.cc,scipy/weave/blitz/blitz/vecnorm.cc,scipy/weave/blitz/blitz/vecnorm1.cc,scipy/weave/blitz/blitz/vecpick.cc,scipy/weave/blitz/blitz/vecpick.h,scipy/weave/blitz/blitz/vecpickio.cc,scipy/weave/blitz/blitz/vecpickiter.h,scipy/weave/blitz/blitz/vecsum.cc,scipy/weave/blitz/blitz/vector-et.h,scipy/weave/blitz/blitz/vector.cc,scipy/weave/blitz/blitz/vector.h,scipy/weave/blitz/blitz/vecuops.cc,scipy/weave/blitz/blitz/vecwhere.cc,scipy/weave/blitz/blitz/vecwhere.h,scipy/weave/blitz/blitz/zero.cc,scipy/weave/blitz/blitz/zero.h
a98358411852a9e341fce6a830e095e67fa449af,"Update Blitz++ included with weave to 0.9 (which was released 2005-10-18).
Currently, this only has a configuration for GNU g++.
",scipy/weave/blitz/blitz/array/Makefile.am,scipy/weave/blitz/blitz/array/Makefile.in,scipy/weave/blitz/blitz/array/asexpr.h,scipy/weave/blitz/blitz/array/bops.cc,scipy/weave/blitz/blitz/array/cartesian.h,scipy/weave/blitz/blitz/array/cgsolve.h,scipy/weave/blitz/blitz/array/complex.cc,scipy/weave/blitz/blitz/array/convolve.cc,scipy/weave/blitz/blitz/array/convolve.h,scipy/weave/blitz/blitz/array/cycle.cc,scipy/weave/blitz/blitz/array/domain.h,scipy/weave/blitz/blitz/array/et.h,scipy/weave/blitz/blitz/array/eval.cc,scipy/weave/blitz/blitz/array/expr.h,scipy/weave/blitz/blitz/array/fastiter.h,scipy/weave/blitz/blitz/array/funcs.h,scipy/weave/blitz/blitz/array/functorExpr.h,scipy/weave/blitz/blitz/array/geometry.h,scipy/weave/blitz/blitz/array/indirect.h,scipy/weave/blitz/blitz/array/interlace.cc,scipy/weave/blitz/blitz/array/io.cc,scipy/weave/blitz/blitz/array/iter.h,scipy/weave/blitz/blitz/array/map.h,scipy/weave/blitz/blitz/array/methods.cc,scipy/weave/blitz/blitz/array/misc.cc,scipy/weave/blitz/blitz/array/multi.h,scipy/weave/blitz/blitz/array/newet-macros.h,scipy/weave/blitz/blitz/array/newet.h,scipy/weave/blitz/blitz/array/ops.cc,scipy/weave/blitz/blitz/array/ops.h,scipy/weave/blitz/blitz/array/reduce.cc,scipy/weave/blitz/blitz/array/reduce.h,scipy/weave/blitz/blitz/array/resize.cc,scipy/weave/blitz/blitz/array/shape.h,scipy/weave/blitz/blitz/array/slice.h,scipy/weave/blitz/blitz/array/slicing.cc,scipy/weave/blitz/blitz/array/stencil-et.h,scipy/weave/blitz/blitz/array/stencilops.h,scipy/weave/blitz/blitz/array/stencils.cc,scipy/weave/blitz/blitz/array/stencils.h,scipy/weave/blitz/blitz/array/storage.h,scipy/weave/blitz/blitz/array/uops.cc,scipy/weave/blitz/blitz/array/where.h,scipy/weave/blitz/blitz/array/zip.h,scipy/weave/blitz/blitz/generate/Makefile.am,scipy/weave/blitz/blitz/generate/Makefile.in,scipy/weave/blitz/blitz/generate/arroperands.h,scipy/weave/blitz/blitz/generate/arroptuple.h,scipy/weave/blitz/blitz/generate/bzfstream.h,scipy/weave/blitz/blitz/generate/genarrbops.cpp,scipy/weave/blitz/blitz/generate/genarruops.cpp,scipy/weave/blitz/blitz/generate/genmatbops.cpp,scipy/weave/blitz/blitz/generate/genmathfunc.cpp,scipy/weave/blitz/blitz/generate/genmatuops.cpp,scipy/weave/blitz/blitz/generate/genpromote.cpp,scipy/weave/blitz/blitz/generate/genvecbfn.cpp,scipy/weave/blitz/blitz/generate/genvecbops.cpp,scipy/weave/blitz/blitz/generate/genvecuops.cpp,scipy/weave/blitz/blitz/generate/genvecwhere.cpp,scipy/weave/blitz/blitz/generate/operands.h,scipy/weave/blitz/blitz/generate/operands2.h,scipy/weave/blitz/blitz/generate/optuple.h,scipy/weave/blitz/blitz/generate/optuple2.h,scipy/weave/blitz/blitz/meta/Makefile.am,scipy/weave/blitz/blitz/meta/Makefile.in,scipy/weave/blitz/blitz/meta/dot.h,scipy/weave/blitz/blitz/meta/matassign.h,scipy/weave/blitz/blitz/meta/matmat.h,scipy/weave/blitz/blitz/meta/matvec.h,scipy/weave/blitz/blitz/meta/metaprog.h,scipy/weave/blitz/blitz/meta/product.h,scipy/weave/blitz/blitz/meta/sum.h,scipy/weave/blitz/blitz/meta/vecassign.h
9a73f06e421cdb75530f850b8829a22f49ad0591,"Reapplied patch to interpret sequences more cautiously.
",scipy/base/src/arrayobject.c
9fe283d781dbe1078b5ae6614422fb622ab2bba0,"Reverted the PySequence_Check patch.  DOK matrices should be fixed instead.
",scipy/base/src/arrayobject.c
b8d2974d60136185e1403cb663ce1f0c152938c8,"Changed array_fromobject() to treat failure of the Array_FromSequence() call 
differently.  Now it clears the error flag and tries interpreting the object
as a scalar.  This allows more graceful error handling of badly behaved objects
like DOK matrices that pass PySequence_Check but can't be indexed like 
sequences.

Fixed small typos.

",scipy/base/src/arrayobject.c
6348f9339e41fb642ebc14c631eb203128cbc301," r723@Blasphemy:  kern | 2005-11-01 01:07:20 -0800
 scipy_distutils -> scipy.distutils
",scipy/weave/build_tools.py,scipy/weave/platform_info.py
d6fe75a5d73c027a31e2352caa063358b377eaf4,"Added ISALIGNED macro and documentation update.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
9b101c0439d0d8079bb042ba85de9b1f601e0d02,"Fixed to allow reflected operators instead of OBJECT addition.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
7cdbfb9a31f09f80db2d9071bd86f0fd7783a811," r707@803636f3:  kern | 2005-10-31 13:19:55 -0800
 Fix put() typo
",scipy/base/oldnumeric.py
056320414c02f1965e312bf433a58914f4b74b45,"Added more attribute access to flags object.
",scipy/base/_internal.py
519274aef2a0e779c58c0d6b6eef8d65317f913e,"Allow flags dictionary attribute access
",scipy/base/_internal.py
abfceef3e63678856c4ee12ad413f43d1cb453d2,"Added bool8 type.
",scipy/base/numerictypes.py
1e2e8ef521de9ab4cb3da8db75cb04f150a90816,"Fixed small typo

",scipy/base/code_generators/generate_umath.py
954c1d9339dbd366a2d5810c825c4784c85e0110,"Fixed incorrect usage of PyArray_CanCastSafely.
",scipy/f2py/src/fortranobject.c
9362a1d8d498985e41a35c089fc68cd280a0fde9,"Save and restore sys.displayhook around running tests, so that doctests can
run correctly under IPython
",scipy/test/testing.py
cf44e43dd744f2a55ed90b253747499fef141dbc,"Don't use deconvolve for polydiv, as that requires scipy.signal to be installed.
Do it using synthetic division. Could be more efficient.
",scipy/base/polynomial.py
d3cb15876dfa9c2ef98f7814b32135bcd5cfde78,"Don't try to handle ImportError in deconvolve when scipy.signal doesn't exist
",scipy/base/polynomial.py
e06ac3f080b08f57dea36c8aab67be673f295709,"Cosmetics with NO_SCIPY_IMPORT.
",scipy/distutils/system_info.py,scipy/f2py/setup.py
fdc4a8788490933412a7a7c00f6fb4c1fafe765d,"Fixed nx -> NX
",scipy/base/polynomial.py
e51a19a79e2835b89520a2854952aa75f8e56e1c,"Change to using PY_ARRAY_TYPES_PREFIX instead of PYARRAY_TYPES_PREFIX, to
agree with PY_ARRAY_UNIQUE_SYMBOL.
",scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h
de8fca50c9c49b00741115fe334f8b73369b2a9b,"Make it easier for extension writers. If PYARRAY_TYPES_PREFIX is defined
to some value before arrayobject.h or ufuncobject.h is included, that value
will be prefixed before types that typedef'd.
So, if PYARRAY_TYPES_PREFIX is defined to be PA_, then, for instance, Bool as
a type will not exist, but instead PA_Bool will have been defined.

There is no problem with name mismatches as typedefs are not used in linking.
",scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h
c4fae16d0bd5d6cdeea17eff491d1f2fd33bb8eb,"some clean up for scimath.py, use type objects instead of typechars
",scipy/base/scimath.py
e380b12e4779e4491619e8612a7e1b198ab03590,"small whitespace
",scipy/base/shape_base.py
5cf79ab742b2555bd0122b093edf71909250ffe3,"Convert polynomial to use type objects instead of old Numeric typechars
",scipy/base/polynomial.py
19ec5dad84e1b864c7748f17110cce633c56bd98,"TLC for polynomial.py: cleanup, poly1d class is now new-type, and unittests
The unit tests are doctests.
",scipy/base/polynomial.py,scipy/base/tests/test_polynomial.py
fb209515eba92549f7806ac6127c9eb5710bdd63,"Give ufunclike some TLC. Cleanup, add docstrings and unit tests.
The unit tests are as doctests, and currently use the deprecated test_suite
method of running.
",scipy/base/tests/test_ufunclike.py,scipy/base/ufunclike.py
8b7ccd9fe0f929ac08120fbae192819d96820acb,"Whitespace cleanup and make classes new-type
",scipy/base/function_base.py,scipy/base/getlimits.py,scipy/base/index_tricks.py,scipy/base/machar.py,scipy/base/matrix.py,scipy/base/scimath.py,scipy/base/shape_base.py,scipy/base/twodim_base.py,scipy/base/type_check.py
75f8d039ab7ce606fd524dc53d9503947917d92f,"Altered vectorize to allow default arguments in function.
",scipy/base/function_base.py
cb3a7e261a61e35438dc0c9cb720ab73b58d4344,"More cosmetic changes.
",THANKS.txt,scipy/base/include/scipy/arrayobject.h
b170dbb43ee5f24b4064aca19c569dde48d3da83,"Added PyUFunc_On_Om to UFunc C-API
",scipy/base/code_generators/generate_ufunc_api.py,scipy/base/include/scipy/ufuncobject.h,scipy/base/numeric.py,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
b5ea6c195a2f5415eb033f1f26c452afe47c029e,"Some refactoring
- poly1d is a new-style class now
- no import * now
- whitespace, prettying
",scipy/base/polynomial.py
44767ad7eaad4e571e97e1100b84c74aab9c19b1,"Replaced PyArray_FromDimsAndData with PyArray_SimpleNewFromData.
",scipy/f2py/cfuncs.py
d830c0cf769b1fc34e102e32e5614e9667987b0f,"Cosmetic changes mainly. Remove unused itemsize from scanfunc arguments.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
5dda00de77bbb5ec80deb350a95b5d7780c571b8,"Moved f2py2e to f2py.
",scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/{f2py2e,scipy/setup.py
b87a003a9205916b22abd5fa64580974a2df652a,"change PyArray_Scalar to take a void * instead of char *, and some whitespace cleanup
",scipy/base/code_generators/generate_array_api.py,scipy/base/code_generators/generate_ufunc_api.py,scipy/base/code_generators/generate_umath.py
59eccb07c99f93498cbf52637ed9ff6e93c6057a,"Change PyArray_Scalar to take a void * instead of char *
",scipy/base/src/arrayobject.c
5a3fa7b9345c213c7f922eaab81cbbe72d8792b2,"Whitespace cleanup
",scipy/base/src/umathmodule.c.src
13a3a3f9baade7d54876a433ded7303dc850e99a,"Add __all__ statements to base.{oldnumeric,numeric,numerictypes}
This should cut down the number of accidental imports
",scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/oldnumeric.py
784c41e05d4427e6e544a784d0611aeb758c8937,"Fixed SimpleNewFromData to use correct flags.
",scipy/base/include/scipy/arrayobject.h
ecd7362b666ebe3d4be716511ca34a7dde305559,"Fixed complex to bool issues.
",scipy/base/code_generators/generate_umath.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/umathmodule.c.src
c45d1156e5e088f3bdfb55c911eecbb8773d57c3,"Introduced PyArray_SimpleNewFromData as a replacement to PyArray_FromDimsAndData
",scipy/base/include/scipy/arrayobject.h,scipy/doc/CAPI.txt
08feb214892e389fd6246de8e10e702290b5c070,"Removed unused requirement that compare deal with misbehaved arrays.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraytypes.inc.src
a4e9f2087d715637378203e9359bfb9a63ec740a,"Small cleanups in arrayobject.h
",scipy/base/include/scipy/arrayobject.h
6002cddf6ef0e7f8d4532aa94a605c86fd11607c,"Altered default flags in PyArray_BufferConverter and fixed signbit and friends.
",scipy/base/src/multiarraymodule.c,scipy/base/src/umathmodule.c.src
a5fd5e5113be496adee5b49684f6740a895453cc,"Fixed problem with correlate.
",scipy/base/arrayprint.py,scipy/base/numeric.py,scipy/base/polynomial.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/corelib/blasdot/_dotblas.c
e62a504d3b6634d02ebee2d7a15c56cf92312a8f,"Fix 0-d array indexing.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
8fcb1062d57eebd4aa12bd00a323209fe5acd563,"Fix for rank-0 arrays.  Now a[0] = 1 throws an IndexError, just like
reading from a[0] does.

** Note: assigning a[-1] = 0 still segfaults! **

",scipy/base/src/arrayobject.c
4e736713fb9865aae3e889c48420ddaf1fe4fa69,"More docstring fixes for mean() and sum().

",scipy/base/function_base.py,scipy/base/src/arraymethods.c
fa94504b1eee72c89ebe4503969781ebf903c3b7,"Trivial changes to a.mean() docstring

",scipy/base/src/arraymethods.c
6d634976e0d55422ab4c2bdd771078050fe5744d,"Improved docstrings:
  * Fuller explanation of default casting behaviour of a.sum(), a.mean(),
    scipy.sum(), and scipy.average()
  * Changed some array variable names from 'x' to 'a' in function_base.py
    for consistency with docstrings in arraymethods.c
  * Other cosmetic fixes to docstrings and code formatting

",scipy/base/function_base.py,scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c
8386582770a3fc9f9b315fd54a5047228b736cb4,"Fixed get_lib_source_files bug.
",scipy/distutils/misc_util.py
a25e5da35747e2a4cacc326f2709b0fb278c1d29,"Made ScalarType tuple so that it could be 2nd argument to isinstance.
",scipy/base/numerictypes.py
80a598c2820e332e26f758206eaa71133b6b84c1,"Fixed assert_approx_equal(0,0) failure bug.
",scipy/test/testing.py
a74ef76e2f32e6de16fea37668daed0edb376fc6,"Fixed stepping issue for length-1 arrays.
",scipy/base/src/ufuncobject.c
64ee901f909f7fb5d8e572be318fd5ed5674fe30,"Fixed problem with temporary allocation in PyArray_Transpose.
",scipy/base/src/multiarraymodule.c
4fb4bd40b51e41aca4495a2c79dfad5b4cd9279f,"Bug fixes.
",scipy/base/scimath.py
4e917206d27330ce59e19098385477a285b85062,"Fixed tests on opteron
",scipy/f2py2e/tests/array_from_pyobj/tests/test_array_from_pyobj.py
4fd834508fd08514f9fd9b326b7363d96a480dd7,"Fixed intent(in,out) array shape when copy is made.
",scipy/f2py2e/src/fortranobject.c
7e2da241b304173af7f87fb6a2c709912730448d,"Setting __scipy_version__.
",scipy/__init__.py
1523841beea21af826131945038ea89e686815b9,"Finished impl. of new array_from_pyobj. Updates and clean up. Removed array_has_column_major_storage and transpose_strides functions from f2py extensions.
",scipy/f2py2e/rules.py,scipy/f2py2e/src/fortranobject.c,scipy/f2py2e/src/fortranobject.h,scipy/f2py2e/tests/array_from_pyobj/setup.py,scipy/f2py2e/tests/array_from_pyobj/tests/test_array_from_pyobj.py,scipy/f2py2e/tests/array_from_pyobj/wrapmodule.c
83643d12f617983314c277505802789d1542928d,"Fixes to array_ass_item and array_item so that other uses of these besides the sequence protocol work for 64-bit systems.
",scipy/base/src/arrayobject.c
c001bbef5637bdf8f625cf4ab5f32521aa7dac17,"Cosmetic fixes.
",scipy/base/src/arrayobject.c
60cfb6ab21b92c0d90b69750b279b5c2f3b68563,"More weave fixes.
",scipy/weave/c_spec.py
146140cce09b455477d56c06df22aafe647ae6c6,"Added more types to weave.
",scipy/base/code_generators/generate_array_api.py,scipy/base/src/multiarraymodule.c,scipy/weave/c_spec.py,scipy/weave/standard_array_spec.py
98830f76c36d104d8bd18d2c794500f51ba645b2,"Fixed string_from_pyobj to handle multi-length string conversion.
",scipy/f2py2e/cfuncs.py
9e2b9a429169902426dc07156f0414d2ec63a8c6,"Fix segfault with Character arrays.
",scipy/base/numeric.py,scipy/base/src/arrayobject.c
33616f8e0e2574ce73442bf257dba723f812b572,"Fix toscalar so it only works when a.size == 1
",scipy/base/src/arraymethods.c
878d5355b9e5ef92db78a51daff325f34d295690,"Reimplemented array_from_pyobj using scipy.base CAPI.
",scipy/f2py2e/src/fortranobject.c
72c2028abbdc2add6948a0551d4231852d7390b0,"Unittests for new array_from_pyobj in f2py.
",scipy/f2py2e/tests/array_from_pyobj/__init__.py,scipy/f2py2e/tests/array_from_pyobj/setup.py,scipy/f2py2e/tests/array_from_pyobj/tests/test_array_from_pyobj.py,scipy/f2py2e/tests/array_from_pyobj/wrapmodule.c
3696fd0515c0aa8a144a34e53748f4eee143f15c,"Fixed default typecode on copy.
",scipy/base/src/arrayobject.c
50878542380ce58b3cbdc52edac980eee5d885ce,"Fixed docstring (line-break problem)

",scipy/base/src/arrayobject.c
5defd06d9d40ea13fecadc9bbcd91cc1d7be6324,"Bug fix and new test cases for average()

",scipy/base/function_base.py,scipy/base/tests/test_function_base.py
a8e59ca2f3a626076a9c03e3d2ed259471424745,"Cleaned up exceptions:
 * improved consistency in exception strings; removed typos
 * changed some ValueError exceptions to TypeError

",scipy/base/src/_compiled_base.c,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
d1f5e8bd0462dad80a7fc7587c7f4346c0dfa2b4," r583@Blasphemy:  kern | 2005-10-23 17:04:42 -0700
 Try to mask key with 0xffffffffUL to restrict numbers to 32 bits.
",scipy/corelib/mtrand/randomkit.c
9b3a1667443a116934c4bed58f868d319ca29ba9,"More fixes to remove allowing numbers for types.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
9a3a3b837856b594577e7c099496c17bfbd730b6,"Removed allowing numbers for typecodes.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
8c50e9107fc297ed28afc6428e8a99a2c5f03e66,"EJS: disabled the stricter type checking on boolean values for now, until I've
tested this with the full scipy

",scipy/base/src/multiarraymodule.c
14bdbe98ab230e8252333a185aebc27b3024810d,"EJS: Patch to use proper True and False values rather than 1 and 0.  This allows stricter
type checking when we expect a boolean value to prevent the user shooting himself in
the foot.  Example:
    >>> a = zeros(1,2,3)
used to succeed, creating an array of shape (1,), dtype 2, and fortran=True,
which was probably not intended.  It now raises a TypeError.  [The user probably
wants something else, like zeros((1,2,3)).]

",scipy/base/function_base.py,scipy/base/index_tricks.py,scipy/base/ma.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/oldnumeric.py,scipy/base/records.py,scipy/base/src/multiarraymodule.c
584a026383ebc2422e787de8bd97d223b4d341bd,"Fixed bug in CDOUBLE_setitem
",scipy/base/src/arraytypes.inc.src
ec78fa3f6a432ad78ab779ecc72ea08cafa5d1c3,"added common_type
",scipy/base/convertcode.py,scipy/base/type_check.py
153b32aae641b36aeba664cc009d0080fbe145d9,"Remove useless size change.
",scipy/base/src/arrayobject.c
a308a42262c5c5232ab5418b24cbd57077f1e821,"Fixed memory alignment issue in frompyfunc
",scipy/base/src/ufuncobject.c
24a86c0838665bf393ff292e4a85d6b74c177206,"Added a new test for isinf.
",scipy/base/setup.py,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
7a1f86cfd14a651bb4f6ac606c236cdcff32a8c0,"Fixed up array interface
",scipy/base/src/arrayobject.c,scipy/base/src/umathmodule.c.src
ec5458c5d3ddbca98baec2187f92cb9cc295576d,"Make sure errorobj is NULL.
",scipy/base/src/ufuncobject.c
b0d2f1a78dab12bd7df6ff578d50988023ce2b00,"Applied Ted Horst's patches.
",scipy/base/src/arraytypes.inc.src,scipy/base/src/umathmodule.c.src
83d207539b88d1a45e2ca34b2934781f80117071,"Tried different ones algorithm.  Wasn't faster.
",scipy/base/numeric.py
8bc53bd09afa8be668fcd50f67542f2e21ce2d65,"Added .fill method.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/numeric.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/doc/CAPI.txt
143fa8c512e15c72c12301c05f263cb2e08b61b9,"Set memory to zero when using SimpleNew
",scipy/f2py2e/src/fortranobject.c
0c9bbdeb1f5bde55d1070f1a83844b85f1a0c603,"Changed lookup to a single list.
",scipy/base/include/scipy/ufuncobject.h,scipy/base/numeric.py,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
13ae0116fad972cb96abf0289374827ba11b6d8d,"Silly error in _ScalarAsCtype.
",scipy/base/src/scalartypes.inc.src
f42cec1a298dc8c97faa6bf4ceeaf8e90bf381e8,"Transpose fixes --- flags needed fixing before calling copy_ND_array.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c,scipy/f2py2e/src/fortranobject.c
725916514e034832db296202bd150895da109266,"Changed default rtype for Bool and low-bit integers
",scipy/base/src/ufuncobject.c
63500f096ded89195d7505dd1f1e2cb7e1b0949f,"Replaced PyArray_FromDimsAndData with PyArray_New. 2nd try.
",scipy/f2py2e/cb_rules.py
fb807e675c1f225c4511297ce569317c242f74f2,"Replaced PyArray_FromDimsAndData with PyArray_New.
",scipy/f2py2e/cb_rules.py
ad8c6aea2aad8993896c8a455596437c17374a59,"Fix flags and don't set mem to 0 in FromDimsAndData
",scipy/base/src/arrayobject.c
cd201fd9b86b6f070e19e2d9cd873abaf862451c,"Changed default on matrix to copy=1
",scipy/base/matrix.py
19cba66a6dce0b657c1ee7c36734c7e578e17036,"Allow array scalars in f2py conversions.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/oldnumeric.py,scipy/base/src/scalartypes.inc.src,scipy/base/ufunclike.py,scipy/f2py2e/cfuncs.py
4ecebd345c59fccc0778231ea1f87577eeb437c4,"Clean up, updated initforcomb for 64 bit platform.
",scipy/f2py2e/cfuncs.py
e421eb9e41bde5579e097cd7b7ec1b6f1a6b10bb,"Impl. finfo as a new-style singleton class. Added singleton tests.
",scipy/base/getlimits.py,scipy/base/machar.py,scipy/base/tests/test_getlimits.py
f4f9be767a9eb4ef90d6f1920e391593eaaa3a0c,"Dont define ushort,uint ulong when _BSD_SOURCE.
",scipy/base/include/scipy/arrayobject.h
67ba8982d96a6de1db94ed9e157abc93b9258fbd,"Fixed intp formats.
",scipy/f2py2e/src/fortranobject.c
e261a0a0728abb1431c219686e77ba992cf6b10d,"Fixed INTP_FMT when SIZEOF_PY_INTPTR_T == SIZEOF_LONG.
",scipy/base/include/scipy/arrayobject.h
d4d629843a9bf6618fd83f487e4bb383fea7f507,"Fixed intp formats.
",scipy/f2py2e/src/fortranobject.c
69f77f1016901d936a6fce678f08853885487c5b,"Fixed typedef, part of int->intp changes.
",scipy/f2py2e/src/fortranobject.h
3563f267ba1892828d3da0d06b47c5f4e0468dcd,"Fixed missing type.
",scipy/f2py2e/src/fortranobject.c
af3d2e4e3d83930aaf6c74891b4a9b0cf43226d8,"Using PyArray_ITEMSIZE instead of ->descr->elsize
",scipy/f2py2e/src/fortranobject.c
9c741291a8f42b176e09e4818cb7c0e6e299f255,"Changed int to intp for array dimensions and strides.
",scipy/f2py2e/cb_rules.py,scipy/f2py2e/rules.py
738c01f10da5ce35aa26d174f23982f3272f7c85,"Changes to fix int -> intp
",scipy/corelib/blasdot/_dotblas.c,scipy/f2py2e/src/fortranobject.c,scipy/f2py2e/src/fortranobject.h
69e5f33a04177fe0c7f254ee2d11c123bbf0c3a0,"Removed character conversion from convertcode.
",scipy/base/convertcode.py
760b848403bdd5c058745b3d744d8e17e52170a3,"Added NO_IMPORT to list of workable defines.
",scipy/base/code_generators/generate_array_api.py
eadb97736f359c1458e2aab3c12a0714f3acdf52,"Clean up -- removed Numeric and numarray specific code.
",scipy/f2py2e/rules.py,scipy/f2py2e/src/fortranobject.c,scipy/f2py2e/src/fortranobject.h
d24887f39eaf5ef572a59071f6fb2c58dcef0c57,"If env.variable NO_SCIPY_IMPORT is defined then importing scipy packages will be skipped -- used for building newscipy or when one only needs scipy.base.
",scipy/__init__.py
f66e57a832a561eb8795c9329065377d4e442d94,"PyArray_API management copied from Numeric.
",scipy/base/code_generators/generate_array_api.py
6d23f808aceeca2a222b66afa82a53517af16055,"scipy include_dirs are set by scipy.distutils, no need to do that in f2py.
",scipy/f2py2e/f2py2e.py
20a5d16975cb27bf2b18806eeb2855b8da072fd0,"Fixed segfaults from f2py generated modules: fortranobject needed import_array.
",scipy/__init__.py,scipy/f2py2e/capi_maps.py,scipy/f2py2e/rules.py,scipy/f2py2e/src/fortranobject.c,scipy/f2py2e/src/fortranobject.h
98bb7e4bceafa05ad90d4d8bda58eef4c3f184c3,"Fixed bug: items in data statement may be separated by commas.
",scipy/f2py2e/crackfortran.py,scipy/f2py2e/tests/f77/return_real.py
3f88695d596dd2fb3ae159efb79632408a077300,"Generalized newshape for adding and removing ones.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
41053b0205032298cefa11922fe875c35ad320b1,"Fixed so that setting shape works even for discontiguous arrays as long as only inserting or deleting unit length dimensions is involved.  This fixes problem with selecting from matrix.
",scipy/base/matrix.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
52dd9bb847c2442751852fa26911b39391487824,"Additional support for gnu compiler on 64-bit platform.
",scipy/distutils/cpuinfo.py,scipy/distutils/fcompiler/gnu.py
7ab34e16541c5688e073ab9131106983c2f3d822,"Fixed return_integer tests.
",scipy/f2py2e/__init__.py,scipy/f2py2e/f2py2e.py,scipy/f2py2e/tests/f77/return_integer.py
299720f0b383d90fbf38a18cee1864d0090515bf," r409@Blasphemy:  kern | 2005-10-14 20:26:04 -0700
 Comment out unused RCS crud
",scipy/corelib/mtrand/randomkit.c
6e62330243f7e5a1e6b21b144a11903b0bd7d79a," r391@Blasphemy:  kern | 2005-10-14 19:54:35 -0700
 Fix RandomState.random_integers()
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx
9ef026af05ce30c7329a021bc56a81af228588ff,"removed % from FMT string
",scipy/base/include/scipy/arrayobject.h,scipy/base/records.py,scipy/base/src/arraytypes.inc.src,scipy/doc/CAPI.txt
3fd7ab7b3b7943ba7d31272a4da98bbcc4f1f588,"Impl. hooks to import scipy packages with info.py files.
",scipy/__init__.py,scipy/_import_tools.py
d40a2d4027adf88600ae208cddc17d45efb939fa,"Fix remaining compile warnings (except for one) in mtrand by using a postprocessor.
ArrayType variables are declared in the .pyx file with a C name of
arrayObject<something>, and the postprocessor checks that they're cast right.
Also, remove declarations for unused and undefined internal functions.
",scipy/corelib/mtrand/generate_mtrand_c.py,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx
0fef6d3790c971fde618d9e9323027b962b6f763,"Support for setuptools, if found. You can use python setup.py bdist_egg to
make a Python egg now. This seems to work for scipy_core, but I've had some
trouble with scipy proper so far.
",scipy/distutils/core.py
7fb247958ddbfec142d086302c7e1b969a481934,"Few more fixes for compiler warnings for mtrand.
I'm still getting 'warning: assignment from incompatible pointer type' due to
Pyrex not applying the <ArrayType> cast. This looks like it's going to be a
bit of trouble to track it down in Pyrex.
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/scipy.pxi
fb62ac9712cec1b8ca9cf5e9326efa94c3918286,"Cleaned up a few things in arrayobject.h
",scipy/base/include/scipy/arrayobject.h
f56b5b052b4d7f2ea72699dcd0ee558d3cc9bbd4,"Initial hooks for package imports.
",scipy/__init__.py,scipy/_import_tools.py
58dbd7af7f7643edeecb474cdaed6eb07b3d7847,"Doc updates and initial hooks for scipy imports.
",scipy/__init__.py
464b5d560efb3ef231605b7da7b9e9d133a1565d,"Fixed the installation path for __svn_version__.py.
",scipy/distutils/misc_util.py
92b786fcdeae8556e4ad4eb924897cfffe4511a1,"Updated f2py/weave setup.py files.
",scipy/f2py2e/setup.py,scipy/weave/setup.py
1993327e32eaa577a4f2da142c2580af44013433,"Clean up.
",scipy/distutils/misc_util.py
ad2119d043f4d730536f0ccc49c687d1b8654b5e,"Fixed more add_data_dir/add_data_files bugs.
",scipy/distutils/misc_util.py
b28109b23d395d89f90c0ef248501368c801f539,"Fixed __array_data__ interface.
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src
0282cf783893d0bf8908120a1995af51eabb361b,"Removed mapiter from Python exposure.
",scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
366fab195fb063e243b54994df6bb4b30b707f8c,"Fixes made necessary by change to asarray.
",scipy/base/code_generators/generate_array_api.py,scipy/base/numeric.py,scipy/base/src/_compiled_base.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/basic/basic_lite.py,scipy/doc/CAPI.txt
9f1286587474fb3fcbdf2020b1fe47400ca20b68,"Fixed subclass PyArray_New error segfault.  Updated f2py for newscipy (a little)
",scipy/__init__.py,scipy/base/index_tricks.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/f2py2e/capi_maps.py,scipy/f2py2e/f2py2e.py
2cfd18d956739dbb13bd312ec6b60b087f21ad53,"Fixed can cast safely.
",scipy/base/src/arrayobject.c
2c6e233984b6af96d3bf3a38b4932aa5f4c433ad,"Fixed so that array always returns an array object.
",scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/umathmodule.c.src
4d9e46d48de3ce4039ce5ebe5433eab339067b98,"Fixed typo.
",scipy/distutils/tests/test_misc_util.py
08e7fa838c50279e797c3fbefb893f45e12cbc00,"Regenerated mtrand.c with a version of Pyrex which emits code that compiles with fewer warnings.
",scipy/corelib/mtrand/mtrand.c
c02b094be1621c9d5fb469e715c1f13ded6e3c6a,"Fixed typo.
",scipy/distutils/tests/test_misc_util.py
d6e2f6776d29f386c8c17adc88fa1920c31ee227,"Enabled scipy.distutils tests.
",scipy/distutils/__init__.py,scipy/distutils/setup.py,scipy/distutils/tests/{test_build_src.py
826a06e9e36b29b43df25760ab9c0a9ccefc7056,"Dropped install_init_py file and generating __core_config__.py in order to detect whether we are in source or installatio directory.
",scipy/install__init__py
8d0801d77e7c168756bb1068a8f680a420f9b75f,"Dropped install_init_py file and generating __core_config__.py in order to detect whether we are in source or installatio directory.
",scipy/__init__.py,scipy/distutils/misc_util.py,scipy/setup.py
682a8759094a1c347366eb682605ee4460d3842a,"Made svn version available to main setup.py script.
",setup.py
1bb2bc4125a803bbce59b3f0485af9f9b92858ed,"Added initial scipy.basic.tests site.
",scipy/basic/__init__.py,scipy/basic/setup.py,scipy/basic/tests/test_helper.py
a0cf73d306900fead84790658cb94fbb11792f16,"Renamed test_limits to test_getlimits.
",scipy/base/tests/{test_limits.py
704e5a103b9fb5944f41b81bd8e7217e1157b033,"Renamed test_basic to test_umath.
",scipy/base/tests/{test_basic.py
7768c2e4e25134c29bc145ca06f42fdbddead216,"Shut up scipy.test(..) on missing tests. Use scipy.test(verbosity=2) to get old behaviour.
",scipy/test/testing.py
d47b79d847d963251bcaf8612a9f1f1438632104,"Fixed getting base svn version number - avoiding importing base while in source directory. 2nd try.
",scipy/core_version.py
b04bd56a7a87b55c89ed7fa4470a78adb87603c3,"Fixed getting base svn version number - avoiding importing base while in source directory.
",scipy/core_version.py,scipy/setup.py
956dd2252fd0dec5150be8a0a12f8b253754a4dc,"Moved importing scipy modules from __init__.py to install__init__py.
",scipy/__init__.py,scipy/install__init__py,scipy/setup.py
d54cc39dd564001f3b63aacd428fde90f271f2a1,"Updated thank yous..
",THANKS.txt
e5515fd930cce0d8c995211859f4f3c655ca5d37,"Added more doc-strings.
",scipy/base/src/arraymethods.c
f3e745b362b58c764bdc8de635d76acd3b5f09c8,"change floor precision of small-bit integers
",scipy/base/src/umathmodule.c.src
0048ff0be5ab79784e703361c39c3697e1b244aa,"Added mingw32ccompiler and lib2def to support building with Python 2.3 under Windows (msys/mingw32).
",scipy/distutils/ccompiler.py,scipy/distutils/lib2def.py,scipy/distutils/mingw32ccompiler.py
33e2d21b6e75d11572dbadb7a8a0038cd02206eb,"Fixed remainder to behaved like Python.
",scipy/base/_internal.py,scipy/base/code_generators/generate_umath.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/umathmodule.c.src,scipy/base/ufunclike.py
e3ba6c65315e036990a8c28fd8dd5a072c7dc635,"Fix buglet in set_numeric_ops
",scipy/base/src/arrayobject.c,scipy/core_version.py
594ec3777ef54b23c89cc0b3d9c7563fbf88be62,"Added tuple argument support to add_data_dir.
",scipy/distutils/misc_util.py,scipy/doc/DISTUTILS.txt,scipy/test/testing.py
82fb451cf43785e6b7313a140e2cc3997eeb5ff2,"Moved back to 0.4.2
",scipy/base/setup.py,scipy/base/src/umathmodule.c.src,scipy/core_version.py
dce41a2a15d9be0cd2cd592ed209b7f30ce166ee,"Moved doc to subdir of scipy
",{doc,{doc,{doc,scipy/setup.py
8c1d5fa4cff205667a48ffbb8936bac5e7e59beb,"Updated version after beta tag
",scipy/core_version.py
1f5d8aeef7d9bb8cd33ace3b0cd99d7be5d2431a,"Fixed memset to 0 in dotblas.
",scipy/corelib/blasdot/_dotblas.c
b94cc89ffccc068f8f0d92a7ab56b7ff9523eb2c,"Fixed memset to 0 in dotblas.
",scipy/corelib/blasdot/_dotblas.c
3d0634c3381ecdf2717b574ffd0e3dbb872a4e5e," r328@Blasphemy:  kern | 2005-10-11 19:50:41 -0700
 matrix.py fixes and tests.
",scipy/base/matrix.py,scipy/base/tests/test_matrix.py
c9833ef726fd000fa0634f8a5850c75413aa6471," r327@Blasphemy:  kern | 2005-10-11 19:49:52 -0700
 Missing self.
",scipy/distutils/command/build_src.py
e8e5a126e12edccbc3e3fa8e614e4c0d2711606b,"Fixed getting things from scipy.linalg
",scipy/base/matrix.py,scipy/base/polynomial.py,scipy/corelib/blasdot/_dotblas.c
e5d34e23002117c36d4a0e7d3d0da34c22911860,"cookedm doing test commit
",TEST_COMMIT
c4bd04df6dbe6dd5fb1ae81b836fe1ce8bec72ff,"Added new user.
",TEST_COMMIT
c18832ad479d878c947aadc553ef1401a9845c3a,"Fixed flags problem on array_interface conversion.
",scipy/base/src/arrayobject.c
3fc25bb8bef7f3ca0ab39a4ec5fe27b039bc75f9,"Removed comments.  Fixed can_cast so that 64-bit integer can be cast safely to a double precision.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
9edde60bf0a4b6a20e1133afe239dea080c0184b,"Fixed long double unary func problem.
",scipy/base/src/ufuncobject.c
7f1961c287824296ef383e324993e9ea1400be60,"10/11/05 -- CJH -- Commented out diagnostic print statement.
",scipy/base/src/ufuncobject.c
47d169b1c339c6096cbb2c1a64a88818dff63eeb,"Added ndenumerate.  Some print statements for debugging on 64-bit
",scipy/base/index_tricks.py,scipy/base/src/ufuncobject.c
652a657a1faebe63035da6c65b88170a929a8877,"test commit
",TEST_COMMIT
3febd7becf4b0f1f85d3212fbe3a360be0114901,"test change
",scipy/base/records.py
1f624ba2b89d5896212550880deba7b4c620def7,"Fixed typo
",scipy/base/src/umathmodule.c.src
57971b8645a3a22872b791c491de2f313ca64f9e,"Print statements for 64-bit debug.
",doc/CAPI.txt,scipy/base/src/ufuncobject.c
e8fc406e186112d6713102f2226e7be0e7ac1fbe,"Fixed scalar stuff again.
",scipy/base/src/scalartypes.inc.src
9eda64cb9e3ca4114d716ba9c33f47a79185fe2f,"Infinite recursion for long doubles.
",scipy/base/src/arraytypes.inc.src,scipy/base/src/scalartypes.inc.src
150f901dceea1f613553d9be6fb475a2c35b4119,"Removed deleted mtrand routines from scipy/corelib/setup.py and fixed 
rand() docstring in mtrand.pyx.
",scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/setup.py
6f214954028cf5fd3f8ab37ef5060c694898e932," r300@Blasphemy:  kern | 2005-10-09 09:54:11 -0700
 Remove dependency on Cephes stuff
",scipy/corelib/mtrand/const.c,scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/gamma.c,scipy/corelib/mtrand/isnan.c,scipy/corelib/mtrand/mconf.h,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/polevl.c,scipy/corelib/mtrand/protos.h
9792b8b31062b92df1d20e6fa32864d5b5af3a94,"More fixes for 64-bit systems.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
4a11f5530e5dfb8c8be9a0a41d0fe74ecd5af6b6,"Fixed loop->bufcnt for 64-bit fixes.
",doc/CAPI.txt,scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h,scipy/base/src/_compiled_base.c,scipy/base/src/ufuncobject.c,scipy/corelib/fftpack_lite/fftpack_litemodule.c,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/scipy.pxi
6f56244252f151aa2bd5ff1c6e3b7fd2051e5bdf,"Fixed off-by-one at end problem with fromfile text files.
",scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
1bfa259c20ad8678363e935b6dd9a15f0812da26,"Added comments
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
47c9ceb8aebf22500169bf208e5a1b7c4e27a6cc,"Fixed backwards compatibility with Numeric on 64-bit machines.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/multiarraymodule.c
b81e0a0eef0a0e872ff583597453ae4507acb9d9,"Fixes to get core version working.
",scipy/core_version.py
747d81f9f90d8fd1b98afa7173d243ef78881ae7,"Fixed typo and moved __svn_version__ for core
",scipy/__init__.py,scipy/base/setup.py,scipy/base/src/arrayobject.c,scipy/core_version.py,scipy/setup.py
92af93ffa41e2007cc9919d165bad0b652b2bdcf,"More information on flags...
",doc/CAPI.txt
016786aa670f771af891f24cd6408f6cad239718,"Added a blank README file for rpm
",README.txt
8f185e4bafb9b239ed90ccb3f8f9ae09e1376bb5,"Improve the array docstring a bit.
",scipy/base/src/arrayobject.c
8b0a6e822eee83d39206ff3067d718cdf6958ba6,"Fix use of PyArray_New in PyArray_FromDims
",scipy/base/src/arrayobject.c
943e3817e6ac2e53bfbd1cb0c1724339044a479a,"Some printing fixes.
",scipy/base/src/arrayobject.c
fdfefd74949d72956c21c10ae4f1ef1469ffb5ab,"More 64 bit fixes.
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx
21d16bd6429b919f33056ce88d05aa2404f1a65e,"Fixed some typecode initilization warnings.  Made core libraries accessible directly under scipy name space.
",scipy/__init__.py,scipy/base/matrix.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/tests/test_index_tricks.py
bb644a0eb115f75efe4f3960d3e8e386fcefb70e,"Minor changes
",doc/CAPI.txt
1effbf88f59949aa8e1fe857c9f74c83236557ea,"Moving DISTUTILS.txt to newcore/doc.
",doc/DISTUTILS.txt
52c686c981609fdb2e0e45aba16626a7e14cc3d4,"Moved extra modules to basic
",scipy/__init__.py,scipy/base/convertcode.py,scipy/base/matrix.py,scipy/basic/__init__.py,scipy/{linalg,scipy/{fftpack/__init__.py,scipy/{fftpack,scipy/{fftpack,scipy/{linalg/__init__.py,scipy/{,scipy/core_version.py,scipy/setup.py
4d0a78f748058792ab4b2d9cb394589372d0e740,"Minor formatting changes.
",THANKS.txt
ab3e2b4f7a684c55b5ae9eecf6caabbcde6ec398,"Fixed formatting.
",doc/CAPI.txt
c5e4fbaf18c01b35faa523005d68e4b10319e77a,"Fixed up one change in PyArray_New
",scipy/base/src/ufuncobject.c
3f0cd73d77fafad5a41748b288863ab0b37628d8,"Added some simple CAPI documentation.
",COMPATIBILITY,doc/CAPI.txt,doc/README.txt,scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
dfdb8689aaaed931bc8d9d42deec96d0c43a6a79,"Fixed more intp issues.
",scipy/base/src/arrayobject.c
8af0fea248072118dcd7047ebec2219183fe7718," r206@Blasphemy:  kern | 2005-10-07 03:12:29 -0700
 Okay, for real this time. scipy.random will be a module, and developers will actually communicate with each other in the future.
",scipy/random.py
7239af6dd544c2ecc625a0e7324d69839277ee41,"Finished delting random.
",scipy/setup.py
9caec19092f4bcd91bb0bb4292aaf7184d69d3ee,"Deleted random package.
",scipy/random/__init__.py
f47d2fd8877f916427af60c1ae2726e8d07c14bd," r201@Blasphemy:  kern | 2005-10-07 02:46:04 -0700
 Don't need this anymore
",scipy/random.py
c060ceef8967821801034b649958ec21d55b38d8,"More 64-bit fixes.
",scipy/base/numeric.py
1f5d0b48db1e7c5ac9b06e9b122c134897edeba2,"More checks for SIZEOF_LONGLONG==SIZEOF_LONG
",scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
d2b5deb37fbb1aa3619837c96b3865a5d79a7be0," r188@Blasphemy:  kern | 2005-10-07 02:37:24 -0700
 Move scipy.stats to scipy.random. Add logarithmic-series distribution.
",scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/random.py
06e8eab1b5e379bbaf8b5a6e6c1513053edb3343,"Fixed import problem.
",scipy/fftpack/helper.py
54a193f1a0cdd6ccf40e36d09daa9fb0dd658456,"Added Inf to base
",scipy/base/numeric.py,scipy/base/type_check.py
e67afea77cf3b076c4d56a9c902e68d31bf80e6d,"Some more fixes
",scipy/base/src/ufuncobject.c
911cb6b831c7842f9fe3720f67d0f4eff7b24b9e,"Fixed missing intp's
",scipy/base/src/ufuncobject.c
de02f8159ac4ef845dae9fb78c938ab85570d3e2,"Get rid of rfftfreq and add random.
",scipy/fftpack/helper.py,scipy/setup.py
1348aa1cabad5bbf8574c0cf89100b1be6d8172c,"Trial run of random...
",scipy/__init__.py,scipy/base/convertcode.py,scipy/{stats
a3a464bb8e7235d1afade5c9c3d5332144265ddc,"Some f2py fixes
",scipy/base/include/scipy/ufuncobject.h,scipy/f2py2e/cfuncs.py
061e5e4477a21844b84321776938e002dfbe8748,"Fixed up add_library for a bit.
",scipy/distutils/misc_util.py
2b5ac629732cf3438cd4f538d550b7bd059dc0db,"Fixed up fftpack a bit.  Don't want to conflict with scipy's use of rfft.
",scipy/base/shape_base.py,scipy/fftpack/__init__.py
df3bc1b9d5c55964edfebe61452ca61124fad287,"Added helper.py from scipy.
",scipy/fftpack/__init__.py,scipy/fftpack/helper.py
04a98ff28bceccd16622a99f2b7780cd86376470," r165@Blasphemy:  kern | 2005-10-06 22:02:09 -0700
 More distributions!
",scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/stats/__init__.py
1c8e6d935cf0053dee0bbcf006f3646cd00b482b," r164@Blasphemy:  kern | 2005-10-06 22:01:39 -0700
 Typo
",scipy/base/function_base.py
0a8d3a1020037f58846aa3851cad8097a9af1a09,"Fixed vectorize segfault...
",scipy/base/src/ufuncobject.c
d52d900dc6551e59cd679365723ff8e1dd7dfd9e,"Fixed issues with threading...
",scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
c2871a8b8b80fc3505195b179baa1472d46e063f,"Added optimization for array_subscript and eleminated threaded support for a while.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
6de1ded3b69fc30f2588ba18daeeaccb8f399c5f,"Added more COMPATIBILITY info.
",COMPATIBILITY
bce31b09bd8a73d11734b7185d79309d59cbaa92,"Added compatibility information
",COMPATIBILITY,scipy/base/include/scipy/arrayobject.h
3dc10e072d3073655e78e6217b789a323da70a84,"Fixed tests.
",scipy/base/tests/test_type_check.py
3d544ba367f3eaf8804c00374f502f33469559e6,"Fixed some BOOL-related bugs.  BOOLs are now cast to their correct type.
",scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/scalartypes.inc.src,scipy/base/src/umathmodule.c.src
9ce3555349dac29e1ff450d978bf3c0973ebeb45,"Fixed remaining problems with casting buffer sizes..
",scipy/base/_internal.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
2444393193efdfce40ce944ace154eb6c9083da0," r107@Blasphemy:  kern | 2005-10-05 04:21:41 -0700
 Activate apply_along_axis test
",scipy/base/tests/test_shape_base.py
e35b804e62090078176b50514a04a31fa0e74f0d," r104@Blasphemy:  kern | 2005-10-05 04:20:16 -0700
 Fix apply_along_axis
",scipy/base/shape_base.py
b3b692136487acd9f39e33b8d8f584a2c5383d02," r88@Blasphemy:  kern | 2005-10-04 07:03:42 -0700
 Some fixes to code and tests
",scipy/base/tests/test_shape_base.py,scipy/base/tests/test_type_check.py,scipy/base/type_check.py,scipy/base/ufunclike.py
e3a57787b921f94f1303dae82405aec54d5ef41f,"Added feature that output arrays less than bufsize make temporaries...
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
c3a9fe713e0009461e85a4dc989f7f86e14178fe,"Fixed some more bugs
",scipy/base/src/arraytypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/tests/test_twodim_base.py
2d40d9e98c57824edd7f9130d9036fb9115bc70d,"Moved inclusion of files from MANIFEST.in to proper setup.py files.
",MANIFEST.in,scipy/base/setup.py,scipy/corelib/setup.py,scipy/distutils/misc_util.py
77ec6f047995d7a473523feb4fc2a93b537d51c3,"Fixed object put bug..
",MANIFEST.in,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
b4a71a6b8025fd4822a49166e051fc16563fc54d," r85@Blasphemy:  kern | 2005-10-04 03:56:27 -0700
 Ahem
",scipy/base/shape_base.py
ea0617129070f31f1d7e4eabb428a03f1cdb20cf," r84@Blasphemy:  kern | 2005-10-04 03:55:47 -0700
 methodize take() and shape() calls
",scipy/base/shape_base.py
4219df8d953ab55793f7a70aa8a93cc721fbd958," r82@Blasphemy:  kern | 2005-10-04 03:25:34 -0700
 defined(darwin) -> defined(__APPLE__); a similar change should happen in numarray, too
",scipy/base/include/scipy/ufuncobject.h
d32f2d2362144efb664ee557637b466c8d950546,"Added extra_info kw to add_extension method. Cleaned corelib setup.py.
",scipy/corelib/setup.py,scipy/distutils/misc_util.py
50967f090faed8e5864b5d736918ada737fb7a2e,"Added cblas.h.
",scipy/corelib/blasdot/_dotblas.c,scipy/corelib/blasdot/cblas.h
d92e5504f1d6f6aee6615c674a93d6547f2927b3,"Improved logic so sequence can act like tuple for advanced indexing as well.
",scipy/base/src/arrayobject.c
3dfcce10e11af18c659812a4b93130b004f1535d,"Made sure that arbitrary sequences (smaller than MAX_DIMS) with slice objects in them use standard indexing.
",scipy/base/src/arrayobject.c
118022b553e5c0e878b09916af5cb7a1a950a19f,"Fixed Broadcasting problem introduced by previous fixes...
",scipy/base/src/ufuncobject.c
fd10c4389d6e5bba194f6d8fda8ae500183360c8,"Fixed segfaults in buffered casting when castsize was different than buffersize.  Also fixed so copies are made whenever the array is less than the buffersize
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/ufuncobject.c
68a551cd82261a8f0dcc180122f15b6150026866,"Several fixes.
",scipy/base/_internal.py,scipy/base/function_base.py,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/oldnumeric.py,scipy/base/records.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/ufunclike.py,scipy/linalg/basic_lite.py
c04829a2d3e4dcd75fc8409fc27f7493fe845262,"Fix problem with uninitialized memory in _dotblas.  Changed old C-API to set the memory to 0 as before.
",scipy/__init__.py,scipy/base/src/arrayobject.c,scipy/corelib/blasdot/_dotblas.c,scipy/linalg/basic_lite.py
e00e0b30ac0319a2eb69e71e113c259302db3a0d,"Fixed bug in umath absolute.
",scipy/base/code_generators/generate_umath.py,scipy/linalg/basic_lite.py
7bada31773353df212b4bcfddeade00b10f2a635,"Fixing some linalg bugs...
",scipy/__init__.py,scipy/base/twodim_base.py,scipy/linalg/basic_lite.py
fa3237c9a3468552c9993459dd4ec69a68e0ca96,"Improved logic.
",scipy/corelib/setup.py
e901c38202898f1ca2daea42e88d0474df950d76,"One minor change to sdist.
",scipy/distutils/command/sdist.py
079a8b7cdee02c3e90418aefd2da25ed50fb39b0,"Fixed setup.py to add extensions when sdist is run
",scipy/corelib/setup.py,scipy/distutils/command/sdist.py
fb0ceff29f606d51c396521f8bee36d414e1cca4,"Fixes by Eric Firing..
",THANKS.txt,scipy/base/function_base.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c
0e1c0c01b93cfd521dbce975b1cd28517d2f151f,"
",TEST_COMMIT
7124b14d4868dd50fa9e04aa7f7f10297dd006e3,"Matrix indexing weirdness
",scipy/base/matrix.py
3778b72342ba0264b20309364285e5ce54687b4a,"Simpler names in fftpack
",scipy/fftpack/__init__.py,scipy/fftpack/fft_lite.py,scipy/linalg/__init__.py,scipy/stats/__init__.py
e8d9c37f41929ef75bd876a5b0ea249942ffdf11,"Removed sign and round as methods -- more like ufuncs
",scipy/base/__init__.py,scipy/base/arrayprint.py,scipy/base/code_generators/generate_array_api.py,scipy/base/function_base.py,scipy/base/oldnumeric.py,scipy/base/src/arraymethods.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/type_check.py,scipy/base/ufunclike.py
17bf4ce8201362db0fa17b604f6e0c08330e5f43,"Add error checking for object ufuncs.
",scipy/base/include/scipy/ufuncobject.h,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
c2fcb2a160a46ab1b8ce4af99c684147bdde4081,"Improve overflow detection.
",scipy/base/src/umathmodule.c.src
5dca9eb5681fae311f08c4e4d25ec2fec51ac7fb,"Altered error detection to use raiseexcept when appropriate.  Also, clear fperrors at start of ufunc computation.
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
a75de920c205eee7c3850247c55741410adbd1db,"Fixed some casting rule issues.
",scipy/base/oldnumeric.py,scipy/base/src/arrayobject.c,scipy/base/src/umathmodule.c.src
fe01351b12c5156a4f36fd20a7798545a33633cd,"Impl. atanhf and using it for detecting HAVE_INVERSE_HYPERBOLIC_FLOAT.
",scipy/base/setup.py,scipy/base/src/umathmodule.c.src
0267fe6d70ea112813bb1b615b98d02e28021c7f,"Added two to TEST_COMMIT
",TEST_COMMIT,scipy/base/_internal.py,scipy/base/oldnumeric.py
78313786cdb093ea0b4ae00d42f4bbc11b6ebda6,"Testing fperez commit
",TEST_COMMIT
8087035fbe8986921b1f7d44bdfec47b541cde23,"Define atanhf,asinhf,acoshf when missing (like in mingw32).
",scipy/base/setup.py,scipy/base/src/umathmodule.c.src
dc2123972bc4403c60176f92381f0afbd41b0454,"Fixed config_cmd.check_func call bugs that used to return always True.
",scipy/base/setup.py,scipy/base/tests/test_type_check.py
5471cf5e270b10099faee95a60ff5de3a258ab05,"Exposing scipy.test(..), scipy.base.test(..) functions.
",scipy/__init__.py,scipy/base/__init__.py,scipy/test/testing.py
7ee2b4372573ec322a208eeb3e4ebed5c7797dc4,"Fixed and improved scipy.distutils.
",scipy/base/__init__.py,scipy/base/numeric.py,scipy/base/setup.py,scipy/distutils/command/build_src.py,scipy/distutils/misc_util.py,scipy/distutils/system_info.py,scipy/setup.py
759d4d8909a72087235c52d58a123e97854e45ed,"Removed Numeric dependence.
",scipy/f2py2e/f2py2e.py,scipy/f2py2e/rules.py,scipy/f2py2e/src/fortranobject.h
358fdf2a10b58851479d0ce01f90bd7b8a576570,"Making sure it committed
",scipy/core_version.py
ce8da23e05ec7bc4df7ccca8916c1d94e46dac5a,"Removed Numeric dependence.
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx
d87d7f7547086e7b15bf9b701e8ba0c3c13adc17,"Fixing header.
",scipy/base/include/scipy/arrayobject.h
d744209553544bb412fb1688164c3302acce5fee,"Removed bad define.
",scipy/base/include/scipy/arrayobject.h
18ee121816ee20861a75211004232f7e206848f2,"Fixed compatibility issues.
",scipy/base/include/scipy/arrayobject.h,scipy/core_version.py,scipy/f2py2e/src/fortranobject.c
1ba7b907d04cff8dc0e07e0815ce231bd93121ab,"Pearu can write.
",TEST_COMMIT
4f5ab59899c9f3b8883522d3a20723e836f9b1be,"Final changes..
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
481b572cb6a793c604328a91d0ddcb6b92d52cd4,"Removed obsolete test-site.
",scipy/f2py2e/test-site/a/geniotest.py,scipy/f2py2e/test-site/a/runme.py,scipy/f2py2e/test-site/b/array.f,scipy/f2py2e/test-site/b/arraytest.f,scipy/f2py2e/test-site/b/callbacktest.f,scipy/f2py2e/test-site/b/complextest.f,scipy/f2py2e/test-site/b/marraytest.f,scipy/f2py2e/test-site/b/runme.py,scipy/f2py2e/test-site/b/scalar.f,scipy/f2py2e/test-site/c/complextest_c.c,scipy/f2py2e/test-site/cb/cb.pyf,scipy/f2py2e/test-site/cb/test.f,scipy/f2py2e/test-site/cf/Makefile,scipy/f2py2e/test-site/cf/test.f,scipy/f2py2e/test-site/curtis/cabase-smart.f90,scipy/f2py2e/test-site/curtis/cabase1.f,scipy/f2py2e/test-site/curtis/cabase1.py,scipy/f2py2e/test-site/curtis/cabase2.f,scipy/f2py2e/test-site/curtis/cabase2.py,scipy/f2py2e/test-site/curtis/cabase2m.f,scipy/f2py2e/test-site/curtis/runme_curtis,scipy/f2py2e/test-site/curtis/test.py,scipy/f2py2e/test-site/d/array.f,scipy/f2py2e/test-site/d/callback-test.py,scipy/f2py2e/test-site/d/callbacktest.f,scipy/f2py2e/test-site/d/runme_array,scipy/f2py2e/test-site/d/runme_callback,scipy/f2py2e/test-site/d/runme_scalar,scipy/f2py2e/test-site/d/runme_string,scipy/f2py2e/test-site/d/scalar.f,scipy/f2py2e/test-site/d/string.f,scipy/f2py2e/test-site/detail/argpasstest.py,scipy/f2py2e/test-site/detail/cbreturntest.py,scipy/f2py2e/test-site/detail/f2pytests.py,scipy/f2py2e/test-site/detail/genfuntests.py,scipy/f2py2e/test-site/detail/gentests.py,scipy/f2py2e/test-site/detail/returntest.py,scipy/f2py2e/test-site/detail/runtests.py,scipy/f2py2e/test-site/detail/simpletest.py,scipy/f2py2e/test-site/e/com1a.f,scipy/f2py2e/test-site/e/common.f,scipy/f2py2e/test-site/e/runme_com1,scipy/f2py2e/test-site/e/runme_common,scipy/f2py2e/test-site/g/param.in,scipy/f2py2e/test-site/g/runme,scipy/f2py2e/test-site/g/smgice.f,scipy/f2py2e/test-site/h/bar.f,scipy/f2py2e/test-site/h/bar.f90,scipy/f2py2e/test-site/h/barcom.f,scipy/f2py2e/test-site/h/bardata.f90,scipy/f2py2e/test-site/h/cbar.f,scipy/f2py2e/test-site/h/cbar.f90,scipy/f2py2e/test-site/minpack/minpack-smart.pyf,scipy/f2py2e/test-site/minpack/runme_minpack,scipy/f2py2e/test-site/minpack/src/chkder.f,scipy/f2py2e/test-site/minpack/src/covar.f,scipy/f2py2e/test-site/minpack/src/dmchar.f,scipy/f2py2e/test-site/minpack/src/dogleg.f,scipy/f2py2e/test-site/minpack/src/dpmpar.f,scipy/f2py2e/test-site/minpack/src/enorm.f,scipy/f2py2e/test-site/minpack/src/errjac.f,scipy/f2py2e/test-site/minpack/src/fdjac1.f,scipy/f2py2e/test-site/minpack/src/fdjac2.f,scipy/f2py2e/test-site/minpack/src/grdfcn.f,scipy/f2py2e/test-site/minpack/src/hybrd.f,scipy/f2py2e/test-site/minpack/src/hybrj.f,scipy/f2py2e/test-site/minpack/src/lmder.f,scipy/f2py2e/test-site/minpack/src/lmdif.f,scipy/f2py2e/test-site/minpack/src/lmpar.f,scipy/f2py2e/test-site/minpack/src/lmstr.f,scipy/f2py2e/test-site/minpack/src/objfcn.f,scipy/f2py2e/test-site/minpack/src/qform.f,scipy/f2py2e/test-site/minpack/src/qrfac.f,scipy/f2py2e/test-site/minpack/src/qrsolv.f,scipy/f2py2e/test-site/minpack/src/r1mpyq.f,scipy/f2py2e/test-site/minpack/src/r1updt.f,scipy/f2py2e/test-site/minpack/src/rwupdt.f,scipy/f2py2e/test-site/minpack/src/ssqfcn.f,scipy/f2py2e/test-site/minpack/src/ssqjac.f,scipy/f2py2e/test-site/minpack/src/vecfcn.f,scipy/f2py2e/test-site/minpack/src/vecjac.f,scipy/f2py2e/test-site/mod/data_mod.f,scipy/f2py2e/test-site/mod/main.c,scipy/f2py2e/test-site/mod/runme,scipy/f2py2e/test-site/mod/runme_mod,scipy/f2py2e/test-site/mod/simple.py,scipy/f2py2e/test-site/mod/simple2.pyf,scipy/f2py2e/test-site/mod/sub.f90,scipy/f2py2e/test-site/mod/test.f,scipy/f2py2e/test-site/mod/wrap.f90,scipy/f2py2e/test-site/quadpack/runme_quadpack,scipy/f2py2e/test-site/simple/gen_setup.sh,scipy/f2py2e/test-site/simple/src/array.f,scipy/f2py2e/test-site/simple/src/scalar.f,scipy/f2py2e/test-site/simple/test_array.py,scipy/f2py2e/test-site/simple/test_scalar.py,scipy/f2py2e/test-site/splines/runme_splines,scipy/f2py2e/test-site/splines/splines-smart.pyf,scipy/f2py2e/test-site/test_f2py2e.py
dfcf45c283964eeaa95422ea46ec0a9b5c965f7e,"Added f2py2e as scipy.f2py, improved scipy.distutils, fixed setup.py files, etc
",MANIFEST.in,scipy/base/setup.py,scipy/distutils/command/__init__.py,scipy/distutils/command/build_ext.py,scipy/distutils/command/build_scripts.py,scipy/distutils/command/build_src.py,scipy/distutils/core.py,scipy/distutils/misc_util.py,scipy/distutils/system_info.py,scipy/f2py2e/__cvs_version__.py,scipy/f2py2e/__version__.py,scipy/f2py2e/setup.py
615d81479b16a7b2c057fb0ce93c690f3ccd99f4,"Changed names from axxxxx to xxxx_ for types that shadow builtin types.
",scipy/base/getlimits.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/twodim_base.py,scipy/base/type_check.py
fe215b7e7eb14e84cfdfe3a5de4196746489f95d,"Added test_commit file
",TEST_COMMIT
9c5f512ad4080ecb6e696fc4ff40a88df6880be6,"More thanks...
",THANKS.txt,setup.py
8e60b39025df8c19cad0fc6811a08c3ac9986e68,"Added Stephen Walton's patch for absoft.py
",scipy/distutils/fcompiler/absoft.py
add3f7a830cc32bb236da1da18d655bcb4cbf5a8,"Fixed richcmp inheritance.
",scipy/base/src/scalartypes.inc.src
26a1580bde88f12e4028e67db681eb0d53b75126," r3539@Blasphemy:  kern | 2005-09-29 03:12:18 -0700
 Bit of a merge conflict.
",scipy/base/type_check.py
56728d50e7e23f541c2f599a831c49a74b75db57," r3532@Blasphemy:  kern | 2005-09-29 03:08:25 -0700
 More test fixes
",scipy/base/function_base.py,scipy/base/index_tricks.py,scipy/base/numeric.py,scipy/base/shape_base.py,scipy/base/tests/test_function_base.py,scipy/base/tests/{test_matrix_base.py,scipy/base/twodim_base.py,scipy/base/type_check.py
305fabee5b1cf1d03ace5e4aa4bb66b41a358f05," r3531@Blasphemy:  kern | 2005-09-29 02:05:01 -0700
 Restoring tests
",scipy/base/setup.py,scipy/base/tests/test_basic.py,scipy/base/tests/test_function_base.py,scipy/base/tests/test_index_tricks.py,scipy/base/tests/test_limits.py,scipy/base/tests/test_matrix_base.py,scipy/base/tests/test_shape_base.py,scipy/base/tests/test_type_check.py,scipy/test/testing.py
ca2d4dc36cd735c76f895d86e8424099603a9fed,"Added a can_cast Python function.
",scipy/base/code_generators/generate_array_api.py,scipy/base/numeric.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c
5daeb8eccba19179efd9469a0d916a18ab38dea0,"Eliminated random_lite
",scipy/stats/random_lite.py
b953386c9f25892725f200e2da947a317ff22625,"Simplified scalar type checking.
",scipy/base/getlimits.py,scipy/base/info_scipy_base.py,scipy/base/machar.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/type_check.py
a287aa7a0964ffb6bf5ccb19f940c9d36e99daf1," r3529@Blasphemy:  kern | 2005-09-29 00:30:52 -0700
 Remove mconf_{BE,LE}.h split
",scipy/corelib/mtrand/isnan.c,scipy/corelib/mtrand/mconf.h,scipy/corelib/mtrand/mconf_BE.h,scipy/corelib/mtrand/mconf_LE.h
e7f6a7c264fcdff161aee901b596236a15fe1b13,"
",scipy/corelib/mtrand/mtrand.pyx
57315b14d7bc3af6fccb3018b76d676a762ef1d4," r3519@Blasphemy:  kern | 2005-09-28 22:56:10 -0700
 mtrand pickle support and some clean up
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/randomkit.h,scipy/stats/__init__.py
9bb983356b5dc2f19a389befc72da89fafe4fef8," r3509@Blasphemy:  kern | 2005-09-27 22:50:18 -0700
 mtrand fixes
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/randomkit.c,scipy/stats/__init__.py
dfe6c48f254c71d3752532ab870f2aced8717ca2,"No pre-computing limits in getlimits.py
",scipy/base/getlimits.py,scipy/base/type_check.py
8c8881a825c8ac9b1c6f8f3e1bce9ee84c3caa6a,"improving a.flags
",scipy/base/_internal.py
422e931a1d7dcb19e4728d1113308d8db50b6b92,"Updated flags attribute to special dictionary.
",scipy/base/_internal.py
a9f62af1b7348b467597af397866900e5cd85a63,"Updated flags attribute to special dictionary.
",scipy/base/_internal.py,scipy/base/type_check.py
4742ef06a5888264488fc250d40d7ad47b718cb2,"a.flags returns fancy array-connected dictionary.
",scipy/base/_internal.py,scipy/base/function_base.py,scipy/base/getlimits.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/twodim_base.py,scipy/base/type_check.py
a8240d84ad9317a8c6e08e45c5cabdb7b562b6f5,"Fixed mixed-type array scalar computation issues.
",scipy/base/__init__.py,scipy/base/matrix.py,scipy/base/numerictypes.py,scipy/base/src/scalartypes.inc.src,scipy/base/twodim_base.py
b60f3c5f424f20d6e7506db7a4f26dfc3c08fe2e,"Don't shadow builtins anymore.
",THANKS.txt,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/src/multiarraymodule.c
07a2484e565aeb05a93b0b716160524b42032ab5,"Fixed bugs.
",scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c,scipy/base/twodim_base.py
b5ec235f1e0f149867450dfc3b48386ca1797c05,"Changes..
",scipy/base/numeric.py,scipy/base/twodim_base.py
2422edc80a3495a717d02e888f459b2967aacbf9,"Altered string and unicode array scalar types so they inherit from Python types first...
",THANKS.txt,scipy/base/index_tricks.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
dcd3bd07a910e1bb727e048de0e7ff2443f7285f,"Eliminated random_lite library
",scipy/base/function_base.py,scipy/base/index_tricks.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/polynomial.py,scipy/base/scimath.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/twodim_base.py,scipy/corelib/random_lite/com.c,scipy/corelib/random_lite/linpack.c,scipy/corelib/random_lite/pmath_rng.c,scipy/corelib/random_lite/ranf.c,scipy/corelib/random_lite/ranf.h,scipy/corelib/random_lite/ranlib.c,scipy/corelib/random_lite/ranlib.h,scipy/corelib/random_lite/ranlibmodule.c,scipy/corelib/random_lite/rngmodule.c,scipy/corelib/setup.py,scipy/stats/__init__.py
2199334cfa7e3934bf81076510a84a73054ca868," r3493@803638d6:  kern | 2005-09-27 19:52:10 -0700
 get_scipy_include() docs and fix; f2py updated to use get_scipy_include(); mtrand integration
",MANIFEST.in,scipy/base/numeric.py,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/protos.h,scipy/f2py2e/f2py2e.py,scipy/stats/__init__.py
861df810553f700101e479ac298d0bec7ca194f1," r3492@803638d6:  kern | 2005-09-27 19:03:06 -0700
 Update scipy.stats to use mtrand
",scipy/stats/__init__.py
f763d77a95edb5243fb2304a6ed822d5f0b23caa," r3476@803638d6:  kern | 2005-09-26 23:37:30 -0700
 Added proper __dealloc__ method.
",scipy/corelib/mtrand/mtrand.pyx
be9be138ffc16230a24c26cc50ecc03c278bad0e,"
"
b633305a772838144156715b5b012e0e330afc93," r3471@803638d6:  kern | 2005-09-26 17:50:29 -0700
 Ensured that mtrand imports from scipy, not Numeric
",scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/{Numeric.pxi
6ac5b1d4ac571b7ab6a2f969023130c732ad3a1a," r3470@803638d6:  kern | 2005-09-26 17:50:04 -0700
 Don't install headers under /include/python2.4 but into the package
",scipy/base/numeric.py,scipy/base/setup.py
7ac07af35780fb7644ee7bb27c11ac4abe59ecfd,"
"
ca5d55a047cc444abca629d30584e7a9d68c111e," r3463@803638d6:  kern | 2005-09-26 14:31:52 -0700
 Fix for blank math library
",scipy/base/setup.py
f1ba8e79d855f8d2d4e860fb1b88666350c94836,"
"
1e7839d74149ebbd7113f15379b23a42b6a62b01," r3164@803638d6:  kern | 2005-09-26 01:27:54 -0700
 Added scipy.lib.mtrand. It is not yet integrated into scipy.stats
",scipy/corelib/mtrand/Numeric.pxi,scipy/corelib/mtrand/Python.pxi,scipy/corelib/mtrand/const.c,scipy/corelib/mtrand/distributions.c,scipy/corelib/mtrand/distributions.h,scipy/corelib/mtrand/gamma.c,scipy/corelib/mtrand/initarray.c,scipy/corelib/mtrand/initarray.h,scipy/corelib/mtrand/isnan.c,scipy/corelib/mtrand/mconf.h,scipy/corelib/mtrand/mconf_BE.h,scipy/corelib/mtrand/mconf_LE.h,scipy/corelib/mtrand/mtrand.c,scipy/corelib/mtrand/mtrand.pyx,scipy/corelib/mtrand/polevl.c,scipy/corelib/mtrand/protos.h,scipy/corelib/mtrand/randomkit.c,scipy/corelib/mtrand/randomkit.h,scipy/corelib/setup.py
9847b1915183455ade3e4aaf673971d67b6cfe9e," r3162@803638d6:  kern | 2005-09-26 01:25:20 -0700
 Comment out faulty linalg import until it has been properly ported
",scipy/__init__.py
3bb97a76e2513370b6612e259ed510b74baf057e,"Fix Accelerate.framework flags
",scipy/distutils/system_info.py
ba42c6e662d9745d16539e9a83ee11b4750d8b9f,"Deleted sub-package manifests
",scipy/f2py2e/MANIFEST,scipy/f2py2e/MANIFEST.in,scipy/weave/MANIFEST.in
0ba15d5181c6d70cdc354d7bebfa886107e142f4,"Getting ready to release beta.
",MANIFEST.in,scipy/__init__.py,scipy/base/include/scipy/arrayobject.h,scipy/f2py2e/diagnose.py,scipy/f2py2e/f2py2e.py,scipy/f2py2e/rules.py,scipy/f2py2e/setup.py,scipy/setup.py
421cd80e81ad7b65c454296e7d457bdaa166669f,"Added f2py2e -- not tested.
",scipy/setup.py
571c53f4101a82805bcbe0b8378dd6b147a5d797,"Added cvs version 1.46.23.2019 of f2py2e to svn
",scipy/f2py2e/BUGS.txt,scipy/f2py2e/MANIFEST,scipy/f2py2e/MANIFEST.in,scipy/f2py2e/Makefile,scipy/f2py2e/NEWS.txt,scipy/f2py2e/README.txt,scipy/f2py2e/TODO.txt,scipy/f2py2e/__cvs_version__.py,scipy/f2py2e/__init__.py,scipy/f2py2e/__version__.py,scipy/f2py2e/auxfuncs.py,scipy/f2py2e/capi_maps.py,scipy/f2py2e/cb_rules.py,scipy/f2py2e/cfuncs.py,scipy/f2py2e/common_rules.py,scipy/f2py2e/crackfortran.py,scipy/f2py2e/diagnose.py,scipy/f2py2e/doc/Makefile,scipy/f2py2e/doc/Release-1.x.txt,scipy/f2py2e/doc/Release-2.x.txt,scipy/f2py2e/doc/Release-3.x.txt,scipy/f2py2e/doc/Release-4.x.txt,scipy/f2py2e/doc/apps.tex,scipy/f2py2e/doc/bugs.tex,scipy/f2py2e/doc/collectinput.py,scipy/f2py2e/doc/commands.tex,scipy/f2py2e/doc/ex1/arr.f,scipy/f2py2e/doc/ex1/bar.f,scipy/f2py2e/doc/ex1/foo.f,scipy/f2py2e/doc/ex1/foobar-smart.f90,scipy/f2py2e/doc/ex1/foobar.f90,scipy/f2py2e/doc/ex1/foobarmodule.tex,scipy/f2py2e/doc/ex1/runme,scipy/f2py2e/doc/f2py2e.tex,scipy/f2py2e/doc/f2python9-final/README.txt,scipy/f2py2e/doc/f2python9-final/aerostructure.jpg,scipy/f2py2e/doc/f2python9-final/flow.jpg,scipy/f2py2e/doc/f2python9-final/mk_html.sh,scipy/f2py2e/doc/f2python9-final/mk_pdf.sh,scipy/f2py2e/doc/f2python9-final/mk_ps.sh,scipy/f2py2e/doc/f2python9-final/src/examples/exp1.f,scipy/f2py2e/doc/f2python9-final/src/examples/exp1mess.txt,scipy/f2py2e/doc/f2python9-final/src/examples/exp1session.txt,scipy/f2py2e/doc/f2python9-final/src/examples/foo.pyf,scipy/f2py2e/doc/f2python9-final/src/examples/foom.pyf,scipy/f2py2e/doc/f2python9-final/structure.jpg,scipy/f2py2e/doc/fortranobject.tex,scipy/f2py2e/doc/index.html,scipy/f2py2e/doc/intro.tex,scipy/f2py2e/doc/multiarray/array_from_pyobj.c,scipy/f2py2e/doc/multiarray/bar.c,scipy/f2py2e/doc/multiarray/foo.f,scipy/f2py2e/doc/multiarray/fortran_array_from_pyobj.txt,scipy/f2py2e/doc/multiarray/fun.pyf,scipy/f2py2e/doc/multiarray/run.pyf,scipy/f2py2e/doc/multiarray/transpose.txt,scipy/f2py2e/doc/multiarrays.txt,scipy/f2py2e/doc/notes.tex,scipy/f2py2e/doc/oldnews.html,scipy/f2py2e/doc/options.tex,scipy/f2py2e/doc/python9.tex,scipy/f2py2e/doc/signaturefile.tex,scipy/f2py2e/doc/using_F_compiler.txt,scipy/f2py2e/doc/win32_notes.txt,scipy/f2py2e/docs/FAQ.txt,scipy/f2py2e/docs/HISTORY.txt,scipy/f2py2e/docs/OLDNEWS.txt,scipy/f2py2e/docs/README.txt,scipy/f2py2e/docs/TESTING.txt,scipy/f2py2e/docs/THANKS.txt,scipy/f2py2e/docs/default.css,scipy/f2py2e/docs/docutils.conf,scipy/f2py2e/docs/hello.f,scipy/f2py2e/docs/pyforttest.pyf,scipy/f2py2e/docs/pytest.py,scipy/f2py2e/docs/simple.f,scipy/f2py2e/docs/simple_session.dat,scipy/f2py2e/docs/usersguide/allocarr.f90,scipy/f2py2e/docs/usersguide/allocarr_session.dat,scipy/f2py2e/docs/usersguide/array.f,scipy/f2py2e/docs/usersguide/array_session.dat,scipy/f2py2e/docs/usersguide/calculate.f,scipy/f2py2e/docs/usersguide/calculate_session.dat,scipy/f2py2e/docs/usersguide/callback.f,scipy/f2py2e/docs/usersguide/callback2.pyf,scipy/f2py2e/docs/usersguide/callback_session.dat,scipy/f2py2e/docs/usersguide/common.f,scipy/f2py2e/docs/usersguide/common_session.dat,scipy/f2py2e/docs/usersguide/compile_session.dat,scipy/f2py2e/docs/usersguide/default.css,scipy/f2py2e/docs/usersguide/docutils.conf,scipy/f2py2e/docs/usersguide/extcallback.f,scipy/f2py2e/docs/usersguide/extcallback_session.dat,scipy/f2py2e/docs/usersguide/fib1.f,scipy/f2py2e/docs/usersguide/fib1.pyf,scipy/f2py2e/docs/usersguide/fib2.pyf,scipy/f2py2e/docs/usersguide/fib3.f,scipy/f2py2e/docs/usersguide/ftype.f,scipy/f2py2e/docs/usersguide/ftype_session.dat,scipy/f2py2e/docs/usersguide/index.txt,scipy/f2py2e/docs/usersguide/moddata.f90,scipy/f2py2e/docs/usersguide/moddata_session.dat,scipy/f2py2e/docs/usersguide/run_main_session.dat,scipy/f2py2e/docs/usersguide/scalar.f,scipy/f2py2e/docs/usersguide/scalar_session.dat,scipy/f2py2e/docs/usersguide/setup_example.py,scipy/f2py2e/docs/usersguide/spam.pyf,scipy/f2py2e/docs/usersguide/spam_session.dat,scipy/f2py2e/docs/usersguide/string.f,scipy/f2py2e/docs/usersguide/string_session.dat,scipy/f2py2e/docs/usersguide/var.pyf,scipy/f2py2e/docs/usersguide/var_session.dat,scipy/f2py2e/f2py.1,scipy/f2py2e/f2py2e.py,scipy/f2py2e/f2py_testing.py,scipy/f2py2e/f90mod_rules.py,scipy/f2py2e/func2subr.py,scipy/f2py2e/rules.py,scipy/f2py2e/setup.cfg,scipy/f2py2e/setup.py,scipy/f2py2e/src/fortranobject.c,scipy/f2py2e/src/fortranobject.h,scipy/f2py2e/src/test/Makefile,scipy/f2py2e/src/test/bar.f,scipy/f2py2e/src/test/foo.f,scipy/f2py2e/src/test/foo90.f90,scipy/f2py2e/src/test/foomodule.c,scipy/f2py2e/src/test/wrap.f,scipy/f2py2e/test-site/a/geniotest.py,scipy/f2py2e/test-site/a/runme.py,scipy/f2py2e/test-site/b/array.f,scipy/f2py2e/test-site/b/arraytest.f,scipy/f2py2e/test-site/b/callbacktest.f,scipy/f2py2e/test-site/b/complextest.f,scipy/f2py2e/test-site/b/marraytest.f,scipy/f2py2e/test-site/b/runme.py,scipy/f2py2e/test-site/b/scalar.f,scipy/f2py2e/test-site/c/complextest_c.c,scipy/f2py2e/test-site/cb/cb.pyf,scipy/f2py2e/test-site/cb/test.f,scipy/f2py2e/test-site/cf/Makefile,scipy/f2py2e/test-site/cf/test.f,scipy/f2py2e/test-site/curtis/cabase-smart.f90,scipy/f2py2e/test-site/curtis/cabase1.f,scipy/f2py2e/test-site/curtis/cabase1.py,scipy/f2py2e/test-site/curtis/cabase2.f,scipy/f2py2e/test-site/curtis/cabase2.py,scipy/f2py2e/test-site/curtis/cabase2m.f,scipy/f2py2e/test-site/curtis/runme_curtis,scipy/f2py2e/test-site/curtis/test.py,scipy/f2py2e/test-site/d/array.f,scipy/f2py2e/test-site/d/callback-test.py,scipy/f2py2e/test-site/d/callbacktest.f,scipy/f2py2e/test-site/d/runme_array,scipy/f2py2e/test-site/d/runme_callback,scipy/f2py2e/test-site/d/runme_scalar,scipy/f2py2e/test-site/d/runme_string,scipy/f2py2e/test-site/d/scalar.f,scipy/f2py2e/test-site/d/string.f,scipy/f2py2e/test-site/detail/argpasstest.py,scipy/f2py2e/test-site/detail/cbreturntest.py,scipy/f2py2e/test-site/detail/f2pytests.py,scipy/f2py2e/test-site/detail/genfuntests.py,scipy/f2py2e/test-site/detail/gentests.py,scipy/f2py2e/test-site/detail/returntest.py,scipy/f2py2e/test-site/detail/runtests.py,scipy/f2py2e/test-site/detail/simpletest.py,scipy/f2py2e/test-site/e/com1a.f,scipy/f2py2e/test-site/e/common.f,scipy/f2py2e/test-site/e/runme_com1,scipy/f2py2e/test-site/e/runme_common,scipy/f2py2e/test-site/g/param.in,scipy/f2py2e/test-site/g/runme,scipy/f2py2e/test-site/g/smgice.f,scipy/f2py2e/test-site/h/bar.f,scipy/f2py2e/test-site/h/bar.f90,scipy/f2py2e/test-site/h/barcom.f,scipy/f2py2e/test-site/h/bardata.f90,scipy/f2py2e/test-site/h/cbar.f,scipy/f2py2e/test-site/h/cbar.f90,scipy/f2py2e/test-site/minpack/minpack-smart.pyf,scipy/f2py2e/test-site/minpack/runme_minpack,scipy/f2py2e/test-site/minpack/src/chkder.f,scipy/f2py2e/test-site/minpack/src/covar.f,scipy/f2py2e/test-site/minpack/src/dmchar.f,scipy/f2py2e/test-site/minpack/src/dogleg.f,scipy/f2py2e/test-site/minpack/src/dpmpar.f,scipy/f2py2e/test-site/minpack/src/enorm.f,scipy/f2py2e/test-site/minpack/src/errjac.f,scipy/f2py2e/test-site/minpack/src/fdjac1.f,scipy/f2py2e/test-site/minpack/src/fdjac2.f,scipy/f2py2e/test-site/minpack/src/grdfcn.f,scipy/f2py2e/test-site/minpack/src/hybrd.f,scipy/f2py2e/test-site/minpack/src/hybrj.f,scipy/f2py2e/test-site/minpack/src/lmder.f,scipy/f2py2e/test-site/minpack/src/lmdif.f,scipy/f2py2e/test-site/minpack/src/lmpar.f,scipy/f2py2e/test-site/minpack/src/lmstr.f,scipy/f2py2e/test-site/minpack/src/objfcn.f,scipy/f2py2e/test-site/minpack/src/qform.f,scipy/f2py2e/test-site/minpack/src/qrfac.f,scipy/f2py2e/test-site/minpack/src/qrsolv.f,scipy/f2py2e/test-site/minpack/src/r1mpyq.f,scipy/f2py2e/test-site/minpack/src/r1updt.f,scipy/f2py2e/test-site/minpack/src/rwupdt.f,scipy/f2py2e/test-site/minpack/src/ssqfcn.f,scipy/f2py2e/test-site/minpack/src/ssqjac.f,scipy/f2py2e/test-site/minpack/src/vecfcn.f,scipy/f2py2e/test-site/minpack/src/vecjac.f,scipy/f2py2e/test-site/mod/data_mod.f,scipy/f2py2e/test-site/mod/main.c,scipy/f2py2e/test-site/mod/runme,scipy/f2py2e/test-site/mod/runme_mod,scipy/f2py2e/test-site/mod/simple.py,scipy/f2py2e/test-site/mod/simple2.pyf,scipy/f2py2e/test-site/mod/sub.f90,scipy/f2py2e/test-site/mod/test.f,scipy/f2py2e/test-site/mod/wrap.f90,scipy/f2py2e/test-site/quadpack/runme_quadpack,scipy/f2py2e/test-site/simple/gen_setup.sh,scipy/f2py2e/test-site/simple/src/array.f,scipy/f2py2e/test-site/simple/src/scalar.f,scipy/f2py2e/test-site/simple/test_array.py,scipy/f2py2e/test-site/simple/test_scalar.py,scipy/f2py2e/test-site/splines/runme_splines,scipy/f2py2e/test-site/splines/splines-smart.pyf,scipy/f2py2e/test-site/test_f2py2e.py,scipy/f2py2e/tests/c/return_real.py,scipy/f2py2e/tests/f77/callback.py,scipy/f2py2e/tests/f77/return_character.py,scipy/f2py2e/tests/f77/return_complex.py,scipy/f2py2e/tests/f77/return_integer.py,scipy/f2py2e/tests/f77/return_logical.py,scipy/f2py2e/tests/f77/return_real.py,scipy/f2py2e/tests/f90/return_character.py,scipy/f2py2e/tests/f90/return_complex.py,scipy/f2py2e/tests/f90/return_integer.py,scipy/f2py2e/tests/f90/return_logical.py,scipy/f2py2e/tests/f90/return_real.py,scipy/f2py2e/tests/mixed/foo.f,scipy/f2py2e/tests/mixed/foo_fixed.f90,scipy/f2py2e/tests/mixed/foo_free.f90,scipy/f2py2e/tests/mixed/run.py,scipy/f2py2e/tests/run_all.py,scipy/f2py2e/use_rules.py
6a9f94051a9181dd4399d446609255668586e848,"Added thanks file
",THANKS.txt,scipy/__init__.py
009f35d01a0accab360bb619e2b929a45ae5b4a1,"Don't register multiple copies.
",scipy/base/src/arrayobject.c
47cf7fdce0f1acac9f8fd5f26ed9a9c5f3da64a2,"Added simple type registration system.
",scipy/base/code_generators/generate_array_api.py,scipy/base/code_generators/generate_ufunc_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/include/scipy/ufuncobject.h,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
b53531d1a3ae969e0b1682cbc1d50bb65c9fbe9f,"Fixed some remaining problems.
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c
3be1dab1d9b49926c3b1c2fba35e2c8b38fce541,"Removed redundant testing.
",scipy/base/src/arrayobject.c,scipy/base/testing.py,scipy/stats/random_lite.py,scipy/test/testing.py
1717eb786e66c890fa93b271d52b4d18dbfa7ee7,"Changed OWN_DATA to OWNDATA
",scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c
c36e940d20d53b73f71a576274f227e6b041f913,"Changed new typedef bool to Bool throughout.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src,scipy/corelib/blasdot/_dotblas.c
69af3760c645e0716fd28d25dd897ab96471408f,"Defines for backward compat C-API
",scipy/base/src/arrayobject.c
a3d9267844ee4acb6502834beb88c567426ef81d,"Added a cross index function
",scipy/base/include/scipy/arrayobject.h,scipy/base/index_tricks.py,scipy/base/src/arraytypes.inc.src
33f97e1f8751d5f6083ae80fb43f9b3867a5e297,"Return Long integer on size only if necessary. 
",scipy/base/src/arrayobject.c
491a3fd7c49420ab040889a5a11a228a90c0a073,"Return Long integer on size only if necessary. 
",scipy/base/src/arrayobject.c,scipy/base/src/scalartypes.inc.src,scipy/stats/random_lite.py
d02e0f884aeeeff62c2ff1eb304dcb7563d688eb,"Allow use of generic type objects for instancing arrays -- use standard specific types
",scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
306fc5d6e715f51a3a568a34dccd39c44af757fe,"Fixed nasty shape setting bug.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/stats/random_lite.py
64c9050515e3cfa7ad095299f9648ebc5530a823,"Moved weave to be a sub-package of scipy (so as not to conflict with any already installed weave which uses Numeric.
",scipy/distutils/misc_util.py,scipy/setup.py,scipy/weave/setup.py,scipy/weave/setup_weave.py,setup.py
45d01a4be1c4221132ba46d687e6af3a8df3329b,"Moved weave
",{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave,{weave
ccd1c3db37672627aa4fe0fdb5437f5dddc0fe86,"Added weave.
",scipy/base/code_generators/generate_array_api.py,scipy/distutils/command/build_src.py,scipy/distutils/command/install_headers.py,scipy/distutils/misc_util.py,scipy/setup.py,scipy/test/testing.py,weave/setup_weave.py
8ac222e304fdd59394725d27e82168a95eadaf1c,"Adding weave and test
",scipy/base/convertcode.py,scipy/base/function_base.py,{test,{test,{test,{test,{test,{test,{test,setup.py,weave/__init__.py,weave/accelerate_tools.py,weave/blitz_spec.py,weave/blitz_tools.py,weave/catalog.py,weave/converters.py,weave/setup.py,weave/setup_weave.py,weave/size_check.py,weave/standard_array_spec.py
ed8548a9686b70995ff1afdefbba437d84134d08,"Getting weave setup
",weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/{blitz-20001213,weave/blitz_spec.py,weave/setup_weave.py
b0d76351911cf56f32afb590a4b759e18a60dd50,"Fixed up for release.
",scipy/__init__.py,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/src/arrayobject.c,scipy/corelib/setup.py,scipy/fftpack/fft_lite.py,scipy/linalg/__init__.py,scipy/linalg/basic_lite.py,scipy/stats/__init__.py,scipy/stats/random_lite.py
3bd3270fd807a931807b307d89275a98a8b62f52,"Moving back to simple Numeric interface.
",scipy/linalg/__init__.py,scipy/linalg/basic_lite.py,scipy/linalg/decomp_lite.py.py
d695a4d502ba9986192cb744c9713926bd5f04cc,"
",scipy/base/setup.py,scipy/base/src/multiarraymodule.c
221b99978c1e941cdda6588f8a4d9fdfdfd67013,"
",scipy/base/type_check.py
e59aae3d375eb7f5c02858c315eaf39e6eacbecd,"
",scipy/fftpack/__init__.py,scipy/fftpack/{fft.py,scipy/stats/{random.py
30e43a032a471a792d54138bf018a17143e6feaf,"
",scipy/__init__.py,scipy/base/__init__.py,scipy/linalg/__init__.py,scipy/linalg/basic.py,scipy/linalg/basic_lite.py,scipy/linalg/decomp_lite.py.py
da934111a93f3da186eeeba746047be04b406983,"
",scipy/base/{limits.py,scipy/base/src/multiarraymodule.c,scipy/base/src/ufuncobject.c
4b726159081d58cb568038eae301a60c6bec47a8,"
",scipy/base/__init__.py,scipy/base/pexec.py,scipy/base/ppimport.py
43866c513793b33b0d6ea11e2657d79c2266d359,"
",scipy/base/src/arrayobject.c
69134e103855ba89738f02ef6426e95a276cb8fe,"fixed so that fp status flags are checked on mingw32 platform where __MINGW32__ is defined.
",scipy/base/include/scipy/ufuncobject.h,scipy/base/src/ufuncobject.c
c487b9c4204c6e89cd8eb95aa2c0ab2d7c27ec85,"Altered so that ndarray inherits from ndbigarray which does not export the sequence or buffer interface and so is not subject to the 32-bit limitations on platforms where int is not the size of the pointer. 
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/linalg/basic.py
5bf137e9c5b75119cfc1026b88adf7bc1c2ded49,"Fixed fortran ravelling issues. 
",scipy/__init__.py,scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/numeric.py,scipy/base/setup.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/corelib/blasdot/_dotblas.c,scipy/corelib/lapack_lite/lapack_litemodule.c,scipy/corelib/setup.py,scipy/linalg/basic.py
e51273ec8c2d482d7f09a42f4c178664d907a593,"Added more missing files
",scipy/corelib/fftpack_lite/fftpack.h
f576bc55108d4e602248a171478ff4b0d0a2b281,"Added missing setup.py
",scipy/corelib/setup.py
7296b270053f78f0a80830c653583933874e7416,"Minor comment additions.
",scipy/base/src/ufuncobject.c
c5e69853cfff88c547dafc3516b65a61e6f10e24,"Fixed ufunc error handling.
",scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c
052a7b2e3276a303be1083022fc24d43084d2e14,"Added ufunc attributes.
",scipy/base/code_generators/generate_umath.py,scipy/base/function_base.py,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
83accefd143a0e3ee8b3160d0927b3ff616743de,"added hashability of scalars, and fixed printing of large integers.
",scipy/base/arrayprint.py,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
d015bd082257ab85c6de46efbb5c7a5cc8cc88f9,"Added missing __init__ files
",scipy/corelib/__init__.py,scipy/linalg/__init__.py
a3874db675f2fa224085c50534c8c793ca7d577f,"More fixes.
",scipy/base/function_base.py,scipy/base/oldnumeric.py,scipy/base/shape_base.py,scipy/base/twodim_base.py
1a859e9b3f7a861fd9723745c92a820264d19a3b,"Remove stray print.
",scipy/base/shape_base.py,scipy/base/src/arraymethods.c
0746db19c3cc198c95b632bd1285978050f355d6,"problematic MIN removed.
",scipy/base/function_base.py,scipy/base/include/scipy/arrayobject.h,scipy/base/shape_base.py,scipy/base/src/_compiled_base.c,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy_compatibility
b560ed0a06160b012ea6023be0fc219717f761c4,"Fixed up limits
",scipy/base/__init__.py,scipy/base/function_base.py,scipy/base/limits.py,scipy/base/machar.py,scipy/base/src/arraytypes.inc.src,scipy/base/type_check.py
182a8c3fc8a6d827c878b9749af668e41cc0257d,"Found problem with reshape.
",scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src
70edf5c9acbc231c9ce9078942fe210d8888305a,"Making more consistent.
",scipy/base/numeric.py,scipy/base/src/arraymethods.c,scipy/base/src/scalartypes.inc.src
2d0b625d58a48525ded47c4d184ad3837e71c316,"Fixing some array scalar inconsistencies.
",scipy/base/__init__.py,scipy/base/convertcode.py,scipy/base/function_base.py,scipy/base/include/scipy/arrayobject.h,scipy/base/index_tricks.py,scipy/base/info_scipy_base.py,scipy/base/ma.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/oldnumeric.py,scipy/base/oldscipy.py,scipy/base/polynomial.py,scipy/base/scimath.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/testing.py,scipy/base/twodim_base.py,scipy/base/type_check.py,scipy/linalg/basic.py
dc87df7f9c06d35ab172d9961f7c81a0148a212d,"
Adding core scipy functions
",scipy/__init__.py,scipy/base/__init__.py,scipy/base/convertcode.py,scipy/base/limits.py,scipy/base/ma.py,scipy/base/machar.py,scipy/base/matrix.py,scipy/base/numeric.py,scipy/base/numerictypes.py,scipy/base/oldnumeric.py,scipy/base/shape_base.py,scipy/base/src/arraymethods.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/umathmodule.c.src,scipy/base/{matrix_base.py,scipy/base/type_check.py
6c6675d4573bbe0ee2635de009837b8a3776efa7,"Converting masked arrays
",scipy/base/convertcode.py,scipy/base/ma.py,scipy/base/oldnumeric.py,scipy/base/src/arrayobject.c
9e29c45a989f7dfa1e25acc90efb27e364873734,"Fixed more bugs.
",scipy/base/src/arraymethods.c,scipy/base/src/ufuncobject.c
198e1d764626ac4d376f4dbb07b38967a88831a6,"Fixed PyArray_Copy when swapping needed.  Removed PyArray_CopyArray (made it a define)
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/ufuncobject.c
2d3a74706e019ca83fdc3663eec99a4a9b591767,"Improving convert code.
",scipy/base/convertcode.py
1697f6fa6218814cdc2f92b1429c6035f00d6a60,"Fixed _isnan
",scipy/base/src/_isnan.c
3ddaff3ca22360e97f4a30537e662618e1f817cd,"Improved isinf if platform doesn't provide.
",scipy/base/src/umathmodule.c.src
136709c30e81f221579afc7c91b67349c3138924,"Even more simplifications to isinf macro
",scipy/base/src/umathmodule.c.src
cef96142642ba6aee15671c0d48f9c7b52c1f0e1,"Reworked isinf isnan macros a bit.
",scipy/base/src/_isnan.c,scipy/base/src/_signbit.c,scipy/base/src/umathmodule.c.src
325306f18aac4f9581bc3aae49da30d09a1bd410,"Added isnan, isinf, isfinite, and signbit
",scipy/base/code_generators/generate_umath.py,scipy/base/numeric.py,scipy/base/setup.py,scipy/base/src/umathmodule.c.src
e4e9c0eb0c78db4cc0afd4e81d0af38c5ccaf02c,"moved fft back to fftpack
",scipy/{fftfunc,scipy/{fftfunc,scipy/setup.py
9ce22d2571d48c7c961c7dbe4bc47ecb46bb28a8,"Checked that lapack_lite sources build if needed.
",scipy/corelib/lapack_lite/blas_lite.c,scipy/corelib/lapack_lite/dlamch.c,scipy/corelib/lapack_lite/dlapack_lite.c,scipy/corelib/lapack_lite/f2c_lite.c,scipy/corelib/lapack_lite/zlapack_lite.c,scipy/{fftpack,scipy/{fftpack,scipy/setup.py
dd64211ecc2fba0177df12f8f7a6d83d8c159ea3,"Seems to be completish
",scipy/corelib/lapack_lite/f2c.h,scipy/corelib/random_lite/com.c,scipy/corelib/random_lite/linpack.c,scipy/corelib/random_lite/ranlib.c,scipy/corelib/random_lite/ranlib.h,scipy/corelib/random_lite/ranlibmodule.c,scipy/corelib/random_lite/rngmodule.c,scipy/linalg/basic.py,scipy/stats/__init__.py,scipy/stats/random.py
242730b329ac4989c126d4445972729e5b4ae434,"Added lapack (if libs already present)
",scipy/corelib/lapack_lite/lapack_litemodule.c,scipy/corelib/random_lite/rngmodule.c,scipy/linalg/basic.py
8944d4f883e7d918ea92a09539e841873101f739,"Added fft.
",scipy/corelib/fftpack_lite/fftpack_litemodule.c,scipy/fftpack/__init__.py,scipy/fftpack/fft.py
ceca6a6a7b66fd6eaedb34344b735bdb1ffef3ec,"Many fixes.
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/matrix.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/corelib/blasdot/__init__.py,scipy/corelib/blasdot/_dotblas.c,scipy/corelib/fftpack_lite/{fftpackmodule.c
b62c8591689f0922f416d6a6565df3b6dbce942f,"Added _dotblas install
",scipy/__init__.py,scipy/base/code_generators/generate_umath.py,scipy/base/include/scipy/arrayobject.h,scipy/base/numeric.py,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/corelib/blasdot/_dotblas.c,scipy/distutils/misc_util.py,scipy/distutils/system_info.py,scipy/setup.py
d91b5b9e71527f94be2119299b2ed9c3e417dc4c,"Added ldexp, frexp, and modf to ufuncs
",scipy/base/code_generators/generate_umath.py,scipy/base/src/umathmodule.c.src
a215f584407a25da6247784fb1f9a232e206a86f,"Added ma hook.
",scipy/base/ma.py
3cb3d7798a0050a4c9272cf4f12631a4c338d0a9,"Finished new _dotblas.c
",scipy/corelib/blasdot/_dotblas.c
76f6dbd300d38b121a5efca9eb5181de83ab039d,"Added PyArray_ArrayType
",scipy/base/code_generators/generate_array_api.py,scipy/base/include/scipy/arrayobject.h,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/corelib/blasdot/_dotblas.c
7257a82db2316aaf815cc65f045e8ea7e2dc5861,"Fixing added Numeric
",scipy/base/src/arrayobject.c,scipy/corelib/random_lite/{RNGmodule.c
4bea674fd9a5bfa5f7ee14a5fec164a9d84b657c,"Moving Numeric to newcore
",scipy/corelib/blasdot/__init__.py,scipy/corelib/blasdot/_dotblas.c,scipy/corelib/fftpack_lite/fftpack.c,scipy/corelib/fftpack_lite/fftpackmodule.c,scipy/corelib/lapack_lite/blas_lite.c,scipy/corelib/lapack_lite/dlamch.c,scipy/corelib/lapack_lite/dlapack_lite.c,scipy/corelib/lapack_lite/f2c_lite.c,scipy/corelib/lapack_lite/lapack_litemodule.c,scipy/corelib/lapack_lite/zlapack_lite.c,scipy/corelib/random_lite/RNGmodule.c,scipy/corelib/random_lite/pmath_rng.c,scipy/corelib/random_lite/ranf.c,scipy/corelib/random_lite/ranf.h,scipy/fftpack/__init__.py,scipy/fftpack/fft.py,scipy/linalg/basic.py,scipy/stats/__init__.py,scipy/stats/random.py
ff01b26fd14c55ff93210190e9bcc42711c5eee2,"Added EnsureArray to C-API and used it to clean up some method calls
",scipy/__init__.py,scipy/base/code_generators/generate_array_api.py,scipy/base/setup.py,scipy/base/src/arrayobject.c,scipy/base/src/multiarraymodule.c,scipy/distutils/misc_util.py
b48b35f199ec5d54b2ce3334d5ffa96f17fe1a60,"SVN version builds
",scipy/base/_compiled_base.c,scipy/base/setup.py,scipy/base/src/_compiled_base.c
8ce04e7d2a2b3427649f9f748f0d52015173b0cd,"Adding scipy.base
",setup.py
8c23d384e35328e2f7d955d56ba773f14504de4a,"Adding scipy.base
",scipy/__init__.py,scipy/core_version.py,scipy/setup.py
8cb36a620861800a190974388f069af424fac958,"Adding scipy.base to SVN
",scipy/base/__init__.py,scipy/base/_scipy_mapping.c,scipy/base/_scipy_number.c,scipy/base/core_version.py,scipy/base/numerix.py,scipy/base/scipy_base_version.py,scipy/base/setup.py,scipy/base/src/arraymethods.c,scipy/base/src/arrayobject.c,scipy/base/src/arraytypes.inc.src,scipy/base/src/multiarraymodule.c,scipy/base/src/scalartypes.inc.src,scipy/base/src/ufuncobject.c,scipy/base/src/umathmodule.c.src
add82c98caf33213c732d85155caba186faec58e,"Moving things under scipy
"
61b48697e440f76b2337c790ec5ca763cd55200b,"Moving things to live under scipy
",{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{base,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils,{distutils
575d373479c63a42bc4a729a058da31a74e75d3e,"Added new distutils
",distutils/__init__.py,distutils/__version__.py,distutils/ccompiler.py,distutils/command/__init__.py,distutils/command/bdist_rpm.py,distutils/command/build.py,distutils/command/build_clib.py,distutils/command/build_ext.py,distutils/command/build_py.py,distutils/command/build_src.py,distutils/command/config.py,distutils/command/config_compiler.py,distutils/command/install.py,distutils/command/install_data.py,distutils/command/install_headers.py,distutils/command/sdist.py,distutils/conv_template.py,distutils/core.py,distutils/cpuinfo.py,distutils/exec_command.py,distutils/extension.py,distutils/fcompiler/__init__.py,distutils/fcompiler/absoft.py,distutils/fcompiler/compaq.py,distutils/fcompiler/g95.py,distutils/fcompiler/gnu.py,distutils/fcompiler/hpux.py,distutils/fcompiler/ibm.py,distutils/fcompiler/intel.py,distutils/fcompiler/lahey.py,distutils/fcompiler/mips.py,distutils/fcompiler/nag.py,distutils/fcompiler/pg.py,distutils/fcompiler/sun.py,distutils/fcompiler/vast.py,distutils/from_template.py,distutils/line_endings.py,distutils/log.py,distutils/misc_util.py,distutils/setup.py,distutils/system_info.py,distutils/tests/f2py_ext/__init__.py,distutils/tests/f2py_ext/setup.py,distutils/tests/f2py_ext/src/fib1.f,distutils/tests/f2py_ext/src/fib2.pyf,distutils/tests/f2py_ext/tests/test_fib2.py,distutils/tests/f2py_f90_ext/__init__.py,distutils/tests/f2py_f90_ext/include/body.f90,distutils/tests/f2py_f90_ext/setup.py,distutils/tests/f2py_f90_ext/src/foo_free.f90,distutils/tests/f2py_f90_ext/tests/test_foo.py,distutils/tests/gen_ext/__init__.py,distutils/tests/gen_ext/setup.py,distutils/tests/gen_ext/tests/test_fib3.py,distutils/tests/swig_ext/__init__.py,distutils/tests/swig_ext/setup.py,distutils/tests/swig_ext/src/example.c,distutils/tests/swig_ext/src/example.i,distutils/tests/swig_ext/src/zoo.cc,distutils/tests/swig_ext/src/zoo.h,distutils/tests/swig_ext/src/zoo.i,distutils/tests/swig_ext/tests/test_example.py,distutils/tests/swig_ext/tests/test_example2.py,distutils/tests/test_build_src.py,distutils/unixccompiler.py
14db4193112ecc5930154af860228562132e3b48,"Fixing for new distutils
",base/code_generators/generate_array_api.py,base/code_generators/generate_ufunc_api.py,base/code_generators/generate_umath.py,distutils/MANIFEST.in,distutils/__init__.py,distutils/absoftfcompiler.py,distutils/ccompiler.py,distutils/command/__init__.py,distutils/command/bdist_rpm.py,distutils/command/build.py,distutils/command/build_clib.py,distutils/command/build_ext.py,distutils/command/build_py.py,distutils/command/build_src.py,distutils/command/config_compiler.py,distutils/command/install.py,distutils/command/install_data.py,distutils/command/install_headers.py,distutils/command/sdist.py,distutils/compaqfcompiler.py,distutils/core.py,distutils/cpuinfo.py,distutils/dist.py,distutils/examples/setup_module_config.py,distutils/examples/setup_module_pure.py,distutils/examples/setup_module_pure_data.py,distutils/examples/setup_module_pure_super.py,distutils/examples/setup_module_svn.py,distutils/exec_command.py,distutils/extension.py,distutils/fcompiler.py,distutils/from_template.py,distutils/g95fcompiler.py,distutils/gnufcompiler.py,distutils/hpuxfcompiler.py,distutils/ibmfcompiler.py,distutils/info_scipy_distutils.py,distutils/intelfcompiler.py,distutils/laheyfcompiler.py,distutils/lib2def.py,distutils/line_endings.py,distutils/log.py,distutils/mingw32_support.py,distutils/mingw32ccompiler.py,distutils/mipsfcompiler.py,distutils/misc_util.py,distutils/nagfcompiler.py,distutils/pgfcompiler.py,distutils/proc.py,distutils/sample_site.cfg,distutils/scipy_distutils_version.py,distutils/setup.py,distutils/setup_scipy_distutils.py,distutils/sunfcompiler.py,distutils/system_info.py,distutils/tests/f2py_ext/__init__.py,distutils/tests/f2py_ext/setup.py,distutils/tests/f2py_ext/src/fib1.f,distutils/tests/f2py_ext/src/fib2.pyf,distutils/tests/f2py_ext/tests/test_fib2.py,distutils/tests/f2py_f90_ext/__init__.py,distutils/tests/f2py_f90_ext/include/body.f90,distutils/tests/f2py_f90_ext/setup.py,distutils/tests/f2py_f90_ext/src/foo_free.f90,distutils/tests/f2py_f90_ext/tests/test_foo.py,distutils/tests/gen_ext/__init__.py,distutils/tests/gen_ext/setup.py,distutils/tests/gen_ext/tests/test_fib3.py,distutils/tests/swig_ext/__init__.py,distutils/tests/swig_ext/setup.py,distutils/tests/swig_ext/src/example.c,distutils/tests/swig_ext/src/example.i,distutils/tests/swig_ext/src/zoo.cc,distutils/tests/swig_ext/src/zoo.h,distutils/tests/swig_ext/src/zoo.i,distutils/tests/swig_ext/tests/test_example.py,distutils/tests/swig_ext/tests/test_example2.py,distutils/unixccompiler.py,distutils/vastfcompiler.py,setup.py
c5b2e41bac0cd57ff49863cdd90d409479d981f7,"Trying to delete CodeGenerators
"
27aebeea0a62ca56c6f3d39c9c43722d8888f935,"Adding base
",base/CodeGenerators/generate_array_api.py,base/CodeGenerators/generate_ufunc_api.py,base/CodeGenerators/generate_umath.py,base/_na_imports.py,base/_nc_imports.py,base/fastumath_nounsigned.inc,base/fastumath_unsigned.inc,base/fastumathmodule.c,base/include/scipy/arrayobject.h,base/include/scipy/ufuncobject.h,base/isnan.c,base/mconf_lite.h,base/mconf_lite_BE.h,base/mconf_lite_LE.h,base/numerix.h,base/setup_scipy_base.py
618a8d472a36506eb5848009f10585f7c63da799,"Added base
",base/CodeGenerators/generate_array_api.py,base/CodeGenerators/generate_ufunc_api.py,base/CodeGenerators/generate_umath.py,base/__init__.py,base/arrayprint.py,base/convertcode.py,base/core_version.py,base/function_base.py,base/matrix.py,base/numeric.py,base/numerictypes.py,base/oldnumeric.py,base/oldscipy.py,base/ppimport.py,base/records.py,base/setup.py,base/shape_base.py,base/src/display_test.c,base/testing.py,base/tests/{test_fastumath.py
951cdad1a9b0a15b673bf56aecc1fef5066061f3,"renamed directories
",{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_base,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_distutils,{scipy_test,{scipy_test,{scipy_test,{scipy_test,{scipy_test,{scipy_test,{scipy_test
c261078e9c2d8fd958bf8b3758cdd07add5fc2e3,"Updated for weave support for numarray.
",scipy_base/_na_imports.py,scipy_base/_nc_imports.py,weave/accelerate_tools.py,weave/blitz_spec.py,weave/blitz_tools.py,weave/catalog.py,weave/converters.py,weave/doc/tutorial.html,weave/examples/array3d.py,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/ramp.py,weave/examples/ramp2.py,weave/examples/vq.py,weave/examples/vtk_example.py,weave/examples/wx_speed.py,weave/size_check.py,weave/standard_array_spec.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_ext_tools.py,weave/tests/test_inline_tools.py,weave/tests/test_size_check.py,weave/tests/test_standard_array_spec.py
e3af03ce32b7e2b2f6d680bf06f73e43f599ba74,"Testing oliphant account
",test
1bed02eb8750472471f9a9069b653db9fd5ebeae,"Testing oliphant account
",test
a338b8d39db9f668d026d9bbd454d62b70908de7,"Test commit.
",scipy_base/_na_imports.py
31b7554ee5d11c6fe87d8919498097a71949cae5,"Cleaning up test file
",test
98d71b5470da919482602651a1c6b46422e159f1,"Testing switch to digest authentication for repo
",test
05b4249207b88c68ab4aa86a00f372fef3b70d2b,"Cleaning up test file
",test
c868315d38d03dad0881abd863863f77eda5af7c,"Testing scipy_core subversion repository
",test
a3b7a7887755b1241f939b8440e8cbd43baf18b5,"Added gradient
",scipy_base/function_base.py
3ee9684b8750267df0c0b91680b8d7140957dbc8,"Patch submitted by Matt Fishburn <fishburn@MIT.EDU>, adds support for fftw3.
",scipy_distutils/system_info.py
0864a3ef716c2bc873bacb0c531ae84e66424523,"Fixed bug.
",scipy_distutils/ibmfcompiler.py
28fa07959213f32feb105aff6c5bcd802891c032,"comment out 'numerix VERSION' print statement
",scipy_base/numerix.py
68da31f081e81b6f8d5fb2014e9b4ea401bd2ee4,"Python.h must be the first header, before any blitz ones.
",scipy_base/fastumathmodule.c
c9b58a66de068afbb2329ffe401ac9745dcf2416,"Replace non-descript 'None' or 'unix' printed message when recompiling with an explicit '<weave: compiling>' one, issued at the proper location.
",weave/inline_tools.py,weave/platform_info.py
2ff0186a9874cbaf93eb4e209698c6cb978c6160,"Make sure Python.h are the very first headers in auto-generated code, even before blitz/array.h.  This is required by the Python C-API, as otherwise nasty warnings are generated.
",weave/ext_tools.py
c1410bcd80415fcf6b2c4ceffc58257d6b4ff9af,"Add some caching to default_dir(), and close all opened shelves (shelve doesn't guarantee proper flushing unless close() is explicitly called).
",weave/catalog.py
02b1927f359e141e7d0038d526acb27c2d2af049,"Fixed nesting of <emph> for Mozilla on linux (the remainder of the file
was in italics).
",weave/doc/tutorial.html
ab64ab765965f7ef3d7b0e76ae0f1cd76ee3173d,"Fixed the auto-environment setting for NUMARRAY/NUMERIC from NUMERIX.
",scipy_base/numerix.py
76bfd2cef62471cfe6cafd633f0e973cb5901f58,"Fixed bmat
",scipy_base/matrix_base.py
195ab4a92b1d42a6926db3f9095ef774998270cc,"Modifications to support scipy.special for numarray.
",scipy_base/_na_imports.py,scipy_base/_nc_imports.py,scipy_base/function_base.py,scipy_base/machar.py,scipy_base/numerix.py,scipy_base/polynomial.py,scipy_base/scimath.py
4cd1f2cde08d338ef7825b1a610948c7c3e5dc22,"ENH: Added support for SWIG version 1.3.25.  The new version of SWIG has a
different runtime layout.
",weave/swig2_spec.py,weave/swigptr2.py
177e7494f761d3f242f92adc008bf2e7172bcf2f,"Fixed _backend_compiled_base names to _compiled_base.
",scipy_base/_compiled_base.c,scipy_base/_na_imports.py,scipy_base/_nc_imports.py,scipy_base/setup_scipy_base.py
294234cfe5fb36ccbfca47da85ad4c77959fdaa8,"Update for build_ext --backends.
",scipy_base/setup_scipy_base.py
f8ce14cdaa75a24670a531722a9cfdd425eaea55,"Improved build_ext --backends support, setup.py files should not use numpy_info anymore, build_src takes care of that.
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_src.py,scipy_distutils/system_info.py
61b97765779d669db1f014e9c4ef8787dafef27a,"Added swig_opts introduced in Py2.4
",scipy_distutils/extension.py
f8929d2f79dc9b1e3abef1e1b15b0b5577bbcd3e,"Clean up
",scipy_base/setup_scipy_base.py
64fb0eeb6af126e9757435c90c5d9165dc783881,"Fixed bug in build_ext --backend support, expose also ext. module private names to backend wrapper.
",scipy_distutils/command/build_src.py
ebf0bc4e3e0fd00d0fd0c86faf2744004d4c4346,"Added g95 compiler support (thanks to Bill McLean)
",scipy_distutils/fcompiler.py,scipy_distutils/g95fcompiler.py
d851d5a9e8d6689ee28e8be873b30d631cff7039,"Fixed the detection of __file__ existence.
",scipy_distutils/system_info.py
ef6dabc7a250e42f1fef7c7a684b1fbcbc221e01,"Firstly, fix FORTRAN fix for Fink.
",scipy_distutils/gnufcompiler.py
b5ec49d17c699cc58510a9159a3e9832b06888d6,"OSX fix for g77
",scipy_distutils/gnufcompiler.py
3ac42a6d78dda727f25dc44d08b9c1539b502203,"Introduced --backends option for build_ext command, when used then also build_src must be specified.
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_src.py
7aad76ae379cef2f3f12115fc080832af474dfc0,"Applied patch by Brent Leback from the PG.
",scipy_distutils/pgfcompiler.py
661570f96cdb7b12448d64b965edefed98f40436,"Added not about -g77 and -DUNDERSCORE_G77.
",scipy_distutils/absoftfcompiler.py
2974e97c9f4c6b4f5280950ea9d77b81711ecf2c,"Fixed version numbers.
",scipy_base/scipy_base_version.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,setup.py,weave/setup.py,weave/setup_weave.py,weave/weave_version.py
ba85fbb3f0b7de0413d18bbaf018c26e7623ee08,"Renamed Scipy to scipy (as there are packages like scipy_base etc).
",setup.py
52e79768740eec62156261bcfa7cf52caaf32fa9,"Removed obsolute file. Using MANIFEST.in should be avoided, all source files should be listed in setup_...py files.
",MANIFEST.in
94d664637f86a02327efa902bc29b82dec58679c,"Fixed bdist_rpm command.
",scipy_base/setup_scipy_base.py
a2d94a2384f0acc84d330d1f19c0415e46d88a58,"Added scipy_base/_compiled_base.c since it is used at build time but
not included literally in any Extension, only as a renamed copy:
e.g. _na_compiled_base.c.
",MANIFEST.in
de989a16fbc7aa77285b92aba139c381941658b2,"Fixed importing ScipyTest.
",scipy_test/testing.py
7d4fc577dac461a0d87361e3074cb2a7f3b43a65,"numarray merge, continued.
",scipy_test/testing.py
ab288fa1426e8a48bee09c517c90964882ddbef1,"Merged numarray branch onto the main trunk.
",scipy_base/__init__.py,scipy_base/_compiled_base.c,scipy_base/_na_imports.py,scipy_base/_nc_imports.py,scipy_base/_scipy_mapping.c,scipy_base/_scipy_number.c,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/info_scipy_base.py,scipy_base/machar.py,scipy_base/matrix_base.py,scipy_base/numerix.h,scipy_base/numerix.py,scipy_base/polynomial.py,scipy_base/scimath.py,scipy_base/setup_scipy_base.py,scipy_base/shape_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py,scipy_distutils/gnufcompiler.py,scipy_distutils/system_info.py
bbc46872ab69ba9334580288c1f86788007ad424,"Pearu's ATLAS detection fix for Python built in debug mode.  In debug
mode there's extra ref count output which was screwing things up.
",scipy_distutils/system_info.py
54e300d091cdb40e194855b258d5721920df7191,"Switch to -O2 for gcc <= 3.3.3 rather than gcc == 3.3.3.
",scipy_distutils/gnufcompiler.py
5d776d8493fd3981f0349df78bccd09a593e3fbf,"Fixed test failures.
",scipy_base/tests/test_function_base.py
f4dfb7000c7ffa57f5bc8a557d193e8178089b49,"Applied Todd's patch.
",scipy_test/testing.py
246665b81b2954a63c0400f870d85aeac111117e,"Backed out numarray ""fixes"" to avoid confusing issues;  numarray doesn't
need these changes per see,  scipy as a whole does.
",scipy_base/tests/test_function_base.py
7486383fcac6a24b7bad9caff08c2dcdd7573353,"Added cross_correlate, array2string, ArrayType.
",scipy_base/_na_imports.py
bbeded3ab95b718b3f4da97db7bcba900059744b,"Removed try/except from imports because it masks problems in the
""numerix era"".
",scipy_test/testing.py
f29481bbf2ec6ece13670e0f419c6dcb6da8bad0,"Try harder to find ATLAS version.
",scipy_distutils/system_info.py
6f8a23d5a780568bc05ff238c724409214d2ba52,"Reverted switch from alltrue() to all() after Pearu pointed out that
the arrays in question were already raveled so the two calls are
equivalent.   Added code so that assert_equal() and assert_almost_equal()
will defer to assert_array_equal(), etc. for array parameters.
",scipy_test/testing.py
bc05123388bec5c8b554eee92ae99d01b7cc64ec,"Fixed assert_almost_equal by using around() instead of round().
",scipy_test/testing.py
8ab36c8b444c934c2aeefc624717dada6288ee5d,"Fixed missing import for isfinite() by qualifying with _nx.
",scipy_base/function_base.py
64b26de9e3563a6ecac306770267656168f47ea6,"Fixed parenthesizing problem in _fix_real_lt_zero revealed by
scipy-level self tests.
",scipy_base/scimath.py
5b13d29c4a5612eb182418e5de55c8374619ee5c,"numarray port ""first draft"" changes.
",scipy_base/__init__.py,scipy_base/_compiled_base.c,scipy_base/_na_imports.py,scipy_base/_nc_imports.py,scipy_base/_scipy_mapping.c,scipy_base/_scipy_number.c,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/info_scipy_base.py,scipy_base/machar.py,scipy_base/matrix_base.py,scipy_base/numerix.h,scipy_base/numerix.py,scipy_base/polynomial.py,scipy_base/scimath.py,scipy_base/setup_scipy_base.py,scipy_base/shape_base.py,scipy_base/tests/test_function_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py,scipy_test/testing.py
7d87fa78d5658ae8ea96e3676970c1fbfd5f4743,"Removed HideException feature. Using isrunnable hooks instead to get the number of test suites correct.
",scipy_test/testing.py
c2920f65f6ed634c65cce600d6f0f050a843ed3c,"Using -O2 with gcc-3.3.3 to avoid test failures.
",scipy_distutils/gnufcompiler.py
b89d967cf6cc65a24695cf0ef60817c638d52f7c,"Fixed displayed number of tests.
",scipy_test/testing.py
47a598cc76731b33f96aaba91f1f7b94535c7bcc,"Introduced HideException. Fixed docs.
",scipy_test/testing.py
c1361c857a2f28db25e4af652e0fc6de3fd3ad76,"Fixed getfile wrapper and wrapped inspect.getsource.
",scipy_base/ppimport.py
77c240ac4ddb6afb56caf729f85b07660d35fa1e,"Expose ppresolve.
",scipy_base/__init__.py,scipy_base/info_scipy_base.py
55d5de4c0bafe946e5030f0687a34ed5fac05277,"Doc fixes for livedocs.
",scipy_base/type_check.py,scipy_distutils/info_scipy_distutils.py,scipy_test/info_scipy_test.py,scipy_test/testing.py
afdbe1880e03014b8a1076005af858d4e52e85fa,"Join code segments with newlines in between.
",weave/ext_tools.py
537e4ea67dde56d26165d7351677d83fad016189,"mintypecode() supports array arguments.
",scipy_base/type_check.py,scipy_test/testing.py
ed2479c295044698c3e6fdc2b359aef67f49dd93,"ENH: Updated to support recent versions of SWIG in addition to the older
versions.  The SWIG runtime layout has changed recently (1.3.23).  The
changes allow one to use both the older versions and the latest versions.
",weave/swig2_spec.py,weave/swigptr2.py
bc2f8ecedb5d8a9ced56990d2add37db10c9a7d2,"Docs for livedocs
",scipy_test/__init__.py,scipy_test/info_scipy_test.py,scipy_test/testing.py
34a21aee2e40d73183a4a1065cd087d2699e28ff,"Bug fixes in from_template. Added docs for livedocs.
",scipy_distutils/__init__.py,scipy_distutils/exec_command.py,scipy_distutils/from_template.py,scipy_distutils/info_scipy_distutils.py
6f974f1368fc28b4e84817a9610501cea9709695,"Skip 'No test file..' messages in cases of info_, __cvs_version__, _version .py files.
",scipy_test/testing.py
7bcfe0c1e4406447cca642a5adcfc4722bd9d70d,"Revised from_template (bug fixes, new features, support including .src files).
",scipy_distutils/command/build_src.py,scipy_distutils/from_template.py
ca66987fb5950d43d49934f8bf223ff2dab4a5b9,"Implemented mintypecode.
",scipy_base/info_scipy_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py
3cf56bb2a070cdc2acb0504854dd4b0b909b09fb,"Added support to use additional libraries.
",scipy_distutils/system_info.py
7ea493414d1f9c08b21220463d21ba67073ddde3,"Workaround Issue 202.
",scipy_base/shape_base.py
c91771e89f91d95060792afd60cd6847a58f1fb5,"Improved tests usage string.
",scipy_test/testing.py
0d6053f6e8f0f63e5c99ebb883f49efac7b1b2b5,"Testing Issue202. Seems like a Numeric bug.
",scipy_base/tests/test_shape_base.py
d7be70e24ed80b40249caf8ed6425cb3238e1ec2,"Changes for livedocs.
",scipy_base/type_check.py
7a926be3075dd8eba8ede8ffaaef1f66b48373e8,"added '\\n' to separate some of the generated code better.
",weave/ext_tools.py
06a0482f8a6a4863db5982baaca5130cdff0511e,"Minor modif.
",scipy_distutils/gnufcompiler.py
a80bdeb4966c571cb4d8f0515545dc4e23ebac7f,"Added .M attribute to altered numeric arrays.  Fixed more documentation issues.
",scipy_base/_compiled_base.c,scipy_base/index_tricks.py,scipy_base/info_scipy_base.py,scipy_base/matrix_base.py,weave/info_weave.py
f5cbab15d777f1be190ee76c521623eccf742180,"set_verbosity returns previous verbosity level.
",scipy_distutils/log.py
2a9e78cf02b4a551df4f6b5b7fe6f5b6b254d295,"Added missing numpy_info usages. Bug fixes.
",scipy_distutils/from_template.py
16a836f7d4d62b45a8bb15948cbabac9a1dae70f,"Introduced PTATLAS env variable, allows to disable threaded atlas. system_info.py shows info classes specified in command line or all if none given.
",scipy_distutils/system_info.py
e82e1073603f86035b075fa2b10f57db57d7b901,"Documentation fixes for livedocs.  Added agm function.
",scipy_base/info_scipy_base.py
e889835cc8f50f505fea013f2caa3f5feb8d3a4b,"Backport to Py2.1
",scipy_test/testing.py
9c184f64dd242e08654b84b385a1f1e99971eaa4,"Fixed circular fastumath import (triggered by test_stats and scipy_base).
",scipy_base/setup_scipy_base.py,scipy_test/testing.py
8c22633560a4d977836f09828826b0d9c21e96aa,"Use correct Numeric headers to avoid conflicts between different Numeric versions.
",scipy_base/setup_scipy_base.py
337581c54f285f88bded55b6dbd50cc28cfcde38,"Clean up.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
eac24cf48d7ca152e8a7fb59305e119dce778cfe,"Fixed the order of including math.h to support freebsd.
",scipy_base/fastumathmodule.c
40b324c0cb3092eba16a641b08b5b1ba67edf4f0,"Fixed dir().
",scipy_base/ppimport.py
932e8becfb3ad5bd3f7bb1de237c15e79aa1f00c,"Fixed dir on ppimported modules. Fixed doc-strings of ppimport-wrapped functions.
",scipy_base/ppimport.py
b2da802ab368099c8efb502d7953d6a267e43bd2,"Fixed quering info of a module with postponed import from ipython.
",scipy_base/ppimport.py
3d6d59146b4a270e27293614d67f0a4b33947500,"Using -lm for linking fastumath (support freebsd).
",scipy_base/setup_scipy_base.py
c93e129cda9a1f380bb3abdeb481284086a53982,"Force -UHAVE_INVERSE_HYPERBOLIC on freebsd4 and win32.
",scipy_base/setup_scipy_base.py
92a567734599080b8c7a086d7a2a21d7cf1a15c1,"Impl. inverse hyperbolic functions (copy from Numeric), freebsd seem not to have them.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
7fad517ca39ee524c5d50756ae80ee1624884aa5,"Fixed atlas,lapack names for freebsd.
",scipy_distutils/system_info.py
40eb4c06fbb8264ddf06928105d7c1344f5663f3,"Introduced asfarray.
",scipy_base/type_check.py
e5b148d33a0e3a03036e036a6cd2bcfa13bc2d7a,"Fixing setup.py build_ext -O..
",scipy_distutils/fcompiler.py
01ac8b980da771f89f273229bf089d977fc2ae78,"Minor fix.
",scipy_distutils/command/build_src.py
99f4811d4fae485fd1b5be8a8d6410c5cb21071a,"Fixed undefined symbol error in importing atlas_version ext. module when using 3.2.1_pre3.3.6 atlas libraries.
",scipy_distutils/system_info.py
2c408050c127c8155b36ac61e0e3d0e095dd1f1e,"BUG: Add missing right parenthesis.
",weave/ext_tools.py
8a844dd8e0bbb5168884d5ea9f6e37fc6275104a,"removed  ""file changed"" print statement
",weave/ext_tools.py
f42b743431beed95b0b354e091133b66aecd50f0,"Fixed from_template so it doesn't lowercase automatically
",scipy_distutils/from_template.py
f25ec90c77c0631e5bf29aac1ef37ae39e60ebd9,"Merge from v0_3_2 branch.
",scipy_distutils/system_info.py
1638e8adc9d4c2350f4e3e1028c10d6a8072939f,"Improve resource detection when prefix is given in env. variable.
",scipy_distutils/system_info.py
fd66cf94a14d8291fc5028b8e82eb086893dc21d,"Fixing 0.3.2 release branch.
",setup.py
629c9a8a6f331d26dbadaaf4efb2e4e96b8a31e3,"Fixing 0.3.2 release branch.
",scipy_base/scipy_base_version.py,scipy_distutils/fcompiler.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,weave/weave_version.py
dbc51126bb33edcd6455af1eab5b357753a6eb27,"Increased micro version number and undone 0.3.2 release.
",scipy_base/scipy_base_version.py,scipy_distutils/fcompiler.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,weave/weave_version.py
3a8d4dcb68555a37ef31b2cdf0d09c50021be422,"Prepearing for the 0.3.2 release.
",scipy_base/scipy_base_version.py,scipy_distutils/fcompiler.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,weave/weave_version.py
68603ef3f6378c318c722e3bc44d581b1d9be894,"More changes to get rid of whrandom usage.
",scipy_test/testing.py,weave/examples/dict_sort.py,weave/tests/test_size_check.py
46fc1b2afbbc5c5c10fb9159345aca22074e4014,"Fixed issue 179.
",scipy_base/function_base.py
a942a40d9809f203e045b4f5772356707913bf3a,"Improved failure message on shape mismatch.
",scipy_test/testing.py
e88796b408138f0dbe1da2eb0ef261d1d805b296,"Added documentation fixes and comment changes.
",scipy_base/fastumathmodule.c
be274e75b825690990419300f51475dd87256385,"Fixed bdist_rpm for scipy_core.
",scipy_base/setup_scipy_base.py
b77d7f9af842bc84e40713b22b614c67a93623ce,"Added has_sse3 and gcc-3.4 flags for Opteron and Athlon 64 cpus.
",scipy_distutils/cpuinfo.py,scipy_distutils/gnufcompiler.py
bb6b4f440d3f46f1644ef85663706c30802052a1,"Alpha is always 64-bit.
",scipy_distutils/cpuinfo.py
90f61af37ffc5219f3721a14c3820d43819cd783,"Added is_Athlon64 and is_64bit methods.
",scipy_distutils/cpuinfo.py
5000b0e62f4e9f7d6b2cf01eab6cb66c0a70477c,"Exit gracefully from interpreter shutdown.
",scipy_base/pexec.py
45b7bb2f7ae441343634ec61d6392fdae236a3d9,"logical_* type fixes
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
96777198fda175de0f53b8a2a36cc693fe4f50a3,"Fix for matrixmultiply != dot on Numeric < 23.4
",scipy_base/__init__.py
75e1e94fc2b5525ffbcf70d2b4b576f79c7a2b5d,"Added wrappers to iterative methods
",scipy_distutils/from_template.py
b0857cc57dccd84487452f805994e38b22deb5d8,"Forced casting on logical_xor.  Is this the needed MAC fix?
",scipy_base/fastumath_nounsigned.inc
f1d3571881b90ecba72fdc9efff8502eff5721a2,"Undid changes to fastumath_unsigned.inc
",scipy_base/fastumath_unsigned.inc
462dd1ec5c23531ea48a38051045a6bbf103b6b3,"fixed fastumath logical functions on PPC Darwin platform
",scipy_base/fastumath_unsigned.inc
a07374817cf8b52f6f0faefaa18087b7427f48e6,"typo fixes and OSX fixes
",weave/base_info.py,weave/c_spec.py,weave/inline_tools.py
9cdf0256bb7afe60998309d643d97bc09c97662c,"NEW: Simple example to show how one can inline C++ code in Python to
manipulate VTK objects.
",weave/examples/vtk_example.py
c4bf083489292db51c65783e3064cc2ed1770dbd,"NEW: Added example code to show how SWIG2 wrapped C++ objects can be used in
weave.  The source for the SWIG wrapped extension modules are also included.
",weave/examples/swig2_example.py,weave/examples/swig2_ext.h,weave/examples/swig2_ext.i
7f3e33a19aee4ee1b935aa5baa0df64f8586a0dc,"NEW: Added a simple example to demonstrate how to access a 3D Numeric array.
",weave/examples/array3d.py
f36a4af7c0be0a4b0094e1498a77e72c72b68201,"ENH: Updated to transparently support SWIG wrapped objects that use a
PyCObject and not a string to encode the pointer to the C++ object.
",weave/swig2_spec.py
d6fd1be000987221bf1c2f246cb8c9f716a3931f,"Applied patch from scipy issue 189.
",scipy_distutils/cpuinfo.py,scipy_distutils/intelfcompiler.py
644c97aba1a1afc4d919db15de101dc6109b47f8,"Fixed scipy issue 190
",scipy_distutils/log.py
30959d105d64becd1ddbac1d6ee6c9e0bf747e29,"Fixed help for quering non-existing modules, e.g. keywords.
",scipy_base/ppimport.py
a48e9f9d44945ac3c18cc2ec34c1a3a68ef8e989,"Backport to Python 2.2 and earlier.
",scipy_distutils/setup.py
623d2ad8a296fd0aa61cb0ca734d15a8a25aea01,"Added comment about requiring swig 1.3.14 or later.
",scipy_distutils/command/build_src.py
a599dbbab72097dae4d16a571a51d2e4531868c6,"Backporting CCompiler.compiler hacks to Python <=2.2 distutils, fixes scipy issue 188.
",scipy_distutils/ccompiler.py,scipy_distutils/fcompiler.py
28efcb484f542d89ca9098b898b66a40d6711251,"Fixed typos.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py
58d2cf6ae5024d3d7789d7f6621a9fb88dcbefcc,"Fixed more problems with alter_numeric scalar conversion
",scipy_base/_scipy_number.c
52d1559c000525a03906f409001dff6f395daa34,"Fixed typo.
",scipy_distutils/MANIFEST.in
a0b4476d08c59da74eb64cbcc92621cad160fbce,"Clean up sys.path after scipy_distutils has been imported.
",scipy_distutils/setup.py
a3833372be84c3fa64f6f40c83b6c868378a9e33,"Introduced setup.py to make scipy_distutils as a standalone package.
",scipy_distutils/MANIFEST.in,scipy_distutils/setup.py
56e7378a8c5bf0b73ec7fe7d024e5f11a5936d2b,"Try harder to find xlf version number when it's not available in xlf output.
",scipy_distutils/ibmfcompiler.py
0018b019b5c61ab41fd00f2651f6021f47344c0a,"Fixed segfault problems on windows due to passing Py_complex as return value of function between program segments compiled with different compilers.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
96c02556e6495c3839c2b86040d2212b0cbd1240,"Fixed segfault bug affecting Windows computers.  Problem related again to using functions that pass structures (complex numbers) in between different comilers.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c
4c0b541206aa5a48e27b68857831a53a0dc243a6,"Fixed compiler choice for .f files containing f90 code in free format.
",scipy_distutils/fcompiler.py,scipy_distutils/intelfcompiler.py
2f080bcf577a3d641cb1e7cd2069314547c22855,"Updated from_template to avoid recursion errors and fix bug.
",scipy_distutils/from_template.py
965e6c6979cf1a73c5667a9595f0c19a28abbb9a,"Fixed incomplete spec Issue160
",scipy_base/index_tricks.py
11d0364d0619430e3af464084d3ee11ab67d9da9,"Fixed version pattern for newer ibm compilers.
",scipy_distutils/ibmfcompiler.py
8376d1ab237f69630f4b10cebe67a61d3ef3755b,"Fixed major bug in vectorize causing segfaults when one argument was broadcast to another
",scipy_base/_compiled_base.c
594170abe8e64e055879153e6e9fa6e931e24318,"Fixed compaqfcompiler module switches.
",scipy_distutils/compaqfcompiler.py
3ff97f13412f51a3e21eb1cb9f6a1288060eb1f1,"First draft of new (no-python-scalar coercion model).  Some tests are failing with precision errors.
",scipy_base/_scipy_number.c
b8d812d6a84c88f92b3fcd0f6cd564e34e661f02,"First crack and ignoring Python scalars for coercion.
",scipy_base/_compiled_base.c,scipy_base/_scipy_number.c
f6922a878434b24377a782d9478d56004342eaed,"Added fixes so structure for altered coercion model will at least compile -- no altered coercion yet...
",scipy_base/_compiled_base.c,scipy_base/_scipy_number.c
8b67a9fae71dae3e018b6e789ff4e1a2ad3d9216,"Fixed abs(array([3,4],'b')) bug.  Placed in structure so that coercion model can be changed (just need to edit setup_types).
",scipy_base/_compiled_base.c,scipy_base/_scipy_number.c,scipy_base/fastumath_unsigned.inc
e028a1d910849c0b0be1a3582103f28cc449584a,"Fixed absoft version pattern. Wrapped distutils gen_lib_options: fcompiler.library_dir_option may return a list.
",scipy_distutils/absoftfcompiler.py,scipy_distutils/ccompiler.py
36bc78e52f85a8962b141719d7116a82c9e583f9,"Optimizations to fancy indexing.
",scipy_base/_scipy_mapping.c
44b762b82a8bf28905b6f57da816dab4dc07654c,"Added index and masking to arrays.  Run scipy.alter_numeric() to enable --- not enabled by default for now...  a[a>3]=10  now works.
",scipy_base/_compiled_base.c,scipy_base/_scipy_mapping.c
b7bcfbf97dc0ba56c38836100569cc88893d5dfd,"Working on absoft compiler support for mingw32.
",scipy_distutils/absoftfcompiler.py
8cb093e477835184ffa5241f70beee2f5b9b41f4,"Fixed typo.
",scipy_distutils/misc_util.py
3b388b10d782ac2b6d47f84beadfc0042eaf9328,"Disabled macros for all fortran compilers.
",scipy_distutils/command/build_ext.py
c22e382f686069543319758802e8e715c61c8f34,"Absoft requires win32 path even when called from cygwin environment.
",scipy_distutils/ccompiler.py
689f291f5e7d194b946319d12ac6292e1280ef2a,"Absoft requires win32 path even when called from cygwin environment.
",scipy_distutils/absoftfcompiler.py,scipy_distutils/misc_util.py
f6602c82639b5b7bb136419100836fa938e1d375,"Added gdk and gdk-2.0 info classes
",scipy_distutils/system_info.py
f6784ffb514bc1ba11cf4275f7b169fd1239cdb6,"-D -U options to xlf compiler have different meanings than (un)defining cpp variables. So, disabled macros for ibm compiler.
",scipy_distutils/command/build_ext.py
91616599b6b0695a4f6d3f847133a087a3ed7808,"pkg-config has --cflags instead of --cxxflags
",scipy_distutils/system_info.py
9ccc30d1342341dd1ce45465ab24434d319f4385,"Fix distutils.util.split_quoted for white-space-less words in quotes.
",scipy_distutils/ccompiler.py
924e9e387941cb4f3eef65fa71ee1262c54198a0,"Preparing to fix bdist_rpm bug when setup.py script does not exist.
",scipy_distutils/command/__init__.py,scipy_distutils/command/bdist_rpm.py,scipy_distutils/core.py
43e98306f8bab81362184bd9daf34afc0b51af3c,"Fixed bdist_rpm failure when a file name contains spaces.
",scipy_distutils/command/install.py
4d918dd423830709db64332fe8758b81246c23c8,"Adding 'scripts' to default configuration dict.
",scipy_distutils/misc_util.py
6822f58ef9231b297ff5dbd5a482621ddb22536d,"Two more setup script examples: generation of __svn_version__ and config.
",scipy_distutils/examples/setup_module_config.py,scipy_distutils/examples/setup_module_svn.py
758a1c8fc7e08b1b62d4efc961445d57925065e7,"Fixed target_dir of pure Fortran extensions to include extension names.
",scipy_distutils/command/build_src.py
d1ed079cec3a71e04a867db965061920c1b1d16f,"Support for getting packages from non-package subdirectories.
",scipy_distutils/examples/setup_module_pure_super.py,scipy_distutils/misc_util.py
b7cc0ff045f99119e08a54aab09abc54487384ee,"Added proc.py.
",scipy_distutils/proc.py
03693fb5fa4343165c0f3eeef4d769932a07dc3e,"Handle the case where .svn/entries does not exist.
",scipy_distutils/misc_util.py
ebe4943bab7d6092e9028a72a0482f887a530604,"No need to wrap pydoc.locate. Fixes interactive help() session.
",scipy_base/ppimport.py
77253fbc2388d981c57cdbb9e46f47bceeb554a7,"Few typical setup.py example scripts.
",scipy_distutils/examples/setup_module_pure.py,scipy_distutils/examples/setup_module_pure_data.py,scipy_distutils/examples/setup_module_pure_super.py
afa86a9a82bce5f6d87bb19276a1f140cc1129ae,"Fixed help for postponed attributes. Added docs to overwritten methods/functions.
",scipy_base/__init__.py,scipy_base/ppimport.py
d7b3cd5daa9dac6e8e69ca69c27fd8d5e4041d73,"Refactored code: frame_traceback is quite useful in debugging. Fixed importing all postponed modules when using help().
",scipy_base/ppimport.py
5d6793a718e91906b1e75665ba78c6e02e6a1370,"Fixed bugs. More debugging hooks. ppresolve returns its string argument when it is unable to resolve the object and when ignore_failure is true, this fixes few Arnd cases.
",scipy_base/ppimport.py
038fb06119e7816d30ade395f1dbd4d31d18c5c6,"Cleanup.
",scipy_distutils/system_info.py
5f39b86339d1aee2899001bb763389159dd33685,"Impl. get_build_platlib(). atlas_version is built into temp directory - this should fix bdist_rpm on RedHat systems.
",scipy_distutils/misc_util.py,scipy_distutils/system_info.py
7d34fc5230b2a1df825c65c88cc7c1805803c28a,"Introduced include_only boolean argument to get_subpackages.
",scipy_distutils/misc_util.py
14a9cf6cef58567a2903b94af01f6b2686e0105f,"Cleanup.
",scipy_base/ppimport.py,scipy_distutils/misc_util.py
91b24babbe5dd3b09dfdf2ff08ee8974b6d59290,"Fixed bug where targets of different extensions had the same file name and so caused silent name conflicts.
",scipy_distutils/command/build_src.py,scipy_distutils/misc_util.py
2c114c6edb99f2e6922e199d42063ffa37709f20,"Added debugging hooks.
",scipy_base/ppimport.py
7a6dba8288dc9fb908454acd41c0d0a210fc0538,"Also pydoc.describe needs ppresolve wrapper to get title right.
",scipy_base/ppimport.py
1416eaa75e2d5dd0ba845ece4b9bd9fa4b8fba02,"Renamed realize to ppresolve. Fixed help('scipy.modulename') issue.
",scipy_base/ppimport.py
6f911baa014ebdbcc52916fecfdb5cc8fb8493ec,"Impl. ppimport.realize. Fixes help(module.attribute) bug.
",scipy_base/ppimport.py
07b23a559d634f6740470aec995bc5bf03f53b7b,"Backport to Python <=2.2: cannot use slice object for strings.
",scipy_distutils/from_template.py
f3e93c709c312fe3a8914acdd31aeb659fecdec2,"Don't scan build directory for modules.
",scipy_distutils/misc_util.py
be1d0a5c4163b65d9717724c612e718c42721d93,"If extension has no sources then there will be no output. Fixes bdist_rpm command.
",scipy_distutils/command/build_ext.py
4350ab085c7bf9377540affd8a03caf3bdf436ec,"Disabled hard-linking when creating source archives to avoid modifying (changing eol-style) files in source tree. When enabled, modifications will be undone after an archive is created; however, dos->unix->dos is not always identity mapping (e.g. try on chaco/wxplt.py) and that's the reason for always making a copy.
",scipy_distutils/command/sdist.py,scipy_distutils/line_endings.py,scipy_distutils/misc_util.py
6e1a504e44931160134310d3b46a4cb3b164ed59,"svn revision number must be int.
",scipy_distutils/misc_util.py
7849a6df2b49453bb04d853f0820922d7e49fed5,"Refactored get_svn_revision from generate_svn_version_py.
",scipy_distutils/misc_util.py
64bc6e30bbf6b685bfbaefad8f05f25ec262b2cb,"Minor enhancement for generate_svn_version_py.
",scipy_distutils/misc_util.py
4434fb112e31cb430942b4e7ef07f5506a77650f,"Impl. generate_config_py and generate_svn_version_py functions
",scipy_distutils/misc_util.py
0cc9384357ab687bf0d65c775432955551453c63,"Improving sparse support.
",scipy_distutils/from_template.py
e4bc886115139a34446a06ad56958dacd25407d0,"Don't build extension module when there are no sources. This allows generating arbitrary .py files within Extension.
",scipy_distutils/command/build_ext.py
16628c97ecaf4937f642f80c0a14fd88f1e1777a,"Added template source support using simple rules
",scipy_distutils/command/build_src.py,scipy_distutils/from_template.py
7b9ac412223fbb7e94511cc338818f3832cf4aea,"Expose only process_str
",scipy_distutils/from_template.py
8353a2487c8eaf285685fc8ed0ff3ab676e3ef0b,"Added function to construct source files from a template.
",scipy_distutils/from_template.py
463f9a10a8cf377d74f5be69b0b84e9526ce5fab,"Fixed missing writeln in dummy_stream.
",scipy_test/testing.py
bf5e48a4e989d558056a55ab7a7e265bf0af3bd6,"Fixed find_executable(exe) when exe is symbolic link (as for example g77->/usr/bin/colorgcc).
",scipy_distutils/exec_command.py,scipy_distutils/gnufcompiler.py
fb491c20e095e5b43d2fe498309b22689ae1cced,"Fixed bug (len(conf.pop())==2 always).
",scipy_distutils/fcompiler.py
6cd1654b3b99bfb6f6450dbe43f52436508480dc,"Incr. micro version to 1. Enabled CVS version info in version. Enabled arch-dependent Fortran compiler flags.
",scipy_base/scipy_base_version.py,scipy_distutils/fcompiler.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,weave/weave_version.py
5d0f8564be3eefd37a562b35d3a0633bb59c2503,"Fixed bug: target from a source file having absolute path did not end up inside build directory. Should also fix failing build in autotest.
",scipy_distutils/command/build_src.py
40942cffe6ffd4b29cdc0165f423cf9e07c5c96b,"New ext module display_test, provides a robust way to test whether X11 display can be opened or not.
",scipy_base/setup_scipy_base.py,scipy_base/src/display_test.c
64f222c4b80a059ce33c371d540bda6e52aa4b98,"NEW: New modules to enable the use of SWIG2 (SWIG >= 1.3) wrapped code with
weave.
",weave/swig2_spec.py,weave/swigptr2.py
bd392730804a017aa87df2bc4cb895ea7f43b686,"Absoft: using 'f77 -K shared' for building shared libraries and -fpic for compiling codes when version >=8.2.
",scipy_distutils/absoftfcompiler.py
3cb02b56a10d3fe8cf6a7ae7b36e9a2f52661c2e,"Impl. a way to ignore software in the system, e.g. set ATLAS=None to pretend that Atlas libraries are not availiable.
",scipy_distutils/system_info.py
b88d9f6b9cdb70a3adeef3a22b35b90b553bd6b8,"Updates for doing setup sdist.
",weave/setup.py,weave/setup_weave.py
25f3834aae98af7ca61a07fede0db1758acbe365,"Impl. enable/disable functions for ppimport to enable/disable postponed import hooks.
",scipy_base/ppimport.py
cfa247532112f69d1ad8f35a6d5688285e48e19c,"Backport to Python 2.1
",scipy_distutils/exec_command.py
7040550602d55ada25e0bd5cc25a99c6e25dce8e,"Fixed incorrect failure from assert_approx_equal(1.0,0.99999999998)
",scipy_test/testing.py
04f1a58de453e19d8fe853e883912e6650084047,"fixed reference to test_module
",scipy_test/testing.py
796f998cfaf8cba4b65fc32287c7694d1d9b68db,"added missing definition of 'mstr' for use in failure reporting
",scipy_test/testing.py
567a14be00a4638b0dd822909ac50c27ecf979f3,"Ignore None in config_list.
",scipy_distutils/misc_util.py
e2d17727265ab4dccad4c964f7de1bc307f36205,"Setting 'config_fc --noarch' default for the release process (Remember to set it back\!).
",scipy_distutils/fcompiler.py
dec2d0cc7ae07be832c83ca46e0a7f7c5ca5732c,"Pumped up version numbers to 0.3.0.
",scipy_base/scipy_base_version.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py,weave/weave_version.py
e1802e7551ce13ba85d43c7048c52f2920174a4d,"Added number of new info classes.
",scipy_distutils/system_info.py
a1f50a2bf210c590095b4b7a2a2d5f30f6cba615,"Added WX_RELEASE_, WX_VERSION_ macros to wx_info, changed WX_VERSION to WX_INFO.
",scipy_distutils/system_info.py
ec7071edc2ad615b07cbe79e4459145ca53900cd,"Implemented wx_info support.
",scipy_distutils/system_info.py
468a2f286f3a86c984ebfe8d6b81c7ac26de5135,"Return original exe name when not found.
",scipy_distutils/exec_command.py
ed27d887320f710f0af499fba1f141e1f06e1e6c,"Using /Zm1000 when compiling C++ sources with MSVC compiler.
",scipy_distutils/command/build_ext.py
63bbe4c6aa8f95d71b86223e731eba981951c3ad,"sdist: ignore hidden and temporary files
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py
0e692908548f52b8462db02825443594600444d0,"Fixed get_path output.
",scipy_distutils/misc_util.py
58618b0bb463a22a8938dad2a47ce9dda31f7c13,"Fixed --inplace building of swig extensions: .py files are put (by 'swig -outdir') to the same directory where extension files are generated.
",scipy_distutils/command/build_src.py
4a912cbe99930457850aad03dd2f9a44a4ddf58d,"Fixed win32 cmd and msys ports.
",scipy_distutils/exec_command.py
e161453c5b18f2130f5b89bc7dbb7d417aa5b9cb,"Fixed building c++ libraries when using msvc 6.0
",scipy_distutils/command/build_clib.py
d8e22e7e6479aa38b62c53f14ebaf98328131061,"Prepearing to tag scipy tree (unified micro version numbers)
",scipy_base/scipy_base_version.py,scipy_test/scipy_test_version.py,setup.py,weave/weave_version.py
02ede8cb836abf41879998bffb70e962b7e3e2bc,"Workaround for MSVC6.0 when building c++ extensions
",scipy_distutils/command/build_ext.py
442e9dd7b917d1deb7b143d254a2b0e5a986bd3d,"Improved debug messages
",scipy_distutils/ccompiler.py
f061375e2cd34559bb1d08fe7e7d82dc700a1792,"Fixed exec_command when used under win32 cmd and a command contains spaces or is wrapped into quotes
",scipy_distutils/exec_command.py
d838c7960309a819ddd62cbf775bf171a08c5809,"Using os.path.realpath only on posix platforms.
",scipy_distutils/exec_command.py
bea45934772282d176b7e494fbbce118171630dd,"Using _exec_command_posix on sunos.
",scipy_distutils/exec_command.py
2d7c53055afd78acfddb455173498983b8da4993,"Added .F, .F90 to the list of Fortran source extensions.
",scipy_distutils/fcompiler.py
15e2818defa615d38ccfc711cd184d6e643de17e,"Fixed weave.catalog tests and trying to reduce the verbosity of weave usage.
",weave/build_tools.py,weave/catalog.py
6fc96bc3f0ddd57c59f25c29077dbbfecb92f81b,"Introduced recursive keyword argument to get_subpackages.
",scipy_distutils/misc_util.py
f7a8b6da0e2f067bb584303923f24214769cf6af,"Disabled status=998 error for now.
",scipy_distutils/exec_command.py
766c97f887162de06ca60caedbb28252499e464d,"Added test for f2py --include_paths option
",scipy_distutils/fcompiler.py,scipy_distutils/tests/f2py_f90_ext/include/body.f90,scipy_distutils/tests/f2py_f90_ext/setup.py,scipy_distutils/tests/f2py_f90_ext/src/foo_free.f90
b51513377fd4619784f1fa1748037bb7318c81a1,"Fixed exec_command for commands with spaces
",scipy_distutils/exec_command.py
406a04b80cbdfdc457a1723a64c8cc5a8050aaa7,"Introduced reldir argument to set_local_path.
",scipy_test/testing.py
5f5c7744d8d35c362fecca2df2ce556119757362,"Reduced debugging messages
",scipy_distutils/ccompiler.py,scipy_distutils/log.py
3743e36458bcd3750e9edaba192e891633e2e1d6,"Added support to Sun WorkShop 6 F95 compiler (untested though)
",scipy_distutils/sunfcompiler.py
540903640fe0f8bc6be30294f4a213f98676bfcf,"Be verbose when command returns failure status.
",scipy_distutils/ccompiler.py
0d3f9d2ec9b74efde4025961fa79a62c2515ef18,"Disabled use_shell for sun os
",scipy_distutils/exec_command.py
88424c57b68646e5c2e3f202c130e9d6b7c9f4f4,"Fixed _exec_command when use_shell is true
",scipy_distutils/exec_command.py
7712b8989f4e765d0898ca81f36105058a1c5c20,"Fixed displaying log messages that contain % characters
",scipy_distutils/log.py
7bf0e17070f0a95f1e8f5d86716a5a62cd6bc31c,"Fixed duplicate quotation of a command path.
",scipy_distutils/exec_command.py
112824ccfdfab97d98f7939b2d31119d6acb4240,"Fixed compiler_switch
",scipy_distutils/compaqfcompiler.py
840e26184ef327ad193e6c8246fb1f118981971e,"Fixed bug when the fullpath to an executable contains spaces
",scipy_distutils/exec_command.py
db74b2b2b6f420627fb163ac87bfd06633148379,"Handle the case where one of the arguments is scalar in assert_array_equal
",scipy_test/testing.py
6a376b2f578e5455fb440e1a89c0a937d3543dcf,"Fixed local_path for previously commited feature
",scipy_distutils/misc_util.py
0380887ac694b8585420db1a9fc881809c9e1d82,"Deal with pure python subpackages that have no setup_*.py file.
",scipy_distutils/misc_util.py
208baf5040453401ffa6e26c8f48dd4e1917361a,"commented out call to recently commented out __get_cc_args
",scipy_distutils/fcompiler.py
8957ad32bf04dc802ae86caa8bcf11233679e976,"fixed typo
",scipy_distutils/system_info.py
1a08dbbfcd2097776ad67c95e2f64b94c112b78b,"Fixed Apple python test
",scipy_distutils/gnufcompiler.py
0bec5dcc37dd85bf86e5f14df9cd1ba154a7dab4,"changed /c to /compile_only for compaq visual (DF98)
",scipy_distutils/compaqfcompiler.py
c9165603cee9cdb8921e1a41f92267675d049b8b,"Use -framework Python only with apple python, fink python does not need it (as I have been told)
",scipy_distutils/gnufcompiler.py
4d2ead9b70e451408cb184f19c692814ec4781ca,"Added compiler flag for versions later than Absoft 6.2 so that compiler will free memory on encountering a dealloc.
",scipy_distutils/absoftfcompiler.py
8d935d1126580300b0340a5ef65b4ec6378a50d9,"Fixed dependency libraries on absoft compiler.
",scipy_distutils/absoftfcompiler.py,scipy_distutils/ccompiler.py
cf8d1e6eedf7171969771dcec1218a8258d1731f,"platform_info now try to use scipy_distutils and falls back to distutils if it isn't available.
",weave/platform_info.py
9b5b7b2501eeb380c0f9368ed1d0435b3a683c84,"fix to get MSVC compilers working.
",scipy_distutils/ccompiler.py
77976141c814bc23dc283e1eceac416e4c39bb81,"Introduced IgnoreException. When it is raised then scipy unittesting framework does not treat it as an error. Useful when certain features of a package are disabled but testing site contains tests for these features. Added agg_platform_support.cpp to sources list.
",scipy_distutils/system_info.py,scipy_test/testing.py
a96e326af1b0f1084269af3d9f3934a9d357e0ee,"Multiple suites were found when package_name==__main__, fixed it. Now TestCase classes can be implemented also in module sources.
",scipy_test/testing.py
7f73fd1245115768196a07c9676b11eb3806489e,"Fixed several issues with msvc support.
",scipy_distutils/ccompiler.py,scipy_distutils/command/build_ext.py
dbd133aa98ff9b3b100ac6afb9e870b500b62102,"Made debugging messages optional.
",scipy_test/testing.py
339ad8f76b648d545c7435d224bbf349ebfcf264,"Impl. better handling of getting suites from a python script
",scipy_test/testing.py
9760c22f6dbe9789d5fed58f34d3d859c30ad9e3,"Fixed intel compiler warnings, using -72 for compiling F77 sources
",scipy_distutils/intelfcompiler.py
d3f741153b13bcab2fd5d64bf4df179179aea719,"Resolve relative paths in object_filenames: they caused lots of confusion when F90 module files ended up in wrong places
",scipy_distutils/ccompiler.py
5f73e9adae03d01e2cde0e865e5d0505f8ee1376,"Added system_info classes for boost_python and agg2
",scipy_distutils/system_info.py
f1e36acb7c4c7c13290beedbb4e795da5e2f2934,"Remove file from current directory if move failed (presumably because destination file already exists)
",scipy_distutils/command/build_ext.py
4121e33d904e468fcf6c6ee76f4314dfd8a4bd22,"Fixes to use msvc linker on windows
",scipy_distutils/absoftfcompiler.py,scipy_distutils/ccompiler.py,scipy_distutils/command/build_ext.py,scipy_distutils/fcompiler.py
144b7abfd345793c0806e3d8da9e75f2e2e89b5a,"Changed library include directory to append lib
",scipy_distutils/absoftfcompiler.py
1c5dfc8ed54322fb18a078879efb6f009757980f,"Remove dummy cc_args from Fcompiler class so that include files get used for Fortan.
",scipy_distutils/absoftfcompiler.py,scipy_distutils/ccompiler.py,scipy_distutils/fcompiler.py
fa4054de4e5f73ace598a555a194a3ffe35e923b,"Fixed compiler so that Fortran files are built in order specified in sources list
",scipy_distutils/ccompiler.py
301b2cdf4516bf1bd3dc607a7a9cfba0dcdbc625,"Typo in error message fixed.
",scipy_distutils/command/build_ext.py
a7e6a9eb6eae8b13768808638bd679ce820b0c89,"Added module_dirs argument to Extension to specify the locations of F90 modules
",scipy_distutils/command/build_ext.py,scipy_distutils/extension.py
c2dc0fac4ec71a261788c9016e9b5dadfb1b4e7a,"Using local core,log modules instead of scipy_distutils (that might not have be installed yet).
",scipy_distutils/system_info.py
11a9533f9b8aeab20ccbeafb4ba9d9ed1eda0bfb,"Redefine pydoc.help.__call__ method to support ppimport.
",scipy_base/ppimport.py
653e32ff957166f7ed44e1b68492c48d51dc67d9,"cygwin library may have .dll.a extension
",scipy_distutils/system_info.py
fc61a4a68b8425363410d05fb187e97b92ba9eb4,"cygwin library may have .dll.a extension
",scipy_distutils/system_info.py
7c27e97915fff1f185bcc1d9a2cbfbe2ce700df6,"cygwin may have X11 installed
",scipy_distutils/misc_util.py,scipy_distutils/system_info.py
d2ce48c24bf7862c19ac4007b09620cd91830342,"include_packages overrides ignore_packages
",scipy_distutils/misc_util.py
99b67b5437503ec997f21359f250485780e65ebe,"Introduced get_subpackages, it should replace get_package_config and friends.
",scipy_distutils/misc_util.py
91cff85dbd02c76e6f99457691cb7d1b12c3483e,"Added flavor info to fortran compilation message.
",scipy_distutils/ccompiler.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/fcompiler.py
45c0b1e7f0cf7a08758d037d572b2330303f3f05,"Added missing line.
",scipy_distutils/system_info.py
ae77726b67bfdfa56f317001dc0bc134354ae2de,"Warn when merging possibly incompatible libraries (e.g when Lib/xxx and Lib/yyy define libraries with the same name but different contents)
",scipy_distutils/core.py,scipy_distutils/system_info.py
f88e09e8bac6322d7f79f527b737fea12f74f1e1,"Ignore lines starting with tab as it contains no info whether Fortran source code is in fix or free format.
",scipy_distutils/fcompiler.py
442f9ff8e69c2bab175fe3c69eceb5102bdaf3ba,"Restored mingw32_support with no contents so that older f2py2e versions will work with the resent scipy_distutils.
",scipy_distutils/mingw32_support.py
ba9f6c506a6e2ce7266b6904efd88600a08555f8,"Restored mingw32_support with no contents so that older f2py2e versions will work with the resent scipy_distutils.
",scipy_distutils/mingw32_support.py
162bec714f575c1986b4c5ba57a7dbebb15002a0,"Completed support for darwin native blas/lapack
",scipy_distutils/absoftfcompiler.py,scipy_distutils/system_info.py
b90246483e3c5454bb9ee695ff864597804697b0,"Moved get_version to ccompiler.py.
",scipy_distutils/ccompiler.py,scipy_distutils/fcompiler.py
4793e4b15a12846057de815f733fa7b335aeb5e1,"Fixed fcompiler search mechanism (it seems that implementation of compiler search hooks in standard distutils is incomplete).
",scipy_distutils/ccompiler.py,scipy_distutils/fcompiler.py,scipy_distutils/misc_util.py
a29f4f7f7224b4e4ef8ccced4ed4a236f771bfe6,"build_ext takes default fcompiler from config_fc (and build_clib takes it from build_ext).
",scipy_distutils/command/build_ext.py
a6f8c906083c16b1f9be7526c1176b759c71f756,"Introduced notfound_action argument to get_info().
",scipy_distutils/system_info.py
5bad7d20e89c1591395d50c9bbf06c338aa750ea,"Added C++ support to build_clib.
",scipy_distutils/ccompiler.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py
5e29f4af152cdca28dada97b26f10dbeac1dfdd0,"Fixed sdist: .svn contents is ignored and depends in library build_info is used.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py
566f987d8c9dcb5e70df12a98b853be57566f657,"Continue even if get_atlas_version fails. Darwin users can still use atlas if env.var. ATLAS is defined.
",scipy_distutils/system_info.py
f8cab16d06a1189ab2dc008134c1305b258e1cec,"Changing environment in cygwin-win32 mix works. Just echo cannot be used to test it, now using python for that.
",scipy_distutils/exec_command.py,scipy_distutils/log.py
fad43fcf01fbcc68dafb0138893ed4b83f6a4719,"Create libraries if needed.
",scipy_distutils/core.py
29ff231d46e4a9da7e4b491608272e4568eeb172,"Extension.libraries may contain libraries with sources (such libraries must be given as (lib_name,build_info)).
",scipy_distutils/core.py,scipy_distutils/system_info.py
795a70fe2f532c3d734b1a3a496289c4786cb30c,"Undone previous commit as it didn't work: either install scipy_core or set PYTHONPATH=.. in order to call 'python system_info.py'
",scipy_distutils/system_info.py
3dce5df3514532bb09ad97d68b1d1bcf92c1b315,"Fix executing system_info.py when scipy_distutils is not installed
",scipy_distutils/system_info.py
3c0c577cda386b683dd3a59d8cd92422f1009895,"Fixed define macros with string values.
",scipy_distutils/system_info.py
849030cb957becc48b57eb5c854a46bdf4f0df5b,"Fixed issue with win32 paths in a string.
",scipy_distutils/system_info.py
d17128413725a88530a6b62078a3ca8f175dfb29,"Implemented {lapack,blas}_opt_info. It contains darwin support. But note that if vecLib provides only clapack/cblas then it won't work: linalg does not support cblas/clapack yet.
",scipy_distutils/command/build_src.py,scipy_distutils/system_info.py
95068c4cfdddb551b6ee9a4980f25872ae1e85bf,"library sources list may now contain source building functions.
",scipy_distutils/command/build_src.py
9d206bd711194eb5cdc60a5acaa4017c7d67f3e3,"Fixed linking flags for darwin
",scipy_distutils/gnufcompiler.py
152465478656a1bd5be7859f79fe1f4b7365ac93,"Rolled gnu to the end of default compilers for darwin system.
",scipy_distutils/fcompiler.py
f8721a7c4a8bcaa47622be6e49d589da9b0ff5d5,"xlf is acctually F77 compiler. Fine tuned replacing crt->bundle in xlf.cfg.
",scipy_distutils/ibmfcompiler.py,scipy_distutils/nagfcompiler.py
e252edd12120404b9ef8e9334c4b5659ed6d2726,"Fixed typo
",scipy_distutils/gnufcompiler.py
b94984a29f4e4475eb10e8ad777a00e3ab1b5c5a,"darwin: using -framework Python when linking
",scipy_distutils/gnufcompiler.py
7c7526c87ab02d9eabe501f3c5aadc5aca49fbe1,"Forcing new_compiler provided by scipy_distutils (this should fix 'unable to load module' error when using --compiler=mingw32)
",scipy_distutils/ccompiler.py
a1b9fedeb7a87d9eed9eaa5243d61a5514681e9b,"Setting ibm as default compiler for AIX
",scipy_distutils/fcompiler.py
71e73fe209073239bb289e69586dc12ecf8b2db6,"Initial support for IBM XL Fortran Compiler
",scipy_distutils/fcompiler.py,scipy_distutils/ibmfcompiler.py
c22fc07b8971ccd5e0442a897f9fe8e03825de90,"darwin linker_so support for nagfcompiler
",scipy_distutils/nagfcompiler.py
68569c20c5a8775e4ce0a01260d11e8d28753822,"Using new.instancemethod to override distutils internal methods - this is very robust that avoids using nasty import hacks.
",scipy_distutils/__init__.py,scipy_distutils/ccompiler.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/exec_command.py,scipy_distutils/extension.py,scipy_distutils/fcompiler.py,scipy_distutils/mingw32ccompiler.py,scipy_distutils/unixccompiler.py
3317087bc3f28aaebc5e796346e306cbb1828b43,"Reduced scipy_distutils verbosity
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_src.py,scipy_distutils/exec_command.py,scipy_distutils/fcompiler.py,scipy_distutils/gnufcompiler.py,scipy_distutils/log.py,scipy_distutils/mingw32ccompiler.py,scipy_distutils/misc_util.py,scipy_distutils/unixccompiler.py
c74322b996d922f02bcc51d52a0d23083da3f072,"Disableing scipy_distutils hooks in case distutils has been imported before, otherwise I cannot predict what will happen..
",scipy_distutils/__init__.py
b4e50841564d2784f9be309c79244b76ff910b98,"Using prefix where Numeric is installed first.
",scipy_distutils/system_info.py
ff9090a202eb1f66f58962615c2a8b3a003c106b,"Fixed 'invalid distribution option 'fortran_libraries'' error
",scipy_distutils/core.py
18518be6ea10c4e19e919575bc7292a564837f75,"Extension may specify f2py_options.
",scipy_distutils/command/build_src.py
0fd21ac1fa99608fd0d60764ea42688c2c7e7d96,"Merging build_src branch with HEAD.
",scipy_distutils/__init__.py,scipy_distutils/ccompiler.py,scipy_distutils/command/__init__.py,scipy_distutils/command/build.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/build_py.py,scipy_distutils/command/cpuinfo.py,scipy_distutils/command/install.py,scipy_distutils/command/run_f2py.py,scipy_distutils/command/sdist.py,scipy_distutils/core.py,scipy_distutils/dist.py,scipy_distutils/fcompiler.py,scipy_distutils/gnufcompiler.py,scipy_distutils/laheyfcompiler.py,scipy_distutils/mingw32_support.py,scipy_distutils/mingw32ccompiler.py,scipy_distutils/misc_util.py,scipy_distutils/sunfcompiler.py,scipy_distutils/system_info.py,scipy_distutils/unixccompiler.py
ba685a615e597b3070ba54dc9771d44277e886d2,"Using ext.language to find correct linker. Fixed doubles libraries in linking command.
",scipy_distutils/command/build_ext.py,scipy_distutils/gnufcompiler.py,scipy_distutils/laheyfcompiler.py,scipy_distutils/sunfcompiler.py,scipy_distutils/system_info.py
d98f6378a0bb5843984e24668815e8820a6de62d,"Single file libraries (like blas and lapack) can be specified with their corresponding environment variables (BLAS and LAPACK). Usage example: BLAS=/path/to/libfblas.a
",scipy_distutils/system_info.py
c396c0ddd74cc9580682e71e576c50faaad4954d,"Forcing scipy_distutils.unixccompiler because on WinXP long argument list to ar (eg when building lapack) silently crashes python.
",scipy_distutils/__init__.py
0a3bd249b5bbba831618b9f07d7d282a94fa1f85,"Fixed logic of the warning message.
",scipy_distutils/mingw32ccompiler.py
0d5d2277ba7ae30da0762ba396f861ad3f6d50bd,"Disabled debug messages. On WinXP MSYS defines MSYSTEM instead of OSTYPE.
",scipy_distutils/ccompiler.py,scipy_distutils/fcompiler.py
18900e11d111b51a491e7fbf5769c9acb4bf351f,"unixccompiler.py handles very long ar arguments lists
",scipy_distutils/unixccompiler.py
9e9dbee266df63739bb748364bd161c565e2c4c2,"Fixed bug in testing import library. Clean up. Scipy now builds and tests on win32 (tested so on Windows ME, on Windows 98 I get strange import errors)
",scipy_distutils/mingw32ccompiler.py
e404137498444ef2807195408a4ec7de66b83ab9,"Scipy builds under cygwin with build_src branch.
",scipy_base/setup_scipy_base.py
6425c5985e656d022d8d43684b737e93aab4f57d,"Scipy builds under cygwin with build_src branch.
",scipy_distutils/ccompiler.py,scipy_distutils/command/build_ext.py,scipy_distutils/fcompiler.py,scipy_distutils/gnufcompiler.py
aa6fd3365a968a4c322dff8850466aabb96a1c53,"Got scipy_core to build on win32 with new build_src hooks
",scipy_distutils/__init__.py,scipy_distutils/ccompiler.py,scipy_distutils/mingw32_support.py,scipy_distutils/mingw32ccompiler.py,scipy_distutils/misc_util.py,scipy_distutils/system_info.py
0d9e6cd3d9f35efb3a1694a4c5da78f926b452c0,"Only backup part of PyArray_Type array to avoid occasional garbage-collection-related segfault on Python cleanup.
",scipy_base/_compiled_base.c
d82b5a62e22ccef47d5fd4b739cfac20046c7adc,"Added hooks so that Numeric behavior can be changed from within scipy_base
",scipy_base/_compiled_base.c,scipy_base/function_base.py
fcfff555fc0310884802637545dbe4df96b99c35,"Fixed test_nt missing arg.
",scipy_distutils/exec_command.py
78aa98e2bc6b4bc1cb0d39dc8c43a40fc2a96215,"Fixed bug that occurs on win32
",scipy_distutils/system_info.py
ec181525c9e42c4e7371c20c04271e37bcb1264f,"Raise NumericNotFoundError when Numeric is not found.
",scipy_base/setup_scipy_base.py
8ad94b4e44e0de10f7c56170fda10d7f012603a0,"Merging changes (cygwin support) from build_src branch.
",scipy_distutils/exec_command.py,scipy_distutils/scipy_distutils_version.py,scipy_distutils/setup_scipy_distutils.py,scipy_distutils/system_info.py
da3e21058bbbac8c8f53037c8932ca4e05ddb7b1,"Using NOCOLOR env.var to workaround cygncurses bug under cygwin.
",scipy_distutils/command/build_ext.py,scipy_distutils/misc_util.py
23dc54f27a74764ed0ae9e5619f37d35006b7c91,"Using NOCOLOR env.var to workaround cygncurses bug under cygwin.
",setup.py,weave/setup_weave.py
59c6f7c8809104ffcc97e2083529ae4111b41755,"Fixed use_tee=0 case for cygwin
",scipy_distutils/exec_command.py
b04d9606250f384bce67acd98c9accb20dbeb7fa,"Workaround for missing __cvs_version__ which is available only in MAIN branch
",scipy_distutils/scipy_distutils_version.py
90f033bea18a08bbbeef9f83cb3d8b9011b85477,"Added numpy and numarray info classes
",scipy_distutils/system_info.py
c120b008496d24ec4edf2fa036b70d5fcf148fac,"Created branch build_src in order to work on win32 port without affecting scipy HEAD development.
",scipy_distutils/command/__init__.py,scipy_distutils/command/build.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/build_py.py,scipy_distutils/command/cpuinfo.py,scipy_distutils/command/install.py,scipy_distutils/command/run_f2py.py,scipy_distutils/command/sdist.py,scipy_distutils/core.py,scipy_distutils/dist.py,scipy_distutils/misc_util.py,scipy_distutils/scipy_distutils_version.py,scipy_distutils/setup_scipy_distutils.py
e9019344e79916bb6ecb025d6eaad6c691dba258,"Issue with echo tests under cygwin with nt/win32 python is resolved.
",scipy_distutils/exec_command.py
37dcd32b0ebf878d16ea8a7ccdb467047c98be1f,"This commit was manufactured by cvs2svn to create branch 'build_src'.
",MANIFEST.in,scipy_base/__init__.py,scipy_base/_compiled_base.c,scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/info_scipy_base.py,scipy_base/isnan.c,scipy_base/limits.py,scipy_base/machar.py,scipy_base/matrix_base.py,scipy_base/mconf_lite.h,scipy_base/mconf_lite_BE.h,scipy_base/mconf_lite_LE.h,scipy_base/pexec.py,scipy_base/polynomial.py,scipy_base/ppimport.py,scipy_base/scimath.py,scipy_base/scipy_base_version.py,scipy_base/setup_scipy_base.py,scipy_base/shape_base.py,scipy_base/tests/test_fastumath.py,scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_limits.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py,scipy_test/__init__.py,scipy_test/auto_test.py,scipy_test/info_scipy_test.py,scipy_test/logging.py,scipy_test/scipy_test_version.py,scipy_test/setup_scipy_test.py,scipy_test/testing.py,setup.py,weave/LICENSE.txt,weave/MANIFEST.in,weave/README.txt,weave/__init__.py,weave/accelerate_tools.py,weave/ast_tools.py,weave/base_info.py,weave/base_spec.py,weave/blitz-20001213/blitz/MAT-NOTE.gz,weave/blitz-20001213/blitz/Makefile.am,weave/blitz-20001213/blitz/Makefile.in,weave/blitz-20001213/blitz/applics.h,weave/blitz-20001213/blitz/array-impl.h,weave/blitz-20001213/blitz/array-old.h,weave/blitz-20001213/blitz/array.h,weave/blitz-20001213/blitz/array/Makefile.am,weave/blitz-20001213/blitz/array/Makefile.in,weave/blitz-20001213/blitz/array/asexpr.h,weave/blitz-20001213/blitz/array/bops.cc,weave/blitz-20001213/blitz/array/cartesian.h,weave/blitz-20001213/blitz/array/cgsolve.h,weave/blitz-20001213/blitz/array/complex.cc,weave/blitz-20001213/blitz/array/convolve.cc,weave/blitz-20001213/blitz/array/convolve.h,weave/blitz-20001213/blitz/array/cycle.cc,weave/blitz-20001213/blitz/array/domain.h,weave/blitz-20001213/blitz/array/et.h,weave/blitz-20001213/blitz/array/eval.cc,weave/blitz-20001213/blitz/array/expr.h,weave/blitz-20001213/blitz/array/fastiter.h,weave/blitz-20001213/blitz/array/funcs.h,weave/blitz-20001213/blitz/array/functorExpr.h,weave/blitz-20001213/blitz/array/geometry.h,weave/blitz-20001213/blitz/array/indirect.h,weave/blitz-20001213/blitz/array/interlace.cc,weave/blitz-20001213/blitz/array/io.cc,weave/blitz-20001213/blitz/array/iter.h,weave/blitz-20001213/blitz/array/map.h,weave/blitz-20001213/blitz/array/methods.cc,weave/blitz-20001213/blitz/array/misc.cc,weave/blitz-20001213/blitz/array/multi.h,weave/blitz-20001213/blitz/array/newbops.cc,weave/blitz-20001213/blitz/array/newet-macros.h,weave/blitz-20001213/blitz/array/newet.h,weave/blitz-20001213/blitz/array/ops.cc,weave/blitz-20001213/blitz/array/ops.h,weave/blitz-20001213/blitz/array/reduce.cc,weave/blitz-20001213/blitz/array/reduce.h,weave/blitz-20001213/blitz/array/resize.cc,weave/blitz-20001213/blitz/array/shape.h,weave/blitz-20001213/blitz/array/slice.h,weave/blitz-20001213/blitz/array/slicing.cc,weave/blitz-20001213/blitz/array/stencil-et.h,weave/blitz-20001213/blitz/array/stencil.cc,weave/blitz-20001213/blitz/array/stencil.h,weave/blitz-20001213/blitz/array/stencilops.h,weave/blitz-20001213/blitz/array/stencils.cc,weave/blitz-20001213/blitz/array/stencils.h,weave/blitz-20001213/blitz/array/storage.h,weave/blitz-20001213/blitz/array/uops.cc,weave/blitz-20001213/blitz/array/where.h,weave/blitz-20001213/blitz/array/zip.h,weave/blitz-20001213/blitz/bench.cc,weave/blitz-20001213/blitz/bench.h,weave/blitz-20001213/blitz/benchext.cc,weave/blitz-20001213/blitz/benchext.h,weave/blitz-20001213/blitz/blitz.h,weave/blitz-20001213/blitz/bzdebug.h,weave/blitz-20001213/blitz/compiler.h,weave/blitz-20001213/blitz/config-ICL.h,weave/blitz-20001213/blitz/config-KCC.h,weave/blitz-20001213/blitz/config-SC4.0.h,weave/blitz-20001213/blitz/config-SGi.h,weave/blitz-20001213/blitz/config-g++2.7.2.h,weave/blitz-20001213/blitz/config-mwerks.h,weave/blitz-20001213/blitz/config-xlC.h,weave/blitz-20001213/blitz/config.h,weave/blitz-20001213/blitz/etbase.h,weave/blitz-20001213/blitz/extremum.h,weave/blitz-20001213/blitz/funcs.h,weave/blitz-20001213/blitz/generate/Makefile.am,weave/blitz-20001213/blitz/generate/Makefile.in,weave/blitz-20001213/blitz/generate/arroperands.h,weave/blitz-20001213/blitz/generate/arroptuple.h,weave/blitz-20001213/blitz/generate/bzfstream.h,weave/blitz-20001213/blitz/generate/genarrbops.cpp,weave/blitz-20001213/blitz/generate/genarruops.cpp,weave/blitz-20001213/blitz/generate/genmatbops.cpp,weave/blitz-20001213/blitz/generate/genmathfunc.cpp,weave/blitz-20001213/blitz/generate/genmatuops.cpp,weave/blitz-20001213/blitz/generate/genpromote.cpp,weave/blitz-20001213/blitz/generate/genvecbops.cpp,weave/blitz-20001213/blitz/generate/genvecuops.cpp,weave/blitz-20001213/blitz/generate/genvecwhere.cpp,weave/blitz-20001213/blitz/generate/operands.h,weave/blitz-20001213/blitz/generate/operands2.h,weave/blitz-20001213/blitz/generate/optuple.h,weave/blitz-20001213/blitz/generate/optuple2.h,weave/blitz-20001213/blitz/indexexpr.h,weave/blitz-20001213/blitz/limits-hack.h,weave/blitz-20001213/blitz/listinit.h,weave/blitz-20001213/blitz/matbops.h,weave/blitz-20001213/blitz/matdiag.h,weave/blitz-20001213/blitz/matexpr.h,weave/blitz-20001213/blitz/matgen.h,weave/blitz-20001213/blitz/mathf2.h,weave/blitz-20001213/blitz/mathfunc.h,weave/blitz-20001213/blitz/matltri.h,weave/blitz-20001213/blitz/matref.h,weave/blitz-20001213/blitz/matrix.cc,weave/blitz-20001213/blitz/matrix.h,weave/blitz-20001213/blitz/matsymm.h,weave/blitz-20001213/blitz/mattoep.h,weave/blitz-20001213/blitz/matuops.h,weave/blitz-20001213/blitz/matutri.h,weave/blitz-20001213/blitz/memblock.cc,weave/blitz-20001213/blitz/memblock.h,weave/blitz-20001213/blitz/meta/Makefile.am,weave/blitz-20001213/blitz/meta/Makefile.in,weave/blitz-20001213/blitz/meta/dot.h,weave/blitz-20001213/blitz/meta/matassign.h,weave/blitz-20001213/blitz/meta/matmat.h,weave/blitz-20001213/blitz/meta/matvec.h,weave/blitz-20001213/blitz/meta/metaprog.h,weave/blitz-20001213/blitz/meta/product.h,weave/blitz-20001213/blitz/meta/sum.h,weave/blitz-20001213/blitz/meta/vecassign.h,weave/blitz-20001213/blitz/minmax.h,weave/blitz-20001213/blitz/mstruct.h,weave/blitz-20001213/blitz/numinquire.h,weave/blitz-20001213/blitz/numtrait.h,weave/blitz-20001213/blitz/ops.h,weave/blitz-20001213/blitz/prettyprint.h,weave/blitz-20001213/blitz/promote-old.h,weave/blitz-20001213/blitz/promote.h,weave/blitz-20001213/blitz/rand-dunif.h,weave/blitz-20001213/blitz/rand-mt.h,weave/blitz-20001213/blitz/rand-normal.h,weave/blitz-20001213/blitz/rand-tt800.h,weave/blitz-20001213/blitz/rand-uniform.h,weave/blitz-20001213/blitz/random.h,weave/blitz-20001213/blitz/randref.h,weave/blitz-20001213/blitz/range.h,weave/blitz-20001213/blitz/reduce.h,weave/blitz-20001213/blitz/shapecheck.h,weave/blitz-20001213/blitz/tau.h,weave/blitz-20001213/blitz/timer.h,weave/blitz-20001213/blitz/tiny.h,weave/blitz-20001213/blitz/tinymat.h,weave/blitz-20001213/blitz/tinymatexpr.h,weave/blitz-20001213/blitz/tinymatio.cc,weave/blitz-20001213/blitz/tinyvec-et.h,weave/blitz-20001213/blitz/tinyvec.cc,weave/blitz-20001213/blitz/tinyvec.h,weave/blitz-20001213/blitz/tinyvecio.cc,weave/blitz-20001213/blitz/tinyveciter.h,weave/blitz-20001213/blitz/traversal.cc,weave/blitz-20001213/blitz/traversal.h,weave/blitz-20001213/blitz/tuning.h,weave/blitz-20001213/blitz/tvcross.h,weave/blitz-20001213/blitz/tvecglobs.h,weave/blitz-20001213/blitz/update.h,weave/blitz-20001213/blitz/vecaccum.cc,weave/blitz-20001213/blitz/vecall.cc,weave/blitz-20001213/blitz/vecany.cc,weave/blitz-20001213/blitz/vecbfn.cc,weave/blitz-20001213/blitz/vecbops.cc,weave/blitz-20001213/blitz/veccount.cc,weave/blitz-20001213/blitz/vecdelta.cc,weave/blitz-20001213/blitz/vecdot.cc,weave/blitz-20001213/blitz/vecexpr.h,weave/blitz-20001213/blitz/vecexprwrap.h,weave/blitz-20001213/blitz/vecglobs.cc,weave/blitz-20001213/blitz/vecglobs.h,weave/blitz-20001213/blitz/vecio.cc,weave/blitz-20001213/blitz/veciter.h,weave/blitz-20001213/blitz/vecmax.cc,weave/blitz-20001213/blitz/vecmin.cc,weave/blitz-20001213/blitz/vecnorm.cc,weave/blitz-20001213/blitz/vecnorm1.cc,weave/blitz-20001213/blitz/vecpick.cc,weave/blitz-20001213/blitz/vecpick.h,weave/blitz-20001213/blitz/vecpickio.cc,weave/blitz-20001213/blitz/vecpickiter.h,weave/blitz-20001213/blitz/vecsum.cc,weave/blitz-20001213/blitz/vector-et.h,weave/blitz-20001213/blitz/vector.cc,weave/blitz-20001213/blitz/vector.h,weave/blitz-20001213/blitz/vecuops.cc,weave/blitz-20001213/blitz/vecwhere.cc,weave/blitz-20001213/blitz/vecwhere.h,weave/blitz-20001213/blitz/wrap-climits.h,weave/blitz-20001213/blitz/zero.cc,weave/blitz-20001213/blitz/zero.h,weave/blitz_spec.py,weave/blitz_tools.py,weave/build_tools.py,weave/bytecodecompiler.py,weave/c_spec.py,weave/catalog.py,weave/common_info.py,weave/converters.py,weave/cpp_namespace_spec.py,weave/doc/tutorial.html,weave/dumb_shelve.py,weave/dumbdbm_patched.py,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/dict_sort.py,weave/examples/fibonacci.py,weave/examples/functional.py,weave/examples/increment_example.py,weave/examples/md5_speed.py,weave/examples/object.py,weave/examples/print_example.py,weave/examples/py_none.py,weave/examples/ramp.c,weave/examples/ramp.py,weave/examples/ramp2.py,weave/examples/support_code_example.py,weave/examples/tuple_return.py,weave/examples/vq.py,weave/examples/wx_example.py,weave/examples/wx_speed.py,weave/ext_tools.py,weave/info_weave.py,weave/inline_tools.py,weave/platform_info.py,weave/scxx/README.txt,weave/scxx/dict.h,weave/scxx/list.h,weave/scxx/notes.txt,weave/scxx/number.h,weave/scxx/object.h,weave/scxx/scxx.h,weave/scxx/sequence.h,weave/scxx/str.h,weave/scxx/tuple.h,weave/scxx/weave_imp.cpp,weave/setup.py,weave/setup_weave.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_spec.py,weave/swigptr.py,weave/tests/scxx_timings.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_build_tools.py,weave/tests/test_c_spec.py,weave/tests/test_catalog.py,weave/tests/test_ext_tools.py,weave/tests/test_inline_tools.py,weave/tests/test_scxx.py,weave/tests/test_scxx_dict.py,weave/tests/test_scxx_object.py,weave/tests/test_scxx_sequence.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/test_wx_spec.py,weave/tests/weave_test_utils.py,weave/vtk_spec.py,weave/weave_version.py,weave/wx_spec.py
78db940dbea4a03d04233fb730c0531cab024c43,"Oops, forget splitdrive argument..
",scipy_distutils/exec_command.py
f426559dd9c667da350e170ea35827b98d5ae502,"Under nt don't use cygwin executables - is this the right thing do in general? At least cygwin echo command is not picked up when dos echo should be used.
",scipy_distutils/exec_command.py
f09957a1e0d6071cc344e190c673e3121abfef2b,"Under nt always use sys.executable as python
",scipy_distutils/exec_command.py
20bbaaf22546b712cdb237566c32154f5c7d83bc,"Workaround for cygwin
",scipy_distutils/exec_command.py
ea56471ae96897372f6bf45e8fb1ac40bd02207b,"cygwin has /proc/cpuinfo, so linux_cpuinfo can be used
",scipy_distutils/cpuinfo.py
6ace5486667005aed3d6a3b0986f35fc97a17d63,"Checking if Numeric is available, if not, do not try to build scipy_base.
",scipy_base/setup_scipy_base.py
271fc73f95abab3a7962169cb54c1ba1ddba50e1,"fcompiler classes
",scipy_distutils/absoftfcompiler.py,scipy_distutils/compaqfcompiler.py,scipy_distutils/exec_command.py,scipy_distutils/fcompiler.py,scipy_distutils/gnufcompiler.py,scipy_distutils/hpuxfcompiler.py,scipy_distutils/intelfcompiler.py,scipy_distutils/laheyfcompiler.py,scipy_distutils/mipsfcompiler.py,scipy_distutils/pgfcompiler.py,scipy_distutils/sunfcompiler.py,scipy_distutils/vastfcompiler.py
85ac6be83d87d902fc1dad3e00752fcd6c7ccd7d,"New commands: config_fc and build_src
",scipy_distutils/command/build_src.py,scipy_distutils/command/config_compiler.py
6abdb08b35332f817bff030b545c2fdc9353691f,"Typical package examples to test scipy_distutils
",scipy_distutils/tests/f2py_ext/__init__.py,scipy_distutils/tests/f2py_ext/setup.py,scipy_distutils/tests/f2py_ext/src/fib1.f,scipy_distutils/tests/f2py_ext/src/fib2.pyf,scipy_distutils/tests/f2py_ext/tests/test_fib2.py,scipy_distutils/tests/f2py_f90_ext/__init__.py,scipy_distutils/tests/f2py_f90_ext/setup.py,scipy_distutils/tests/f2py_f90_ext/src/foo_free.f90,scipy_distutils/tests/f2py_f90_ext/tests/test_foo.py,scipy_distutils/tests/gen_ext/__init__.py,scipy_distutils/tests/gen_ext/setup.py,scipy_distutils/tests/gen_ext/tests/test_fib3.py,scipy_distutils/tests/swig_ext/__init__.py,scipy_distutils/tests/swig_ext/setup.py,scipy_distutils/tests/swig_ext/src/example.c,scipy_distutils/tests/swig_ext/src/example.i,scipy_distutils/tests/swig_ext/src/zoo.cc,scipy_distutils/tests/swig_ext/src/zoo.h,scipy_distutils/tests/swig_ext/src/zoo.i,scipy_distutils/tests/swig_ext/tests/test_example.py,scipy_distutils/tests/swig_ext/tests/test_example2.py
623575fa2dd7fdc0e53fa023ef5528b64ce28e11,"Fix some functions to work with scalars.  Fix typo in gnufcompiler.
",scipy_base/function_base.py,scipy_distutils/gnufcompiler.py
f1d0b834cea8195b0325a93365e632328fdbf43e,"Using depends argument from Python 2.3 and backporting it down to Python 2.1. Minor other enhancements.
",scipy_distutils/extension.py
91705f18085629fb4198417190807bcdaaccf37d,"Added debug print out when sys.path is modified
",scipy_test/testing.py
46533326bdd40b9a69b63c8e85018b4f026064ba,"Added lapack_atlas library support (typical in Debian system)
",scipy_distutils/system_info.py
f564e1c1403fecde544f63c2003a3b0fa8fa9bf5,"disabled -march flag for win32 -- was breaking compile of specfun.f (internal compiler error)
",scipy_distutils/gnufcompiler.py
e27b6ff7669f7f1c1a89779bb45f9d22aff08dcc,"Fixed gnu version_pattern (final)
",scipy_distutils/gnufcompiler.py
23f3f744067d5c88d4c6161e00617b73ed7c5086,"Fixed gnu version_pattern (2nd try)
",scipy_distutils/gnufcompiler.py
a2ebf21e64283d808bdeaa206738700d8a4a65c5,"Fixed gnu version_pattern
",scipy_distutils/gnufcompiler.py
ebeb16d01af0cbb47a7a268c663b0a357b64c59f,"Added lahey,pg compilers, renamed forte to sun.
",scipy_distutils/fcompiler.py,scipy_distutils/intelfcompiler.py,scipy_distutils/laheyfcompiler.py,scipy_distutils/pgfcompiler.py,scipy_distutils/{fortefcompiler.py
c879ef7d77eb19cb4d795e4550573de9c58955b4,"Refactoring build_flib.py (to follow and use standard distutils conventions and tools). It's work in-progress. Sending the output of 'python fcompiler.py --verbose' would be a great help if you have other than intel and gnu compilers installed.
",scipy_distutils/absoftfcompiler.py,scipy_distutils/compaqfcompiler.py,scipy_distutils/cpuinfo.py,scipy_distutils/fcompiler.py,scipy_distutils/fortefcompiler.py,scipy_distutils/gnufcompiler.py,scipy_distutils/hpuxfcompiler.py,scipy_distutils/intelfcompiler.py,scipy_distutils/mipsfcompiler.py,scipy_distutils/nagfcompiler.py,scipy_distutils/vastfcompiler.py
60612a648d3b108daf597dfbaee57c316fb0775f,"Fixed and added test for exec_command argument execute_in.
",scipy_distutils/exec_command.py
f531e1cd201e3eae5e937b35af6f57b7e4cd44ee,"Adding exec_command - a highly portable getstatusoutput function (e.g. return status is correct even on win32)
",scipy_distutils/exec_command.py
f5b889b010ef1c5c5b3f3ab44068219c24cde8f7,"Applied Brett's patch to fix phantom g (g++) when using mingw
",scipy_distutils/mingw32_support.py
594e5eba8fadd922c50c86c05a736ed53b59e6b5,"Added weave to scipy_core
",setup.py,weave/weave_version.py
449e90cf8ccd615976cd22ba4a59e89207cfc481,"Disabled mmx,sse under win32 to see if they caused internal compiler error (in emit_swap_insn at reg-stack.c:990) when compiling specfun.f
",scipy_distutils/command/build_flib.py
13ec9dd00ebcc4a8be35a28ead36d7f16cb044e9,"Impl. assert_array_less.
",scipy_test/testing.py
7827303bff3df95eb23d97faba28194640d27dbb,"Testing backport to Python 2.1 - it used to skip tests from base classes of test classes
",scipy_test/testing.py
3e0ec132807342198418e6be7e6fba378947ebb6,"Another blindish attempt to fix failures in build scoreboard for win32.
",scipy_distutils/command/build_clib.py
3aad5a223f49be0a25f36f9d2d116b988f1b7e9d,"Added missing version attribute to intel_itanium_fortran_compiler
",scipy_distutils/command/build_flib.py
714a0aaa3311e5af057f32a805f131fef3f3bd55,"Fix (scoreboard) building on win32
",scipy_distutils/command/build_clib.py
0dd3d2354b41c42153ac57151643e8ab082988b7,"Intel Fortran Compiler 8.x executable is ifort
",scipy_distutils/command/build_flib.py
fb700bfdb970f8fb92d01c54726aa3420e46ab02,"ifc-8 requires -nofor_main. Added athlon-mp opt. flags. Enabled sse again.
",scipy_distutils/command/build_flib.py,scipy_distutils/command/cpuinfo.py
44ea2a2d255f00af037173aef163051a4b00fce5,"Added atlas_threads_info.
",scipy_distutils/system_info.py
8ae8ab27ad2911433e3b2462a7ceadfd50a14e13,"Updated scipy complex divide to follow Matlab's convention: 0j/0 is nan, 1j/0 is nan+infj, 1/0 is inf. This fixes linalg.eig for various combinations of singular matrix arguments.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
7f5e051feea78f8c72bc8d8597ecc406afb0cf22,"Using faster implementation of Numeric.asarray.
",scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/matrix_base.py,scipy_base/polynomial.py,scipy_base/scimath.py,scipy_base/shape_base.py,scipy_base/type_check.py
2f11b19ef8c2a4aa488f0ebf6fbb315ba3b6e3eb,"Updated scipy complex divide so that 1j/0.0 returns infj instead of nan+infj
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
81d8c691f1da9cd488ab381e85218c42c42d3ba6,"Workaround for Python 2.1 .pyc file generator bug (float constants are truncated, e.g. 1.0066800127055 becomes 1.00668001271 in a .pyc file)
",scipy_test/testing.py
15a8c04d488e7fb362307165b2f98bba3a8a298b,"Show parts of arrays if assert_array_*equal fails
",scipy_test/testing.py
34a3c3caa98cb1709a75eecf4059daa455004a6c,"Backport mingw support to older distutils link command that does not have target_lang argument.
",scipy_distutils/mingw32_support.py
0c183d5a528b87f6deeb6e54c4321dabc8d02df0,"When running tests locally, use the script instead of installed test_yyy module.
",scipy_test/testing.py
c4f81c2baba836f4ac1fcca69d348f3ad3415dbe,"Fixed problems in arraymap having to do with zero-dimensional support.  Fixed corresponding problems with distributions.
",scipy_base/_compiled_base.c,scipy_base/function_base.py
9a23b0fcafd7e82d0140fbcf18f87caf2f72f086,"Fixing Py<=2.1 get_platform for Power Mac
",scipy_distutils/misc_util.py
aba97743ac2c2df2a6a9fb26c955502e6487ce79,"This fixes curious scipy_distutils.core import error.
",scipy_base/setup_scipy_base.py,setup.py
d1906746d2e224ea610985c9b181602e94ef9db6,"Now one can run 'python /full/path/to/scipy_core/setup.py'
",setup.py
6a8cbdb79fca8504a397ee066f7ec665c339ab7f,"Setting the name of merged config dicts.
",scipy_distutils/misc_util.py
965c4ba6338659de155ab472cd84a462399f0466,"Fixed bug when base is '/'
",scipy_distutils/command/sdist.py
f00675afa961d6fe25ede639b4a95b35d2dbecc2,"Backport to Py<2.3 (__file__ is not defined when __name__ is __main__)
",scipy_distutils/misc_util.py
1aae76e5b0de886b9c7950441e2acdf103fff4ef,"DOS lineendings
"
e420835ca4558c414b6667cd609eb77452184cef,"Using sse only when available and not sse2
",scipy_distutils/command/build_flib.py
117a6697980cd9cc355de6b9783fe9668bd3c816,"Fixed missing function in function_base.py.  Added entropy calculations to probability distributions.  Fixed error in F distribution ppf function.
",scipy_base/function_base.py
197ff2202f843135f860001433dd3eb1c4ddc5f4,"Fixed ppimport bug
",scipy_base/ppimport.py,scipy_distutils/command/build_flib.py
6957b1997a4bf1c1019dfb8543e350e405a6b9b4,"Added freeze method to distributions which returns a frozen class that has fixed shape, location, and scale parameters.  No checking done yet, so errors on construction are not detected until first call of frozen methods.
",scipy_base/function_base.py
99e8db0472d7b5d8b775184382212e32bf7a9e61,"It turns out that -arch is available only under Apple
",scipy_distutils/command/build_flib.py
201ceec9b8a847e2aee5dcb137e2908331002f69,"-arch is not available gcc-3.4 option under darwin
",scipy_distutils/command/build_flib.py
24b22dbdaa220b90961fedfb86f98044a720bad4,"Fixed the case when path to lib.exe contains spaces (thanks to Berthold Hollmann)
",scipy_distutils/command/build_flib.py
11cffa55fceeda7a779a5a596b22fb98270f22b8,"Fixed detecting djbfft on freebsd. Changed system_info.verbose to verbosity and added verbosity=2 output.
",scipy_distutils/system_info.py
b03d812ec59ce430e851bd4e89f4960f5452f0f8,"Fixed typo
",scipy_distutils/system_info.py
a4a7063078b5e240f52ad325088b8b0a700c677c,"Fixed bug.
",scipy_distutils/command/run_f2py.py
772b74eec5bf8fca3c76959c4afc96a97632d7c4,"Introduced SourceFilter. Clean ups and minor bug fixes
",scipy_base/setup_scipy_base.py,scipy_distutils/extension.py,scipy_distutils/misc_util.py,scipy_distutils/setup_scipy_distutils.py,scipy_test/setup_scipy_test.py,setup.py
4d1b593225e392072f5f684f9fcac8c9efb21916,"New import hooks are applied to weave. Clean up.
",weave/__init__.py,weave/ast_tools.py,weave/blitz_tools.py,weave/build_tools.py,weave/c_spec.py,weave/catalog.py,weave/ext_tools.py,weave/{pre___init__.py,weave/inline_tools.py,weave/setup_weave.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_spec.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_build_tools.py,weave/tests/test_c_spec.py,weave/tests/test_catalog.py,weave/tests/test_ext_tools.py,weave/tests/test_inline_tools.py,weave/tests/test_scxx.py,weave/tests/test_scxx_dict.py,weave/tests/test_scxx_object.py,weave/tests/test_scxx_sequence.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/test_wx_spec.py,weave/vtk_spec.py,weave/wx_spec.py
95a197aa0e55b64e984f36482dfc106161ab8a1d,"Introduced restor_path,set_local_path functions.
",scipy_test/testing.py
a58d97f9ccdc76ccba3a214eebe9ea1492acf7fb,"Doc updates.
",scipy_test/testing.py
89425047b98a96aca9fe46e935a186acbeebcdb7,"Avoid looking for tests from test_* modules
",scipy_test/testing.py
f2d6d44964f0de30448a9706b3072b05f53c5557,"Made code explicit.
",scipy_base/setup_scipy_base.py
8574b1581954cb8ba82115c45f500078764cd812,"Dropped test_suite_list feature, simplified code. Test methods are looked also from base classes. Fixed multiple inclusion of the same test file (e.g. this happend for stats.stats and stats.__init__ modules).
",scipy_test/testing.py
0e751aae2dca88ea0c458573cefb2380ec19718a,"Fixed the case when 3rd party module is imported from a python module or script
",scipy_base/ppimport.py
ddda876cdca29fdc8cdf96eeedae2d46c85e2b6c,"scipy_base clean up.
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/limits.py,scipy_base/matrix_base.py,scipy_base/shape_base.py,scipy_base/tests/test_fastumath.py,scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_limits.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py,scipy_test/testing.py
3ea118c7253d6d9a8e967f8431e73a157cee7c56,"Introduced parent_path argument to get_path; when not None and the beggining of path matches with parent_path, then return only remaining of the path.
",scipy_distutils/command/build_clib.py,scipy_distutils/misc_util.py
7122588549dd1606dce2360ff275c9b13a776e0d,"Only TestCase instances with test_ suffix are put to test suite list.
",scipy_test/testing.py
4ee67dfe60ec73696b37b1304bfb0f96e0324506,"Fixed vectorize for scalar inputs. Added new test.
",scipy_base/_compiled_base.c,scipy_base/tests/test_function_base.py
ef5e7ba2d2137f50a9cb74688a21334d46f6bb85,"Removed .build_py_ignore files: the feature didn't work properly, e.g. building binaries failed. Added sample_site.cfg to data_files. Emptied MANIFEST.in (later we can consider removing it).
",MANIFEST.in,scipy_base/.build_py_ignore,scipy_distutils/.build_py_ignore,scipy_distutils/setup_scipy_distutils.py,scipy_test/.build_py_ignore
c550d135366cfe1f819ffe633f7453de3c50c4ab,"Cont. SourceGenerator: docs, using it scipy_base
",scipy_base/setup_scipy_base.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/run_f2py.py,scipy_distutils/extension.py,scipy_distutils/misc_util.py
8266c6003fe8037db933873842aec4e154320872,"Impl. SourceGenerator. Its instances can be used in Extension sources list argument and when in run_f2py,.. then the corresponding source will be generated. See Lib/xxx/setup_xxx.py for example.
",scipy_distutils/command/run_f2py.py,scipy_distutils/extension.py,scipy_distutils/misc_util.py
b681f71126a7cb321806d9f0d74ff012ed362a69,"Introduced info_..py files for scipy_core modules
",scipy_base/__init__.py,scipy_base/info_scipy_base.py,scipy_distutils/info_scipy_distutils.py,scipy_test/info_scipy_test.py
0bdb7a783cd2f975669573786ef87e5c6d34296c,"Impl. ScipyTest.run method. Calling test(..) will resolve all ppimported modules. All ppimported modules get test() function as a reference to ScipyTest(..).test()
",scipy_base/ppimport.py,scipy_test/testing.py
682dedb0842914b9fe5f6376f0d2cf9bcfdab6e3,"Impl. ScipyTest class that will facilitate testing dropped-into-Lib Scipy modules as well as supports tests for extension modules. Cont. writing DEVELOPERS.txt.
",scipy_test/testing.py
969bcf390a20afc2e3e4dafe3ad573477b92f7e8,"Incr. micro version number.
",scipy_test/scipy_test_version.py
6e3b2132e899d0e83c55079a8a7f82bed7dbe2da,"Using USE_MCONF_LITE_BE in mconf_lite.h to switch to big-endian. This way we conserve the number of files and avoid creating temporary files in source directory.
",scipy_base/mconf_lite.h,scipy_base/scipy_base_version.py,scipy_base/setup_scipy_base.py
e6e1212a6ddeb138fee53fd3760536c5cf1d424f,"Removed obsolete update_version(). Incr. micro version number.
",scipy_distutils/misc_util.py,scipy_distutils/scipy_distutils_version.py,scipy_distutils/setup.py
78c6e1a0395aa09fed39607ef33d37723dc4eec4,"Added setup_*.py files to MANIFEST.in. It is possible that they were missing due to .build_py_ignore feature, so, we might consider dropping the feature.
",MANIFEST.in
671a3f70ec7c792e52f915b5b5dbc45025d01e46,"Fix to close the shelve catalog to guarantee changes are written to disk.  Fernando Perez fix for random uncessary recompilation with weave.
",weave/catalog.py
a016c39564d987d70f0a97c478c0ac58ebd1afbd,"Added reading of matlab(tm) version 5 file support.
",scipy_base/shape_base.py
16d3ecafa7cc3dbe407a0754351782c78ec057fa,"Removed migrate function as obsolete. Though, the idea of having migrate is still good, just its currect implementation sucks. See wxPython_thread module in gui_thread for how it should be implemented. So, there's hope that migrate will return in furure.
",scipy_base/__init__.py,scipy_base/pexec.py
22910316eb44a8bbc6c990b7a31a113172fe6908,"Fixed typo.
",scipy_base/pexec.py
8efc8d051d64bfebbfee34a6eba81900102e9056,"Implemented ParallelExec used, for example, by gui_thread/chaco_wxplt.py. But useful also in other applications to execute functions in background threads.
",scipy_base/__init__.py,scipy_base/pexec.py
f0e8ecc14d8a91dd8cc46dc2a7412be4e8e52f7a,"Removed /Qvc6 flag for VC6. What is self.version for VC7?
",scipy_distutils/command/build_flib.py
bd334d0bae4959fb38ad50d868b1f2377a5e40e7,"First implementation of win32_cpuinfo (thanks to Jose Rui). If you have a win32 machine, run (python cpuinfo.py) to see if all information is correct.
",scipy_distutils/command/cpuinfo.py
381f65c9c89167c98f5d746756f64c4a3a1654ab,"re-instated the forcing of compilation using mingw32 (gcc) on 'nt' based machines.  I do have a question whether it will work with pre-2.2 installations as the interface for determining the compiler seems to have changed from a dictionary to a tuple at some point.  The tuple version works for 2.3 which I am currently testing on.
",scipy_distutils/mingw32_support.py
56a1b11e157a3d3732f0fa68c900bdd88315af7d,"Introduced machar - Machine Arithmetics - module. It resolves the inaccuracy problem in limits, in addition, machar computes many other constants of floating point arithmetic system. machar_double and machar_float instances are all you need to import from machar.
",scipy_base/__init__.py,scipy_base/limits.py,scipy_base/machar.py
43e1b8857c1a50cf376a07ab0210bb870a413e84,"win32:Intel,Compaq options update.
",scipy_distutils/command/build_flib.py
3e03dfe91f5276c30f0d74c726e696218f82eff9,"Working on non-gcc compiler (Intel,Compaq) support (with Jose Rui Faustino de Sousa)
",scipy_distutils/command/build_flib.py,scipy_distutils/mingw32_support.py
7e5677d0ceffde3d760624c48f978d65673c562c,"Changed from nan_to_num to raising error if all matrix entries are not finite numbers.  Changed behavior of all and any to work over raveled arrays (Numeric's alltrue and sometrue still give old behavior)
",scipy_base/function_base.py,scipy_base/tests/test_function_base.py
d1138ad58536e796421bad68861c0a1323dfdb8a,"Orthogonal polynomial fixes and nan_to_num fixes for hanging linalg routines when nans in matrix
",scipy_base/polynomial.py
b8d97bd79eca0afd9d83a2681109963641b61e25,"Use fastumath functions from scipy_base instead of Numeric
",scipy_base/function_base.py
df7db28dc7a83d604b4e00127b6e66bc3c51ccbb,"Fixed long lasting segfault bug, say, in amax([1,2j]). Added preliminary tests for fastumath module.
",scipy_base/fastumath_unsigned.inc,scipy_base/tests/test_fastumath.py
04f8b863e3559c51ff70062b3f6d2276b9a75af2,"Fixed spelling type
",scipy_base/ppimport.py
f1e33c3b4c7840f5a8278904bdff4ec30cf6f6bf,"Fixes the case (as occured during weave tests) when postponed module is imported between defining and using a postponed attribute.
",scipy_base/ppimport.py
ea8b5c7c7f8757f524c4ba2d7a6e6db0be5f6930,"Changed assert to show why check_add_function_ordered test fails (using Python 2.3)
",weave/tests/test_catalog.py
362e645bb521c3a68e2b398df561b15aded99491,"Fixed some warnings from wxPython about not getting integers.
",scipy_base/index_tricks.py
a081902f0cef6b53c3443de294a53c14726483ed,"Added bmat (build matrix) constructor for easy creation of block matrices.   Added better docs for special.errprint.  Changed default of errprint to 0
",scipy_base/index_tricks.py,scipy_base/matrix_base.py
26349190a612f0eed68657f6726a995387d5be56,"Added test functions for extract and insert.
",scipy_base/tests/test_function_base.py
529150a0af53fbe4ea4ae20f9f3fc04fe5a67814,"Changed order of argument in scipy_base.extract.  Added 1-argument version of where to scipy_base.  The 1-argument version only works on 1-d arrays currently.
",scipy_base/function_base.py
8a8731bc8d323c377c13f98f53686062770b1a2f,"Undoing general_function move (Travis won this race;-)
",scipy_base/__init__.py,scipy_base/arraymapmodule.c,scipy_base/setup_scipy_base.py
25c9847d736a48adf9b72d0ef061267627f07c9c,"Removed redundant general_function and tests
",scipy_base/general_function.py,scipy_base/tests/test_general_function.py
ba4e597baba7c3dd57431414d0bee0db9d0f3af9,"Moved arraymap from cephes to scipy_base.  Renamed from general_function to vectorize
",scipy_base/__init__.py,scipy_base/_compiled_base.c,scipy_base/function_base.py,scipy_base/tests/test_function_base.py
100d58f80cdc5ba6bf64343dd0004a41fba6d8a9,"Moving general_function from scipy.special to scipy_base
",scipy_base/__init__.py,scipy_base/arraymapmodule.c,scipy_base/general_function.py,scipy_base/setup_scipy_base.py,scipy_base/tests/test_general_function.py
19d33f72fd0e05ba7156b8874b269be8e605bb29,"scipy_test imports scipy_base from installation tree, so reloading scipy_base is required to get scipy_base from the build tree
",scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_limits.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py
0c09351d13e8af553a7462013a225522221fad88,"Moved futil from scipy_base to stats to keep fortran code out of scipy_base.
",scipy_base/function_base.py,scipy_base/futil.f,scipy_base/setup_scipy_base.py
c4f7a4f611196bdbdd0301355049c2fb619f6228,"Added unit test for find_repeats
",scipy_base/tests/test_function_base.py
c16960ea4bbba55bec719b019e3e1014984e457b,"Added fortran utility functions to scipy_base as part of f2py demo.
",scipy_base/function_base.py,scipy_base/futil.f,scipy_base/polynomial.py,scipy_base/setup_scipy_base.py
c9016bbbc986f076a2c5f28aa251e395135ed62d,"Showing system commands with log.info
",scipy_distutils/command/build_flib.py
3d0d2999801160151f4d9aa6523514e0c376d183,"Using distutils.log for displaying messages. This feature (from Python 2.3) works also with earlier versions of Python.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/build_py.py,scipy_distutils/command/install.py,scipy_distutils/command/run_f2py.py,scipy_distutils/command/sdist.py,scipy_distutils/log.py
a9cd02eb6215a09029cbfaeb16478f2535da3042,"Use environment when showing compilers with 'python build_flib.py'
",scipy_distutils/command/build_flib.py
71a86896141c8c93638d61d3fcb9965bb63c11f3,"Fixed version regex string for g77-3.x compilers
",scipy_distutils/command/build_flib.py
c11bd2deb1f398d4770a830b23f0f6c796dcb3bf,"Fixed buglets found during presentation testing.  General_function now works with zeros((0,)) inputs.  Fixed rv_discrete when arbitrary samples given
",scipy_base/polynomial.py
2fc0d0ef97f6e3ae84e5c44afac88a4e388ed7b5,"Fixed up for Python 2.3 distutils
",scipy_distutils/mingw32_support.py,weave/platform_info.py
21ad48a017a636e2ee945c7a3c480f32f221ce28,"fixed indentation error to move object_filenames into the mingwcompiler class
",scipy_distutils/mingw32_support.py
dac7a85925abefc8cf090ad00e60140cdd58ba62,"overrode object_filnames method in mingw compiler.  The standard one in python2.3 cygwincompiler doesn't handle the case when a source file is specified with an absolute path correctly on windows.  The leading drive letter is now stripped off.

This may be also be a problem on unix.  It will definitely be a problem again when we try to get msvccompiler working.
",scipy_distutils/mingw32_support.py
925821853de544eaa09869a6043129f50ee3dab6,"- add python2.3 support
  - set self.compiler_cxx to g++ in __init__.  This should really be done through the set_exectuables method,
    but it would break pre 2.3 support because compiler_cxx is not an accepted option.
  - added target_lang argument to link() method.
",scipy_distutils/mingw32_support.py,weave/build_tools.py
9d8887db59bf96caf81d9187d4ff5a1af91e9f59,"Replaced execfile statements with simplified import statements in order to avoid problems with Windows installer tools.
",weave/__init__.py
9da41c6d3fd97a256cbc24f833e9dde277a4cd86,"Applied John A. Turner patch for OSF1
",scipy_distutils/command/build_flib.py
34777aa80d19f311ca78c34f83a77697ec528c0f,"Introduced MANIFEST.in that includes *.inc files to sdist
",MANIFEST.in
9ec9ed3fd61e10244e65d6c333686b29d0614061,"Impl. support for Portland Group Fortran compilers
",scipy_distutils/command/build_flib.py
888e29fd5dc881626c7375e8ef818b6608a142d6,"Intel Fortran compiler -module option appears starting at version 7.0
",scipy_distutils/command/build_flib.py
5708f46edafb549fd2a9f7ccb963e4c772fc3361,"Fixed initialization error of divide_safe in fastumath.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
295afb0cbf88cf077f402ae539fc19a32e3001ed,"fixed bug causing ufunction remainder to not work.
",scipy_base/fastumath_unsigned.inc
11d26a6d3e3adae9e8873fd9d65806dd18428ebb,"Changed default of eye(N) to double
",scipy_base/matrix_base.py
c47e9b2fd35ae5775a2423bc157b64a439d64963,"ppimport shows more useful messages when importing modules fail for whatever reason. Using exc_info instead of depreciated exc_value and to save traceback.
",scipy_base/ppimport.py
4c398c0e3bb6d1212cb53013ed85163a6c2fdfb6,"Being more verbose in assert failure
",scipy_base/ppimport.py
ed92aab39ebec5e9b3f73b25456108c41da456a0,"updated mingw support to handle gcc 3.x for building C++ files.
",scipy_distutils/mingw32_support.py
451ff2b2197f5fe16eb7cf3e7d12a5b95da2e738,"Updated compaq compiler for OSF1/Tru64 and Linux
",scipy_distutils/command/build_flib.py
70637f538f9389260b91e527c521b122a1d18f1e,"fixed a naming error for add_extra_compile_arg method.
",weave/base_info.py
680ac1244a1fb01b364c3cb0598a0b8edd410025,"Added _f2py suffix to Fortran library names to avoid name conflicts.
",scipy_distutils/command/build_ext.py,scipy_distutils/command/run_f2py.py
338676abb35f3ba31532116a7bdf7f10c6f0801f,"Catching also ImportError that can happen when e.g. ppimported cluster module is not installed but getmodule tries to access its __dict__
",weave/catalog.py
d998fffb69dd77ff51bf253dc4d15711a296c070,"added a new converter that can handle the SWIG pointer conversions based on namespaces in C++.  This is used in the freetype and agg wrappers.
",weave/cpp_namespace_spec.py,weave/scxx/dict.h
415e02ac4d800de29cff7a4a8b7b0fb4fe8e270d,"Adding Lahey compiler support (thanks to Fernando Perez and Pierre Schnizer)
",scipy_distutils/command/build_flib.py
184fbdee6751ebe906bc5cc51a85f2c8f50c803b,"*** empty log message ***
",weave/wx_spec.py
fb2b56cd02b70df12a5f6c520d7b37e4f0bf54c5,"fixed C++ builds on windows
",scipy_distutils/command/build_ext.py
ef17bfac4931386c6c25edc37645c5fa260eaf84,"setup_extension now uses scipy_distutils instead of distutil extensions so that C++ files are linked correctly.  If fails over to distutils if scipy_distutils isn't present in hopes that it will do the right thing.
",weave/build_tools.py
786056b68879b21a1166f8d40fdab2abf8a3e450,"added check for the existence of a couple of extension function method names that are present in scipy_distutils classes but absent in distutils classes.  This allows us to mix distutil extensions in with scipy_distutil extension within one build process.  weave returns distutil extension objects, so this is useful
",scipy_distutils/command/build_ext.py,scipy_distutils/dist.py
7281e96076d1d63d66bc237c8494a1cefe2f2c1b,"Fixed 'setup.py sdist'->untar->'setup.py build' cycle.
",scipy_distutils/command/build_py.py
0f98f8373dee49b6ca105f535c6a3c279ffabaab,"linalg may be also available as standalone when import scipy.linalg fails
",scipy_base/polynomial.py
1d8273c7580e4544bfd4685b830a1f92db18c561,"Backported ppimport to Py2.1. Moved help/ppimport hooks to ppimport.py so that they will be available also for standalone installations
",scipy_base/ppimport.py
cf1f7adfb326d48d4771834125526ae97c1d6df8,"Improved ppimport for nonexisting modules. Added ppimport support to builtin help function. Now both info and help work again on scipy objects.
",scipy_base/ppimport.py
d419e6c49b96ff03ff67c7af439da3c94345e903,"added setup_extension() method to ext_module to return
distutils.core.Extension object for a weave generated extension.  This
is helpful in using weave extensions within setup.py files.

added logic inside ext_module.generate_module to check whether the
new extension module code is different from the code that may already 
exist in a previously generated extension module file.  If the code is
the same, the file is not overwritten.  This prevents setup.py from thinking
the module is always out of date and must be recompiled.
",scipy_distutils/command/install_data.py,weave/build_tools.py,weave/ext_tools.py,weave/scxx/object.h
aba4027dd43ebb2e3c839595d8690bc0dfb70706,"Backport to Py2.1 where update will not be available (PyDict_Merge is new to Py2.2)
",weave/scxx/dict.h
f0069cde8a80146ebfc322a484aefccfb9f0e8c4,"1) Finished applying ppimport hooks to scipy.
New scipy import timings on PII 400MHz, Debian
with postponed import hooks enabled:

pearu@localhost:~$ time python2.2 -c 'import scipy'
real    0m1.392s
user    0m1.320s
sys     0m0.060s
pearu@localhost:~$ time python2.3 -c 'import scipy'
real    0m0.691s
user    0m0.650s
sys     0m0.030s

For reference, importing scipy to Python 2.2 used
to take 2-16 seconds depending on whether scipy was
loaded before or not.

2) New feature in ppimport:
When pre_<modulename>.py* exists for ppimported
module <modulename> then this pre_*.py file will
be executed to initialize additional attributes
to postponed module loader. For a python package,
<packagename>/pre___init__.py is used to add
attributes to package loader.
This feature is useful for importing documentation
strings of a package/module without importing them.
Currently this works with scipy.info but I haven't
tested with pydoc.help yet.

3) Made initial steps for getting scipy documentation
strings parsable by docutils.
",scipy_base/ppimport.py,weave/__init__.py,weave/pre___init__.py
d396654329f4b0eecaba536566c9ff25a69e472e,"Fixed bugs. Find modules also in parent directory (for scipy separate packages)
",scipy_base/ppimport.py
cbc0c92002ac903311f572e29292310a4e09d781,"Various cosmetic changes to clean up scipy_base module. In addition:
- using ppimport'ed Matrix (saves loading Numeric/LinearAlgebra
  module when Matrix is not going to be used)
- forcing Numeric to use scipy version of umath (fastumath).
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/limits.py,scipy_base/matrix_base.py,scipy_base/polynomial.py,scipy_base/ppimport.py,scipy_base/scimath.py,scipy_base/type_check.py
8eef87f0501923a395852a1bec4a9fe21bfb33ff,"Added support for postponed attributes of class type.
Code clean up and optimization.

Initial tests show a considerable speed up in importing scipy (my
target is less than 2 seconds on PII 400MHz, was upto 14
seconds). When using Python 2.3, importing modules is more than two
times even faster.
",scipy_base/ppimport.py
fd7e7390daf601013d724ba2e4a526deeff0145a,"Fixed curious 'TypeError: an integer is required' in fftpack tests (bug report: Arnd Baecker)
",scipy_test/testing.py
b6062f6f2d4aca2b0d47fc4b2d51ac154f9239b7,"Implemented hooks to postpone module import until module attributes
are accessed (ppimport function).  To model postponed import for 'from
module import name', ppimport_attr(module,name) is introduced where
module=ppimport(modulename).

Comparing ppimport to Pmw dynamic loader, ppimport is more robust: it
does not assume any special setup for a module to be imported. With
ppimport one can postpone importing both python modules and packages
as well as python extension modules. ppimport covers the two first
purposes of a dynamic loader (as defined by Pmw docs). The third
purpose, that is choosing between different versions of a module,
should be implemented separately (if at all at this moment) from
ppimport to keep its code as clean as possible.

The basic idea of ppimport is as follows. Expression

  module = ppimport('module')

is equivalent to

  import module

with the difference that the actual module import is postponed until
any part of a python code tries to access the attributes of a module.
The return value of ppimport is either actual module (when module
was imported before ppimport call) or a special ModuleLoader instance
(that triggers module import as soon as module attributes are to be
accessed either through getattr or setattr).

Restrictions: ModuleLoader is not derived from Python module type.
As a result, reload(module) will raise TypeError. As a workaround,
reload(module._ppimport_module) can be used.

Wishes: currently module.__doc__ would trigger importing module though
it may not be necessary. Therefore, a database of modules
documentation is needed in some form (e.g. definition files per
package, preferably generated automatically during build/installation
steps) to prevent unnecessary imports. We need to work out a policy
for documenting scipy modules... what tools to use (pydoc, etc.),
documentation string formats, etc.
",scipy_base/__init__.py,scipy_base/ppimport.py
1960523901b9f1d885fe466c55b615d85926360f,"Fixed bug in UINT_multiply.
",scipy_base/fastumath_unsigned.inc
694e8f63c9eb27fcdd246e408b2acdb7234ef764,"Introduced .build_py_ignore hooks:
If a .py file directory contains .build_py_ignore and its base name is
listed in .build_py_ignore file, then this .py file is removed from
the modules list of build_py command.

This generalizes ""avoiding setup*.py from installation"" hook to
arbitrary files (e.g. linalg, freetype etc contain .py files
that are not meant to be installed) that was also broken: it worked
only when installing packages as standalone.
",scipy_base/.build_py_ignore,scipy_distutils/.build_py_ignore,scipy_distutils/command/build_py.py,scipy_test/.build_py_ignore
356c08d5c2815eb36dae7d742320aef127f26258,"Implemented setup_freetype.py (tested to work on Linux).

Added initial C++ support to scipy_distutils (darwin, freebsd issues
still need to resolved, copy from weave.build_tools).
Note that distutils.sysconfig._init_posix gcc->g++ linker replace
hack cannot be used, in general, because certain extension modules
require gcc->g77 linker replace hack instead. So, the C++ linker
hack must have been implemented in build_ext.py.
",scipy_distutils/command/build_ext.py,scipy_distutils/dist.py,scipy_distutils/extension.py
b0ee06583a929fbb18bbd48ec841fc5bf7e7405d,"Using /usr/include instead of /usr/include/X11 as X11/X.h is actually tested
",scipy_distutils/system_info.py
63463d0c983e1d390e0bf67a37d6e7459c9a477d,"Added /usr/lib and /usr/include/X11 paths so that X11 libraries and include_dirs are found on Sun
",scipy_distutils/system_info.py
7b75dcde03ce13ff29e96821bec8e36fddf1ac83,"converted DOS EOL to UNIX EOL.
"
2ef3e1b56d7504b68d74d7e32623fc79f6cc6e6c,"when I moved from a swigptr.c to be a string in a swigptr.py file, I forgot to escape \n characters so that they would not be interpreted by python and would actually get written into the generated C++ file.  This patch fixes that.
",weave/swigptr.py
60d7d66674a7120fefa85ca801224406b74ec576,"Disabled -msse2 optimization for g77<=3.2.2 as some Fortran files won't compile with it giving error: 'Error: suffix or operands '
",scipy_distutils/command/build_flib.py
09fe0df89c51556afd12abe377398e0ff4a25a3e,"Fixed Pentium model detection for 'Intel(R) Pentium(R) 4'
",scipy_distutils/command/cpuinfo.py
e484697500db4c4d667be5a567d2c697882acfce,"Disabled floor/true_divide for Python<2.2.0. Fixed few compiler warnings.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c
58280635b825e5cd0cbd2293f4459bb14796e115,"converted format of file from DOS to UNIX line endings.
",weave/swigptr.py
9633322fc315329efcc93210831e80684ad08b0c,"Assume that cygwin does not have X11 libraries.
",scipy_distutils/system_info.py
6cdf05d2dd3443d975e85aa0db676e9d23e495cd,"Added version hooks to weave,fftpack,special packages.
",weave/__init__.py,weave/weave_version.py
e133f9ccee8f07153f3c31210e6d42c71072ab88,"Renamed setup_scipy_core.py to setup.py because scipy_core is not a real package
",setup_scipy_core.py
e8fa0139ed576c4e5329a9b7813eb8f4a900f138,"scipy_core package is now functional. Usage:
  cvs checkout scipy_core
  setup_scipy_core.py install  # to install scipy_{distutils,test,base}
  setup_scipy_core.py sdist    # to create Scipy_core-<version>.tar.gz
",setup_scipy_core.py
e95e42e5e2e4027ed03a32ecb066521e5997f4ba,"Moved code in swigptr.c into a python string, swigptr.swigptr_code.  This makes it where the code doesn't have to be read out of a file in the directory path and makes it easier on py2exe like programs that bundle code into an exe file. [see bug 37]

I think weave will still not work in bundled applications because it referes to a lot of other external files in the scxx directory and blitz directories.  Still, these are not read during import, so they at least don't cause the scipy import to fail.

We should look for a way to make weave work from py2exe binaries in the future.
",weave/common_info.py,weave/swigptr.py,weave/tests/test_blitz_tools.py,weave/tests/test_c_spec.py
c21bf7ecfd8fd90f09bc8ec9eee8cdbfd1960e43,"Fixed one more place to make plots of effectively 1-d arrays work.
",scipy_base/polynomial.py
1f13832b578b0a52431dea5c7944eaee62bf93ed,"Fix bug in polynomial for roots([1]) (unreported).  Fix so that xplt.plot will work when x and y are effectively 1-d arrays but perhaps have several length one dimensions appended.
",scipy_base/polynomial.py
ae65d9c9b9c54148218dbe4709460118d1887b29,"Added compatibility with gcc 3.2 versions of mingw on win32 that use gcc -shared instead of dllwrap for building dlls
",weave/build_tools.py
86bf43007e97433955b5c384564d0a89124a5ac7,"Enabled use_gcc,g77 again in mingw32_support.py as calling them in build_flib may be too late. Not sure if this was the cause of building failures on win32..
",scipy_distutils/mingw32_support.py
452c1f48c874f2784917bf39ab508313e7f4b61e,"Last month, I made some changes so that these modules would be built in the build/os-xxx.temp directory instead of cluttering the directory where setup.py lives.  This then requires the compiler to be told where the module files live.  The inclusion of the temp directory should be done automatically because the module files are placed there automatically.

Changes over the last month (I think in revision 1.58) broke this.  It looks like it was to fix incompatibilities for other absoft compilers.  Dang they change their switches a lot...  Anyway, all absoft f90 compilers should allow a way of specifying the modules directory.  Instead of disabling the search of the temp directory, we should find out how the other versions do it.

I've re-enabled the search for modules in the temp direcotry for the time being.
",scipy_distutils/command/build_flib.py
38517d5f213c8aaa3c8963393fc37cb77e0bc04a,"Backport to Absoft 4.6 compiler (not tested though)
",scipy_distutils/command/build_flib.py
5ad8589c3dcab3f5de929f505095bdd22b1e649f,"Renamed digital_fortran_compiler to compaq_visual_fortran_compiler
and changed its vendor to 'Compaq' (as they seem to be essentially
same compilers, Digital being older version of CompaqVisual).

Moved some of windows specific compiler setting code from
mingw32_support to command/build_flib.py in order to enable
using scipy_distutils on a purely MS environment (with other
compilers like Compaq Visual Fortran, etc.).
WARNING: These changes are *not* tested and may have broken
scipy_distutils on win32 (hopefully not!).
",scipy_distutils/command/build_flib.py,scipy_distutils/mingw32_support.py
5d75b422b9a0e1fb9b74dad808d611061e76c697,"Added Forte to fortran compiler vendor list
",scipy_distutils/command/build_flib.py
c50021a26d88185a2ae56f395a7362e488d3e7e2,"Fixed typo.
",scipy_distutils/command/build_flib.py
adf0787a00219987ab298153f2c16d745ec03264,"Fixed typo.
",scipy_distutils/command/build_flib.py
2cab038eea9743b3eee3802ffe1bbefa780ef6bd,"Derived forte_fortran_compiler
",scipy_distutils/command/build_flib.py
5818b6e6db87a39991da87f2518227760a50de5e,"mingw compiler always uses gcc for compile step and g++ for link step now.
",weave/build_tools.py
7a780b27473a17ee6753dfee1046ce5fa4bf5f20,"Fixed true divide issues.  Fixed use of wrong math library.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc
4ae287efb87de9e58f8dc384a45b2a5d26310ed8,"changed platform_specifier to use '_' in place of spaces.  This is equivalent to what python 2.3 does.  We used to just remove the space.
",scipy_distutils/command/build.py
82735f0e565d648c698d88f902261bab9d116c52,"Trying harder to determine the location of g2c library as required on Darwin platform
",scipy_distutils/command/build_flib.py
020aa678564d1d7d256ecfcfb3178b427d3d23d2,"Re-fixed the Mac build of chaco problem by moving the fix to weave, and undoing part of the previous fix added to the main chaco setup.py file.
",weave/build_tools.py
ad70971313e1f3e70c9f1f5ab55159481b7c4ba8,"Scipy builds now with Absoft Fortran compiler (on Linux, probably also on Darwin, not sure about win32)
",scipy_distutils/command/build_flib.py
085910c7756cf61271affe4cb9c27053f998ee9f,"Added -f -s flags to Linux Absoft compiler
",scipy_distutils/command/build_flib.py
fc770a785b7ca06bd11989498ba91a3ec6169102,"Enabled g2c library with gcc_lib_dir for darwin platform.
",scipy_distutils/command/build_flib.py
23a6b0f2ab7d745b5416615c56d4c0f240886c44,"Fixed Absoft Fortran compiler support on MacOSX (thanks to James E. Scarborough). Disabled -p flag if no module_dirs as f77 does not accept this flag.
",scipy_distutils/command/build_flib.py
6e57fb5f1b75c022c7ab0df9176bb018338b5891,"Initial hooks for Absoft compiler support on MacOSX
",scipy_distutils/command/build_flib.py
d1815abfe290c7fd42dee3ab53ef6e0856e14177,"Added sunos cpuinfo support + other improvements
",scipy_distutils/command/cpuinfo.py
9f102855b5cff08337edae605171189a843cc83c,"Fixed the order of fftw libraries
",scipy_distutils/system_info.py
ef3688ed023300783a9f2dd08eed5b792eaa14fd,"Fixed problem with insert in scipy_base and added diric(x,n) to special
",scipy_base/_compiled_base.c
2e67a7a070834511fa1c1ae828a6b137cc10659e,"Added Otto's discrete distribution statistical tests
",scipy_base/type_check.py
8df2b3ff8abc7f24cae1f4f69e1e94e24f4f52ca,"it appears that mips f90 is brain dead also and doesn't allow you to
specify where module files should be written.  I've made a mixin class
that has the methods for moving the mod files ""by hand"" so that it
can be used by absoft and mips compilers.
",scipy_distutils/command/build_flib.py
35200379fdffc524d877bfbe83df5109b9b289bd,"intel compiler on linux now places module files in the build directory instead
of the top level directory.
",scipy_distutils/command/build_flib.py
5a68b4bd6dce8a21a63e8ba1d13f91eb493c58e7,"added flags to Sun compiler to make it build modules in the build/temp.os-xxx
directory.  This involved adding -moddir/temp_dir and -M temp_dir

absoft 6.2 doesn't handle building mod files in the build directory using a flag
(or at least I didn't find it).  This is brain dead.  anyway, I added the
machinery to move the files to the build directory explicitly after each f90
compile.  It is smart enough to not move mod files that previously existed
 there.  I am a bit worried whether the absoft compiler accepts multiple -p
flags to specify where to look for module files.  This isn't a problem unless
a user also specifies a directory using the module_dirs argument.

The Sun compiler also needed the mvec library on our machine, so I've added it.
Hopefully it is OK to have on all systems.??
",scipy_distutils/command/build_flib.py
1f60e07b5c9b65b685908098a6d01c3562cc1df5,"Fixed linking with Forte F95 compiler (-lfsu is needed when using intrisic functions)
",scipy_distutils/command/build_flib.py
58ac35e75714079b0aeb2a63b378dde612e8d6c6,"Fixed test_special to test over 100 of the functions.  Other tests need to be fixed.  Added Pade routine to find Pade approximation.  More tutorial additions.
",scipy_test/testing.py
414f3b3d68a6095a605c006af043b9da8b129c1b,"Impl. cpuinfo for darwin platform. Fixed gnu compiler support on darwin (no need for -lg2c) and impl. optimization hooks for this platform. Clean up code. A note: currently Fortran compilers are used with architecture/machine dependent optimization flags. We need a switch that turns off architecture/machine dependent optimization flags (but keeping generic optimization flags) when building distributable scipy binaries.
",scipy_distutils/command/build_flib.py,scipy_distutils/command/cpuinfo.py
cdaf91ed9ac5583774ed958b797720db40b1c716,"sgi compiler class clean up. Added optimization hooks for MIPSpro compilers.
",scipy_distutils/command/build_flib.py,scipy_distutils/command/cpuinfo.py
fbb9934a9e786a6fe830294cf7368bee2cb65075,"Fixed bug in test of compiler type that was recently inserted.

Split blitz tests out so that the individual numeric types are tested separately.
",weave/catalog.py,weave/platform_info.py,weave/tests/test_blitz_tools.py
71489f3b664729f240fa034efae1ad752e7d1acd,"2.3a1 on darwin doesn't have the correct flags set when building extension
modules.  It is missing -Wno-long-double to supress the output of this
warning.  CFLAGS has this flag, so I just set OPT to CFLAGS in
distutils.sysconfig.config_vars.  THis also adds a flag that turns off
pre-compiled headers in c++ builds.  I don't know if this will prove an issue
in the future or not, but it doesn't affect any of the weave tests.
",weave/build_tools.py
cde60ff9cde753fdddefe99a2632a631207b21bc,"renamed find_compiler.py to platform_info.py so that it can be used for
more generic purposes beyond just getting the compiler information.
",weave/build_tools.py,weave/{find_compiler.py
1c55139604560cd5d71eafe30986d03578b2f9b7,"weave now compiles intermediate files in a compiler specific directory.
This prevents the possibility of compilers from different platforms
from looking in the python_intermediate directory and finding an object
file built by a different compiler and trying to link it in -- which will
fail.
",weave/build_tools.py
7a8d8ba25ca745cfad7fe0db93159da6f72091ba,"This module helps find the location of the compiler used by distutils.
This is needed so that we can create compiler specific directories for
intermediate files (.o) created by weave.  An md5 check sum of the
compiler binary provides a reasonably reliable way to differentiate
between compilers.  This approach works across multiple platforms that
share the same file system.
",weave/find_compiler.py
339894e598e70c7736640659fb1e677b88866a72,"Fixed --build_flib/build_temp flags of setup.py build_flib command. It seems that the standard distutils needs the same fix for the build_clib command.
",scipy_distutils/command/build_flib.py
1d5fd99dd359093961049f8d714af88005a851a1,"Fixed Forte Fortran 90 compiler support.
",scipy_distutils/command/build_flib.py
bc62be8f1132b378a49590f598ba1d1e0337f79c,"Fixed compiling Fortran 90 fixed and free format files (HP and Compaq compiler classes still need the 'fixed format' switch). For testing the mix of F77/F90 fixed/F90 free Fortran codes, see f2py2e/tests/mixed/.
",scipy_distutils/command/build_flib.py
49dfa817e7136027ec281d150f7918979d9f6f99,"made changes to use a PYTHONINCLUDE environment variable to search for
include files during extension building.

(1) include directories.
Distutils knows to include files from /usr/include/python2.2 (or wherever it is installed) whenever building extension modules.  Numeric installs its header files inside this directory when installed as root.  However, when I install Numeric in /home/eric/linux, the header files are installed in /home/eric/linux/python2.2.  Distutils doesn't know to look in hear for headers.  To solve this, I'd have to hack all the setup.py files for modules that rely on Numeric to use my include_dirs.  This isn't so nice.

To rectify the problem, scipy_distutils now searches for an environment variable called PYTHONINCLUDE that uses the same syntax as PYTHONPATH and PATH.  If PYTHONINCLUDE is found, the directories listed in it are added to the include path during compilation of C/C++ files by build_ext.py and build_clib.py.  On my machine, I specify

export PYTHONINCLUDE=$OSDIR/include/python2.2

and all setup.py files work unaltered.  I think this is a reasonable solution.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/misc_util.py
e3abc3304f7dec7c45843955520ffce3aa23e92c,"Backport to Python 2.1
",scipy_distutils/setup_scipy_distutils.py
f56ab8feb4b1d7b7907ab5f020ea9eede9e8ded1,"overrode the finalize_options() method in build so that we could remove
spaces from the plat_specifier variable.  This thing is used to define
the build path, and has spaces in it on the OS X.  g77 wasn't happy when
it sees spaces in file names.

I also factored out the definition of plat_specifier into a function called
get_plat_specifier.
",scipy_distutils/command/build.py
7867841c263eb865a1e61d2dff202c27706e507a,"Impl. memusage() for Linux. memusage is useful for detecting memory leaks
",scipy_test/testing.py
8003ebb85561bacfcfbe4e374a739325e3a80733,"Display F2PY version only once
",scipy_distutils/command/run_f2py.py
dcc65693d78f065ec13d613056ae825b3d66d077,"Added support for now separate f77 and f90 wrappers that the latest f2py may generate.
",scipy_distutils/command/run_f2py.py
18f6cc54d9a0fe3dd53474858e6dc2fcefb0e657,"Fixed dummy file name for multi-user systems
",scipy_distutils/command/build_flib.py
cf28dad0ecc182fc727d2e118d99069e0e6a88f1,"Removed sun_fortran_compiler.get_runtime_library_dirs method that caused linkage error due to -W flag that is supposed to be used only with gnu compilers
",scipy_distutils/command/build_flib.py
bf70a2edb9714701e808581c934ba23864f74578,"Changed structure of stats module.
",scipy_base/_compiled_base.c
1376f6e0e0518a76133b89ac2919555c34ef7dc6,"changed the link order of libraries for absoft compiler.  the order is now 'f90math' and then 'fmath'.  This fixed link errors on windows with absoft 6.2
",scipy_distutils/command/build_flib.py
c415fd107678e9537c998ff7be1cdadfa8881f23,"Bundle scipy_test,scipy_distutils to scipy_core. See the header of setup_scipy_core.py for usage information.
",setup_scipy_core.py
7c0aa98776a31d7321a74f8df83a5d9d4ba0d214,"Removed weave dependence: lib2def lives in scipy_distutils already
",scipy_distutils/mingw32_support.py
21478aa10e8667d392a09d58b26d29a40e5f29c5,"moved operator<< to weave_imp.cpp to prevent multiple definition issue.

repr() and str() now return std::string instead of py::object values
",weave/scxx/object.h,weave/scxx/weave_imp.cpp
b089b4cf276662441ec7a91c2ba34534cdec2723,"added a long int constructor for py::object.  This was needed in the
freetype library.
",weave/scxx/object.h
f0e0be1bb878be9661564c85dc437146f0e6df05,"unicode conversion now includes a length veariable Nxxx just like
Numeric arrays.  If we could use std::wstring reliably on all platforms,
the need for this would go away.  My notes say that it doesn't compile
correctly on gcc2.95.3 though.
",weave/c_spec.py
5184decb856649300d5ace59131652fcc79cc951,"Added multifactorial function.  Fixed object array bug with insert.
",scipy_base/_compiled_base.c
f4a310fa3a84f1a361fe49a911315d1377d60cd1,"Changed implementation of how PINF and NAN get computed in fastumath.  Remember to compile fastumath without the -ffast-math flag if you are using gcc.
",scipy_base/__init__.py,scipy_base/fastumathmodule.c,scipy_base/function_base.py
8e89f5e7cbfc29e4320b16740f4c724225703a68,"Added insert and extract to scipy_base docstring
",scipy_base/__init__.py
815de7eeef28422669d018e84e465274605a8df5,"Changed takemask to extract.  Added inverse of extract called insert.  Extract takes 1-d array out of raveled nd array according to raveled mask.  Insert puts elements from 1-d array back into an n-d array according to mask.  It can be thought of as the inverse of extract.  It allows for operations to only be performed when necessary.
",scipy_base/_compiled_base.c,scipy_base/function_base.py
cf5c05a45d571610f3f2624d28788bcbe8beb46f,"Added tests to stats.  Added nanXXXX functions.  Fixed kurtosis and skew to handle biased and unbiased estimates to match MATLAB.
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/shape_base.py,scipy_test/testing.py
7e15158b4d13eee7c841aee5f4ef60c366b6018c,"Minor changes to ifc flags. Removed gcc hooks: ifc objects are not binary compatible with g77 objects. One should never use g77 and ifc compiled functions in the same executable.
",scipy_distutils/command/build_flib.py
64a54bfc3429dd80c190e16c00a33aa6012c948f,"added examples for the py::object C++ object.
",weave/examples/object.py
188c4df015fb031c9485d3640bc3dfa1b3e779c1,"Fixed typo.
",scipy_distutils/command/build_flib.py
1f32ecb4a2be4f651193c60726329205e07a0d38,"Changed str->repr in assert_* functions (because DESIRED and ACTUAL showed identical results for failing assert tests).
",scipy_test/testing.py
da1637a944bee8a397d5946729b1c7f23bd006c4,"Made scipy_base locally testable.
",scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_limits.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py
506412d3de910d0e5b5ce54d62138a08d18236fc,"Using environment variables F77,F90,FC_VENDOR for setting Fortran compilers. This simplifies switching between different compilers, for instance.
",scipy_distutils/command/build_flib.py
c0cf5d33c78fc0b078d03182a80b16023a2d230f,"Added new gcc-3.1 optimization flags.
",scipy_distutils/command/build_flib.py,scipy_distutils/command/cpuinfo.py
4f8bcc748dad2654d1b3258e007e5a9ea268cc7a,"Scipy is now Debian (that keeps liblapack.a in a different directory from libatlas.a) friendly.
",scipy_distutils/system_info.py
249b6a3cd013d23df8748de691a391ef40b5539b,"put try except around wx-config --ldflags to support older versions
of wxPython
",weave/wx_spec.py
7a6bba4a1f159b2e6673b8f9c5136e8c3a0738e7,"When ifc is used with gcc then -lg2c is required.
",scipy_distutils/command/build_flib.py
6d195cb996082614e7b3eae54bd90b38bd91841f,"wx_spec failure to find wx-config on Unix systems without wxPython was
foiling weave import attempts.  The error is now trapped.
",weave/converters.py
480bbf5894ec4243743f6429cff9d98a6d2d1041,"Fixed the order library dirs: /usr/local/lib/atlas is looked before /usr/local/lib
",scipy_distutils/system_info.py
7a7651481feedcc14a54b663154fd5dc6a1cfca2,"People may import scipy also from scipy/..
",scipy_base/__init__.py
7b0e644f9818b5d59ca40005e7b008ca192aa481,"Give more information when importing scipy from its source directory.
",scipy_base/__init__.py
f067ab7937260fdb9405dc258bac9c21c7b72395,"added changes for unsigned cahracter support on Numeric arrays.

added Linux support for wxPython.  This still has quite a bit of hard coded
stuff in it because there is no easy way to query it.  This will slowly improve.
",weave/c_spec.py,weave/standard_array_spec.py,weave/wx_spec.py
323785055e59380bcaa25199e472ac7ff685dfbe,"added a speed comparison of a weavified wxPython and standard wxPython call to DrawLines.  This version works on both wxGTK and Windows.
",weave/examples/wx_speed.py
f64886e1a4688cc6e8fc8e64c9856afd6ed9b5d2,"added Pearu's ifdefs to support not().  The whole block is still commented
out, but I wanted to add them before I forgot about it.
",weave/scxx/object.h
f190948b11b4ec4b642c2ba8716804d9613e4a0f,"cleaned up a few examples.

added support for wxPython on Unix.  Configuration information is gathered
by running wx-config with the proper flags specified (--cxxflags, --ldflags,
--libs, --gl-libs) to find libraries and include directories needed.  I
wish we could query the wxPython module directly and ask it for this
information, as it would be much more robust.  Currently we look in the
/usr/lib/wxPython directory for wx stuff.  If it isn't there, we're out of
luck.  The wxPython development files are required for this stuff to work.

Windows is actually worse.  I've updated the config files to support
wx2.3.3.1.  Is there a way to discover build type (ansi/unicode) from the
wxPython library?  Right now, it is hard coded to use the Unicode version
of the DLLs.  As for macros and libraries, I borrowed them from the make
file in the wx2.3.3.1/src/make.env file.  The wxPython devel package must
be installed the c:\ directory for all of this to work.

If people use alternative directories in either case, they'll have to hand
edit the wx_spec file to deal with this.
",weave/base_info.py,weave/c_spec.py,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/dict_sort.py,weave/ext_tools.py,weave/scxx/object.h,weave/wx_spec.py
59ef24c5db762d648c6f36032a7b12206f8f90e3,"fixed a headers = None --> headers = [] bug
",weave/inline_tools.py
9a1742745f3c76f9de7cf92c0bf5dfd725bd6357,"added a PYTHONINCLUDE environment variable that weave searches for include
files during compilation.  I added this to handle the recent switch I have
made to using a system installed python while storing my own python packages
in my home directory. (python setup.py install --prefix=~/<os>)

Unfortunately, there isn't another way to tell weave where to find installed
header files if they aren't in the normal place.  Actaully... If Numeric
stored the location of its header files in a variable called __include_dirs__,
this would go a long way to automating the process for most users and they
would never need to mess with the PYTHONINCLUDE variables.
",weave/build_tools.py
4d97933a6b23d73304253266f90e654f05b3064d,"removed blitz converters from being declared by default so that weave can work
for people who do not have Numeric installed.
",weave/converters.py
b90b0c14865353bd2adb94af1e2a2eb44b77e16b,"removed the not() operator from object.h.  For some reason, it was causing problems in gcc 3.2 -- is it reserved or something?  Anyway, I haven't used it and don't consider it to be critical at the moment, so I've just commented it out until there is more time to look it over.

Fixed const function declaration problems on py::sequenc::in().
",weave/scxx/object.h,weave/scxx/sequence.h
4fa203f15bb4c83b73bff3649b15c5bbd4828d19,"removed py::number from a test as it is no longer used by weave.
",weave/tests/test_c_spec.py
efb9df078950abbf660dba18c3b95b2a0db9670e,"type was returning PyObject*.  Changed to py::object
",weave/scxx/object.h
b9e184cb5bc0f9c2fa2aa4d4e78b6c45541fa73a,"This checkin marks a fairly substantial change in the C++ classes for
weave.  The original SCXX code has been augmented and mutated to the
point of not be recognizable as SCXX any more.  File and class names
have moved more toward boost naming conventions.

The most significant change is that, when writing standard inline()
code, end users are not responsible for reference counting at all.

Additionally, casting functions have been added and methods have
been overloaded so that conversions between python types and C
types are handled transparently for the basic types (char*,int,float,
double,std::string,std::complex<double>, etc.)

py::object has been augmented to handle attribute access, function
calling, method calling, and pretty much all of the rest of the
PyObject_xxx API.

This is near feature complete for weave 0.3.  The remaining tasks are
to test on other platforms and re-write the documentation.
",weave/c_spec.py,weave/common_info.py,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/dict_sort.py,weave/examples/fibonacci.py,weave/examples/functional.py,weave/examples/vq.py,weave/scxx/callable.h,weave/scxx/dict.h,weave/scxx/list.h,weave/scxx/notes.txt,weave/scxx/number.h,weave/scxx/object.h,weave/scxx/sequence.h,weave/scxx/str.h,weave/scxx/tuple.h,weave/scxx/weave_imp.cpp,weave/tests/scxx_timings.py,weave/tests/test_scxx.py,weave/tests/test_scxx_dict.py,weave/tests/test_scxx_object.py,weave/tests/test_scxx_sequence.py
6978ceae6b1f69395d700f7c5a464dd45665ec88,"added fastumath_xxx versions of complex number loops so that we don't have
use the ones built into Numeric.  This is important because MSVC compiled
versions of Numeric have incompatible complex numbers with the gcc compiled
fastumath modules.  the nounsigned.inc files had these fixes already.
They were just missing from the unsigned.inc versions.
",scipy_base/fastumath_unsigned.inc
cdb55e38ca3f4d0870df7ac136cd65b0bda448e8,"use os.stat() to check file info instead of os.open() followed by
os.fstat().  Cleaner and a bit more portable.
",scipy_distutils/system_info.py
507ed7c92d75388bc78ba7cffe383d31406c5d6d,"Added +ppy (postpend underscores on globals for BSD compatibility) option to HP Fortran compilers
",scipy_distutils/command/build_flib.py
d458416e2eddc09e28f8d1e1973e19d32ab3d831,"Carried out major unification of xxx/setup_xxx.py files. Discussion: some modules contain setup.py files that repeat the functionality of the corresponding setup_xxx.py files. Are there any objections if setup.py and setup_xxx.py will be merged into setup_xxx.py and setup.py files will be removed from CVS?
",scipy_base/scipy_base_version.py,scipy_base/setup_scipy_base.py,scipy_distutils/misc_util.py,scipy_distutils/setup.py,scipy_distutils/setup_scipy_distutils.py,scipy_test/__init__.py,scipy_test/scipy_test_version.py,scipy_test/setup_scipy_test.py
fa6606c4fb540c21f94a5c2bf76753277ac0e466,"Exposed version to imported module, filled setup arguments for sdist command, fixed typos
",scipy_distutils/__init__.py,scipy_distutils/scipy_distutils_version.py,scipy_distutils/setup.py,scipy_distutils/setup_scipy_distutils.py
24a2ee5af8223c3870c51696eb2197129c24e172,"Exposed version to imported module, filled setup arguments for sdist command
",scipy_base/__init__.py,scipy_base/setup_scipy_base.py
97b20f1216ddc6a1ecc8b0713048e21ffa8e275d,"Testing __cvs__version__.py (2)
",scipy_base/__init__.py
7f771f7324290e78be41cd4e0c9c73d48864c651,"Testing __cvs__version__.py
",scipy_base/__init__.py
6a1436b512be4156be255b37f8a9c068a07c066d,"Testing __cvs__version__.py
",scipy_base/__init__.py
6331702192daa6bc24111667eaea4cd72ba488f9,"Generating __cvs__version__.py file, another try
",scipy_base/__init__.py
1a6151300cfe4730e886db99b1536fca75f51bba,"Generating __cvs__version__.py file
",scipy_base/__init__.py
4fa288b6450b86343571e40830e44e6f02c64764,"Fixed int check: works with Python 1.5, 2.1, 2.2; haven't tested with 2.0 or 2.3
",scipy_distutils/system_info.py
95056afcb4ef5d7c70ebf575f0477aef7bd28dac,"Setting up sun compiler goes too far on non Sun platforms that also have f77 compiler. So, first check if f77 is a Sun compiler and if affirmative then bother with lib_dirs. Removed also -fixed flag from f90 compiler, it just shouldn't be there.
",scipy_distutils/command/build_flib.py
00dce9d64845208b4b984c29a32c3ce4ba1a8c5c,"kill trailing CR characters
",scipy_test/__init__.py
e62572e0c1cbcf99eb9da25b00fd76bbaabe00cd,"change assert to be compatible with 2.3 (boolean is a subclass of int)
",scipy_distutils/system_info.py
fc8405a9757e4b353a9d5a68b5e27a4238a5ffc9,"added sub-micro level versioning based on cvs version
",scipy_base/scipy_base_version.py,scipy_distutils/scipy_distutils_version.py,scipy_test/scipy_test_version.py
f8c6e2ff4d30a7d2f8dd35be7d6e87eceed65a0c,"Fixed assert_approx_equal for negative input
",scipy_test/testing.py
920b35a1c9a88595384d4ff0f4a90ddf594ffedd,"This checkin has quite a few changes.  Most are augmentations to the
py::object class' capabilities and unit tests to check them and
changes to test cases/examples to use the new features.

There is also one other BIG change.  return_val has been changed
from a PyObject* to a py::object.  This removes the need to handle
reference counting almost completely from inline() code.  I am very
happy about this. :-)

All tests pass on win32, but the examples still need some work.
",weave/c_spec.py,weave/examples/dict_sort.py,weave/examples/functional.py,weave/examples/ramp.py,weave/examples/tuple_return.py,weave/ext_tools.py,weave/inline_tools.py,weave/scxx/notes.txt,weave/scxx/object.h,weave/scxx/weave_imp.cpp,weave/standard_array_spec.py,weave/tests/test_c_spec.py,weave/tests/test_ext_tools.py,weave/tests/test_scxx.py,weave/vtk_spec.py,weave/wx_spec.py
c3ba22da35f011595b2643e894db1f797e7f2fec,"added speed test for list access and casting operations.
",weave/tests/test_scxx.py
e42148d6aadf52a9949f4aeaa6343ed0281ff5a3,"added casting to int float double and std::string for py::object.
",weave/scxx/object.h,weave/tests/test_scxx.py
52c2ef46d9c00e623d841709a07d5a02b831a677,"callable is no longer a separate converter class.  It is now handled by
catch_all converters which convert the object to a py::object on the C++
side of things.

added more tests for attributes on new scxx classes.
",weave/c_spec.py,weave/converters.py,weave/scxx/object.h,weave/tests/test_scxx.py
61917b0532b865f31c6d4c39e6ea5519fac07c37,"converted setItem to set_item in a test script
",weave/tests/test_scxx.py
d60990ee6570843d678ec4f55703fffc6afde40d,"removing old files
",weave/scxx/scxx2.h
0b2c911fc467141ca59b1b021d42fc3441598833,"Moved orginal SCXX files to newly named files that reflect the type they
contained.  The objects have also been given more boost like names.
",weave/scxx/PWOBase.h,weave/scxx/PWOCallable.h,weave/scxx/PWOImp.cpp,weave/scxx/PWOMSequence.h,weave/scxx/PWOMapping.h,weave/scxx/PWONumber.h,weave/scxx/PWOSequence.h
211c1371b80fdf4c082b25082d3f13572441217f,"cleaned up DOS line endings

added scxx test suite
",weave/setup_weave.py,weave/tests/test_scxx.py
79486d23803b7be8f2510f6d2f5a70425f314f2b,"added support for method calls on objects using mcall:

  object mcall(const char* nm);
  object mcall(const char* nm, tuple& args);
  object mcall(const char* nm, tuple& args, dict& kwargs);

  object mcall(std::string nm) {
    return mcall(nm.c_str());
  }
  object mcall(std::string nm, tuple& args) {
    return mcall(nm.c_str(),args);
  }
  object mcall(std::string nm, tuple& args, dict& kwargs) {
    return mcall(nm.c_str(),args,kwargs);
  }

moved callable object support directly into object using the call() method.

object is pretty well fleshed out now.  It needs more unit tests in the
test_scxx test suite.  I'm not sure attr() handles ref counts correctly.

Also, I would like to see if operator[] can be optimized for a[i] = b[i]
type operations.  It is currently much slower than using the C api and
also slower than pure python.
",weave/scxx/notes.txt,weave/scxx/object.h,weave/scxx/weave_imp.cpp
ced697210cb415151dfd488fc72cd8eff9434bd5,"Removed annoying ^M issue
",weave/c_spec.py
bc477c29de748b3c7193d41e784a0377b41e14a2,"add missing || operator
",scipy_base/mconf_lite_LE.h
23739c87020bb5b94544db0c157df091d807cae8,"rearrange failure message slightly and dump trailing whitespace
",scipy_test/testing.py
13f70d0bb397f2c6dadc620bcbf2b4e57d619506,"Disabled size_liblapack,has_clapack_sgetri bits.
",scipy_distutils/system_info.py
d5ce0d2ab3abc535435b079d453562b087c768d3,"Disabled size_liblapack,has_clapack_sgetri bits.
",scipy_distutils/system_info.py
1fb972c10a6717ac117c4a599ee91ba7d88557ac,"Fixed typo causing segfaults with Numeric<22.0.
",scipy_base/fastumath_nounsigned.inc
51cbd9cb19d5b8086b59425a5ffe1fc7b7734392,"Giving a warning if older ATLAS is used (that eventually will result in import error about missing clapack_sgetri)
",scipy_distutils/system_info.py
1f756d4c0b476a607eb67c2a84583506c85496aa,"Replaced get_package_path with set_package_path. See linalg/tests/test_*.py for usage.
",scipy_test/testing.py
996d34f42c84e2d6cc5cabd4a715ee097e7aa2f6,"Enabled true jiffies for Mandrake linux
",scipy_test/testing.py
b986d7aaf86ad103ee49d325b85732dcfbe3a19e,"made changes necessary to .py files to use the new modified version of scxx.
",weave/c_spec.py,weave/common_info.py,weave/ext_tools.py,weave/setup_weave.py,weave/tests/test_c_spec.py,weave/tests/test_ext_tools.py
ccc5a06bd857e3e6de81b1a18b3959e3ceacf4aa,"weave now uses a modified version of scxx.  The new class names are closer
to (identical in most cases) to the boost library naming convention.  We
will continue to try and make code as close to boost compatible as we can
without getting into templates.  Here are the main changes:

* all classes moved to py:: namespace
* made tuples mutable with indexing notation. (handy in weave)
* converted camel case names (setItem -> set_item)
* change class names to reflect boost like names and put each
  exposed class in its own header file.
    PWOBase     -> py::object   -- object.h
    PWOList     -> py::list     -- list.h
    PWOTuple    -> py::tuple    -- tuple.h
    PWOMapping  -> py::dict     -- dict.h
    PWOCallable -> py::callable -- callable.h
    PWOString   -> py::str      -- str.h
    PWONumber   -> py::number   -- number.h
",weave/scxx/PWOImp.cpp,weave/scxx/PWOMSequence.h,weave/scxx/PWOMapping.h,weave/scxx/callable.h,weave/scxx/dict.h,weave/scxx/list.h,weave/scxx/notes.txt,weave/scxx/number.h,weave/scxx/object.h,weave/scxx/scxx2.h,weave/scxx/sequence.h,weave/scxx/str.h,weave/scxx/tuple.h,weave/scxx/weave_imp.cpp
f9d16bb476e271f28b70130c7d3cae73d2bd074e,"Significant functionality added.

Methods such as setItem, in, insert, append, and xxxMmbr::operator= were
overloaded to accept basic types int, double, char*, and std::string.  This
allows for much more Pythonic looking C++ code.

!! Need to add same functionality for mappings on haskey and maybe a few
!! others.

!! Need a set of unit tests for added functions to make sure reference
!! counting is handled correctly.
",weave/scxx/PWOImp.cpp,weave/scxx/PWOMSequence.h,weave/scxx/PWOSequence.h
d05f89134d1579964e54d041701899d6447a60ad,"test_c_spec now tests both msvc and gcc on windows for most of all of the
common converters.

Still need to add tests for new functionality added to underlying SCXX library.
",weave/tests/test_c_spec.py
63545217c2cdc7f23c7a1bbd3239d0745f738f21,"added a PWONone global object that can be used in place of Py_None.  This is
useful because gcc doesn't allow Py_None to be passed into functions with a
PWOBase& declartion.
",weave/common_info.py
11681370cd203ad5a12c01784892e474d57589f2,"fixed import issues on PythonWin.  sys.stdout doesn't have isatty defined,
so unprotected call to it in has_color_terminal was failing.
",scipy_distutils/misc_util.py
758a8aae16d3b131775feed329320a2d66233d26,"Removed scipy_base.testing. Use scipy_test.testing instead.
",scipy_base/testing.py
d0074f705a7c0b4aa443df008c41555aece86047,"Fixed jiffies scaling in ScipyTestCase.measure
",scipy_test/testing.py
c8bfc6162857f9989dd6c75ebb5af4cd655ce9dc,"fixed error in get_compiler_dir that was breaking Linux builds.
",weave/build_tools.py
9ec0eb7714b132ea85db3a88f78c5f368cbd3bdd,"Copied missing get_package_path,jiffies functions from scipy_base/testing.py. The latter should be removed.
",scipy_test/testing.py
4ce790846079e3a252fa37ecc6d789dc282b012a,"scipy_test can be build/installed separately
",scipy_test/setup_scipy_test.py
f55fb2ec42b239d62f7fc25131045795f7aa35bf,"missing import
",weave/build_tools.py
200bff5384ca06d4d61570a576f94ff63b6c335d,"added yet another directory into the path of intermediate files generated by
weave.  This is needed so that people switching between compilers don't end
up trying to link c++ object files built with incompatible compilers together.

changed Py_INCREF to a Py_XINCREF to guard against NULL pointer problems
in convert_to_xxx routines.

lengthened the type_names strings for Numeric type names in
standard_array_spec.  It was shorter than some of the names. yikes!

choose_compiler stuff is no longer done by ext_modules.  This was used
to allow xxx_convterters and xxx_info objects to generate different code
depending on which compiler was used.  This is no longer done, and I don't
think it should be necessary going forward.  I've left a little of the code
in case I'm wrong, but will probably hack it out soon.
",weave/blitz-20001213/blitz/config.h,weave/blitz_spec.py,weave/build_tools.py,weave/c_spec.py,weave/common_info.py,weave/ext_tools.py,weave/standard_array_spec.py
9dec5004a2593a123fb80eefcb5d73a229cb7501,"removed some old comments about stdc++ and linking issues with gcc.  They are
no longer pertinent because we have moved to linking with g++ to solve
the problem.
",weave/build_tools.py
9d56fb08134529c827b9bbcf0854d43cf7898d9f,"moved lib2def.py from weave to scipy_distutils

removed lib2def and logging from scipy_distutils as they now live in scipy_test
",scipy_distutils/auto_test.py,{weave,scipy_distutils/logging.py,weave/__init__.py,weave/build_tools.py,weave/setup.py
a2d92aaca3cd2e897b080867623c7802e7970da0,"changed config.h defines to check for gcc3 and set definitions appropriately.
",weave/blitz-20001213/blitz/config.h
09d3a0753f3b1f03c5990084c152af06775536f5,"Fixed problem with unix2dos file conversion routine
",scipy_distutils/line_endings.py
f3e6c3774bf4cb7103391826f27fe5a849fa856b,"MSVC did not have a linker_so variable defined.  This defines a dummy value for it (set to None) so that scipy_base can be built and used with MSVC.  Other pure C modules will also work with MSVC.  C/Fortran will have to wait so that we can work out any linker issues.
",scipy_distutils/command/build_ext.py
6cdc5475289cd2d0ec41d793aa979d91ea965be2,"MSVC complained about 1.0/0.0 as a divide by 0 error.  The error went away if I
made a variable named zero=0.0 and did 1/zero.
",scipy_base/fastumathmodule.c
819731acb7ab212c74a850239cc2188d51a4ed03,"changed testing module from scipy_base to scipy_test
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/limits.py,scipy_base/matrix_base.py,scipy_base/shape_base.py,scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py,scipy_base/type_check.py,weave/vtk_spec.py
e7e3556b1a532a82c363625265f444e21d1a5048,"added a catchall converter that converts all items not caught by other
converters to PyObject*

converted testing to use scipy_test.testing
",weave/__init__.py,weave/ast_tools.py,weave/blitz_tools.py,weave/build_tools.py,weave/c_spec.py,weave/catalog.py,weave/ext_tools.py,weave/inline_tools.py,weave/setup.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_spec.py,weave/tests/test_c_spec.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/weave_test_utils.py,weave/wx_spec.py
a72ece7b02b67e14dd52cf3c05f3465bfa27171b,"added configuration script to scipy_test
",scipy_test/setup_scipy_test.py,scipy_test/testing.py
ca2c1b57e47ef45a750b8a26d100c5a67117c251,"added init.py file so that scipy_test becomes a package.
",scipy_test/__init__.py
70c9caef428752d7fff46c747f114303dc079800,"added scipy_test (actually reinstated it) to the repository.  It now holds auto_test.py  testing.py and logging.py

In the long run, logging.py is going to be part of python, so it will disappear.  auto_test.py isn't getting used directly either, so its presence isn't absolutely necessary.  For now, we'll leave it.
",scipy_test/auto_test.py,scipy_test/logging.py,scipy_test/testing.py
8b32c6733a6ab787db59097d63c457c4f01f342e,"merging differences between support for ""catchall"" converters and the vtk converter.
",weave/converters.py
f8fc8923f2ed8d4da323558092b1307383aa5685,"Fixed unique function for Python 2.1
",scipy_base/function_base.py
0b94f013bfb5e2efb891f1c82390912276e0d7fb,"This fixes infinite loop when testing weave
",weave/__init__.py
5d7c9032c020020ad71a846e311f12b63480f614,"ENH: Updated to add the new VTK converter.
",weave/converters.py
3b2b316874ef01a39fbd86f51494bd2c2a847558,"NEW: Added a VTK type converter for weave.
",weave/vtk_spec.py
3bfc473f92dbf3827c02d0e0950658dc95ee19e6,"dolled up some of the comments
",scipy_distutils/command/build_flib.py
51b6df86d02200d48bc84349be34629e00e48784,"changes to get SciPy to build with Sun's Forte Fortran compilers.  I
suspect there may be more changes in the near future.  The
sun_fortran_compiler class seems a bit too complex to me.  In fact, it
seems like it declares info for two or four compilers.  Should it be
split into two or more classes?
",scipy_distutils/command/build_flib.py
ef494feebe6224fb56ba36961b60d609f74551ee,"The existing code couldn't possibly work on shared machines, as weave
was trying to write to /tmp/pythonNM_intermediate for all users.
These changes are aimed at fixing that problem.  An extra directory
layer, currently defined by whoami() (new function) is inserted, e.g.,

    /tmp/skip/pythonNM_intermediate

Somebody with more cross-platform experience should check whoami() for
portability issues (does M$ have to fiddle everything they touch?).

Other related bits:

 * added create_dir() which will create a path, including any missing
   intermediate paths.

 * moved the tempfile import to the top level (function-level imports
   got much slower in Python 2.2, so are normally to be avoided).

 * dumped the os.access() calls in favor of a new is_writable()
   function which simply checks to see if it can create a file in the
   given directory.  access() is almost never what you want... ;-)
   is_writable() should also be checked for portability issues.
",weave/catalog.py
74944fabc1dcaf0a42418029366eae8af23316bc,"fix typo in warning messages
",weave/build_tools.py
66d1a0865cfde0da460684fe4e88e99a967d8e46,"added some overloaded ""="" methods for ListMmbr and DictMmbr classes so that
assignment from standard C++ types was possible.  Now

a[0] = ""hello"";
a[1] = 1.3;
a[2] = 1;

should work for dicts and lists.  I think I will overload tuples also to do
this, although perhaps immutability says this shouldn't happen...

I expect this is still slow as Christmas compared to using the Python API.
",weave/scxx/PWOImp.cpp,weave/scxx/PWOMSequence.h,weave/scxx/PWOMapping.h,weave/scxx/PWOSequence.h
83e0c5812a4c3fbc44cf074a7010b8a4b6595bb5,"Introduced get_package_path function. It is meant to be used in <package>/tests/test_*.py files to set the package path. This will facilitate running tests both from the development tree as well as from installed package tree.
",scipy_base/testing.py
8851cdd71a2bf5e6934ccf7bfd5ae5cfb1443893,"removed a few files from old version
",weave/common_spec.py,weave/scalar_info.py,weave/scalar_spec.py,weave/sequence_spec.py,weave/unicode_spec.py
2143f22349194dfed84b16ab06ac7fe33018cc75,"major rewrite of weave.

0.
The underlying library code is significantly re-factored and simpler. There used to be a xxx_spec.py and xxx_info.py file for every group of type conversion classes.  The spec file held the python code that handled the conversion and the info file had most of the C code templates that were generated.  This proved pretty confusing in practice, so the two files have mostly been merged into the spec file.

Also, there was quite a bit of code duplication running around.  The re-factoring was able to trim the standard conversion code base (excluding blitz and accelerate stuff) by about 40%.  This should be a huge maintainability and extensibility win.

1.
With multiple months of using Numeric arrays, I've found some of weave's ""magic variable"" names unwieldy and want to change them.  The following are the old declarations for an array x of Float32 type:

        PyArrayObject* x = convert_to_numpy(...);
        float* x_data = (float*) x->data;
        int*   _Nx = x->dimensions;
        int*   _Sx = x->strides;
        int    _Dx = x->nd;

The new declaration looks like this:

        PyArrayObject* x_array = convert_to_numpy(...);
        float* x = (float*) x->data;
        int*   Nx = x->dimensions;
        int*   Sx = x->strides;
        int    Dx = x->nd;

This is obviously not backward compatible, and will break some code (including a lot of mine).  It also makes inline() code more readable and natural to write.

2.
I've switched from CXX to Gordon McMillan's SCXX for list, tuples, and dictionaries.  I like CXX pretty well, but its use of advanced C++ (templates, etc.) caused some portability problems.  The SCXX library is similar to CXX but doesn't use templates at all.  This, like (1) is not an
API compatible change and requires repairing existing code.

I have also thought about boost python, but it also makes heavy use of templates.  Moving to SCXX gets rid of almost all template usage for the standard type converters which should help portability.  std::complex and std::string from the STL are the only templates left.  Of course blitz still uses templates in a major way so weave.blitz will continue to be hard on compilers.

I've actually considered scrapping the C++ classes for list, tuples, and
dictionaries, and just fall back to the standard Python C API because the classes are waaay slower than the raw API in many cases.  They are also more convenient and less error prone in many cases, so I've decided to stick with them.  The PyObject variable will always be made available for variable ""x"" under the name ""py_x"" for more speedy operations.  You'll definitely want to use these for anything that needs to be speedy.

3.
strings are converted to std::string now.  I found this to be the most useful type in for strings in my code.  Py::String was used previously.

4.
There are a number of reference count ""errors"" in some of the less tested conversion codes such as instance, module, etc.  I've cleaned most of these up.  I put errors in quotes here because I'm actually not positive that objects passed into ""inline"" really need reference counting applied to them.  The dictionaries passed in by inline() hold references to these objects so it doesn't seem that they could ever be garbage collected inadvertently.  Variables used by ext_tools, though, definitely need the reference counting done.  I don't think this is a major cost in speed, so it probably isn't worth getting rid of the ref count code.

5.
Unicode objects are now supported.  This was necessary to support rendering Unicode strings in the freetype wrappers for Chaco.

6.
blitz++ was upgraded to the latest CVS.  It compiles about twice as fast as the old blitz and looks like it supports a large number of compilers (though only gcc 2.95.3 is tested).  Compile times now take about 9 seconds on my 850 MHz PIII laptop.
",weave/blitz-20001213/blitz/MAT-NOTE.gz,weave/blitz-20001213/blitz/Makefile.am,weave/blitz-20001213/blitz/Makefile.in,weave/blitz-20001213/blitz/applics.h,weave/blitz-20001213/blitz/array-impl.h,weave/blitz-20001213/blitz/array-old.h,weave/blitz-20001213/blitz/array.h,weave/blitz-20001213/blitz/array/Makefile.am,weave/blitz-20001213/blitz/array/Makefile.in,weave/blitz-20001213/blitz/array/asexpr.h,weave/blitz-20001213/blitz/array/bops.cc,weave/blitz-20001213/blitz/array/cartesian.h,weave/blitz-20001213/blitz/array/cgsolve.h,weave/blitz-20001213/blitz/array/complex.cc,weave/blitz-20001213/blitz/array/convolve.cc,weave/blitz-20001213/blitz/array/convolve.h,weave/blitz-20001213/blitz/array/cycle.cc,weave/blitz-20001213/blitz/array/domain.h,weave/blitz-20001213/blitz/array/et.h,weave/blitz-20001213/blitz/array/eval.cc,weave/blitz-20001213/blitz/array/expr.h,weave/blitz-20001213/blitz/array/fastiter.h,weave/blitz-20001213/blitz/array/funcs.h,weave/blitz-20001213/blitz/array/functorExpr.h,weave/blitz-20001213/blitz/array/geometry.h,weave/blitz-20001213/blitz/array/indirect.h,weave/blitz-20001213/blitz/array/interlace.cc,weave/blitz-20001213/blitz/array/io.cc,weave/blitz-20001213/blitz/array/iter.h,weave/blitz-20001213/blitz/array/map.h,weave/blitz-20001213/blitz/array/methods.cc,weave/blitz-20001213/blitz/array/misc.cc,weave/blitz-20001213/blitz/array/multi.h,weave/blitz-20001213/blitz/array/newbops.cc,weave/blitz-20001213/blitz/array/newet-macros.h,weave/blitz-20001213/blitz/array/newet.h,weave/blitz-20001213/blitz/array/ops.cc,weave/blitz-20001213/blitz/array/ops.h,weave/blitz-20001213/blitz/array/reduce.cc,weave/blitz-20001213/blitz/array/reduce.h,weave/blitz-20001213/blitz/array/resize.cc,weave/blitz-20001213/blitz/array/shape.h,weave/blitz-20001213/blitz/array/slice.h,weave/blitz-20001213/blitz/array/slicing.cc,weave/blitz-20001213/blitz/array/stencil-et.h,weave/blitz-20001213/blitz/array/stencilops.h,weave/blitz-20001213/blitz/array/stencils.cc,weave/blitz-20001213/blitz/array/stencils.h,weave/blitz-20001213/blitz/array/storage.h,weave/blitz-20001213/blitz/array/uops.cc,weave/blitz-20001213/blitz/array/where.h,weave/blitz-20001213/blitz/array/zip.h,weave/blitz-20001213/blitz/bench.cc,weave/blitz-20001213/blitz/bench.h,weave/blitz-20001213/blitz/benchext.cc,weave/blitz-20001213/blitz/benchext.h,weave/blitz-20001213/blitz/blitz.h,weave/blitz-20001213/blitz/bzdebug.h,weave/blitz-20001213/blitz/compiler.h,weave/blitz-20001213/blitz/config-ICL.h,weave/blitz-20001213/blitz/config-KCC.h,weave/blitz-20001213/blitz/config-SC4.0.h,weave/blitz-20001213/blitz/config-SGi.h,weave/blitz-20001213/blitz/config-g++2.7.2.h,weave/blitz-20001213/blitz/config-mwerks.h,weave/blitz-20001213/blitz/config-xlC.h,weave/blitz-20001213/blitz/etbase.h,weave/blitz-20001213/blitz/extremum.h,weave/blitz-20001213/blitz/funcs.h,weave/blitz-20001213/blitz/generate/Makefile.am,weave/blitz-20001213/blitz/generate/Makefile.in,weave/blitz-20001213/blitz/generate/arroperands.h,weave/blitz-20001213/blitz/generate/arroptuple.h,weave/blitz-20001213/blitz/generate/bzfstream.h,weave/blitz-20001213/blitz/generate/genarrbops.cpp,weave/blitz-20001213/blitz/generate/genarruops.cpp,weave/blitz-20001213/blitz/generate/genmatbops.cpp,weave/blitz-20001213/blitz/generate/genmathfunc.cpp,weave/blitz-20001213/blitz/generate/genmatuops.cpp,weave/blitz-20001213/blitz/generate/genpromote.cpp,weave/blitz-20001213/blitz/generate/genvecbops.cpp,weave/blitz-20001213/blitz/generate/genvecuops.cpp,weave/blitz-20001213/blitz/generate/genvecwhere.cpp,weave/blitz-20001213/blitz/generate/operands.h,weave/blitz-20001213/blitz/generate/operands2.h,weave/blitz-20001213/blitz/generate/optuple.h,weave/blitz-20001213/blitz/generate/optuple2.h,weave/blitz-20001213/blitz/indexexpr.h,weave/blitz-20001213/blitz/limits-hack.h,weave/blitz-20001213/blitz/listinit.h,weave/blitz-20001213/blitz/matbops.h,weave/blitz-20001213/blitz/matdiag.h,weave/blitz-20001213/blitz/matexpr.h,weave/blitz-20001213/blitz/matgen.h,weave/blitz-20001213/blitz/mathf2.h,weave/blitz-20001213/blitz/mathfunc.h,weave/blitz-20001213/blitz/matltri.h,weave/blitz-20001213/blitz/matref.h,weave/blitz-20001213/blitz/matrix.cc,weave/blitz-20001213/blitz/matrix.h,weave/blitz-20001213/blitz/matsymm.h,weave/blitz-20001213/blitz/mattoep.h,weave/blitz-20001213/blitz/matuops.h,weave/blitz-20001213/blitz/matutri.h,weave/blitz-20001213/blitz/memblock.cc,weave/blitz-20001213/blitz/memblock.h,weave/blitz-20001213/blitz/meta/Makefile.am,weave/blitz-20001213/blitz/meta/Makefile.in,weave/blitz-20001213/blitz/meta/dot.h,weave/blitz-20001213/blitz/meta/matassign.h,weave/blitz-20001213/blitz/meta/matmat.h,weave/blitz-20001213/blitz/meta/matvec.h,weave/blitz-20001213/blitz/meta/metaprog.h,weave/blitz-20001213/blitz/meta/product.h,weave/blitz-20001213/blitz/meta/sum.h,weave/blitz-20001213/blitz/meta/vecassign.h,weave/blitz-20001213/blitz/minmax.h,weave/blitz-20001213/blitz/mstruct.h,weave/blitz-20001213/blitz/numinquire.h,weave/blitz-20001213/blitz/numtrait.h,weave/blitz-20001213/blitz/ops.h,weave/blitz-20001213/blitz/prettyprint.h,weave/blitz-20001213/blitz/promote-old.h,weave/blitz-20001213/blitz/promote.h,weave/blitz-20001213/blitz/rand-dunif.h,weave/blitz-20001213/blitz/rand-normal.h,weave/blitz-20001213/blitz/rand-tt800.h,weave/blitz-20001213/blitz/rand-uniform.h,weave/blitz-20001213/blitz/random.h,weave/blitz-20001213/blitz/randref.h,weave/blitz-20001213/blitz/range.h,weave/blitz-20001213/blitz/reduce.h,weave/blitz-20001213/blitz/shapecheck.h,weave/blitz-20001213/blitz/tau.h,weave/blitz-20001213/blitz/timer.h,weave/blitz-20001213/blitz/tiny.h,weave/blitz-20001213/blitz/tinymat.h,weave/blitz-20001213/blitz/tinymatexpr.h,weave/blitz-20001213/blitz/tinymatio.cc,weave/blitz-20001213/blitz/tinyvec-et.h,weave/blitz-20001213/blitz/tinyvec.cc,weave/blitz-20001213/blitz/tinyvec.h,weave/blitz-20001213/blitz/tinyvecio.cc,weave/blitz-20001213/blitz/tinyveciter.h,weave/blitz-20001213/blitz/traversal.cc,weave/blitz-20001213/blitz/traversal.h,weave/blitz-20001213/blitz/tuning.h,weave/blitz-20001213/blitz/tvcross.h,weave/blitz-20001213/blitz/tvecglobs.h,weave/blitz-20001213/blitz/update.h,weave/blitz-20001213/blitz/vecaccum.cc,weave/blitz-20001213/blitz/vecall.cc,weave/blitz-20001213/blitz/vecany.cc,weave/blitz-20001213/blitz/vecbops.cc,weave/blitz-20001213/blitz/veccount.cc,weave/blitz-20001213/blitz/vecdelta.cc,weave/blitz-20001213/blitz/vecdot.cc,weave/blitz-20001213/blitz/vecexpr.h,weave/blitz-20001213/blitz/vecexprwrap.h,weave/blitz-20001213/blitz/vecglobs.cc,weave/blitz-20001213/blitz/vecglobs.h,weave/blitz-20001213/blitz/vecio.cc,weave/blitz-20001213/blitz/veciter.h,weave/blitz-20001213/blitz/vecmax.cc,weave/blitz-20001213/blitz/vecmin.cc,weave/blitz-20001213/blitz/vecnorm.cc,weave/blitz-20001213/blitz/vecnorm1.cc,weave/blitz-20001213/blitz/vecpick.cc,weave/blitz-20001213/blitz/vecpick.h,weave/blitz-20001213/blitz/vecpickio.cc,weave/blitz-20001213/blitz/vecpickiter.h,weave/blitz-20001213/blitz/vecsum.cc,weave/blitz-20001213/blitz/vector-et.h,weave/blitz-20001213/blitz/vector.cc,weave/blitz-20001213/blitz/vector.h,weave/blitz-20001213/blitz/vecuops.cc,weave/blitz-20001213/blitz/vecwhere.cc,weave/blitz-20001213/blitz/vecwhere.h,weave/blitz-20001213/blitz/zero.cc,weave/blitz-20001213/blitz/zero.h,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/dict_sort.py,weave/examples/fibonacci.py,weave/examples/functional.py,weave/examples/increment_example.py,weave/examples/md5_speed.py,weave/examples/ramp.py,weave/examples/ramp2.py,weave/examples/support_code_example.py,weave/examples/tuple_return.py,weave/examples/vq.py,weave/examples/wx_example.py,weave/scxx/PWOBase.h,weave/scxx/PWOCallable.h,weave/scxx/PWOImp.cpp,weave/scxx/PWOMSequence.h,weave/scxx/PWOMapping.h,weave/scxx/PWONumber.h,weave/scxx/PWOSequence.h,weave/scxx/README.txt,weave/scxx/scxx.h,weave/tests/test_blitz_tools.py,weave/tests/test_c_spec.py,weave/tests/test_common_spec.py,weave/tests/test_ext_tools.py,weave/tests/test_inline_tools.py,weave/tests/test_scalar_spec.py,weave/tests/test_sequence_spec.py,weave/tests/test_string_spec.py
d3a1627631042af2fe74620f5688d9ba99ce87cf,"major rewrite of weave.

0.
The underlying library code is significantly re-factored and simpler. There used to be a xxx_spec.py and xxx_info.py file for every group of type conversion classes.  The spec file held the python code that handled the conversion and the info file had most of the C code templates that were generated.  This proved pretty confusing in practice, so the two files have mostly been merged into the spec file.

Also, there was quite a bit of code duplication running around.  The re-factoring was able to trim the standard conversion code base (excluding blitz and accelerate stuff) by about 40%.  This should be a huge maintainability and extensibility win.

1.
With multiple months of using Numeric arrays, I've found some of weave's ""magic variable"" names unwieldy and want to change them.  The following are the old declarations for an array x of Float32 type:

        PyArrayObject* x = convert_to_numpy(...);
        float* x_data = (float*) x->data;
        int*   _Nx = x->dimensions;
        int*   _Sx = x->strides;
        int    _Dx = x->nd;

The new declaration looks like this:

        PyArrayObject* x_array = convert_to_numpy(...);
        float* x = (float*) x->data;
        int*   Nx = x->dimensions;
        int*   Sx = x->strides;
        int    Dx = x->nd;

This is obviously not backward compatible, and will break some code (including a lot of mine).  It also makes inline() code more readable and natural to write.

2.
I've switched from CXX to Gordon McMillan's SCXX for list, tuples, and dictionaries.  I like CXX pretty well, but its use of advanced C++ (templates, etc.) caused some portability problems.  The SCXX library is similar to CXX but doesn't use templates at all.  This, like (1) is not an
API compatible change and requires repairing existing code.

I have also thought about boost python, but it also makes heavy use of templates.  Moving to SCXX gets rid of almost all template usage for the standard type converters which should help portability.  std::complex and std::string from the STL are the only templates left.  Of course blitz still uses templates in a major way so weave.blitz will continue to be hard on compilers.

I've actually considered scrapping the C++ classes for list, tuples, and
dictionaries, and just fall back to the standard Python C API because the classes are waaay slower than the raw API in many cases.  They are also more convenient and less error prone in many cases, so I've decided to stick with them.  The PyObject variable will always be made available for variable ""x"" under the name ""py_x"" for more speedy operations.  You'll definitely want to use these for anything that needs to be speedy.

3.
strings are converted to std::string now.  I found this to be the most useful type in for strings in my code.  Py::String was used previously.

4.
There are a number of reference count ""errors"" in some of the less tested conversion codes such as instance, module, etc.  I've cleaned most of these up.  I put errors in quotes here because I'm actually not positive that objects passed into ""inline"" really need reference counting applied to them.  The dictionaries passed in by inline() hold references to these objects so it doesn't seem that they could ever be garbage collected inadvertently.  Variables used by ext_tools, though, definitely need the reference counting done.  I don't think this is a major cost in speed, so it probably isn't worth getting rid of the ref count code.

5.
Unicode objects are now supported.  This was necessary to support rendering Unicode strings in the freetype wrappers for Chaco.

6.
blitz++ was upgraded to the latest CVS.  It compiles about twice as fast as the old blitz and looks like it supports a large number of compilers (though only gcc 2.95.3 is tested).  Compile times now take about 9 seconds on my 850 MHz PIII laptop.
",weave/__init__.py,weave/base_spec.py,weave/blitz_info.py,weave/blitz_spec.py,weave/blitz_tools.py,weave/c_spec.py,weave/code_blocks.py,weave/common_info.py,weave/conversion_code.py,weave/conversion_code_old.py,weave/converters.py,weave/cxx_info.py,weave/ext_tools.py,weave/inline_info.py,weave/inline_tools.py,weave/misc.py,weave/setup.py,weave/setup_weave.py,weave/slice_handler.py,weave/standard_array_info.py,weave/standard_array_spec.py,weave/swig_info.py,weave/unicode_info.py,weave/wx_info.py,weave/wx_spec.py
6538641ccf3beb2cc304b5ee21365cb44ff6800b,"Using jiffies from /proc/pid/stat when measuring benchmarks for more objective results (time.time is inaccurate when python process was suspended or got temporarily less CPU time etc.). On platforms where jiffies are not available, time.time is used as a next best option.
",scipy_base/testing.py
0ee977f42c09e813e0ab209e0fcb08a41e7ec7b2,"Fixed the order of fftw libraries
",scipy_distutils/system_info.py
e6612ba7e683c0a69c81b493a146b76e45d3c93b,"Used dictionary keys to speed up unique algorithm.
",scipy_base/function_base.py
a1cc4506582028fd3a5afd81fbdbf4b5a323c954,"Applied Steve M. Robbins patches to serve SGI MIPS compilers. Minor other fixes.
",scipy_base/__init__.py,scipy_base/_compiled_base.c
ac14c956d27961edc283b7ee1b08f7497a7678bf,"Fixed djbfft_info. Changed the values of macros like SCIPY_FFTW_H from 1 to None.
",scipy_distutils/system_info.py
5e3b7826da1bb357993e68d8af77480fced1f4fb,"Fixed atlas_info: use lapack only from the place where atlas is.
",scipy_distutils/sample_site.cfg,scipy_distutils/system_info.py
e715aec74dca7265a37e74f93e161fe8d91315c0,"Using -fomit-frame-pointer in gcc FFLAGS
",scipy_distutils/command/build_flib.py,scipy_distutils/misc_util.py
8875658de63eec827c77c67a6ebf2c5f2434d714,"Fixed a bug.
",scipy_distutils/command/run_f2py.py
28866ce74dd5e0100364815f2bed07a17487b34f,"Introduced djbfft_info class (djbfft is faster than fftw but supports only N=2**m transforms where m=1..13). Splitted fftw_info into dfftw_info,sfftw_info,fftw_threads_info, etc.
",scipy_distutils/system_info.py
ecf3868089e80384227dac6e13d2dbb0230594e2,"Added new tests to stats package.
",scipy_base/_compiled_base.c,scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c,scipy_base/function_base.py,scipy_base/setup_scipy_base.py
c57dbddce6dd9e3aded631bb5097135990480530,"Checking for completeness of the lapack library when detecting atlas
",scipy_distutils/system_info.py
0439ef09fcad6fb7d6c34c4fccaa90e048f9263e,"Added detrend to signal
",scipy_base/function_base.py,scipy_base/shape_base.py
6fd768e23413d90d0d0dea2c8e7f76b4ec942b58,"Fixed a possible bug in compiler detection. --quite option is now effective also for run_f2py.
",scipy_distutils/command/build_flib.py,scipy_distutils/command/run_f2py.py
2aff0fbe4682fc24998a15c59d74b6c06e8a1627,"Cleaned up scipy_distutils messages: less verbose but keeping
important information, using self.announce instead of print (then
setup.py --quiet works), yellow_text is used for commands, red_text
for warnings and errors (rationale: colored output (if available)
provides distinction between scipy_distutils and distutils messages).
Moved colored terminal hooks to misc_util.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/run_f2py.py,scipy_distutils/misc_util.py
9c373e12f80c4b9172e72f3713824ee534ee9628,"Added Shapiro Wilk test for normality with test.
",scipy_base/__init__.py,scipy_base/function_base.py
be4139665120ab1c99a928f8ce002fdd9abde199,"Int8 arrays always caused exceptions because the type checking code was trying to match them against ""char"" arrays and the types didn't match.  The conversion type check code now treats the byte and char types as if they are equal.
",weave/standard_array_info.py
5cddedde399c88527e44b14bb34b629e929e045e,"standard array conversions were not checking the array type.  As a result,
code compiled for a float array would execute even if handed a int array.
bad. bad. bad.  Type checks on standard array conversions are now done.
Note, though, that standard array conversions don't check for array shape,
so a 2D array handed into code originally compiled for a 3D array will
execute just fine.  This is desired in some cases and not in others.  Its
currently up to the user to protect against the undesired cases.
",weave/blitz_info.py,weave/standard_array_info.py,weave/standard_array_spec.py
c74893465cedbbab2a8d665990364c4ee71a0ea9,"Fixed INCREF bug reported by Matthias Heller that was causing this example to crash.
",weave/examples/functional.py
e6e01392d8b4c678c0e7165626b002055e2f987f,"removed a debugging change I had made that specialized things to my machine.
",weave/swig_info.py
576fe7bcd1ca777cc66f7fd8085af6d96e66523f,"added support for unicode strings.
",weave/converters.py,weave/unicode_info.py,weave/unicode_spec.py
f7a43cc355cc0a8b7b513cad4ec78fb462097bf6,"fixed bug where exceptions during initializing variables could cause
problems with during cleanup of variables that were not initialized.
Now a flag is set for each variable when it is initialized and the
clean up code is only executed for variables that have been initialized.

A init_flag() variable was added to the base_spec to help with the
above bug fix.

The SWIG_GetPtr method does some sophisticated type checking that
weave really doesn't need.  Most of this has been commented out
and a simple string comparison is done to make sure types are correct.
",weave/base_spec.py,weave/ext_tools.py,weave/swig_info.py
45494a3a49e166de539ae6328b7bdf43162c4c12,"Fixed read_array problems for Python 2.2, minor docstring editing.
",scipy_base/index_tricks.py
0ceba18c01e70ded0e17a4e42c2d14265265fb7e,"Fixed approx. 95 per cent of C compiler warnings. The rest require a bit more detailed investigation. Should we fix also Fortran compiler warnings? Maybe later...
",scipy_base/type_check.py
519e772b56f1876d85015f6b40dfc540ca092447,"Fixed HAVE_INVERSE_HYPERBOLIC definition for Win32
",scipy_base/fastumathmodule.c
286affe851621b6311bdaca3c436856c9ceaf00e,"Added differentiate, central_diff_weights, zeropad functions.  Fixed bug in stats module.  Added more examples and text to tutorial.
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/index_tricks.py,scipy_base/scimath.py,scipy_base/shape_base.py,scipy_base/type_check.py
f711f4f03b8935c3c1812d1534b2c1ed46831865,"Fixed asinh bug also in fatumath_unsigned.inc. Removed all compiler warnings.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c
58b81e5cf8aa114e254e0a2f818d38d9466d327f,"Updated comments. Removed -lfortran from mips_fortran_compiler.libraries.
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_flib.py
0c117c65b2dd62c2725459c8db04408b213a2833,"Fixed bug in asinh.
",scipy_base/fastumath_nounsigned.inc
6bd95d1311f4d076860ebce1a693222c9c0e079c,"Introduced blas_src_info for building BLAS library from sources if ATLAS or BLAS libraries are not available.
",scipy_distutils/system_info.py
efb1608fe16ebd999c51b4509f4072366caff768,"Disabled ranlib for MIPSPro compiler. Optimized ar-command cycle when splitting of arguments is required (nt and irix). Minor fixes with error handling.
",scipy_distutils/command/build_flib.py
0d87cce1b0140d5e70b423157ad89506d01d27b1,"Introduced lapack_src_info for compiling LAPACK from scipy/linalg setup scripts
",scipy_distutils/sample_site.cfg
b91d7d9f5ee6a550c9e283989ac4aed839f0efb8,"Introduced lapack_src_info for compiling LAPACK from scipy/linalg setup scripts
",scipy_distutils/system_info.py
7aaffc666b03e99e8fda44e3a24f14f0a773f554,"changed library_dir to library_dirs as it is used in the system_info.py file.

added example for SGI site configuration at the end of the file.
",scipy_distutils/sample_site.cfg
76fc2c06dec2ba223aa26917b8070e5845ef441a,"Fixed problem with 'os.uname' not being defined for win32
",scipy_distutils/command/build_flib.py
5461481eaf276814ec84aec942052f39b704904f,"added Sun support to gcc/g77 that should be compatible with most /opt/sfw installs of open source tools on Sun.  You get a zillion undefiend symbols in libg2c.a if you don't specify -mimpure-text on the link line because libg2c has symbols in it that are defined in a shared library.  Without mimpure-text, gcc on Solaris considers undefined symbols in a static library as fatal errors when building a shared library.  mimpure-text tells the linker to ignore these errors and to go ahead and produce a .so file.

This seems to work for most of SciPy.  I'm still working through ATLAS stuff.
",scipy_distutils/command/build_flib.py
6f0da0ea4bc1034601903814fe8701a6fbab56c9,"Fixed filter_design bug.  Added unsigned support to fastumath if your Numeric has it.
",scipy_base/fastumath_nounsigned.inc,scipy_base/fastumath_unsigned.inc,scipy_base/fastumathmodule.c
3f41d8c569eeff84cf024b7db4393220c050e434,"fixed bug in test.  an error was being thrown with the void value returned by throw_error instead of just calling throw_error.  This passed tests with MSVC but fails with mingw32.
",weave/tests/test_inline_tools.py
8d1be95697dd0c1a140f0eb795f080c0eb7acf9b,"Restored ranlib as 'ar -s' in OS X is invalid
",scipy_distutils/command/build_flib.py
e8b1ec4c4cf4200b57d2f533dee0dca0193de14d,"Applying Berthold's patch for digital_fortran_compiler with refactoring modifications, it needs testing.
",scipy_distutils/command/build_flib.py
09caaafe768671d6bff5a5ff6fea2cdc77f88e08,"Fixed import dependencies that failed in special situations like building locally
",scipy_distutils/command/run_f2py.py,scipy_distutils/core.py
93f561941dc96ba15ee4bf6a4265781331ccea89,"Removed redundant usage of the shortest_path function. Introduced few asserts.
",scipy_distutils/system_info.py
c4690cf8fea2d62541afdee43abc157d7a5fb59e,"Fixed possible cause of the Win32 test failure; 'possible' because the scoreboard is not very informative if something fundamental fails. Added hooks to check the availability of g2c-pic. Fixed optimization flags for gcc 3.x.x.
",scipy_distutils/command/build_flib.py
25ca706c155af666f9244631d460a0f245123ac3,"Impl. lapack and blas info hooks. Replaced static_first flag with search_static_first for site.cfg files and disabled it by default; in future search_static_first hooks may be removed unless it is proved to be useful. Removed the usage of extra_objects that was buggy from the beginning.
",scipy_distutils/command/build_flib.py,scipy_distutils/sample_site.cfg,scipy_distutils/system_info.py
675f967755374eeb75b5af9545cb80f3c74c0f09,"Fixed weave examples vq.py and cast_copy_and_transpose.py --- they were not working due to some typos and unaccounted-for refactoring of SciPy.  Moved from PR import * to module scope.
",scipy_base/type_check.py,weave/examples/cast_copy_transpose.py,weave/examples/vq.py
fbf664aee5f6d29972741ffacdd3db74664cbde6,"Implemented more reliable hooks to determine whether Python stdout can support colored text. Many thanks to c.l.py.
",scipy_distutils/command/build_flib.py
a13b4a6fb73a907d65e2070fc647811f50aad1fa,"Updated comments about F compiler
",scipy_distutils/command/build_flib.py
3817c8dfefb7ffbf96ce6ebb90f70b65805e71a3,"Made changes to allow SciPy to build correctly under cygwin
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/system_info.py
4a7ef6921cea42d182fa29c54a3d71998d407826,"Added HP F90 compiler
",scipy_distutils/command/build_flib.py
3316dc62a92b8f06d36d316509755af04490c1b7,"Fixed fastumath imports. stats tests fail even with fastumath as math
",scipy_base/testing.py,scipy_distutils/command/build_flib.py
37af376df435e6a045a4c92550ca246cf1641d24,"Fixed missing math import
",scipy_base/testing.py
40006b76c878853d4b2ed3be9c264071e6cea220,"Introduced F compiler without any support for it because of it cannot compile fixed format F90 sources:(. Added hooks for colored messages for certain terminals, let me know if you hate it;)
",scipy_distutils/command/build_flib.py
b0e9c8f02bb3c4a879039eac3c2ad43860ca4a3b,"auto_test now runs against 2.2.1/21.0 and 2.1.3/21.0 and 2.1.3/20.3.  Older Numeric versions are no longer tested.
",scipy_distutils/auto_test.py
b76d86fea40b131d61fe110acd4857b97a5a5feb,"fixed bug in auto_test that prevented it from detecting updates on scipy_snapshot
added a check to see it the environment DISPLAY variable was set before running
the xinfo stuff in xplt.  It was causing errors on telnet sessions that didn't
have a display present.
",scipy_distutils/auto_test.py
e0403fd806df19a20b1d73d9efe48b3f550f0b92,"changed g77 version checking from -v to --version.  This hopefully fixes problems on IRIX, but will disable some optimization flags on intel/amd linux machines when gcc 3.x.x is used.  We just need to find what the version number on the 3.x.x reported by g77 --version is to fix this.
",scipy_distutils/command/build_flib.py
ea80961cbae297b29a20bd67824e6c64d3815272,"More modifications to allow instance attributes.
",weave/accelerate_tools.py,weave/bytecodecompiler.py
2dc10d93be422d68c2d9270d160c1459ba3861b1,"converted wx_info to use wx232 -- it doesn't appear to need any libraries from the wxWindows installation.  I think it does still need the wx/wx.h file.

fixed converters to insert the wxpython converter at the front of the list to make sure it is checked before the instance converter is given a shot at the variable.
",weave/converters.py,weave/wx_info.py
904ca23811ef4666766ee79e58e49803326760de,"Added fairly complete PIL to Numeric converters using tostring() and fromstring()
",scipy_base/index_tricks.py,scipy_base/limits.py,scipy_base/type_check.py
45cb47b2e52da076bf098f1175531cd368ddeba8,"Changed mathieu_A to mathieu_even_coef and mathieu_B to mathieu_odd_coef
",scipy_base/polynomial.py
bd759c9e5f0f523bf6e85793ea2cdaab5f181015,"script output is much less verbose now.  Instead of 700K files on complete tests, they are more like 18K.
",scipy_distutils/auto_test.py
50ab5c0e56f6a86839839504fcb9dc80c055f4b4,"added testing log comment
",scipy_distutils/auto_test.py
a90a991b2e0631b9d725faf1e1b7907e5e3bd645,"auto_test now mails to the scipy-testlog mailing lists.  Test files are about 350K
right now.  We'll work to short them in the future.  Errors in the build process
still result in a mail message to tell where the build process broke.
",scipy_distutils/auto_test.py
a9bd45e70717507055ab1c08dabcbddba4ab3ebb,"auto_test is the begiinings of an automated test suite for scipy.  It downloads and builds python,
scipy and all the dependencies (except atlas...).  It then sends email based on the results.
It requires the logging.py file that hopefully will make it into the standard library.
",scipy_distutils/auto_test.py,scipy_distutils/logging.py
577d7613c5e1b6ad60772ff7509d81dd40720188,"Enabled using ATLAS env.var. again and fixed typo in stats tests
",scipy_distutils/system_info.py
ec4b02730139956f1c3963238958fc7c71fb7a6c,"improved how error is thrown in test
",weave/tests/test_inline_tools.py
52a0610b4cd42a5e278b08340fcf375e090a4e32,"fixed a test that was broken.  The test also points out that exceptions can be skipped with when the C++ code isn't constructed correctly.
",weave/tests/test_inline_tools.py
f12841acc066ac7ea8db9d6ccccbfeddb2be29ca,"Fixed typo in mconf_BE.h and limits import in plt
",scipy_base/mconf_lite_BE.h
5e2f226d1ef47f124f4b529bcf5ba71b3829e4b4,"setup atlas directory search path so that prefix path is searched before /usr/lib so that ""locally"" installed atlas libraries are found before system libraries.  Note this only works if python is also locally installed.
",scipy_distutils/system_info.py
35da74a23035d8ea5d2e0236fab7f376e44f0baa,"LGPL --> BSD license conversion
",scipy_distutils/command/cpuinfo.py,scipy_distutils/system_info.py
17273e91cc84b6e9a38d0df7d4dcee1de46ecbd8,"added try/except tests for Numeric back into testing.py so that it can be used external to scipy and when Numeric is not available.
",scipy_base/testing.py
e2a37c803e96023624f308c7f25b7301f26c4f1d,"added option for compile arguments for fastumath.  It is empty for now, but may be helpful for ng gcc versions of fastumath compatible with MSVC versions of Numeric.  For now, Travis O. has modified fastumath to solve the problem.
",scipy_base/setup_scipy_base.py
c3a596e6fac543df144c46b0b99738177b241f9e,"Removing obsolete scipy_test
",scipy_test/__init__.py,scipy_test/scipy_test.py,scipy_test/setup.py,scipy_test/setup_scipy_test.py
d7c565a17f40072c37ac746e46fae0e9d493731d,"Removing obsolete hooks
",scipy_distutils/fftw_info.py
8a040fa109cca999a40726422eadbd18a7310a89,"Replacing linalg with linalg2: linalg->linalg/linalg1 and linalg2->linalg
",scipy_distutils/atlas_info.py,scipy_distutils/system_info.py,scipy_distutils/x11_info.py
de1ef4814bd3e96ed4f7c384c45f2231bd61a20d,"Cleaned up testing.py
",scipy_base/testing.py
7cda86618c3f2e1ff4781b13bec6322892ce2763,"Remove path to weave after lib2def is imported
",scipy_distutils/mingw32_support.py
ed32f5697c533e7dd77a709a81c6f3eaef752b20,"Fixed testing interface for linalg2, in testing local paths are inserted to first position instead of last
",scipy_base/testing.py
525bfa8f809ecb4a14080b5a3b4b055b303b701e,"added an attempt to fix problem with the name cc being used for gcc on FreeBSD.  THis causes weave to fail because it needs to link with g++.
",weave/build_tools.py
38dbd4ba524b7d7f617b7ee5516b762cca431b23,"Fixed scipy_base.fastumath
",scipy_base/setup_scipy_base.py
17ea2ead1f794accc763cda67045fb1b7697ccc9,"Changed == None to is None
",scipy_distutils/mingw32_support.py,weave/accelerate_tools.py,weave/build_tools.py,weave/bytecodecompiler.py,weave/lib2def.py,weave/tests/test_catalog.py
ad8ff90e28c2798e23d4edc0ea8d424569b7b8c3,"Fixed random buglets.
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/limits.py,scipy_base/matrix_base.py,scipy_base/scimath.py,scipy_base/setup_scipy_base.py,scipy_base/testing.py,scipy_base/type_check.py,scipy_test/scipy_test.py,weave/blitz_tools.py,weave/size_check.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_size_check.py,weave/tests/test_standard_array_spec.py
461dee0ff44fdc2762f9baed7b7f0a3a45a100e3,"Removed ieee_754.py (again...)
",scipy_base/ieee_754.py
31773e77b8277aea2989bd227292ea556eb46f8f,"Removed dependence on ufuncobject PyUFunc_DD type functions which can require structure-returning functions to be passed between differently-compiled code.
",scipy_base/fastumathmodule.c,scipy_base/ieee_754.py
a039b9c3290bd9962e70c802c4d8bc1d7dc481b1,"Fixed spheroidal wave functions. Added lu_solve, lu_factor, cho_solve, cho_factor.  Changed help to info if help is already defined.
",scipy_base/ieee_754.py,scipy_base/limits.py,scipy_base/mconf_lite_BE.h,scipy_base/mconf_lite_LE.h
157a6261d337b88fd77b02639c26ba84fe63276a,"Deleted transform_base (again?).
",scipy_base/fastumathmodule.c,scipy_base/transform_base.py
14e7741c7b827c1574b794671cbc7687088c74bf,"removed import of transform_base.  somehow, it snuck in here.
",scipy_base/__init__.py,scipy_base/limits.py
f931eed8f80adf37c085fbcb9c7390d780f3ca38,"Fixed pathsep problem
",scipy_distutils/system_info.py
6983f43207fd2cca82c98a15e31dd50d14a90127,"Changed isposinf and isneginf.
",scipy_base/__init__.py,scipy_base/convenience.py,scipy_base/fastumathmodule.c,scipy_base/testing.py,scipy_base/type_check.py
db8bb3424741a0486653e63d8cee49212c1cc65c,"Moved isnan and friends from cephes to special.  Made comparison functions return UBYTES. Added Complex comparison functions which work on real parts.
",scipy_base/__init__.py,scipy_base/convenience.py,scipy_base/fastumathmodule.c,scipy_base/function_base.py,scipy_base/isnan.c,scipy_base/matrix_base.py,scipy_base/mconf_lite_BE.h,scipy_base/mconf_lite_LE.h,scipy_base/setup_scipy_base.py,scipy_base/tests/test_type_check.py,scipy_base/transform_base.py,scipy_base/type_check.py,weave/accelerate_tools.py,weave/ast_tools.py,weave/misc.py
694e465f0c311bf87ec5ca565fe67622a0d4496b,"isnan was returning arrays from scalars.  Now it returns scalars for scalar inputs
",scipy_base/type_check.py
a01f9c196e7fb50ceb537939dc4984449e635348,"test() was ignoring level argument
",weave/__init__.py
53b06c38badce57edc8d23d4ba8049cc5efc55df,"added import of rand
",scipy_base/tests/test_index_tricks.py
44869d64fc324e72f50bf1f99b58eec9f56db0cb,"added test methods for scipy_base
",scipy_base/tests/test_function_base.py,scipy_base/tests/test_index_tricks.py,scipy_base/tests/test_limits.py,scipy_base/tests/test_matrix_base.py,scipy_base/tests/test_shape_base.py,scipy_base/tests/test_type_check.py
853710928d90fecb9c3a25bbef2cc9040ecc3f90,"removed transform_base files -- all routines added fftpack.fft
",scipy_base/transform_base.py
3c2d8ed5be22cfb91ae89643594508d2c8d6c9c6,"added index_tricks tests
",scipy_base/index_tricks.py
0d0d0eb1e84aad16beead216d272855fc3edc11e,"added helpmod.py and fixed a few import errors
",scipy_base/type_check.py
c117d3173e31d74ed97c811a5ef208ab1c72c263,"r1array and r2array converted to atleast_1d and atleast_2d
",weave/__init__.py,weave/ast_tools.py,weave/blitz_tools.py,weave/build_tools.py,weave/catalog.py,weave/common_spec.py,weave/ext_tools.py,weave/inline_tools.py,weave/scalar_spec.py,weave/sequence_spec.py,weave/setup.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_spec.py,weave/tests/test_scalar_spec.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/weave_test_utils.py,weave/wx_spec.py
b6c68d69358a03fb22f25f40014cff97aed5e15c,"added transform files -- they can be moved to fft whenever
",scipy_base/transform_base.py
19cf0563affa96f821e0ec02af68996dd34ef0a6,"fixed import from utility -> type_check error
",scipy_base/limits.py
409b2139e54c5060c739d04b84c25b41c90c4ee6,"added temp fix for Travis O's machine
",scipy_base/ieee_754.py
3438848f9c2214395da97c53f3e71ef237262615,"removing a few files that were placed here temporarily
",scipy_base/convenience.py,scipy_base/helpmod.py,scipy_base/utility.py
fa4589795279e69c392eaf16d4182fc3bc3dbc58,"removed functions specific to linalg
",scipy_base/matrix_base.py
f897e1fc50d41e219b0868b1394dee9b118082d0,"major reorg of scipy_base -- initial checkin
",scipy_base/__init__.py,scipy_base/function_base.py,scipy_base/ieee_754.py,scipy_base/index_tricks.py,scipy_base/matrix_base.py,scipy_base/polynomial.py,scipy_base/scimath.py,scipy_base/shape_base.py,scipy_base/testing.py,scipy_base/type_check.py
5dcb2081efa2d04accfe75fca7cbe08fbdf37dad,"Finished special functions. (Added orthogonal polynomials).
",scipy_base/__init__.py,scipy_base/polynomial.py,scipy_base/scimath.py
5082215ea3a74cc66a0da9e80094ec503d6ef185,"Applying David M. Cooke's patch with some modifications
",scipy_distutils/sample_site.cfg,scipy_distutils/system_info.py
c3823840a169558363ca66041114ac337492f6fc,"More special functions. Cleaned up use of limits. Added __all__ to limits.
",scipy_base/limits.py,scipy_base/scimath.py
42cec8382b625c970ad8d65c3d23af229bbfd86e,"fixed a import scipy call that shouldn't be there.  Started converting to use scipy_base.testing
",scipy_base/__init__.py,scipy_base/convenience.py,scipy_base/limits.py,scipy_base/setup_scipy_base.py,scipy_base/utility.py
2a66bd782adc3d7673d9afc3d52c78ed49362c4c,"changed limits.py so that its contents are no longer imported into scipy_base's namespace.
",scipy_base/__init__.py
3e03aaf638ebb28c6cfdd91d6c3805fde6e0c44b,"moved scipy_test into scipy_base and renamed it.  It shouldn't be automatically imported into scipy_base namespace since it is generally only used when testing code.
",scipy_base/testing.py
1af787593b1620c950eed9464810852a7f10b7e1,"added limits.py to scipy_base.  It looks like Travis O. began this process, but didn't quite get to checking it in.  I used the 1.13 version from the attic in scipy (the latest version there).  Hope that is the right one.
",scipy_base/limits.py
14983d9c60649993fac02c6a9b4212a333ac858a,"More progress in finishing cephes to include specfun.
",scipy_base/utility.py
341048691467bd651cae6ee4704f79ca27c0e499,"Move limits.py, fastumath
",scipy_base/fastumathmodule.c
8f783998cba36f3b440f1a517e10297ecf6bd761,"Added missing files.
",scipy_base/setup_scipy_base.py
7c4c41e2dd73f8989ed93b4eda55502e3e02efab,"Moved limits.py to scipy_base
",scipy_base/__init__.py
1e175b81241e25e1fd13757c71b704dbf71cd8e4,"Changed references to fastumath to scipy_base.fastumath
",weave/blitz_tools.py,weave/size_check.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_size_check.py,weave/tests/test_standard_array_spec.py
0562713ee528cae5ac5a4386ce92d7d2c37c3b9e,"Refactored to create scipy_base.
",scipy_base/__init__.py,scipy_base/convenience.py,scipy_base/helpmod.py,scipy_base/polynomial.py,scipy_base/scimath.py,scipy_base/utility.py,scipy_test/setup_scipy_test.py
b539116e300999ded6f418730cce709d9cf1f028,"Applied fixes for sun compiler from Berthold H�llmann.
",scipy_distutils/command/build_flib.py
136097468c3b5317bed520eb2a74fd9eaea920c1,"Fixed the order of atlas libs for debian woody
",scipy_distutils/system_info.py
c68907a03908af098bcd498a2bc932aed3bc5452,"changes for MacOS X compatibility
",scipy_distutils/command/build_clib.py,scipy_distutils/command/build_flib.py
f977db592df256485e8bbf5871bc103d7381375a,"Impl. debian specific (but general) atlas finding hooks
",scipy_distutils/command/run_f2py.py,scipy_distutils/system_info.py
b1da40a43f700c57b3cae6c73cf7073031096e68,"added a missing space between preprocessor options that popped up in the Absoft compiler
",scipy_distutils/command/build_flib.py
0fed82b1ace83f2da4b71d019e8e7814bf4ec50a,"Introduced ScipyTestCase with timing hooks
",scipy_test/scipy_test.py
cf5035a497ee83adb91090bf4f4d3c6faf969b9f,"Fixed building extension modules from fortran sources
",scipy_distutils/command/run_f2py.py
a0d6e39d2ca303935901c2f92444fb367f64f3f3,"Subclassed fortran_compiler_base to CCompiler, fortran compiler gets now also -I -D -U options
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/run_f2py.py
6e83d282ae09d4364f5dc383f53d96a19b86aa87,"system_info was setting include_dirs to a string instead of to a list.  This broke win32 builds of linalg2.  Converted to a list.
",scipy_distutils/system_info.py
241b168ac07cbcafdfca709fa26bf32685afce91,"fixed typo in variable name for setting library_dirs
",scipy_distutils/command/build_ext.py
b8eb1007a34934bde5c2ba868852689d1f5311c8,"added a routine to allow using the standard set of Fortran compilers with mingw32 instead of only allowing g77
",scipy_distutils/mingw32_support.py
85943af1f38224aab592e5bf7a50b20d9aebde05,"Loops and 2D Numpy arrays (getitem and setitem).  Still issues
with refcounting and really no safety net, but enough to demonstrate
some speed.
",weave/accelerate_tools.py,weave/bytecodecompiler.py
ebe901ba76179aca6074b728164da7c0ccab023f,"Minor enhancments
",scipy_distutils/misc_util.py
51f44ff4f1e50db5c51c3d3114500a01810505ec,"Added prefix for fftw search path
",scipy_distutils/system_info.py
6c6d36aae7965d1c6756d3efc66f4a17957bff6e,"Introduced PostponedException
",scipy_distutils/misc_util.py
5c232de49fabe194369cc53e9e0f57245c780973,"Introduced PostponedException
",scipy_distutils/misc_util.py
b25fc06001bccd8692ef5b4f49ecbe49007309d9,"Rudimentary loops (range and xrange).  Really good speedups
so far
",weave/accelerate_tools.py,weave/bytecodecompiler.py
956709dd991cfe4c15a80657c83c4318834525cb,"Introduced NotFoundError exceptions with informative doc strings
",scipy_distutils/atlas_info.py,scipy_distutils/command/run_f2py.py,scipy_distutils/system_info.py
af4d15bf79a35239984fdb5d65b3970dc497474f,"fixed a problem with non-breaking spaces not terminated with ';' that screwed up Mozilla
",weave/doc/tutorial.html
a66dce587128e0df7b614a22fcaca701a449dc90,"fixed missing , typo that broke module import/reload/test in some situations (it looked like it should break all situations)...
",scipy_test/scipy_test.py
98b313f079374f9219d62ee48102afeccc7456d9,"Some hacks to get NumPy working (arrgh!!  import_array() call
required!).  Still not quite ready for prime time (though
getitem works on Numeric arrays).  Still have to think through
how to deal with explict reference counting.  It is likely
better to test for contiguous arrays and convert to a int*
(though we lose binops!).
",weave/accelerate_tools.py,weave/bytecodecompiler.py
421cba8a32c44d28624d6bdc73188ffdc50de750,"Py 2.0 support
",scipy_distutils/misc_util.py
75d348683333d757c769b1d0d1a117e05bcc1260,"Python 2.0 support
",scipy_distutils/command/build.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/run_f2py.py,scipy_distutils/core.py,scipy_distutils/misc_util.py
c22540a20f509e9f94a522567cbb5d2c1b8a96e9,"Applied system_info hooks to scipy. Win32 support is still open.
",scipy_distutils/atlas_info.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/system_info.py
06a9f21379b2631f3e5fd182ea2af524fedbdf28,"Fixed bugs, introduced get_info function
",scipy_distutils/system_info.py
0ae7d411b836a5cbd3de7d0e703911660ac16b9a,"Impl. atlas_info, fftw_info classes
",scipy_distutils/atlas_info.py,scipy_distutils/system_info.py
b928b922ba440f9fa361be6b98e4e958b6c52f9e,"Allowing for wrong directories to be mentioned in library_path.
",scipy_distutils/atlas_info.py
19ad2a8e5a712a12f5eb1bfcd347e978eb303058,"Fixed bug in scipy_distutils -- extra_linker_arguments was the incorrect variable in system_info.  Also, changed library_path at the top of atlas_info to None so that the list would be searched.
",scipy_distutils/atlas_info.py,scipy_distutils/system_info.py
a9e45905eb56f143eda3f33df88a07444e64488d,"Impl. system_info and x11_info
",scipy_distutils/misc_util.py,scipy_distutils/system_info.py
1fb3905e0f4987b02c11de1954e9b8e31636c551,"Finalized scipy version hooks
",scipy_distutils/__version__.py,scipy_distutils/atlas_info.py,scipy_distutils/misc_util.py
64ffff9d53d2c26f0b7c014fb0152ccfc6568c34,"Fixed bug in build_ext.py
",scipy_distutils/command/build_ext.py
5ba533b4b7b4562c36df4d0a698efff872a98086,"major overhaul to testing framework.  module_xxx.test() now takes a 'level' argument to specify how thorough the testing should be.  Level 1 is the least thorough, and only runs rapid tests (as specified by the test writer) on the module/package.  level=10 is the most thorough testing.  Any value between 1 and 10 can be used.  I'm currently using 1, 5, and 10 for most of my tests, but others may wish to use more fine grained settings.
",scipy_test/scipy_test.py,weave/__init__.py,weave/ast_tools.py,weave/blitz_tools.py,weave/build_tools.py,weave/catalog.py,weave/common_spec.py,weave/ext_tools.py,weave/inline_tools.py,weave/scalar_spec.py,weave/sequence_spec.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_spec.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_build_tools.py,weave/tests/test_catalog.py,weave/tests/test_common_spec.py,weave/tests/test_ext_tools.py,weave/tests/test_inline_tools.py,weave/tests/test_scalar_spec.py,weave/tests/test_sequence_spec.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/test_string_spec.py,weave/tests/test_wx_spec.py,weave/wx_spec.py
04891cf9a4a66f2c64391eda97ecf38fff9d35c9,"changed references to scipy.scipy_test to scipy_test.
",weave/tests/test_scalar_spec.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py
22dd77138b93cc32d7f87bb1d4c3df81c333f60a,"The import method in the testing methods was causing an infinite loop when running test suites.  The new approach is less general, but it does work.
",weave/__init__.py
1f880dac85d9ba8f01006db67e61f924df983af0,"When Fortran compilers didn't specify a shared library, the Fortran specific libraries were linked in.  The additions hopefully take care of this.
",scipy_distutils/command/build_ext.py
0894dd3f103ce8e44416fb3369f241dee5c6dd9a,"Very prototypical version of weave.accelerate
This one is sensitive to argument types and chooses
the appropriate function.  It includes functionality
to allow

foo = weave.accelerate(foo)
foo_int = foo.sample(0) # arguments are for type sampling only...
foo_double = foo.sample(0.0)

Numeric is still hosed (Dying on PyArray_Check of all things! --
It is trying to pull in the C API array instead of using the
normal type checking mechanism (ends up using a NULL pointer))

No tests as yet.  I'll build a unittest compatible version for
the simple test.  Current ""super"" function object is about
10 times more overhead to check function types.  We may do
well to pull that into one generic mega-test inside the wrapper
code eventually.  The ""accelerated"" generic version of a+b is 10
times slower than native.  The full accelerated version is 2x
faster (hey -- it's a+b what do you want!)
",weave/__init__.py,weave/accelerate_tools.py,weave/bytecodecompiler.py
9ae4d9e810749413fb6a91106b4c5ee05f6c0fc1,"Introduced x11_info and fixed the inefficiency of xplt setup
",scipy_distutils/__version__.py,scipy_distutils/x11_info.py
2dfed378bdc129e2f0d5fcc814b5a8a8b02dff0b,"CVS state is now sdist-build-import'able
",scipy_distutils/__version__.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_py.py,scipy_distutils/command/run_f2py.py,scipy_distutils/misc_util.py,weave/setup_weave.py
66496b3b771ab9079fa842b4cae86022fe61ef6b,"Fixed trivial bug that prevented setup.py from running at all.
",scipy_distutils/misc_util.py
5d22e0e816d103462c95f31e92b5a13481937795,"Added opt. parent_name argument to default_config_dict
",scipy_distutils/__version__.py,scipy_distutils/command/sdist.py,scipy_distutils/misc_util.py
c81f4e82b11f0d93725f014bba0b2643dc7375e7,"Made locally buildable
",weave/setup_weave.py
d17624c1b932f64ebae0c01f8ef715e97b0a1bf2,"added optional name argument to default_config_dict so that sdist can be used locally
",scipy_distutils/__version__.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_flib.py,scipy_distutils/misc_util.py
1a0784ac35f32056fb2f60c99f82ce073a4a2af0,"Fixed sdist
",scipy_distutils/command/build_ext.py,scipy_distutils/command/sdist.py
1ba73fe9c5fc7798e8dd2ae6387d56b94cac5cde,"Added fcompiler libs to ext libs list when needed
",scipy_distutils/atlas_info.py
880f4ceaa27d11845aec0ae826fd04abe9bf2e80,"Added fcompiler libs to ext libs list when needed
",scipy_distutils/__version__.py,scipy_distutils/atlas_info.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py
280b6f215cc20277ffd8769a267155e04a501bbd,"several bug fixes for problems introduced in renaming of classes
",weave/blitz_tools.py,weave/inline_tools.py,weave/sequence_spec.py
635ec7216d6c5c52b966a080054067577aee3882,"major refactoring -- renamed _specification classes to _converter.  Moved all conversion lists to the converters.py module
",weave/base_spec.py,weave/blitz_spec.py,weave/blitz_tools.py,weave/common_spec.py,weave/converters.py,weave/examples/cast_copy_transpose.py,weave/examples/vq.py,weave/ext_tools.py,weave/inline_tools.py,weave/scalar_spec.py,weave/sequence_spec.py,weave/standard_array_spec.py,weave/tests/test_common_spec.py,weave/tests/test_ext_tools.py,weave/tests/test_scalar_spec.py,weave/tests/test_sequence_spec.py,weave/tests/test_standard_array_spec.py,weave/tests/test_string_spec.py,weave/tests/test_wx_spec.py,weave/wx_spec.py
3e4586635bf5443887c4b781d4aa0a3cfc4a2a0a,"Forgot minor code fragment for prev. fix
",scipy_distutils/__version__.py,scipy_distutils/command/build_ext.py
d7048594f8955af6b85d0377c5ad2a3d9c32909e,"Fixed build_ext to add ext.name to library list, if required
",scipy_distutils/__version__.py,scipy_distutils/command/build_ext.py
71100a2cf4fd5d8db0b229f4803fbf08efff4757,"some code cleanup after template support for scalars removed.
",weave/scalar_spec.py
958af342c7822dc302ac814fb962d1305d6a0a75,"adding support for instance variables and a few bug cleanups
",weave/common_spec.py,weave/conversion_code.py,weave/ext_tools.py,weave/standard_array_info.py
e0e4a3f3a2453af3043f6c29cefa49a1eb24e528,"impl. linking fortran libs only on demand
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/misc_util.py
eb18cbf21d6e820fe289f4b7c8e66e1c2df3dee3,"added docs for get_version
",scipy_distutils/misc_util.py
45819f94a39fe9c46678c09db406eb36c38170ac,"removed template code from use for scalar conversions.  Template versions were moved into blitz support stuff because that is the only place they are utilized.
",weave/blitz_info.py,weave/common_info.py,weave/conversion_code.py,weave/examples/cast_copy_transpose.py,weave/scalar_info.py,weave/scalar_spec.py
fdb510696ec5874ce2630a24828f24197c3cffe9,"fixed a naming error of compiler->weave
",scipy_distutils/mingw32_support.py
51b51361f8390ab1acc017da1e27644cb1fa4446,"line ending cleanup
"
c604a3821cf1114c63dc719aae36ebe262d7d303,"bumped version number to 0.2.3
",weave/setup.py
227c397f7f597f58dc068e98021d4805b667e642,"several issues with tuple,dict,and list conversions were solved.  Also, NameError is now caught and checked for ConversionError in inline_tools.  This can be an issue when something like inline("""",['a']) is called and then inline("""",['b']) is called.  It hadn't occured to me that the names had to be the same from call to call, but I guess they do or we get a recompile.
",weave/inline_info.py,weave/inline_tools.py,weave/sequence_spec.py
e03b4d87272bdd651612d91bd68b4d1d78b5a97e,"added a few tests to catch problems in sequence conversions
",weave/tests/test_sequence_spec.py
ed00c6fa2ce5fe3bafb58ae5a917180cfd1102fe,"added macros for convert_to_list, etc.  Somehow, these had been left out in the previous changes.
",weave/cxx_info.py
7a770371db0fed625a9466c01694c6346601bcbd,"added assert_approx_equal to compare two numbers up to some significant digit.  Contributed by Louis Luangkesorn
",scipy_test/scipy_test.py
8d5d89db0f681e0ede61c5d0f7b71116cee69908,"fixing namespace issue for std::complex -- how did it ever wrok before?
",weave/blitz_info.py
a38603fb8206a6da4a6dd68d85958892ed5e3631,"conversion of blitz stuff to handle Aborted completed.  Had to mess with some code I didn't want to because of template issues, but that is the breaks.
",weave/blitz_info.py,weave/blitz_spec.py
dccec0d0a632fa8e33df1a92c5dd382e6519c9cb,"a few (broken) fixes for blitz.  Still in progress
",weave/blitz_info.py,weave/blitz_spec.py
5ad4488c291c491b2ca6de659d9f9c846648f9b5,"converted array conversion checks to use classes so that we wouldn't get the dreaded Abort that occurs with exceptions in functions.  This is silly, but it works.
",weave/standard_array_info.py
29583b16259c83099ea35467ea864f5e4a02c8b1,"fixed error introduced in last change
",weave/tests/test_blitz_tools.py
9ac0623bd3d8c6534245039a0fcd262105492470,"slightly changed output from one test
",weave/tests/test_ext_tools.py
5e9fe5d6a531bce42b13c88b8b3fb8b28de9b828,"turned off verbosity in blitz tests so that testing didn't spew so much stuff.
",weave/tests/test_blitz_tools.py
d6ea23e4036e4f20550e317bfa3b43fbc98c05f6," fixed const char* in standard_array_info.py
",weave/standard_array_info.py
0c8b48993f0556810bc18449854f00d1938f60d3," changed converter class method calls to be handled through macros.  This will require less code when we switch back to functional conversion methods.  It also cleans up the compiled_func generated a little.
",weave/blitz_info.py,weave/common_spec.py,weave/conversion_code.py,weave/cxx_info.py,weave/scalar_spec.py,weave/sequence_spec.py
d7f048bc01cf4d21cc4b167bb29bc23a8bc2c8a5,"fixing a few typos
",weave/common_spec.py
18eb840d1ff968459c64a73a2131cc50be67c7cb,"further changes to make class versions of converters work
",weave/common_spec.py,weave/conversion_code.py,weave/cxx_info.py,weave/scalar_spec.py,weave/sequence_spec.py
1ed96f36cb3ecfceb682a9a96d3513ed5189a409,"converted most conversion routines to be class methods so that exceptions won't croak on gcc.
",weave/common_spec.py,weave/conversion_code.py,weave/conversion_code_old.py,weave/cxx_info.py,weave/scalar_spec.py
6c3253109e966cecb56a3132bc9bb1ec91889083,"attempt to fix abort with string objects
",weave/cxx_info.py
a0bf2b3a3ee73b05e2266b9d18de6257ea21366c,"error in variable name
",weave/conversion_code.py
ec1bba279c2b78aa7192a1b047e426b917ac9479,"added keyword arguments to blitz() so that it can handle distutils arguments just like inline()

converted all exceptions to call throw_error().  throw_error(exception,msg) will set the Python exception values and then through an integer exception.  This is the only one that seems to work on Mandrake.  Gordon McMillan says it happens on other platforms also when the python has been linked with a C compiler instead of a C++ compiler (which is almost always the case).
",weave/blitz_tools.py,weave/code_blocks.py,weave/conversion_code.py,weave/ext_tools.py,weave/inline_info.py,weave/inline_tools.py,weave/standard_array_info.py,weave/tests/test_blitz_tools.py,weave/tests/test_wx_spec.py
79cd95adf1c70d464b266d1fd84e1d98781117b1,"Minor changes for better f2py support
",scipy_distutils/__version__.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/run_f2py.py
c9d6cb8e55c5bd9fc27b359e3f87530b1e602288,"found improved way of making g++ -shared the linker instead of simply adding stdc++ as a library for gcc.
",weave/build_tools.py
653df5af033fd2514869639131074f58c68a2f38,"patched an error in the string printing section -- forgot to convert from Py::String to a char*.
",weave/doc/tutorial.html
5472eedf02fd8647ad3dfc246c1a65388ceb907a,"added a couple of implementations using lists instead of Numeric arrays.  They are very slow.
",weave/examples/ramp.py
68b8d1007e6b92f3fb4c218196a384c86039598d,"silly error of using == instead of =
",weave/catalog.py
9ff153264b133430790ff61bc1aec9cdd6260bf9,"added test for checking whether conversion exceptions are working correctly in inline_tools.py
",weave/tests/test_inline_tools.py
a1a701fe9c09fca7c94b992403082566da520ddf,"setup_xxx.py files are now included in distributions.  I think this is what was breaking the tar balls for some users.  build_py may not be needed now, since I think filtering these was the only reason we had to change the method.
",scipy_distutils/command/build_py.py
3d616a2b426aaaf63b43b95e1fce05ba6bfc984d,"* conversion_to_int and py_to_int now both throw TypeError, but conversion_to_in
t prefixes the msg with ""Conversion Error:"" so that conversion errors can be dif
ferentiated from errors thrown in the user's code.
",weave/blitz_info.py,weave/blitz_spec.py,weave/catalog.py,weave/common_spec.py,weave/conversion_code.py,weave/cxx_info.py,weave/inline_tools.py,weave/scalar_spec.py,weave/sequence_spec.py,weave/standard_array_info.py,weave/standard_array_spec.py,weave/wx_spec.py
e6c3b438b2e9897b9f23d1784f15f898525d6617,"consolidating much of the C++ code for converting variables into a single file, conversion_code.py.  It contains a couple of CXX specific lines, but most everything that is CXX specific is still in the cxx_info file.

The code that was divided between common_info and scalar_info is pretty much consolidated together.
",weave/common_info.py,weave/conversion_code.py,weave/scalar_info.py
79501722383e037a4e4a10d009c5ed338eb91e93,"Added err_msg keyword argument to assert_array_equal
",scipy_test/scipy_test.py
4659495789ec209d76f406e59451f7ea37d1dfe5,"forgot to uncommnet try/except at top
",weave/catalog.py
61935aff2e18f478009afecb296c4b1f1132202a,"fix for dumb_shelve to work with tests -- dumbdbm_patched import moved to global scope so that it works correctly.

catalog.py made to dbhash on machcines that have it.  Otherwise dumb_shelve.  try/except no longer wraps dumb_shelve calls in get_catalog -- only if dbhash is used.
",weave/catalog.py,weave/dumb_shelve.py
2479ff25d3c0deefdae6f77f880c3c623f06ad40,"arrgh. my dumbdbm exhibits strange behavior on RH 7.1 working from some directories and not from others.  What the heck!  For try to use dbhash whenever it is available.  THis worked on both Linux and Windows before
",weave/catalog.py
6f5db3395e01e503ffbd2e11b004504843edac7a,"copied scipy dumb_shelve and dumbdbm_patched.py into scipy to get rid of the dependency.  These are proving more reliable than my simpler attempts at patching dumbdbm.
",weave/dumb_shelve.py,weave/dumbdbm_patched.py
78c147e5d5308519864c2aa4d9162bccd7368c54,"chunked the simple_dbm and the dumbdbm in favor of the standard scipy ones.  They were just less error prone.
",weave/catalog.py,weave/dumbdbm.py,weave/simple_shelve.py
a68af9a83ecde617720f8890b68bd6d523011ed9,"change taken from dumbdbm that seems to clear up some UnpicklingError, pickle truncated errors that were occuring on Linux.  dumbdbm is starting to look like scipy.dumbdbm_patched.py now...
",weave/dumbdbm.py
262e8306293be1f008f6506124a4e9ec0d74adcb,"made local copy of move_file to circumvent bug in distutils version.  It is needed instead of rename to move things around correctly on Unix.
",weave/tests/weave_test_utils.py
b5c77e2b6dbc499230f59cab8d6ea55938ecf818,"distutils move_file has bug -- no global name errno.  back to using rename...
",weave/tests/weave_test_utils.py
941538268cefd76c0c8171c89ff7714cdf619f13,"* anydbm was causing fits across platforms.  Now I think it mainly had to do with bugs in
  dumbdbm with 2.x up to 2.2.  I've included a cleaned up version of dumbdbm in weave to
  prevent this from being an issue.  Now catalogs always use this local version of dumbdbm.

* cleaned up helper test routines so that catalog backup/restore works more smoothly

* temporary files and directories are cleaned up a little better after testing.

* file builds are now done in the temporary directory to try and speed up the build process
  on Unix machines with remote file systems for user directories.  Probably not a big help.
",weave/catalog.py,weave/dumbdbm.py,weave/ext_tools.py,weave/inline_tools.py,weave/tests/test_catalog.py,weave/tests/weave_test_utils.py
6c49b9f81fb01ab4ef658a5acb4fe807b7cc4892,"version update
",scipy_distutils/__version__.py
0924d4810fe15d1875e17ecbb2ec23f18cb2d464,"Minor refinements
",scipy_distutils/__version__.py,scipy_distutils/atlas_info.py,scipy_distutils/command/run_f2py.py,scipy_distutils/misc_util.py
83119de903443d839ec69368d3066d9141a9d522,"This is a verbatim copy of dumbdbm from 2.2.  Some 2.1 (maybe all) are broken.  Having this here means weave will not be troubled by broken copies in some versions of Python.
",weave/dumbdbm.py
8cc7cf79581eb042fed88b50c51042c653fc13a7,"Using shelve (which uses anydbm) proved to be the root of troubles for Prabhu.  anydbm doesn't look like it is a cross-platform solution at all...  simple_shelve always uses dumbdbm which will hopefully be more cross-platform.  I don't think performance will be an issue, but length of files may eventually be.
",weave/catalog.py,weave/simple_shelve.py
7ff49e76f9d0035b9d2241177e75b28fc300a2b4,"Added an import pickle to fix a bug in catalog.add_function_persistent.
",weave/catalog.py
a9bd4d299a969f216e9ce9620924e90f0931b921,"fixed a bug in __init__.py that prevente dscipy.weave.test() from working.

various clean up and changes to testing and to catalog pointed out by Prabhu on his Debian machine.  Hopefully all tests will pass for him now.

Added a try/except to prevent loading of corupted catalogs in add_persistent.  I can't imagine why a catalog would get corrupted, but it was happening to Prabhu.  Whether this is fixing a symptom of something else, or is really a good fix remains to be seen.
",weave/__init__.py,weave/catalog.py,weave/tests/test_blitz_tools.py,weave/tests/test_catalog.py,weave/tests/weave_test_utils.py
bf6026ea735db5ee64a01f5c356acec5af3a51ff,"Fixed typos. Now Extension sources need not contain pyf files together with fortran files.
",scipy_distutils/command/run_f2py.py,scipy_distutils/dist.py
f56cfffb968ec7d6c70a3588c40d0f60c76fe2a0,"Fixed minor bug in get_cvs_revisions; removed pyf_extensions
",scipy_distutils/command/run_f2py.py,scipy_distutils/dist.py,scipy_distutils/misc_util.py
fc20cdc5d1a9b66684c408cd7aca699107116893," added an example of where blitz and Numeric can be different provided by Prabhu.
",weave/doc/tutorial.html
46862d2ee913ad05e4bb12c0a0b701c3b17f447c,"fixed error found by Prabhu getmodule.  except now catches KeyErrors as well as TypeErrors
",weave/catalog.py
002fe282029c495c30116026a2171343003874eb,"Bug in fft2 and Mplot fixed.
",scipy_distutils/__version__.py,scipy_distutils/atlas_info.py
16b78c20541053ec7d1eb202bb88471363375413,"version update
",scipy_distutils/__version__.py
7e0eac3f6ac7372c18dd0b629e56e6b7fc42175f,"Cleanup after introducing run_f2py
",scipy_distutils/command/__init__.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/run_f2py.py,scipy_distutils/core.py,scipy_distutils/dist.py,scipy_distutils/misc_util.py
7f46db2574e477ce4535334f7a2e51956b7f1599,"Added -w90/95 flags to Intel compiler
",scipy_distutils/command/build_flib.py
98070b5a3dc9a5abf6a57ef6eb2b300181968f79,"Added -w90/95 flags to Intel compiler
",scipy_distutils/command/build_flib.py
b8ae576bfb13d9511b35a12b1b404527ff3131ab,"version serial increase
",scipy_distutils/__version__.py
40c05dba1aac683240967d768530fe5372207c35,"Fixed bug in run_f2py that detected names *__user__* as ext names
",scipy_distutils/command/run_f2py.py
6996767df452f83f6482ca12de762fc65cdafb76,"Fixed typo in run_f2py
",scipy_distutils/command/run_f2py.py
830fc21645c00b53518609d68feec014605d3595,"version update
",scipy_distutils/__version__.py
dda06dcb6c3b3b7c21eb5a41518b9a237345bef3,"Introduced run_f2py command; fixed a minor bug in cpuinfo about detecting i(5|6)86
",scipy_distutils/command/build.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/cpuinfo.py,scipy_distutils/command/run_f2py.py,scipy_distutils/core.py,scipy_distutils/dist.py
323b6b4040f4752a746873675dff261969d4d0ce,"Fixed: base of pyf file may be different from what ext module it provides
",scipy_distutils/command/build_ext.py
4882d70b502d95bed7ec3d82f85e0858d9c5336c,"changed library_path to be a list instead of single directory specification.
removed a print statement from atlas_info
",scipy_distutils/atlas_info.py,scipy_distutils/command/build_ext.py
3ded519e4c37afe434b596d687534933d94884a3,"added variable library_path to scipy_distutils.atlas_info to specify where atlas libraries live.
",scipy_distutils/atlas_info.py
f2871d19ba37424270ccb2d0d5b937776de5542b,"extension needed for adding f2py_options keyword to Extension
",scipy_distutils/extension.py
10aaa27252b35120213cc7ef054167fe16bcff6f,"Added f2py support back into scipy_distutils.  This required a few more changes to the setup files.
",scipy_distutils/__version__.py,scipy_distutils/command/build_ext.py,scipy_distutils/core.py,scipy_distutils/misc_util.py
53022e625eafaedd81b7743bca40af6e0fa8767a,"added atlas ""discovery"" module to scipy_distutils
",scipy_distutils/atlas_info.py
b9ba1e7dd0340e029d9c9f64f29ff9006aae5b05,"renamed get_version to update_version, introduced version_template argument
",scipy_distutils/__version__.py,scipy_distutils/misc_util.py
37e5c3733a16ca04c90af46807a703c9214cc478,"renamed get_version to update_version, introduced version_template argument
",scipy_distutils/__version__.py,scipy_distutils/misc_util.py,scipy_distutils/setup.py
f44e92676db3563e2e141c08b56a732a123e590e,"finished additions needed to have tar.gz automatically have correct line ending types even when built on windows (and the same for zip on Linux I think -- not tested)
",scipy_distutils/__version__.py,scipy_distutils/command/sdist.py,scipy_distutils/line_endings.py
bf4bf3b9774c2efcf749dbc1664472e8e46d6e31,"added line_endings.py.  Working toward support of conversion of line ending characters for tar.gz files
",scipy_distutils/command/sdist.py,scipy_distutils/line_endings.py,scipy_distutils/misc_util.py
3b5adc1dd411def34fd1515eb6cace3a98c02b57,"fixed problem with detecting existing catalogs found on Sun, but likely to occur in other places.  I was simply filtering for a file names existence in a give folder, but because shelve (with anydbm) can use a variety of file suffixes, it wasn't finding existing files.  Also, fixed the cleanup in weave_test_utils.py to delete the appropriate file+suffix on Sun.  Likely will need to add some more to the list later.
",weave/catalog.py,weave/tests/test_catalog.py,weave/tests/weave_test_utils.py
fb838538d73bb3cc154ab6ad47c96d1bb9f12f0d,"fixed a few more issues with removing 'from scipy import *'
",weave/tests/test_catalog.py
20246d094c9e39337597a7d8b38612c92b0d5646,"got rid of from catalog import * in test code that forced restarts for testing to reflect code changes
",weave/tests/test_catalog.py
a12726debee9d108487b30f891c21685f8dd402d,"oops -- missed 'and' in during last check in.
",weave/build_tools.py
fcae4225269b490f5f644540d5592639190a67e5,"added -mimpure-text to link args on Sun OS to fix issues with libstdc++.a.  see:
http://mail.python.org/pipermail/python-dev/2001-March/013510.html
",weave/build_tools.py
2b514abd3d8590aac40c400fc6f043a36e136bed,"Sun version of anydbm (and maybe others) croaked whenever db's were opened with more the one mode flag such as 'cr', or 'cw'.  Now only one mode is allowed at a time, and 'c' is used whenever a db needs to be created.
",weave/catalog.py,weave/tests/test_catalog.py
0074d56dca0d99f7bed07ea9d7bf61dbde828209,"forgot : at end of if statement
",weave/catalog.py
556e691b9b82db9053a73a5ee5158988cd8d65bf,"Prabhu found an issue in his test run where we try to delete a path_key that isn't available.  THis can occur is a built-in function is added to catalog.  built-ins do not have a path to their module (they are builtin after all).  We now check to make sure that the catalog has the key before deleting it.
",weave/catalog.py
a0515424696067f0b63dd295c5fb6df1bd31e444,"Added ramp example brought up by Brent Burley on comp.lang.python.
",weave/examples/ramp.c,weave/examples/ramp.py,weave/examples/ramp2.py
fbeedee8e7a99b9628832898379f8da9e132c43d,"fixed a bug in declarations for ext modules.  Types were not being cast correctly.
",weave/standard_array_spec.py
b2e1b50ccd32c98a959f4d6c59fd84f714effd47,"converted DOS line endings to UNIX line endings
"
3f0a7c931f04d6f8866235bec1bdbab16bbc84cd,"screwed up last check in. Returning to previous version
",weave/ast_tools.py
6d46146f04ab8ef404eefb093b2147b1d64a5d22,"converted DOS line endings to UNIX
",weave/ast_tools.py
9c3800541fde7929f892892af41b89efec29a186,"converted all files (hopefully) from DOS style line endings to UNIX style line endings.  Some of the Unix users were having problems with files with DOS style endings.  Windows doesn't seem to be as picky about this issue.
",weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_size_check.py
f2e5fb8573178cb7a8924d57e70bf9c199034622,"changed import of fastumath as ""optional"" with a try/except clause.  This allows people without SciPy, but with Numeric to use blitz.
",weave/blitz_tools.py,weave/size_check.py,weave/tests/test_standard_array_spec.py
fd3855d4fecb6a962a752c8e0f5d51eb34400a5e,"refined get_version
",scipy_distutils/__version__.py
c1a5d613bb52d1ae45cc8bb90e056c9181cad18b,"refined get_version
",scipy_distutils/__version__.py,scipy_distutils/misc_util.py,scipy_distutils/setup.py
2547260e6e69c2fd4f0527ca464e9fe4612623d8,"changed insertion of stdc++ to check for msvc instead of platform == linux
",weave/build_tools.py
b908030c39e3c5c490540597e93c5dc4bbcd77c7,"fixed bug in tables that forced display width to certain number of pixels.
",weave/doc/tutorial.html
587e00a3ecd762fa58e04f7b46c29c654319f864,"Introduced get_version, started compaq_fortran_compiler
",scipy_distutils/command/build_flib.py,scipy_distutils/misc_util.py,scipy_distutils/setup.py
0ebec761d9cd9d48f68d8f5442519c828bcd0a2a,"added comment about single vs. double precision speed results
",weave/doc/tutorial.html
223f42b6e3201935e7e9304fddf798f1115de9eb,"added benchmarks
",weave/doc/tutorial.html
c6ca53cd5ff3671d088cb1728b40e7ff8c0c5bb6,"one final pass through before posting to python-dev
",weave/doc/tutorial.html
85b061626931d6aff7e589299bfae9509c8ec320,"added MANIFEST.in so that I could specify that all .txt files are included in the distribution
",weave/MANIFEST.in
4b8ca90a8260c3718c5b1a7460bc24e22c083b23,"added legal license information to the file.
",weave/LICENSE.txt,weave/README.txt,weave/doc/tutorial.html,weave/wx_spec.py
d33eb99f6e64a721e9b76fbc8fa1969bdbdc5658,"added a short README to tell where the documentation files are located
",weave/README.txt
a603ba140acaf24a365343c9c9b48904745e4386,"changed tempdir to gettempdir(). fixed bug introduced in latest testing frenzy
",weave/catalog.py,weave/doc/tutorial.html,weave/tests/test_blitz_tools.py,weave/tests/test_scalar_spec.py
b63f8e5ed4d3276640e73072fd4b074d357d45e5,"fixed get_opt for NAG compiler
",scipy_distutils/command/build_flib.py
424101955d2f074aa32b21ac24bad2d767936094,"fortran extension support
",scipy_distutils/command/build.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/build_py.py,scipy_distutils/command/cpuinfo.py,scipy_distutils/dist.py,scipy_distutils/setup.py
06d067a4c9382426c8755cdcc39c3ce2ebf38706,"changed inline() args so that arg_names defaults to an empty list.  THis allows you to run C code that doesn't need any arguments without supplying any.
",weave/inline_tools.py
dfa34a79638600346b06aab7d157db855d22a1ba,"fixed catalog test so that it would work if mutliple people were testing at same time or if /tmp/test_catalog could not be written.
",weave/tests/test_catalog.py
b4f5c98a78a4ed3ac50bae14c7d06c90b7a88a99,"fixed minor bugs
",weave/doc/tutorial.html,weave/tests/test_blitz_tools.py,weave/tests/test_ext_tools.py
e69d0cffe28f259a5e94ed73972e82f89be0c74d,"removed an import * at function level because 2.2 complains about it
",weave/tests/test_ext_tools.py
b72a5a039b8278e198563a2bbab139ade4c3fdb6,"moved test file creation to the temp directory so that it doesn't try to create files during test in a site-package sub-directory.  This caused failues on Unix for testing of installed package.
",weave/tests/test_blitz_tools.py,weave/tests/test_scalar_spec.py
be827bc27ad9439eaa6c5d0c59c61bfd6f638b40,"more renaming of compiler to weave
",weave/tests/{compiler_test_utils.py
3df2f38b39cadae298b76934f28dcea7c9824b78,"I missed changing the compiler name in __init__
",weave/__init__.py
4ceef2e6c852d1a805aaf73cd409b1d7246e4121,"more changes of names from compiler to weave
",weave/examples/increment_example.py,weave/examples/py_none.py,weave/examples/vq.py,weave/setup.py,weave/{setup_compiler.py,weave/tests/test_ext_tools.py
a15e2fa6f0ee81a8eeec84dbab7ae88cdd7ad330,"compile_code is no longer a part of weave
",weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_catalog.py,weave/tests/test_compile_code.py
6e13c0408681ef82fc5f70d002d34993f19cc659,"renaming compiler to weave
",weave/__init__.py,weave/ast_tools.py,weave/base_info.py,weave/base_spec.py,weave/blitz-20001213/blitz/applics.h,weave/blitz-20001213/blitz/array.h,weave/blitz-20001213/blitz/array/asexpr.h,weave/blitz-20001213/blitz/array/cartesian.h,weave/blitz-20001213/blitz/array/cgsolve.h,weave/blitz-20001213/blitz/array/complex.cc,weave/blitz-20001213/blitz/array/convolve.cc,weave/blitz-20001213/blitz/array/convolve.h,weave/blitz-20001213/blitz/array/cycle.cc,weave/blitz-20001213/blitz/array/domain.h,weave/blitz-20001213/blitz/array/et.h,weave/blitz-20001213/blitz/array/eval.cc,weave/blitz-20001213/blitz/array/expr.h,weave/blitz-20001213/blitz/array/fastiter.h,weave/blitz-20001213/blitz/array/geometry.h,weave/blitz-20001213/blitz/array/indirect.h,weave/blitz-20001213/blitz/array/interlace.cc,weave/blitz-20001213/blitz/array/io.cc,weave/blitz-20001213/blitz/array/iter.h,weave/blitz-20001213/blitz/array/map.h,weave/blitz-20001213/blitz/array/methods.cc,weave/blitz-20001213/blitz/array/misc.cc,weave/blitz-20001213/blitz/array/multi.h,weave/blitz-20001213/blitz/array/newbops.cc,weave/blitz-20001213/blitz/array/ops.cc,weave/blitz-20001213/blitz/array/reduce.cc,weave/blitz-20001213/blitz/array/reduce.h,weave/blitz-20001213/blitz/array/resize.cc,weave/blitz-20001213/blitz/array/shape.h,weave/blitz-20001213/blitz/array/slice.h,weave/blitz-20001213/blitz/array/slicing.cc,weave/blitz-20001213/blitz/array/stencil-et.h,weave/blitz-20001213/blitz/array/stencil.cc,weave/blitz-20001213/blitz/array/stencil.h,weave/blitz-20001213/blitz/array/stencilops.h,weave/blitz-20001213/blitz/array/storage.h,weave/blitz-20001213/blitz/array/uops.cc,weave/blitz-20001213/blitz/array/where.h,weave/blitz-20001213/blitz/array/zip.h,weave/blitz-20001213/blitz/bench.cc,weave/blitz-20001213/blitz/bench.h,weave/blitz-20001213/blitz/benchext.cc,weave/blitz-20001213/blitz/benchext.h,weave/blitz-20001213/blitz/blitz.h,weave/blitz-20001213/blitz/bzdebug.h,weave/blitz-20001213/blitz/compiler.h,weave/blitz-20001213/blitz/config.h,weave/blitz-20001213/blitz/etbase.h,weave/blitz-20001213/blitz/extremum.h,weave/blitz-20001213/blitz/indexexpr.h,weave/blitz-20001213/blitz/limits-hack.h,weave/blitz-20001213/blitz/listinit.h,weave/blitz-20001213/blitz/matbops.h,weave/blitz-20001213/blitz/matdiag.h,weave/blitz-20001213/blitz/matexpr.h,weave/blitz-20001213/blitz/matgen.h,weave/blitz-20001213/blitz/mathf2.h,weave/blitz-20001213/blitz/mathfunc.h,weave/blitz-20001213/blitz/matltri.h,weave/blitz-20001213/blitz/matref.h,weave/blitz-20001213/blitz/matrix.cc,weave/blitz-20001213/blitz/matrix.h,weave/blitz-20001213/blitz/matsymm.h,weave/blitz-20001213/blitz/mattoep.h,weave/blitz-20001213/blitz/matuops.h,weave/blitz-20001213/blitz/matutri.h,weave/blitz-20001213/blitz/memblock.cc,weave/blitz-20001213/blitz/memblock.h,weave/blitz-20001213/blitz/meta/dot.h,weave/blitz-20001213/blitz/meta/matassign.h,weave/blitz-20001213/blitz/meta/matmat.h,weave/blitz-20001213/blitz/meta/matvec.h,weave/blitz-20001213/blitz/meta/metaprog.h,weave/blitz-20001213/blitz/meta/product.h,weave/blitz-20001213/blitz/meta/sum.h,weave/blitz-20001213/blitz/meta/vecassign.h,weave/blitz-20001213/blitz/minmax.h,weave/blitz-20001213/blitz/mstruct.h,weave/blitz-20001213/blitz/numinquire.h,weave/blitz-20001213/blitz/numtrait.h,weave/blitz-20001213/blitz/ops.h,weave/blitz-20001213/blitz/prettyprint.h,weave/blitz-20001213/blitz/promote-old.h,weave/blitz-20001213/blitz/promote.h,weave/blitz-20001213/blitz/rand-dunif.h,weave/blitz-20001213/blitz/rand-mt.h,weave/blitz-20001213/blitz/rand-normal.h,weave/blitz-20001213/blitz/rand-tt800.h,weave/blitz-20001213/blitz/rand-uniform.h,weave/blitz-20001213/blitz/random.h,weave/blitz-20001213/blitz/randref.h,weave/blitz-20001213/blitz/range.h,weave/blitz-20001213/blitz/reduce.h,weave/blitz-20001213/blitz/shapecheck.h,weave/blitz-20001213/blitz/tau.h,weave/blitz-20001213/blitz/timer.h,weave/blitz-20001213/blitz/tiny.h,weave/blitz-20001213/blitz/tinymat.h,weave/blitz-20001213/blitz/tinymatexpr.h,weave/blitz-20001213/blitz/tinyvec.cc,weave/blitz-20001213/blitz/tinyvec.h,weave/blitz-20001213/blitz/tinyvecio.cc,weave/blitz-20001213/blitz/tinyveciter.h,weave/blitz-20001213/blitz/traversal.cc,weave/blitz-20001213/blitz/traversal.h,weave/blitz-20001213/blitz/tuning.h,weave/blitz-20001213/blitz/tvcross.h,weave/blitz-20001213/blitz/tvecglobs.h,weave/blitz-20001213/blitz/update.h,weave/blitz-20001213/blitz/vecaccum.cc,weave/blitz-20001213/blitz/vecall.cc,weave/blitz-20001213/blitz/vecany.cc,weave/blitz-20001213/blitz/vecbfn.cc,weave/blitz-20001213/blitz/vecbops.cc,weave/blitz-20001213/blitz/veccount.cc,weave/blitz-20001213/blitz/vecdelta.cc,weave/blitz-20001213/blitz/vecdot.cc,weave/blitz-20001213/blitz/vecexpr.h,weave/blitz-20001213/blitz/vecexprwrap.h,weave/blitz-20001213/blitz/vecglobs.cc,weave/blitz-20001213/blitz/vecglobs.h,weave/blitz-20001213/blitz/vecio.cc,weave/blitz-20001213/blitz/veciter.h,weave/blitz-20001213/blitz/vecmax.cc,weave/blitz-20001213/blitz/vecmin.cc,weave/blitz-20001213/blitz/vecnorm.cc,weave/blitz-20001213/blitz/vecnorm1.cc,weave/blitz-20001213/blitz/vecpick.cc,weave/blitz-20001213/blitz/vecpick.h,weave/blitz-20001213/blitz/vecpickio.cc,weave/blitz-20001213/blitz/vecpickiter.h,weave/blitz-20001213/blitz/vecsum.cc,weave/blitz-20001213/blitz/vector.cc,weave/blitz-20001213/blitz/vector.h,weave/blitz-20001213/blitz/vecuops.cc,weave/blitz-20001213/blitz/vecwhere.cc,weave/blitz-20001213/blitz/vecwhere.h,weave/blitz-20001213/blitz/wrap-climits.h,weave/blitz-20001213/blitz/zero.cc,weave/blitz-20001213/blitz/zero.h,weave/blitz_info.py,weave/blitz_spec.py,weave/blitz_tools.py,weave/build_tools.py,weave/catalog.py,weave/code_blocks.py,weave/common_info.py,weave/common_spec.py,weave/cxx_info.py,weave/doc/tutorial.html,weave/examples/binary_search.py,weave/examples/cast_copy_transpose.py,weave/examples/dict_sort.py,weave/examples/fibonacci.py,weave/examples/functional.py,weave/examples/increment_example.py,weave/examples/md5_speed.py,weave/examples/print_example.py,weave/examples/py_none.py,weave/examples/support_code_example.py,weave/examples/tuple_return.py,weave/examples/vq.py,weave/examples/wx_example.py,weave/ext_tools.py,weave/inline_info.py,weave/inline_tools.py,weave/lib2def.py,weave/misc.py,weave/scalar_info.py,weave/scalar_spec.py,weave/scxx/PWOBase.h,weave/sequence_spec.py,weave/setup.py,weave/setup_compiler.py,weave/size_check.py,weave/slice_handler.py,weave/standard_array_info.py,weave/standard_array_spec.py,weave/swig_info.py,weave/tests/compiler_test_utils.py,weave/tests/test_ast_tools.py,weave/tests/test_blitz_tools.py,weave/tests/test_build_tools.py,weave/tests/test_catalog.py,weave/tests/test_common_spec.py,weave/tests/test_compile_code.py,weave/tests/test_ext_tools.py,weave/tests/test_scalar_spec.py,weave/tests/test_size_check.py,weave/tests/test_slice_handler.py,weave/tests/test_standard_array_spec.py,weave/tests/test_string_spec.py,weave/tests/test_wx_spec.py,weave/wx_info.py,weave/wx_spec.py
7161eb8ef2587dea3e8066bf209d0fe715057d0c,"encapsulated all Numeric specific code within a try/except so that most functionality can be used without Numeric installed
",scipy_test/scipy_test.py,scipy_test/setup_scipy_test.py
d58a351e8d758523bbfb6d97715004375912d4c5,"Making this a package made installation easier because distutils doesn't allow both py_modules and packages -- not sure it would have worked even if it did
",scipy_test/__init__.py,scipy_test/setup_scipy_test.py
dc33f53aacad2c7d6c3552861fb92c3720b17867,"Modified how configuration works
",scipy_test/setup_scipy_test.py
07a8c78a393604779d3b1c6a572309f870e0eb74,"setup configuration module for scipy_distutils
",scipy_distutils/setup_scipy_distutils.py
77c0f1efc32f1abcb9a0da40ce7afaaeb2673da8,"fftw_info.py holds searches for fftw libraries on a persons machine.  It is made separate from the fftw library because it may be needed by other libraries later on.  Also, it could become useful to other projects trying to find fftw on a mchine.  Its very simple right now.
",scipy_distutils/fftw_info.py
9f63f97880bc1a822d2cc21f76ae1b6fce31943f,"get_path changes made by Pearu so that it works in core.run_setup
",scipy_distutils/misc_util.py
8d16fd4d21d2d8110523521be1d60f9c9a9cfd7f,"cpuinfo.py is needed to calculate optimzation flags on linux.  It has much of the same functionality as scipy.proc, but I've included it for now.  We'll merge the two later.
",scipy_distutils/command/cpuinfo.py
51e5221297c8b013314242025fc039129931fbbd,"Implemented multiple changes provided by Pearu that increased the number of compilers supported, added some optimization flags, and generally cleaned things up.  I made changes needed to get things rolling for scipy on win32 again.  I've included an email exchange discussing changes below:

I changes are checked into CVS.

1. is_available()
In is_available(), I'm not sure whether any compilers will return an empty version.  I don't think any of them do right now -- but I'm not sure about Sun.  For now, lets use your implementation and deal with it later if it turns out to be a problem.

2. sun compile switches
class sun_fortran_compiler(fortran_compiler_base):

    vendor = 'Sun'
    ver_match =  r'f77: (?P<version>[^\s*,]*)'

    def __init__(self, fc = None, f90c = None):
        ...
        self.f90_switches = ' -fixed ' # ??? why fixed?


I think the fixed is left over from some compiler specific flags I needed in a project at Duke where all of our code was in fixed format.  It probably shouldn't be here.  However, if it isn't, we need a way of specifying the compiler options.  In distutils.extension, there is a

    self.extra_compile_args = extra_compile_args or []

argument.  We need an extra_fcompile_args or something like that.  I think distutils just appends the extra arguments to the end of the compile command.  This is unlikely to work with some Fortran compilers though.  I know the Absoft compiler isn't very sophisticated about handling command line arguments, and any extra args probably need to be placed before the source file in the command.

3. cpu_info.py
Something very similar to this already exists in scipy -- its called proc.py.  I'll look through it and see how to merge the stuff you added into the module.  This stuff is very OS specific and only works on Linux (and maybe BSD).  I wish proc worked on more machine types.

*Well, for now I'm gonna keep the two separate modules.  We'll merge this stuff into proc in the future.

4. optimization flags
I've moved this to a get_opt() function.

Also, we should have a flag to turn *on* machine specific optimization instead of making it the
default.  If people build a binary distibution, it'll only work on specific architectures which can lead to trouble.  This shouldn't be the default behavior.

For now, get_opt() still calls the arch dependent settings by default for the gnu and intel compilers.

5. get_linker_so()
This won't work on windows with mingw32.  The linker is a very strange thing there, and the -shared flag doesn't work.  I've had to add a little code back into the gnu_fortran class and
do a test for win32.  I don't think seeting the libraries and library_dir hurts on linux.  Does it?

6. is_available -> get_version
This is just a better name for it.  is_available is still available... :)  It just calls get_version now.

7. ***  Some vendors provide different compilers for F77 and F90
        compilations. Currently, checking the availability of these
        compilers is based on only checking the availability of the
        corresponding F77 compiler. If it exists, then F90 is assumed
        to exist also.

This is a problem.  Worse than having different ones, gnu fortran doesn't even support f90.  We may want to split this stuff into separate classes.  I'd like to get more feedback from users running into problems on this one.

see ya,
eric

----- Original Message -----
From: ""Pearu Peterson"" <pearu@cens.ioc.ee>
To: ""eric"" <eric@enthought.com>
Sent: Monday, December 31, 2001 11:38 AM
Subject: build_flib patch


>
> Hi Eric,
>
> Please find attached my changes to build_flib:
>
> *  Added NAGWare, VAST/f90 compilers support.
> *  Refined Intel compiler support.
> *  Added more aggressive optimization for Intel and Gnu compilers.
> *  Added options --fcompiler-exec and --f90compiler-exec.
> *  The later required some rewrote for compiler classes handling:
>      Eg. the list all_compilers holds now compiler classes, not their
>      instances. As a side effect, the handling is more efficient now.
>      Etc.
> *  Introduced a new file cpuinfo.py that defines a class for holding
>    information about CPU. This is used for finding correct optimization
>    flags for Intel and Gnu compilers. build_flib.py imports it.
> *  get_f*_files functions recognize other Fortran file extensions as well.
> *  Docs about bugs.
> *  Cleaned up the code a bit.
>
> Happy New Year!
> Pearu
>

-------

> > One thing I noticed.  I think the intel compilers should come before the gnu
> > compiler in the list so that they are used by default if both are installed.
> > What do you think?
>
> I think the order should not matter. Users should use --fcompiler flag to
> specify desired compiler. I have fixed this in my local source of
> scipy_distutils, I'll send it later with other changes.

If we move it up in the list, the default behavior will grab the ""better"" (or at least the commercial) compiler installed on the platform.  I think this is more desirable.  People can still specifiy the gnu compiler with a flag if they want to.  If they have many compilers installed, the flag is the only way to do it that I see.

>
> But there is one thing that should be addressed as well. And that is if
> one wants to specify the path to the desired compiler (eg for
> testing/using different compilers or different versions of the same
> compiler). For example, on debian there are two F77 compilers, g77 (that
> is 2.95.2) and g77-3.0. Both are Gnu, and the same class instance should
> be used. So, to solve this, I can think of many solutions:
>
> 1) Get the compiler path from FC environment variable, so that one can run
>
>   FC=g77-3.0 ./setup.py build_flib --fcompiler=Gnu build
>
> Could this be useful also in Windows? I guess not.
>
> 2) Introduce a new switch for build_flib command:
>
>   ./setup.py build_flib --fcompiler=Gnu --fcompiler_exec=g77-3.0 build
>

Doing 2 is fine with me -- and you've already done it I see. :)

eric
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py
410e5135d72f52969e10d76c3a79813aafb0509f,"changed to using fortran class instead of instance for setting fortran compiler.  This was needed after Pearu's changes.
",scipy_distutils/mingw32_support.py
d1d33442a918c2ec4b90dc5f777397e021cd10d1,"removed print statements
",scipy_distutils/command/sdist.py
8d4cc5e1967f6b20e69158e5a2700aecc50d46e2,"added default setting so users don't need to supply a dependency list for a package in package_config
",scipy_distutils/misc_util.py
806417f9f8b3c3a2414362b0ee69684a7afe58cb,"added package_config method to misc_util that should further simplify the creation of modules that depend on other modules.
",scipy_distutils/misc_util.py
b1263a71669aad6b9ac5db8ce961a18c204e925f,"fixed path issues resulting from using setup_xxx.configuration() methods to grab information about package for use in setup.py.  the configuration() methods use absolute path names to identify files.  This is bad for sdist which uses the relative path of a file to determine which directory it goes into in the source distribution.  To solve the problem, I have sdist search all absolute file paths for the ""greatest common directory"" among them.  This directory is removed from them to determine where the file will go in the distribution directories.  Files without absolute paths are always put in the top directory of the distribution.

This procedure usually ends up with a setup.py module in the top directory of the source distribution and then a number of sub-directories that hold the actual package source code files.

misc_util sprouted another function or two to help with the process of adding package paths to the PYTHONPATH.  There are some assumptions made about where distutils should look for these packages (first in the current directory then in the parent) that may not be generally true, but should work well for scipy.  It also results in setup.py files that work fine from with in scipy or for building stand along packages that may depend on other scipy packages.
",scipy_distutils/command/sdist.py,scipy_distutils/misc_util.py
76cfe839f027edd48a86112bc8e1490d848d20d0,"added misc_util file that has a few routines used extensively in setup_xxx.py files and test files within scipy
",scipy_distutils/core.py,scipy_distutils/dist.py,scipy_distutils/mingw32_support.py,scipy_distutils/misc_util.py,scipy_distutils/setup.py
a76efe8206df0ec315f67012236577c1e31ad258,"added build_py module
",scipy_distutils/command/build_ext.py,scipy_distutils/command/build_py.py,scipy_distutils/command/install_data.py
74a4958b94e07b2e3218741fb52d32e87308d62e,"split scipy_test off into its own module.
",scipy_test/scipy_test.py,scipy_test/setup.py,scipy_test/setup_scipy_test.py
f1a2d6376c430f65550efa235209b86c1a0967e3,"factored out the scipy specific distutils code into a scipy_distutils package.
",scipy_distutils/__init__.py,scipy_distutils/command/__init__.py,scipy_distutils/command/build.py,scipy_distutils/command/build_clib.py,scipy_distutils/command/build_ext.py,scipy_distutils/command/build_flib.py,scipy_distutils/command/install.py,scipy_distutils/command/install_data.py,scipy_distutils/command/install_headers.py,scipy_distutils/command/sdist.py,scipy_distutils/core.py,scipy_distutils/dist.py,scipy_distutils/mingw32_support.py,scipy_distutils/setup.py
